CLO on /pipe/benchmark4pipeline_c/babbage_problem.c /pipe/benchmark4pipeline_c/babbage_problem.ll
CLO exit
Souperifying /pipe/benchmark4pipeline_c/babbage_problem...
option 3
; starting synthesis for LHS
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
infer %0
inputs: 1, constants: 2
N: 3, M: 19
default width: 32
output width: 32
component library: add (32, { 32 32 }); sub (32, { 32 32 }); mul (32, { 32 32 }); and (32, { 32 32 }); or (32, { 32 32 }); xor (32, { 32 32 }); shl (32, { 32 32 }); lshr (32, { 32 32 }); ashr (32, { 32 32 }); select (32, { 1 32 32 }); eq (1, { 32 32 }); ne (1, { 32 32 }); ult (1, { 32 32 }); slt (1, { 32 32 }); ule (1, { 32 32 }); sle (1, { 32 32 }); 
const components: const (32); const (32); 
I: 0_1 (input,i32) 0_2 (const,i32) 0_3 (const,i32) 
P: 1_1 (add,i32) 1_2 (add,i32) 2_1 (sub,i32) 2_2 (sub,i32) 3_1 (mul,i32) 3_2 (mul,i32) 4_1 (and,i32) 4_2 (and,i32) 5_1 (or,i32) 5_2 (or,i32) 6_1 (xor,i32) 6_2 (xor,i32) 7_1 (shl,i32) 7_2 (shl,i32) 8_1 (lshr,i32) 8_2 (lshr,i32) 9_1 (ashr,i32) 9_2 (ashr,i32) 10_1 (select,i32) 10_2 (select,i32) 10_3 (select,i32) 11_1 (eq,i32) 11_2 (eq,i32) 12_1 (ne,i32) 12_2 (ne,i32) 13_1 (ult,i32) 13_2 (ult,i32) 14_1 (slt,i32) 14_2 (slt,i32) 15_1 (ule,i32) 15_2 (ule,i32) 16_1 (sle,i32) 16_2 (sle,i32) 
R: 1_0 (add,i32) 2_0 (sub,i32) 3_0 (mul,i32) 4_0 (and,i32) 5_0 (or,i32) 6_0 (xor,i32) 7_0 (shl,i32) 8_0 (lshr,i32) 9_0 (ashr,i32) 10_0 (select,i32) 11_0 (zext,eq,i32) 12_0 (zext,ne,i32) 13_0 (zext,ult,i32) 14_0 (zext,slt,i32) 15_0 (zext,ule,i32) 16_0 (zext,sle,i32) 
L: 0_1 (input,i32) 0_2 (const,i32) 0_3 (const,i32) 1_1 (add,i32) 1_2 (add,i32) 2_1 (sub,i32) 2_2 (sub,i32) 3_1 (mul,i32) 3_2 (mul,i32) 4_1 (and,i32) 4_2 (and,i32) 5_1 (or,i32) 5_2 (or,i32) 6_1 (xor,i32) 6_2 (xor,i32) 7_1 (shl,i32) 7_2 (shl,i32) 8_1 (lshr,i32) 8_2 (lshr,i32) 9_1 (ashr,i32) 9_2 (ashr,i32) 10_1 (select,i32) 10_2 (select,i32) 10_3 (select,i32) 11_1 (eq,i32) 11_2 (eq,i32) 12_1 (ne,i32) 12_2 (ne,i32) 13_1 (ult,i32) 13_2 (ult,i32) 14_1 (slt,i32) 14_2 (slt,i32) 15_1 (ule,i32) 15_2 (ule,i32) 16_1 (sle,i32) 16_2 (sle,i32) 1_0 (add,i32) 2_0 (sub,i32) 3_0 (mul,i32) 4_0 (and,i32) 5_0 (or,i32) 6_0 (xor,i32) 7_0 (shl,i32) 8_0 (lshr,i32) 9_0 (ashr,i32) 10_0 (select,i32) 11_0 (zext,eq,i32) 12_0 (zext,ne,i32) 13_0 (zext,ult,i32) 14_0 (zext,slt,i32) 15_0 (zext,ule,i32) 16_0 (zext,sle,i32) 17_0 (output,i32) 
O: 17_0 (output,i32)
consistency constraints:
1_0 (add,i32) != 2_0 (sub,i32)
1_0 (add,i32) != 3_0 (mul,i32)
1_0 (add,i32) != 4_0 (and,i32)
1_0 (add,i32) != 5_0 (or,i32)
1_0 (add,i32) != 6_0 (xor,i32)
1_0 (add,i32) != 7_0 (shl,i32)
1_0 (add,i32) != 8_0 (lshr,i32)
1_0 (add,i32) != 9_0 (ashr,i32)
1_0 (add,i32) != 10_0 (select,i32)
1_0 (add,i32) != 11_0 (zext,eq,i32)
1_0 (add,i32) != 12_0 (zext,ne,i32)
1_0 (add,i32) != 13_0 (zext,ult,i32)
1_0 (add,i32) != 14_0 (zext,slt,i32)
1_0 (add,i32) != 15_0 (zext,ule,i32)
1_0 (add,i32) != 16_0 (zext,sle,i32)
2_0 (sub,i32) != 3_0 (mul,i32)
2_0 (sub,i32) != 4_0 (and,i32)
2_0 (sub,i32) != 5_0 (or,i32)
2_0 (sub,i32) != 6_0 (xor,i32)
2_0 (sub,i32) != 7_0 (shl,i32)
2_0 (sub,i32) != 8_0 (lshr,i32)
2_0 (sub,i32) != 9_0 (ashr,i32)
2_0 (sub,i32) != 10_0 (select,i32)
2_0 (sub,i32) != 11_0 (zext,eq,i32)
2_0 (sub,i32) != 12_0 (zext,ne,i32)
2_0 (sub,i32) != 13_0 (zext,ult,i32)
2_0 (sub,i32) != 14_0 (zext,slt,i32)
2_0 (sub,i32) != 15_0 (zext,ule,i32)
2_0 (sub,i32) != 16_0 (zext,sle,i32)
3_0 (mul,i32) != 4_0 (and,i32)
3_0 (mul,i32) != 5_0 (or,i32)
3_0 (mul,i32) != 6_0 (xor,i32)
3_0 (mul,i32) != 7_0 (shl,i32)
3_0 (mul,i32) != 8_0 (lshr,i32)
3_0 (mul,i32) != 9_0 (ashr,i32)
3_0 (mul,i32) != 10_0 (select,i32)
3_0 (mul,i32) != 11_0 (zext,eq,i32)
3_0 (mul,i32) != 12_0 (zext,ne,i32)
3_0 (mul,i32) != 13_0 (zext,ult,i32)
3_0 (mul,i32) != 14_0 (zext,slt,i32)
3_0 (mul,i32) != 15_0 (zext,ule,i32)
3_0 (mul,i32) != 16_0 (zext,sle,i32)
4_0 (and,i32) != 5_0 (or,i32)
4_0 (and,i32) != 6_0 (xor,i32)
4_0 (and,i32) != 7_0 (shl,i32)
4_0 (and,i32) != 8_0 (lshr,i32)
4_0 (and,i32) != 9_0 (ashr,i32)
4_0 (and,i32) != 10_0 (select,i32)
4_0 (and,i32) != 11_0 (zext,eq,i32)
4_0 (and,i32) != 12_0 (zext,ne,i32)
4_0 (and,i32) != 13_0 (zext,ult,i32)
4_0 (and,i32) != 14_0 (zext,slt,i32)
4_0 (and,i32) != 15_0 (zext,ule,i32)
4_0 (and,i32) != 16_0 (zext,sle,i32)
5_0 (or,i32) != 6_0 (xor,i32)
5_0 (or,i32) != 7_0 (shl,i32)
5_0 (or,i32) != 8_0 (lshr,i32)
5_0 (or,i32) != 9_0 (ashr,i32)
5_0 (or,i32) != 10_0 (select,i32)
5_0 (or,i32) != 11_0 (zext,eq,i32)
5_0 (or,i32) != 12_0 (zext,ne,i32)
5_0 (or,i32) != 13_0 (zext,ult,i32)
5_0 (or,i32) != 14_0 (zext,slt,i32)
5_0 (or,i32) != 15_0 (zext,ule,i32)
5_0 (or,i32) != 16_0 (zext,sle,i32)
6_0 (xor,i32) != 7_0 (shl,i32)
6_0 (xor,i32) != 8_0 (lshr,i32)
6_0 (xor,i32) != 9_0 (ashr,i32)
6_0 (xor,i32) != 10_0 (select,i32)
6_0 (xor,i32) != 11_0 (zext,eq,i32)
6_0 (xor,i32) != 12_0 (zext,ne,i32)
6_0 (xor,i32) != 13_0 (zext,ult,i32)
6_0 (xor,i32) != 14_0 (zext,slt,i32)
6_0 (xor,i32) != 15_0 (zext,ule,i32)
6_0 (xor,i32) != 16_0 (zext,sle,i32)
7_0 (shl,i32) != 8_0 (lshr,i32)
7_0 (shl,i32) != 9_0 (ashr,i32)
7_0 (shl,i32) != 10_0 (select,i32)
7_0 (shl,i32) != 11_0 (zext,eq,i32)
7_0 (shl,i32) != 12_0 (zext,ne,i32)
7_0 (shl,i32) != 13_0 (zext,ult,i32)
7_0 (shl,i32) != 14_0 (zext,slt,i32)
7_0 (shl,i32) != 15_0 (zext,ule,i32)
7_0 (shl,i32) != 16_0 (zext,sle,i32)
8_0 (lshr,i32) != 9_0 (ashr,i32)
8_0 (lshr,i32) != 10_0 (select,i32)
8_0 (lshr,i32) != 11_0 (zext,eq,i32)
8_0 (lshr,i32) != 12_0 (zext,ne,i32)
8_0 (lshr,i32) != 13_0 (zext,ult,i32)
8_0 (lshr,i32) != 14_0 (zext,slt,i32)
8_0 (lshr,i32) != 15_0 (zext,ule,i32)
8_0 (lshr,i32) != 16_0 (zext,sle,i32)
9_0 (ashr,i32) != 10_0 (select,i32)
9_0 (ashr,i32) != 11_0 (zext,eq,i32)
9_0 (ashr,i32) != 12_0 (zext,ne,i32)
9_0 (ashr,i32) != 13_0 (zext,ult,i32)
9_0 (ashr,i32) != 14_0 (zext,slt,i32)
9_0 (ashr,i32) != 15_0 (zext,ule,i32)
9_0 (ashr,i32) != 16_0 (zext,sle,i32)
10_0 (select,i32) != 11_0 (zext,eq,i32)
10_0 (select,i32) != 12_0 (zext,ne,i32)
10_0 (select,i32) != 13_0 (zext,ult,i32)
10_0 (select,i32) != 14_0 (zext,slt,i32)
10_0 (select,i32) != 15_0 (zext,ule,i32)
10_0 (select,i32) != 16_0 (zext,sle,i32)
11_0 (zext,eq,i32) != 12_0 (zext,ne,i32)
11_0 (zext,eq,i32) != 13_0 (zext,ult,i32)
11_0 (zext,eq,i32) != 14_0 (zext,slt,i32)
11_0 (zext,eq,i32) != 15_0 (zext,ule,i32)
11_0 (zext,eq,i32) != 16_0 (zext,sle,i32)
12_0 (zext,ne,i32) != 13_0 (zext,ult,i32)
12_0 (zext,ne,i32) != 14_0 (zext,slt,i32)
12_0 (zext,ne,i32) != 15_0 (zext,ule,i32)
12_0 (zext,ne,i32) != 16_0 (zext,sle,i32)
13_0 (zext,ult,i32) != 14_0 (zext,slt,i32)
13_0 (zext,ult,i32) != 15_0 (zext,ule,i32)
13_0 (zext,ult,i32) != 16_0 (zext,sle,i32)
14_0 (zext,slt,i32) != 15_0 (zext,ule,i32)
14_0 (zext,slt,i32) != 16_0 (zext,sle,i32)
15_0 (zext,ule,i32) != 16_0 (zext,sle,i32)
acyclicity constraints:
1_1 (add,i32) < 1_0
1_2 (add,i32) < 1_0
2_1 (sub,i32) < 2_0
2_2 (sub,i32) < 2_0
3_1 (mul,i32) < 3_0
3_2 (mul,i32) < 3_0
4_1 (and,i32) < 4_0
4_2 (and,i32) < 4_0
5_1 (or,i32) < 5_0
5_2 (or,i32) < 5_0
6_1 (xor,i32) < 6_0
6_2 (xor,i32) < 6_0
7_1 (shl,i32) < 7_0
7_2 (shl,i32) < 7_0
8_1 (lshr,i32) < 8_0
8_2 (lshr,i32) < 8_0
9_1 (ashr,i32) < 9_0
9_2 (ashr,i32) < 9_0
10_1 (select,i32) < 10_0
10_2 (select,i32) < 10_0
10_3 (select,i32) < 10_0
11_1 (eq,i32) < 11_0
11_2 (eq,i32) < 11_0
12_1 (ne,i32) < 12_0
12_2 (ne,i32) < 12_0
13_1 (ult,i32) < 13_0
13_2 (ult,i32) < 13_0
14_1 (slt,i32) < 14_0
14_2 (slt,i32) < 14_0
15_1 (ule,i32) < 15_0
15_2 (ule,i32) < 15_0
16_1 (sle,i32) < 16_0
16_2 (sle,i32) < 16_0
location variable constraints:
0 <= 1_1 (add,i32) < 19
0 <= 1_2 (add,i32) < 19
0 <= 2_1 (sub,i32) < 19
0 <= 2_2 (sub,i32) < 19
0 <= 3_1 (mul,i32) < 19
0 <= 3_2 (mul,i32) < 19
0 <= 4_1 (and,i32) < 19
0 <= 4_2 (and,i32) < 19
0 <= 5_1 (or,i32) < 19
0 <= 5_2 (or,i32) < 19
0 <= 6_1 (xor,i32) < 19
0 <= 6_2 (xor,i32) < 19
0 <= 7_1 (shl,i32) < 19
0 <= 7_2 (shl,i32) < 19
0 <= 8_1 (lshr,i32) < 19
0 <= 8_2 (lshr,i32) < 19
0 <= 9_1 (ashr,i32) < 19
0 <= 9_2 (ashr,i32) < 19
0 <= 10_1 (select,i32) < 19
0 <= 10_2 (select,i32) < 19
0 <= 10_3 (select,i32) < 19
0 <= 11_1 (eq,i32) < 19
0 <= 11_2 (eq,i32) < 19
0 <= 12_1 (ne,i32) < 19
0 <= 12_2 (ne,i32) < 19
0 <= 13_1 (ult,i32) < 19
0 <= 13_2 (ult,i32) < 19
0 <= 14_1 (slt,i32) < 19
0 <= 14_2 (slt,i32) < 19
0 <= 15_1 (ule,i32) < 19
0 <= 15_2 (ule,i32) < 19
0 <= 16_1 (sle,i32) < 19
0 <= 16_2 (sle,i32) < 19
0 <= 0_1 (input,i32) < 19
0 <= 0_2 (const,i32) < 19
0 <= 0_3 (const,i32) < 19
3 <= 1_0 (add,i32) < 19
3 <= 2_0 (sub,i32) < 19
3 <= 3_0 (mul,i32) < 19
3 <= 4_0 (and,i32) < 19
3 <= 5_0 (or,i32) < 19
3 <= 6_0 (xor,i32) < 19
3 <= 7_0 (shl,i32) < 19
3 <= 8_0 (lshr,i32) < 19
3 <= 9_0 (ashr,i32) < 19
3 <= 10_0 (select,i32) < 19
3 <= 11_0 (zext,eq,i32) < 19
3 <= 12_0 (zext,ne,i32) < 19
3 <= 13_0 (zext,ult,i32) < 19
3 <= 14_0 (zext,slt,i32) < 19
3 <= 15_0 (zext,ule,i32) < 19
3 <= 16_0 (zext,sle,i32) < 19
component input constraints:
1_1 (add,i32) == 0_1 (input,i32) || 1_1 (add,i32) == 0_2 (const,i32) || 1_1 (add,i32) == 0_3 (const,i32) || 1_1 (add,i32) == 2_0 (sub,i32) || 1_1 (add,i32) == 3_0 (mul,i32) || 1_1 (add,i32) == 4_0 (and,i32) || 1_1 (add,i32) == 5_0 (or,i32) || 1_1 (add,i32) == 6_0 (xor,i32) || 1_1 (add,i32) == 7_0 (shl,i32) || 1_1 (add,i32) == 8_0 (lshr,i32) || 1_1 (add,i32) == 9_0 (ashr,i32) || 1_1 (add,i32) == 10_0 (select,i32) || 1_1 (add,i32) == 11_0 (zext,eq,i32) || 1_1 (add,i32) == 12_0 (zext,ne,i32) || 1_1 (add,i32) == 13_0 (zext,ult,i32) || 1_1 (add,i32) == 14_0 (zext,slt,i32) || 1_1 (add,i32) == 15_0 (zext,ule,i32) || 1_1 (add,i32) == 16_0 (zext,sle,i32) || false
1_2 (add,i32) == 0_1 (input,i32) || 1_2 (add,i32) == 0_2 (const,i32) || 1_2 (add,i32) == 0_3 (const,i32) || 1_2 (add,i32) == 2_0 (sub,i32) || 1_2 (add,i32) == 3_0 (mul,i32) || 1_2 (add,i32) == 4_0 (and,i32) || 1_2 (add,i32) == 5_0 (or,i32) || 1_2 (add,i32) == 6_0 (xor,i32) || 1_2 (add,i32) == 7_0 (shl,i32) || 1_2 (add,i32) == 8_0 (lshr,i32) || 1_2 (add,i32) == 9_0 (ashr,i32) || 1_2 (add,i32) == 10_0 (select,i32) || 1_2 (add,i32) == 11_0 (zext,eq,i32) || 1_2 (add,i32) == 12_0 (zext,ne,i32) || 1_2 (add,i32) == 13_0 (zext,ult,i32) || 1_2 (add,i32) == 14_0 (zext,slt,i32) || 1_2 (add,i32) == 15_0 (zext,ule,i32) || 1_2 (add,i32) == 16_0 (zext,sle,i32) || false
2_1 (sub,i32) == 0_1 (input,i32) || 2_1 (sub,i32) == 0_2 (const,i32) || 2_1 (sub,i32) == 0_3 (const,i32) || 2_1 (sub,i32) == 1_0 (add,i32) || 2_1 (sub,i32) == 3_0 (mul,i32) || 2_1 (sub,i32) == 4_0 (and,i32) || 2_1 (sub,i32) == 5_0 (or,i32) || 2_1 (sub,i32) == 6_0 (xor,i32) || 2_1 (sub,i32) == 7_0 (shl,i32) || 2_1 (sub,i32) == 8_0 (lshr,i32) || 2_1 (sub,i32) == 9_0 (ashr,i32) || 2_1 (sub,i32) == 10_0 (select,i32) || 2_1 (sub,i32) == 11_0 (zext,eq,i32) || 2_1 (sub,i32) == 12_0 (zext,ne,i32) || 2_1 (sub,i32) == 13_0 (zext,ult,i32) || 2_1 (sub,i32) == 14_0 (zext,slt,i32) || 2_1 (sub,i32) == 15_0 (zext,ule,i32) || 2_1 (sub,i32) == 16_0 (zext,sle,i32) || false
2_2 (sub,i32) == 0_1 (input,i32) || 2_2 (sub,i32) == 0_2 (const,i32) || 2_2 (sub,i32) == 0_3 (const,i32) || 2_2 (sub,i32) == 1_0 (add,i32) || 2_2 (sub,i32) == 3_0 (mul,i32) || 2_2 (sub,i32) == 4_0 (and,i32) || 2_2 (sub,i32) == 5_0 (or,i32) || 2_2 (sub,i32) == 6_0 (xor,i32) || 2_2 (sub,i32) == 7_0 (shl,i32) || 2_2 (sub,i32) == 8_0 (lshr,i32) || 2_2 (sub,i32) == 9_0 (ashr,i32) || 2_2 (sub,i32) == 10_0 (select,i32) || 2_2 (sub,i32) == 11_0 (zext,eq,i32) || 2_2 (sub,i32) == 12_0 (zext,ne,i32) || 2_2 (sub,i32) == 13_0 (zext,ult,i32) || 2_2 (sub,i32) == 14_0 (zext,slt,i32) || 2_2 (sub,i32) == 15_0 (zext,ule,i32) || 2_2 (sub,i32) == 16_0 (zext,sle,i32) || false
3_1 (mul,i32) == 0_1 (input,i32) || 3_1 (mul,i32) == 0_2 (const,i32) || 3_1 (mul,i32) == 0_3 (const,i32) || 3_1 (mul,i32) == 1_0 (add,i32) || 3_1 (mul,i32) == 2_0 (sub,i32) || 3_1 (mul,i32) == 4_0 (and,i32) || 3_1 (mul,i32) == 5_0 (or,i32) || 3_1 (mul,i32) == 6_0 (xor,i32) || 3_1 (mul,i32) == 7_0 (shl,i32) || 3_1 (mul,i32) == 8_0 (lshr,i32) || 3_1 (mul,i32) == 9_0 (ashr,i32) || 3_1 (mul,i32) == 10_0 (select,i32) || 3_1 (mul,i32) == 11_0 (zext,eq,i32) || 3_1 (mul,i32) == 12_0 (zext,ne,i32) || 3_1 (mul,i32) == 13_0 (zext,ult,i32) || 3_1 (mul,i32) == 14_0 (zext,slt,i32) || 3_1 (mul,i32) == 15_0 (zext,ule,i32) || 3_1 (mul,i32) == 16_0 (zext,sle,i32) || false
3_2 (mul,i32) == 0_1 (input,i32) || 3_2 (mul,i32) == 0_2 (const,i32) || 3_2 (mul,i32) == 0_3 (const,i32) || 3_2 (mul,i32) == 1_0 (add,i32) || 3_2 (mul,i32) == 2_0 (sub,i32) || 3_2 (mul,i32) == 4_0 (and,i32) || 3_2 (mul,i32) == 5_0 (or,i32) || 3_2 (mul,i32) == 6_0 (xor,i32) || 3_2 (mul,i32) == 7_0 (shl,i32) || 3_2 (mul,i32) == 8_0 (lshr,i32) || 3_2 (mul,i32) == 9_0 (ashr,i32) || 3_2 (mul,i32) == 10_0 (select,i32) || 3_2 (mul,i32) == 11_0 (zext,eq,i32) || 3_2 (mul,i32) == 12_0 (zext,ne,i32) || 3_2 (mul,i32) == 13_0 (zext,ult,i32) || 3_2 (mul,i32) == 14_0 (zext,slt,i32) || 3_2 (mul,i32) == 15_0 (zext,ule,i32) || 3_2 (mul,i32) == 16_0 (zext,sle,i32) || false
4_1 (and,i32) == 0_1 (input,i32) || 4_1 (and,i32) == 0_2 (const,i32) || 4_1 (and,i32) == 0_3 (const,i32) || 4_1 (and,i32) == 1_0 (add,i32) || 4_1 (and,i32) == 2_0 (sub,i32) || 4_1 (and,i32) == 3_0 (mul,i32) || 4_1 (and,i32) == 5_0 (or,i32) || 4_1 (and,i32) == 6_0 (xor,i32) || 4_1 (and,i32) == 7_0 (shl,i32) || 4_1 (and,i32) == 8_0 (lshr,i32) || 4_1 (and,i32) == 9_0 (ashr,i32) || 4_1 (and,i32) == 10_0 (select,i32) || 4_1 (and,i32) == 11_0 (zext,eq,i32) || 4_1 (and,i32) == 12_0 (zext,ne,i32) || 4_1 (and,i32) == 13_0 (zext,ult,i32) || 4_1 (and,i32) == 14_0 (zext,slt,i32) || 4_1 (and,i32) == 15_0 (zext,ule,i32) || 4_1 (and,i32) == 16_0 (zext,sle,i32) || false
4_2 (and,i32) == 0_1 (input,i32) || 4_2 (and,i32) == 0_2 (const,i32) || 4_2 (and,i32) == 0_3 (const,i32) || 4_2 (and,i32) == 1_0 (add,i32) || 4_2 (and,i32) == 2_0 (sub,i32) || 4_2 (and,i32) == 3_0 (mul,i32) || 4_2 (and,i32) == 5_0 (or,i32) || 4_2 (and,i32) == 6_0 (xor,i32) || 4_2 (and,i32) == 7_0 (shl,i32) || 4_2 (and,i32) == 8_0 (lshr,i32) || 4_2 (and,i32) == 9_0 (ashr,i32) || 4_2 (and,i32) == 10_0 (select,i32) || 4_2 (and,i32) == 11_0 (zext,eq,i32) || 4_2 (and,i32) == 12_0 (zext,ne,i32) || 4_2 (and,i32) == 13_0 (zext,ult,i32) || 4_2 (and,i32) == 14_0 (zext,slt,i32) || 4_2 (and,i32) == 15_0 (zext,ule,i32) || 4_2 (and,i32) == 16_0 (zext,sle,i32) || false
5_1 (or,i32) == 0_1 (input,i32) || 5_1 (or,i32) == 0_2 (const,i32) || 5_1 (or,i32) == 0_3 (const,i32) || 5_1 (or,i32) == 1_0 (add,i32) || 5_1 (or,i32) == 2_0 (sub,i32) || 5_1 (or,i32) == 3_0 (mul,i32) || 5_1 (or,i32) == 4_0 (and,i32) || 5_1 (or,i32) == 6_0 (xor,i32) || 5_1 (or,i32) == 7_0 (shl,i32) || 5_1 (or,i32) == 8_0 (lshr,i32) || 5_1 (or,i32) == 9_0 (ashr,i32) || 5_1 (or,i32) == 10_0 (select,i32) || 5_1 (or,i32) == 11_0 (zext,eq,i32) || 5_1 (or,i32) == 12_0 (zext,ne,i32) || 5_1 (or,i32) == 13_0 (zext,ult,i32) || 5_1 (or,i32) == 14_0 (zext,slt,i32) || 5_1 (or,i32) == 15_0 (zext,ule,i32) || 5_1 (or,i32) == 16_0 (zext,sle,i32) || false
5_2 (or,i32) == 0_1 (input,i32) || 5_2 (or,i32) == 0_2 (const,i32) || 5_2 (or,i32) == 0_3 (const,i32) || 5_2 (or,i32) == 1_0 (add,i32) || 5_2 (or,i32) == 2_0 (sub,i32) || 5_2 (or,i32) == 3_0 (mul,i32) || 5_2 (or,i32) == 4_0 (and,i32) || 5_2 (or,i32) == 6_0 (xor,i32) || 5_2 (or,i32) == 7_0 (shl,i32) || 5_2 (or,i32) == 8_0 (lshr,i32) || 5_2 (or,i32) == 9_0 (ashr,i32) || 5_2 (or,i32) == 10_0 (select,i32) || 5_2 (or,i32) == 11_0 (zext,eq,i32) || 5_2 (or,i32) == 12_0 (zext,ne,i32) || 5_2 (or,i32) == 13_0 (zext,ult,i32) || 5_2 (or,i32) == 14_0 (zext,slt,i32) || 5_2 (or,i32) == 15_0 (zext,ule,i32) || 5_2 (or,i32) == 16_0 (zext,sle,i32) || false
6_1 (xor,i32) == 0_1 (input,i32) || 6_1 (xor,i32) == 0_2 (const,i32) || 6_1 (xor,i32) == 0_3 (const,i32) || 6_1 (xor,i32) == 1_0 (add,i32) || 6_1 (xor,i32) == 2_0 (sub,i32) || 6_1 (xor,i32) == 3_0 (mul,i32) || 6_1 (xor,i32) == 4_0 (and,i32) || 6_1 (xor,i32) == 5_0 (or,i32) || 6_1 (xor,i32) == 7_0 (shl,i32) || 6_1 (xor,i32) == 8_0 (lshr,i32) || 6_1 (xor,i32) == 9_0 (ashr,i32) || 6_1 (xor,i32) == 10_0 (select,i32) || 6_1 (xor,i32) == 11_0 (zext,eq,i32) || 6_1 (xor,i32) == 12_0 (zext,ne,i32) || 6_1 (xor,i32) == 13_0 (zext,ult,i32) || 6_1 (xor,i32) == 14_0 (zext,slt,i32) || 6_1 (xor,i32) == 15_0 (zext,ule,i32) || 6_1 (xor,i32) == 16_0 (zext,sle,i32) || false
6_2 (xor,i32) == 0_1 (input,i32) || 6_2 (xor,i32) == 0_2 (const,i32) || 6_2 (xor,i32) == 0_3 (const,i32) || 6_2 (xor,i32) == 1_0 (add,i32) || 6_2 (xor,i32) == 2_0 (sub,i32) || 6_2 (xor,i32) == 3_0 (mul,i32) || 6_2 (xor,i32) == 4_0 (and,i32) || 6_2 (xor,i32) == 5_0 (or,i32) || 6_2 (xor,i32) == 7_0 (shl,i32) || 6_2 (xor,i32) == 8_0 (lshr,i32) || 6_2 (xor,i32) == 9_0 (ashr,i32) || 6_2 (xor,i32) == 10_0 (select,i32) || 6_2 (xor,i32) == 11_0 (zext,eq,i32) || 6_2 (xor,i32) == 12_0 (zext,ne,i32) || 6_2 (xor,i32) == 13_0 (zext,ult,i32) || 6_2 (xor,i32) == 14_0 (zext,slt,i32) || 6_2 (xor,i32) == 15_0 (zext,ule,i32) || 6_2 (xor,i32) == 16_0 (zext,sle,i32) || false
7_1 (shl,i32) == 0_1 (input,i32) || 7_1 (shl,i32) == 0_2 (const,i32) || 7_1 (shl,i32) == 0_3 (const,i32) || 7_1 (shl,i32) == 1_0 (add,i32) || 7_1 (shl,i32) == 2_0 (sub,i32) || 7_1 (shl,i32) == 3_0 (mul,i32) || 7_1 (shl,i32) == 4_0 (and,i32) || 7_1 (shl,i32) == 5_0 (or,i32) || 7_1 (shl,i32) == 6_0 (xor,i32) || 7_1 (shl,i32) == 8_0 (lshr,i32) || 7_1 (shl,i32) == 9_0 (ashr,i32) || 7_1 (shl,i32) == 10_0 (select,i32) || 7_1 (shl,i32) == 11_0 (zext,eq,i32) || 7_1 (shl,i32) == 12_0 (zext,ne,i32) || 7_1 (shl,i32) == 13_0 (zext,ult,i32) || 7_1 (shl,i32) == 14_0 (zext,slt,i32) || 7_1 (shl,i32) == 15_0 (zext,ule,i32) || 7_1 (shl,i32) == 16_0 (zext,sle,i32) || false
7_2 (shl,i32) == 0_1 (input,i32) || 7_2 (shl,i32) == 0_2 (const,i32) || 7_2 (shl,i32) == 0_3 (const,i32) || 7_2 (shl,i32) == 1_0 (add,i32) || 7_2 (shl,i32) == 2_0 (sub,i32) || 7_2 (shl,i32) == 3_0 (mul,i32) || 7_2 (shl,i32) == 4_0 (and,i32) || 7_2 (shl,i32) == 5_0 (or,i32) || 7_2 (shl,i32) == 6_0 (xor,i32) || 7_2 (shl,i32) == 8_0 (lshr,i32) || 7_2 (shl,i32) == 9_0 (ashr,i32) || 7_2 (shl,i32) == 10_0 (select,i32) || 7_2 (shl,i32) == 11_0 (zext,eq,i32) || 7_2 (shl,i32) == 12_0 (zext,ne,i32) || 7_2 (shl,i32) == 13_0 (zext,ult,i32) || 7_2 (shl,i32) == 14_0 (zext,slt,i32) || 7_2 (shl,i32) == 15_0 (zext,ule,i32) || 7_2 (shl,i32) == 16_0 (zext,sle,i32) || false
8_1 (lshr,i32) == 0_1 (input,i32) || 8_1 (lshr,i32) == 0_2 (const,i32) || 8_1 (lshr,i32) == 0_3 (const,i32) || 8_1 (lshr,i32) == 1_0 (add,i32) || 8_1 (lshr,i32) == 2_0 (sub,i32) || 8_1 (lshr,i32) == 3_0 (mul,i32) || 8_1 (lshr,i32) == 4_0 (and,i32) || 8_1 (lshr,i32) == 5_0 (or,i32) || 8_1 (lshr,i32) == 6_0 (xor,i32) || 8_1 (lshr,i32) == 7_0 (shl,i32) || 8_1 (lshr,i32) == 9_0 (ashr,i32) || 8_1 (lshr,i32) == 10_0 (select,i32) || 8_1 (lshr,i32) == 11_0 (zext,eq,i32) || 8_1 (lshr,i32) == 12_0 (zext,ne,i32) || 8_1 (lshr,i32) == 13_0 (zext,ult,i32) || 8_1 (lshr,i32) == 14_0 (zext,slt,i32) || 8_1 (lshr,i32) == 15_0 (zext,ule,i32) || 8_1 (lshr,i32) == 16_0 (zext,sle,i32) || false
8_2 (lshr,i32) == 0_1 (input,i32) || 8_2 (lshr,i32) == 0_2 (const,i32) || 8_2 (lshr,i32) == 0_3 (const,i32) || 8_2 (lshr,i32) == 1_0 (add,i32) || 8_2 (lshr,i32) == 2_0 (sub,i32) || 8_2 (lshr,i32) == 3_0 (mul,i32) || 8_2 (lshr,i32) == 4_0 (and,i32) || 8_2 (lshr,i32) == 5_0 (or,i32) || 8_2 (lshr,i32) == 6_0 (xor,i32) || 8_2 (lshr,i32) == 7_0 (shl,i32) || 8_2 (lshr,i32) == 9_0 (ashr,i32) || 8_2 (lshr,i32) == 10_0 (select,i32) || 8_2 (lshr,i32) == 11_0 (zext,eq,i32) || 8_2 (lshr,i32) == 12_0 (zext,ne,i32) || 8_2 (lshr,i32) == 13_0 (zext,ult,i32) || 8_2 (lshr,i32) == 14_0 (zext,slt,i32) || 8_2 (lshr,i32) == 15_0 (zext,ule,i32) || 8_2 (lshr,i32) == 16_0 (zext,sle,i32) || false
9_1 (ashr,i32) == 0_1 (input,i32) || 9_1 (ashr,i32) == 0_2 (const,i32) || 9_1 (ashr,i32) == 0_3 (const,i32) || 9_1 (ashr,i32) == 1_0 (add,i32) || 9_1 (ashr,i32) == 2_0 (sub,i32) || 9_1 (ashr,i32) == 3_0 (mul,i32) || 9_1 (ashr,i32) == 4_0 (and,i32) || 9_1 (ashr,i32) == 5_0 (or,i32) || 9_1 (ashr,i32) == 6_0 (xor,i32) || 9_1 (ashr,i32) == 7_0 (shl,i32) || 9_1 (ashr,i32) == 8_0 (lshr,i32) || 9_1 (ashr,i32) == 10_0 (select,i32) || 9_1 (ashr,i32) == 11_0 (zext,eq,i32) || 9_1 (ashr,i32) == 12_0 (zext,ne,i32) || 9_1 (ashr,i32) == 13_0 (zext,ult,i32) || 9_1 (ashr,i32) == 14_0 (zext,slt,i32) || 9_1 (ashr,i32) == 15_0 (zext,ule,i32) || 9_1 (ashr,i32) == 16_0 (zext,sle,i32) || false
9_2 (ashr,i32) == 0_1 (input,i32) || 9_2 (ashr,i32) == 0_2 (const,i32) || 9_2 (ashr,i32) == 0_3 (const,i32) || 9_2 (ashr,i32) == 1_0 (add,i32) || 9_2 (ashr,i32) == 2_0 (sub,i32) || 9_2 (ashr,i32) == 3_0 (mul,i32) || 9_2 (ashr,i32) == 4_0 (and,i32) || 9_2 (ashr,i32) == 5_0 (or,i32) || 9_2 (ashr,i32) == 6_0 (xor,i32) || 9_2 (ashr,i32) == 7_0 (shl,i32) || 9_2 (ashr,i32) == 8_0 (lshr,i32) || 9_2 (ashr,i32) == 10_0 (select,i32) || 9_2 (ashr,i32) == 11_0 (zext,eq,i32) || 9_2 (ashr,i32) == 12_0 (zext,ne,i32) || 9_2 (ashr,i32) == 13_0 (zext,ult,i32) || 9_2 (ashr,i32) == 14_0 (zext,slt,i32) || 9_2 (ashr,i32) == 15_0 (zext,ule,i32) || 9_2 (ashr,i32) == 16_0 (zext,sle,i32) || false
10_1 (select,i32) == 1_0 (add,i32) || 10_1 (select,i32) == 2_0 (sub,i32) || 10_1 (select,i32) == 3_0 (mul,i32) || 10_1 (select,i32) == 4_0 (and,i32) || 10_1 (select,i32) == 5_0 (or,i32) || 10_1 (select,i32) == 6_0 (xor,i32) || 10_1 (select,i32) == 7_0 (shl,i32) || 10_1 (select,i32) == 8_0 (lshr,i32) || 10_1 (select,i32) == 9_0 (ashr,i32) || 10_1 (select,i32) == 11_0 (zext,eq,i32) || 10_1 (select,i32) == 12_0 (zext,ne,i32) || 10_1 (select,i32) == 13_0 (zext,ult,i32) || 10_1 (select,i32) == 14_0 (zext,slt,i32) || 10_1 (select,i32) == 15_0 (zext,ule,i32) || 10_1 (select,i32) == 16_0 (zext,sle,i32) || false
10_2 (select,i32) == 0_1 (input,i32) || 10_2 (select,i32) == 0_2 (const,i32) || 10_2 (select,i32) == 0_3 (const,i32) || 10_2 (select,i32) == 1_0 (add,i32) || 10_2 (select,i32) == 2_0 (sub,i32) || 10_2 (select,i32) == 3_0 (mul,i32) || 10_2 (select,i32) == 4_0 (and,i32) || 10_2 (select,i32) == 5_0 (or,i32) || 10_2 (select,i32) == 6_0 (xor,i32) || 10_2 (select,i32) == 7_0 (shl,i32) || 10_2 (select,i32) == 8_0 (lshr,i32) || 10_2 (select,i32) == 9_0 (ashr,i32) || 10_2 (select,i32) == 11_0 (zext,eq,i32) || 10_2 (select,i32) == 12_0 (zext,ne,i32) || 10_2 (select,i32) == 13_0 (zext,ult,i32) || 10_2 (select,i32) == 14_0 (zext,slt,i32) || 10_2 (select,i32) == 15_0 (zext,ule,i32) || 10_2 (select,i32) == 16_0 (zext,sle,i32) || false
10_3 (select,i32) == 0_1 (input,i32) || 10_3 (select,i32) == 0_2 (const,i32) || 10_3 (select,i32) == 0_3 (const,i32) || 10_3 (select,i32) == 1_0 (add,i32) || 10_3 (select,i32) == 2_0 (sub,i32) || 10_3 (select,i32) == 3_0 (mul,i32) || 10_3 (select,i32) == 4_0 (and,i32) || 10_3 (select,i32) == 5_0 (or,i32) || 10_3 (select,i32) == 6_0 (xor,i32) || 10_3 (select,i32) == 7_0 (shl,i32) || 10_3 (select,i32) == 8_0 (lshr,i32) || 10_3 (select,i32) == 9_0 (ashr,i32) || 10_3 (select,i32) == 11_0 (zext,eq,i32) || 10_3 (select,i32) == 12_0 (zext,ne,i32) || 10_3 (select,i32) == 13_0 (zext,ult,i32) || 10_3 (select,i32) == 14_0 (zext,slt,i32) || 10_3 (select,i32) == 15_0 (zext,ule,i32) || 10_3 (select,i32) == 16_0 (zext,sle,i32) || false
11_1 (eq,i32) == 0_1 (input,i32) || 11_1 (eq,i32) == 0_2 (const,i32) || 11_1 (eq,i32) == 0_3 (const,i32) || 11_1 (eq,i32) == 1_0 (add,i32) || 11_1 (eq,i32) == 2_0 (sub,i32) || 11_1 (eq,i32) == 3_0 (mul,i32) || 11_1 (eq,i32) == 4_0 (and,i32) || 11_1 (eq,i32) == 5_0 (or,i32) || 11_1 (eq,i32) == 6_0 (xor,i32) || 11_1 (eq,i32) == 7_0 (shl,i32) || 11_1 (eq,i32) == 8_0 (lshr,i32) || 11_1 (eq,i32) == 9_0 (ashr,i32) || 11_1 (eq,i32) == 10_0 (select,i32) || 11_1 (eq,i32) == 12_0 (zext,ne,i32) || 11_1 (eq,i32) == 13_0 (zext,ult,i32) || 11_1 (eq,i32) == 14_0 (zext,slt,i32) || 11_1 (eq,i32) == 15_0 (zext,ule,i32) || 11_1 (eq,i32) == 16_0 (zext,sle,i32) || false
11_2 (eq,i32) == 0_1 (input,i32) || 11_2 (eq,i32) == 0_2 (const,i32) || 11_2 (eq,i32) == 0_3 (const,i32) || 11_2 (eq,i32) == 1_0 (add,i32) || 11_2 (eq,i32) == 2_0 (sub,i32) || 11_2 (eq,i32) == 3_0 (mul,i32) || 11_2 (eq,i32) == 4_0 (and,i32) || 11_2 (eq,i32) == 5_0 (or,i32) || 11_2 (eq,i32) == 6_0 (xor,i32) || 11_2 (eq,i32) == 7_0 (shl,i32) || 11_2 (eq,i32) == 8_0 (lshr,i32) || 11_2 (eq,i32) == 9_0 (ashr,i32) || 11_2 (eq,i32) == 10_0 (select,i32) || 11_2 (eq,i32) == 12_0 (zext,ne,i32) || 11_2 (eq,i32) == 13_0 (zext,ult,i32) || 11_2 (eq,i32) == 14_0 (zext,slt,i32) || 11_2 (eq,i32) == 15_0 (zext,ule,i32) || 11_2 (eq,i32) == 16_0 (zext,sle,i32) || false
12_1 (ne,i32) == 0_1 (input,i32) || 12_1 (ne,i32) == 0_2 (const,i32) || 12_1 (ne,i32) == 0_3 (const,i32) || 12_1 (ne,i32) == 1_0 (add,i32) || 12_1 (ne,i32) == 2_0 (sub,i32) || 12_1 (ne,i32) == 3_0 (mul,i32) || 12_1 (ne,i32) == 4_0 (and,i32) || 12_1 (ne,i32) == 5_0 (or,i32) || 12_1 (ne,i32) == 6_0 (xor,i32) || 12_1 (ne,i32) == 7_0 (shl,i32) || 12_1 (ne,i32) == 8_0 (lshr,i32) || 12_1 (ne,i32) == 9_0 (ashr,i32) || 12_1 (ne,i32) == 10_0 (select,i32) || 12_1 (ne,i32) == 11_0 (zext,eq,i32) || 12_1 (ne,i32) == 13_0 (zext,ult,i32) || 12_1 (ne,i32) == 14_0 (zext,slt,i32) || 12_1 (ne,i32) == 15_0 (zext,ule,i32) || 12_1 (ne,i32) == 16_0 (zext,sle,i32) || false
12_2 (ne,i32) == 0_1 (input,i32) || 12_2 (ne,i32) == 0_2 (const,i32) || 12_2 (ne,i32) == 0_3 (const,i32) || 12_2 (ne,i32) == 1_0 (add,i32) || 12_2 (ne,i32) == 2_0 (sub,i32) || 12_2 (ne,i32) == 3_0 (mul,i32) || 12_2 (ne,i32) == 4_0 (and,i32) || 12_2 (ne,i32) == 5_0 (or,i32) || 12_2 (ne,i32) == 6_0 (xor,i32) || 12_2 (ne,i32) == 7_0 (shl,i32) || 12_2 (ne,i32) == 8_0 (lshr,i32) || 12_2 (ne,i32) == 9_0 (ashr,i32) || 12_2 (ne,i32) == 10_0 (select,i32) || 12_2 (ne,i32) == 11_0 (zext,eq,i32) || 12_2 (ne,i32) == 13_0 (zext,ult,i32) || 12_2 (ne,i32) == 14_0 (zext,slt,i32) || 12_2 (ne,i32) == 15_0 (zext,ule,i32) || 12_2 (ne,i32) == 16_0 (zext,sle,i32) || false
13_1 (ult,i32) == 0_1 (input,i32) || 13_1 (ult,i32) == 0_2 (const,i32) || 13_1 (ult,i32) == 0_3 (const,i32) || 13_1 (ult,i32) == 1_0 (add,i32) || 13_1 (ult,i32) == 2_0 (sub,i32) || 13_1 (ult,i32) == 3_0 (mul,i32) || 13_1 (ult,i32) == 4_0 (and,i32) || 13_1 (ult,i32) == 5_0 (or,i32) || 13_1 (ult,i32) == 6_0 (xor,i32) || 13_1 (ult,i32) == 7_0 (shl,i32) || 13_1 (ult,i32) == 8_0 (lshr,i32) || 13_1 (ult,i32) == 9_0 (ashr,i32) || 13_1 (ult,i32) == 10_0 (select,i32) || 13_1 (ult,i32) == 11_0 (zext,eq,i32) || 13_1 (ult,i32) == 12_0 (zext,ne,i32) || 13_1 (ult,i32) == 14_0 (zext,slt,i32) || 13_1 (ult,i32) == 15_0 (zext,ule,i32) || 13_1 (ult,i32) == 16_0 (zext,sle,i32) || false
13_2 (ult,i32) == 0_1 (input,i32) || 13_2 (ult,i32) == 0_2 (const,i32) || 13_2 (ult,i32) == 0_3 (const,i32) || 13_2 (ult,i32) == 1_0 (add,i32) || 13_2 (ult,i32) == 2_0 (sub,i32) || 13_2 (ult,i32) == 3_0 (mul,i32) || 13_2 (ult,i32) == 4_0 (and,i32) || 13_2 (ult,i32) == 5_0 (or,i32) || 13_2 (ult,i32) == 6_0 (xor,i32) || 13_2 (ult,i32) == 7_0 (shl,i32) || 13_2 (ult,i32) == 8_0 (lshr,i32) || 13_2 (ult,i32) == 9_0 (ashr,i32) || 13_2 (ult,i32) == 10_0 (select,i32) || 13_2 (ult,i32) == 11_0 (zext,eq,i32) || 13_2 (ult,i32) == 12_0 (zext,ne,i32) || 13_2 (ult,i32) == 14_0 (zext,slt,i32) || 13_2 (ult,i32) == 15_0 (zext,ule,i32) || 13_2 (ult,i32) == 16_0 (zext,sle,i32) || false
14_1 (slt,i32) == 0_1 (input,i32) || 14_1 (slt,i32) == 0_2 (const,i32) || 14_1 (slt,i32) == 0_3 (const,i32) || 14_1 (slt,i32) == 1_0 (add,i32) || 14_1 (slt,i32) == 2_0 (sub,i32) || 14_1 (slt,i32) == 3_0 (mul,i32) || 14_1 (slt,i32) == 4_0 (and,i32) || 14_1 (slt,i32) == 5_0 (or,i32) || 14_1 (slt,i32) == 6_0 (xor,i32) || 14_1 (slt,i32) == 7_0 (shl,i32) || 14_1 (slt,i32) == 8_0 (lshr,i32) || 14_1 (slt,i32) == 9_0 (ashr,i32) || 14_1 (slt,i32) == 10_0 (select,i32) || 14_1 (slt,i32) == 11_0 (zext,eq,i32) || 14_1 (slt,i32) == 12_0 (zext,ne,i32) || 14_1 (slt,i32) == 13_0 (zext,ult,i32) || 14_1 (slt,i32) == 15_0 (zext,ule,i32) || 14_1 (slt,i32) == 16_0 (zext,sle,i32) || false
14_2 (slt,i32) == 0_1 (input,i32) || 14_2 (slt,i32) == 0_2 (const,i32) || 14_2 (slt,i32) == 0_3 (const,i32) || 14_2 (slt,i32) == 1_0 (add,i32) || 14_2 (slt,i32) == 2_0 (sub,i32) || 14_2 (slt,i32) == 3_0 (mul,i32) || 14_2 (slt,i32) == 4_0 (and,i32) || 14_2 (slt,i32) == 5_0 (or,i32) || 14_2 (slt,i32) == 6_0 (xor,i32) || 14_2 (slt,i32) == 7_0 (shl,i32) || 14_2 (slt,i32) == 8_0 (lshr,i32) || 14_2 (slt,i32) == 9_0 (ashr,i32) || 14_2 (slt,i32) == 10_0 (select,i32) || 14_2 (slt,i32) == 11_0 (zext,eq,i32) || 14_2 (slt,i32) == 12_0 (zext,ne,i32) || 14_2 (slt,i32) == 13_0 (zext,ult,i32) || 14_2 (slt,i32) == 15_0 (zext,ule,i32) || 14_2 (slt,i32) == 16_0 (zext,sle,i32) || false
15_1 (ule,i32) == 0_1 (input,i32) || 15_1 (ule,i32) == 0_2 (const,i32) || 15_1 (ule,i32) == 0_3 (const,i32) || 15_1 (ule,i32) == 1_0 (add,i32) || 15_1 (ule,i32) == 2_0 (sub,i32) || 15_1 (ule,i32) == 3_0 (mul,i32) || 15_1 (ule,i32) == 4_0 (and,i32) || 15_1 (ule,i32) == 5_0 (or,i32) || 15_1 (ule,i32) == 6_0 (xor,i32) || 15_1 (ule,i32) == 7_0 (shl,i32) || 15_1 (ule,i32) == 8_0 (lshr,i32) || 15_1 (ule,i32) == 9_0 (ashr,i32) || 15_1 (ule,i32) == 10_0 (select,i32) || 15_1 (ule,i32) == 11_0 (zext,eq,i32) || 15_1 (ule,i32) == 12_0 (zext,ne,i32) || 15_1 (ule,i32) == 13_0 (zext,ult,i32) || 15_1 (ule,i32) == 14_0 (zext,slt,i32) || 15_1 (ule,i32) == 16_0 (zext,sle,i32) || false
15_2 (ule,i32) == 0_1 (input,i32) || 15_2 (ule,i32) == 0_2 (const,i32) || 15_2 (ule,i32) == 0_3 (const,i32) || 15_2 (ule,i32) == 1_0 (add,i32) || 15_2 (ule,i32) == 2_0 (sub,i32) || 15_2 (ule,i32) == 3_0 (mul,i32) || 15_2 (ule,i32) == 4_0 (and,i32) || 15_2 (ule,i32) == 5_0 (or,i32) || 15_2 (ule,i32) == 6_0 (xor,i32) || 15_2 (ule,i32) == 7_0 (shl,i32) || 15_2 (ule,i32) == 8_0 (lshr,i32) || 15_2 (ule,i32) == 9_0 (ashr,i32) || 15_2 (ule,i32) == 10_0 (select,i32) || 15_2 (ule,i32) == 11_0 (zext,eq,i32) || 15_2 (ule,i32) == 12_0 (zext,ne,i32) || 15_2 (ule,i32) == 13_0 (zext,ult,i32) || 15_2 (ule,i32) == 14_0 (zext,slt,i32) || 15_2 (ule,i32) == 16_0 (zext,sle,i32) || false
16_1 (sle,i32) == 0_1 (input,i32) || 16_1 (sle,i32) == 0_2 (const,i32) || 16_1 (sle,i32) == 0_3 (const,i32) || 16_1 (sle,i32) == 1_0 (add,i32) || 16_1 (sle,i32) == 2_0 (sub,i32) || 16_1 (sle,i32) == 3_0 (mul,i32) || 16_1 (sle,i32) == 4_0 (and,i32) || 16_1 (sle,i32) == 5_0 (or,i32) || 16_1 (sle,i32) == 6_0 (xor,i32) || 16_1 (sle,i32) == 7_0 (shl,i32) || 16_1 (sle,i32) == 8_0 (lshr,i32) || 16_1 (sle,i32) == 9_0 (ashr,i32) || 16_1 (sle,i32) == 10_0 (select,i32) || 16_1 (sle,i32) == 11_0 (zext,eq,i32) || 16_1 (sle,i32) == 12_0 (zext,ne,i32) || 16_1 (sle,i32) == 13_0 (zext,ult,i32) || 16_1 (sle,i32) == 14_0 (zext,slt,i32) || 16_1 (sle,i32) == 15_0 (zext,ule,i32) || false
16_2 (sle,i32) == 0_1 (input,i32) || 16_2 (sle,i32) == 0_2 (const,i32) || 16_2 (sle,i32) == 0_3 (const,i32) || 16_2 (sle,i32) == 1_0 (add,i32) || 16_2 (sle,i32) == 2_0 (sub,i32) || 16_2 (sle,i32) == 3_0 (mul,i32) || 16_2 (sle,i32) == 4_0 (and,i32) || 16_2 (sle,i32) == 5_0 (or,i32) || 16_2 (sle,i32) == 6_0 (xor,i32) || 16_2 (sle,i32) == 7_0 (shl,i32) || 16_2 (sle,i32) == 8_0 (lshr,i32) || 16_2 (sle,i32) == 9_0 (ashr,i32) || 16_2 (sle,i32) == 10_0 (select,i32) || 16_2 (sle,i32) == 11_0 (zext,eq,i32) || 16_2 (sle,i32) == 12_0 (zext,ne,i32) || 16_2 (sle,i32) == 13_0 (zext,ult,i32) || 16_2 (sle,i32) == 14_0 (zext,slt,i32) || 16_2 (sle,i32) == 15_0 (zext,ule,i32) || false
component const input constraints:
1_1 (add,i32) == 0_2 (const,i32) || 1_1 (add,i32) == 0_3 (const,i32) || false
1_2 (add,i32) == 0_2 (const,i32) || 1_2 (add,i32) == 0_3 (const,i32) || false
false
2_1 (sub,i32) == 0_2 (const,i32) || 2_1 (sub,i32) == 0_3 (const,i32) || false
2_2 (sub,i32) == 0_2 (const,i32) || 2_2 (sub,i32) == 0_3 (const,i32) || false
false
3_1 (mul,i32) == 0_2 (const,i32) || 3_1 (mul,i32) == 0_3 (const,i32) || false
3_2 (mul,i32) == 0_2 (const,i32) || 3_2 (mul,i32) == 0_3 (const,i32) || false
false
4_1 (and,i32) == 0_2 (const,i32) || 4_1 (and,i32) == 0_3 (const,i32) || false
4_2 (and,i32) == 0_2 (const,i32) || 4_2 (and,i32) == 0_3 (const,i32) || false
false
5_1 (or,i32) == 0_2 (const,i32) || 5_1 (or,i32) == 0_3 (const,i32) || false
5_2 (or,i32) == 0_2 (const,i32) || 5_2 (or,i32) == 0_3 (const,i32) || false
false
6_1 (xor,i32) == 0_2 (const,i32) || 6_1 (xor,i32) == 0_3 (const,i32) || false
6_2 (xor,i32) == 0_2 (const,i32) || 6_2 (xor,i32) == 0_3 (const,i32) || false
false
7_1 (shl,i32) == 0_2 (const,i32) || 7_1 (shl,i32) == 0_3 (const,i32) || false
7_2 (shl,i32) == 0_2 (const,i32) || 7_2 (shl,i32) == 0_3 (const,i32) || false
false
8_1 (lshr,i32) == 0_2 (const,i32) || 8_1 (lshr,i32) == 0_3 (const,i32) || false
8_2 (lshr,i32) == 0_2 (const,i32) || 8_2 (lshr,i32) == 0_3 (const,i32) || false
false
9_1 (ashr,i32) == 0_2 (const,i32) || 9_1 (ashr,i32) == 0_3 (const,i32) || false
9_2 (ashr,i32) == 0_2 (const,i32) || 9_2 (ashr,i32) == 0_3 (const,i32) || false
false
false
10_2 (select,i32) == 0_2 (const,i32) || 10_2 (select,i32) == 0_3 (const,i32) || false
10_3 (select,i32) == 0_2 (const,i32) || 10_3 (select,i32) == 0_3 (const,i32) || false
false
11_1 (eq,i32) == 0_2 (const,i32) || 11_1 (eq,i32) == 0_3 (const,i32) || false
11_2 (eq,i32) == 0_2 (const,i32) || 11_2 (eq,i32) == 0_3 (const,i32) || false
false
12_1 (ne,i32) == 0_2 (const,i32) || 12_1 (ne,i32) == 0_3 (const,i32) || false
12_2 (ne,i32) == 0_2 (const,i32) || 12_2 (ne,i32) == 0_3 (const,i32) || false
false
13_1 (ult,i32) == 0_2 (const,i32) || 13_1 (ult,i32) == 0_3 (const,i32) || false
13_2 (ult,i32) == 0_2 (const,i32) || 13_2 (ult,i32) == 0_3 (const,i32) || false
false
14_1 (slt,i32) == 0_2 (const,i32) || 14_1 (slt,i32) == 0_3 (const,i32) || false
14_2 (slt,i32) == 0_2 (const,i32) || 14_2 (slt,i32) == 0_3 (const,i32) || false
false
15_1 (ule,i32) == 0_2 (const,i32) || 15_1 (ule,i32) == 0_3 (const,i32) || false
15_2 (ule,i32) == 0_2 (const,i32) || 15_2 (ule,i32) == 0_3 (const,i32) || false
false
16_1 (sle,i32) == 0_2 (const,i32) || 16_1 (sle,i32) == 0_3 (const,i32) || false
16_2 (sle,i32) == 0_2 (const,i32) || 16_2 (sle,i32) == 0_3 (const,i32) || false
false
component output constraints:
17_0 (output,i32) == 0_1 (input,i32) || 17_0 (output,i32) == 0_2 (const,i32) || 17_0 (output,i32) == 0_3 (const,i32) || 17_0 (output,i32) == 1_0 (add,i32) || 17_0 (output,i32) == 2_0 (sub,i32) || 17_0 (output,i32) == 3_0 (mul,i32) || 17_0 (output,i32) == 4_0 (and,i32) || 17_0 (output,i32) == 5_0 (or,i32) || 17_0 (output,i32) == 6_0 (xor,i32) || 17_0 (output,i32) == 7_0 (shl,i32) || 17_0 (output,i32) == 8_0 (lshr,i32) || 17_0 (output,i32) == 9_0 (ashr,i32) || 17_0 (output,i32) == 10_0 (select,i32) || 17_0 (output,i32) == 11_0 (zext,eq,i32) || 17_0 (output,i32) == 12_0 (zext,ne,i32) || 17_0 (output,i32) == 13_0 (zext,ult,i32) || 17_0 (output,i32) == 14_0 (zext,slt,i32) || 17_0 (output,i32) == 15_0 (zext,ule,i32) || 17_0 (output,i32) == 16_0 (zext,sle,i32) || false
possible wirings:
0_1 (input,i32) == 1_1 (add,i32)
0_1 (input,i32) == 1_2 (add,i32)
0_1 (input,i32) == 2_1 (sub,i32)
0_1 (input,i32) == 2_2 (sub,i32)
0_1 (input,i32) == 3_1 (mul,i32)
0_1 (input,i32) == 3_2 (mul,i32)
0_1 (input,i32) == 4_1 (and,i32)
0_1 (input,i32) == 4_2 (and,i32)
0_1 (input,i32) == 5_1 (or,i32)
0_1 (input,i32) == 5_2 (or,i32)
0_1 (input,i32) == 6_1 (xor,i32)
0_1 (input,i32) == 6_2 (xor,i32)
0_1 (input,i32) == 7_1 (shl,i32)
0_1 (input,i32) == 7_2 (shl,i32)
0_1 (input,i32) == 8_1 (lshr,i32)
0_1 (input,i32) == 8_2 (lshr,i32)
0_1 (input,i32) == 9_1 (ashr,i32)
0_1 (input,i32) == 9_2 (ashr,i32)
0_1 (input,i32) == 10_2 (select,i32)
0_1 (input,i32) == 10_3 (select,i32)
0_1 (input,i32) == 11_1 (eq,i32)
0_1 (input,i32) == 11_2 (eq,i32)
0_1 (input,i32) == 12_1 (ne,i32)
0_1 (input,i32) == 12_2 (ne,i32)
0_1 (input,i32) == 13_1 (ult,i32)
0_1 (input,i32) == 13_2 (ult,i32)
0_1 (input,i32) == 14_1 (slt,i32)
0_1 (input,i32) == 14_2 (slt,i32)
0_1 (input,i32) == 15_1 (ule,i32)
0_1 (input,i32) == 15_2 (ule,i32)
0_1 (input,i32) == 16_1 (sle,i32)
0_1 (input,i32) == 16_2 (sle,i32)
0_1 (input,i32) == 17_0 (output,i32)
0_2 (const,i32) == 1_1 (add,i32)
0_2 (const,i32) == 1_2 (add,i32)
0_2 (const,i32) == 2_1 (sub,i32)
0_2 (const,i32) == 2_2 (sub,i32)
0_2 (const,i32) == 3_1 (mul,i32)
0_2 (const,i32) == 3_2 (mul,i32)
0_2 (const,i32) == 4_1 (and,i32)
0_2 (const,i32) == 4_2 (and,i32)
0_2 (const,i32) == 5_1 (or,i32)
0_2 (const,i32) == 5_2 (or,i32)
0_2 (const,i32) == 6_1 (xor,i32)
0_2 (const,i32) == 6_2 (xor,i32)
0_2 (const,i32) == 7_1 (shl,i32)
0_2 (const,i32) == 7_2 (shl,i32)
0_2 (const,i32) == 8_1 (lshr,i32)
0_2 (const,i32) == 8_2 (lshr,i32)
0_2 (const,i32) == 9_1 (ashr,i32)
0_2 (const,i32) == 9_2 (ashr,i32)
0_2 (const,i32) == 10_2 (select,i32)
0_2 (const,i32) == 10_3 (select,i32)
0_2 (const,i32) == 11_1 (eq,i32)
0_2 (const,i32) == 11_2 (eq,i32)
0_2 (const,i32) == 12_1 (ne,i32)
0_2 (const,i32) == 12_2 (ne,i32)
0_2 (const,i32) == 13_1 (ult,i32)
0_2 (const,i32) == 13_2 (ult,i32)
0_2 (const,i32) == 14_1 (slt,i32)
0_2 (const,i32) == 14_2 (slt,i32)
0_2 (const,i32) == 15_1 (ule,i32)
0_2 (const,i32) == 15_2 (ule,i32)
0_2 (const,i32) == 16_1 (sle,i32)
0_2 (const,i32) == 16_2 (sle,i32)
0_2 (const,i32) == 17_0 (output,i32)
0_3 (const,i32) == 1_1 (add,i32)
0_3 (const,i32) == 1_2 (add,i32)
0_3 (const,i32) == 2_1 (sub,i32)
0_3 (const,i32) == 2_2 (sub,i32)
0_3 (const,i32) == 3_1 (mul,i32)
0_3 (const,i32) == 3_2 (mul,i32)
0_3 (const,i32) == 4_1 (and,i32)
0_3 (const,i32) == 4_2 (and,i32)
0_3 (const,i32) == 5_1 (or,i32)
0_3 (const,i32) == 5_2 (or,i32)
0_3 (const,i32) == 6_1 (xor,i32)
0_3 (const,i32) == 6_2 (xor,i32)
0_3 (const,i32) == 7_1 (shl,i32)
0_3 (const,i32) == 7_2 (shl,i32)
0_3 (const,i32) == 8_1 (lshr,i32)
0_3 (const,i32) == 8_2 (lshr,i32)
0_3 (const,i32) == 9_1 (ashr,i32)
0_3 (const,i32) == 9_2 (ashr,i32)
0_3 (const,i32) == 10_2 (select,i32)
0_3 (const,i32) == 10_3 (select,i32)
0_3 (const,i32) == 11_1 (eq,i32)
0_3 (const,i32) == 11_2 (eq,i32)
0_3 (const,i32) == 12_1 (ne,i32)
0_3 (const,i32) == 12_2 (ne,i32)
0_3 (const,i32) == 13_1 (ult,i32)
0_3 (const,i32) == 13_2 (ult,i32)
0_3 (const,i32) == 14_1 (slt,i32)
0_3 (const,i32) == 14_2 (slt,i32)
0_3 (const,i32) == 15_1 (ule,i32)
0_3 (const,i32) == 15_2 (ule,i32)
0_3 (const,i32) == 16_1 (sle,i32)
0_3 (const,i32) == 16_2 (sle,i32)
0_3 (const,i32) == 17_0 (output,i32)
1_1 (add,i32) == 2_0 (sub,i32)
1_1 (add,i32) == 3_0 (mul,i32)
1_1 (add,i32) == 4_0 (and,i32)
1_1 (add,i32) == 5_0 (or,i32)
1_1 (add,i32) == 6_0 (xor,i32)
1_1 (add,i32) == 7_0 (shl,i32)
1_1 (add,i32) == 8_0 (lshr,i32)
1_1 (add,i32) == 9_0 (ashr,i32)
1_1 (add,i32) == 10_0 (select,i32)
1_1 (add,i32) == 11_0 (zext,eq,i32)
1_1 (add,i32) == 12_0 (zext,ne,i32)
1_1 (add,i32) == 13_0 (zext,ult,i32)
1_1 (add,i32) == 14_0 (zext,slt,i32)
1_1 (add,i32) == 15_0 (zext,ule,i32)
1_1 (add,i32) == 16_0 (zext,sle,i32)
1_2 (add,i32) == 2_0 (sub,i32)
1_2 (add,i32) == 3_0 (mul,i32)
1_2 (add,i32) == 4_0 (and,i32)
1_2 (add,i32) == 5_0 (or,i32)
1_2 (add,i32) == 6_0 (xor,i32)
1_2 (add,i32) == 7_0 (shl,i32)
1_2 (add,i32) == 8_0 (lshr,i32)
1_2 (add,i32) == 9_0 (ashr,i32)
1_2 (add,i32) == 10_0 (select,i32)
1_2 (add,i32) == 11_0 (zext,eq,i32)
1_2 (add,i32) == 12_0 (zext,ne,i32)
1_2 (add,i32) == 13_0 (zext,ult,i32)
1_2 (add,i32) == 14_0 (zext,slt,i32)
1_2 (add,i32) == 15_0 (zext,ule,i32)
1_2 (add,i32) == 16_0 (zext,sle,i32)
2_1 (sub,i32) == 1_0 (add,i32)
2_1 (sub,i32) == 3_0 (mul,i32)
2_1 (sub,i32) == 4_0 (and,i32)
2_1 (sub,i32) == 5_0 (or,i32)
2_1 (sub,i32) == 6_0 (xor,i32)
2_1 (sub,i32) == 7_0 (shl,i32)
2_1 (sub,i32) == 8_0 (lshr,i32)
2_1 (sub,i32) == 9_0 (ashr,i32)
2_1 (sub,i32) == 10_0 (select,i32)
2_1 (sub,i32) == 11_0 (zext,eq,i32)
2_1 (sub,i32) == 12_0 (zext,ne,i32)
2_1 (sub,i32) == 13_0 (zext,ult,i32)
2_1 (sub,i32) == 14_0 (zext,slt,i32)
2_1 (sub,i32) == 15_0 (zext,ule,i32)
2_1 (sub,i32) == 16_0 (zext,sle,i32)
2_2 (sub,i32) == 1_0 (add,i32)
2_2 (sub,i32) == 3_0 (mul,i32)
2_2 (sub,i32) == 4_0 (and,i32)
2_2 (sub,i32) == 5_0 (or,i32)
2_2 (sub,i32) == 6_0 (xor,i32)
2_2 (sub,i32) == 7_0 (shl,i32)
2_2 (sub,i32) == 8_0 (lshr,i32)
2_2 (sub,i32) == 9_0 (ashr,i32)
2_2 (sub,i32) == 10_0 (select,i32)
2_2 (sub,i32) == 11_0 (zext,eq,i32)
2_2 (sub,i32) == 12_0 (zext,ne,i32)
2_2 (sub,i32) == 13_0 (zext,ult,i32)
2_2 (sub,i32) == 14_0 (zext,slt,i32)
2_2 (sub,i32) == 15_0 (zext,ule,i32)
2_2 (sub,i32) == 16_0 (zext,sle,i32)
3_1 (mul,i32) == 1_0 (add,i32)
3_1 (mul,i32) == 2_0 (sub,i32)
3_1 (mul,i32) == 4_0 (and,i32)
3_1 (mul,i32) == 5_0 (or,i32)
3_1 (mul,i32) == 6_0 (xor,i32)
3_1 (mul,i32) == 7_0 (shl,i32)
3_1 (mul,i32) == 8_0 (lshr,i32)
3_1 (mul,i32) == 9_0 (ashr,i32)
3_1 (mul,i32) == 10_0 (select,i32)
3_1 (mul,i32) == 11_0 (zext,eq,i32)
3_1 (mul,i32) == 12_0 (zext,ne,i32)
3_1 (mul,i32) == 13_0 (zext,ult,i32)
3_1 (mul,i32) == 14_0 (zext,slt,i32)
3_1 (mul,i32) == 15_0 (zext,ule,i32)
3_1 (mul,i32) == 16_0 (zext,sle,i32)
3_2 (mul,i32) == 1_0 (add,i32)
3_2 (mul,i32) == 2_0 (sub,i32)
3_2 (mul,i32) == 4_0 (and,i32)
3_2 (mul,i32) == 5_0 (or,i32)
3_2 (mul,i32) == 6_0 (xor,i32)
3_2 (mul,i32) == 7_0 (shl,i32)
3_2 (mul,i32) == 8_0 (lshr,i32)
3_2 (mul,i32) == 9_0 (ashr,i32)
3_2 (mul,i32) == 10_0 (select,i32)
3_2 (mul,i32) == 11_0 (zext,eq,i32)
3_2 (mul,i32) == 12_0 (zext,ne,i32)
3_2 (mul,i32) == 13_0 (zext,ult,i32)
3_2 (mul,i32) == 14_0 (zext,slt,i32)
3_2 (mul,i32) == 15_0 (zext,ule,i32)
3_2 (mul,i32) == 16_0 (zext,sle,i32)
4_1 (and,i32) == 1_0 (add,i32)
4_1 (and,i32) == 2_0 (sub,i32)
4_1 (and,i32) == 3_0 (mul,i32)
4_1 (and,i32) == 5_0 (or,i32)
4_1 (and,i32) == 6_0 (xor,i32)
4_1 (and,i32) == 7_0 (shl,i32)
4_1 (and,i32) == 8_0 (lshr,i32)
4_1 (and,i32) == 9_0 (ashr,i32)
4_1 (and,i32) == 10_0 (select,i32)
4_1 (and,i32) == 11_0 (zext,eq,i32)
4_1 (and,i32) == 12_0 (zext,ne,i32)
4_1 (and,i32) == 13_0 (zext,ult,i32)
4_1 (and,i32) == 14_0 (zext,slt,i32)
4_1 (and,i32) == 15_0 (zext,ule,i32)
4_1 (and,i32) == 16_0 (zext,sle,i32)
4_2 (and,i32) == 1_0 (add,i32)
4_2 (and,i32) == 2_0 (sub,i32)
4_2 (and,i32) == 3_0 (mul,i32)
4_2 (and,i32) == 5_0 (or,i32)
4_2 (and,i32) == 6_0 (xor,i32)
4_2 (and,i32) == 7_0 (shl,i32)
4_2 (and,i32) == 8_0 (lshr,i32)
4_2 (and,i32) == 9_0 (ashr,i32)
4_2 (and,i32) == 10_0 (select,i32)
4_2 (and,i32) == 11_0 (zext,eq,i32)
4_2 (and,i32) == 12_0 (zext,ne,i32)
4_2 (and,i32) == 13_0 (zext,ult,i32)
4_2 (and,i32) == 14_0 (zext,slt,i32)
4_2 (and,i32) == 15_0 (zext,ule,i32)
4_2 (and,i32) == 16_0 (zext,sle,i32)
5_1 (or,i32) == 1_0 (add,i32)
5_1 (or,i32) == 2_0 (sub,i32)
5_1 (or,i32) == 3_0 (mul,i32)
5_1 (or,i32) == 4_0 (and,i32)
5_1 (or,i32) == 6_0 (xor,i32)
5_1 (or,i32) == 7_0 (shl,i32)
5_1 (or,i32) == 8_0 (lshr,i32)
5_1 (or,i32) == 9_0 (ashr,i32)
5_1 (or,i32) == 10_0 (select,i32)
5_1 (or,i32) == 11_0 (zext,eq,i32)
5_1 (or,i32) == 12_0 (zext,ne,i32)
5_1 (or,i32) == 13_0 (zext,ult,i32)
5_1 (or,i32) == 14_0 (zext,slt,i32)
5_1 (or,i32) == 15_0 (zext,ule,i32)
5_1 (or,i32) == 16_0 (zext,sle,i32)
5_2 (or,i32) == 1_0 (add,i32)
5_2 (or,i32) == 2_0 (sub,i32)
5_2 (or,i32) == 3_0 (mul,i32)
5_2 (or,i32) == 4_0 (and,i32)
5_2 (or,i32) == 6_0 (xor,i32)
5_2 (or,i32) == 7_0 (shl,i32)
5_2 (or,i32) == 8_0 (lshr,i32)
5_2 (or,i32) == 9_0 (ashr,i32)
5_2 (or,i32) == 10_0 (select,i32)
5_2 (or,i32) == 11_0 (zext,eq,i32)
5_2 (or,i32) == 12_0 (zext,ne,i32)
5_2 (or,i32) == 13_0 (zext,ult,i32)
5_2 (or,i32) == 14_0 (zext,slt,i32)
5_2 (or,i32) == 15_0 (zext,ule,i32)
5_2 (or,i32) == 16_0 (zext,sle,i32)
6_1 (xor,i32) == 1_0 (add,i32)
6_1 (xor,i32) == 2_0 (sub,i32)
6_1 (xor,i32) == 3_0 (mul,i32)
6_1 (xor,i32) == 4_0 (and,i32)
6_1 (xor,i32) == 5_0 (or,i32)
6_1 (xor,i32) == 7_0 (shl,i32)
6_1 (xor,i32) == 8_0 (lshr,i32)
6_1 (xor,i32) == 9_0 (ashr,i32)
6_1 (xor,i32) == 10_0 (select,i32)
6_1 (xor,i32) == 11_0 (zext,eq,i32)
6_1 (xor,i32) == 12_0 (zext,ne,i32)
6_1 (xor,i32) == 13_0 (zext,ult,i32)
6_1 (xor,i32) == 14_0 (zext,slt,i32)
6_1 (xor,i32) == 15_0 (zext,ule,i32)
6_1 (xor,i32) == 16_0 (zext,sle,i32)
6_2 (xor,i32) == 1_0 (add,i32)
6_2 (xor,i32) == 2_0 (sub,i32)
6_2 (xor,i32) == 3_0 (mul,i32)
6_2 (xor,i32) == 4_0 (and,i32)
6_2 (xor,i32) == 5_0 (or,i32)
6_2 (xor,i32) == 7_0 (shl,i32)
6_2 (xor,i32) == 8_0 (lshr,i32)
6_2 (xor,i32) == 9_0 (ashr,i32)
6_2 (xor,i32) == 10_0 (select,i32)
6_2 (xor,i32) == 11_0 (zext,eq,i32)
6_2 (xor,i32) == 12_0 (zext,ne,i32)
6_2 (xor,i32) == 13_0 (zext,ult,i32)
6_2 (xor,i32) == 14_0 (zext,slt,i32)
6_2 (xor,i32) == 15_0 (zext,ule,i32)
6_2 (xor,i32) == 16_0 (zext,sle,i32)
7_1 (shl,i32) == 1_0 (add,i32)
7_1 (shl,i32) == 2_0 (sub,i32)
7_1 (shl,i32) == 3_0 (mul,i32)
7_1 (shl,i32) == 4_0 (and,i32)
7_1 (shl,i32) == 5_0 (or,i32)
7_1 (shl,i32) == 6_0 (xor,i32)
7_1 (shl,i32) == 8_0 (lshr,i32)
7_1 (shl,i32) == 9_0 (ashr,i32)
7_1 (shl,i32) == 10_0 (select,i32)
7_1 (shl,i32) == 11_0 (zext,eq,i32)
7_1 (shl,i32) == 12_0 (zext,ne,i32)
7_1 (shl,i32) == 13_0 (zext,ult,i32)
7_1 (shl,i32) == 14_0 (zext,slt,i32)
7_1 (shl,i32) == 15_0 (zext,ule,i32)
7_1 (shl,i32) == 16_0 (zext,sle,i32)
7_2 (shl,i32) == 1_0 (add,i32)
7_2 (shl,i32) == 2_0 (sub,i32)
7_2 (shl,i32) == 3_0 (mul,i32)
7_2 (shl,i32) == 4_0 (and,i32)
7_2 (shl,i32) == 5_0 (or,i32)
7_2 (shl,i32) == 6_0 (xor,i32)
7_2 (shl,i32) == 8_0 (lshr,i32)
7_2 (shl,i32) == 9_0 (ashr,i32)
7_2 (shl,i32) == 10_0 (select,i32)
7_2 (shl,i32) == 11_0 (zext,eq,i32)
7_2 (shl,i32) == 12_0 (zext,ne,i32)
7_2 (shl,i32) == 13_0 (zext,ult,i32)
7_2 (shl,i32) == 14_0 (zext,slt,i32)
7_2 (shl,i32) == 15_0 (zext,ule,i32)
7_2 (shl,i32) == 16_0 (zext,sle,i32)
8_1 (lshr,i32) == 1_0 (add,i32)
8_1 (lshr,i32) == 2_0 (sub,i32)
8_1 (lshr,i32) == 3_0 (mul,i32)
8_1 (lshr,i32) == 4_0 (and,i32)
8_1 (lshr,i32) == 5_0 (or,i32)
8_1 (lshr,i32) == 6_0 (xor,i32)
8_1 (lshr,i32) == 7_0 (shl,i32)
8_1 (lshr,i32) == 9_0 (ashr,i32)
8_1 (lshr,i32) == 10_0 (select,i32)
8_1 (lshr,i32) == 11_0 (zext,eq,i32)
8_1 (lshr,i32) == 12_0 (zext,ne,i32)
8_1 (lshr,i32) == 13_0 (zext,ult,i32)
8_1 (lshr,i32) == 14_0 (zext,slt,i32)
8_1 (lshr,i32) == 15_0 (zext,ule,i32)
8_1 (lshr,i32) == 16_0 (zext,sle,i32)
8_2 (lshr,i32) == 1_0 (add,i32)
8_2 (lshr,i32) == 2_0 (sub,i32)
8_2 (lshr,i32) == 3_0 (mul,i32)
8_2 (lshr,i32) == 4_0 (and,i32)
8_2 (lshr,i32) == 5_0 (or,i32)
8_2 (lshr,i32) == 6_0 (xor,i32)
8_2 (lshr,i32) == 7_0 (shl,i32)
8_2 (lshr,i32) == 9_0 (ashr,i32)
8_2 (lshr,i32) == 10_0 (select,i32)
8_2 (lshr,i32) == 11_0 (zext,eq,i32)
8_2 (lshr,i32) == 12_0 (zext,ne,i32)
8_2 (lshr,i32) == 13_0 (zext,ult,i32)
8_2 (lshr,i32) == 14_0 (zext,slt,i32)
8_2 (lshr,i32) == 15_0 (zext,ule,i32)
8_2 (lshr,i32) == 16_0 (zext,sle,i32)
9_1 (ashr,i32) == 1_0 (add,i32)
9_1 (ashr,i32) == 2_0 (sub,i32)
9_1 (ashr,i32) == 3_0 (mul,i32)
9_1 (ashr,i32) == 4_0 (and,i32)
9_1 (ashr,i32) == 5_0 (or,i32)
9_1 (ashr,i32) == 6_0 (xor,i32)
9_1 (ashr,i32) == 7_0 (shl,i32)
9_1 (ashr,i32) == 8_0 (lshr,i32)
9_1 (ashr,i32) == 10_0 (select,i32)
9_1 (ashr,i32) == 11_0 (zext,eq,i32)
9_1 (ashr,i32) == 12_0 (zext,ne,i32)
9_1 (ashr,i32) == 13_0 (zext,ult,i32)
9_1 (ashr,i32) == 14_0 (zext,slt,i32)
9_1 (ashr,i32) == 15_0 (zext,ule,i32)
9_1 (ashr,i32) == 16_0 (zext,sle,i32)
9_2 (ashr,i32) == 1_0 (add,i32)
9_2 (ashr,i32) == 2_0 (sub,i32)
9_2 (ashr,i32) == 3_0 (mul,i32)
9_2 (ashr,i32) == 4_0 (and,i32)
9_2 (ashr,i32) == 5_0 (or,i32)
9_2 (ashr,i32) == 6_0 (xor,i32)
9_2 (ashr,i32) == 7_0 (shl,i32)
9_2 (ashr,i32) == 8_0 (lshr,i32)
9_2 (ashr,i32) == 10_0 (select,i32)
9_2 (ashr,i32) == 11_0 (zext,eq,i32)
9_2 (ashr,i32) == 12_0 (zext,ne,i32)
9_2 (ashr,i32) == 13_0 (zext,ult,i32)
9_2 (ashr,i32) == 14_0 (zext,slt,i32)
9_2 (ashr,i32) == 15_0 (zext,ule,i32)
9_2 (ashr,i32) == 16_0 (zext,sle,i32)
10_1 (select,i32) == 1_0 (add,i32)
10_1 (select,i32) == 2_0 (sub,i32)
10_1 (select,i32) == 3_0 (mul,i32)
10_1 (select,i32) == 4_0 (and,i32)
10_1 (select,i32) == 5_0 (or,i32)
10_1 (select,i32) == 6_0 (xor,i32)
10_1 (select,i32) == 7_0 (shl,i32)
10_1 (select,i32) == 8_0 (lshr,i32)
10_1 (select,i32) == 9_0 (ashr,i32)
10_1 (select,i32) == 11_0 (zext,eq,i32)
10_1 (select,i32) == 12_0 (zext,ne,i32)
10_1 (select,i32) == 13_0 (zext,ult,i32)
10_1 (select,i32) == 14_0 (zext,slt,i32)
10_1 (select,i32) == 15_0 (zext,ule,i32)
10_1 (select,i32) == 16_0 (zext,sle,i32)
10_2 (select,i32) == 1_0 (add,i32)
10_2 (select,i32) == 2_0 (sub,i32)
10_2 (select,i32) == 3_0 (mul,i32)
10_2 (select,i32) == 4_0 (and,i32)
10_2 (select,i32) == 5_0 (or,i32)
10_2 (select,i32) == 6_0 (xor,i32)
10_2 (select,i32) == 7_0 (shl,i32)
10_2 (select,i32) == 8_0 (lshr,i32)
10_2 (select,i32) == 9_0 (ashr,i32)
10_2 (select,i32) == 11_0 (zext,eq,i32)
10_2 (select,i32) == 12_0 (zext,ne,i32)
10_2 (select,i32) == 13_0 (zext,ult,i32)
10_2 (select,i32) == 14_0 (zext,slt,i32)
10_2 (select,i32) == 15_0 (zext,ule,i32)
10_2 (select,i32) == 16_0 (zext,sle,i32)
10_3 (select,i32) == 1_0 (add,i32)
10_3 (select,i32) == 2_0 (sub,i32)
10_3 (select,i32) == 3_0 (mul,i32)
10_3 (select,i32) == 4_0 (and,i32)
10_3 (select,i32) == 5_0 (or,i32)
10_3 (select,i32) == 6_0 (xor,i32)
10_3 (select,i32) == 7_0 (shl,i32)
10_3 (select,i32) == 8_0 (lshr,i32)
10_3 (select,i32) == 9_0 (ashr,i32)
10_3 (select,i32) == 11_0 (zext,eq,i32)
10_3 (select,i32) == 12_0 (zext,ne,i32)
10_3 (select,i32) == 13_0 (zext,ult,i32)
10_3 (select,i32) == 14_0 (zext,slt,i32)
10_3 (select,i32) == 15_0 (zext,ule,i32)
10_3 (select,i32) == 16_0 (zext,sle,i32)
11_1 (eq,i32) == 1_0 (add,i32)
11_1 (eq,i32) == 2_0 (sub,i32)
11_1 (eq,i32) == 3_0 (mul,i32)
11_1 (eq,i32) == 4_0 (and,i32)
11_1 (eq,i32) == 5_0 (or,i32)
11_1 (eq,i32) == 6_0 (xor,i32)
11_1 (eq,i32) == 7_0 (shl,i32)
11_1 (eq,i32) == 8_0 (lshr,i32)
11_1 (eq,i32) == 9_0 (ashr,i32)
11_1 (eq,i32) == 10_0 (select,i32)
11_1 (eq,i32) == 12_0 (zext,ne,i32)
11_1 (eq,i32) == 13_0 (zext,ult,i32)
11_1 (eq,i32) == 14_0 (zext,slt,i32)
11_1 (eq,i32) == 15_0 (zext,ule,i32)
11_1 (eq,i32) == 16_0 (zext,sle,i32)
11_2 (eq,i32) == 1_0 (add,i32)
11_2 (eq,i32) == 2_0 (sub,i32)
11_2 (eq,i32) == 3_0 (mul,i32)
11_2 (eq,i32) == 4_0 (and,i32)
11_2 (eq,i32) == 5_0 (or,i32)
11_2 (eq,i32) == 6_0 (xor,i32)
11_2 (eq,i32) == 7_0 (shl,i32)
11_2 (eq,i32) == 8_0 (lshr,i32)
11_2 (eq,i32) == 9_0 (ashr,i32)
11_2 (eq,i32) == 10_0 (select,i32)
11_2 (eq,i32) == 12_0 (zext,ne,i32)
11_2 (eq,i32) == 13_0 (zext,ult,i32)
11_2 (eq,i32) == 14_0 (zext,slt,i32)
11_2 (eq,i32) == 15_0 (zext,ule,i32)
11_2 (eq,i32) == 16_0 (zext,sle,i32)
12_1 (ne,i32) == 1_0 (add,i32)
12_1 (ne,i32) == 2_0 (sub,i32)
12_1 (ne,i32) == 3_0 (mul,i32)
12_1 (ne,i32) == 4_0 (and,i32)
12_1 (ne,i32) == 5_0 (or,i32)
12_1 (ne,i32) == 6_0 (xor,i32)
12_1 (ne,i32) == 7_0 (shl,i32)
12_1 (ne,i32) == 8_0 (lshr,i32)
12_1 (ne,i32) == 9_0 (ashr,i32)
12_1 (ne,i32) == 10_0 (select,i32)
12_1 (ne,i32) == 11_0 (zext,eq,i32)
12_1 (ne,i32) == 13_0 (zext,ult,i32)
12_1 (ne,i32) == 14_0 (zext,slt,i32)
12_1 (ne,i32) == 15_0 (zext,ule,i32)
12_1 (ne,i32) == 16_0 (zext,sle,i32)
12_2 (ne,i32) == 1_0 (add,i32)
12_2 (ne,i32) == 2_0 (sub,i32)
12_2 (ne,i32) == 3_0 (mul,i32)
12_2 (ne,i32) == 4_0 (and,i32)
12_2 (ne,i32) == 5_0 (or,i32)
12_2 (ne,i32) == 6_0 (xor,i32)
12_2 (ne,i32) == 7_0 (shl,i32)
12_2 (ne,i32) == 8_0 (lshr,i32)
12_2 (ne,i32) == 9_0 (ashr,i32)
12_2 (ne,i32) == 10_0 (select,i32)
12_2 (ne,i32) == 11_0 (zext,eq,i32)
12_2 (ne,i32) == 13_0 (zext,ult,i32)
12_2 (ne,i32) == 14_0 (zext,slt,i32)
12_2 (ne,i32) == 15_0 (zext,ule,i32)
12_2 (ne,i32) == 16_0 (zext,sle,i32)
13_1 (ult,i32) == 1_0 (add,i32)
13_1 (ult,i32) == 2_0 (sub,i32)
13_1 (ult,i32) == 3_0 (mul,i32)
13_1 (ult,i32) == 4_0 (and,i32)
13_1 (ult,i32) == 5_0 (or,i32)
13_1 (ult,i32) == 6_0 (xor,i32)
13_1 (ult,i32) == 7_0 (shl,i32)
13_1 (ult,i32) == 8_0 (lshr,i32)
13_1 (ult,i32) == 9_0 (ashr,i32)
13_1 (ult,i32) == 10_0 (select,i32)
13_1 (ult,i32) == 11_0 (zext,eq,i32)
13_1 (ult,i32) == 12_0 (zext,ne,i32)
13_1 (ult,i32) == 14_0 (zext,slt,i32)
13_1 (ult,i32) == 15_0 (zext,ule,i32)
13_1 (ult,i32) == 16_0 (zext,sle,i32)
13_2 (ult,i32) == 1_0 (add,i32)
13_2 (ult,i32) == 2_0 (sub,i32)
13_2 (ult,i32) == 3_0 (mul,i32)
13_2 (ult,i32) == 4_0 (and,i32)
13_2 (ult,i32) == 5_0 (or,i32)
13_2 (ult,i32) == 6_0 (xor,i32)
13_2 (ult,i32) == 7_0 (shl,i32)
13_2 (ult,i32) == 8_0 (lshr,i32)
13_2 (ult,i32) == 9_0 (ashr,i32)
13_2 (ult,i32) == 10_0 (select,i32)
13_2 (ult,i32) == 11_0 (zext,eq,i32)
13_2 (ult,i32) == 12_0 (zext,ne,i32)
13_2 (ult,i32) == 14_0 (zext,slt,i32)
13_2 (ult,i32) == 15_0 (zext,ule,i32)
13_2 (ult,i32) == 16_0 (zext,sle,i32)
14_1 (slt,i32) == 1_0 (add,i32)
14_1 (slt,i32) == 2_0 (sub,i32)
14_1 (slt,i32) == 3_0 (mul,i32)
14_1 (slt,i32) == 4_0 (and,i32)
14_1 (slt,i32) == 5_0 (or,i32)
14_1 (slt,i32) == 6_0 (xor,i32)
14_1 (slt,i32) == 7_0 (shl,i32)
14_1 (slt,i32) == 8_0 (lshr,i32)
14_1 (slt,i32) == 9_0 (ashr,i32)
14_1 (slt,i32) == 10_0 (select,i32)
14_1 (slt,i32) == 11_0 (zext,eq,i32)
14_1 (slt,i32) == 12_0 (zext,ne,i32)
14_1 (slt,i32) == 13_0 (zext,ult,i32)
14_1 (slt,i32) == 15_0 (zext,ule,i32)
14_1 (slt,i32) == 16_0 (zext,sle,i32)
14_2 (slt,i32) == 1_0 (add,i32)
14_2 (slt,i32) == 2_0 (sub,i32)
14_2 (slt,i32) == 3_0 (mul,i32)
14_2 (slt,i32) == 4_0 (and,i32)
14_2 (slt,i32) == 5_0 (or,i32)
14_2 (slt,i32) == 6_0 (xor,i32)
14_2 (slt,i32) == 7_0 (shl,i32)
14_2 (slt,i32) == 8_0 (lshr,i32)
14_2 (slt,i32) == 9_0 (ashr,i32)
14_2 (slt,i32) == 10_0 (select,i32)
14_2 (slt,i32) == 11_0 (zext,eq,i32)
14_2 (slt,i32) == 12_0 (zext,ne,i32)
14_2 (slt,i32) == 13_0 (zext,ult,i32)
14_2 (slt,i32) == 15_0 (zext,ule,i32)
14_2 (slt,i32) == 16_0 (zext,sle,i32)
15_1 (ule,i32) == 1_0 (add,i32)
15_1 (ule,i32) == 2_0 (sub,i32)
15_1 (ule,i32) == 3_0 (mul,i32)
15_1 (ule,i32) == 4_0 (and,i32)
15_1 (ule,i32) == 5_0 (or,i32)
15_1 (ule,i32) == 6_0 (xor,i32)
15_1 (ule,i32) == 7_0 (shl,i32)
15_1 (ule,i32) == 8_0 (lshr,i32)
15_1 (ule,i32) == 9_0 (ashr,i32)
15_1 (ule,i32) == 10_0 (select,i32)
15_1 (ule,i32) == 11_0 (zext,eq,i32)
15_1 (ule,i32) == 12_0 (zext,ne,i32)
15_1 (ule,i32) == 13_0 (zext,ult,i32)
15_1 (ule,i32) == 14_0 (zext,slt,i32)
15_1 (ule,i32) == 16_0 (zext,sle,i32)
15_2 (ule,i32) == 1_0 (add,i32)
15_2 (ule,i32) == 2_0 (sub,i32)
15_2 (ule,i32) == 3_0 (mul,i32)
15_2 (ule,i32) == 4_0 (and,i32)
15_2 (ule,i32) == 5_0 (or,i32)
15_2 (ule,i32) == 6_0 (xor,i32)
15_2 (ule,i32) == 7_0 (shl,i32)
15_2 (ule,i32) == 8_0 (lshr,i32)
15_2 (ule,i32) == 9_0 (ashr,i32)
15_2 (ule,i32) == 10_0 (select,i32)
15_2 (ule,i32) == 11_0 (zext,eq,i32)
15_2 (ule,i32) == 12_0 (zext,ne,i32)
15_2 (ule,i32) == 13_0 (zext,ult,i32)
15_2 (ule,i32) == 14_0 (zext,slt,i32)
15_2 (ule,i32) == 16_0 (zext,sle,i32)
16_1 (sle,i32) == 1_0 (add,i32)
16_1 (sle,i32) == 2_0 (sub,i32)
16_1 (sle,i32) == 3_0 (mul,i32)
16_1 (sle,i32) == 4_0 (and,i32)
16_1 (sle,i32) == 5_0 (or,i32)
16_1 (sle,i32) == 6_0 (xor,i32)
16_1 (sle,i32) == 7_0 (shl,i32)
16_1 (sle,i32) == 8_0 (lshr,i32)
16_1 (sle,i32) == 9_0 (ashr,i32)
16_1 (sle,i32) == 10_0 (select,i32)
16_1 (sle,i32) == 11_0 (zext,eq,i32)
16_1 (sle,i32) == 12_0 (zext,ne,i32)
16_1 (sle,i32) == 13_0 (zext,ult,i32)
16_1 (sle,i32) == 14_0 (zext,slt,i32)
16_1 (sle,i32) == 15_0 (zext,ule,i32)
16_2 (sle,i32) == 1_0 (add,i32)
16_2 (sle,i32) == 2_0 (sub,i32)
16_2 (sle,i32) == 3_0 (mul,i32)
16_2 (sle,i32) == 4_0 (and,i32)
16_2 (sle,i32) == 5_0 (or,i32)
16_2 (sle,i32) == 6_0 (xor,i32)
16_2 (sle,i32) == 7_0 (shl,i32)
16_2 (sle,i32) == 8_0 (lshr,i32)
16_2 (sle,i32) == 9_0 (ashr,i32)
16_2 (sle,i32) == 10_0 (select,i32)
16_2 (sle,i32) == 11_0 (zext,eq,i32)
16_2 (sle,i32) == 12_0 (zext,ne,i32)
16_2 (sle,i32) == 13_0 (zext,ult,i32)
16_2 (sle,i32) == 14_0 (zext,slt,i32)
16_2 (sle,i32) == 15_0 (zext,ule,i32)
1_0 (add,i32) == 17_0 (output,i32)
2_0 (sub,i32) == 17_0 (output,i32)
3_0 (mul,i32) == 17_0 (output,i32)
4_0 (and,i32) == 17_0 (output,i32)
5_0 (or,i32) == 17_0 (output,i32)
6_0 (xor,i32) == 17_0 (output,i32)
7_0 (shl,i32) == 17_0 (output,i32)
8_0 (lshr,i32) == 17_0 (output,i32)
9_0 (ashr,i32) == 17_0 (output,i32)
10_0 (select,i32) == 17_0 (output,i32)
11_0 (zext,eq,i32) == 17_0 (output,i32)
12_0 (zext,ne,i32) == 17_0 (output,i32)
13_0 (zext,ult,i32) == 17_0 (output,i32)
14_0 (zext,slt,i32) == 17_0 (output,i32)
15_0 (zext,ule,i32) == 17_0 (output,i32)
16_0 (zext,sle,i32) == 17_0 (output,i32)
; no valid wiring found
; starting synthesis for LHS
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = mulnsw %0, %0
infer %1
inputs: 1, constants: 2
N: 3, M: 19
default width: 32
output width: 32
component library: add (32, { 32 32 }); sub (32, { 32 32 }); mul (32, { 32 32 }); and (32, { 32 32 }); or (32, { 32 32 }); xor (32, { 32 32 }); shl (32, { 32 32 }); lshr (32, { 32 32 }); ashr (32, { 32 32 }); select (32, { 1 32 32 }); eq (1, { 32 32 }); ne (1, { 32 32 }); ult (1, { 32 32 }); slt (1, { 32 32 }); ule (1, { 32 32 }); sle (1, { 32 32 }); 
const components: const (32); const (32); 
I: 0_1 (input,i32) 0_2 (const,i32) 0_3 (const,i32) 
P: 1_1 (add,i32) 1_2 (add,i32) 2_1 (sub,i32) 2_2 (sub,i32) 3_1 (mul,i32) 3_2 (mul,i32) 4_1 (and,i32) 4_2 (and,i32) 5_1 (or,i32) 5_2 (or,i32) 6_1 (xor,i32) 6_2 (xor,i32) 7_1 (shl,i32) 7_2 (shl,i32) 8_1 (lshr,i32) 8_2 (lshr,i32) 9_1 (ashr,i32) 9_2 (ashr,i32) 10_1 (select,i32) 10_2 (select,i32) 10_3 (select,i32) 11_1 (eq,i32) 11_2 (eq,i32) 12_1 (ne,i32) 12_2 (ne,i32) 13_1 (ult,i32) 13_2 (ult,i32) 14_1 (slt,i32) 14_2 (slt,i32) 15_1 (ule,i32) 15_2 (ule,i32) 16_1 (sle,i32) 16_2 (sle,i32) 
R: 1_0 (add,i32) 2_0 (sub,i32) 3_0 (mul,i32) 4_0 (and,i32) 5_0 (or,i32) 6_0 (xor,i32) 7_0 (shl,i32) 8_0 (lshr,i32) 9_0 (ashr,i32) 10_0 (select,i32) 11_0 (zext,eq,i32) 12_0 (zext,ne,i32) 13_0 (zext,ult,i32) 14_0 (zext,slt,i32) 15_0 (zext,ule,i32) 16_0 (zext,sle,i32) 
L: 0_1 (input,i32) 0_2 (const,i32) 0_3 (const,i32) 1_1 (add,i32) 1_2 (add,i32) 2_1 (sub,i32) 2_2 (sub,i32) 3_1 (mul,i32) 3_2 (mul,i32) 4_1 (and,i32) 4_2 (and,i32) 5_1 (or,i32) 5_2 (or,i32) 6_1 (xor,i32) 6_2 (xor,i32) 7_1 (shl,i32) 7_2 (shl,i32) 8_1 (lshr,i32) 8_2 (lshr,i32) 9_1 (ashr,i32) 9_2 (ashr,i32) 10_1 (select,i32) 10_2 (select,i32) 10_3 (select,i32) 11_1 (eq,i32) 11_2 (eq,i32) 12_1 (ne,i32) 12_2 (ne,i32) 13_1 (ult,i32) 13_2 (ult,i32) 14_1 (slt,i32) 14_2 (slt,i32) 15_1 (ule,i32) 15_2 (ule,i32) 16_1 (sle,i32) 16_2 (sle,i32) 1_0 (add,i32) 2_0 (sub,i32) 3_0 (mul,i32) 4_0 (and,i32) 5_0 (or,i32) 6_0 (xor,i32) 7_0 (shl,i32) 8_0 (lshr,i32) 9_0 (ashr,i32) 10_0 (select,i32) 11_0 (zext,eq,i32) 12_0 (zext,ne,i32) 13_0 (zext,ult,i32) 14_0 (zext,slt,i32) 15_0 (zext,ule,i32) 16_0 (zext,sle,i32) 17_0 (output,i32) 
O: 17_0 (output,i32)
consistency constraints:
1_0 (add,i32) != 2_0 (sub,i32)
1_0 (add,i32) != 3_0 (mul,i32)
1_0 (add,i32) != 4_0 (and,i32)
1_0 (add,i32) != 5_0 (or,i32)
1_0 (add,i32) != 6_0 (xor,i32)
1_0 (add,i32) != 7_0 (shl,i32)
1_0 (add,i32) != 8_0 (lshr,i32)
1_0 (add,i32) != 9_0 (ashr,i32)
1_0 (add,i32) != 10_0 (select,i32)
1_0 (add,i32) != 11_0 (zext,eq,i32)
1_0 (add,i32) != 12_0 (zext,ne,i32)
1_0 (add,i32) != 13_0 (zext,ult,i32)
1_0 (add,i32) != 14_0 (zext,slt,i32)
1_0 (add,i32) != 15_0 (zext,ule,i32)
1_0 (add,i32) != 16_0 (zext,sle,i32)
2_0 (sub,i32) != 3_0 (mul,i32)
2_0 (sub,i32) != 4_0 (and,i32)
2_0 (sub,i32) != 5_0 (or,i32)
2_0 (sub,i32) != 6_0 (xor,i32)
2_0 (sub,i32) != 7_0 (shl,i32)
2_0 (sub,i32) != 8_0 (lshr,i32)
2_0 (sub,i32) != 9_0 (ashr,i32)
2_0 (sub,i32) != 10_0 (select,i32)
2_0 (sub,i32) != 11_0 (zext,eq,i32)
2_0 (sub,i32) != 12_0 (zext,ne,i32)
2_0 (sub,i32) != 13_0 (zext,ult,i32)
2_0 (sub,i32) != 14_0 (zext,slt,i32)
2_0 (sub,i32) != 15_0 (zext,ule,i32)
2_0 (sub,i32) != 16_0 (zext,sle,i32)
3_0 (mul,i32) != 4_0 (and,i32)
3_0 (mul,i32) != 5_0 (or,i32)
3_0 (mul,i32) != 6_0 (xor,i32)
3_0 (mul,i32) != 7_0 (shl,i32)
3_0 (mul,i32) != 8_0 (lshr,i32)
3_0 (mul,i32) != 9_0 (ashr,i32)
3_0 (mul,i32) != 10_0 (select,i32)
3_0 (mul,i32) != 11_0 (zext,eq,i32)
3_0 (mul,i32) != 12_0 (zext,ne,i32)
3_0 (mul,i32) != 13_0 (zext,ult,i32)
3_0 (mul,i32) != 14_0 (zext,slt,i32)
3_0 (mul,i32) != 15_0 (zext,ule,i32)
3_0 (mul,i32) != 16_0 (zext,sle,i32)
4_0 (and,i32) != 5_0 (or,i32)
4_0 (and,i32) != 6_0 (xor,i32)
4_0 (and,i32) != 7_0 (shl,i32)
4_0 (and,i32) != 8_0 (lshr,i32)
4_0 (and,i32) != 9_0 (ashr,i32)
4_0 (and,i32) != 10_0 (select,i32)
4_0 (and,i32) != 11_0 (zext,eq,i32)
4_0 (and,i32) != 12_0 (zext,ne,i32)
4_0 (and,i32) != 13_0 (zext,ult,i32)
4_0 (and,i32) != 14_0 (zext,slt,i32)
4_0 (and,i32) != 15_0 (zext,ule,i32)
4_0 (and,i32) != 16_0 (zext,sle,i32)
5_0 (or,i32) != 6_0 (xor,i32)
5_0 (or,i32) != 7_0 (shl,i32)
5_0 (or,i32) != 8_0 (lshr,i32)
5_0 (or,i32) != 9_0 (ashr,i32)
5_0 (or,i32) != 10_0 (select,i32)
5_0 (or,i32) != 11_0 (zext,eq,i32)
5_0 (or,i32) != 12_0 (zext,ne,i32)
5_0 (or,i32) != 13_0 (zext,ult,i32)
5_0 (or,i32) != 14_0 (zext,slt,i32)
5_0 (or,i32) != 15_0 (zext,ule,i32)
5_0 (or,i32) != 16_0 (zext,sle,i32)
6_0 (xor,i32) != 7_0 (shl,i32)
6_0 (xor,i32) != 8_0 (lshr,i32)
6_0 (xor,i32) != 9_0 (ashr,i32)
6_0 (xor,i32) != 10_0 (select,i32)
6_0 (xor,i32) != 11_0 (zext,eq,i32)
6_0 (xor,i32) != 12_0 (zext,ne,i32)
6_0 (xor,i32) != 13_0 (zext,ult,i32)
6_0 (xor,i32) != 14_0 (zext,slt,i32)
6_0 (xor,i32) != 15_0 (zext,ule,i32)
6_0 (xor,i32) != 16_0 (zext,sle,i32)
7_0 (shl,i32) != 8_0 (lshr,i32)
7_0 (shl,i32) != 9_0 (ashr,i32)
7_0 (shl,i32) != 10_0 (select,i32)
7_0 (shl,i32) != 11_0 (zext,eq,i32)
7_0 (shl,i32) != 12_0 (zext,ne,i32)
7_0 (shl,i32) != 13_0 (zext,ult,i32)
7_0 (shl,i32) != 14_0 (zext,slt,i32)
7_0 (shl,i32) != 15_0 (zext,ule,i32)
7_0 (shl,i32) != 16_0 (zext,sle,i32)
8_0 (lshr,i32) != 9_0 (ashr,i32)
8_0 (lshr,i32) != 10_0 (select,i32)
8_0 (lshr,i32) != 11_0 (zext,eq,i32)
8_0 (lshr,i32) != 12_0 (zext,ne,i32)
8_0 (lshr,i32) != 13_0 (zext,ult,i32)
8_0 (lshr,i32) != 14_0 (zext,slt,i32)
8_0 (lshr,i32) != 15_0 (zext,ule,i32)
8_0 (lshr,i32) != 16_0 (zext,sle,i32)
9_0 (ashr,i32) != 10_0 (select,i32)
9_0 (ashr,i32) != 11_0 (zext,eq,i32)
9_0 (ashr,i32) != 12_0 (zext,ne,i32)
9_0 (ashr,i32) != 13_0 (zext,ult,i32)
9_0 (ashr,i32) != 14_0 (zext,slt,i32)
9_0 (ashr,i32) != 15_0 (zext,ule,i32)
9_0 (ashr,i32) != 16_0 (zext,sle,i32)
10_0 (select,i32) != 11_0 (zext,eq,i32)
10_0 (select,i32) != 12_0 (zext,ne,i32)
10_0 (select,i32) != 13_0 (zext,ult,i32)
10_0 (select,i32) != 14_0 (zext,slt,i32)
10_0 (select,i32) != 15_0 (zext,ule,i32)
10_0 (select,i32) != 16_0 (zext,sle,i32)
11_0 (zext,eq,i32) != 12_0 (zext,ne,i32)
11_0 (zext,eq,i32) != 13_0 (zext,ult,i32)
11_0 (zext,eq,i32) != 14_0 (zext,slt,i32)
11_0 (zext,eq,i32) != 15_0 (zext,ule,i32)
11_0 (zext,eq,i32) != 16_0 (zext,sle,i32)
12_0 (zext,ne,i32) != 13_0 (zext,ult,i32)
12_0 (zext,ne,i32) != 14_0 (zext,slt,i32)
12_0 (zext,ne,i32) != 15_0 (zext,ule,i32)
12_0 (zext,ne,i32) != 16_0 (zext,sle,i32)
13_0 (zext,ult,i32) != 14_0 (zext,slt,i32)
13_0 (zext,ult,i32) != 15_0 (zext,ule,i32)
13_0 (zext,ult,i32) != 16_0 (zext,sle,i32)
14_0 (zext,slt,i32) != 15_0 (zext,ule,i32)
14_0 (zext,slt,i32) != 16_0 (zext,sle,i32)
15_0 (zext,ule,i32) != 16_0 (zext,sle,i32)
acyclicity constraints:
1_1 (add,i32) < 1_0
1_2 (add,i32) < 1_0
2_1 (sub,i32) < 2_0
2_2 (sub,i32) < 2_0
3_1 (mul,i32) < 3_0
3_2 (mul,i32) < 3_0
4_1 (and,i32) < 4_0
4_2 (and,i32) < 4_0
5_1 (or,i32) < 5_0
5_2 (or,i32) < 5_0
6_1 (xor,i32) < 6_0
6_2 (xor,i32) < 6_0
7_1 (shl,i32) < 7_0
7_2 (shl,i32) < 7_0
8_1 (lshr,i32) < 8_0
8_2 (lshr,i32) < 8_0
9_1 (ashr,i32) < 9_0
9_2 (ashr,i32) < 9_0
10_1 (select,i32) < 10_0
10_2 (select,i32) < 10_0
10_3 (select,i32) < 10_0
11_1 (eq,i32) < 11_0
11_2 (eq,i32) < 11_0
12_1 (ne,i32) < 12_0
12_2 (ne,i32) < 12_0
13_1 (ult,i32) < 13_0
13_2 (ult,i32) < 13_0
14_1 (slt,i32) < 14_0
14_2 (slt,i32) < 14_0
15_1 (ule,i32) < 15_0
15_2 (ule,i32) < 15_0
16_1 (sle,i32) < 16_0
16_2 (sle,i32) < 16_0
location variable constraints:
0 <= 1_1 (add,i32) < 19
0 <= 1_2 (add,i32) < 19
0 <= 2_1 (sub,i32) < 19
0 <= 2_2 (sub,i32) < 19
0 <= 3_1 (mul,i32) < 19
0 <= 3_2 (mul,i32) < 19
0 <= 4_1 (and,i32) < 19
0 <= 4_2 (and,i32) < 19
0 <= 5_1 (or,i32) < 19
0 <= 5_2 (or,i32) < 19
0 <= 6_1 (xor,i32) < 19
0 <= 6_2 (xor,i32) < 19
0 <= 7_1 (shl,i32) < 19
0 <= 7_2 (shl,i32) < 19
0 <= 8_1 (lshr,i32) < 19
0 <= 8_2 (lshr,i32) < 19
0 <= 9_1 (ashr,i32) < 19
0 <= 9_2 (ashr,i32) < 19
0 <= 10_1 (select,i32) < 19
0 <= 10_2 (select,i32) < 19
0 <= 10_3 (select,i32) < 19
0 <= 11_1 (eq,i32) < 19
0 <= 11_2 (eq,i32) < 19
0 <= 12_1 (ne,i32) < 19
0 <= 12_2 (ne,i32) < 19
0 <= 13_1 (ult,i32) < 19
0 <= 13_2 (ult,i32) < 19
0 <= 14_1 (slt,i32) < 19
0 <= 14_2 (slt,i32) < 19
0 <= 15_1 (ule,i32) < 19
0 <= 15_2 (ule,i32) < 19
0 <= 16_1 (sle,i32) < 19
0 <= 16_2 (sle,i32) < 19
0 <= 0_1 (input,i32) < 19
0 <= 0_2 (const,i32) < 19
0 <= 0_3 (const,i32) < 19
3 <= 1_0 (add,i32) < 19
3 <= 2_0 (sub,i32) < 19
3 <= 3_0 (mul,i32) < 19
3 <= 4_0 (and,i32) < 19
3 <= 5_0 (or,i32) < 19
3 <= 6_0 (xor,i32) < 19
3 <= 7_0 (shl,i32) < 19
3 <= 8_0 (lshr,i32) < 19
3 <= 9_0 (ashr,i32) < 19
3 <= 10_0 (select,i32) < 19
3 <= 11_0 (zext,eq,i32) < 19
3 <= 12_0 (zext,ne,i32) < 19
3 <= 13_0 (zext,ult,i32) < 19
3 <= 14_0 (zext,slt,i32) < 19
3 <= 15_0 (zext,ule,i32) < 19
3 <= 16_0 (zext,sle,i32) < 19
component input constraints:
1_1 (add,i32) == 0_1 (input,i32) || 1_1 (add,i32) == 0_2 (const,i32) || 1_1 (add,i32) == 0_3 (const,i32) || 1_1 (add,i32) == 2_0 (sub,i32) || 1_1 (add,i32) == 3_0 (mul,i32) || 1_1 (add,i32) == 4_0 (and,i32) || 1_1 (add,i32) == 5_0 (or,i32) || 1_1 (add,i32) == 6_0 (xor,i32) || 1_1 (add,i32) == 7_0 (shl,i32) || 1_1 (add,i32) == 8_0 (lshr,i32) || 1_1 (add,i32) == 9_0 (ashr,i32) || 1_1 (add,i32) == 10_0 (select,i32) || 1_1 (add,i32) == 11_0 (zext,eq,i32) || 1_1 (add,i32) == 12_0 (zext,ne,i32) || 1_1 (add,i32) == 13_0 (zext,ult,i32) || 1_1 (add,i32) == 14_0 (zext,slt,i32) || 1_1 (add,i32) == 15_0 (zext,ule,i32) || 1_1 (add,i32) == 16_0 (zext,sle,i32) || false
1_2 (add,i32) == 0_1 (input,i32) || 1_2 (add,i32) == 0_2 (const,i32) || 1_2 (add,i32) == 0_3 (const,i32) || 1_2 (add,i32) == 2_0 (sub,i32) || 1_2 (add,i32) == 3_0 (mul,i32) || 1_2 (add,i32) == 4_0 (and,i32) || 1_2 (add,i32) == 5_0 (or,i32) || 1_2 (add,i32) == 6_0 (xor,i32) || 1_2 (add,i32) == 7_0 (shl,i32) || 1_2 (add,i32) == 8_0 (lshr,i32) || 1_2 (add,i32) == 9_0 (ashr,i32) || 1_2 (add,i32) == 10_0 (select,i32) || 1_2 (add,i32) == 11_0 (zext,eq,i32) || 1_2 (add,i32) == 12_0 (zext,ne,i32) || 1_2 (add,i32) == 13_0 (zext,ult,i32) || 1_2 (add,i32) == 14_0 (zext,slt,i32) || 1_2 (add,i32) == 15_0 (zext,ule,i32) || 1_2 (add,i32) == 16_0 (zext,sle,i32) || false
2_1 (sub,i32) == 0_1 (input,i32) || 2_1 (sub,i32) == 0_2 (const,i32) || 2_1 (sub,i32) == 0_3 (const,i32) || 2_1 (sub,i32) == 1_0 (add,i32) || 2_1 (sub,i32) == 3_0 (mul,i32) || 2_1 (sub,i32) == 4_0 (and,i32) || 2_1 (sub,i32) == 5_0 (or,i32) || 2_1 (sub,i32) == 6_0 (xor,i32) || 2_1 (sub,i32) == 7_0 (shl,i32) || 2_1 (sub,i32) == 8_0 (lshr,i32) || 2_1 (sub,i32) == 9_0 (ashr,i32) || 2_1 (sub,i32) == 10_0 (select,i32) || 2_1 (sub,i32) == 11_0 (zext,eq,i32) || 2_1 (sub,i32) == 12_0 (zext,ne,i32) || 2_1 (sub,i32) == 13_0 (zext,ult,i32) || 2_1 (sub,i32) == 14_0 (zext,slt,i32) || 2_1 (sub,i32) == 15_0 (zext,ule,i32) || 2_1 (sub,i32) == 16_0 (zext,sle,i32) || false
2_2 (sub,i32) == 0_1 (input,i32) || 2_2 (sub,i32) == 0_2 (const,i32) || 2_2 (sub,i32) == 0_3 (const,i32) || 2_2 (sub,i32) == 1_0 (add,i32) || 2_2 (sub,i32) == 3_0 (mul,i32) || 2_2 (sub,i32) == 4_0 (and,i32) || 2_2 (sub,i32) == 5_0 (or,i32) || 2_2 (sub,i32) == 6_0 (xor,i32) || 2_2 (sub,i32) == 7_0 (shl,i32) || 2_2 (sub,i32) == 8_0 (lshr,i32) || 2_2 (sub,i32) == 9_0 (ashr,i32) || 2_2 (sub,i32) == 10_0 (select,i32) || 2_2 (sub,i32) == 11_0 (zext,eq,i32) || 2_2 (sub,i32) == 12_0 (zext,ne,i32) || 2_2 (sub,i32) == 13_0 (zext,ult,i32) || 2_2 (sub,i32) == 14_0 (zext,slt,i32) || 2_2 (sub,i32) == 15_0 (zext,ule,i32) || 2_2 (sub,i32) == 16_0 (zext,sle,i32) || false
3_1 (mul,i32) == 0_1 (input,i32) || 3_1 (mul,i32) == 0_2 (const,i32) || 3_1 (mul,i32) == 0_3 (const,i32) || 3_1 (mul,i32) == 1_0 (add,i32) || 3_1 (mul,i32) == 2_0 (sub,i32) || 3_1 (mul,i32) == 4_0 (and,i32) || 3_1 (mul,i32) == 5_0 (or,i32) || 3_1 (mul,i32) == 6_0 (xor,i32) || 3_1 (mul,i32) == 7_0 (shl,i32) || 3_1 (mul,i32) == 8_0 (lshr,i32) || 3_1 (mul,i32) == 9_0 (ashr,i32) || 3_1 (mul,i32) == 10_0 (select,i32) || 3_1 (mul,i32) == 11_0 (zext,eq,i32) || 3_1 (mul,i32) == 12_0 (zext,ne,i32) || 3_1 (mul,i32) == 13_0 (zext,ult,i32) || 3_1 (mul,i32) == 14_0 (zext,slt,i32) || 3_1 (mul,i32) == 15_0 (zext,ule,i32) || 3_1 (mul,i32) == 16_0 (zext,sle,i32) || false
3_2 (mul,i32) == 0_1 (input,i32) || 3_2 (mul,i32) == 0_2 (const,i32) || 3_2 (mul,i32) == 0_3 (const,i32) || 3_2 (mul,i32) == 1_0 (add,i32) || 3_2 (mul,i32) == 2_0 (sub,i32) || 3_2 (mul,i32) == 4_0 (and,i32) || 3_2 (mul,i32) == 5_0 (or,i32) || 3_2 (mul,i32) == 6_0 (xor,i32) || 3_2 (mul,i32) == 7_0 (shl,i32) || 3_2 (mul,i32) == 8_0 (lshr,i32) || 3_2 (mul,i32) == 9_0 (ashr,i32) || 3_2 (mul,i32) == 10_0 (select,i32) || 3_2 (mul,i32) == 11_0 (zext,eq,i32) || 3_2 (mul,i32) == 12_0 (zext,ne,i32) || 3_2 (mul,i32) == 13_0 (zext,ult,i32) || 3_2 (mul,i32) == 14_0 (zext,slt,i32) || 3_2 (mul,i32) == 15_0 (zext,ule,i32) || 3_2 (mul,i32) == 16_0 (zext,sle,i32) || false
4_1 (and,i32) == 0_1 (input,i32) || 4_1 (and,i32) == 0_2 (const,i32) || 4_1 (and,i32) == 0_3 (const,i32) || 4_1 (and,i32) == 1_0 (add,i32) || 4_1 (and,i32) == 2_0 (sub,i32) || 4_1 (and,i32) == 3_0 (mul,i32) || 4_1 (and,i32) == 5_0 (or,i32) || 4_1 (and,i32) == 6_0 (xor,i32) || 4_1 (and,i32) == 7_0 (shl,i32) || 4_1 (and,i32) == 8_0 (lshr,i32) || 4_1 (and,i32) == 9_0 (ashr,i32) || 4_1 (and,i32) == 10_0 (select,i32) || 4_1 (and,i32) == 11_0 (zext,eq,i32) || 4_1 (and,i32) == 12_0 (zext,ne,i32) || 4_1 (and,i32) == 13_0 (zext,ult,i32) || 4_1 (and,i32) == 14_0 (zext,slt,i32) || 4_1 (and,i32) == 15_0 (zext,ule,i32) || 4_1 (and,i32) == 16_0 (zext,sle,i32) || false
4_2 (and,i32) == 0_1 (input,i32) || 4_2 (and,i32) == 0_2 (const,i32) || 4_2 (and,i32) == 0_3 (const,i32) || 4_2 (and,i32) == 1_0 (add,i32) || 4_2 (and,i32) == 2_0 (sub,i32) || 4_2 (and,i32) == 3_0 (mul,i32) || 4_2 (and,i32) == 5_0 (or,i32) || 4_2 (and,i32) == 6_0 (xor,i32) || 4_2 (and,i32) == 7_0 (shl,i32) || 4_2 (and,i32) == 8_0 (lshr,i32) || 4_2 (and,i32) == 9_0 (ashr,i32) || 4_2 (and,i32) == 10_0 (select,i32) || 4_2 (and,i32) == 11_0 (zext,eq,i32) || 4_2 (and,i32) == 12_0 (zext,ne,i32) || 4_2 (and,i32) == 13_0 (zext,ult,i32) || 4_2 (and,i32) == 14_0 (zext,slt,i32) || 4_2 (and,i32) == 15_0 (zext,ule,i32) || 4_2 (and,i32) == 16_0 (zext,sle,i32) || false
5_1 (or,i32) == 0_1 (input,i32) || 5_1 (or,i32) == 0_2 (const,i32) || 5_1 (or,i32) == 0_3 (const,i32) || 5_1 (or,i32) == 1_0 (add,i32) || 5_1 (or,i32) == 2_0 (sub,i32) || 5_1 (or,i32) == 3_0 (mul,i32) || 5_1 (or,i32) == 4_0 (and,i32) || 5_1 (or,i32) == 6_0 (xor,i32) || 5_1 (or,i32) == 7_0 (shl,i32) || 5_1 (or,i32) == 8_0 (lshr,i32) || 5_1 (or,i32) == 9_0 (ashr,i32) || 5_1 (or,i32) == 10_0 (select,i32) || 5_1 (or,i32) == 11_0 (zext,eq,i32) || 5_1 (or,i32) == 12_0 (zext,ne,i32) || 5_1 (or,i32) == 13_0 (zext,ult,i32) || 5_1 (or,i32) == 14_0 (zext,slt,i32) || 5_1 (or,i32) == 15_0 (zext,ule,i32) || 5_1 (or,i32) == 16_0 (zext,sle,i32) || false
5_2 (or,i32) == 0_1 (input,i32) || 5_2 (or,i32) == 0_2 (const,i32) || 5_2 (or,i32) == 0_3 (const,i32) || 5_2 (or,i32) == 1_0 (add,i32) || 5_2 (or,i32) == 2_0 (sub,i32) || 5_2 (or,i32) == 3_0 (mul,i32) || 5_2 (or,i32) == 4_0 (and,i32) || 5_2 (or,i32) == 6_0 (xor,i32) || 5_2 (or,i32) == 7_0 (shl,i32) || 5_2 (or,i32) == 8_0 (lshr,i32) || 5_2 (or,i32) == 9_0 (ashr,i32) || 5_2 (or,i32) == 10_0 (select,i32) || 5_2 (or,i32) == 11_0 (zext,eq,i32) || 5_2 (or,i32) == 12_0 (zext,ne,i32) || 5_2 (or,i32) == 13_0 (zext,ult,i32) || 5_2 (or,i32) == 14_0 (zext,slt,i32) || 5_2 (or,i32) == 15_0 (zext,ule,i32) || 5_2 (or,i32) == 16_0 (zext,sle,i32) || false
6_1 (xor,i32) == 0_1 (input,i32) || 6_1 (xor,i32) == 0_2 (const,i32) || 6_1 (xor,i32) == 0_3 (const,i32) || 6_1 (xor,i32) == 1_0 (add,i32) || 6_1 (xor,i32) == 2_0 (sub,i32) || 6_1 (xor,i32) == 3_0 (mul,i32) || 6_1 (xor,i32) == 4_0 (and,i32) || 6_1 (xor,i32) == 5_0 (or,i32) || 6_1 (xor,i32) == 7_0 (shl,i32) || 6_1 (xor,i32) == 8_0 (lshr,i32) || 6_1 (xor,i32) == 9_0 (ashr,i32) || 6_1 (xor,i32) == 10_0 (select,i32) || 6_1 (xor,i32) == 11_0 (zext,eq,i32) || 6_1 (xor,i32) == 12_0 (zext,ne,i32) || 6_1 (xor,i32) == 13_0 (zext,ult,i32) || 6_1 (xor,i32) == 14_0 (zext,slt,i32) || 6_1 (xor,i32) == 15_0 (zext,ule,i32) || 6_1 (xor,i32) == 16_0 (zext,sle,i32) || false
6_2 (xor,i32) == 0_1 (input,i32) || 6_2 (xor,i32) == 0_2 (const,i32) || 6_2 (xor,i32) == 0_3 (const,i32) || 6_2 (xor,i32) == 1_0 (add,i32) || 6_2 (xor,i32) == 2_0 (sub,i32) || 6_2 (xor,i32) == 3_0 (mul,i32) || 6_2 (xor,i32) == 4_0 (and,i32) || 6_2 (xor,i32) == 5_0 (or,i32) || 6_2 (xor,i32) == 7_0 (shl,i32) || 6_2 (xor,i32) == 8_0 (lshr,i32) || 6_2 (xor,i32) == 9_0 (ashr,i32) || 6_2 (xor,i32) == 10_0 (select,i32) || 6_2 (xor,i32) == 11_0 (zext,eq,i32) || 6_2 (xor,i32) == 12_0 (zext,ne,i32) || 6_2 (xor,i32) == 13_0 (zext,ult,i32) || 6_2 (xor,i32) == 14_0 (zext,slt,i32) || 6_2 (xor,i32) == 15_0 (zext,ule,i32) || 6_2 (xor,i32) == 16_0 (zext,sle,i32) || false
7_1 (shl,i32) == 0_1 (input,i32) || 7_1 (shl,i32) == 0_2 (const,i32) || 7_1 (shl,i32) == 0_3 (const,i32) || 7_1 (shl,i32) == 1_0 (add,i32) || 7_1 (shl,i32) == 2_0 (sub,i32) || 7_1 (shl,i32) == 3_0 (mul,i32) || 7_1 (shl,i32) == 4_0 (and,i32) || 7_1 (shl,i32) == 5_0 (or,i32) || 7_1 (shl,i32) == 6_0 (xor,i32) || 7_1 (shl,i32) == 8_0 (lshr,i32) || 7_1 (shl,i32) == 9_0 (ashr,i32) || 7_1 (shl,i32) == 10_0 (select,i32) || 7_1 (shl,i32) == 11_0 (zext,eq,i32) || 7_1 (shl,i32) == 12_0 (zext,ne,i32) || 7_1 (shl,i32) == 13_0 (zext,ult,i32) || 7_1 (shl,i32) == 14_0 (zext,slt,i32) || 7_1 (shl,i32) == 15_0 (zext,ule,i32) || 7_1 (shl,i32) == 16_0 (zext,sle,i32) || false
7_2 (shl,i32) == 0_1 (input,i32) || 7_2 (shl,i32) == 0_2 (const,i32) || 7_2 (shl,i32) == 0_3 (const,i32) || 7_2 (shl,i32) == 1_0 (add,i32) || 7_2 (shl,i32) == 2_0 (sub,i32) || 7_2 (shl,i32) == 3_0 (mul,i32) || 7_2 (shl,i32) == 4_0 (and,i32) || 7_2 (shl,i32) == 5_0 (or,i32) || 7_2 (shl,i32) == 6_0 (xor,i32) || 7_2 (shl,i32) == 8_0 (lshr,i32) || 7_2 (shl,i32) == 9_0 (ashr,i32) || 7_2 (shl,i32) == 10_0 (select,i32) || 7_2 (shl,i32) == 11_0 (zext,eq,i32) || 7_2 (shl,i32) == 12_0 (zext,ne,i32) || 7_2 (shl,i32) == 13_0 (zext,ult,i32) || 7_2 (shl,i32) == 14_0 (zext,slt,i32) || 7_2 (shl,i32) == 15_0 (zext,ule,i32) || 7_2 (shl,i32) == 16_0 (zext,sle,i32) || false
8_1 (lshr,i32) == 0_1 (input,i32) || 8_1 (lshr,i32) == 0_2 (const,i32) || 8_1 (lshr,i32) == 0_3 (const,i32) || 8_1 (lshr,i32) == 1_0 (add,i32) || 8_1 (lshr,i32) == 2_0 (sub,i32) || 8_1 (lshr,i32) == 3_0 (mul,i32) || 8_1 (lshr,i32) == 4_0 (and,i32) || 8_1 (lshr,i32) == 5_0 (or,i32) || 8_1 (lshr,i32) == 6_0 (xor,i32) || 8_1 (lshr,i32) == 7_0 (shl,i32) || 8_1 (lshr,i32) == 9_0 (ashr,i32) || 8_1 (lshr,i32) == 10_0 (select,i32) || 8_1 (lshr,i32) == 11_0 (zext,eq,i32) || 8_1 (lshr,i32) == 12_0 (zext,ne,i32) || 8_1 (lshr,i32) == 13_0 (zext,ult,i32) || 8_1 (lshr,i32) == 14_0 (zext,slt,i32) || 8_1 (lshr,i32) == 15_0 (zext,ule,i32) || 8_1 (lshr,i32) == 16_0 (zext,sle,i32) || false
8_2 (lshr,i32) == 0_1 (input,i32) || 8_2 (lshr,i32) == 0_2 (const,i32) || 8_2 (lshr,i32) == 0_3 (const,i32) || 8_2 (lshr,i32) == 1_0 (add,i32) || 8_2 (lshr,i32) == 2_0 (sub,i32) || 8_2 (lshr,i32) == 3_0 (mul,i32) || 8_2 (lshr,i32) == 4_0 (and,i32) || 8_2 (lshr,i32) == 5_0 (or,i32) || 8_2 (lshr,i32) == 6_0 (xor,i32) || 8_2 (lshr,i32) == 7_0 (shl,i32) || 8_2 (lshr,i32) == 9_0 (ashr,i32) || 8_2 (lshr,i32) == 10_0 (select,i32) || 8_2 (lshr,i32) == 11_0 (zext,eq,i32) || 8_2 (lshr,i32) == 12_0 (zext,ne,i32) || 8_2 (lshr,i32) == 13_0 (zext,ult,i32) || 8_2 (lshr,i32) == 14_0 (zext,slt,i32) || 8_2 (lshr,i32) == 15_0 (zext,ule,i32) || 8_2 (lshr,i32) == 16_0 (zext,sle,i32) || false
9_1 (ashr,i32) == 0_1 (input,i32) || 9_1 (ashr,i32) == 0_2 (const,i32) || 9_1 (ashr,i32) == 0_3 (const,i32) || 9_1 (ashr,i32) == 1_0 (add,i32) || 9_1 (ashr,i32) == 2_0 (sub,i32) || 9_1 (ashr,i32) == 3_0 (mul,i32) || 9_1 (ashr,i32) == 4_0 (and,i32) || 9_1 (ashr,i32) == 5_0 (or,i32) || 9_1 (ashr,i32) == 6_0 (xor,i32) || 9_1 (ashr,i32) == 7_0 (shl,i32) || 9_1 (ashr,i32) == 8_0 (lshr,i32) || 9_1 (ashr,i32) == 10_0 (select,i32) || 9_1 (ashr,i32) == 11_0 (zext,eq,i32) || 9_1 (ashr,i32) == 12_0 (zext,ne,i32) || 9_1 (ashr,i32) == 13_0 (zext,ult,i32) || 9_1 (ashr,i32) == 14_0 (zext,slt,i32) || 9_1 (ashr,i32) == 15_0 (zext,ule,i32) || 9_1 (ashr,i32) == 16_0 (zext,sle,i32) || false
9_2 (ashr,i32) == 0_1 (input,i32) || 9_2 (ashr,i32) == 0_2 (const,i32) || 9_2 (ashr,i32) == 0_3 (const,i32) || 9_2 (ashr,i32) == 1_0 (add,i32) || 9_2 (ashr,i32) == 2_0 (sub,i32) || 9_2 (ashr,i32) == 3_0 (mul,i32) || 9_2 (ashr,i32) == 4_0 (and,i32) || 9_2 (ashr,i32) == 5_0 (or,i32) || 9_2 (ashr,i32) == 6_0 (xor,i32) || 9_2 (ashr,i32) == 7_0 (shl,i32) || 9_2 (ashr,i32) == 8_0 (lshr,i32) || 9_2 (ashr,i32) == 10_0 (select,i32) || 9_2 (ashr,i32) == 11_0 (zext,eq,i32) || 9_2 (ashr,i32) == 12_0 (zext,ne,i32) || 9_2 (ashr,i32) == 13_0 (zext,ult,i32) || 9_2 (ashr,i32) == 14_0 (zext,slt,i32) || 9_2 (ashr,i32) == 15_0 (zext,ule,i32) || 9_2 (ashr,i32) == 16_0 (zext,sle,i32) || false
10_1 (select,i32) == 1_0 (add,i32) || 10_1 (select,i32) == 2_0 (sub,i32) || 10_1 (select,i32) == 3_0 (mul,i32) || 10_1 (select,i32) == 4_0 (and,i32) || 10_1 (select,i32) == 5_0 (or,i32) || 10_1 (select,i32) == 6_0 (xor,i32) || 10_1 (select,i32) == 7_0 (shl,i32) || 10_1 (select,i32) == 8_0 (lshr,i32) || 10_1 (select,i32) == 9_0 (ashr,i32) || 10_1 (select,i32) == 11_0 (zext,eq,i32) || 10_1 (select,i32) == 12_0 (zext,ne,i32) || 10_1 (select,i32) == 13_0 (zext,ult,i32) || 10_1 (select,i32) == 14_0 (zext,slt,i32) || 10_1 (select,i32) == 15_0 (zext,ule,i32) || 10_1 (select,i32) == 16_0 (zext,sle,i32) || false
10_2 (select,i32) == 0_1 (input,i32) || 10_2 (select,i32) == 0_2 (const,i32) || 10_2 (select,i32) == 0_3 (const,i32) || 10_2 (select,i32) == 1_0 (add,i32) || 10_2 (select,i32) == 2_0 (sub,i32) || 10_2 (select,i32) == 3_0 (mul,i32) || 10_2 (select,i32) == 4_0 (and,i32) || 10_2 (select,i32) == 5_0 (or,i32) || 10_2 (select,i32) == 6_0 (xor,i32) || 10_2 (select,i32) == 7_0 (shl,i32) || 10_2 (select,i32) == 8_0 (lshr,i32) || 10_2 (select,i32) == 9_0 (ashr,i32) || 10_2 (select,i32) == 11_0 (zext,eq,i32) || 10_2 (select,i32) == 12_0 (zext,ne,i32) || 10_2 (select,i32) == 13_0 (zext,ult,i32) || 10_2 (select,i32) == 14_0 (zext,slt,i32) || 10_2 (select,i32) == 15_0 (zext,ule,i32) || 10_2 (select,i32) == 16_0 (zext,sle,i32) || false
10_3 (select,i32) == 0_1 (input,i32) || 10_3 (select,i32) == 0_2 (const,i32) || 10_3 (select,i32) == 0_3 (const,i32) || 10_3 (select,i32) == 1_0 (add,i32) || 10_3 (select,i32) == 2_0 (sub,i32) || 10_3 (select,i32) == 3_0 (mul,i32) || 10_3 (select,i32) == 4_0 (and,i32) || 10_3 (select,i32) == 5_0 (or,i32) || 10_3 (select,i32) == 6_0 (xor,i32) || 10_3 (select,i32) == 7_0 (shl,i32) || 10_3 (select,i32) == 8_0 (lshr,i32) || 10_3 (select,i32) == 9_0 (ashr,i32) || 10_3 (select,i32) == 11_0 (zext,eq,i32) || 10_3 (select,i32) == 12_0 (zext,ne,i32) || 10_3 (select,i32) == 13_0 (zext,ult,i32) || 10_3 (select,i32) == 14_0 (zext,slt,i32) || 10_3 (select,i32) == 15_0 (zext,ule,i32) || 10_3 (select,i32) == 16_0 (zext,sle,i32) || false
11_1 (eq,i32) == 0_1 (input,i32) || 11_1 (eq,i32) == 0_2 (const,i32) || 11_1 (eq,i32) == 0_3 (const,i32) || 11_1 (eq,i32) == 1_0 (add,i32) || 11_1 (eq,i32) == 2_0 (sub,i32) || 11_1 (eq,i32) == 3_0 (mul,i32) || 11_1 (eq,i32) == 4_0 (and,i32) || 11_1 (eq,i32) == 5_0 (or,i32) || 11_1 (eq,i32) == 6_0 (xor,i32) || 11_1 (eq,i32) == 7_0 (shl,i32) || 11_1 (eq,i32) == 8_0 (lshr,i32) || 11_1 (eq,i32) == 9_0 (ashr,i32) || 11_1 (eq,i32) == 10_0 (select,i32) || 11_1 (eq,i32) == 12_0 (zext,ne,i32) || 11_1 (eq,i32) == 13_0 (zext,ult,i32) || 11_1 (eq,i32) == 14_0 (zext,slt,i32) || 11_1 (eq,i32) == 15_0 (zext,ule,i32) || 11_1 (eq,i32) == 16_0 (zext,sle,i32) || false
11_2 (eq,i32) == 0_1 (input,i32) || 11_2 (eq,i32) == 0_2 (const,i32) || 11_2 (eq,i32) == 0_3 (const,i32) || 11_2 (eq,i32) == 1_0 (add,i32) || 11_2 (eq,i32) == 2_0 (sub,i32) || 11_2 (eq,i32) == 3_0 (mul,i32) || 11_2 (eq,i32) == 4_0 (and,i32) || 11_2 (eq,i32) == 5_0 (or,i32) || 11_2 (eq,i32) == 6_0 (xor,i32) || 11_2 (eq,i32) == 7_0 (shl,i32) || 11_2 (eq,i32) == 8_0 (lshr,i32) || 11_2 (eq,i32) == 9_0 (ashr,i32) || 11_2 (eq,i32) == 10_0 (select,i32) || 11_2 (eq,i32) == 12_0 (zext,ne,i32) || 11_2 (eq,i32) == 13_0 (zext,ult,i32) || 11_2 (eq,i32) == 14_0 (zext,slt,i32) || 11_2 (eq,i32) == 15_0 (zext,ule,i32) || 11_2 (eq,i32) == 16_0 (zext,sle,i32) || false
12_1 (ne,i32) == 0_1 (input,i32) || 12_1 (ne,i32) == 0_2 (const,i32) || 12_1 (ne,i32) == 0_3 (const,i32) || 12_1 (ne,i32) == 1_0 (add,i32) || 12_1 (ne,i32) == 2_0 (sub,i32) || 12_1 (ne,i32) == 3_0 (mul,i32) || 12_1 (ne,i32) == 4_0 (and,i32) || 12_1 (ne,i32) == 5_0 (or,i32) || 12_1 (ne,i32) == 6_0 (xor,i32) || 12_1 (ne,i32) == 7_0 (shl,i32) || 12_1 (ne,i32) == 8_0 (lshr,i32) || 12_1 (ne,i32) == 9_0 (ashr,i32) || 12_1 (ne,i32) == 10_0 (select,i32) || 12_1 (ne,i32) == 11_0 (zext,eq,i32) || 12_1 (ne,i32) == 13_0 (zext,ult,i32) || 12_1 (ne,i32) == 14_0 (zext,slt,i32) || 12_1 (ne,i32) == 15_0 (zext,ule,i32) || 12_1 (ne,i32) == 16_0 (zext,sle,i32) || false
12_2 (ne,i32) == 0_1 (input,i32) || 12_2 (ne,i32) == 0_2 (const,i32) || 12_2 (ne,i32) == 0_3 (const,i32) || 12_2 (ne,i32) == 1_0 (add,i32) || 12_2 (ne,i32) == 2_0 (sub,i32) || 12_2 (ne,i32) == 3_0 (mul,i32) || 12_2 (ne,i32) == 4_0 (and,i32) || 12_2 (ne,i32) == 5_0 (or,i32) || 12_2 (ne,i32) == 6_0 (xor,i32) || 12_2 (ne,i32) == 7_0 (shl,i32) || 12_2 (ne,i32) == 8_0 (lshr,i32) || 12_2 (ne,i32) == 9_0 (ashr,i32) || 12_2 (ne,i32) == 10_0 (select,i32) || 12_2 (ne,i32) == 11_0 (zext,eq,i32) || 12_2 (ne,i32) == 13_0 (zext,ult,i32) || 12_2 (ne,i32) == 14_0 (zext,slt,i32) || 12_2 (ne,i32) == 15_0 (zext,ule,i32) || 12_2 (ne,i32) == 16_0 (zext,sle,i32) || false
13_1 (ult,i32) == 0_1 (input,i32) || 13_1 (ult,i32) == 0_2 (const,i32) || 13_1 (ult,i32) == 0_3 (const,i32) || 13_1 (ult,i32) == 1_0 (add,i32) || 13_1 (ult,i32) == 2_0 (sub,i32) || 13_1 (ult,i32) == 3_0 (mul,i32) || 13_1 (ult,i32) == 4_0 (and,i32) || 13_1 (ult,i32) == 5_0 (or,i32) || 13_1 (ult,i32) == 6_0 (xor,i32) || 13_1 (ult,i32) == 7_0 (shl,i32) || 13_1 (ult,i32) == 8_0 (lshr,i32) || 13_1 (ult,i32) == 9_0 (ashr,i32) || 13_1 (ult,i32) == 10_0 (select,i32) || 13_1 (ult,i32) == 11_0 (zext,eq,i32) || 13_1 (ult,i32) == 12_0 (zext,ne,i32) || 13_1 (ult,i32) == 14_0 (zext,slt,i32) || 13_1 (ult,i32) == 15_0 (zext,ule,i32) || 13_1 (ult,i32) == 16_0 (zext,sle,i32) || false
13_2 (ult,i32) == 0_1 (input,i32) || 13_2 (ult,i32) == 0_2 (const,i32) || 13_2 (ult,i32) == 0_3 (const,i32) || 13_2 (ult,i32) == 1_0 (add,i32) || 13_2 (ult,i32) == 2_0 (sub,i32) || 13_2 (ult,i32) == 3_0 (mul,i32) || 13_2 (ult,i32) == 4_0 (and,i32) || 13_2 (ult,i32) == 5_0 (or,i32) || 13_2 (ult,i32) == 6_0 (xor,i32) || 13_2 (ult,i32) == 7_0 (shl,i32) || 13_2 (ult,i32) == 8_0 (lshr,i32) || 13_2 (ult,i32) == 9_0 (ashr,i32) || 13_2 (ult,i32) == 10_0 (select,i32) || 13_2 (ult,i32) == 11_0 (zext,eq,i32) || 13_2 (ult,i32) == 12_0 (zext,ne,i32) || 13_2 (ult,i32) == 14_0 (zext,slt,i32) || 13_2 (ult,i32) == 15_0 (zext,ule,i32) || 13_2 (ult,i32) == 16_0 (zext,sle,i32) || false
14_1 (slt,i32) == 0_1 (input,i32) || 14_1 (slt,i32) == 0_2 (const,i32) || 14_1 (slt,i32) == 0_3 (const,i32) || 14_1 (slt,i32) == 1_0 (add,i32) || 14_1 (slt,i32) == 2_0 (sub,i32) || 14_1 (slt,i32) == 3_0 (mul,i32) || 14_1 (slt,i32) == 4_0 (and,i32) || 14_1 (slt,i32) == 5_0 (or,i32) || 14_1 (slt,i32) == 6_0 (xor,i32) || 14_1 (slt,i32) == 7_0 (shl,i32) || 14_1 (slt,i32) == 8_0 (lshr,i32) || 14_1 (slt,i32) == 9_0 (ashr,i32) || 14_1 (slt,i32) == 10_0 (select,i32) || 14_1 (slt,i32) == 11_0 (zext,eq,i32) || 14_1 (slt,i32) == 12_0 (zext,ne,i32) || 14_1 (slt,i32) == 13_0 (zext,ult,i32) || 14_1 (slt,i32) == 15_0 (zext,ule,i32) || 14_1 (slt,i32) == 16_0 (zext,sle,i32) || false
14_2 (slt,i32) == 0_1 (input,i32) || 14_2 (slt,i32) == 0_2 (const,i32) || 14_2 (slt,i32) == 0_3 (const,i32) || 14_2 (slt,i32) == 1_0 (add,i32) || 14_2 (slt,i32) == 2_0 (sub,i32) || 14_2 (slt,i32) == 3_0 (mul,i32) || 14_2 (slt,i32) == 4_0 (and,i32) || 14_2 (slt,i32) == 5_0 (or,i32) || 14_2 (slt,i32) == 6_0 (xor,i32) || 14_2 (slt,i32) == 7_0 (shl,i32) || 14_2 (slt,i32) == 8_0 (lshr,i32) || 14_2 (slt,i32) == 9_0 (ashr,i32) || 14_2 (slt,i32) == 10_0 (select,i32) || 14_2 (slt,i32) == 11_0 (zext,eq,i32) || 14_2 (slt,i32) == 12_0 (zext,ne,i32) || 14_2 (slt,i32) == 13_0 (zext,ult,i32) || 14_2 (slt,i32) == 15_0 (zext,ule,i32) || 14_2 (slt,i32) == 16_0 (zext,sle,i32) || false
15_1 (ule,i32) == 0_1 (input,i32) || 15_1 (ule,i32) == 0_2 (const,i32) || 15_1 (ule,i32) == 0_3 (const,i32) || 15_1 (ule,i32) == 1_0 (add,i32) || 15_1 (ule,i32) == 2_0 (sub,i32) || 15_1 (ule,i32) == 3_0 (mul,i32) || 15_1 (ule,i32) == 4_0 (and,i32) || 15_1 (ule,i32) == 5_0 (or,i32) || 15_1 (ule,i32) == 6_0 (xor,i32) || 15_1 (ule,i32) == 7_0 (shl,i32) || 15_1 (ule,i32) == 8_0 (lshr,i32) || 15_1 (ule,i32) == 9_0 (ashr,i32) || 15_1 (ule,i32) == 10_0 (select,i32) || 15_1 (ule,i32) == 11_0 (zext,eq,i32) || 15_1 (ule,i32) == 12_0 (zext,ne,i32) || 15_1 (ule,i32) == 13_0 (zext,ult,i32) || 15_1 (ule,i32) == 14_0 (zext,slt,i32) || 15_1 (ule,i32) == 16_0 (zext,sle,i32) || false
15_2 (ule,i32) == 0_1 (input,i32) || 15_2 (ule,i32) == 0_2 (const,i32) || 15_2 (ule,i32) == 0_3 (const,i32) || 15_2 (ule,i32) == 1_0 (add,i32) || 15_2 (ule,i32) == 2_0 (sub,i32) || 15_2 (ule,i32) == 3_0 (mul,i32) || 15_2 (ule,i32) == 4_0 (and,i32) || 15_2 (ule,i32) == 5_0 (or,i32) || 15_2 (ule,i32) == 6_0 (xor,i32) || 15_2 (ule,i32) == 7_0 (shl,i32) || 15_2 (ule,i32) == 8_0 (lshr,i32) || 15_2 (ule,i32) == 9_0 (ashr,i32) || 15_2 (ule,i32) == 10_0 (select,i32) || 15_2 (ule,i32) == 11_0 (zext,eq,i32) || 15_2 (ule,i32) == 12_0 (zext,ne,i32) || 15_2 (ule,i32) == 13_0 (zext,ult,i32) || 15_2 (ule,i32) == 14_0 (zext,slt,i32) || 15_2 (ule,i32) == 16_0 (zext,sle,i32) || false
16_1 (sle,i32) == 0_1 (input,i32) || 16_1 (sle,i32) == 0_2 (const,i32) || 16_1 (sle,i32) == 0_3 (const,i32) || 16_1 (sle,i32) == 1_0 (add,i32) || 16_1 (sle,i32) == 2_0 (sub,i32) || 16_1 (sle,i32) == 3_0 (mul,i32) || 16_1 (sle,i32) == 4_0 (and,i32) || 16_1 (sle,i32) == 5_0 (or,i32) || 16_1 (sle,i32) == 6_0 (xor,i32) || 16_1 (sle,i32) == 7_0 (shl,i32) || 16_1 (sle,i32) == 8_0 (lshr,i32) || 16_1 (sle,i32) == 9_0 (ashr,i32) || 16_1 (sle,i32) == 10_0 (select,i32) || 16_1 (sle,i32) == 11_0 (zext,eq,i32) || 16_1 (sle,i32) == 12_0 (zext,ne,i32) || 16_1 (sle,i32) == 13_0 (zext,ult,i32) || 16_1 (sle,i32) == 14_0 (zext,slt,i32) || 16_1 (sle,i32) == 15_0 (zext,ule,i32) || false
16_2 (sle,i32) == 0_1 (input,i32) || 16_2 (sle,i32) == 0_2 (const,i32) || 16_2 (sle,i32) == 0_3 (const,i32) || 16_2 (sle,i32) == 1_0 (add,i32) || 16_2 (sle,i32) == 2_0 (sub,i32) || 16_2 (sle,i32) == 3_0 (mul,i32) || 16_2 (sle,i32) == 4_0 (and,i32) || 16_2 (sle,i32) == 5_0 (or,i32) || 16_2 (sle,i32) == 6_0 (xor,i32) || 16_2 (sle,i32) == 7_0 (shl,i32) || 16_2 (sle,i32) == 8_0 (lshr,i32) || 16_2 (sle,i32) == 9_0 (ashr,i32) || 16_2 (sle,i32) == 10_0 (select,i32) || 16_2 (sle,i32) == 11_0 (zext,eq,i32) || 16_2 (sle,i32) == 12_0 (zext,ne,i32) || 16_2 (sle,i32) == 13_0 (zext,ult,i32) || 16_2 (sle,i32) == 14_0 (zext,slt,i32) || 16_2 (sle,i32) == 15_0 (zext,ule,i32) || false
component const input constraints:
1_1 (add,i32) == 0_2 (const,i32) || 1_1 (add,i32) == 0_3 (const,i32) || false
1_2 (add,i32) == 0_2 (const,i32) || 1_2 (add,i32) == 0_3 (const,i32) || false
false
2_1 (sub,i32) == 0_2 (const,i32) || 2_1 (sub,i32) == 0_3 (const,i32) || false
2_2 (sub,i32) == 0_2 (const,i32) || 2_2 (sub,i32) == 0_3 (const,i32) || false
false
3_1 (mul,i32) == 0_2 (const,i32) || 3_1 (mul,i32) == 0_3 (const,i32) || false
3_2 (mul,i32) == 0_2 (const,i32) || 3_2 (mul,i32) == 0_3 (const,i32) || false
false
4_1 (and,i32) == 0_2 (const,i32) || 4_1 (and,i32) == 0_3 (const,i32) || false
4_2 (and,i32) == 0_2 (const,i32) || 4_2 (and,i32) == 0_3 (const,i32) || false
false
5_1 (or,i32) == 0_2 (const,i32) || 5_1 (or,i32) == 0_3 (const,i32) || false
5_2 (or,i32) == 0_2 (const,i32) || 5_2 (or,i32) == 0_3 (const,i32) || false
false
6_1 (xor,i32) == 0_2 (const,i32) || 6_1 (xor,i32) == 0_3 (const,i32) || false
6_2 (xor,i32) == 0_2 (const,i32) || 6_2 (xor,i32) == 0_3 (const,i32) || false
false
7_1 (shl,i32) == 0_2 (const,i32) || 7_1 (shl,i32) == 0_3 (const,i32) || false
7_2 (shl,i32) == 0_2 (const,i32) || 7_2 (shl,i32) == 0_3 (const,i32) || false
false
8_1 (lshr,i32) == 0_2 (const,i32) || 8_1 (lshr,i32) == 0_3 (const,i32) || false
8_2 (lshr,i32) == 0_2 (const,i32) || 8_2 (lshr,i32) == 0_3 (const,i32) || false
false
9_1 (ashr,i32) == 0_2 (const,i32) || 9_1 (ashr,i32) == 0_3 (const,i32) || false
9_2 (ashr,i32) == 0_2 (const,i32) || 9_2 (ashr,i32) == 0_3 (const,i32) || false
false
false
10_2 (select,i32) == 0_2 (const,i32) || 10_2 (select,i32) == 0_3 (const,i32) || false
10_3 (select,i32) == 0_2 (const,i32) || 10_3 (select,i32) == 0_3 (const,i32) || false
false
11_1 (eq,i32) == 0_2 (const,i32) || 11_1 (eq,i32) == 0_3 (const,i32) || false
11_2 (eq,i32) == 0_2 (const,i32) || 11_2 (eq,i32) == 0_3 (const,i32) || false
false
12_1 (ne,i32) == 0_2 (const,i32) || 12_1 (ne,i32) == 0_3 (const,i32) || false
12_2 (ne,i32) == 0_2 (const,i32) || 12_2 (ne,i32) == 0_3 (const,i32) || false
false
13_1 (ult,i32) == 0_2 (const,i32) || 13_1 (ult,i32) == 0_3 (const,i32) || false
13_2 (ult,i32) == 0_2 (const,i32) || 13_2 (ult,i32) == 0_3 (const,i32) || false
false
14_1 (slt,i32) == 0_2 (const,i32) || 14_1 (slt,i32) == 0_3 (const,i32) || false
14_2 (slt,i32) == 0_2 (const,i32) || 14_2 (slt,i32) == 0_3 (const,i32) || false
false
15_1 (ule,i32) == 0_2 (const,i32) || 15_1 (ule,i32) == 0_3 (const,i32) || false
15_2 (ule,i32) == 0_2 (const,i32) || 15_2 (ule,i32) == 0_3 (const,i32) || false
false
16_1 (sle,i32) == 0_2 (const,i32) || 16_1 (sle,i32) == 0_3 (const,i32) || false
16_2 (sle,i32) == 0_2 (const,i32) || 16_2 (sle,i32) == 0_3 (const,i32) || false
false
component output constraints:
17_0 (output,i32) == 0_1 (input,i32) || 17_0 (output,i32) == 0_2 (const,i32) || 17_0 (output,i32) == 0_3 (const,i32) || 17_0 (output,i32) == 1_0 (add,i32) || 17_0 (output,i32) == 2_0 (sub,i32) || 17_0 (output,i32) == 3_0 (mul,i32) || 17_0 (output,i32) == 4_0 (and,i32) || 17_0 (output,i32) == 5_0 (or,i32) || 17_0 (output,i32) == 6_0 (xor,i32) || 17_0 (output,i32) == 7_0 (shl,i32) || 17_0 (output,i32) == 8_0 (lshr,i32) || 17_0 (output,i32) == 9_0 (ashr,i32) || 17_0 (output,i32) == 10_0 (select,i32) || 17_0 (output,i32) == 11_0 (zext,eq,i32) || 17_0 (output,i32) == 12_0 (zext,ne,i32) || 17_0 (output,i32) == 13_0 (zext,ult,i32) || 17_0 (output,i32) == 14_0 (zext,slt,i32) || 17_0 (output,i32) == 15_0 (zext,ule,i32) || 17_0 (output,i32) == 16_0 (zext,sle,i32) || false
possible wirings:
0_1 (input,i32) == 1_1 (add,i32)
0_1 (input,i32) == 1_2 (add,i32)
0_1 (input,i32) == 2_1 (sub,i32)
0_1 (input,i32) == 2_2 (sub,i32)
0_1 (input,i32) == 3_1 (mul,i32)
0_1 (input,i32) == 3_2 (mul,i32)
0_1 (input,i32) == 4_1 (and,i32)
0_1 (input,i32) == 4_2 (and,i32)
0_1 (input,i32) == 5_1 (or,i32)
0_1 (input,i32) == 5_2 (or,i32)
0_1 (input,i32) == 6_1 (xor,i32)
0_1 (input,i32) == 6_2 (xor,i32)
0_1 (input,i32) == 7_1 (shl,i32)
0_1 (input,i32) == 7_2 (shl,i32)
0_1 (input,i32) == 8_1 (lshr,i32)
0_1 (input,i32) == 8_2 (lshr,i32)
0_1 (input,i32) == 9_1 (ashr,i32)
0_1 (input,i32) == 9_2 (ashr,i32)
0_1 (input,i32) == 10_2 (select,i32)
0_1 (input,i32) == 10_3 (select,i32)
0_1 (input,i32) == 11_1 (eq,i32)
0_1 (input,i32) == 11_2 (eq,i32)
0_1 (input,i32) == 12_1 (ne,i32)
0_1 (input,i32) == 12_2 (ne,i32)
0_1 (input,i32) == 13_1 (ult,i32)
0_1 (input,i32) == 13_2 (ult,i32)
0_1 (input,i32) == 14_1 (slt,i32)
0_1 (input,i32) == 14_2 (slt,i32)
0_1 (input,i32) == 15_1 (ule,i32)
0_1 (input,i32) == 15_2 (ule,i32)
0_1 (input,i32) == 16_1 (sle,i32)
0_1 (input,i32) == 16_2 (sle,i32)
0_1 (input,i32) == 17_0 (output,i32)
0_2 (const,i32) == 1_1 (add,i32)
0_2 (const,i32) == 1_2 (add,i32)
0_2 (const,i32) == 2_1 (sub,i32)
0_2 (const,i32) == 2_2 (sub,i32)
0_2 (const,i32) == 3_1 (mul,i32)
0_2 (const,i32) == 3_2 (mul,i32)
0_2 (const,i32) == 4_1 (and,i32)
0_2 (const,i32) == 4_2 (and,i32)
0_2 (const,i32) == 5_1 (or,i32)
0_2 (const,i32) == 5_2 (or,i32)
0_2 (const,i32) == 6_1 (xor,i32)
0_2 (const,i32) == 6_2 (xor,i32)
0_2 (const,i32) == 7_1 (shl,i32)
0_2 (const,i32) == 7_2 (shl,i32)
0_2 (const,i32) == 8_1 (lshr,i32)
0_2 (const,i32) == 8_2 (lshr,i32)
0_2 (const,i32) == 9_1 (ashr,i32)
0_2 (const,i32) == 9_2 (ashr,i32)
0_2 (const,i32) == 10_2 (select,i32)
0_2 (const,i32) == 10_3 (select,i32)
0_2 (const,i32) == 11_1 (eq,i32)
0_2 (const,i32) == 11_2 (eq,i32)
0_2 (const,i32) == 12_1 (ne,i32)
0_2 (const,i32) == 12_2 (ne,i32)
0_2 (const,i32) == 13_1 (ult,i32)
0_2 (const,i32) == 13_2 (ult,i32)
0_2 (const,i32) == 14_1 (slt,i32)
0_2 (const,i32) == 14_2 (slt,i32)
0_2 (const,i32) == 15_1 (ule,i32)
0_2 (const,i32) == 15_2 (ule,i32)
0_2 (const,i32) == 16_1 (sle,i32)
0_2 (const,i32) == 16_2 (sle,i32)
0_2 (const,i32) == 17_0 (output,i32)
0_3 (const,i32) == 1_1 (add,i32)
0_3 (const,i32) == 1_2 (add,i32)
0_3 (const,i32) == 2_1 (sub,i32)
0_3 (const,i32) == 2_2 (sub,i32)
0_3 (const,i32) == 3_1 (mul,i32)
0_3 (const,i32) == 3_2 (mul,i32)
0_3 (const,i32) == 4_1 (and,i32)
0_3 (const,i32) == 4_2 (and,i32)
0_3 (const,i32) == 5_1 (or,i32)
0_3 (const,i32) == 5_2 (or,i32)
0_3 (const,i32) == 6_1 (xor,i32)
0_3 (const,i32) == 6_2 (xor,i32)
0_3 (const,i32) == 7_1 (shl,i32)
0_3 (const,i32) == 7_2 (shl,i32)
0_3 (const,i32) == 8_1 (lshr,i32)
0_3 (const,i32) == 8_2 (lshr,i32)
0_3 (const,i32) == 9_1 (ashr,i32)
0_3 (const,i32) == 9_2 (ashr,i32)
0_3 (const,i32) == 10_2 (select,i32)
0_3 (const,i32) == 10_3 (select,i32)
0_3 (const,i32) == 11_1 (eq,i32)
0_3 (const,i32) == 11_2 (eq,i32)
0_3 (const,i32) == 12_1 (ne,i32)
0_3 (const,i32) == 12_2 (ne,i32)
0_3 (const,i32) == 13_1 (ult,i32)
0_3 (const,i32) == 13_2 (ult,i32)
0_3 (const,i32) == 14_1 (slt,i32)
0_3 (const,i32) == 14_2 (slt,i32)
0_3 (const,i32) == 15_1 (ule,i32)
0_3 (const,i32) == 15_2 (ule,i32)
0_3 (const,i32) == 16_1 (sle,i32)
0_3 (const,i32) == 16_2 (sle,i32)
0_3 (const,i32) == 17_0 (output,i32)
1_1 (add,i32) == 2_0 (sub,i32)
1_1 (add,i32) == 3_0 (mul,i32)
1_1 (add,i32) == 4_0 (and,i32)
1_1 (add,i32) == 5_0 (or,i32)
1_1 (add,i32) == 6_0 (xor,i32)
1_1 (add,i32) == 7_0 (shl,i32)
1_1 (add,i32) == 8_0 (lshr,i32)
1_1 (add,i32) == 9_0 (ashr,i32)
1_1 (add,i32) == 10_0 (select,i32)
1_1 (add,i32) == 11_0 (zext,eq,i32)
1_1 (add,i32) == 12_0 (zext,ne,i32)
1_1 (add,i32) == 13_0 (zext,ult,i32)
1_1 (add,i32) == 14_0 (zext,slt,i32)
1_1 (add,i32) == 15_0 (zext,ule,i32)
1_1 (add,i32) == 16_0 (zext,sle,i32)
1_2 (add,i32) == 2_0 (sub,i32)
1_2 (add,i32) == 3_0 (mul,i32)
1_2 (add,i32) == 4_0 (and,i32)
1_2 (add,i32) == 5_0 (or,i32)
1_2 (add,i32) == 6_0 (xor,i32)
1_2 (add,i32) == 7_0 (shl,i32)
1_2 (add,i32) == 8_0 (lshr,i32)
1_2 (add,i32) == 9_0 (ashr,i32)
1_2 (add,i32) == 10_0 (select,i32)
1_2 (add,i32) == 11_0 (zext,eq,i32)
1_2 (add,i32) == 12_0 (zext,ne,i32)
1_2 (add,i32) == 13_0 (zext,ult,i32)
1_2 (add,i32) == 14_0 (zext,slt,i32)
1_2 (add,i32) == 15_0 (zext,ule,i32)
1_2 (add,i32) == 16_0 (zext,sle,i32)
2_1 (sub,i32) == 1_0 (add,i32)
2_1 (sub,i32) == 3_0 (mul,i32)
2_1 (sub,i32) == 4_0 (and,i32)
2_1 (sub,i32) == 5_0 (or,i32)
2_1 (sub,i32) == 6_0 (xor,i32)
2_1 (sub,i32) == 7_0 (shl,i32)
2_1 (sub,i32) == 8_0 (lshr,i32)
2_1 (sub,i32) == 9_0 (ashr,i32)
2_1 (sub,i32) == 10_0 (select,i32)
2_1 (sub,i32) == 11_0 (zext,eq,i32)
2_1 (sub,i32) == 12_0 (zext,ne,i32)
2_1 (sub,i32) == 13_0 (zext,ult,i32)
2_1 (sub,i32) == 14_0 (zext,slt,i32)
2_1 (sub,i32) == 15_0 (zext,ule,i32)
2_1 (sub,i32) == 16_0 (zext,sle,i32)
2_2 (sub,i32) == 1_0 (add,i32)
2_2 (sub,i32) == 3_0 (mul,i32)
2_2 (sub,i32) == 4_0 (and,i32)
2_2 (sub,i32) == 5_0 (or,i32)
2_2 (sub,i32) == 6_0 (xor,i32)
2_2 (sub,i32) == 7_0 (shl,i32)
2_2 (sub,i32) == 8_0 (lshr,i32)
2_2 (sub,i32) == 9_0 (ashr,i32)
2_2 (sub,i32) == 10_0 (select,i32)
2_2 (sub,i32) == 11_0 (zext,eq,i32)
2_2 (sub,i32) == 12_0 (zext,ne,i32)
2_2 (sub,i32) == 13_0 (zext,ult,i32)
2_2 (sub,i32) == 14_0 (zext,slt,i32)
2_2 (sub,i32) == 15_0 (zext,ule,i32)
2_2 (sub,i32) == 16_0 (zext,sle,i32)
3_1 (mul,i32) == 1_0 (add,i32)
3_1 (mul,i32) == 2_0 (sub,i32)
3_1 (mul,i32) == 4_0 (and,i32)
3_1 (mul,i32) == 5_0 (or,i32)
3_1 (mul,i32) == 6_0 (xor,i32)
3_1 (mul,i32) == 7_0 (shl,i32)
3_1 (mul,i32) == 8_0 (lshr,i32)
3_1 (mul,i32) == 9_0 (ashr,i32)
3_1 (mul,i32) == 10_0 (select,i32)
3_1 (mul,i32) == 11_0 (zext,eq,i32)
3_1 (mul,i32) == 12_0 (zext,ne,i32)
3_1 (mul,i32) == 13_0 (zext,ult,i32)
3_1 (mul,i32) == 14_0 (zext,slt,i32)
3_1 (mul,i32) == 15_0 (zext,ule,i32)
3_1 (mul,i32) == 16_0 (zext,sle,i32)
3_2 (mul,i32) == 1_0 (add,i32)
3_2 (mul,i32) == 2_0 (sub,i32)
3_2 (mul,i32) == 4_0 (and,i32)
3_2 (mul,i32) == 5_0 (or,i32)
3_2 (mul,i32) == 6_0 (xor,i32)
3_2 (mul,i32) == 7_0 (shl,i32)
3_2 (mul,i32) == 8_0 (lshr,i32)
3_2 (mul,i32) == 9_0 (ashr,i32)
3_2 (mul,i32) == 10_0 (select,i32)
3_2 (mul,i32) == 11_0 (zext,eq,i32)
3_2 (mul,i32) == 12_0 (zext,ne,i32)
3_2 (mul,i32) == 13_0 (zext,ult,i32)
3_2 (mul,i32) == 14_0 (zext,slt,i32)
3_2 (mul,i32) == 15_0 (zext,ule,i32)
3_2 (mul,i32) == 16_0 (zext,sle,i32)
4_1 (and,i32) == 1_0 (add,i32)
4_1 (and,i32) == 2_0 (sub,i32)
4_1 (and,i32) == 3_0 (mul,i32)
4_1 (and,i32) == 5_0 (or,i32)
4_1 (and,i32) == 6_0 (xor,i32)
4_1 (and,i32) == 7_0 (shl,i32)
4_1 (and,i32) == 8_0 (lshr,i32)
4_1 (and,i32) == 9_0 (ashr,i32)
4_1 (and,i32) == 10_0 (select,i32)
4_1 (and,i32) == 11_0 (zext,eq,i32)
4_1 (and,i32) == 12_0 (zext,ne,i32)
4_1 (and,i32) == 13_0 (zext,ult,i32)
4_1 (and,i32) == 14_0 (zext,slt,i32)
4_1 (and,i32) == 15_0 (zext,ule,i32)
4_1 (and,i32) == 16_0 (zext,sle,i32)
4_2 (and,i32) == 1_0 (add,i32)
4_2 (and,i32) == 2_0 (sub,i32)
4_2 (and,i32) == 3_0 (mul,i32)
4_2 (and,i32) == 5_0 (or,i32)
4_2 (and,i32) == 6_0 (xor,i32)
4_2 (and,i32) == 7_0 (shl,i32)
4_2 (and,i32) == 8_0 (lshr,i32)
4_2 (and,i32) == 9_0 (ashr,i32)
4_2 (and,i32) == 10_0 (select,i32)
4_2 (and,i32) == 11_0 (zext,eq,i32)
4_2 (and,i32) == 12_0 (zext,ne,i32)
4_2 (and,i32) == 13_0 (zext,ult,i32)
4_2 (and,i32) == 14_0 (zext,slt,i32)
4_2 (and,i32) == 15_0 (zext,ule,i32)
4_2 (and,i32) == 16_0 (zext,sle,i32)
5_1 (or,i32) == 1_0 (add,i32)
5_1 (or,i32) == 2_0 (sub,i32)
5_1 (or,i32) == 3_0 (mul,i32)
5_1 (or,i32) == 4_0 (and,i32)
5_1 (or,i32) == 6_0 (xor,i32)
5_1 (or,i32) == 7_0 (shl,i32)
5_1 (or,i32) == 8_0 (lshr,i32)
5_1 (or,i32) == 9_0 (ashr,i32)
5_1 (or,i32) == 10_0 (select,i32)
5_1 (or,i32) == 11_0 (zext,eq,i32)
5_1 (or,i32) == 12_0 (zext,ne,i32)
5_1 (or,i32) == 13_0 (zext,ult,i32)
5_1 (or,i32) == 14_0 (zext,slt,i32)
5_1 (or,i32) == 15_0 (zext,ule,i32)
5_1 (or,i32) == 16_0 (zext,sle,i32)
5_2 (or,i32) == 1_0 (add,i32)
5_2 (or,i32) == 2_0 (sub,i32)
5_2 (or,i32) == 3_0 (mul,i32)
5_2 (or,i32) == 4_0 (and,i32)
5_2 (or,i32) == 6_0 (xor,i32)
5_2 (or,i32) == 7_0 (shl,i32)
5_2 (or,i32) == 8_0 (lshr,i32)
5_2 (or,i32) == 9_0 (ashr,i32)
5_2 (or,i32) == 10_0 (select,i32)
5_2 (or,i32) == 11_0 (zext,eq,i32)
5_2 (or,i32) == 12_0 (zext,ne,i32)
5_2 (or,i32) == 13_0 (zext,ult,i32)
5_2 (or,i32) == 14_0 (zext,slt,i32)
5_2 (or,i32) == 15_0 (zext,ule,i32)
5_2 (or,i32) == 16_0 (zext,sle,i32)
6_1 (xor,i32) == 1_0 (add,i32)
6_1 (xor,i32) == 2_0 (sub,i32)
6_1 (xor,i32) == 3_0 (mul,i32)
6_1 (xor,i32) == 4_0 (and,i32)
6_1 (xor,i32) == 5_0 (or,i32)
6_1 (xor,i32) == 7_0 (shl,i32)
6_1 (xor,i32) == 8_0 (lshr,i32)
6_1 (xor,i32) == 9_0 (ashr,i32)
6_1 (xor,i32) == 10_0 (select,i32)
6_1 (xor,i32) == 11_0 (zext,eq,i32)
6_1 (xor,i32) == 12_0 (zext,ne,i32)
6_1 (xor,i32) == 13_0 (zext,ult,i32)
6_1 (xor,i32) == 14_0 (zext,slt,i32)
6_1 (xor,i32) == 15_0 (zext,ule,i32)
6_1 (xor,i32) == 16_0 (zext,sle,i32)
6_2 (xor,i32) == 1_0 (add,i32)
6_2 (xor,i32) == 2_0 (sub,i32)
6_2 (xor,i32) == 3_0 (mul,i32)
6_2 (xor,i32) == 4_0 (and,i32)
6_2 (xor,i32) == 5_0 (or,i32)
6_2 (xor,i32) == 7_0 (shl,i32)
6_2 (xor,i32) == 8_0 (lshr,i32)
6_2 (xor,i32) == 9_0 (ashr,i32)
6_2 (xor,i32) == 10_0 (select,i32)
6_2 (xor,i32) == 11_0 (zext,eq,i32)
6_2 (xor,i32) == 12_0 (zext,ne,i32)
6_2 (xor,i32) == 13_0 (zext,ult,i32)
6_2 (xor,i32) == 14_0 (zext,slt,i32)
6_2 (xor,i32) == 15_0 (zext,ule,i32)
6_2 (xor,i32) == 16_0 (zext,sle,i32)
7_1 (shl,i32) == 1_0 (add,i32)
7_1 (shl,i32) == 2_0 (sub,i32)
7_1 (shl,i32) == 3_0 (mul,i32)
7_1 (shl,i32) == 4_0 (and,i32)
7_1 (shl,i32) == 5_0 (or,i32)
7_1 (shl,i32) == 6_0 (xor,i32)
7_1 (shl,i32) == 8_0 (lshr,i32)
7_1 (shl,i32) == 9_0 (ashr,i32)
7_1 (shl,i32) == 10_0 (select,i32)
7_1 (shl,i32) == 11_0 (zext,eq,i32)
7_1 (shl,i32) == 12_0 (zext,ne,i32)
7_1 (shl,i32) == 13_0 (zext,ult,i32)
7_1 (shl,i32) == 14_0 (zext,slt,i32)
7_1 (shl,i32) == 15_0 (zext,ule,i32)
7_1 (shl,i32) == 16_0 (zext,sle,i32)
7_2 (shl,i32) == 1_0 (add,i32)
7_2 (shl,i32) == 2_0 (sub,i32)
7_2 (shl,i32) == 3_0 (mul,i32)
7_2 (shl,i32) == 4_0 (and,i32)
7_2 (shl,i32) == 5_0 (or,i32)
7_2 (shl,i32) == 6_0 (xor,i32)
7_2 (shl,i32) == 8_0 (lshr,i32)
7_2 (shl,i32) == 9_0 (ashr,i32)
7_2 (shl,i32) == 10_0 (select,i32)
7_2 (shl,i32) == 11_0 (zext,eq,i32)
7_2 (shl,i32) == 12_0 (zext,ne,i32)
7_2 (shl,i32) == 13_0 (zext,ult,i32)
7_2 (shl,i32) == 14_0 (zext,slt,i32)
7_2 (shl,i32) == 15_0 (zext,ule,i32)
7_2 (shl,i32) == 16_0 (zext,sle,i32)
8_1 (lshr,i32) == 1_0 (add,i32)
8_1 (lshr,i32) == 2_0 (sub,i32)
8_1 (lshr,i32) == 3_0 (mul,i32)
8_1 (lshr,i32) == 4_0 (and,i32)
8_1 (lshr,i32) == 5_0 (or,i32)
8_1 (lshr,i32) == 6_0 (xor,i32)
8_1 (lshr,i32) == 7_0 (shl,i32)
8_1 (lshr,i32) == 9_0 (ashr,i32)
8_1 (lshr,i32) == 10_0 (select,i32)
8_1 (lshr,i32) == 11_0 (zext,eq,i32)
8_1 (lshr,i32) == 12_0 (zext,ne,i32)
8_1 (lshr,i32) == 13_0 (zext,ult,i32)
8_1 (lshr,i32) == 14_0 (zext,slt,i32)
8_1 (lshr,i32) == 15_0 (zext,ule,i32)
8_1 (lshr,i32) == 16_0 (zext,sle,i32)
8_2 (lshr,i32) == 1_0 (add,i32)
8_2 (lshr,i32) == 2_0 (sub,i32)
8_2 (lshr,i32) == 3_0 (mul,i32)
8_2 (lshr,i32) == 4_0 (and,i32)
8_2 (lshr,i32) == 5_0 (or,i32)
8_2 (lshr,i32) == 6_0 (xor,i32)
8_2 (lshr,i32) == 7_0 (shl,i32)
8_2 (lshr,i32) == 9_0 (ashr,i32)
8_2 (lshr,i32) == 10_0 (select,i32)
8_2 (lshr,i32) == 11_0 (zext,eq,i32)
8_2 (lshr,i32) == 12_0 (zext,ne,i32)
8_2 (lshr,i32) == 13_0 (zext,ult,i32)
8_2 (lshr,i32) == 14_0 (zext,slt,i32)
8_2 (lshr,i32) == 15_0 (zext,ule,i32)
8_2 (lshr,i32) == 16_0 (zext,sle,i32)
9_1 (ashr,i32) == 1_0 (add,i32)
9_1 (ashr,i32) == 2_0 (sub,i32)
9_1 (ashr,i32) == 3_0 (mul,i32)
9_1 (ashr,i32) == 4_0 (and,i32)
9_1 (ashr,i32) == 5_0 (or,i32)
9_1 (ashr,i32) == 6_0 (xor,i32)
9_1 (ashr,i32) == 7_0 (shl,i32)
9_1 (ashr,i32) == 8_0 (lshr,i32)
9_1 (ashr,i32) == 10_0 (select,i32)
9_1 (ashr,i32) == 11_0 (zext,eq,i32)
9_1 (ashr,i32) == 12_0 (zext,ne,i32)
9_1 (ashr,i32) == 13_0 (zext,ult,i32)
9_1 (ashr,i32) == 14_0 (zext,slt,i32)
9_1 (ashr,i32) == 15_0 (zext,ule,i32)
9_1 (ashr,i32) == 16_0 (zext,sle,i32)
9_2 (ashr,i32) == 1_0 (add,i32)
9_2 (ashr,i32) == 2_0 (sub,i32)
9_2 (ashr,i32) == 3_0 (mul,i32)
9_2 (ashr,i32) == 4_0 (and,i32)
9_2 (ashr,i32) == 5_0 (or,i32)
9_2 (ashr,i32) == 6_0 (xor,i32)
9_2 (ashr,i32) == 7_0 (shl,i32)
9_2 (ashr,i32) == 8_0 (lshr,i32)
9_2 (ashr,i32) == 10_0 (select,i32)
9_2 (ashr,i32) == 11_0 (zext,eq,i32)
9_2 (ashr,i32) == 12_0 (zext,ne,i32)
9_2 (ashr,i32) == 13_0 (zext,ult,i32)
9_2 (ashr,i32) == 14_0 (zext,slt,i32)
9_2 (ashr,i32) == 15_0 (zext,ule,i32)
9_2 (ashr,i32) == 16_0 (zext,sle,i32)
10_1 (select,i32) == 1_0 (add,i32)
10_1 (select,i32) == 2_0 (sub,i32)
10_1 (select,i32) == 3_0 (mul,i32)
10_1 (select,i32) == 4_0 (and,i32)
10_1 (select,i32) == 5_0 (or,i32)
10_1 (select,i32) == 6_0 (xor,i32)
10_1 (select,i32) == 7_0 (shl,i32)
10_1 (select,i32) == 8_0 (lshr,i32)
10_1 (select,i32) == 9_0 (ashr,i32)
10_1 (select,i32) == 11_0 (zext,eq,i32)
10_1 (select,i32) == 12_0 (zext,ne,i32)
10_1 (select,i32) == 13_0 (zext,ult,i32)
10_1 (select,i32) == 14_0 (zext,slt,i32)
10_1 (select,i32) == 15_0 (zext,ule,i32)
10_1 (select,i32) == 16_0 (zext,sle,i32)
10_2 (select,i32) == 1_0 (add,i32)
10_2 (select,i32) == 2_0 (sub,i32)
10_2 (select,i32) == 3_0 (mul,i32)
10_2 (select,i32) == 4_0 (and,i32)
10_2 (select,i32) == 5_0 (or,i32)
10_2 (select,i32) == 6_0 (xor,i32)
10_2 (select,i32) == 7_0 (shl,i32)
10_2 (select,i32) == 8_0 (lshr,i32)
10_2 (select,i32) == 9_0 (ashr,i32)
10_2 (select,i32) == 11_0 (zext,eq,i32)
10_2 (select,i32) == 12_0 (zext,ne,i32)
10_2 (select,i32) == 13_0 (zext,ult,i32)
10_2 (select,i32) == 14_0 (zext,slt,i32)
10_2 (select,i32) == 15_0 (zext,ule,i32)
10_2 (select,i32) == 16_0 (zext,sle,i32)
10_3 (select,i32) == 1_0 (add,i32)
10_3 (select,i32) == 2_0 (sub,i32)
10_3 (select,i32) == 3_0 (mul,i32)
10_3 (select,i32) == 4_0 (and,i32)
10_3 (select,i32) == 5_0 (or,i32)
10_3 (select,i32) == 6_0 (xor,i32)
10_3 (select,i32) == 7_0 (shl,i32)
10_3 (select,i32) == 8_0 (lshr,i32)
10_3 (select,i32) == 9_0 (ashr,i32)
10_3 (select,i32) == 11_0 (zext,eq,i32)
10_3 (select,i32) == 12_0 (zext,ne,i32)
10_3 (select,i32) == 13_0 (zext,ult,i32)
10_3 (select,i32) == 14_0 (zext,slt,i32)
10_3 (select,i32) == 15_0 (zext,ule,i32)
10_3 (select,i32) == 16_0 (zext,sle,i32)
11_1 (eq,i32) == 1_0 (add,i32)
11_1 (eq,i32) == 2_0 (sub,i32)
11_1 (eq,i32) == 3_0 (mul,i32)
11_1 (eq,i32) == 4_0 (and,i32)
11_1 (eq,i32) == 5_0 (or,i32)
11_1 (eq,i32) == 6_0 (xor,i32)
11_1 (eq,i32) == 7_0 (shl,i32)
11_1 (eq,i32) == 8_0 (lshr,i32)
11_1 (eq,i32) == 9_0 (ashr,i32)
11_1 (eq,i32) == 10_0 (select,i32)
11_1 (eq,i32) == 12_0 (zext,ne,i32)
11_1 (eq,i32) == 13_0 (zext,ult,i32)
11_1 (eq,i32) == 14_0 (zext,slt,i32)
11_1 (eq,i32) == 15_0 (zext,ule,i32)
11_1 (eq,i32) == 16_0 (zext,sle,i32)
11_2 (eq,i32) == 1_0 (add,i32)
11_2 (eq,i32) == 2_0 (sub,i32)
11_2 (eq,i32) == 3_0 (mul,i32)
11_2 (eq,i32) == 4_0 (and,i32)
11_2 (eq,i32) == 5_0 (or,i32)
11_2 (eq,i32) == 6_0 (xor,i32)
11_2 (eq,i32) == 7_0 (shl,i32)
11_2 (eq,i32) == 8_0 (lshr,i32)
11_2 (eq,i32) == 9_0 (ashr,i32)
11_2 (eq,i32) == 10_0 (select,i32)
11_2 (eq,i32) == 12_0 (zext,ne,i32)
11_2 (eq,i32) == 13_0 (zext,ult,i32)
11_2 (eq,i32) == 14_0 (zext,slt,i32)
11_2 (eq,i32) == 15_0 (zext,ule,i32)
11_2 (eq,i32) == 16_0 (zext,sle,i32)
12_1 (ne,i32) == 1_0 (add,i32)
12_1 (ne,i32) == 2_0 (sub,i32)
12_1 (ne,i32) == 3_0 (mul,i32)
12_1 (ne,i32) == 4_0 (and,i32)
12_1 (ne,i32) == 5_0 (or,i32)
12_1 (ne,i32) == 6_0 (xor,i32)
12_1 (ne,i32) == 7_0 (shl,i32)
12_1 (ne,i32) == 8_0 (lshr,i32)
12_1 (ne,i32) == 9_0 (ashr,i32)
12_1 (ne,i32) == 10_0 (select,i32)
12_1 (ne,i32) == 11_0 (zext,eq,i32)
12_1 (ne,i32) == 13_0 (zext,ult,i32)
12_1 (ne,i32) == 14_0 (zext,slt,i32)
12_1 (ne,i32) == 15_0 (zext,ule,i32)
12_1 (ne,i32) == 16_0 (zext,sle,i32)
12_2 (ne,i32) == 1_0 (add,i32)
12_2 (ne,i32) == 2_0 (sub,i32)
12_2 (ne,i32) == 3_0 (mul,i32)
12_2 (ne,i32) == 4_0 (and,i32)
12_2 (ne,i32) == 5_0 (or,i32)
12_2 (ne,i32) == 6_0 (xor,i32)
12_2 (ne,i32) == 7_0 (shl,i32)
12_2 (ne,i32) == 8_0 (lshr,i32)
12_2 (ne,i32) == 9_0 (ashr,i32)
12_2 (ne,i32) == 10_0 (select,i32)
12_2 (ne,i32) == 11_0 (zext,eq,i32)
12_2 (ne,i32) == 13_0 (zext,ult,i32)
12_2 (ne,i32) == 14_0 (zext,slt,i32)
12_2 (ne,i32) == 15_0 (zext,ule,i32)
12_2 (ne,i32) == 16_0 (zext,sle,i32)
13_1 (ult,i32) == 1_0 (add,i32)
13_1 (ult,i32) == 2_0 (sub,i32)
13_1 (ult,i32) == 3_0 (mul,i32)
13_1 (ult,i32) == 4_0 (and,i32)
13_1 (ult,i32) == 5_0 (or,i32)
13_1 (ult,i32) == 6_0 (xor,i32)
13_1 (ult,i32) == 7_0 (shl,i32)
13_1 (ult,i32) == 8_0 (lshr,i32)
13_1 (ult,i32) == 9_0 (ashr,i32)
13_1 (ult,i32) == 10_0 (select,i32)
13_1 (ult,i32) == 11_0 (zext,eq,i32)
13_1 (ult,i32) == 12_0 (zext,ne,i32)
13_1 (ult,i32) == 14_0 (zext,slt,i32)
13_1 (ult,i32) == 15_0 (zext,ule,i32)
13_1 (ult,i32) == 16_0 (zext,sle,i32)
13_2 (ult,i32) == 1_0 (add,i32)
13_2 (ult,i32) == 2_0 (sub,i32)
13_2 (ult,i32) == 3_0 (mul,i32)
13_2 (ult,i32) == 4_0 (and,i32)
13_2 (ult,i32) == 5_0 (or,i32)
13_2 (ult,i32) == 6_0 (xor,i32)
13_2 (ult,i32) == 7_0 (shl,i32)
13_2 (ult,i32) == 8_0 (lshr,i32)
13_2 (ult,i32) == 9_0 (ashr,i32)
13_2 (ult,i32) == 10_0 (select,i32)
13_2 (ult,i32) == 11_0 (zext,eq,i32)
13_2 (ult,i32) == 12_0 (zext,ne,i32)
13_2 (ult,i32) == 14_0 (zext,slt,i32)
13_2 (ult,i32) == 15_0 (zext,ule,i32)
13_2 (ult,i32) == 16_0 (zext,sle,i32)
14_1 (slt,i32) == 1_0 (add,i32)
14_1 (slt,i32) == 2_0 (sub,i32)
14_1 (slt,i32) == 3_0 (mul,i32)
14_1 (slt,i32) == 4_0 (and,i32)
14_1 (slt,i32) == 5_0 (or,i32)
14_1 (slt,i32) == 6_0 (xor,i32)
14_1 (slt,i32) == 7_0 (shl,i32)
14_1 (slt,i32) == 8_0 (lshr,i32)
14_1 (slt,i32) == 9_0 (ashr,i32)
14_1 (slt,i32) == 10_0 (select,i32)
14_1 (slt,i32) == 11_0 (zext,eq,i32)
14_1 (slt,i32) == 12_0 (zext,ne,i32)
14_1 (slt,i32) == 13_0 (zext,ult,i32)
14_1 (slt,i32) == 15_0 (zext,ule,i32)
14_1 (slt,i32) == 16_0 (zext,sle,i32)
14_2 (slt,i32) == 1_0 (add,i32)
14_2 (slt,i32) == 2_0 (sub,i32)
14_2 (slt,i32) == 3_0 (mul,i32)
14_2 (slt,i32) == 4_0 (and,i32)
14_2 (slt,i32) == 5_0 (or,i32)
14_2 (slt,i32) == 6_0 (xor,i32)
14_2 (slt,i32) == 7_0 (shl,i32)
14_2 (slt,i32) == 8_0 (lshr,i32)
14_2 (slt,i32) == 9_0 (ashr,i32)
14_2 (slt,i32) == 10_0 (select,i32)
14_2 (slt,i32) == 11_0 (zext,eq,i32)
14_2 (slt,i32) == 12_0 (zext,ne,i32)
14_2 (slt,i32) == 13_0 (zext,ult,i32)
14_2 (slt,i32) == 15_0 (zext,ule,i32)
14_2 (slt,i32) == 16_0 (zext,sle,i32)
15_1 (ule,i32) == 1_0 (add,i32)
15_1 (ule,i32) == 2_0 (sub,i32)
15_1 (ule,i32) == 3_0 (mul,i32)
15_1 (ule,i32) == 4_0 (and,i32)
15_1 (ule,i32) == 5_0 (or,i32)
15_1 (ule,i32) == 6_0 (xor,i32)
15_1 (ule,i32) == 7_0 (shl,i32)
15_1 (ule,i32) == 8_0 (lshr,i32)
15_1 (ule,i32) == 9_0 (ashr,i32)
15_1 (ule,i32) == 10_0 (select,i32)
15_1 (ule,i32) == 11_0 (zext,eq,i32)
15_1 (ule,i32) == 12_0 (zext,ne,i32)
15_1 (ule,i32) == 13_0 (zext,ult,i32)
15_1 (ule,i32) == 14_0 (zext,slt,i32)
15_1 (ule,i32) == 16_0 (zext,sle,i32)
15_2 (ule,i32) == 1_0 (add,i32)
15_2 (ule,i32) == 2_0 (sub,i32)
15_2 (ule,i32) == 3_0 (mul,i32)
15_2 (ule,i32) == 4_0 (and,i32)
15_2 (ule,i32) == 5_0 (or,i32)
15_2 (ule,i32) == 6_0 (xor,i32)
15_2 (ule,i32) == 7_0 (shl,i32)
15_2 (ule,i32) == 8_0 (lshr,i32)
15_2 (ule,i32) == 9_0 (ashr,i32)
15_2 (ule,i32) == 10_0 (select,i32)
15_2 (ule,i32) == 11_0 (zext,eq,i32)
15_2 (ule,i32) == 12_0 (zext,ne,i32)
15_2 (ule,i32) == 13_0 (zext,ult,i32)
15_2 (ule,i32) == 14_0 (zext,slt,i32)
15_2 (ule,i32) == 16_0 (zext,sle,i32)
16_1 (sle,i32) == 1_0 (add,i32)
16_1 (sle,i32) == 2_0 (sub,i32)
16_1 (sle,i32) == 3_0 (mul,i32)
16_1 (sle,i32) == 4_0 (and,i32)
16_1 (sle,i32) == 5_0 (or,i32)
16_1 (sle,i32) == 6_0 (xor,i32)
16_1 (sle,i32) == 7_0 (shl,i32)
16_1 (sle,i32) == 8_0 (lshr,i32)
16_1 (sle,i32) == 9_0 (ashr,i32)
16_1 (sle,i32) == 10_0 (select,i32)
16_1 (sle,i32) == 11_0 (zext,eq,i32)
16_1 (sle,i32) == 12_0 (zext,ne,i32)
16_1 (sle,i32) == 13_0 (zext,ult,i32)
16_1 (sle,i32) == 14_0 (zext,slt,i32)
16_1 (sle,i32) == 15_0 (zext,ule,i32)
16_2 (sle,i32) == 1_0 (add,i32)
16_2 (sle,i32) == 2_0 (sub,i32)
16_2 (sle,i32) == 3_0 (mul,i32)
16_2 (sle,i32) == 4_0 (and,i32)
16_2 (sle,i32) == 5_0 (or,i32)
16_2 (sle,i32) == 6_0 (xor,i32)
16_2 (sle,i32) == 7_0 (shl,i32)
16_2 (sle,i32) == 8_0 (lshr,i32)
16_2 (sle,i32) == 9_0 (ashr,i32)
16_2 (sle,i32) == 10_0 (select,i32)
16_2 (sle,i32) == 11_0 (zext,eq,i32)
16_2 (sle,i32) == 12_0 (zext,ne,i32)
16_2 (sle,i32) == 13_0 (zext,ult,i32)
16_2 (sle,i32) == 14_0 (zext,slt,i32)
16_2 (sle,i32) == 15_0 (zext,ule,i32)
1_0 (add,i32) == 17_0 (output,i32)
2_0 (sub,i32) == 17_0 (output,i32)
3_0 (mul,i32) == 17_0 (output,i32)
4_0 (and,i32) == 17_0 (output,i32)
5_0 (or,i32) == 17_0 (output,i32)
6_0 (xor,i32) == 17_0 (output,i32)
7_0 (shl,i32) == 17_0 (output,i32)
8_0 (lshr,i32) == 17_0 (output,i32)
9_0 (ashr,i32) == 17_0 (output,i32)
10_0 (select,i32) == 17_0 (output,i32)
11_0 (zext,eq,i32) == 17_0 (output,i32)
12_0 (zext,ne,i32) == 17_0 (output,i32)
13_0 (zext,ult,i32) == 17_0 (output,i32)
14_0 (zext,slt,i32) == 17_0 (output,i32)
15_0 (zext,ule,i32) == 17_0 (output,i32)
16_0 (zext,sle,i32) == 17_0 (output,i32)
synthesizing using 0 component(s)
0 <= 17_0 (output,i32) < 3
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
solving synthesis constraint.. UNSAT
; no valid wiring found
; starting synthesis for LHS
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = mulnsw %0, %0 (hasExternalUses)
%2:i32 = urem %1, 1000000:i32
infer %2
inputs: 1, constants: 2
N: 3, M: 19
default width: 32
output width: 32
component library: add (32, { 32 32 }); sub (32, { 32 32 }); mul (32, { 32 32 }); and (32, { 32 32 }); or (32, { 32 32 }); xor (32, { 32 32 }); shl (32, { 32 32 }); lshr (32, { 32 32 }); ashr (32, { 32 32 }); select (32, { 1 32 32 }); eq (1, { 32 32 }); ne (1, { 32 32 }); ult (1, { 32 32 }); slt (1, { 32 32 }); ule (1, { 32 32 }); sle (1, { 32 32 }); 
const components: const (32); const (32); 
I: 0_1 (input,i32) 0_2 (const,i32) 0_3 (const,i32) 
P: 1_1 (add,i32) 1_2 (add,i32) 2_1 (sub,i32) 2_2 (sub,i32) 3_1 (mul,i32) 3_2 (mul,i32) 4_1 (and,i32) 4_2 (and,i32) 5_1 (or,i32) 5_2 (or,i32) 6_1 (xor,i32) 6_2 (xor,i32) 7_1 (shl,i32) 7_2 (shl,i32) 8_1 (lshr,i32) 8_2 (lshr,i32) 9_1 (ashr,i32) 9_2 (ashr,i32) 10_1 (select,i32) 10_2 (select,i32) 10_3 (select,i32) 11_1 (eq,i32) 11_2 (eq,i32) 12_1 (ne,i32) 12_2 (ne,i32) 13_1 (ult,i32) 13_2 (ult,i32) 14_1 (slt,i32) 14_2 (slt,i32) 15_1 (ule,i32) 15_2 (ule,i32) 16_1 (sle,i32) 16_2 (sle,i32) 
R: 1_0 (add,i32) 2_0 (sub,i32) 3_0 (mul,i32) 4_0 (and,i32) 5_0 (or,i32) 6_0 (xor,i32) 7_0 (shl,i32) 8_0 (lshr,i32) 9_0 (ashr,i32) 10_0 (select,i32) 11_0 (zext,eq,i32) 12_0 (zext,ne,i32) 13_0 (zext,ult,i32) 14_0 (zext,slt,i32) 15_0 (zext,ule,i32) 16_0 (zext,sle,i32) 
L: 0_1 (input,i32) 0_2 (const,i32) 0_3 (const,i32) 1_1 (add,i32) 1_2 (add,i32) 2_1 (sub,i32) 2_2 (sub,i32) 3_1 (mul,i32) 3_2 (mul,i32) 4_1 (and,i32) 4_2 (and,i32) 5_1 (or,i32) 5_2 (or,i32) 6_1 (xor,i32) 6_2 (xor,i32) 7_1 (shl,i32) 7_2 (shl,i32) 8_1 (lshr,i32) 8_2 (lshr,i32) 9_1 (ashr,i32) 9_2 (ashr,i32) 10_1 (select,i32) 10_2 (select,i32) 10_3 (select,i32) 11_1 (eq,i32) 11_2 (eq,i32) 12_1 (ne,i32) 12_2 (ne,i32) 13_1 (ult,i32) 13_2 (ult,i32) 14_1 (slt,i32) 14_2 (slt,i32) 15_1 (ule,i32) 15_2 (ule,i32) 16_1 (sle,i32) 16_2 (sle,i32) 1_0 (add,i32) 2_0 (sub,i32) 3_0 (mul,i32) 4_0 (and,i32) 5_0 (or,i32) 6_0 (xor,i32) 7_0 (shl,i32) 8_0 (lshr,i32) 9_0 (ashr,i32) 10_0 (select,i32) 11_0 (zext,eq,i32) 12_0 (zext,ne,i32) 13_0 (zext,ult,i32) 14_0 (zext,slt,i32) 15_0 (zext,ule,i32) 16_0 (zext,sle,i32) 17_0 (output,i32) 
O: 17_0 (output,i32)
consistency constraints:
1_0 (add,i32) != 2_0 (sub,i32)
1_0 (add,i32) != 3_0 (mul,i32)
1_0 (add,i32) != 4_0 (and,i32)
1_0 (add,i32) != 5_0 (or,i32)
1_0 (add,i32) != 6_0 (xor,i32)
1_0 (add,i32) != 7_0 (shl,i32)
1_0 (add,i32) != 8_0 (lshr,i32)
1_0 (add,i32) != 9_0 (ashr,i32)
1_0 (add,i32) != 10_0 (select,i32)
1_0 (add,i32) != 11_0 (zext,eq,i32)
1_0 (add,i32) != 12_0 (zext,ne,i32)
1_0 (add,i32) != 13_0 (zext,ult,i32)
1_0 (add,i32) != 14_0 (zext,slt,i32)
1_0 (add,i32) != 15_0 (zext,ule,i32)
1_0 (add,i32) != 16_0 (zext,sle,i32)
2_0 (sub,i32) != 3_0 (mul,i32)
2_0 (sub,i32) != 4_0 (and,i32)
2_0 (sub,i32) != 5_0 (or,i32)
2_0 (sub,i32) != 6_0 (xor,i32)
2_0 (sub,i32) != 7_0 (shl,i32)
2_0 (sub,i32) != 8_0 (lshr,i32)
2_0 (sub,i32) != 9_0 (ashr,i32)
2_0 (sub,i32) != 10_0 (select,i32)
2_0 (sub,i32) != 11_0 (zext,eq,i32)
2_0 (sub,i32) != 12_0 (zext,ne,i32)
2_0 (sub,i32) != 13_0 (zext,ult,i32)
2_0 (sub,i32) != 14_0 (zext,slt,i32)
2_0 (sub,i32) != 15_0 (zext,ule,i32)
2_0 (sub,i32) != 16_0 (zext,sle,i32)
3_0 (mul,i32) != 4_0 (and,i32)
3_0 (mul,i32) != 5_0 (or,i32)
3_0 (mul,i32) != 6_0 (xor,i32)
3_0 (mul,i32) != 7_0 (shl,i32)
3_0 (mul,i32) != 8_0 (lshr,i32)
3_0 (mul,i32) != 9_0 (ashr,i32)
3_0 (mul,i32) != 10_0 (select,i32)
3_0 (mul,i32) != 11_0 (zext,eq,i32)
3_0 (mul,i32) != 12_0 (zext,ne,i32)
3_0 (mul,i32) != 13_0 (zext,ult,i32)
3_0 (mul,i32) != 14_0 (zext,slt,i32)
3_0 (mul,i32) != 15_0 (zext,ule,i32)
3_0 (mul,i32) != 16_0 (zext,sle,i32)
4_0 (and,i32) != 5_0 (or,i32)
4_0 (and,i32) != 6_0 (xor,i32)
4_0 (and,i32) != 7_0 (shl,i32)
4_0 (and,i32) != 8_0 (lshr,i32)
4_0 (and,i32) != 9_0 (ashr,i32)
4_0 (and,i32) != 10_0 (select,i32)
4_0 (and,i32) != 11_0 (zext,eq,i32)
4_0 (and,i32) != 12_0 (zext,ne,i32)
4_0 (and,i32) != 13_0 (zext,ult,i32)
4_0 (and,i32) != 14_0 (zext,slt,i32)
4_0 (and,i32) != 15_0 (zext,ule,i32)
4_0 (and,i32) != 16_0 (zext,sle,i32)
5_0 (or,i32) != 6_0 (xor,i32)
5_0 (or,i32) != 7_0 (shl,i32)
5_0 (or,i32) != 8_0 (lshr,i32)
5_0 (or,i32) != 9_0 (ashr,i32)
5_0 (or,i32) != 10_0 (select,i32)
5_0 (or,i32) != 11_0 (zext,eq,i32)
5_0 (or,i32) != 12_0 (zext,ne,i32)
5_0 (or,i32) != 13_0 (zext,ult,i32)
5_0 (or,i32) != 14_0 (zext,slt,i32)
5_0 (or,i32) != 15_0 (zext,ule,i32)
5_0 (or,i32) != 16_0 (zext,sle,i32)
6_0 (xor,i32) != 7_0 (shl,i32)
6_0 (xor,i32) != 8_0 (lshr,i32)
6_0 (xor,i32) != 9_0 (ashr,i32)
6_0 (xor,i32) != 10_0 (select,i32)
6_0 (xor,i32) != 11_0 (zext,eq,i32)
6_0 (xor,i32) != 12_0 (zext,ne,i32)
6_0 (xor,i32) != 13_0 (zext,ult,i32)
6_0 (xor,i32) != 14_0 (zext,slt,i32)
6_0 (xor,i32) != 15_0 (zext,ule,i32)
6_0 (xor,i32) != 16_0 (zext,sle,i32)
7_0 (shl,i32) != 8_0 (lshr,i32)
7_0 (shl,i32) != 9_0 (ashr,i32)
7_0 (shl,i32) != 10_0 (select,i32)
7_0 (shl,i32) != 11_0 (zext,eq,i32)
7_0 (shl,i32) != 12_0 (zext,ne,i32)
7_0 (shl,i32) != 13_0 (zext,ult,i32)
7_0 (shl,i32) != 14_0 (zext,slt,i32)
7_0 (shl,i32) != 15_0 (zext,ule,i32)
7_0 (shl,i32) != 16_0 (zext,sle,i32)
8_0 (lshr,i32) != 9_0 (ashr,i32)
8_0 (lshr,i32) != 10_0 (select,i32)
8_0 (lshr,i32) != 11_0 (zext,eq,i32)
8_0 (lshr,i32) != 12_0 (zext,ne,i32)
8_0 (lshr,i32) != 13_0 (zext,ult,i32)
8_0 (lshr,i32) != 14_0 (zext,slt,i32)
8_0 (lshr,i32) != 15_0 (zext,ule,i32)
8_0 (lshr,i32) != 16_0 (zext,sle,i32)
9_0 (ashr,i32) != 10_0 (select,i32)
9_0 (ashr,i32) != 11_0 (zext,eq,i32)
9_0 (ashr,i32) != 12_0 (zext,ne,i32)
9_0 (ashr,i32) != 13_0 (zext,ult,i32)
9_0 (ashr,i32) != 14_0 (zext,slt,i32)
9_0 (ashr,i32) != 15_0 (zext,ule,i32)
9_0 (ashr,i32) != 16_0 (zext,sle,i32)
10_0 (select,i32) != 11_0 (zext,eq,i32)
10_0 (select,i32) != 12_0 (zext,ne,i32)
10_0 (select,i32) != 13_0 (zext,ult,i32)
10_0 (select,i32) != 14_0 (zext,slt,i32)
10_0 (select,i32) != 15_0 (zext,ule,i32)
10_0 (select,i32) != 16_0 (zext,sle,i32)
11_0 (zext,eq,i32) != 12_0 (zext,ne,i32)
11_0 (zext,eq,i32) != 13_0 (zext,ult,i32)
11_0 (zext,eq,i32) != 14_0 (zext,slt,i32)
11_0 (zext,eq,i32) != 15_0 (zext,ule,i32)
11_0 (zext,eq,i32) != 16_0 (zext,sle,i32)
12_0 (zext,ne,i32) != 13_0 (zext,ult,i32)
12_0 (zext,ne,i32) != 14_0 (zext,slt,i32)
12_0 (zext,ne,i32) != 15_0 (zext,ule,i32)
12_0 (zext,ne,i32) != 16_0 (zext,sle,i32)
13_0 (zext,ult,i32) != 14_0 (zext,slt,i32)
13_0 (zext,ult,i32) != 15_0 (zext,ule,i32)
13_0 (zext,ult,i32) != 16_0 (zext,sle,i32)
14_0 (zext,slt,i32) != 15_0 (zext,ule,i32)
14_0 (zext,slt,i32) != 16_0 (zext,sle,i32)
15_0 (zext,ule,i32) != 16_0 (zext,sle,i32)
acyclicity constraints:
1_1 (add,i32) < 1_0
1_2 (add,i32) < 1_0
2_1 (sub,i32) < 2_0
2_2 (sub,i32) < 2_0
3_1 (mul,i32) < 3_0
3_2 (mul,i32) < 3_0
4_1 (and,i32) < 4_0
4_2 (and,i32) < 4_0
5_1 (or,i32) < 5_0
5_2 (or,i32) < 5_0
6_1 (xor,i32) < 6_0
6_2 (xor,i32) < 6_0
7_1 (shl,i32) < 7_0
7_2 (shl,i32) < 7_0
8_1 (lshr,i32) < 8_0
8_2 (lshr,i32) < 8_0
9_1 (ashr,i32) < 9_0
9_2 (ashr,i32) < 9_0
10_1 (select,i32) < 10_0
10_2 (select,i32) < 10_0
10_3 (select,i32) < 10_0
11_1 (eq,i32) < 11_0
11_2 (eq,i32) < 11_0
12_1 (ne,i32) < 12_0
12_2 (ne,i32) < 12_0
13_1 (ult,i32) < 13_0
13_2 (ult,i32) < 13_0
14_1 (slt,i32) < 14_0
14_2 (slt,i32) < 14_0
15_1 (ule,i32) < 15_0
15_2 (ule,i32) < 15_0
16_1 (sle,i32) < 16_0
16_2 (sle,i32) < 16_0
location variable constraints:
0 <= 1_1 (add,i32) < 19
0 <= 1_2 (add,i32) < 19
0 <= 2_1 (sub,i32) < 19
0 <= 2_2 (sub,i32) < 19
0 <= 3_1 (mul,i32) < 19
0 <= 3_2 (mul,i32) < 19
0 <= 4_1 (and,i32) < 19
0 <= 4_2 (and,i32) < 19
0 <= 5_1 (or,i32) < 19
0 <= 5_2 (or,i32) < 19
0 <= 6_1 (xor,i32) < 19
0 <= 6_2 (xor,i32) < 19
0 <= 7_1 (shl,i32) < 19
0 <= 7_2 (shl,i32) < 19
0 <= 8_1 (lshr,i32) < 19
0 <= 8_2 (lshr,i32) < 19
0 <= 9_1 (ashr,i32) < 19
0 <= 9_2 (ashr,i32) < 19
0 <= 10_1 (select,i32) < 19
0 <= 10_2 (select,i32) < 19
0 <= 10_3 (select,i32) < 19
0 <= 11_1 (eq,i32) < 19
0 <= 11_2 (eq,i32) < 19
0 <= 12_1 (ne,i32) < 19
0 <= 12_2 (ne,i32) < 19
0 <= 13_1 (ult,i32) < 19
0 <= 13_2 (ult,i32) < 19
0 <= 14_1 (slt,i32) < 19
0 <= 14_2 (slt,i32) < 19
0 <= 15_1 (ule,i32) < 19
0 <= 15_2 (ule,i32) < 19
0 <= 16_1 (sle,i32) < 19
0 <= 16_2 (sle,i32) < 19
0 <= 0_1 (input,i32) < 19
0 <= 0_2 (const,i32) < 19
0 <= 0_3 (const,i32) < 19
3 <= 1_0 (add,i32) < 19
3 <= 2_0 (sub,i32) < 19
3 <= 3_0 (mul,i32) < 19
3 <= 4_0 (and,i32) < 19
3 <= 5_0 (or,i32) < 19
3 <= 6_0 (xor,i32) < 19
3 <= 7_0 (shl,i32) < 19
3 <= 8_0 (lshr,i32) < 19
3 <= 9_0 (ashr,i32) < 19
3 <= 10_0 (select,i32) < 19
3 <= 11_0 (zext,eq,i32) < 19
3 <= 12_0 (zext,ne,i32) < 19
3 <= 13_0 (zext,ult,i32) < 19
3 <= 14_0 (zext,slt,i32) < 19
3 <= 15_0 (zext,ule,i32) < 19
3 <= 16_0 (zext,sle,i32) < 19
component input constraints:
1_1 (add,i32) == 0_1 (input,i32) || 1_1 (add,i32) == 0_2 (const,i32) || 1_1 (add,i32) == 0_3 (const,i32) || 1_1 (add,i32) == 2_0 (sub,i32) || 1_1 (add,i32) == 3_0 (mul,i32) || 1_1 (add,i32) == 4_0 (and,i32) || 1_1 (add,i32) == 5_0 (or,i32) || 1_1 (add,i32) == 6_0 (xor,i32) || 1_1 (add,i32) == 7_0 (shl,i32) || 1_1 (add,i32) == 8_0 (lshr,i32) || 1_1 (add,i32) == 9_0 (ashr,i32) || 1_1 (add,i32) == 10_0 (select,i32) || 1_1 (add,i32) == 11_0 (zext,eq,i32) || 1_1 (add,i32) == 12_0 (zext,ne,i32) || 1_1 (add,i32) == 13_0 (zext,ult,i32) || 1_1 (add,i32) == 14_0 (zext,slt,i32) || 1_1 (add,i32) == 15_0 (zext,ule,i32) || 1_1 (add,i32) == 16_0 (zext,sle,i32) || false
1_2 (add,i32) == 0_1 (input,i32) || 1_2 (add,i32) == 0_2 (const,i32) || 1_2 (add,i32) == 0_3 (const,i32) || 1_2 (add,i32) == 2_0 (sub,i32) || 1_2 (add,i32) == 3_0 (mul,i32) || 1_2 (add,i32) == 4_0 (and,i32) || 1_2 (add,i32) == 5_0 (or,i32) || 1_2 (add,i32) == 6_0 (xor,i32) || 1_2 (add,i32) == 7_0 (shl,i32) || 1_2 (add,i32) == 8_0 (lshr,i32) || 1_2 (add,i32) == 9_0 (ashr,i32) || 1_2 (add,i32) == 10_0 (select,i32) || 1_2 (add,i32) == 11_0 (zext,eq,i32) || 1_2 (add,i32) == 12_0 (zext,ne,i32) || 1_2 (add,i32) == 13_0 (zext,ult,i32) || 1_2 (add,i32) == 14_0 (zext,slt,i32) || 1_2 (add,i32) == 15_0 (zext,ule,i32) || 1_2 (add,i32) == 16_0 (zext,sle,i32) || false
2_1 (sub,i32) == 0_1 (input,i32) || 2_1 (sub,i32) == 0_2 (const,i32) || 2_1 (sub,i32) == 0_3 (const,i32) || 2_1 (sub,i32) == 1_0 (add,i32) || 2_1 (sub,i32) == 3_0 (mul,i32) || 2_1 (sub,i32) == 4_0 (and,i32) || 2_1 (sub,i32) == 5_0 (or,i32) || 2_1 (sub,i32) == 6_0 (xor,i32) || 2_1 (sub,i32) == 7_0 (shl,i32) || 2_1 (sub,i32) == 8_0 (lshr,i32) || 2_1 (sub,i32) == 9_0 (ashr,i32) || 2_1 (sub,i32) == 10_0 (select,i32) || 2_1 (sub,i32) == 11_0 (zext,eq,i32) || 2_1 (sub,i32) == 12_0 (zext,ne,i32) || 2_1 (sub,i32) == 13_0 (zext,ult,i32) || 2_1 (sub,i32) == 14_0 (zext,slt,i32) || 2_1 (sub,i32) == 15_0 (zext,ule,i32) || 2_1 (sub,i32) == 16_0 (zext,sle,i32) || false
2_2 (sub,i32) == 0_1 (input,i32) || 2_2 (sub,i32) == 0_2 (const,i32) || 2_2 (sub,i32) == 0_3 (const,i32) || 2_2 (sub,i32) == 1_0 (add,i32) || 2_2 (sub,i32) == 3_0 (mul,i32) || 2_2 (sub,i32) == 4_0 (and,i32) || 2_2 (sub,i32) == 5_0 (or,i32) || 2_2 (sub,i32) == 6_0 (xor,i32) || 2_2 (sub,i32) == 7_0 (shl,i32) || 2_2 (sub,i32) == 8_0 (lshr,i32) || 2_2 (sub,i32) == 9_0 (ashr,i32) || 2_2 (sub,i32) == 10_0 (select,i32) || 2_2 (sub,i32) == 11_0 (zext,eq,i32) || 2_2 (sub,i32) == 12_0 (zext,ne,i32) || 2_2 (sub,i32) == 13_0 (zext,ult,i32) || 2_2 (sub,i32) == 14_0 (zext,slt,i32) || 2_2 (sub,i32) == 15_0 (zext,ule,i32) || 2_2 (sub,i32) == 16_0 (zext,sle,i32) || false
3_1 (mul,i32) == 0_1 (input,i32) || 3_1 (mul,i32) == 0_2 (const,i32) || 3_1 (mul,i32) == 0_3 (const,i32) || 3_1 (mul,i32) == 1_0 (add,i32) || 3_1 (mul,i32) == 2_0 (sub,i32) || 3_1 (mul,i32) == 4_0 (and,i32) || 3_1 (mul,i32) == 5_0 (or,i32) || 3_1 (mul,i32) == 6_0 (xor,i32) || 3_1 (mul,i32) == 7_0 (shl,i32) || 3_1 (mul,i32) == 8_0 (lshr,i32) || 3_1 (mul,i32) == 9_0 (ashr,i32) || 3_1 (mul,i32) == 10_0 (select,i32) || 3_1 (mul,i32) == 11_0 (zext,eq,i32) || 3_1 (mul,i32) == 12_0 (zext,ne,i32) || 3_1 (mul,i32) == 13_0 (zext,ult,i32) || 3_1 (mul,i32) == 14_0 (zext,slt,i32) || 3_1 (mul,i32) == 15_0 (zext,ule,i32) || 3_1 (mul,i32) == 16_0 (zext,sle,i32) || false
3_2 (mul,i32) == 0_1 (input,i32) || 3_2 (mul,i32) == 0_2 (const,i32) || 3_2 (mul,i32) == 0_3 (const,i32) || 3_2 (mul,i32) == 1_0 (add,i32) || 3_2 (mul,i32) == 2_0 (sub,i32) || 3_2 (mul,i32) == 4_0 (and,i32) || 3_2 (mul,i32) == 5_0 (or,i32) || 3_2 (mul,i32) == 6_0 (xor,i32) || 3_2 (mul,i32) == 7_0 (shl,i32) || 3_2 (mul,i32) == 8_0 (lshr,i32) || 3_2 (mul,i32) == 9_0 (ashr,i32) || 3_2 (mul,i32) == 10_0 (select,i32) || 3_2 (mul,i32) == 11_0 (zext,eq,i32) || 3_2 (mul,i32) == 12_0 (zext,ne,i32) || 3_2 (mul,i32) == 13_0 (zext,ult,i32) || 3_2 (mul,i32) == 14_0 (zext,slt,i32) || 3_2 (mul,i32) == 15_0 (zext,ule,i32) || 3_2 (mul,i32) == 16_0 (zext,sle,i32) || false
4_1 (and,i32) == 0_1 (input,i32) || 4_1 (and,i32) == 0_2 (const,i32) || 4_1 (and,i32) == 0_3 (const,i32) || 4_1 (and,i32) == 1_0 (add,i32) || 4_1 (and,i32) == 2_0 (sub,i32) || 4_1 (and,i32) == 3_0 (mul,i32) || 4_1 (and,i32) == 5_0 (or,i32) || 4_1 (and,i32) == 6_0 (xor,i32) || 4_1 (and,i32) == 7_0 (shl,i32) || 4_1 (and,i32) == 8_0 (lshr,i32) || 4_1 (and,i32) == 9_0 (ashr,i32) || 4_1 (and,i32) == 10_0 (select,i32) || 4_1 (and,i32) == 11_0 (zext,eq,i32) || 4_1 (and,i32) == 12_0 (zext,ne,i32) || 4_1 (and,i32) == 13_0 (zext,ult,i32) || 4_1 (and,i32) == 14_0 (zext,slt,i32) || 4_1 (and,i32) == 15_0 (zext,ule,i32) || 4_1 (and,i32) == 16_0 (zext,sle,i32) || false
4_2 (and,i32) == 0_1 (input,i32) || 4_2 (and,i32) == 0_2 (const,i32) || 4_2 (and,i32) == 0_3 (const,i32) || 4_2 (and,i32) == 1_0 (add,i32) || 4_2 (and,i32) == 2_0 (sub,i32) || 4_2 (and,i32) == 3_0 (mul,i32) || 4_2 (and,i32) == 5_0 (or,i32) || 4_2 (and,i32) == 6_0 (xor,i32) || 4_2 (and,i32) == 7_0 (shl,i32) || 4_2 (and,i32) == 8_0 (lshr,i32) || 4_2 (and,i32) == 9_0 (ashr,i32) || 4_2 (and,i32) == 10_0 (select,i32) || 4_2 (and,i32) == 11_0 (zext,eq,i32) || 4_2 (and,i32) == 12_0 (zext,ne,i32) || 4_2 (and,i32) == 13_0 (zext,ult,i32) || 4_2 (and,i32) == 14_0 (zext,slt,i32) || 4_2 (and,i32) == 15_0 (zext,ule,i32) || 4_2 (and,i32) == 16_0 (zext,sle,i32) || false
5_1 (or,i32) == 0_1 (input,i32) || 5_1 (or,i32) == 0_2 (const,i32) || 5_1 (or,i32) == 0_3 (const,i32) || 5_1 (or,i32) == 1_0 (add,i32) || 5_1 (or,i32) == 2_0 (sub,i32) || 5_1 (or,i32) == 3_0 (mul,i32) || 5_1 (or,i32) == 4_0 (and,i32) || 5_1 (or,i32) == 6_0 (xor,i32) || 5_1 (or,i32) == 7_0 (shl,i32) || 5_1 (or,i32) == 8_0 (lshr,i32) || 5_1 (or,i32) == 9_0 (ashr,i32) || 5_1 (or,i32) == 10_0 (select,i32) || 5_1 (or,i32) == 11_0 (zext,eq,i32) || 5_1 (or,i32) == 12_0 (zext,ne,i32) || 5_1 (or,i32) == 13_0 (zext,ult,i32) || 5_1 (or,i32) == 14_0 (zext,slt,i32) || 5_1 (or,i32) == 15_0 (zext,ule,i32) || 5_1 (or,i32) == 16_0 (zext,sle,i32) || false
5_2 (or,i32) == 0_1 (input,i32) || 5_2 (or,i32) == 0_2 (const,i32) || 5_2 (or,i32) == 0_3 (const,i32) || 5_2 (or,i32) == 1_0 (add,i32) || 5_2 (or,i32) == 2_0 (sub,i32) || 5_2 (or,i32) == 3_0 (mul,i32) || 5_2 (or,i32) == 4_0 (and,i32) || 5_2 (or,i32) == 6_0 (xor,i32) || 5_2 (or,i32) == 7_0 (shl,i32) || 5_2 (or,i32) == 8_0 (lshr,i32) || 5_2 (or,i32) == 9_0 (ashr,i32) || 5_2 (or,i32) == 10_0 (select,i32) || 5_2 (or,i32) == 11_0 (zext,eq,i32) || 5_2 (or,i32) == 12_0 (zext,ne,i32) || 5_2 (or,i32) == 13_0 (zext,ult,i32) || 5_2 (or,i32) == 14_0 (zext,slt,i32) || 5_2 (or,i32) == 15_0 (zext,ule,i32) || 5_2 (or,i32) == 16_0 (zext,sle,i32) || false
6_1 (xor,i32) == 0_1 (input,i32) || 6_1 (xor,i32) == 0_2 (const,i32) || 6_1 (xor,i32) == 0_3 (const,i32) || 6_1 (xor,i32) == 1_0 (add,i32) || 6_1 (xor,i32) == 2_0 (sub,i32) || 6_1 (xor,i32) == 3_0 (mul,i32) || 6_1 (xor,i32) == 4_0 (and,i32) || 6_1 (xor,i32) == 5_0 (or,i32) || 6_1 (xor,i32) == 7_0 (shl,i32) || 6_1 (xor,i32) == 8_0 (lshr,i32) || 6_1 (xor,i32) == 9_0 (ashr,i32) || 6_1 (xor,i32) == 10_0 (select,i32) || 6_1 (xor,i32) == 11_0 (zext,eq,i32) || 6_1 (xor,i32) == 12_0 (zext,ne,i32) || 6_1 (xor,i32) == 13_0 (zext,ult,i32) || 6_1 (xor,i32) == 14_0 (zext,slt,i32) || 6_1 (xor,i32) == 15_0 (zext,ule,i32) || 6_1 (xor,i32) == 16_0 (zext,sle,i32) || false
6_2 (xor,i32) == 0_1 (input,i32) || 6_2 (xor,i32) == 0_2 (const,i32) || 6_2 (xor,i32) == 0_3 (const,i32) || 6_2 (xor,i32) == 1_0 (add,i32) || 6_2 (xor,i32) == 2_0 (sub,i32) || 6_2 (xor,i32) == 3_0 (mul,i32) || 6_2 (xor,i32) == 4_0 (and,i32) || 6_2 (xor,i32) == 5_0 (or,i32) || 6_2 (xor,i32) == 7_0 (shl,i32) || 6_2 (xor,i32) == 8_0 (lshr,i32) || 6_2 (xor,i32) == 9_0 (ashr,i32) || 6_2 (xor,i32) == 10_0 (select,i32) || 6_2 (xor,i32) == 11_0 (zext,eq,i32) || 6_2 (xor,i32) == 12_0 (zext,ne,i32) || 6_2 (xor,i32) == 13_0 (zext,ult,i32) || 6_2 (xor,i32) == 14_0 (zext,slt,i32) || 6_2 (xor,i32) == 15_0 (zext,ule,i32) || 6_2 (xor,i32) == 16_0 (zext,sle,i32) || false
7_1 (shl,i32) == 0_1 (input,i32) || 7_1 (shl,i32) == 0_2 (const,i32) || 7_1 (shl,i32) == 0_3 (const,i32) || 7_1 (shl,i32) == 1_0 (add,i32) || 7_1 (shl,i32) == 2_0 (sub,i32) || 7_1 (shl,i32) == 3_0 (mul,i32) || 7_1 (shl,i32) == 4_0 (and,i32) || 7_1 (shl,i32) == 5_0 (or,i32) || 7_1 (shl,i32) == 6_0 (xor,i32) || 7_1 (shl,i32) == 8_0 (lshr,i32) || 7_1 (shl,i32) == 9_0 (ashr,i32) || 7_1 (shl,i32) == 10_0 (select,i32) || 7_1 (shl,i32) == 11_0 (zext,eq,i32) || 7_1 (shl,i32) == 12_0 (zext,ne,i32) || 7_1 (shl,i32) == 13_0 (zext,ult,i32) || 7_1 (shl,i32) == 14_0 (zext,slt,i32) || 7_1 (shl,i32) == 15_0 (zext,ule,i32) || 7_1 (shl,i32) == 16_0 (zext,sle,i32) || false
7_2 (shl,i32) == 0_1 (input,i32) || 7_2 (shl,i32) == 0_2 (const,i32) || 7_2 (shl,i32) == 0_3 (const,i32) || 7_2 (shl,i32) == 1_0 (add,i32) || 7_2 (shl,i32) == 2_0 (sub,i32) || 7_2 (shl,i32) == 3_0 (mul,i32) || 7_2 (shl,i32) == 4_0 (and,i32) || 7_2 (shl,i32) == 5_0 (or,i32) || 7_2 (shl,i32) == 6_0 (xor,i32) || 7_2 (shl,i32) == 8_0 (lshr,i32) || 7_2 (shl,i32) == 9_0 (ashr,i32) || 7_2 (shl,i32) == 10_0 (select,i32) || 7_2 (shl,i32) == 11_0 (zext,eq,i32) || 7_2 (shl,i32) == 12_0 (zext,ne,i32) || 7_2 (shl,i32) == 13_0 (zext,ult,i32) || 7_2 (shl,i32) == 14_0 (zext,slt,i32) || 7_2 (shl,i32) == 15_0 (zext,ule,i32) || 7_2 (shl,i32) == 16_0 (zext,sle,i32) || false
8_1 (lshr,i32) == 0_1 (input,i32) || 8_1 (lshr,i32) == 0_2 (const,i32) || 8_1 (lshr,i32) == 0_3 (const,i32) || 8_1 (lshr,i32) == 1_0 (add,i32) || 8_1 (lshr,i32) == 2_0 (sub,i32) || 8_1 (lshr,i32) == 3_0 (mul,i32) || 8_1 (lshr,i32) == 4_0 (and,i32) || 8_1 (lshr,i32) == 5_0 (or,i32) || 8_1 (lshr,i32) == 6_0 (xor,i32) || 8_1 (lshr,i32) == 7_0 (shl,i32) || 8_1 (lshr,i32) == 9_0 (ashr,i32) || 8_1 (lshr,i32) == 10_0 (select,i32) || 8_1 (lshr,i32) == 11_0 (zext,eq,i32) || 8_1 (lshr,i32) == 12_0 (zext,ne,i32) || 8_1 (lshr,i32) == 13_0 (zext,ult,i32) || 8_1 (lshr,i32) == 14_0 (zext,slt,i32) || 8_1 (lshr,i32) == 15_0 (zext,ule,i32) || 8_1 (lshr,i32) == 16_0 (zext,sle,i32) || false
8_2 (lshr,i32) == 0_1 (input,i32) || 8_2 (lshr,i32) == 0_2 (const,i32) || 8_2 (lshr,i32) == 0_3 (const,i32) || 8_2 (lshr,i32) == 1_0 (add,i32) || 8_2 (lshr,i32) == 2_0 (sub,i32) || 8_2 (lshr,i32) == 3_0 (mul,i32) || 8_2 (lshr,i32) == 4_0 (and,i32) || 8_2 (lshr,i32) == 5_0 (or,i32) || 8_2 (lshr,i32) == 6_0 (xor,i32) || 8_2 (lshr,i32) == 7_0 (shl,i32) || 8_2 (lshr,i32) == 9_0 (ashr,i32) || 8_2 (lshr,i32) == 10_0 (select,i32) || 8_2 (lshr,i32) == 11_0 (zext,eq,i32) || 8_2 (lshr,i32) == 12_0 (zext,ne,i32) || 8_2 (lshr,i32) == 13_0 (zext,ult,i32) || 8_2 (lshr,i32) == 14_0 (zext,slt,i32) || 8_2 (lshr,i32) == 15_0 (zext,ule,i32) || 8_2 (lshr,i32) == 16_0 (zext,sle,i32) || false
9_1 (ashr,i32) == 0_1 (input,i32) || 9_1 (ashr,i32) == 0_2 (const,i32) || 9_1 (ashr,i32) == 0_3 (const,i32) || 9_1 (ashr,i32) == 1_0 (add,i32) || 9_1 (ashr,i32) == 2_0 (sub,i32) || 9_1 (ashr,i32) == 3_0 (mul,i32) || 9_1 (ashr,i32) == 4_0 (and,i32) || 9_1 (ashr,i32) == 5_0 (or,i32) || 9_1 (ashr,i32) == 6_0 (xor,i32) || 9_1 (ashr,i32) == 7_0 (shl,i32) || 9_1 (ashr,i32) == 8_0 (lshr,i32) || 9_1 (ashr,i32) == 10_0 (select,i32) || 9_1 (ashr,i32) == 11_0 (zext,eq,i32) || 9_1 (ashr,i32) == 12_0 (zext,ne,i32) || 9_1 (ashr,i32) == 13_0 (zext,ult,i32) || 9_1 (ashr,i32) == 14_0 (zext,slt,i32) || 9_1 (ashr,i32) == 15_0 (zext,ule,i32) || 9_1 (ashr,i32) == 16_0 (zext,sle,i32) || false
9_2 (ashr,i32) == 0_1 (input,i32) || 9_2 (ashr,i32) == 0_2 (const,i32) || 9_2 (ashr,i32) == 0_3 (const,i32) || 9_2 (ashr,i32) == 1_0 (add,i32) || 9_2 (ashr,i32) == 2_0 (sub,i32) || 9_2 (ashr,i32) == 3_0 (mul,i32) || 9_2 (ashr,i32) == 4_0 (and,i32) || 9_2 (ashr,i32) == 5_0 (or,i32) || 9_2 (ashr,i32) == 6_0 (xor,i32) || 9_2 (ashr,i32) == 7_0 (shl,i32) || 9_2 (ashr,i32) == 8_0 (lshr,i32) || 9_2 (ashr,i32) == 10_0 (select,i32) || 9_2 (ashr,i32) == 11_0 (zext,eq,i32) || 9_2 (ashr,i32) == 12_0 (zext,ne,i32) || 9_2 (ashr,i32) == 13_0 (zext,ult,i32) || 9_2 (ashr,i32) == 14_0 (zext,slt,i32) || 9_2 (ashr,i32) == 15_0 (zext,ule,i32) || 9_2 (ashr,i32) == 16_0 (zext,sle,i32) || false
10_1 (select,i32) == 1_0 (add,i32) || 10_1 (select,i32) == 2_0 (sub,i32) || 10_1 (select,i32) == 3_0 (mul,i32) || 10_1 (select,i32) == 4_0 (and,i32) || 10_1 (select,i32) == 5_0 (or,i32) || 10_1 (select,i32) == 6_0 (xor,i32) || 10_1 (select,i32) == 7_0 (shl,i32) || 10_1 (select,i32) == 8_0 (lshr,i32) || 10_1 (select,i32) == 9_0 (ashr,i32) || 10_1 (select,i32) == 11_0 (zext,eq,i32) || 10_1 (select,i32) == 12_0 (zext,ne,i32) || 10_1 (select,i32) == 13_0 (zext,ult,i32) || 10_1 (select,i32) == 14_0 (zext,slt,i32) || 10_1 (select,i32) == 15_0 (zext,ule,i32) || 10_1 (select,i32) == 16_0 (zext,sle,i32) || false
10_2 (select,i32) == 0_1 (input,i32) || 10_2 (select,i32) == 0_2 (const,i32) || 10_2 (select,i32) == 0_3 (const,i32) || 10_2 (select,i32) == 1_0 (add,i32) || 10_2 (select,i32) == 2_0 (sub,i32) || 10_2 (select,i32) == 3_0 (mul,i32) || 10_2 (select,i32) == 4_0 (and,i32) || 10_2 (select,i32) == 5_0 (or,i32) || 10_2 (select,i32) == 6_0 (xor,i32) || 10_2 (select,i32) == 7_0 (shl,i32) || 10_2 (select,i32) == 8_0 (lshr,i32) || 10_2 (select,i32) == 9_0 (ashr,i32) || 10_2 (select,i32) == 11_0 (zext,eq,i32) || 10_2 (select,i32) == 12_0 (zext,ne,i32) || 10_2 (select,i32) == 13_0 (zext,ult,i32) || 10_2 (select,i32) == 14_0 (zext,slt,i32) || 10_2 (select,i32) == 15_0 (zext,ule,i32) || 10_2 (select,i32) == 16_0 (zext,sle,i32) || false
10_3 (select,i32) == 0_1 (input,i32) || 10_3 (select,i32) == 0_2 (const,i32) || 10_3 (select,i32) == 0_3 (const,i32) || 10_3 (select,i32) == 1_0 (add,i32) || 10_3 (select,i32) == 2_0 (sub,i32) || 10_3 (select,i32) == 3_0 (mul,i32) || 10_3 (select,i32) == 4_0 (and,i32) || 10_3 (select,i32) == 5_0 (or,i32) || 10_3 (select,i32) == 6_0 (xor,i32) || 10_3 (select,i32) == 7_0 (shl,i32) || 10_3 (select,i32) == 8_0 (lshr,i32) || 10_3 (select,i32) == 9_0 (ashr,i32) || 10_3 (select,i32) == 11_0 (zext,eq,i32) || 10_3 (select,i32) == 12_0 (zext,ne,i32) || 10_3 (select,i32) == 13_0 (zext,ult,i32) || 10_3 (select,i32) == 14_0 (zext,slt,i32) || 10_3 (select,i32) == 15_0 (zext,ule,i32) || 10_3 (select,i32) == 16_0 (zext,sle,i32) || false
11_1 (eq,i32) == 0_1 (input,i32) || 11_1 (eq,i32) == 0_2 (const,i32) || 11_1 (eq,i32) == 0_3 (const,i32) || 11_1 (eq,i32) == 1_0 (add,i32) || 11_1 (eq,i32) == 2_0 (sub,i32) || 11_1 (eq,i32) == 3_0 (mul,i32) || 11_1 (eq,i32) == 4_0 (and,i32) || 11_1 (eq,i32) == 5_0 (or,i32) || 11_1 (eq,i32) == 6_0 (xor,i32) || 11_1 (eq,i32) == 7_0 (shl,i32) || 11_1 (eq,i32) == 8_0 (lshr,i32) || 11_1 (eq,i32) == 9_0 (ashr,i32) || 11_1 (eq,i32) == 10_0 (select,i32) || 11_1 (eq,i32) == 12_0 (zext,ne,i32) || 11_1 (eq,i32) == 13_0 (zext,ult,i32) || 11_1 (eq,i32) == 14_0 (zext,slt,i32) || 11_1 (eq,i32) == 15_0 (zext,ule,i32) || 11_1 (eq,i32) == 16_0 (zext,sle,i32) || false
11_2 (eq,i32) == 0_1 (input,i32) || 11_2 (eq,i32) == 0_2 (const,i32) || 11_2 (eq,i32) == 0_3 (const,i32) || 11_2 (eq,i32) == 1_0 (add,i32) || 11_2 (eq,i32) == 2_0 (sub,i32) || 11_2 (eq,i32) == 3_0 (mul,i32) || 11_2 (eq,i32) == 4_0 (and,i32) || 11_2 (eq,i32) == 5_0 (or,i32) || 11_2 (eq,i32) == 6_0 (xor,i32) || 11_2 (eq,i32) == 7_0 (shl,i32) || 11_2 (eq,i32) == 8_0 (lshr,i32) || 11_2 (eq,i32) == 9_0 (ashr,i32) || 11_2 (eq,i32) == 10_0 (select,i32) || 11_2 (eq,i32) == 12_0 (zext,ne,i32) || 11_2 (eq,i32) == 13_0 (zext,ult,i32) || 11_2 (eq,i32) == 14_0 (zext,slt,i32) || 11_2 (eq,i32) == 15_0 (zext,ule,i32) || 11_2 (eq,i32) == 16_0 (zext,sle,i32) || false
12_1 (ne,i32) == 0_1 (input,i32) || 12_1 (ne,i32) == 0_2 (const,i32) || 12_1 (ne,i32) == 0_3 (const,i32) || 12_1 (ne,i32) == 1_0 (add,i32) || 12_1 (ne,i32) == 2_0 (sub,i32) || 12_1 (ne,i32) == 3_0 (mul,i32) || 12_1 (ne,i32) == 4_0 (and,i32) || 12_1 (ne,i32) == 5_0 (or,i32) || 12_1 (ne,i32) == 6_0 (xor,i32) || 12_1 (ne,i32) == 7_0 (shl,i32) || 12_1 (ne,i32) == 8_0 (lshr,i32) || 12_1 (ne,i32) == 9_0 (ashr,i32) || 12_1 (ne,i32) == 10_0 (select,i32) || 12_1 (ne,i32) == 11_0 (zext,eq,i32) || 12_1 (ne,i32) == 13_0 (zext,ult,i32) || 12_1 (ne,i32) == 14_0 (zext,slt,i32) || 12_1 (ne,i32) == 15_0 (zext,ule,i32) || 12_1 (ne,i32) == 16_0 (zext,sle,i32) || false
12_2 (ne,i32) == 0_1 (input,i32) || 12_2 (ne,i32) == 0_2 (const,i32) || 12_2 (ne,i32) == 0_3 (const,i32) || 12_2 (ne,i32) == 1_0 (add,i32) || 12_2 (ne,i32) == 2_0 (sub,i32) || 12_2 (ne,i32) == 3_0 (mul,i32) || 12_2 (ne,i32) == 4_0 (and,i32) || 12_2 (ne,i32) == 5_0 (or,i32) || 12_2 (ne,i32) == 6_0 (xor,i32) || 12_2 (ne,i32) == 7_0 (shl,i32) || 12_2 (ne,i32) == 8_0 (lshr,i32) || 12_2 (ne,i32) == 9_0 (ashr,i32) || 12_2 (ne,i32) == 10_0 (select,i32) || 12_2 (ne,i32) == 11_0 (zext,eq,i32) || 12_2 (ne,i32) == 13_0 (zext,ult,i32) || 12_2 (ne,i32) == 14_0 (zext,slt,i32) || 12_2 (ne,i32) == 15_0 (zext,ule,i32) || 12_2 (ne,i32) == 16_0 (zext,sle,i32) || false
13_1 (ult,i32) == 0_1 (input,i32) || 13_1 (ult,i32) == 0_2 (const,i32) || 13_1 (ult,i32) == 0_3 (const,i32) || 13_1 (ult,i32) == 1_0 (add,i32) || 13_1 (ult,i32) == 2_0 (sub,i32) || 13_1 (ult,i32) == 3_0 (mul,i32) || 13_1 (ult,i32) == 4_0 (and,i32) || 13_1 (ult,i32) == 5_0 (or,i32) || 13_1 (ult,i32) == 6_0 (xor,i32) || 13_1 (ult,i32) == 7_0 (shl,i32) || 13_1 (ult,i32) == 8_0 (lshr,i32) || 13_1 (ult,i32) == 9_0 (ashr,i32) || 13_1 (ult,i32) == 10_0 (select,i32) || 13_1 (ult,i32) == 11_0 (zext,eq,i32) || 13_1 (ult,i32) == 12_0 (zext,ne,i32) || 13_1 (ult,i32) == 14_0 (zext,slt,i32) || 13_1 (ult,i32) == 15_0 (zext,ule,i32) || 13_1 (ult,i32) == 16_0 (zext,sle,i32) || false
13_2 (ult,i32) == 0_1 (input,i32) || 13_2 (ult,i32) == 0_2 (const,i32) || 13_2 (ult,i32) == 0_3 (const,i32) || 13_2 (ult,i32) == 1_0 (add,i32) || 13_2 (ult,i32) == 2_0 (sub,i32) || 13_2 (ult,i32) == 3_0 (mul,i32) || 13_2 (ult,i32) == 4_0 (and,i32) || 13_2 (ult,i32) == 5_0 (or,i32) || 13_2 (ult,i32) == 6_0 (xor,i32) || 13_2 (ult,i32) == 7_0 (shl,i32) || 13_2 (ult,i32) == 8_0 (lshr,i32) || 13_2 (ult,i32) == 9_0 (ashr,i32) || 13_2 (ult,i32) == 10_0 (select,i32) || 13_2 (ult,i32) == 11_0 (zext,eq,i32) || 13_2 (ult,i32) == 12_0 (zext,ne,i32) || 13_2 (ult,i32) == 14_0 (zext,slt,i32) || 13_2 (ult,i32) == 15_0 (zext,ule,i32) || 13_2 (ult,i32) == 16_0 (zext,sle,i32) || false
14_1 (slt,i32) == 0_1 (input,i32) || 14_1 (slt,i32) == 0_2 (const,i32) || 14_1 (slt,i32) == 0_3 (const,i32) || 14_1 (slt,i32) == 1_0 (add,i32) || 14_1 (slt,i32) == 2_0 (sub,i32) || 14_1 (slt,i32) == 3_0 (mul,i32) || 14_1 (slt,i32) == 4_0 (and,i32) || 14_1 (slt,i32) == 5_0 (or,i32) || 14_1 (slt,i32) == 6_0 (xor,i32) || 14_1 (slt,i32) == 7_0 (shl,i32) || 14_1 (slt,i32) == 8_0 (lshr,i32) || 14_1 (slt,i32) == 9_0 (ashr,i32) || 14_1 (slt,i32) == 10_0 (select,i32) || 14_1 (slt,i32) == 11_0 (zext,eq,i32) || 14_1 (slt,i32) == 12_0 (zext,ne,i32) || 14_1 (slt,i32) == 13_0 (zext,ult,i32) || 14_1 (slt,i32) == 15_0 (zext,ule,i32) || 14_1 (slt,i32) == 16_0 (zext,sle,i32) || false
14_2 (slt,i32) == 0_1 (input,i32) || 14_2 (slt,i32) == 0_2 (const,i32) || 14_2 (slt,i32) == 0_3 (const,i32) || 14_2 (slt,i32) == 1_0 (add,i32) || 14_2 (slt,i32) == 2_0 (sub,i32) || 14_2 (slt,i32) == 3_0 (mul,i32) || 14_2 (slt,i32) == 4_0 (and,i32) || 14_2 (slt,i32) == 5_0 (or,i32) || 14_2 (slt,i32) == 6_0 (xor,i32) || 14_2 (slt,i32) == 7_0 (shl,i32) || 14_2 (slt,i32) == 8_0 (lshr,i32) || 14_2 (slt,i32) == 9_0 (ashr,i32) || 14_2 (slt,i32) == 10_0 (select,i32) || 14_2 (slt,i32) == 11_0 (zext,eq,i32) || 14_2 (slt,i32) == 12_0 (zext,ne,i32) || 14_2 (slt,i32) == 13_0 (zext,ult,i32) || 14_2 (slt,i32) == 15_0 (zext,ule,i32) || 14_2 (slt,i32) == 16_0 (zext,sle,i32) || false
15_1 (ule,i32) == 0_1 (input,i32) || 15_1 (ule,i32) == 0_2 (const,i32) || 15_1 (ule,i32) == 0_3 (const,i32) || 15_1 (ule,i32) == 1_0 (add,i32) || 15_1 (ule,i32) == 2_0 (sub,i32) || 15_1 (ule,i32) == 3_0 (mul,i32) || 15_1 (ule,i32) == 4_0 (and,i32) || 15_1 (ule,i32) == 5_0 (or,i32) || 15_1 (ule,i32) == 6_0 (xor,i32) || 15_1 (ule,i32) == 7_0 (shl,i32) || 15_1 (ule,i32) == 8_0 (lshr,i32) || 15_1 (ule,i32) == 9_0 (ashr,i32) || 15_1 (ule,i32) == 10_0 (select,i32) || 15_1 (ule,i32) == 11_0 (zext,eq,i32) || 15_1 (ule,i32) == 12_0 (zext,ne,i32) || 15_1 (ule,i32) == 13_0 (zext,ult,i32) || 15_1 (ule,i32) == 14_0 (zext,slt,i32) || 15_1 (ule,i32) == 16_0 (zext,sle,i32) || false
15_2 (ule,i32) == 0_1 (input,i32) || 15_2 (ule,i32) == 0_2 (const,i32) || 15_2 (ule,i32) == 0_3 (const,i32) || 15_2 (ule,i32) == 1_0 (add,i32) || 15_2 (ule,i32) == 2_0 (sub,i32) || 15_2 (ule,i32) == 3_0 (mul,i32) || 15_2 (ule,i32) == 4_0 (and,i32) || 15_2 (ule,i32) == 5_0 (or,i32) || 15_2 (ule,i32) == 6_0 (xor,i32) || 15_2 (ule,i32) == 7_0 (shl,i32) || 15_2 (ule,i32) == 8_0 (lshr,i32) || 15_2 (ule,i32) == 9_0 (ashr,i32) || 15_2 (ule,i32) == 10_0 (select,i32) || 15_2 (ule,i32) == 11_0 (zext,eq,i32) || 15_2 (ule,i32) == 12_0 (zext,ne,i32) || 15_2 (ule,i32) == 13_0 (zext,ult,i32) || 15_2 (ule,i32) == 14_0 (zext,slt,i32) || 15_2 (ule,i32) == 16_0 (zext,sle,i32) || false
16_1 (sle,i32) == 0_1 (input,i32) || 16_1 (sle,i32) == 0_2 (const,i32) || 16_1 (sle,i32) == 0_3 (const,i32) || 16_1 (sle,i32) == 1_0 (add,i32) || 16_1 (sle,i32) == 2_0 (sub,i32) || 16_1 (sle,i32) == 3_0 (mul,i32) || 16_1 (sle,i32) == 4_0 (and,i32) || 16_1 (sle,i32) == 5_0 (or,i32) || 16_1 (sle,i32) == 6_0 (xor,i32) || 16_1 (sle,i32) == 7_0 (shl,i32) || 16_1 (sle,i32) == 8_0 (lshr,i32) || 16_1 (sle,i32) == 9_0 (ashr,i32) || 16_1 (sle,i32) == 10_0 (select,i32) || 16_1 (sle,i32) == 11_0 (zext,eq,i32) || 16_1 (sle,i32) == 12_0 (zext,ne,i32) || 16_1 (sle,i32) == 13_0 (zext,ult,i32) || 16_1 (sle,i32) == 14_0 (zext,slt,i32) || 16_1 (sle,i32) == 15_0 (zext,ule,i32) || false
16_2 (sle,i32) == 0_1 (input,i32) || 16_2 (sle,i32) == 0_2 (const,i32) || 16_2 (sle,i32) == 0_3 (const,i32) || 16_2 (sle,i32) == 1_0 (add,i32) || 16_2 (sle,i32) == 2_0 (sub,i32) || 16_2 (sle,i32) == 3_0 (mul,i32) || 16_2 (sle,i32) == 4_0 (and,i32) || 16_2 (sle,i32) == 5_0 (or,i32) || 16_2 (sle,i32) == 6_0 (xor,i32) || 16_2 (sle,i32) == 7_0 (shl,i32) || 16_2 (sle,i32) == 8_0 (lshr,i32) || 16_2 (sle,i32) == 9_0 (ashr,i32) || 16_2 (sle,i32) == 10_0 (select,i32) || 16_2 (sle,i32) == 11_0 (zext,eq,i32) || 16_2 (sle,i32) == 12_0 (zext,ne,i32) || 16_2 (sle,i32) == 13_0 (zext,ult,i32) || 16_2 (sle,i32) == 14_0 (zext,slt,i32) || 16_2 (sle,i32) == 15_0 (zext,ule,i32) || false
component const input constraints:
1_1 (add,i32) == 0_2 (const,i32) || 1_1 (add,i32) == 0_3 (const,i32) || false
1_2 (add,i32) == 0_2 (const,i32) || 1_2 (add,i32) == 0_3 (const,i32) || false
false
2_1 (sub,i32) == 0_2 (const,i32) || 2_1 (sub,i32) == 0_3 (const,i32) || false
2_2 (sub,i32) == 0_2 (const,i32) || 2_2 (sub,i32) == 0_3 (const,i32) || false
false
3_1 (mul,i32) == 0_2 (const,i32) || 3_1 (mul,i32) == 0_3 (const,i32) || false
3_2 (mul,i32) == 0_2 (const,i32) || 3_2 (mul,i32) == 0_3 (const,i32) || false
false
4_1 (and,i32) == 0_2 (const,i32) || 4_1 (and,i32) == 0_3 (const,i32) || false
4_2 (and,i32) == 0_2 (const,i32) || 4_2 (and,i32) == 0_3 (const,i32) || false
false
5_1 (or,i32) == 0_2 (const,i32) || 5_1 (or,i32) == 0_3 (const,i32) || false
5_2 (or,i32) == 0_2 (const,i32) || 5_2 (or,i32) == 0_3 (const,i32) || false
false
6_1 (xor,i32) == 0_2 (const,i32) || 6_1 (xor,i32) == 0_3 (const,i32) || false
6_2 (xor,i32) == 0_2 (const,i32) || 6_2 (xor,i32) == 0_3 (const,i32) || false
false
7_1 (shl,i32) == 0_2 (const,i32) || 7_1 (shl,i32) == 0_3 (const,i32) || false
7_2 (shl,i32) == 0_2 (const,i32) || 7_2 (shl,i32) == 0_3 (const,i32) || false
false
8_1 (lshr,i32) == 0_2 (const,i32) || 8_1 (lshr,i32) == 0_3 (const,i32) || false
8_2 (lshr,i32) == 0_2 (const,i32) || 8_2 (lshr,i32) == 0_3 (const,i32) || false
false
9_1 (ashr,i32) == 0_2 (const,i32) || 9_1 (ashr,i32) == 0_3 (const,i32) || false
9_2 (ashr,i32) == 0_2 (const,i32) || 9_2 (ashr,i32) == 0_3 (const,i32) || false
false
false
10_2 (select,i32) == 0_2 (const,i32) || 10_2 (select,i32) == 0_3 (const,i32) || false
10_3 (select,i32) == 0_2 (const,i32) || 10_3 (select,i32) == 0_3 (const,i32) || false
false
11_1 (eq,i32) == 0_2 (const,i32) || 11_1 (eq,i32) == 0_3 (const,i32) || false
11_2 (eq,i32) == 0_2 (const,i32) || 11_2 (eq,i32) == 0_3 (const,i32) || false
false
12_1 (ne,i32) == 0_2 (const,i32) || 12_1 (ne,i32) == 0_3 (const,i32) || false
12_2 (ne,i32) == 0_2 (const,i32) || 12_2 (ne,i32) == 0_3 (const,i32) || false
false
13_1 (ult,i32) == 0_2 (const,i32) || 13_1 (ult,i32) == 0_3 (const,i32) || false
13_2 (ult,i32) == 0_2 (const,i32) || 13_2 (ult,i32) == 0_3 (const,i32) || false
false
14_1 (slt,i32) == 0_2 (const,i32) || 14_1 (slt,i32) == 0_3 (const,i32) || false
14_2 (slt,i32) == 0_2 (const,i32) || 14_2 (slt,i32) == 0_3 (const,i32) || false
false
15_1 (ule,i32) == 0_2 (const,i32) || 15_1 (ule,i32) == 0_3 (const,i32) || false
15_2 (ule,i32) == 0_2 (const,i32) || 15_2 (ule,i32) == 0_3 (const,i32) || false
false
16_1 (sle,i32) == 0_2 (const,i32) || 16_1 (sle,i32) == 0_3 (const,i32) || false
16_2 (sle,i32) == 0_2 (const,i32) || 16_2 (sle,i32) == 0_3 (const,i32) || false
false
component output constraints:
17_0 (output,i32) == 0_1 (input,i32) || 17_0 (output,i32) == 0_2 (const,i32) || 17_0 (output,i32) == 0_3 (const,i32) || 17_0 (output,i32) == 1_0 (add,i32) || 17_0 (output,i32) == 2_0 (sub,i32) || 17_0 (output,i32) == 3_0 (mul,i32) || 17_0 (output,i32) == 4_0 (and,i32) || 17_0 (output,i32) == 5_0 (or,i32) || 17_0 (output,i32) == 6_0 (xor,i32) || 17_0 (output,i32) == 7_0 (shl,i32) || 17_0 (output,i32) == 8_0 (lshr,i32) || 17_0 (output,i32) == 9_0 (ashr,i32) || 17_0 (output,i32) == 10_0 (select,i32) || 17_0 (output,i32) == 11_0 (zext,eq,i32) || 17_0 (output,i32) == 12_0 (zext,ne,i32) || 17_0 (output,i32) == 13_0 (zext,ult,i32) || 17_0 (output,i32) == 14_0 (zext,slt,i32) || 17_0 (output,i32) == 15_0 (zext,ule,i32) || 17_0 (output,i32) == 16_0 (zext,sle,i32) || false
possible wirings:
0_1 (input,i32) == 1_1 (add,i32)
0_1 (input,i32) == 1_2 (add,i32)
0_1 (input,i32) == 2_1 (sub,i32)
0_1 (input,i32) == 2_2 (sub,i32)
0_1 (input,i32) == 3_1 (mul,i32)
0_1 (input,i32) == 3_2 (mul,i32)
0_1 (input,i32) == 4_1 (and,i32)
0_1 (input,i32) == 4_2 (and,i32)
0_1 (input,i32) == 5_1 (or,i32)
0_1 (input,i32) == 5_2 (or,i32)
0_1 (input,i32) == 6_1 (xor,i32)
0_1 (input,i32) == 6_2 (xor,i32)
0_1 (input,i32) == 7_1 (shl,i32)
0_1 (input,i32) == 7_2 (shl,i32)
0_1 (input,i32) == 8_1 (lshr,i32)
0_1 (input,i32) == 8_2 (lshr,i32)
0_1 (input,i32) == 9_1 (ashr,i32)
0_1 (input,i32) == 9_2 (ashr,i32)
0_1 (input,i32) == 10_2 (select,i32)
0_1 (input,i32) == 10_3 (select,i32)
0_1 (input,i32) == 11_1 (eq,i32)
0_1 (input,i32) == 11_2 (eq,i32)
0_1 (input,i32) == 12_1 (ne,i32)
0_1 (input,i32) == 12_2 (ne,i32)
0_1 (input,i32) == 13_1 (ult,i32)
0_1 (input,i32) == 13_2 (ult,i32)
0_1 (input,i32) == 14_1 (slt,i32)
0_1 (input,i32) == 14_2 (slt,i32)
0_1 (input,i32) == 15_1 (ule,i32)
0_1 (input,i32) == 15_2 (ule,i32)
0_1 (input,i32) == 16_1 (sle,i32)
0_1 (input,i32) == 16_2 (sle,i32)
0_1 (input,i32) == 17_0 (output,i32)
0_2 (const,i32) == 1_1 (add,i32)
0_2 (const,i32) == 1_2 (add,i32)
0_2 (const,i32) == 2_1 (sub,i32)
0_2 (const,i32) == 2_2 (sub,i32)
0_2 (const,i32) == 3_1 (mul,i32)
0_2 (const,i32) == 3_2 (mul,i32)
0_2 (const,i32) == 4_1 (and,i32)
0_2 (const,i32) == 4_2 (and,i32)
0_2 (const,i32) == 5_1 (or,i32)
0_2 (const,i32) == 5_2 (or,i32)
0_2 (const,i32) == 6_1 (xor,i32)
0_2 (const,i32) == 6_2 (xor,i32)
0_2 (const,i32) == 7_1 (shl,i32)
0_2 (const,i32) == 7_2 (shl,i32)
0_2 (const,i32) == 8_1 (lshr,i32)
0_2 (const,i32) == 8_2 (lshr,i32)
0_2 (const,i32) == 9_1 (ashr,i32)
0_2 (const,i32) == 9_2 (ashr,i32)
0_2 (const,i32) == 10_2 (select,i32)
0_2 (const,i32) == 10_3 (select,i32)
0_2 (const,i32) == 11_1 (eq,i32)
0_2 (const,i32) == 11_2 (eq,i32)
0_2 (const,i32) == 12_1 (ne,i32)
0_2 (const,i32) == 12_2 (ne,i32)
0_2 (const,i32) == 13_1 (ult,i32)
0_2 (const,i32) == 13_2 (ult,i32)
0_2 (const,i32) == 14_1 (slt,i32)
0_2 (const,i32) == 14_2 (slt,i32)
0_2 (const,i32) == 15_1 (ule,i32)
0_2 (const,i32) == 15_2 (ule,i32)
0_2 (const,i32) == 16_1 (sle,i32)
0_2 (const,i32) == 16_2 (sle,i32)
0_2 (const,i32) == 17_0 (output,i32)
0_3 (const,i32) == 1_1 (add,i32)
0_3 (const,i32) == 1_2 (add,i32)
0_3 (const,i32) == 2_1 (sub,i32)
0_3 (const,i32) == 2_2 (sub,i32)
0_3 (const,i32) == 3_1 (mul,i32)
0_3 (const,i32) == 3_2 (mul,i32)
0_3 (const,i32) == 4_1 (and,i32)
0_3 (const,i32) == 4_2 (and,i32)
0_3 (const,i32) == 5_1 (or,i32)
0_3 (const,i32) == 5_2 (or,i32)
0_3 (const,i32) == 6_1 (xor,i32)
0_3 (const,i32) == 6_2 (xor,i32)
0_3 (const,i32) == 7_1 (shl,i32)
0_3 (const,i32) == 7_2 (shl,i32)
0_3 (const,i32) == 8_1 (lshr,i32)
0_3 (const,i32) == 8_2 (lshr,i32)
0_3 (const,i32) == 9_1 (ashr,i32)
0_3 (const,i32) == 9_2 (ashr,i32)
0_3 (const,i32) == 10_2 (select,i32)
0_3 (const,i32) == 10_3 (select,i32)
0_3 (const,i32) == 11_1 (eq,i32)
0_3 (const,i32) == 11_2 (eq,i32)
0_3 (const,i32) == 12_1 (ne,i32)
0_3 (const,i32) == 12_2 (ne,i32)
0_3 (const,i32) == 13_1 (ult,i32)
0_3 (const,i32) == 13_2 (ult,i32)
0_3 (const,i32) == 14_1 (slt,i32)
0_3 (const,i32) == 14_2 (slt,i32)
0_3 (const,i32) == 15_1 (ule,i32)
0_3 (const,i32) == 15_2 (ule,i32)
0_3 (const,i32) == 16_1 (sle,i32)
0_3 (const,i32) == 16_2 (sle,i32)
0_3 (const,i32) == 17_0 (output,i32)
1_1 (add,i32) == 2_0 (sub,i32)
1_1 (add,i32) == 3_0 (mul,i32)
1_1 (add,i32) == 4_0 (and,i32)
1_1 (add,i32) == 5_0 (or,i32)
1_1 (add,i32) == 6_0 (xor,i32)
1_1 (add,i32) == 7_0 (shl,i32)
1_1 (add,i32) == 8_0 (lshr,i32)
1_1 (add,i32) == 9_0 (ashr,i32)
1_1 (add,i32) == 10_0 (select,i32)
1_1 (add,i32) == 11_0 (zext,eq,i32)
1_1 (add,i32) == 12_0 (zext,ne,i32)
1_1 (add,i32) == 13_0 (zext,ult,i32)
1_1 (add,i32) == 14_0 (zext,slt,i32)
1_1 (add,i32) == 15_0 (zext,ule,i32)
1_1 (add,i32) == 16_0 (zext,sle,i32)
1_2 (add,i32) == 2_0 (sub,i32)
1_2 (add,i32) == 3_0 (mul,i32)
1_2 (add,i32) == 4_0 (and,i32)
1_2 (add,i32) == 5_0 (or,i32)
1_2 (add,i32) == 6_0 (xor,i32)
1_2 (add,i32) == 7_0 (shl,i32)
1_2 (add,i32) == 8_0 (lshr,i32)
1_2 (add,i32) == 9_0 (ashr,i32)
1_2 (add,i32) == 10_0 (select,i32)
1_2 (add,i32) == 11_0 (zext,eq,i32)
1_2 (add,i32) == 12_0 (zext,ne,i32)
1_2 (add,i32) == 13_0 (zext,ult,i32)
1_2 (add,i32) == 14_0 (zext,slt,i32)
1_2 (add,i32) == 15_0 (zext,ule,i32)
1_2 (add,i32) == 16_0 (zext,sle,i32)
2_1 (sub,i32) == 1_0 (add,i32)
2_1 (sub,i32) == 3_0 (mul,i32)
2_1 (sub,i32) == 4_0 (and,i32)
2_1 (sub,i32) == 5_0 (or,i32)
2_1 (sub,i32) == 6_0 (xor,i32)
2_1 (sub,i32) == 7_0 (shl,i32)
2_1 (sub,i32) == 8_0 (lshr,i32)
2_1 (sub,i32) == 9_0 (ashr,i32)
2_1 (sub,i32) == 10_0 (select,i32)
2_1 (sub,i32) == 11_0 (zext,eq,i32)
2_1 (sub,i32) == 12_0 (zext,ne,i32)
2_1 (sub,i32) == 13_0 (zext,ult,i32)
2_1 (sub,i32) == 14_0 (zext,slt,i32)
2_1 (sub,i32) == 15_0 (zext,ule,i32)
2_1 (sub,i32) == 16_0 (zext,sle,i32)
2_2 (sub,i32) == 1_0 (add,i32)
2_2 (sub,i32) == 3_0 (mul,i32)
2_2 (sub,i32) == 4_0 (and,i32)
2_2 (sub,i32) == 5_0 (or,i32)
2_2 (sub,i32) == 6_0 (xor,i32)
2_2 (sub,i32) == 7_0 (shl,i32)
2_2 (sub,i32) == 8_0 (lshr,i32)
2_2 (sub,i32) == 9_0 (ashr,i32)
2_2 (sub,i32) == 10_0 (select,i32)
2_2 (sub,i32) == 11_0 (zext,eq,i32)
2_2 (sub,i32) == 12_0 (zext,ne,i32)
2_2 (sub,i32) == 13_0 (zext,ult,i32)
2_2 (sub,i32) == 14_0 (zext,slt,i32)
2_2 (sub,i32) == 15_0 (zext,ule,i32)
2_2 (sub,i32) == 16_0 (zext,sle,i32)
3_1 (mul,i32) == 1_0 (add,i32)
3_1 (mul,i32) == 2_0 (sub,i32)
3_1 (mul,i32) == 4_0 (and,i32)
3_1 (mul,i32) == 5_0 (or,i32)
3_1 (mul,i32) == 6_0 (xor,i32)
3_1 (mul,i32) == 7_0 (shl,i32)
3_1 (mul,i32) == 8_0 (lshr,i32)
3_1 (mul,i32) == 9_0 (ashr,i32)
3_1 (mul,i32) == 10_0 (select,i32)
3_1 (mul,i32) == 11_0 (zext,eq,i32)
3_1 (mul,i32) == 12_0 (zext,ne,i32)
3_1 (mul,i32) == 13_0 (zext,ult,i32)
3_1 (mul,i32) == 14_0 (zext,slt,i32)
3_1 (mul,i32) == 15_0 (zext,ule,i32)
3_1 (mul,i32) == 16_0 (zext,sle,i32)
3_2 (mul,i32) == 1_0 (add,i32)
3_2 (mul,i32) == 2_0 (sub,i32)
3_2 (mul,i32) == 4_0 (and,i32)
3_2 (mul,i32) == 5_0 (or,i32)
3_2 (mul,i32) == 6_0 (xor,i32)
3_2 (mul,i32) == 7_0 (shl,i32)
3_2 (mul,i32) == 8_0 (lshr,i32)
3_2 (mul,i32) == 9_0 (ashr,i32)
3_2 (mul,i32) == 10_0 (select,i32)
3_2 (mul,i32) == 11_0 (zext,eq,i32)
3_2 (mul,i32) == 12_0 (zext,ne,i32)
3_2 (mul,i32) == 13_0 (zext,ult,i32)
3_2 (mul,i32) == 14_0 (zext,slt,i32)
3_2 (mul,i32) == 15_0 (zext,ule,i32)
3_2 (mul,i32) == 16_0 (zext,sle,i32)
4_1 (and,i32) == 1_0 (add,i32)
4_1 (and,i32) == 2_0 (sub,i32)
4_1 (and,i32) == 3_0 (mul,i32)
4_1 (and,i32) == 5_0 (or,i32)
4_1 (and,i32) == 6_0 (xor,i32)
4_1 (and,i32) == 7_0 (shl,i32)
4_1 (and,i32) == 8_0 (lshr,i32)
4_1 (and,i32) == 9_0 (ashr,i32)
4_1 (and,i32) == 10_0 (select,i32)
4_1 (and,i32) == 11_0 (zext,eq,i32)
4_1 (and,i32) == 12_0 (zext,ne,i32)
4_1 (and,i32) == 13_0 (zext,ult,i32)
4_1 (and,i32) == 14_0 (zext,slt,i32)
4_1 (and,i32) == 15_0 (zext,ule,i32)
4_1 (and,i32) == 16_0 (zext,sle,i32)
4_2 (and,i32) == 1_0 (add,i32)
4_2 (and,i32) == 2_0 (sub,i32)
4_2 (and,i32) == 3_0 (mul,i32)
4_2 (and,i32) == 5_0 (or,i32)
4_2 (and,i32) == 6_0 (xor,i32)
4_2 (and,i32) == 7_0 (shl,i32)
4_2 (and,i32) == 8_0 (lshr,i32)
4_2 (and,i32) == 9_0 (ashr,i32)
4_2 (and,i32) == 10_0 (select,i32)
4_2 (and,i32) == 11_0 (zext,eq,i32)
4_2 (and,i32) == 12_0 (zext,ne,i32)
4_2 (and,i32) == 13_0 (zext,ult,i32)
4_2 (and,i32) == 14_0 (zext,slt,i32)
4_2 (and,i32) == 15_0 (zext,ule,i32)
4_2 (and,i32) == 16_0 (zext,sle,i32)
5_1 (or,i32) == 1_0 (add,i32)
5_1 (or,i32) == 2_0 (sub,i32)
5_1 (or,i32) == 3_0 (mul,i32)
5_1 (or,i32) == 4_0 (and,i32)
5_1 (or,i32) == 6_0 (xor,i32)
5_1 (or,i32) == 7_0 (shl,i32)
5_1 (or,i32) == 8_0 (lshr,i32)
5_1 (or,i32) == 9_0 (ashr,i32)
5_1 (or,i32) == 10_0 (select,i32)
5_1 (or,i32) == 11_0 (zext,eq,i32)
5_1 (or,i32) == 12_0 (zext,ne,i32)
5_1 (or,i32) == 13_0 (zext,ult,i32)
5_1 (or,i32) == 14_0 (zext,slt,i32)
5_1 (or,i32) == 15_0 (zext,ule,i32)
5_1 (or,i32) == 16_0 (zext,sle,i32)
5_2 (or,i32) == 1_0 (add,i32)
5_2 (or,i32) == 2_0 (sub,i32)
5_2 (or,i32) == 3_0 (mul,i32)
5_2 (or,i32) == 4_0 (and,i32)
5_2 (or,i32) == 6_0 (xor,i32)
5_2 (or,i32) == 7_0 (shl,i32)
5_2 (or,i32) == 8_0 (lshr,i32)
5_2 (or,i32) == 9_0 (ashr,i32)
5_2 (or,i32) == 10_0 (select,i32)
5_2 (or,i32) == 11_0 (zext,eq,i32)
5_2 (or,i32) == 12_0 (zext,ne,i32)
5_2 (or,i32) == 13_0 (zext,ult,i32)
5_2 (or,i32) == 14_0 (zext,slt,i32)
5_2 (or,i32) == 15_0 (zext,ule,i32)
5_2 (or,i32) == 16_0 (zext,sle,i32)
6_1 (xor,i32) == 1_0 (add,i32)
6_1 (xor,i32) == 2_0 (sub,i32)
6_1 (xor,i32) == 3_0 (mul,i32)
6_1 (xor,i32) == 4_0 (and,i32)
6_1 (xor,i32) == 5_0 (or,i32)
6_1 (xor,i32) == 7_0 (shl,i32)
6_1 (xor,i32) == 8_0 (lshr,i32)
6_1 (xor,i32) == 9_0 (ashr,i32)
6_1 (xor,i32) == 10_0 (select,i32)
6_1 (xor,i32) == 11_0 (zext,eq,i32)
6_1 (xor,i32) == 12_0 (zext,ne,i32)
6_1 (xor,i32) == 13_0 (zext,ult,i32)
6_1 (xor,i32) == 14_0 (zext,slt,i32)
6_1 (xor,i32) == 15_0 (zext,ule,i32)
6_1 (xor,i32) == 16_0 (zext,sle,i32)
6_2 (xor,i32) == 1_0 (add,i32)
6_2 (xor,i32) == 2_0 (sub,i32)
6_2 (xor,i32) == 3_0 (mul,i32)
6_2 (xor,i32) == 4_0 (and,i32)
6_2 (xor,i32) == 5_0 (or,i32)
6_2 (xor,i32) == 7_0 (shl,i32)
6_2 (xor,i32) == 8_0 (lshr,i32)
6_2 (xor,i32) == 9_0 (ashr,i32)
6_2 (xor,i32) == 10_0 (select,i32)
6_2 (xor,i32) == 11_0 (zext,eq,i32)
6_2 (xor,i32) == 12_0 (zext,ne,i32)
6_2 (xor,i32) == 13_0 (zext,ult,i32)
6_2 (xor,i32) == 14_0 (zext,slt,i32)
6_2 (xor,i32) == 15_0 (zext,ule,i32)
6_2 (xor,i32) == 16_0 (zext,sle,i32)
7_1 (shl,i32) == 1_0 (add,i32)
7_1 (shl,i32) == 2_0 (sub,i32)
7_1 (shl,i32) == 3_0 (mul,i32)
7_1 (shl,i32) == 4_0 (and,i32)
7_1 (shl,i32) == 5_0 (or,i32)
7_1 (shl,i32) == 6_0 (xor,i32)
7_1 (shl,i32) == 8_0 (lshr,i32)
7_1 (shl,i32) == 9_0 (ashr,i32)
7_1 (shl,i32) == 10_0 (select,i32)
7_1 (shl,i32) == 11_0 (zext,eq,i32)
7_1 (shl,i32) == 12_0 (zext,ne,i32)
7_1 (shl,i32) == 13_0 (zext,ult,i32)
7_1 (shl,i32) == 14_0 (zext,slt,i32)
7_1 (shl,i32) == 15_0 (zext,ule,i32)
7_1 (shl,i32) == 16_0 (zext,sle,i32)
7_2 (shl,i32) == 1_0 (add,i32)
7_2 (shl,i32) == 2_0 (sub,i32)
7_2 (shl,i32) == 3_0 (mul,i32)
7_2 (shl,i32) == 4_0 (and,i32)
7_2 (shl,i32) == 5_0 (or,i32)
7_2 (shl,i32) == 6_0 (xor,i32)
7_2 (shl,i32) == 8_0 (lshr,i32)
7_2 (shl,i32) == 9_0 (ashr,i32)
7_2 (shl,i32) == 10_0 (select,i32)
7_2 (shl,i32) == 11_0 (zext,eq,i32)
7_2 (shl,i32) == 12_0 (zext,ne,i32)
7_2 (shl,i32) == 13_0 (zext,ult,i32)
7_2 (shl,i32) == 14_0 (zext,slt,i32)
7_2 (shl,i32) == 15_0 (zext,ule,i32)
7_2 (shl,i32) == 16_0 (zext,sle,i32)
8_1 (lshr,i32) == 1_0 (add,i32)
8_1 (lshr,i32) == 2_0 (sub,i32)
8_1 (lshr,i32) == 3_0 (mul,i32)
8_1 (lshr,i32) == 4_0 (and,i32)
8_1 (lshr,i32) == 5_0 (or,i32)
8_1 (lshr,i32) == 6_0 (xor,i32)
8_1 (lshr,i32) == 7_0 (shl,i32)
8_1 (lshr,i32) == 9_0 (ashr,i32)
8_1 (lshr,i32) == 10_0 (select,i32)
8_1 (lshr,i32) == 11_0 (zext,eq,i32)
8_1 (lshr,i32) == 12_0 (zext,ne,i32)
8_1 (lshr,i32) == 13_0 (zext,ult,i32)
8_1 (lshr,i32) == 14_0 (zext,slt,i32)
8_1 (lshr,i32) == 15_0 (zext,ule,i32)
8_1 (lshr,i32) == 16_0 (zext,sle,i32)
8_2 (lshr,i32) == 1_0 (add,i32)
8_2 (lshr,i32) == 2_0 (sub,i32)
8_2 (lshr,i32) == 3_0 (mul,i32)
8_2 (lshr,i32) == 4_0 (and,i32)
8_2 (lshr,i32) == 5_0 (or,i32)
8_2 (lshr,i32) == 6_0 (xor,i32)
8_2 (lshr,i32) == 7_0 (shl,i32)
8_2 (lshr,i32) == 9_0 (ashr,i32)
8_2 (lshr,i32) == 10_0 (select,i32)
8_2 (lshr,i32) == 11_0 (zext,eq,i32)
8_2 (lshr,i32) == 12_0 (zext,ne,i32)
8_2 (lshr,i32) == 13_0 (zext,ult,i32)
8_2 (lshr,i32) == 14_0 (zext,slt,i32)
8_2 (lshr,i32) == 15_0 (zext,ule,i32)
8_2 (lshr,i32) == 16_0 (zext,sle,i32)
9_1 (ashr,i32) == 1_0 (add,i32)
9_1 (ashr,i32) == 2_0 (sub,i32)
9_1 (ashr,i32) == 3_0 (mul,i32)
9_1 (ashr,i32) == 4_0 (and,i32)
9_1 (ashr,i32) == 5_0 (or,i32)
9_1 (ashr,i32) == 6_0 (xor,i32)
9_1 (ashr,i32) == 7_0 (shl,i32)
9_1 (ashr,i32) == 8_0 (lshr,i32)
9_1 (ashr,i32) == 10_0 (select,i32)
9_1 (ashr,i32) == 11_0 (zext,eq,i32)
9_1 (ashr,i32) == 12_0 (zext,ne,i32)
9_1 (ashr,i32) == 13_0 (zext,ult,i32)
9_1 (ashr,i32) == 14_0 (zext,slt,i32)
9_1 (ashr,i32) == 15_0 (zext,ule,i32)
9_1 (ashr,i32) == 16_0 (zext,sle,i32)
9_2 (ashr,i32) == 1_0 (add,i32)
9_2 (ashr,i32) == 2_0 (sub,i32)
9_2 (ashr,i32) == 3_0 (mul,i32)
9_2 (ashr,i32) == 4_0 (and,i32)
9_2 (ashr,i32) == 5_0 (or,i32)
9_2 (ashr,i32) == 6_0 (xor,i32)
9_2 (ashr,i32) == 7_0 (shl,i32)
9_2 (ashr,i32) == 8_0 (lshr,i32)
9_2 (ashr,i32) == 10_0 (select,i32)
9_2 (ashr,i32) == 11_0 (zext,eq,i32)
9_2 (ashr,i32) == 12_0 (zext,ne,i32)
9_2 (ashr,i32) == 13_0 (zext,ult,i32)
9_2 (ashr,i32) == 14_0 (zext,slt,i32)
9_2 (ashr,i32) == 15_0 (zext,ule,i32)
9_2 (ashr,i32) == 16_0 (zext,sle,i32)
10_1 (select,i32) == 1_0 (add,i32)
10_1 (select,i32) == 2_0 (sub,i32)
10_1 (select,i32) == 3_0 (mul,i32)
10_1 (select,i32) == 4_0 (and,i32)
10_1 (select,i32) == 5_0 (or,i32)
10_1 (select,i32) == 6_0 (xor,i32)
10_1 (select,i32) == 7_0 (shl,i32)
10_1 (select,i32) == 8_0 (lshr,i32)
10_1 (select,i32) == 9_0 (ashr,i32)
10_1 (select,i32) == 11_0 (zext,eq,i32)
10_1 (select,i32) == 12_0 (zext,ne,i32)
10_1 (select,i32) == 13_0 (zext,ult,i32)
10_1 (select,i32) == 14_0 (zext,slt,i32)
10_1 (select,i32) == 15_0 (zext,ule,i32)
10_1 (select,i32) == 16_0 (zext,sle,i32)
10_2 (select,i32) == 1_0 (add,i32)
10_2 (select,i32) == 2_0 (sub,i32)
10_2 (select,i32) == 3_0 (mul,i32)
10_2 (select,i32) == 4_0 (and,i32)
10_2 (select,i32) == 5_0 (or,i32)
10_2 (select,i32) == 6_0 (xor,i32)
10_2 (select,i32) == 7_0 (shl,i32)
10_2 (select,i32) == 8_0 (lshr,i32)
10_2 (select,i32) == 9_0 (ashr,i32)
10_2 (select,i32) == 11_0 (zext,eq,i32)
10_2 (select,i32) == 12_0 (zext,ne,i32)
10_2 (select,i32) == 13_0 (zext,ult,i32)
10_2 (select,i32) == 14_0 (zext,slt,i32)
10_2 (select,i32) == 15_0 (zext,ule,i32)
10_2 (select,i32) == 16_0 (zext,sle,i32)
10_3 (select,i32) == 1_0 (add,i32)
10_3 (select,i32) == 2_0 (sub,i32)
10_3 (select,i32) == 3_0 (mul,i32)
10_3 (select,i32) == 4_0 (and,i32)
10_3 (select,i32) == 5_0 (or,i32)
10_3 (select,i32) == 6_0 (xor,i32)
10_3 (select,i32) == 7_0 (shl,i32)
10_3 (select,i32) == 8_0 (lshr,i32)
10_3 (select,i32) == 9_0 (ashr,i32)
10_3 (select,i32) == 11_0 (zext,eq,i32)
10_3 (select,i32) == 12_0 (zext,ne,i32)
10_3 (select,i32) == 13_0 (zext,ult,i32)
10_3 (select,i32) == 14_0 (zext,slt,i32)
10_3 (select,i32) == 15_0 (zext,ule,i32)
10_3 (select,i32) == 16_0 (zext,sle,i32)
11_1 (eq,i32) == 1_0 (add,i32)
11_1 (eq,i32) == 2_0 (sub,i32)
11_1 (eq,i32) == 3_0 (mul,i32)
11_1 (eq,i32) == 4_0 (and,i32)
11_1 (eq,i32) == 5_0 (or,i32)
11_1 (eq,i32) == 6_0 (xor,i32)
11_1 (eq,i32) == 7_0 (shl,i32)
11_1 (eq,i32) == 8_0 (lshr,i32)
11_1 (eq,i32) == 9_0 (ashr,i32)
11_1 (eq,i32) == 10_0 (select,i32)
11_1 (eq,i32) == 12_0 (zext,ne,i32)
11_1 (eq,i32) == 13_0 (zext,ult,i32)
11_1 (eq,i32) == 14_0 (zext,slt,i32)
11_1 (eq,i32) == 15_0 (zext,ule,i32)
11_1 (eq,i32) == 16_0 (zext,sle,i32)
11_2 (eq,i32) == 1_0 (add,i32)
11_2 (eq,i32) == 2_0 (sub,i32)
11_2 (eq,i32) == 3_0 (mul,i32)
11_2 (eq,i32) == 4_0 (and,i32)
11_2 (eq,i32) == 5_0 (or,i32)
11_2 (eq,i32) == 6_0 (xor,i32)
11_2 (eq,i32) == 7_0 (shl,i32)
11_2 (eq,i32) == 8_0 (lshr,i32)
11_2 (eq,i32) == 9_0 (ashr,i32)
11_2 (eq,i32) == 10_0 (select,i32)
11_2 (eq,i32) == 12_0 (zext,ne,i32)
11_2 (eq,i32) == 13_0 (zext,ult,i32)
11_2 (eq,i32) == 14_0 (zext,slt,i32)
11_2 (eq,i32) == 15_0 (zext,ule,i32)
11_2 (eq,i32) == 16_0 (zext,sle,i32)
12_1 (ne,i32) == 1_0 (add,i32)
12_1 (ne,i32) == 2_0 (sub,i32)
12_1 (ne,i32) == 3_0 (mul,i32)
12_1 (ne,i32) == 4_0 (and,i32)
12_1 (ne,i32) == 5_0 (or,i32)
12_1 (ne,i32) == 6_0 (xor,i32)
12_1 (ne,i32) == 7_0 (shl,i32)
12_1 (ne,i32) == 8_0 (lshr,i32)
12_1 (ne,i32) == 9_0 (ashr,i32)
12_1 (ne,i32) == 10_0 (select,i32)
12_1 (ne,i32) == 11_0 (zext,eq,i32)
12_1 (ne,i32) == 13_0 (zext,ult,i32)
12_1 (ne,i32) == 14_0 (zext,slt,i32)
12_1 (ne,i32) == 15_0 (zext,ule,i32)
12_1 (ne,i32) == 16_0 (zext,sle,i32)
12_2 (ne,i32) == 1_0 (add,i32)
12_2 (ne,i32) == 2_0 (sub,i32)
12_2 (ne,i32) == 3_0 (mul,i32)
12_2 (ne,i32) == 4_0 (and,i32)
12_2 (ne,i32) == 5_0 (or,i32)
12_2 (ne,i32) == 6_0 (xor,i32)
12_2 (ne,i32) == 7_0 (shl,i32)
12_2 (ne,i32) == 8_0 (lshr,i32)
12_2 (ne,i32) == 9_0 (ashr,i32)
12_2 (ne,i32) == 10_0 (select,i32)
12_2 (ne,i32) == 11_0 (zext,eq,i32)
12_2 (ne,i32) == 13_0 (zext,ult,i32)
12_2 (ne,i32) == 14_0 (zext,slt,i32)
12_2 (ne,i32) == 15_0 (zext,ule,i32)
12_2 (ne,i32) == 16_0 (zext,sle,i32)
13_1 (ult,i32) == 1_0 (add,i32)
13_1 (ult,i32) == 2_0 (sub,i32)
13_1 (ult,i32) == 3_0 (mul,i32)
13_1 (ult,i32) == 4_0 (and,i32)
13_1 (ult,i32) == 5_0 (or,i32)
13_1 (ult,i32) == 6_0 (xor,i32)
13_1 (ult,i32) == 7_0 (shl,i32)
13_1 (ult,i32) == 8_0 (lshr,i32)
13_1 (ult,i32) == 9_0 (ashr,i32)
13_1 (ult,i32) == 10_0 (select,i32)
13_1 (ult,i32) == 11_0 (zext,eq,i32)
13_1 (ult,i32) == 12_0 (zext,ne,i32)
13_1 (ult,i32) == 14_0 (zext,slt,i32)
13_1 (ult,i32) == 15_0 (zext,ule,i32)
13_1 (ult,i32) == 16_0 (zext,sle,i32)
13_2 (ult,i32) == 1_0 (add,i32)
13_2 (ult,i32) == 2_0 (sub,i32)
13_2 (ult,i32) == 3_0 (mul,i32)
13_2 (ult,i32) == 4_0 (and,i32)
13_2 (ult,i32) == 5_0 (or,i32)
13_2 (ult,i32) == 6_0 (xor,i32)
13_2 (ult,i32) == 7_0 (shl,i32)
13_2 (ult,i32) == 8_0 (lshr,i32)
13_2 (ult,i32) == 9_0 (ashr,i32)
13_2 (ult,i32) == 10_0 (select,i32)
13_2 (ult,i32) == 11_0 (zext,eq,i32)
13_2 (ult,i32) == 12_0 (zext,ne,i32)
13_2 (ult,i32) == 14_0 (zext,slt,i32)
13_2 (ult,i32) == 15_0 (zext,ule,i32)
13_2 (ult,i32) == 16_0 (zext,sle,i32)
14_1 (slt,i32) == 1_0 (add,i32)
14_1 (slt,i32) == 2_0 (sub,i32)
14_1 (slt,i32) == 3_0 (mul,i32)
14_1 (slt,i32) == 4_0 (and,i32)
14_1 (slt,i32) == 5_0 (or,i32)
14_1 (slt,i32) == 6_0 (xor,i32)
14_1 (slt,i32) == 7_0 (shl,i32)
14_1 (slt,i32) == 8_0 (lshr,i32)
14_1 (slt,i32) == 9_0 (ashr,i32)
14_1 (slt,i32) == 10_0 (select,i32)
14_1 (slt,i32) == 11_0 (zext,eq,i32)
14_1 (slt,i32) == 12_0 (zext,ne,i32)
14_1 (slt,i32) == 13_0 (zext,ult,i32)
14_1 (slt,i32) == 15_0 (zext,ule,i32)
14_1 (slt,i32) == 16_0 (zext,sle,i32)
14_2 (slt,i32) == 1_0 (add,i32)
14_2 (slt,i32) == 2_0 (sub,i32)
14_2 (slt,i32) == 3_0 (mul,i32)
14_2 (slt,i32) == 4_0 (and,i32)
14_2 (slt,i32) == 5_0 (or,i32)
14_2 (slt,i32) == 6_0 (xor,i32)
14_2 (slt,i32) == 7_0 (shl,i32)
14_2 (slt,i32) == 8_0 (lshr,i32)
14_2 (slt,i32) == 9_0 (ashr,i32)
14_2 (slt,i32) == 10_0 (select,i32)
14_2 (slt,i32) == 11_0 (zext,eq,i32)
14_2 (slt,i32) == 12_0 (zext,ne,i32)
14_2 (slt,i32) == 13_0 (zext,ult,i32)
14_2 (slt,i32) == 15_0 (zext,ule,i32)
14_2 (slt,i32) == 16_0 (zext,sle,i32)
15_1 (ule,i32) == 1_0 (add,i32)
15_1 (ule,i32) == 2_0 (sub,i32)
15_1 (ule,i32) == 3_0 (mul,i32)
15_1 (ule,i32) == 4_0 (and,i32)
15_1 (ule,i32) == 5_0 (or,i32)
15_1 (ule,i32) == 6_0 (xor,i32)
15_1 (ule,i32) == 7_0 (shl,i32)
15_1 (ule,i32) == 8_0 (lshr,i32)
15_1 (ule,i32) == 9_0 (ashr,i32)
15_1 (ule,i32) == 10_0 (select,i32)
15_1 (ule,i32) == 11_0 (zext,eq,i32)
15_1 (ule,i32) == 12_0 (zext,ne,i32)
15_1 (ule,i32) == 13_0 (zext,ult,i32)
15_1 (ule,i32) == 14_0 (zext,slt,i32)
15_1 (ule,i32) == 16_0 (zext,sle,i32)
15_2 (ule,i32) == 1_0 (add,i32)
15_2 (ule,i32) == 2_0 (sub,i32)
15_2 (ule,i32) == 3_0 (mul,i32)
15_2 (ule,i32) == 4_0 (and,i32)
15_2 (ule,i32) == 5_0 (or,i32)
15_2 (ule,i32) == 6_0 (xor,i32)
15_2 (ule,i32) == 7_0 (shl,i32)
15_2 (ule,i32) == 8_0 (lshr,i32)
15_2 (ule,i32) == 9_0 (ashr,i32)
15_2 (ule,i32) == 10_0 (select,i32)
15_2 (ule,i32) == 11_0 (zext,eq,i32)
15_2 (ule,i32) == 12_0 (zext,ne,i32)
15_2 (ule,i32) == 13_0 (zext,ult,i32)
15_2 (ule,i32) == 14_0 (zext,slt,i32)
15_2 (ule,i32) == 16_0 (zext,sle,i32)
16_1 (sle,i32) == 1_0 (add,i32)
16_1 (sle,i32) == 2_0 (sub,i32)
16_1 (sle,i32) == 3_0 (mul,i32)
16_1 (sle,i32) == 4_0 (and,i32)
16_1 (sle,i32) == 5_0 (or,i32)
16_1 (sle,i32) == 6_0 (xor,i32)
16_1 (sle,i32) == 7_0 (shl,i32)
16_1 (sle,i32) == 8_0 (lshr,i32)
16_1 (sle,i32) == 9_0 (ashr,i32)
16_1 (sle,i32) == 10_0 (select,i32)
16_1 (sle,i32) == 11_0 (zext,eq,i32)
16_1 (sle,i32) == 12_0 (zext,ne,i32)
16_1 (sle,i32) == 13_0 (zext,ult,i32)
16_1 (sle,i32) == 14_0 (zext,slt,i32)
16_1 (sle,i32) == 15_0 (zext,ule,i32)
16_2 (sle,i32) == 1_0 (add,i32)
16_2 (sle,i32) == 2_0 (sub,i32)
16_2 (sle,i32) == 3_0 (mul,i32)
16_2 (sle,i32) == 4_0 (and,i32)
16_2 (sle,i32) == 5_0 (or,i32)
16_2 (sle,i32) == 6_0 (xor,i32)
16_2 (sle,i32) == 7_0 (shl,i32)
16_2 (sle,i32) == 8_0 (lshr,i32)
16_2 (sle,i32) == 9_0 (ashr,i32)
16_2 (sle,i32) == 10_0 (select,i32)
16_2 (sle,i32) == 11_0 (zext,eq,i32)
16_2 (sle,i32) == 12_0 (zext,ne,i32)
16_2 (sle,i32) == 13_0 (zext,ult,i32)
16_2 (sle,i32) == 14_0 (zext,slt,i32)
16_2 (sle,i32) == 15_0 (zext,ule,i32)
1_0 (add,i32) == 17_0 (output,i32)
2_0 (sub,i32) == 17_0 (output,i32)
3_0 (mul,i32) == 17_0 (output,i32)
4_0 (and,i32) == 17_0 (output,i32)
5_0 (or,i32) == 17_0 (output,i32)
6_0 (xor,i32) == 17_0 (output,i32)
7_0 (shl,i32) == 17_0 (output,i32)
8_0 (lshr,i32) == 17_0 (output,i32)
9_0 (ashr,i32) == 17_0 (output,i32)
10_0 (select,i32) == 17_0 (output,i32)
11_0 (zext,eq,i32) == 17_0 (output,i32)
12_0 (zext,ne,i32) == 17_0 (output,i32)
13_0 (zext,ult,i32) == 17_0 (output,i32)
14_0 (zext,slt,i32) == 17_0 (output,i32)
15_0 (zext,ule,i32) == 17_0 (output,i32)
16_0 (zext,sle,i32) == 17_0 (output,i32)
synthesizing using 0 component(s)
0 <= 17_0 (output,i32) < 3
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
solving synthesis constraint.. UNSAT
synthesizing using 1 component(s)
3 <= 17_0 (output,i32) < 4
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
solving synthesis constraint.. UNSAT
synthesizing using 2 component(s)
3 <= 17_0 (output,i32) < 5
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
solving synthesis constraint.. UNSAT
synthesizing using 3 component(s)
3 <= 17_0 (output,i32) < 6
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
solving synthesis constraint.. ; starting synthesis for LHS
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = mulnsw %0, %0 (hasExternalUses)
%2:i32 = urem %1, 1000000:i32
%3:i1 = ne 269696:i32, %2
infer %3
inputs: 1, constants: 2
N: 3, M: 20
default width: 32
output width: 1
component library: add (32, { 32 32 }); sub (32, { 32 32 }); mul (32, { 32 32 }); and (32, { 32 32 }); or (32, { 32 32 }); xor (32, { 32 32 }); shl (32, { 32 32 }); lshr (32, { 32 32 }); ashr (32, { 32 32 }); select (32, { 1 32 32 }); eq (1, { 32 32 }); ne (1, { 32 32 }); ult (1, { 32 32 }); slt (1, { 32 32 }); ule (1, { 32 32 }); sle (1, { 32 32 }); trunc (1, { 32 }); 
const components: const (32); const (32); 
I: 0_1 (input,i32) 0_2 (const,i32) 0_3 (const,i32) 
P: 1_1 (add,i32) 1_2 (add,i32) 2_1 (sub,i32) 2_2 (sub,i32) 3_1 (mul,i32) 3_2 (mul,i32) 4_1 (and,i32) 4_2 (and,i32) 5_1 (or,i32) 5_2 (or,i32) 6_1 (xor,i32) 6_2 (xor,i32) 7_1 (shl,i32) 7_2 (shl,i32) 8_1 (lshr,i32) 8_2 (lshr,i32) 9_1 (ashr,i32) 9_2 (ashr,i32) 10_1 (select,i32) 10_2 (select,i32) 10_3 (select,i32) 11_1 (eq,i32) 11_2 (eq,i32) 12_1 (ne,i32) 12_2 (ne,i32) 13_1 (ult,i32) 13_2 (ult,i32) 14_1 (slt,i32) 14_2 (slt,i32) 15_1 (ule,i32) 15_2 (ule,i32) 16_1 (sle,i32) 16_2 (sle,i32) 17_1 (trunc,i32) 
R: 1_0 (add,i32) 2_0 (sub,i32) 3_0 (mul,i32) 4_0 (and,i32) 5_0 (or,i32) 6_0 (xor,i32) 7_0 (shl,i32) 8_0 (lshr,i32) 9_0 (ashr,i32) 10_0 (select,i32) 11_0 (zext,eq,i32) 12_0 (zext,ne,i32) 13_0 (zext,ult,i32) 14_0 (zext,slt,i32) 15_0 (zext,ule,i32) 16_0 (zext,sle,i32) 17_0 (trunc,i1) 
L: 0_1 (input,i32) 0_2 (const,i32) 0_3 (const,i32) 1_1 (add,i32) 1_2 (add,i32) 2_1 (sub,i32) 2_2 (sub,i32) 3_1 (mul,i32) 3_2 (mul,i32) 4_1 (and,i32) 4_2 (and,i32) 5_1 (or,i32) 5_2 (or,i32) 6_1 (xor,i32) 6_2 (xor,i32) 7_1 (shl,i32) 7_2 (shl,i32) 8_1 (lshr,i32) 8_2 (lshr,i32) 9_1 (ashr,i32) 9_2 (ashr,i32) 10_1 (select,i32) 10_2 (select,i32) 10_3 (select,i32) 11_1 (eq,i32) 11_2 (eq,i32) 12_1 (ne,i32) 12_2 (ne,i32) 13_1 (ult,i32) 13_2 (ult,i32) 14_1 (slt,i32) 14_2 (slt,i32) 15_1 (ule,i32) 15_2 (ule,i32) 16_1 (sle,i32) 16_2 (sle,i32) 17_1 (trunc,i32) 1_0 (add,i32) 2_0 (sub,i32) 3_0 (mul,i32) 4_0 (and,i32) 5_0 (or,i32) 6_0 (xor,i32) 7_0 (shl,i32) 8_0 (lshr,i32) 9_0 (ashr,i32) 10_0 (select,i32) 11_0 (zext,eq,i32) 12_0 (zext,ne,i32) 13_0 (zext,ult,i32) 14_0 (zext,slt,i32) 15_0 (zext,ule,i32) 16_0 (zext,sle,i32) 17_0 (trunc,i1) 18_0 (output,i1) 
O: 18_0 (output,i1)
consistency constraints:
1_0 (add,i32) != 2_0 (sub,i32)
1_0 (add,i32) != 3_0 (mul,i32)
1_0 (add,i32) != 4_0 (and,i32)
1_0 (add,i32) != 5_0 (or,i32)
1_0 (add,i32) != 6_0 (xor,i32)
1_0 (add,i32) != 7_0 (shl,i32)
1_0 (add,i32) != 8_0 (lshr,i32)
1_0 (add,i32) != 9_0 (ashr,i32)
1_0 (add,i32) != 10_0 (select,i32)
1_0 (add,i32) != 11_0 (zext,eq,i32)
1_0 (add,i32) != 12_0 (zext,ne,i32)
1_0 (add,i32) != 13_0 (zext,ult,i32)
1_0 (add,i32) != 14_0 (zext,slt,i32)
1_0 (add,i32) != 15_0 (zext,ule,i32)
1_0 (add,i32) != 16_0 (zext,sle,i32)
1_0 (add,i32) != 17_0 (trunc,i1)
2_0 (sub,i32) != 3_0 (mul,i32)
2_0 (sub,i32) != 4_0 (and,i32)
2_0 (sub,i32) != 5_0 (or,i32)
2_0 (sub,i32) != 6_0 (xor,i32)
2_0 (sub,i32) != 7_0 (shl,i32)
2_0 (sub,i32) != 8_0 (lshr,i32)
2_0 (sub,i32) != 9_0 (ashr,i32)
2_0 (sub,i32) != 10_0 (select,i32)
2_0 (sub,i32) != 11_0 (zext,eq,i32)
2_0 (sub,i32) != 12_0 (zext,ne,i32)
2_0 (sub,i32) != 13_0 (zext,ult,i32)
2_0 (sub,i32) != 14_0 (zext,slt,i32)
2_0 (sub,i32) != 15_0 (zext,ule,i32)
2_0 (sub,i32) != 16_0 (zext,sle,i32)
2_0 (sub,i32) != 17_0 (trunc,i1)
3_0 (mul,i32) != 4_0 (and,i32)
3_0 (mul,i32) != 5_0 (or,i32)
3_0 (mul,i32) != 6_0 (xor,i32)
3_0 (mul,i32) != 7_0 (shl,i32)
3_0 (mul,i32) != 8_0 (lshr,i32)
3_0 (mul,i32) != 9_0 (ashr,i32)
3_0 (mul,i32) != 10_0 (select,i32)
3_0 (mul,i32) != 11_0 (zext,eq,i32)
3_0 (mul,i32) != 12_0 (zext,ne,i32)
3_0 (mul,i32) != 13_0 (zext,ult,i32)
3_0 (mul,i32) != 14_0 (zext,slt,i32)
3_0 (mul,i32) != 15_0 (zext,ule,i32)
3_0 (mul,i32) != 16_0 (zext,sle,i32)
3_0 (mul,i32) != 17_0 (trunc,i1)
4_0 (and,i32) != 5_0 (or,i32)
4_0 (and,i32) != 6_0 (xor,i32)
4_0 (and,i32) != 7_0 (shl,i32)
4_0 (and,i32) != 8_0 (lshr,i32)
4_0 (and,i32) != 9_0 (ashr,i32)
4_0 (and,i32) != 10_0 (select,i32)
4_0 (and,i32) != 11_0 (zext,eq,i32)
4_0 (and,i32) != 12_0 (zext,ne,i32)
4_0 (and,i32) != 13_0 (zext,ult,i32)
4_0 (and,i32) != 14_0 (zext,slt,i32)
4_0 (and,i32) != 15_0 (zext,ule,i32)
4_0 (and,i32) != 16_0 (zext,sle,i32)
4_0 (and,i32) != 17_0 (trunc,i1)
5_0 (or,i32) != 6_0 (xor,i32)
5_0 (or,i32) != 7_0 (shl,i32)
5_0 (or,i32) != 8_0 (lshr,i32)
5_0 (or,i32) != 9_0 (ashr,i32)
5_0 (or,i32) != 10_0 (select,i32)
5_0 (or,i32) != 11_0 (zext,eq,i32)
5_0 (or,i32) != 12_0 (zext,ne,i32)
5_0 (or,i32) != 13_0 (zext,ult,i32)
5_0 (or,i32) != 14_0 (zext,slt,i32)
5_0 (or,i32) != 15_0 (zext,ule,i32)
5_0 (or,i32) != 16_0 (zext,sle,i32)
5_0 (or,i32) != 17_0 (trunc,i1)
6_0 (xor,i32) != 7_0 (shl,i32)
6_0 (xor,i32) != 8_0 (lshr,i32)
6_0 (xor,i32) != 9_0 (ashr,i32)
6_0 (xor,i32) != 10_0 (select,i32)
6_0 (xor,i32) != 11_0 (zext,eq,i32)
6_0 (xor,i32) != 12_0 (zext,ne,i32)
6_0 (xor,i32) != 13_0 (zext,ult,i32)
6_0 (xor,i32) != 14_0 (zext,slt,i32)
6_0 (xor,i32) != 15_0 (zext,ule,i32)
6_0 (xor,i32) != 16_0 (zext,sle,i32)
6_0 (xor,i32) != 17_0 (trunc,i1)
7_0 (shl,i32) != 8_0 (lshr,i32)
7_0 (shl,i32) != 9_0 (ashr,i32)
7_0 (shl,i32) != 10_0 (select,i32)
7_0 (shl,i32) != 11_0 (zext,eq,i32)
7_0 (shl,i32) != 12_0 (zext,ne,i32)
7_0 (shl,i32) != 13_0 (zext,ult,i32)
7_0 (shl,i32) != 14_0 (zext,slt,i32)
7_0 (shl,i32) != 15_0 (zext,ule,i32)
7_0 (shl,i32) != 16_0 (zext,sle,i32)
7_0 (shl,i32) != 17_0 (trunc,i1)
8_0 (lshr,i32) != 9_0 (ashr,i32)
8_0 (lshr,i32) != 10_0 (select,i32)
8_0 (lshr,i32) != 11_0 (zext,eq,i32)
8_0 (lshr,i32) != 12_0 (zext,ne,i32)
8_0 (lshr,i32) != 13_0 (zext,ult,i32)
8_0 (lshr,i32) != 14_0 (zext,slt,i32)
8_0 (lshr,i32) != 15_0 (zext,ule,i32)
8_0 (lshr,i32) != 16_0 (zext,sle,i32)
8_0 (lshr,i32) != 17_0 (trunc,i1)
9_0 (ashr,i32) != 10_0 (select,i32)
9_0 (ashr,i32) != 11_0 (zext,eq,i32)
9_0 (ashr,i32) != 12_0 (zext,ne,i32)
9_0 (ashr,i32) != 13_0 (zext,ult,i32)
9_0 (ashr,i32) != 14_0 (zext,slt,i32)
9_0 (ashr,i32) != 15_0 (zext,ule,i32)
9_0 (ashr,i32) != 16_0 (zext,sle,i32)
9_0 (ashr,i32) != 17_0 (trunc,i1)
10_0 (select,i32) != 11_0 (zext,eq,i32)
10_0 (select,i32) != 12_0 (zext,ne,i32)
10_0 (select,i32) != 13_0 (zext,ult,i32)
10_0 (select,i32) != 14_0 (zext,slt,i32)
10_0 (select,i32) != 15_0 (zext,ule,i32)
10_0 (select,i32) != 16_0 (zext,sle,i32)
10_0 (select,i32) != 17_0 (trunc,i1)
11_0 (zext,eq,i32) != 12_0 (zext,ne,i32)
11_0 (zext,eq,i32) != 13_0 (zext,ult,i32)
11_0 (zext,eq,i32) != 14_0 (zext,slt,i32)
11_0 (zext,eq,i32) != 15_0 (zext,ule,i32)
11_0 (zext,eq,i32) != 16_0 (zext,sle,i32)
11_0 (zext,eq,i32) != 17_0 (trunc,i1)
12_0 (zext,ne,i32) != 13_0 (zext,ult,i32)
12_0 (zext,ne,i32) != 14_0 (zext,slt,i32)
12_0 (zext,ne,i32) != 15_0 (zext,ule,i32)
12_0 (zext,ne,i32) != 16_0 (zext,sle,i32)
12_0 (zext,ne,i32) != 17_0 (trunc,i1)
13_0 (zext,ult,i32) != 14_0 (zext,slt,i32)
13_0 (zext,ult,i32) != 15_0 (zext,ule,i32)
13_0 (zext,ult,i32) != 16_0 (zext,sle,i32)
13_0 (zext,ult,i32) != 17_0 (trunc,i1)
14_0 (zext,slt,i32) != 15_0 (zext,ule,i32)
14_0 (zext,slt,i32) != 16_0 (zext,sle,i32)
14_0 (zext,slt,i32) != 17_0 (trunc,i1)
15_0 (zext,ule,i32) != 16_0 (zext,sle,i32)
15_0 (zext,ule,i32) != 17_0 (trunc,i1)
16_0 (zext,sle,i32) != 17_0 (trunc,i1)
acyclicity constraints:
1_1 (add,i32) < 1_0
1_2 (add,i32) < 1_0
2_1 (sub,i32) < 2_0
2_2 (sub,i32) < 2_0
3_1 (mul,i32) < 3_0
3_2 (mul,i32) < 3_0
4_1 (and,i32) < 4_0
4_2 (and,i32) < 4_0
5_1 (or,i32) < 5_0
5_2 (or,i32) < 5_0
6_1 (xor,i32) < 6_0
6_2 (xor,i32) < 6_0
7_1 (shl,i32) < 7_0
7_2 (shl,i32) < 7_0
8_1 (lshr,i32) < 8_0
8_2 (lshr,i32) < 8_0
9_1 (ashr,i32) < 9_0
9_2 (ashr,i32) < 9_0
10_1 (select,i32) < 10_0
10_2 (select,i32) < 10_0
10_3 (select,i32) < 10_0
11_1 (eq,i32) < 11_0
11_2 (eq,i32) < 11_0
12_1 (ne,i32) < 12_0
12_2 (ne,i32) < 12_0
13_1 (ult,i32) < 13_0
13_2 (ult,i32) < 13_0
14_1 (slt,i32) < 14_0
14_2 (slt,i32) < 14_0
15_1 (ule,i32) < 15_0
15_2 (ule,i32) < 15_0
16_1 (sle,i32) < 16_0
16_2 (sle,i32) < 16_0
17_1 (trunc,i32) < 17_0
location variable constraints:
0 <= 1_1 (add,i32) < 20
0 <= 1_2 (add,i32) < 20
0 <= 2_1 (sub,i32) < 20
0 <= 2_2 (sub,i32) < 20
0 <= 3_1 (mul,i32) < 20
0 <= 3_2 (mul,i32) < 20
0 <= 4_1 (and,i32) < 20
0 <= 4_2 (and,i32) < 20
0 <= 5_1 (or,i32) < 20
0 <= 5_2 (or,i32) < 20
0 <= 6_1 (xor,i32) < 20
0 <= 6_2 (xor,i32) < 20
0 <= 7_1 (shl,i32) < 20
0 <= 7_2 (shl,i32) < 20
0 <= 8_1 (lshr,i32) < 20
0 <= 8_2 (lshr,i32) < 20
0 <= 9_1 (ashr,i32) < 20
0 <= 9_2 (ashr,i32) < 20
0 <= 10_1 (select,i32) < 20
0 <= 10_2 (select,i32) < 20
0 <= 10_3 (select,i32) < 20
0 <= 11_1 (eq,i32) < 20
0 <= 11_2 (eq,i32) < 20
0 <= 12_1 (ne,i32) < 20
0 <= 12_2 (ne,i32) < 20
0 <= 13_1 (ult,i32) < 20
0 <= 13_2 (ult,i32) < 20
0 <= 14_1 (slt,i32) < 20
0 <= 14_2 (slt,i32) < 20
0 <= 15_1 (ule,i32) < 20
0 <= 15_2 (ule,i32) < 20
0 <= 16_1 (sle,i32) < 20
0 <= 16_2 (sle,i32) < 20
0 <= 17_1 (trunc,i32) < 20
0 <= 0_1 (input,i32) < 20
0 <= 0_2 (const,i32) < 20
0 <= 0_3 (const,i32) < 20
3 <= 1_0 (add,i32) < 20
3 <= 2_0 (sub,i32) < 20
3 <= 3_0 (mul,i32) < 20
3 <= 4_0 (and,i32) < 20
3 <= 5_0 (or,i32) < 20
3 <= 6_0 (xor,i32) < 20
3 <= 7_0 (shl,i32) < 20
3 <= 8_0 (lshr,i32) < 20
3 <= 9_0 (ashr,i32) < 20
3 <= 10_0 (select,i32) < 20
3 <= 11_0 (zext,eq,i32) < 20
3 <= 12_0 (zext,ne,i32) < 20
3 <= 13_0 (zext,ult,i32) < 20
3 <= 14_0 (zext,slt,i32) < 20
3 <= 15_0 (zext,ule,i32) < 20
3 <= 16_0 (zext,sle,i32) < 20
3 <= 17_0 (trunc,i1) < 20
component input constraints:
1_1 (add,i32) == 0_1 (input,i32) || 1_1 (add,i32) == 0_2 (const,i32) || 1_1 (add,i32) == 0_3 (const,i32) || 1_1 (add,i32) == 2_0 (sub,i32) || 1_1 (add,i32) == 3_0 (mul,i32) || 1_1 (add,i32) == 4_0 (and,i32) || 1_1 (add,i32) == 5_0 (or,i32) || 1_1 (add,i32) == 6_0 (xor,i32) || 1_1 (add,i32) == 7_0 (shl,i32) || 1_1 (add,i32) == 8_0 (lshr,i32) || 1_1 (add,i32) == 9_0 (ashr,i32) || 1_1 (add,i32) == 10_0 (select,i32) || 1_1 (add,i32) == 11_0 (zext,eq,i32) || 1_1 (add,i32) == 12_0 (zext,ne,i32) || 1_1 (add,i32) == 13_0 (zext,ult,i32) || 1_1 (add,i32) == 14_0 (zext,slt,i32) || 1_1 (add,i32) == 15_0 (zext,ule,i32) || 1_1 (add,i32) == 16_0 (zext,sle,i32) || false
1_2 (add,i32) == 0_1 (input,i32) || 1_2 (add,i32) == 0_2 (const,i32) || 1_2 (add,i32) == 0_3 (const,i32) || 1_2 (add,i32) == 2_0 (sub,i32) || 1_2 (add,i32) == 3_0 (mul,i32) || 1_2 (add,i32) == 4_0 (and,i32) || 1_2 (add,i32) == 5_0 (or,i32) || 1_2 (add,i32) == 6_0 (xor,i32) || 1_2 (add,i32) == 7_0 (shl,i32) || 1_2 (add,i32) == 8_0 (lshr,i32) || 1_2 (add,i32) == 9_0 (ashr,i32) || 1_2 (add,i32) == 10_0 (select,i32) || 1_2 (add,i32) == 11_0 (zext,eq,i32) || 1_2 (add,i32) == 12_0 (zext,ne,i32) || 1_2 (add,i32) == 13_0 (zext,ult,i32) || 1_2 (add,i32) == 14_0 (zext,slt,i32) || 1_2 (add,i32) == 15_0 (zext,ule,i32) || 1_2 (add,i32) == 16_0 (zext,sle,i32) || false
2_1 (sub,i32) == 0_1 (input,i32) || 2_1 (sub,i32) == 0_2 (const,i32) || 2_1 (sub,i32) == 0_3 (const,i32) || 2_1 (sub,i32) == 1_0 (add,i32) || 2_1 (sub,i32) == 3_0 (mul,i32) || 2_1 (sub,i32) == 4_0 (and,i32) || 2_1 (sub,i32) == 5_0 (or,i32) || 2_1 (sub,i32) == 6_0 (xor,i32) || 2_1 (sub,i32) == 7_0 (shl,i32) || 2_1 (sub,i32) == 8_0 (lshr,i32) || 2_1 (sub,i32) == 9_0 (ashr,i32) || 2_1 (sub,i32) == 10_0 (select,i32) || 2_1 (sub,i32) == 11_0 (zext,eq,i32) || 2_1 (sub,i32) == 12_0 (zext,ne,i32) || 2_1 (sub,i32) == 13_0 (zext,ult,i32) || 2_1 (sub,i32) == 14_0 (zext,slt,i32) || 2_1 (sub,i32) == 15_0 (zext,ule,i32) || 2_1 (sub,i32) == 16_0 (zext,sle,i32) || false
2_2 (sub,i32) == 0_1 (input,i32) || 2_2 (sub,i32) == 0_2 (const,i32) || 2_2 (sub,i32) == 0_3 (const,i32) || 2_2 (sub,i32) == 1_0 (add,i32) || 2_2 (sub,i32) == 3_0 (mul,i32) || 2_2 (sub,i32) == 4_0 (and,i32) || 2_2 (sub,i32) == 5_0 (or,i32) || 2_2 (sub,i32) == 6_0 (xor,i32) || 2_2 (sub,i32) == 7_0 (shl,i32) || 2_2 (sub,i32) == 8_0 (lshr,i32) || 2_2 (sub,i32) == 9_0 (ashr,i32) || 2_2 (sub,i32) == 10_0 (select,i32) || 2_2 (sub,i32) == 11_0 (zext,eq,i32) || 2_2 (sub,i32) == 12_0 (zext,ne,i32) || 2_2 (sub,i32) == 13_0 (zext,ult,i32) || 2_2 (sub,i32) == 14_0 (zext,slt,i32) || 2_2 (sub,i32) == 15_0 (zext,ule,i32) || 2_2 (sub,i32) == 16_0 (zext,sle,i32) || false
3_1 (mul,i32) == 0_1 (input,i32) || 3_1 (mul,i32) == 0_2 (const,i32) || 3_1 (mul,i32) == 0_3 (const,i32) || 3_1 (mul,i32) == 1_0 (add,i32) || 3_1 (mul,i32) == 2_0 (sub,i32) || 3_1 (mul,i32) == 4_0 (and,i32) || 3_1 (mul,i32) == 5_0 (or,i32) || 3_1 (mul,i32) == 6_0 (xor,i32) || 3_1 (mul,i32) == 7_0 (shl,i32) || 3_1 (mul,i32) == 8_0 (lshr,i32) || 3_1 (mul,i32) == 9_0 (ashr,i32) || 3_1 (mul,i32) == 10_0 (select,i32) || 3_1 (mul,i32) == 11_0 (zext,eq,i32) || 3_1 (mul,i32) == 12_0 (zext,ne,i32) || 3_1 (mul,i32) == 13_0 (zext,ult,i32) || 3_1 (mul,i32) == 14_0 (zext,slt,i32) || 3_1 (mul,i32) == 15_0 (zext,ule,i32) || 3_1 (mul,i32) == 16_0 (zext,sle,i32) || false
3_2 (mul,i32) == 0_1 (input,i32) || 3_2 (mul,i32) == 0_2 (const,i32) || 3_2 (mul,i32) == 0_3 (const,i32) || 3_2 (mul,i32) == 1_0 (add,i32) || 3_2 (mul,i32) == 2_0 (sub,i32) || 3_2 (mul,i32) == 4_0 (and,i32) || 3_2 (mul,i32) == 5_0 (or,i32) || 3_2 (mul,i32) == 6_0 (xor,i32) || 3_2 (mul,i32) == 7_0 (shl,i32) || 3_2 (mul,i32) == 8_0 (lshr,i32) || 3_2 (mul,i32) == 9_0 (ashr,i32) || 3_2 (mul,i32) == 10_0 (select,i32) || 3_2 (mul,i32) == 11_0 (zext,eq,i32) || 3_2 (mul,i32) == 12_0 (zext,ne,i32) || 3_2 (mul,i32) == 13_0 (zext,ult,i32) || 3_2 (mul,i32) == 14_0 (zext,slt,i32) || 3_2 (mul,i32) == 15_0 (zext,ule,i32) || 3_2 (mul,i32) == 16_0 (zext,sle,i32) || false
4_1 (and,i32) == 0_1 (input,i32) || 4_1 (and,i32) == 0_2 (const,i32) || 4_1 (and,i32) == 0_3 (const,i32) || 4_1 (and,i32) == 1_0 (add,i32) || 4_1 (and,i32) == 2_0 (sub,i32) || 4_1 (and,i32) == 3_0 (mul,i32) || 4_1 (and,i32) == 5_0 (or,i32) || 4_1 (and,i32) == 6_0 (xor,i32) || 4_1 (and,i32) == 7_0 (shl,i32) || 4_1 (and,i32) == 8_0 (lshr,i32) || 4_1 (and,i32) == 9_0 (ashr,i32) || 4_1 (and,i32) == 10_0 (select,i32) || 4_1 (and,i32) == 11_0 (zext,eq,i32) || 4_1 (and,i32) == 12_0 (zext,ne,i32) || 4_1 (and,i32) == 13_0 (zext,ult,i32) || 4_1 (and,i32) == 14_0 (zext,slt,i32) || 4_1 (and,i32) == 15_0 (zext,ule,i32) || 4_1 (and,i32) == 16_0 (zext,sle,i32) || false
4_2 (and,i32) == 0_1 (input,i32) || 4_2 (and,i32) == 0_2 (const,i32) || 4_2 (and,i32) == 0_3 (const,i32) || 4_2 (and,i32) == 1_0 (add,i32) || 4_2 (and,i32) == 2_0 (sub,i32) || 4_2 (and,i32) == 3_0 (mul,i32) || 4_2 (and,i32) == 5_0 (or,i32) || 4_2 (and,i32) == 6_0 (xor,i32) || 4_2 (and,i32) == 7_0 (shl,i32) || 4_2 (and,i32) == 8_0 (lshr,i32) || 4_2 (and,i32) == 9_0 (ashr,i32) || 4_2 (and,i32) == 10_0 (select,i32) || 4_2 (and,i32) == 11_0 (zext,eq,i32) || 4_2 (and,i32) == 12_0 (zext,ne,i32) || 4_2 (and,i32) == 13_0 (zext,ult,i32) || 4_2 (and,i32) == 14_0 (zext,slt,i32) || 4_2 (and,i32) == 15_0 (zext,ule,i32) || 4_2 (and,i32) == 16_0 (zext,sle,i32) || false
5_1 (or,i32) == 0_1 (input,i32) || 5_1 (or,i32) == 0_2 (const,i32) || 5_1 (or,i32) == 0_3 (const,i32) || 5_1 (or,i32) == 1_0 (add,i32) || 5_1 (or,i32) == 2_0 (sub,i32) || 5_1 (or,i32) == 3_0 (mul,i32) || 5_1 (or,i32) == 4_0 (and,i32) || 5_1 (or,i32) == 6_0 (xor,i32) || 5_1 (or,i32) == 7_0 (shl,i32) || 5_1 (or,i32) == 8_0 (lshr,i32) || 5_1 (or,i32) == 9_0 (ashr,i32) || 5_1 (or,i32) == 10_0 (select,i32) || 5_1 (or,i32) == 11_0 (zext,eq,i32) || 5_1 (or,i32) == 12_0 (zext,ne,i32) || 5_1 (or,i32) == 13_0 (zext,ult,i32) || 5_1 (or,i32) == 14_0 (zext,slt,i32) || 5_1 (or,i32) == 15_0 (zext,ule,i32) || 5_1 (or,i32) == 16_0 (zext,sle,i32) || false
5_2 (or,i32) == 0_1 (input,i32) || 5_2 (or,i32) == 0_2 (const,i32) || 5_2 (or,i32) == 0_3 (const,i32) || 5_2 (or,i32) == 1_0 (add,i32) || 5_2 (or,i32) == 2_0 (sub,i32) || 5_2 (or,i32) == 3_0 (mul,i32) || 5_2 (or,i32) == 4_0 (and,i32) || 5_2 (or,i32) == 6_0 (xor,i32) || 5_2 (or,i32) == 7_0 (shl,i32) || 5_2 (or,i32) == 8_0 (lshr,i32) || 5_2 (or,i32) == 9_0 (ashr,i32) || 5_2 (or,i32) == 10_0 (select,i32) || 5_2 (or,i32) == 11_0 (zext,eq,i32) || 5_2 (or,i32) == 12_0 (zext,ne,i32) || 5_2 (or,i32) == 13_0 (zext,ult,i32) || 5_2 (or,i32) == 14_0 (zext,slt,i32) || 5_2 (or,i32) == 15_0 (zext,ule,i32) || 5_2 (or,i32) == 16_0 (zext,sle,i32) || false
6_1 (xor,i32) == 0_1 (input,i32) || 6_1 (xor,i32) == 0_2 (const,i32) || 6_1 (xor,i32) == 0_3 (const,i32) || 6_1 (xor,i32) == 1_0 (add,i32) || 6_1 (xor,i32) == 2_0 (sub,i32) || 6_1 (xor,i32) == 3_0 (mul,i32) || 6_1 (xor,i32) == 4_0 (and,i32) || 6_1 (xor,i32) == 5_0 (or,i32) || 6_1 (xor,i32) == 7_0 (shl,i32) || 6_1 (xor,i32) == 8_0 (lshr,i32) || 6_1 (xor,i32) == 9_0 (ashr,i32) || 6_1 (xor,i32) == 10_0 (select,i32) || 6_1 (xor,i32) == 11_0 (zext,eq,i32) || 6_1 (xor,i32) == 12_0 (zext,ne,i32) || 6_1 (xor,i32) == 13_0 (zext,ult,i32) || 6_1 (xor,i32) == 14_0 (zext,slt,i32) || 6_1 (xor,i32) == 15_0 (zext,ule,i32) || 6_1 (xor,i32) == 16_0 (zext,sle,i32) || false
6_2 (xor,i32) == 0_1 (input,i32) || 6_2 (xor,i32) == 0_2 (const,i32) || 6_2 (xor,i32) == 0_3 (const,i32) || 6_2 (xor,i32) == 1_0 (add,i32) || 6_2 (xor,i32) == 2_0 (sub,i32) || 6_2 (xor,i32) == 3_0 (mul,i32) || 6_2 (xor,i32) == 4_0 (and,i32) || 6_2 (xor,i32) == 5_0 (or,i32) || 6_2 (xor,i32) == 7_0 (shl,i32) || 6_2 (xor,i32) == 8_0 (lshr,i32) || 6_2 (xor,i32) == 9_0 (ashr,i32) || 6_2 (xor,i32) == 10_0 (select,i32) || 6_2 (xor,i32) == 11_0 (zext,eq,i32) || 6_2 (xor,i32) == 12_0 (zext,ne,i32) || 6_2 (xor,i32) == 13_0 (zext,ult,i32) || 6_2 (xor,i32) == 14_0 (zext,slt,i32) || 6_2 (xor,i32) == 15_0 (zext,ule,i32) || 6_2 (xor,i32) == 16_0 (zext,sle,i32) || false
7_1 (shl,i32) == 0_1 (input,i32) || 7_1 (shl,i32) == 0_2 (const,i32) || 7_1 (shl,i32) == 0_3 (const,i32) || 7_1 (shl,i32) == 1_0 (add,i32) || 7_1 (shl,i32) == 2_0 (sub,i32) || 7_1 (shl,i32) == 3_0 (mul,i32) || 7_1 (shl,i32) == 4_0 (and,i32) || 7_1 (shl,i32) == 5_0 (or,i32) || 7_1 (shl,i32) == 6_0 (xor,i32) || 7_1 (shl,i32) == 8_0 (lshr,i32) || 7_1 (shl,i32) == 9_0 (ashr,i32) || 7_1 (shl,i32) == 10_0 (select,i32) || 7_1 (shl,i32) == 11_0 (zext,eq,i32) || 7_1 (shl,i32) == 12_0 (zext,ne,i32) || 7_1 (shl,i32) == 13_0 (zext,ult,i32) || 7_1 (shl,i32) == 14_0 (zext,slt,i32) || 7_1 (shl,i32) == 15_0 (zext,ule,i32) || 7_1 (shl,i32) == 16_0 (zext,sle,i32) || false
7_2 (shl,i32) == 0_1 (input,i32) || 7_2 (shl,i32) == 0_2 (const,i32) || 7_2 (shl,i32) == 0_3 (const,i32) || 7_2 (shl,i32) == 1_0 (add,i32) || 7_2 (shl,i32) == 2_0 (sub,i32) || 7_2 (shl,i32) == 3_0 (mul,i32) || 7_2 (shl,i32) == 4_0 (and,i32) || 7_2 (shl,i32) == 5_0 (or,i32) || 7_2 (shl,i32) == 6_0 (xor,i32) || 7_2 (shl,i32) == 8_0 (lshr,i32) || 7_2 (shl,i32) == 9_0 (ashr,i32) || 7_2 (shl,i32) == 10_0 (select,i32) || 7_2 (shl,i32) == 11_0 (zext,eq,i32) || 7_2 (shl,i32) == 12_0 (zext,ne,i32) || 7_2 (shl,i32) == 13_0 (zext,ult,i32) || 7_2 (shl,i32) == 14_0 (zext,slt,i32) || 7_2 (shl,i32) == 15_0 (zext,ule,i32) || 7_2 (shl,i32) == 16_0 (zext,sle,i32) || false
8_1 (lshr,i32) == 0_1 (input,i32) || 8_1 (lshr,i32) == 0_2 (const,i32) || 8_1 (lshr,i32) == 0_3 (const,i32) || 8_1 (lshr,i32) == 1_0 (add,i32) || 8_1 (lshr,i32) == 2_0 (sub,i32) || 8_1 (lshr,i32) == 3_0 (mul,i32) || 8_1 (lshr,i32) == 4_0 (and,i32) || 8_1 (lshr,i32) == 5_0 (or,i32) || 8_1 (lshr,i32) == 6_0 (xor,i32) || 8_1 (lshr,i32) == 7_0 (shl,i32) || 8_1 (lshr,i32) == 9_0 (ashr,i32) || 8_1 (lshr,i32) == 10_0 (select,i32) || 8_1 (lshr,i32) == 11_0 (zext,eq,i32) || 8_1 (lshr,i32) == 12_0 (zext,ne,i32) || 8_1 (lshr,i32) == 13_0 (zext,ult,i32) || 8_1 (lshr,i32) == 14_0 (zext,slt,i32) || 8_1 (lshr,i32) == 15_0 (zext,ule,i32) || 8_1 (lshr,i32) == 16_0 (zext,sle,i32) || false
8_2 (lshr,i32) == 0_1 (input,i32) || 8_2 (lshr,i32) == 0_2 (const,i32) || 8_2 (lshr,i32) == 0_3 (const,i32) || 8_2 (lshr,i32) == 1_0 (add,i32) || 8_2 (lshr,i32) == 2_0 (sub,i32) || 8_2 (lshr,i32) == 3_0 (mul,i32) || 8_2 (lshr,i32) == 4_0 (and,i32) || 8_2 (lshr,i32) == 5_0 (or,i32) || 8_2 (lshr,i32) == 6_0 (xor,i32) || 8_2 (lshr,i32) == 7_0 (shl,i32) || 8_2 (lshr,i32) == 9_0 (ashr,i32) || 8_2 (lshr,i32) == 10_0 (select,i32) || 8_2 (lshr,i32) == 11_0 (zext,eq,i32) || 8_2 (lshr,i32) == 12_0 (zext,ne,i32) || 8_2 (lshr,i32) == 13_0 (zext,ult,i32) || 8_2 (lshr,i32) == 14_0 (zext,slt,i32) || 8_2 (lshr,i32) == 15_0 (zext,ule,i32) || 8_2 (lshr,i32) == 16_0 (zext,sle,i32) || false
9_1 (ashr,i32) == 0_1 (input,i32) || 9_1 (ashr,i32) == 0_2 (const,i32) || 9_1 (ashr,i32) == 0_3 (const,i32) || 9_1 (ashr,i32) == 1_0 (add,i32) || 9_1 (ashr,i32) == 2_0 (sub,i32) || 9_1 (ashr,i32) == 3_0 (mul,i32) || 9_1 (ashr,i32) == 4_0 (and,i32) || 9_1 (ashr,i32) == 5_0 (or,i32) || 9_1 (ashr,i32) == 6_0 (xor,i32) || 9_1 (ashr,i32) == 7_0 (shl,i32) || 9_1 (ashr,i32) == 8_0 (lshr,i32) || 9_1 (ashr,i32) == 10_0 (select,i32) || 9_1 (ashr,i32) == 11_0 (zext,eq,i32) || 9_1 (ashr,i32) == 12_0 (zext,ne,i32) || 9_1 (ashr,i32) == 13_0 (zext,ult,i32) || 9_1 (ashr,i32) == 14_0 (zext,slt,i32) || 9_1 (ashr,i32) == 15_0 (zext,ule,i32) || 9_1 (ashr,i32) == 16_0 (zext,sle,i32) || false
9_2 (ashr,i32) == 0_1 (input,i32) || 9_2 (ashr,i32) == 0_2 (const,i32) || 9_2 (ashr,i32) == 0_3 (const,i32) || 9_2 (ashr,i32) == 1_0 (add,i32) || 9_2 (ashr,i32) == 2_0 (sub,i32) || 9_2 (ashr,i32) == 3_0 (mul,i32) || 9_2 (ashr,i32) == 4_0 (and,i32) || 9_2 (ashr,i32) == 5_0 (or,i32) || 9_2 (ashr,i32) == 6_0 (xor,i32) || 9_2 (ashr,i32) == 7_0 (shl,i32) || 9_2 (ashr,i32) == 8_0 (lshr,i32) || 9_2 (ashr,i32) == 10_0 (select,i32) || 9_2 (ashr,i32) == 11_0 (zext,eq,i32) || 9_2 (ashr,i32) == 12_0 (zext,ne,i32) || 9_2 (ashr,i32) == 13_0 (zext,ult,i32) || 9_2 (ashr,i32) == 14_0 (zext,slt,i32) || 9_2 (ashr,i32) == 15_0 (zext,ule,i32) || 9_2 (ashr,i32) == 16_0 (zext,sle,i32) || false
10_1 (select,i32) == 1_0 (add,i32) || 10_1 (select,i32) == 2_0 (sub,i32) || 10_1 (select,i32) == 3_0 (mul,i32) || 10_1 (select,i32) == 4_0 (and,i32) || 10_1 (select,i32) == 5_0 (or,i32) || 10_1 (select,i32) == 6_0 (xor,i32) || 10_1 (select,i32) == 7_0 (shl,i32) || 10_1 (select,i32) == 8_0 (lshr,i32) || 10_1 (select,i32) == 9_0 (ashr,i32) || 10_1 (select,i32) == 11_0 (zext,eq,i32) || 10_1 (select,i32) == 12_0 (zext,ne,i32) || 10_1 (select,i32) == 13_0 (zext,ult,i32) || 10_1 (select,i32) == 14_0 (zext,slt,i32) || 10_1 (select,i32) == 15_0 (zext,ule,i32) || 10_1 (select,i32) == 16_0 (zext,sle,i32) || false
10_2 (select,i32) == 0_1 (input,i32) || 10_2 (select,i32) == 0_2 (const,i32) || 10_2 (select,i32) == 0_3 (const,i32) || 10_2 (select,i32) == 1_0 (add,i32) || 10_2 (select,i32) == 2_0 (sub,i32) || 10_2 (select,i32) == 3_0 (mul,i32) || 10_2 (select,i32) == 4_0 (and,i32) || 10_2 (select,i32) == 5_0 (or,i32) || 10_2 (select,i32) == 6_0 (xor,i32) || 10_2 (select,i32) == 7_0 (shl,i32) || 10_2 (select,i32) == 8_0 (lshr,i32) || 10_2 (select,i32) == 9_0 (ashr,i32) || 10_2 (select,i32) == 11_0 (zext,eq,i32) || 10_2 (select,i32) == 12_0 (zext,ne,i32) || 10_2 (select,i32) == 13_0 (zext,ult,i32) || 10_2 (select,i32) == 14_0 (zext,slt,i32) || 10_2 (select,i32) == 15_0 (zext,ule,i32) || 10_2 (select,i32) == 16_0 (zext,sle,i32) || false
10_3 (select,i32) == 0_1 (input,i32) || 10_3 (select,i32) == 0_2 (const,i32) || 10_3 (select,i32) == 0_3 (const,i32) || 10_3 (select,i32) == 1_0 (add,i32) || 10_3 (select,i32) == 2_0 (sub,i32) || 10_3 (select,i32) == 3_0 (mul,i32) || 10_3 (select,i32) == 4_0 (and,i32) || 10_3 (select,i32) == 5_0 (or,i32) || 10_3 (select,i32) == 6_0 (xor,i32) || 10_3 (select,i32) == 7_0 (shl,i32) || 10_3 (select,i32) == 8_0 (lshr,i32) || 10_3 (select,i32) == 9_0 (ashr,i32) || 10_3 (select,i32) == 11_0 (zext,eq,i32) || 10_3 (select,i32) == 12_0 (zext,ne,i32) || 10_3 (select,i32) == 13_0 (zext,ult,i32) || 10_3 (select,i32) == 14_0 (zext,slt,i32) || 10_3 (select,i32) == 15_0 (zext,ule,i32) || 10_3 (select,i32) == 16_0 (zext,sle,i32) || false
11_1 (eq,i32) == 0_1 (input,i32) || 11_1 (eq,i32) == 0_2 (const,i32) || 11_1 (eq,i32) == 0_3 (const,i32) || 11_1 (eq,i32) == 1_0 (add,i32) || 11_1 (eq,i32) == 2_0 (sub,i32) || 11_1 (eq,i32) == 3_0 (mul,i32) || 11_1 (eq,i32) == 4_0 (and,i32) || 11_1 (eq,i32) == 5_0 (or,i32) || 11_1 (eq,i32) == 6_0 (xor,i32) || 11_1 (eq,i32) == 7_0 (shl,i32) || 11_1 (eq,i32) == 8_0 (lshr,i32) || 11_1 (eq,i32) == 9_0 (ashr,i32) || 11_1 (eq,i32) == 10_0 (select,i32) || 11_1 (eq,i32) == 12_0 (zext,ne,i32) || 11_1 (eq,i32) == 13_0 (zext,ult,i32) || 11_1 (eq,i32) == 14_0 (zext,slt,i32) || 11_1 (eq,i32) == 15_0 (zext,ule,i32) || 11_1 (eq,i32) == 16_0 (zext,sle,i32) || false
11_2 (eq,i32) == 0_1 (input,i32) || 11_2 (eq,i32) == 0_2 (const,i32) || 11_2 (eq,i32) == 0_3 (const,i32) || 11_2 (eq,i32) == 1_0 (add,i32) || 11_2 (eq,i32) == 2_0 (sub,i32) || 11_2 (eq,i32) == 3_0 (mul,i32) || 11_2 (eq,i32) == 4_0 (and,i32) || 11_2 (eq,i32) == 5_0 (or,i32) || 11_2 (eq,i32) == 6_0 (xor,i32) || 11_2 (eq,i32) == 7_0 (shl,i32) || 11_2 (eq,i32) == 8_0 (lshr,i32) || 11_2 (eq,i32) == 9_0 (ashr,i32) || 11_2 (eq,i32) == 10_0 (select,i32) || 11_2 (eq,i32) == 12_0 (zext,ne,i32) || 11_2 (eq,i32) == 13_0 (zext,ult,i32) || 11_2 (eq,i32) == 14_0 (zext,slt,i32) || 11_2 (eq,i32) == 15_0 (zext,ule,i32) || 11_2 (eq,i32) == 16_0 (zext,sle,i32) || false
12_1 (ne,i32) == 0_1 (input,i32) || 12_1 (ne,i32) == 0_2 (const,i32) || 12_1 (ne,i32) == 0_3 (const,i32) || 12_1 (ne,i32) == 1_0 (add,i32) || 12_1 (ne,i32) == 2_0 (sub,i32) || 12_1 (ne,i32) == 3_0 (mul,i32) || 12_1 (ne,i32) == 4_0 (and,i32) || 12_1 (ne,i32) == 5_0 (or,i32) || 12_1 (ne,i32) == 6_0 (xor,i32) || 12_1 (ne,i32) == 7_0 (shl,i32) || 12_1 (ne,i32) == 8_0 (lshr,i32) || 12_1 (ne,i32) == 9_0 (ashr,i32) || 12_1 (ne,i32) == 10_0 (select,i32) || 12_1 (ne,i32) == 11_0 (zext,eq,i32) || 12_1 (ne,i32) == 13_0 (zext,ult,i32) || 12_1 (ne,i32) == 14_0 (zext,slt,i32) || 12_1 (ne,i32) == 15_0 (zext,ule,i32) || 12_1 (ne,i32) == 16_0 (zext,sle,i32) || false
12_2 (ne,i32) == 0_1 (input,i32) || 12_2 (ne,i32) == 0_2 (const,i32) || 12_2 (ne,i32) == 0_3 (const,i32) || 12_2 (ne,i32) == 1_0 (add,i32) || 12_2 (ne,i32) == 2_0 (sub,i32) || 12_2 (ne,i32) == 3_0 (mul,i32) || 12_2 (ne,i32) == 4_0 (and,i32) || 12_2 (ne,i32) == 5_0 (or,i32) || 12_2 (ne,i32) == 6_0 (xor,i32) || 12_2 (ne,i32) == 7_0 (shl,i32) || 12_2 (ne,i32) == 8_0 (lshr,i32) || 12_2 (ne,i32) == 9_0 (ashr,i32) || 12_2 (ne,i32) == 10_0 (select,i32) || 12_2 (ne,i32) == 11_0 (zext,eq,i32) || 12_2 (ne,i32) == 13_0 (zext,ult,i32) || 12_2 (ne,i32) == 14_0 (zext,slt,i32) || 12_2 (ne,i32) == 15_0 (zext,ule,i32) || 12_2 (ne,i32) == 16_0 (zext,sle,i32) || false
13_1 (ult,i32) == 0_1 (input,i32) || 13_1 (ult,i32) == 0_2 (const,i32) || 13_1 (ult,i32) == 0_3 (const,i32) || 13_1 (ult,i32) == 1_0 (add,i32) || 13_1 (ult,i32) == 2_0 (sub,i32) || 13_1 (ult,i32) == 3_0 (mul,i32) || 13_1 (ult,i32) == 4_0 (and,i32) || 13_1 (ult,i32) == 5_0 (or,i32) || 13_1 (ult,i32) == 6_0 (xor,i32) || 13_1 (ult,i32) == 7_0 (shl,i32) || 13_1 (ult,i32) == 8_0 (lshr,i32) || 13_1 (ult,i32) == 9_0 (ashr,i32) || 13_1 (ult,i32) == 10_0 (select,i32) || 13_1 (ult,i32) == 11_0 (zext,eq,i32) || 13_1 (ult,i32) == 12_0 (zext,ne,i32) || 13_1 (ult,i32) == 14_0 (zext,slt,i32) || 13_1 (ult,i32) == 15_0 (zext,ule,i32) || 13_1 (ult,i32) == 16_0 (zext,sle,i32) || false
13_2 (ult,i32) == 0_1 (input,i32) || 13_2 (ult,i32) == 0_2 (const,i32) || 13_2 (ult,i32) == 0_3 (const,i32) || 13_2 (ult,i32) == 1_0 (add,i32) || 13_2 (ult,i32) == 2_0 (sub,i32) || 13_2 (ult,i32) == 3_0 (mul,i32) || 13_2 (ult,i32) == 4_0 (and,i32) || 13_2 (ult,i32) == 5_0 (or,i32) || 13_2 (ult,i32) == 6_0 (xor,i32) || 13_2 (ult,i32) == 7_0 (shl,i32) || 13_2 (ult,i32) == 8_0 (lshr,i32) || 13_2 (ult,i32) == 9_0 (ashr,i32) || 13_2 (ult,i32) == 10_0 (select,i32) || 13_2 (ult,i32) == 11_0 (zext,eq,i32) || 13_2 (ult,i32) == 12_0 (zext,ne,i32) || 13_2 (ult,i32) == 14_0 (zext,slt,i32) || 13_2 (ult,i32) == 15_0 (zext,ule,i32) || 13_2 (ult,i32) == 16_0 (zext,sle,i32) || false
14_1 (slt,i32) == 0_1 (input,i32) || 14_1 (slt,i32) == 0_2 (const,i32) || 14_1 (slt,i32) == 0_3 (const,i32) || 14_1 (slt,i32) == 1_0 (add,i32) || 14_1 (slt,i32) == 2_0 (sub,i32) || 14_1 (slt,i32) == 3_0 (mul,i32) || 14_1 (slt,i32) == 4_0 (and,i32) || 14_1 (slt,i32) == 5_0 (or,i32) || 14_1 (slt,i32) == 6_0 (xor,i32) || 14_1 (slt,i32) == 7_0 (shl,i32) || 14_1 (slt,i32) == 8_0 (lshr,i32) || 14_1 (slt,i32) == 9_0 (ashr,i32) || 14_1 (slt,i32) == 10_0 (select,i32) || 14_1 (slt,i32) == 11_0 (zext,eq,i32) || 14_1 (slt,i32) == 12_0 (zext,ne,i32) || 14_1 (slt,i32) == 13_0 (zext,ult,i32) || 14_1 (slt,i32) == 15_0 (zext,ule,i32) || 14_1 (slt,i32) == 16_0 (zext,sle,i32) || false
14_2 (slt,i32) == 0_1 (input,i32) || 14_2 (slt,i32) == 0_2 (const,i32) || 14_2 (slt,i32) == 0_3 (const,i32) || 14_2 (slt,i32) == 1_0 (add,i32) || 14_2 (slt,i32) == 2_0 (sub,i32) || 14_2 (slt,i32) == 3_0 (mul,i32) || 14_2 (slt,i32) == 4_0 (and,i32) || 14_2 (slt,i32) == 5_0 (or,i32) || 14_2 (slt,i32) == 6_0 (xor,i32) || 14_2 (slt,i32) == 7_0 (shl,i32) || 14_2 (slt,i32) == 8_0 (lshr,i32) || 14_2 (slt,i32) == 9_0 (ashr,i32) || 14_2 (slt,i32) == 10_0 (select,i32) || 14_2 (slt,i32) == 11_0 (zext,eq,i32) || 14_2 (slt,i32) == 12_0 (zext,ne,i32) || 14_2 (slt,i32) == 13_0 (zext,ult,i32) || 14_2 (slt,i32) == 15_0 (zext,ule,i32) || 14_2 (slt,i32) == 16_0 (zext,sle,i32) || false
15_1 (ule,i32) == 0_1 (input,i32) || 15_1 (ule,i32) == 0_2 (const,i32) || 15_1 (ule,i32) == 0_3 (const,i32) || 15_1 (ule,i32) == 1_0 (add,i32) || 15_1 (ule,i32) == 2_0 (sub,i32) || 15_1 (ule,i32) == 3_0 (mul,i32) || 15_1 (ule,i32) == 4_0 (and,i32) || 15_1 (ule,i32) == 5_0 (or,i32) || 15_1 (ule,i32) == 6_0 (xor,i32) || 15_1 (ule,i32) == 7_0 (shl,i32) || 15_1 (ule,i32) == 8_0 (lshr,i32) || 15_1 (ule,i32) == 9_0 (ashr,i32) || 15_1 (ule,i32) == 10_0 (select,i32) || 15_1 (ule,i32) == 11_0 (zext,eq,i32) || 15_1 (ule,i32) == 12_0 (zext,ne,i32) || 15_1 (ule,i32) == 13_0 (zext,ult,i32) || 15_1 (ule,i32) == 14_0 (zext,slt,i32) || 15_1 (ule,i32) == 16_0 (zext,sle,i32) || false
15_2 (ule,i32) == 0_1 (input,i32) || 15_2 (ule,i32) == 0_2 (const,i32) || 15_2 (ule,i32) == 0_3 (const,i32) || 15_2 (ule,i32) == 1_0 (add,i32) || 15_2 (ule,i32) == 2_0 (sub,i32) || 15_2 (ule,i32) == 3_0 (mul,i32) || 15_2 (ule,i32) == 4_0 (and,i32) || 15_2 (ule,i32) == 5_0 (or,i32) || 15_2 (ule,i32) == 6_0 (xor,i32) || 15_2 (ule,i32) == 7_0 (shl,i32) || 15_2 (ule,i32) == 8_0 (lshr,i32) || 15_2 (ule,i32) == 9_0 (ashr,i32) || 15_2 (ule,i32) == 10_0 (select,i32) || 15_2 (ule,i32) == 11_0 (zext,eq,i32) || 15_2 (ule,i32) == 12_0 (zext,ne,i32) || 15_2 (ule,i32) == 13_0 (zext,ult,i32) || 15_2 (ule,i32) == 14_0 (zext,slt,i32) || 15_2 (ule,i32) == 16_0 (zext,sle,i32) || false
16_1 (sle,i32) == 0_1 (input,i32) || 16_1 (sle,i32) == 0_2 (const,i32) || 16_1 (sle,i32) == 0_3 (const,i32) || 16_1 (sle,i32) == 1_0 (add,i32) || 16_1 (sle,i32) == 2_0 (sub,i32) || 16_1 (sle,i32) == 3_0 (mul,i32) || 16_1 (sle,i32) == 4_0 (and,i32) || 16_1 (sle,i32) == 5_0 (or,i32) || 16_1 (sle,i32) == 6_0 (xor,i32) || 16_1 (sle,i32) == 7_0 (shl,i32) || 16_1 (sle,i32) == 8_0 (lshr,i32) || 16_1 (sle,i32) == 9_0 (ashr,i32) || 16_1 (sle,i32) == 10_0 (select,i32) || 16_1 (sle,i32) == 11_0 (zext,eq,i32) || 16_1 (sle,i32) == 12_0 (zext,ne,i32) || 16_1 (sle,i32) == 13_0 (zext,ult,i32) || 16_1 (sle,i32) == 14_0 (zext,slt,i32) || 16_1 (sle,i32) == 15_0 (zext,ule,i32) || false
16_2 (sle,i32) == 0_1 (input,i32) || 16_2 (sle,i32) == 0_2 (const,i32) || 16_2 (sle,i32) == 0_3 (const,i32) || 16_2 (sle,i32) == 1_0 (add,i32) || 16_2 (sle,i32) == 2_0 (sub,i32) || 16_2 (sle,i32) == 3_0 (mul,i32) || 16_2 (sle,i32) == 4_0 (and,i32) || 16_2 (sle,i32) == 5_0 (or,i32) || 16_2 (sle,i32) == 6_0 (xor,i32) || 16_2 (sle,i32) == 7_0 (shl,i32) || 16_2 (sle,i32) == 8_0 (lshr,i32) || 16_2 (sle,i32) == 9_0 (ashr,i32) || 16_2 (sle,i32) == 10_0 (select,i32) || 16_2 (sle,i32) == 11_0 (zext,eq,i32) || 16_2 (sle,i32) == 12_0 (zext,ne,i32) || 16_2 (sle,i32) == 13_0 (zext,ult,i32) || 16_2 (sle,i32) == 14_0 (zext,slt,i32) || 16_2 (sle,i32) == 15_0 (zext,ule,i32) || false
17_1 (trunc,i32) == 0_1 (input,i32) || 17_1 (trunc,i32) == 0_2 (const,i32) || 17_1 (trunc,i32) == 0_3 (const,i32) || 17_1 (trunc,i32) == 1_0 (add,i32) || 17_1 (trunc,i32) == 2_0 (sub,i32) || 17_1 (trunc,i32) == 3_0 (mul,i32) || 17_1 (trunc,i32) == 4_0 (and,i32) || 17_1 (trunc,i32) == 5_0 (or,i32) || 17_1 (trunc,i32) == 6_0 (xor,i32) || 17_1 (trunc,i32) == 7_0 (shl,i32) || 17_1 (trunc,i32) == 8_0 (lshr,i32) || 17_1 (trunc,i32) == 9_0 (ashr,i32) || 17_1 (trunc,i32) == 10_0 (select,i32) || 17_1 (trunc,i32) == 11_0 (zext,eq,i32) || 17_1 (trunc,i32) == 12_0 (zext,ne,i32) || 17_1 (trunc,i32) == 13_0 (zext,ult,i32) || 17_1 (trunc,i32) == 14_0 (zext,slt,i32) || 17_1 (trunc,i32) == 15_0 (zext,ule,i32) || 17_1 (trunc,i32) == 16_0 (zext,sle,i32) || false
component const input constraints:
1_1 (add,i32) == 0_2 (const,i32) || 1_1 (add,i32) == 0_3 (const,i32) || false
1_2 (add,i32) == 0_2 (const,i32) || 1_2 (add,i32) == 0_3 (const,i32) || false
false
2_1 (sub,i32) == 0_2 (const,i32) || 2_1 (sub,i32) == 0_3 (const,i32) || false
2_2 (sub,i32) == 0_2 (const,i32) || 2_2 (sub,i32) == 0_3 (const,i32) || false
false
3_1 (mul,i32) == 0_2 (const,i32) || 3_1 (mul,i32) == 0_3 (const,i32) || false
3_2 (mul,i32) == 0_2 (const,i32) || 3_2 (mul,i32) == 0_3 (const,i32) || false
false
4_1 (and,i32) == 0_2 (const,i32) || 4_1 (and,i32) == 0_3 (const,i32) || false
4_2 (and,i32) == 0_2 (const,i32) || 4_2 (and,i32) == 0_3 (const,i32) || false
false
5_1 (or,i32) == 0_2 (const,i32) || 5_1 (or,i32) == 0_3 (const,i32) || false
5_2 (or,i32) == 0_2 (const,i32) || 5_2 (or,i32) == 0_3 (const,i32) || false
false
6_1 (xor,i32) == 0_2 (const,i32) || 6_1 (xor,i32) == 0_3 (const,i32) || false
6_2 (xor,i32) == 0_2 (const,i32) || 6_2 (xor,i32) == 0_3 (const,i32) || false
false
7_1 (shl,i32) == 0_2 (const,i32) || 7_1 (shl,i32) == 0_3 (const,i32) || false
7_2 (shl,i32) == 0_2 (const,i32) || 7_2 (shl,i32) == 0_3 (const,i32) || false
false
8_1 (lshr,i32) == 0_2 (const,i32) || 8_1 (lshr,i32) == 0_3 (const,i32) || false
8_2 (lshr,i32) == 0_2 (const,i32) || 8_2 (lshr,i32) == 0_3 (const,i32) || false
false
9_1 (ashr,i32) == 0_2 (const,i32) || 9_1 (ashr,i32) == 0_3 (const,i32) || false
9_2 (ashr,i32) == 0_2 (const,i32) || 9_2 (ashr,i32) == 0_3 (const,i32) || false
false
false
10_2 (select,i32) == 0_2 (const,i32) || 10_2 (select,i32) == 0_3 (const,i32) || false
10_3 (select,i32) == 0_2 (const,i32) || 10_3 (select,i32) == 0_3 (const,i32) || false
false
11_1 (eq,i32) == 0_2 (const,i32) || 11_1 (eq,i32) == 0_3 (const,i32) || false
11_2 (eq,i32) == 0_2 (const,i32) || 11_2 (eq,i32) == 0_3 (const,i32) || false
false
12_1 (ne,i32) == 0_2 (const,i32) || 12_1 (ne,i32) == 0_3 (const,i32) || false
12_2 (ne,i32) == 0_2 (const,i32) || 12_2 (ne,i32) == 0_3 (const,i32) || false
false
13_1 (ult,i32) == 0_2 (const,i32) || 13_1 (ult,i32) == 0_3 (const,i32) || false
13_2 (ult,i32) == 0_2 (const,i32) || 13_2 (ult,i32) == 0_3 (const,i32) || false
false
14_1 (slt,i32) == 0_2 (const,i32) || 14_1 (slt,i32) == 0_3 (const,i32) || false
14_2 (slt,i32) == 0_2 (const,i32) || 14_2 (slt,i32) == 0_3 (const,i32) || false
false
15_1 (ule,i32) == 0_2 (const,i32) || 15_1 (ule,i32) == 0_3 (const,i32) || false
15_2 (ule,i32) == 0_2 (const,i32) || 15_2 (ule,i32) == 0_3 (const,i32) || false
false
16_1 (sle,i32) == 0_2 (const,i32) || 16_1 (sle,i32) == 0_3 (const,i32) || false
16_2 (sle,i32) == 0_2 (const,i32) || 16_2 (sle,i32) == 0_3 (const,i32) || false
false
17_1 (trunc,i32) == 0_2 (const,i32) || 17_1 (trunc,i32) == 0_3 (const,i32) || false
false
component output constraints:
18_0 (output,i1) == 17_0 (trunc,i1) || false
possible wirings:
0_1 (input,i32) == 1_1 (add,i32)
0_1 (input,i32) == 1_2 (add,i32)
0_1 (input,i32) == 2_1 (sub,i32)
0_1 (input,i32) == 2_2 (sub,i32)
0_1 (input,i32) == 3_1 (mul,i32)
0_1 (input,i32) == 3_2 (mul,i32)
0_1 (input,i32) == 4_1 (and,i32)
0_1 (input,i32) == 4_2 (and,i32)
0_1 (input,i32) == 5_1 (or,i32)
0_1 (input,i32) == 5_2 (or,i32)
0_1 (input,i32) == 6_1 (xor,i32)
0_1 (input,i32) == 6_2 (xor,i32)
0_1 (input,i32) == 7_1 (shl,i32)
0_1 (input,i32) == 7_2 (shl,i32)
0_1 (input,i32) == 8_1 (lshr,i32)
0_1 (input,i32) == 8_2 (lshr,i32)
0_1 (input,i32) == 9_1 (ashr,i32)
0_1 (input,i32) == 9_2 (ashr,i32)
0_1 (input,i32) == 10_2 (select,i32)
0_1 (input,i32) == 10_3 (select,i32)
0_1 (input,i32) == 11_1 (eq,i32)
0_1 (input,i32) == 11_2 (eq,i32)
0_1 (input,i32) == 12_1 (ne,i32)
0_1 (input,i32) == 12_2 (ne,i32)
0_1 (input,i32) == 13_1 (ult,i32)
0_1 (input,i32) == 13_2 (ult,i32)
0_1 (input,i32) == 14_1 (slt,i32)
0_1 (input,i32) == 14_2 (slt,i32)
0_1 (input,i32) == 15_1 (ule,i32)
0_1 (input,i32) == 15_2 (ule,i32)
0_1 (input,i32) == 16_1 (sle,i32)
0_1 (input,i32) == 16_2 (sle,i32)
0_1 (input,i32) == 17_1 (trunc,i32)
0_2 (const,i32) == 1_1 (add,i32)
0_2 (const,i32) == 1_2 (add,i32)
0_2 (const,i32) == 2_1 (sub,i32)
0_2 (const,i32) == 2_2 (sub,i32)
0_2 (const,i32) == 3_1 (mul,i32)
0_2 (const,i32) == 3_2 (mul,i32)
0_2 (const,i32) == 4_1 (and,i32)
0_2 (const,i32) == 4_2 (and,i32)
0_2 (const,i32) == 5_1 (or,i32)
0_2 (const,i32) == 5_2 (or,i32)
0_2 (const,i32) == 6_1 (xor,i32)
0_2 (const,i32) == 6_2 (xor,i32)
0_2 (const,i32) == 7_1 (shl,i32)
0_2 (const,i32) == 7_2 (shl,i32)
0_2 (const,i32) == 8_1 (lshr,i32)
0_2 (const,i32) == 8_2 (lshr,i32)
0_2 (const,i32) == 9_1 (ashr,i32)
0_2 (const,i32) == 9_2 (ashr,i32)
0_2 (const,i32) == 10_2 (select,i32)
0_2 (const,i32) == 10_3 (select,i32)
0_2 (const,i32) == 11_1 (eq,i32)
0_2 (const,i32) == 11_2 (eq,i32)
0_2 (const,i32) == 12_1 (ne,i32)
0_2 (const,i32) == 12_2 (ne,i32)
0_2 (const,i32) == 13_1 (ult,i32)
0_2 (const,i32) == 13_2 (ult,i32)
0_2 (const,i32) == 14_1 (slt,i32)
0_2 (const,i32) == 14_2 (slt,i32)
0_2 (const,i32) == 15_1 (ule,i32)
0_2 (const,i32) == 15_2 (ule,i32)
0_2 (const,i32) == 16_1 (sle,i32)
0_2 (const,i32) == 16_2 (sle,i32)
0_2 (const,i32) == 17_1 (trunc,i32)
0_3 (const,i32) == 1_1 (add,i32)
0_3 (const,i32) == 1_2 (add,i32)
0_3 (const,i32) == 2_1 (sub,i32)
0_3 (const,i32) == 2_2 (sub,i32)
0_3 (const,i32) == 3_1 (mul,i32)
0_3 (const,i32) == 3_2 (mul,i32)
0_3 (const,i32) == 4_1 (and,i32)
0_3 (const,i32) == 4_2 (and,i32)
0_3 (const,i32) == 5_1 (or,i32)
0_3 (const,i32) == 5_2 (or,i32)
0_3 (const,i32) == 6_1 (xor,i32)
0_3 (const,i32) == 6_2 (xor,i32)
0_3 (const,i32) == 7_1 (shl,i32)
0_3 (const,i32) == 7_2 (shl,i32)
0_3 (const,i32) == 8_1 (lshr,i32)
0_3 (const,i32) == 8_2 (lshr,i32)
0_3 (const,i32) == 9_1 (ashr,i32)
0_3 (const,i32) == 9_2 (ashr,i32)
0_3 (const,i32) == 10_2 (select,i32)
0_3 (const,i32) == 10_3 (select,i32)
0_3 (const,i32) == 11_1 (eq,i32)
0_3 (const,i32) == 11_2 (eq,i32)
0_3 (const,i32) == 12_1 (ne,i32)
0_3 (const,i32) == 12_2 (ne,i32)
0_3 (const,i32) == 13_1 (ult,i32)
0_3 (const,i32) == 13_2 (ult,i32)
0_3 (const,i32) == 14_1 (slt,i32)
0_3 (const,i32) == 14_2 (slt,i32)
0_3 (const,i32) == 15_1 (ule,i32)
0_3 (const,i32) == 15_2 (ule,i32)
0_3 (const,i32) == 16_1 (sle,i32)
0_3 (const,i32) == 16_2 (sle,i32)
0_3 (const,i32) == 17_1 (trunc,i32)
1_1 (add,i32) == 2_0 (sub,i32)
1_1 (add,i32) == 3_0 (mul,i32)
1_1 (add,i32) == 4_0 (and,i32)
1_1 (add,i32) == 5_0 (or,i32)
1_1 (add,i32) == 6_0 (xor,i32)
1_1 (add,i32) == 7_0 (shl,i32)
1_1 (add,i32) == 8_0 (lshr,i32)
1_1 (add,i32) == 9_0 (ashr,i32)
1_1 (add,i32) == 10_0 (select,i32)
1_1 (add,i32) == 11_0 (zext,eq,i32)
1_1 (add,i32) == 12_0 (zext,ne,i32)
1_1 (add,i32) == 13_0 (zext,ult,i32)
1_1 (add,i32) == 14_0 (zext,slt,i32)
1_1 (add,i32) == 15_0 (zext,ule,i32)
1_1 (add,i32) == 16_0 (zext,sle,i32)
1_2 (add,i32) == 2_0 (sub,i32)
1_2 (add,i32) == 3_0 (mul,i32)
1_2 (add,i32) == 4_0 (and,i32)
1_2 (add,i32) == 5_0 (or,i32)
1_2 (add,i32) == 6_0 (xor,i32)
1_2 (add,i32) == 7_0 (shl,i32)
1_2 (add,i32) == 8_0 (lshr,i32)
1_2 (add,i32) == 9_0 (ashr,i32)
1_2 (add,i32) == 10_0 (select,i32)
1_2 (add,i32) == 11_0 (zext,eq,i32)
1_2 (add,i32) == 12_0 (zext,ne,i32)
1_2 (add,i32) == 13_0 (zext,ult,i32)
1_2 (add,i32) == 14_0 (zext,slt,i32)
1_2 (add,i32) == 15_0 (zext,ule,i32)
1_2 (add,i32) == 16_0 (zext,sle,i32)
2_1 (sub,i32) == 1_0 (add,i32)
2_1 (sub,i32) == 3_0 (mul,i32)
2_1 (sub,i32) == 4_0 (and,i32)
2_1 (sub,i32) == 5_0 (or,i32)
2_1 (sub,i32) == 6_0 (xor,i32)
2_1 (sub,i32) == 7_0 (shl,i32)
2_1 (sub,i32) == 8_0 (lshr,i32)
2_1 (sub,i32) == 9_0 (ashr,i32)
2_1 (sub,i32) == 10_0 (select,i32)
2_1 (sub,i32) == 11_0 (zext,eq,i32)
2_1 (sub,i32) == 12_0 (zext,ne,i32)
2_1 (sub,i32) == 13_0 (zext,ult,i32)
2_1 (sub,i32) == 14_0 (zext,slt,i32)
2_1 (sub,i32) == 15_0 (zext,ule,i32)
2_1 (sub,i32) == 16_0 (zext,sle,i32)
2_2 (sub,i32) == 1_0 (add,i32)
2_2 (sub,i32) == 3_0 (mul,i32)
2_2 (sub,i32) == 4_0 (and,i32)
2_2 (sub,i32) == 5_0 (or,i32)
2_2 (sub,i32) == 6_0 (xor,i32)
2_2 (sub,i32) == 7_0 (shl,i32)
2_2 (sub,i32) == 8_0 (lshr,i32)
2_2 (sub,i32) == 9_0 (ashr,i32)
2_2 (sub,i32) == 10_0 (select,i32)
2_2 (sub,i32) == 11_0 (zext,eq,i32)
2_2 (sub,i32) == 12_0 (zext,ne,i32)
2_2 (sub,i32) == 13_0 (zext,ult,i32)
2_2 (sub,i32) == 14_0 (zext,slt,i32)
2_2 (sub,i32) == 15_0 (zext,ule,i32)
2_2 (sub,i32) == 16_0 (zext,sle,i32)
3_1 (mul,i32) == 1_0 (add,i32)
3_1 (mul,i32) == 2_0 (sub,i32)
3_1 (mul,i32) == 4_0 (and,i32)
3_1 (mul,i32) == 5_0 (or,i32)
3_1 (mul,i32) == 6_0 (xor,i32)
3_1 (mul,i32) == 7_0 (shl,i32)
3_1 (mul,i32) == 8_0 (lshr,i32)
3_1 (mul,i32) == 9_0 (ashr,i32)
3_1 (mul,i32) == 10_0 (select,i32)
3_1 (mul,i32) == 11_0 (zext,eq,i32)
3_1 (mul,i32) == 12_0 (zext,ne,i32)
3_1 (mul,i32) == 13_0 (zext,ult,i32)
3_1 (mul,i32) == 14_0 (zext,slt,i32)
3_1 (mul,i32) == 15_0 (zext,ule,i32)
3_1 (mul,i32) == 16_0 (zext,sle,i32)
3_2 (mul,i32) == 1_0 (add,i32)
3_2 (mul,i32) == 2_0 (sub,i32)
3_2 (mul,i32) == 4_0 (and,i32)
3_2 (mul,i32) == 5_0 (or,i32)
3_2 (mul,i32) == 6_0 (xor,i32)
3_2 (mul,i32) == 7_0 (shl,i32)
3_2 (mul,i32) == 8_0 (lshr,i32)
3_2 (mul,i32) == 9_0 (ashr,i32)
3_2 (mul,i32) == 10_0 (select,i32)
3_2 (mul,i32) == 11_0 (zext,eq,i32)
3_2 (mul,i32) == 12_0 (zext,ne,i32)
3_2 (mul,i32) == 13_0 (zext,ult,i32)
3_2 (mul,i32) == 14_0 (zext,slt,i32)
3_2 (mul,i32) == 15_0 (zext,ule,i32)
3_2 (mul,i32) == 16_0 (zext,sle,i32)
4_1 (and,i32) == 1_0 (add,i32)
4_1 (and,i32) == 2_0 (sub,i32)
4_1 (and,i32) == 3_0 (mul,i32)
4_1 (and,i32) == 5_0 (or,i32)
4_1 (and,i32) == 6_0 (xor,i32)
4_1 (and,i32) == 7_0 (shl,i32)
4_1 (and,i32) == 8_0 (lshr,i32)
4_1 (and,i32) == 9_0 (ashr,i32)
4_1 (and,i32) == 10_0 (select,i32)
4_1 (and,i32) == 11_0 (zext,eq,i32)
4_1 (and,i32) == 12_0 (zext,ne,i32)
4_1 (and,i32) == 13_0 (zext,ult,i32)
4_1 (and,i32) == 14_0 (zext,slt,i32)
4_1 (and,i32) == 15_0 (zext,ule,i32)
4_1 (and,i32) == 16_0 (zext,sle,i32)
4_2 (and,i32) == 1_0 (add,i32)
4_2 (and,i32) == 2_0 (sub,i32)
4_2 (and,i32) == 3_0 (mul,i32)
4_2 (and,i32) == 5_0 (or,i32)
4_2 (and,i32) == 6_0 (xor,i32)
4_2 (and,i32) == 7_0 (shl,i32)
4_2 (and,i32) == 8_0 (lshr,i32)
4_2 (and,i32) == 9_0 (ashr,i32)
4_2 (and,i32) == 10_0 (select,i32)
4_2 (and,i32) == 11_0 (zext,eq,i32)
4_2 (and,i32) == 12_0 (zext,ne,i32)
4_2 (and,i32) == 13_0 (zext,ult,i32)
4_2 (and,i32) == 14_0 (zext,slt,i32)
4_2 (and,i32) == 15_0 (zext,ule,i32)
4_2 (and,i32) == 16_0 (zext,sle,i32)
5_1 (or,i32) == 1_0 (add,i32)
5_1 (or,i32) == 2_0 (sub,i32)
5_1 (or,i32) == 3_0 (mul,i32)
5_1 (or,i32) == 4_0 (and,i32)
5_1 (or,i32) == 6_0 (xor,i32)
5_1 (or,i32) == 7_0 (shl,i32)
5_1 (or,i32) == 8_0 (lshr,i32)
5_1 (or,i32) == 9_0 (ashr,i32)
5_1 (or,i32) == 10_0 (select,i32)
5_1 (or,i32) == 11_0 (zext,eq,i32)
5_1 (or,i32) == 12_0 (zext,ne,i32)
5_1 (or,i32) == 13_0 (zext,ult,i32)
5_1 (or,i32) == 14_0 (zext,slt,i32)
5_1 (or,i32) == 15_0 (zext,ule,i32)
5_1 (or,i32) == 16_0 (zext,sle,i32)
5_2 (or,i32) == 1_0 (add,i32)
5_2 (or,i32) == 2_0 (sub,i32)
5_2 (or,i32) == 3_0 (mul,i32)
5_2 (or,i32) == 4_0 (and,i32)
5_2 (or,i32) == 6_0 (xor,i32)
5_2 (or,i32) == 7_0 (shl,i32)
5_2 (or,i32) == 8_0 (lshr,i32)
5_2 (or,i32) == 9_0 (ashr,i32)
5_2 (or,i32) == 10_0 (select,i32)
5_2 (or,i32) == 11_0 (zext,eq,i32)
5_2 (or,i32) == 12_0 (zext,ne,i32)
5_2 (or,i32) == 13_0 (zext,ult,i32)
5_2 (or,i32) == 14_0 (zext,slt,i32)
5_2 (or,i32) == 15_0 (zext,ule,i32)
5_2 (or,i32) == 16_0 (zext,sle,i32)
6_1 (xor,i32) == 1_0 (add,i32)
6_1 (xor,i32) == 2_0 (sub,i32)
6_1 (xor,i32) == 3_0 (mul,i32)
6_1 (xor,i32) == 4_0 (and,i32)
6_1 (xor,i32) == 5_0 (or,i32)
6_1 (xor,i32) == 7_0 (shl,i32)
6_1 (xor,i32) == 8_0 (lshr,i32)
6_1 (xor,i32) == 9_0 (ashr,i32)
6_1 (xor,i32) == 10_0 (select,i32)
6_1 (xor,i32) == 11_0 (zext,eq,i32)
6_1 (xor,i32) == 12_0 (zext,ne,i32)
6_1 (xor,i32) == 13_0 (zext,ult,i32)
6_1 (xor,i32) == 14_0 (zext,slt,i32)
6_1 (xor,i32) == 15_0 (zext,ule,i32)
6_1 (xor,i32) == 16_0 (zext,sle,i32)
6_2 (xor,i32) == 1_0 (add,i32)
6_2 (xor,i32) == 2_0 (sub,i32)
6_2 (xor,i32) == 3_0 (mul,i32)
6_2 (xor,i32) == 4_0 (and,i32)
6_2 (xor,i32) == 5_0 (or,i32)
6_2 (xor,i32) == 7_0 (shl,i32)
6_2 (xor,i32) == 8_0 (lshr,i32)
6_2 (xor,i32) == 9_0 (ashr,i32)
6_2 (xor,i32) == 10_0 (select,i32)
6_2 (xor,i32) == 11_0 (zext,eq,i32)
6_2 (xor,i32) == 12_0 (zext,ne,i32)
6_2 (xor,i32) == 13_0 (zext,ult,i32)
6_2 (xor,i32) == 14_0 (zext,slt,i32)
6_2 (xor,i32) == 15_0 (zext,ule,i32)
6_2 (xor,i32) == 16_0 (zext,sle,i32)
7_1 (shl,i32) == 1_0 (add,i32)
7_1 (shl,i32) == 2_0 (sub,i32)
7_1 (shl,i32) == 3_0 (mul,i32)
7_1 (shl,i32) == 4_0 (and,i32)
7_1 (shl,i32) == 5_0 (or,i32)
7_1 (shl,i32) == 6_0 (xor,i32)
7_1 (shl,i32) == 8_0 (lshr,i32)
7_1 (shl,i32) == 9_0 (ashr,i32)
7_1 (shl,i32) == 10_0 (select,i32)
7_1 (shl,i32) == 11_0 (zext,eq,i32)
7_1 (shl,i32) == 12_0 (zext,ne,i32)
7_1 (shl,i32) == 13_0 (zext,ult,i32)
7_1 (shl,i32) == 14_0 (zext,slt,i32)
7_1 (shl,i32) == 15_0 (zext,ule,i32)
7_1 (shl,i32) == 16_0 (zext,sle,i32)
7_2 (shl,i32) == 1_0 (add,i32)
7_2 (shl,i32) == 2_0 (sub,i32)
7_2 (shl,i32) == 3_0 (mul,i32)
7_2 (shl,i32) == 4_0 (and,i32)
7_2 (shl,i32) == 5_0 (or,i32)
7_2 (shl,i32) == 6_0 (xor,i32)
7_2 (shl,i32) == 8_0 (lshr,i32)
7_2 (shl,i32) == 9_0 (ashr,i32)
7_2 (shl,i32) == 10_0 (select,i32)
7_2 (shl,i32) == 11_0 (zext,eq,i32)
7_2 (shl,i32) == 12_0 (zext,ne,i32)
7_2 (shl,i32) == 13_0 (zext,ult,i32)
7_2 (shl,i32) == 14_0 (zext,slt,i32)
7_2 (shl,i32) == 15_0 (zext,ule,i32)
7_2 (shl,i32) == 16_0 (zext,sle,i32)
8_1 (lshr,i32) == 1_0 (add,i32)
8_1 (lshr,i32) == 2_0 (sub,i32)
8_1 (lshr,i32) == 3_0 (mul,i32)
8_1 (lshr,i32) == 4_0 (and,i32)
8_1 (lshr,i32) == 5_0 (or,i32)
8_1 (lshr,i32) == 6_0 (xor,i32)
8_1 (lshr,i32) == 7_0 (shl,i32)
8_1 (lshr,i32) == 9_0 (ashr,i32)
8_1 (lshr,i32) == 10_0 (select,i32)
8_1 (lshr,i32) == 11_0 (zext,eq,i32)
8_1 (lshr,i32) == 12_0 (zext,ne,i32)
8_1 (lshr,i32) == 13_0 (zext,ult,i32)
8_1 (lshr,i32) == 14_0 (zext,slt,i32)
8_1 (lshr,i32) == 15_0 (zext,ule,i32)
8_1 (lshr,i32) == 16_0 (zext,sle,i32)
8_2 (lshr,i32) == 1_0 (add,i32)
8_2 (lshr,i32) == 2_0 (sub,i32)
8_2 (lshr,i32) == 3_0 (mul,i32)
8_2 (lshr,i32) == 4_0 (and,i32)
8_2 (lshr,i32) == 5_0 (or,i32)
8_2 (lshr,i32) == 6_0 (xor,i32)
8_2 (lshr,i32) == 7_0 (shl,i32)
8_2 (lshr,i32) == 9_0 (ashr,i32)
8_2 (lshr,i32) == 10_0 (select,i32)
8_2 (lshr,i32) == 11_0 (zext,eq,i32)
8_2 (lshr,i32) == 12_0 (zext,ne,i32)
8_2 (lshr,i32) == 13_0 (zext,ult,i32)
8_2 (lshr,i32) == 14_0 (zext,slt,i32)
8_2 (lshr,i32) == 15_0 (zext,ule,i32)
8_2 (lshr,i32) == 16_0 (zext,sle,i32)
9_1 (ashr,i32) == 1_0 (add,i32)
9_1 (ashr,i32) == 2_0 (sub,i32)
9_1 (ashr,i32) == 3_0 (mul,i32)
9_1 (ashr,i32) == 4_0 (and,i32)
9_1 (ashr,i32) == 5_0 (or,i32)
9_1 (ashr,i32) == 6_0 (xor,i32)
9_1 (ashr,i32) == 7_0 (shl,i32)
9_1 (ashr,i32) == 8_0 (lshr,i32)
9_1 (ashr,i32) == 10_0 (select,i32)
9_1 (ashr,i32) == 11_0 (zext,eq,i32)
9_1 (ashr,i32) == 12_0 (zext,ne,i32)
9_1 (ashr,i32) == 13_0 (zext,ult,i32)
9_1 (ashr,i32) == 14_0 (zext,slt,i32)
9_1 (ashr,i32) == 15_0 (zext,ule,i32)
9_1 (ashr,i32) == 16_0 (zext,sle,i32)
9_2 (ashr,i32) == 1_0 (add,i32)
9_2 (ashr,i32) == 2_0 (sub,i32)
9_2 (ashr,i32) == 3_0 (mul,i32)
9_2 (ashr,i32) == 4_0 (and,i32)
9_2 (ashr,i32) == 5_0 (or,i32)
9_2 (ashr,i32) == 6_0 (xor,i32)
9_2 (ashr,i32) == 7_0 (shl,i32)
9_2 (ashr,i32) == 8_0 (lshr,i32)
9_2 (ashr,i32) == 10_0 (select,i32)
9_2 (ashr,i32) == 11_0 (zext,eq,i32)
9_2 (ashr,i32) == 12_0 (zext,ne,i32)
9_2 (ashr,i32) == 13_0 (zext,ult,i32)
9_2 (ashr,i32) == 14_0 (zext,slt,i32)
9_2 (ashr,i32) == 15_0 (zext,ule,i32)
9_2 (ashr,i32) == 16_0 (zext,sle,i32)
10_1 (select,i32) == 1_0 (add,i32)
10_1 (select,i32) == 2_0 (sub,i32)
10_1 (select,i32) == 3_0 (mul,i32)
10_1 (select,i32) == 4_0 (and,i32)
10_1 (select,i32) == 5_0 (or,i32)
10_1 (select,i32) == 6_0 (xor,i32)
10_1 (select,i32) == 7_0 (shl,i32)
10_1 (select,i32) == 8_0 (lshr,i32)
10_1 (select,i32) == 9_0 (ashr,i32)
10_1 (select,i32) == 11_0 (zext,eq,i32)
10_1 (select,i32) == 12_0 (zext,ne,i32)
10_1 (select,i32) == 13_0 (zext,ult,i32)
10_1 (select,i32) == 14_0 (zext,slt,i32)
10_1 (select,i32) == 15_0 (zext,ule,i32)
10_1 (select,i32) == 16_0 (zext,sle,i32)
10_2 (select,i32) == 1_0 (add,i32)
10_2 (select,i32) == 2_0 (sub,i32)
10_2 (select,i32) == 3_0 (mul,i32)
10_2 (select,i32) == 4_0 (and,i32)
10_2 (select,i32) == 5_0 (or,i32)
10_2 (select,i32) == 6_0 (xor,i32)
10_2 (select,i32) == 7_0 (shl,i32)
10_2 (select,i32) == 8_0 (lshr,i32)
10_2 (select,i32) == 9_0 (ashr,i32)
10_2 (select,i32) == 11_0 (zext,eq,i32)
10_2 (select,i32) == 12_0 (zext,ne,i32)
10_2 (select,i32) == 13_0 (zext,ult,i32)
10_2 (select,i32) == 14_0 (zext,slt,i32)
10_2 (select,i32) == 15_0 (zext,ule,i32)
10_2 (select,i32) == 16_0 (zext,sle,i32)
10_3 (select,i32) == 1_0 (add,i32)
10_3 (select,i32) == 2_0 (sub,i32)
10_3 (select,i32) == 3_0 (mul,i32)
10_3 (select,i32) == 4_0 (and,i32)
10_3 (select,i32) == 5_0 (or,i32)
10_3 (select,i32) == 6_0 (xor,i32)
10_3 (select,i32) == 7_0 (shl,i32)
10_3 (select,i32) == 8_0 (lshr,i32)
10_3 (select,i32) == 9_0 (ashr,i32)
10_3 (select,i32) == 11_0 (zext,eq,i32)
10_3 (select,i32) == 12_0 (zext,ne,i32)
10_3 (select,i32) == 13_0 (zext,ult,i32)
10_3 (select,i32) == 14_0 (zext,slt,i32)
10_3 (select,i32) == 15_0 (zext,ule,i32)
10_3 (select,i32) == 16_0 (zext,sle,i32)
11_1 (eq,i32) == 1_0 (add,i32)
11_1 (eq,i32) == 2_0 (sub,i32)
11_1 (eq,i32) == 3_0 (mul,i32)
11_1 (eq,i32) == 4_0 (and,i32)
11_1 (eq,i32) == 5_0 (or,i32)
11_1 (eq,i32) == 6_0 (xor,i32)
11_1 (eq,i32) == 7_0 (shl,i32)
11_1 (eq,i32) == 8_0 (lshr,i32)
11_1 (eq,i32) == 9_0 (ashr,i32)
11_1 (eq,i32) == 10_0 (select,i32)
11_1 (eq,i32) == 12_0 (zext,ne,i32)
11_1 (eq,i32) == 13_0 (zext,ult,i32)
11_1 (eq,i32) == 14_0 (zext,slt,i32)
11_1 (eq,i32) == 15_0 (zext,ule,i32)
11_1 (eq,i32) == 16_0 (zext,sle,i32)
11_2 (eq,i32) == 1_0 (add,i32)
11_2 (eq,i32) == 2_0 (sub,i32)
11_2 (eq,i32) == 3_0 (mul,i32)
11_2 (eq,i32) == 4_0 (and,i32)
11_2 (eq,i32) == 5_0 (or,i32)
11_2 (eq,i32) == 6_0 (xor,i32)
11_2 (eq,i32) == 7_0 (shl,i32)
11_2 (eq,i32) == 8_0 (lshr,i32)
11_2 (eq,i32) == 9_0 (ashr,i32)
11_2 (eq,i32) == 10_0 (select,i32)
11_2 (eq,i32) == 12_0 (zext,ne,i32)
11_2 (eq,i32) == 13_0 (zext,ult,i32)
11_2 (eq,i32) == 14_0 (zext,slt,i32)
11_2 (eq,i32) == 15_0 (zext,ule,i32)
11_2 (eq,i32) == 16_0 (zext,sle,i32)
12_1 (ne,i32) == 1_0 (add,i32)
12_1 (ne,i32) == 2_0 (sub,i32)
12_1 (ne,i32) == 3_0 (mul,i32)
12_1 (ne,i32) == 4_0 (and,i32)
12_1 (ne,i32) == 5_0 (or,i32)
12_1 (ne,i32) == 6_0 (xor,i32)
12_1 (ne,i32) == 7_0 (shl,i32)
12_1 (ne,i32) == 8_0 (lshr,i32)
12_1 (ne,i32) == 9_0 (ashr,i32)
12_1 (ne,i32) == 10_0 (select,i32)
12_1 (ne,i32) == 11_0 (zext,eq,i32)
12_1 (ne,i32) == 13_0 (zext,ult,i32)
12_1 (ne,i32) == 14_0 (zext,slt,i32)
12_1 (ne,i32) == 15_0 (zext,ule,i32)
12_1 (ne,i32) == 16_0 (zext,sle,i32)
12_2 (ne,i32) == 1_0 (add,i32)
12_2 (ne,i32) == 2_0 (sub,i32)
12_2 (ne,i32) == 3_0 (mul,i32)
12_2 (ne,i32) == 4_0 (and,i32)
12_2 (ne,i32) == 5_0 (or,i32)
12_2 (ne,i32) == 6_0 (xor,i32)
12_2 (ne,i32) == 7_0 (shl,i32)
12_2 (ne,i32) == 8_0 (lshr,i32)
12_2 (ne,i32) == 9_0 (ashr,i32)
12_2 (ne,i32) == 10_0 (select,i32)
12_2 (ne,i32) == 11_0 (zext,eq,i32)
12_2 (ne,i32) == 13_0 (zext,ult,i32)
12_2 (ne,i32) == 14_0 (zext,slt,i32)
12_2 (ne,i32) == 15_0 (zext,ule,i32)
12_2 (ne,i32) == 16_0 (zext,sle,i32)
13_1 (ult,i32) == 1_0 (add,i32)
13_1 (ult,i32) == 2_0 (sub,i32)
13_1 (ult,i32) == 3_0 (mul,i32)
13_1 (ult,i32) == 4_0 (and,i32)
13_1 (ult,i32) == 5_0 (or,i32)
13_1 (ult,i32) == 6_0 (xor,i32)
13_1 (ult,i32) == 7_0 (shl,i32)
13_1 (ult,i32) == 8_0 (lshr,i32)
13_1 (ult,i32) == 9_0 (ashr,i32)
13_1 (ult,i32) == 10_0 (select,i32)
13_1 (ult,i32) == 11_0 (zext,eq,i32)
13_1 (ult,i32) == 12_0 (zext,ne,i32)
13_1 (ult,i32) == 14_0 (zext,slt,i32)
13_1 (ult,i32) == 15_0 (zext,ule,i32)
13_1 (ult,i32) == 16_0 (zext,sle,i32)
13_2 (ult,i32) == 1_0 (add,i32)
13_2 (ult,i32) == 2_0 (sub,i32)
13_2 (ult,i32) == 3_0 (mul,i32)
13_2 (ult,i32) == 4_0 (and,i32)
13_2 (ult,i32) == 5_0 (or,i32)
13_2 (ult,i32) == 6_0 (xor,i32)
13_2 (ult,i32) == 7_0 (shl,i32)
13_2 (ult,i32) == 8_0 (lshr,i32)
13_2 (ult,i32) == 9_0 (ashr,i32)
13_2 (ult,i32) == 10_0 (select,i32)
13_2 (ult,i32) == 11_0 (zext,eq,i32)
13_2 (ult,i32) == 12_0 (zext,ne,i32)
13_2 (ult,i32) == 14_0 (zext,slt,i32)
13_2 (ult,i32) == 15_0 (zext,ule,i32)
13_2 (ult,i32) == 16_0 (zext,sle,i32)
14_1 (slt,i32) == 1_0 (add,i32)
14_1 (slt,i32) == 2_0 (sub,i32)
14_1 (slt,i32) == 3_0 (mul,i32)
14_1 (slt,i32) == 4_0 (and,i32)
14_1 (slt,i32) == 5_0 (or,i32)
14_1 (slt,i32) == 6_0 (xor,i32)
14_1 (slt,i32) == 7_0 (shl,i32)
14_1 (slt,i32) == 8_0 (lshr,i32)
14_1 (slt,i32) == 9_0 (ashr,i32)
14_1 (slt,i32) == 10_0 (select,i32)
14_1 (slt,i32) == 11_0 (zext,eq,i32)
14_1 (slt,i32) == 12_0 (zext,ne,i32)
14_1 (slt,i32) == 13_0 (zext,ult,i32)
14_1 (slt,i32) == 15_0 (zext,ule,i32)
14_1 (slt,i32) == 16_0 (zext,sle,i32)
14_2 (slt,i32) == 1_0 (add,i32)
14_2 (slt,i32) == 2_0 (sub,i32)
14_2 (slt,i32) == 3_0 (mul,i32)
14_2 (slt,i32) == 4_0 (and,i32)
14_2 (slt,i32) == 5_0 (or,i32)
14_2 (slt,i32) == 6_0 (xor,i32)
14_2 (slt,i32) == 7_0 (shl,i32)
14_2 (slt,i32) == 8_0 (lshr,i32)
14_2 (slt,i32) == 9_0 (ashr,i32)
14_2 (slt,i32) == 10_0 (select,i32)
14_2 (slt,i32) == 11_0 (zext,eq,i32)
14_2 (slt,i32) == 12_0 (zext,ne,i32)
14_2 (slt,i32) == 13_0 (zext,ult,i32)
14_2 (slt,i32) == 15_0 (zext,ule,i32)
14_2 (slt,i32) == 16_0 (zext,sle,i32)
15_1 (ule,i32) == 1_0 (add,i32)
15_1 (ule,i32) == 2_0 (sub,i32)
15_1 (ule,i32) == 3_0 (mul,i32)
15_1 (ule,i32) == 4_0 (and,i32)
15_1 (ule,i32) == 5_0 (or,i32)
15_1 (ule,i32) == 6_0 (xor,i32)
15_1 (ule,i32) == 7_0 (shl,i32)
15_1 (ule,i32) == 8_0 (lshr,i32)
15_1 (ule,i32) == 9_0 (ashr,i32)
15_1 (ule,i32) == 10_0 (select,i32)
15_1 (ule,i32) == 11_0 (zext,eq,i32)
15_1 (ule,i32) == 12_0 (zext,ne,i32)
15_1 (ule,i32) == 13_0 (zext,ult,i32)
15_1 (ule,i32) == 14_0 (zext,slt,i32)
15_1 (ule,i32) == 16_0 (zext,sle,i32)
15_2 (ule,i32) == 1_0 (add,i32)
15_2 (ule,i32) == 2_0 (sub,i32)
15_2 (ule,i32) == 3_0 (mul,i32)
15_2 (ule,i32) == 4_0 (and,i32)
15_2 (ule,i32) == 5_0 (or,i32)
15_2 (ule,i32) == 6_0 (xor,i32)
15_2 (ule,i32) == 7_0 (shl,i32)
15_2 (ule,i32) == 8_0 (lshr,i32)
15_2 (ule,i32) == 9_0 (ashr,i32)
15_2 (ule,i32) == 10_0 (select,i32)
15_2 (ule,i32) == 11_0 (zext,eq,i32)
15_2 (ule,i32) == 12_0 (zext,ne,i32)
15_2 (ule,i32) == 13_0 (zext,ult,i32)
15_2 (ule,i32) == 14_0 (zext,slt,i32)
15_2 (ule,i32) == 16_0 (zext,sle,i32)
16_1 (sle,i32) == 1_0 (add,i32)
16_1 (sle,i32) == 2_0 (sub,i32)
16_1 (sle,i32) == 3_0 (mul,i32)
16_1 (sle,i32) == 4_0 (and,i32)
16_1 (sle,i32) == 5_0 (or,i32)
16_1 (sle,i32) == 6_0 (xor,i32)
16_1 (sle,i32) == 7_0 (shl,i32)
16_1 (sle,i32) == 8_0 (lshr,i32)
16_1 (sle,i32) == 9_0 (ashr,i32)
16_1 (sle,i32) == 10_0 (select,i32)
16_1 (sle,i32) == 11_0 (zext,eq,i32)
16_1 (sle,i32) == 12_0 (zext,ne,i32)
16_1 (sle,i32) == 13_0 (zext,ult,i32)
16_1 (sle,i32) == 14_0 (zext,slt,i32)
16_1 (sle,i32) == 15_0 (zext,ule,i32)
16_2 (sle,i32) == 1_0 (add,i32)
16_2 (sle,i32) == 2_0 (sub,i32)
16_2 (sle,i32) == 3_0 (mul,i32)
16_2 (sle,i32) == 4_0 (and,i32)
16_2 (sle,i32) == 5_0 (or,i32)
16_2 (sle,i32) == 6_0 (xor,i32)
16_2 (sle,i32) == 7_0 (shl,i32)
16_2 (sle,i32) == 8_0 (lshr,i32)
16_2 (sle,i32) == 9_0 (ashr,i32)
16_2 (sle,i32) == 10_0 (select,i32)
16_2 (sle,i32) == 11_0 (zext,eq,i32)
16_2 (sle,i32) == 12_0 (zext,ne,i32)
16_2 (sle,i32) == 13_0 (zext,ult,i32)
16_2 (sle,i32) == 14_0 (zext,slt,i32)
16_2 (sle,i32) == 15_0 (zext,ule,i32)
17_1 (trunc,i32) == 1_0 (add,i32)
17_1 (trunc,i32) == 2_0 (sub,i32)
17_1 (trunc,i32) == 3_0 (mul,i32)
17_1 (trunc,i32) == 4_0 (and,i32)
17_1 (trunc,i32) == 5_0 (or,i32)
17_1 (trunc,i32) == 6_0 (xor,i32)
17_1 (trunc,i32) == 7_0 (shl,i32)
17_1 (trunc,i32) == 8_0 (lshr,i32)
17_1 (trunc,i32) == 9_0 (ashr,i32)
17_1 (trunc,i32) == 10_0 (select,i32)
17_1 (trunc,i32) == 11_0 (zext,eq,i32)
17_1 (trunc,i32) == 12_0 (zext,ne,i32)
17_1 (trunc,i32) == 13_0 (zext,ult,i32)
17_1 (trunc,i32) == 14_0 (zext,slt,i32)
17_1 (trunc,i32) == 15_0 (zext,ule,i32)
17_1 (trunc,i32) == 16_0 (zext,sle,i32)
17_0 (trunc,i1) == 18_0 (output,i1)
synthesizing using 0 component(s)
0 <= 18_0 (output,i1) < 3
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
solving synthesis constraint.. UNSAT
synthesizing using 1 component(s)
3 <= 18_0 (output,i1) < 4
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
solving synthesis constraint.. UNSAT
synthesizing using 2 component(s)
3 <= 18_0 (output,i1) < 5
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
solving synthesis constraint.. SAT
line	locations
0	0_3 (const,i32) 9_1 (ashr,i32) 11_1 (eq,i32) 13_2 (ult,i32) 16_2 (sle,i32) 
1	0_2 (const,i32) 1_1 (add,i32) 2_1 (sub,i32) 4_2 (and,i32) 
2	0_1 (input,i32) 5_1 (or,i32) 6_1 (xor,i32) 13_1 (ult,i32) 16_1 (sle,i32) 
3	4_1 (and,i32) 7_2 (shl,i32) 13_0 (zext,ult,i32) 14_1 (slt,i32) 15_1 (ule,i32) 17_1 (trunc,i32) 
4	17_0 (trunc,i1) 18_0 (output,i1) 
5	1_2 (add,i32) 15_2 (ule,i32) 16_0 (zext,sle,i32) 
6	4_0 (and,i32) 9_2 (ashr,i32) 14_2 (slt,i32) 
7	10_2 (select,i32) 10_3 (select,i32) 11_2 (eq,i32) 15_0 (zext,ule,i32) 
8	5_2 (or,i32) 9_0 (ashr,i32) 10_1 (select,i32) 
9	7_1 (shl,i32) 8_2 (lshr,i32) 10_0 (select,i32) 
10	1_0 (add,i32) 6_2 (xor,i32) 8_1 (lshr,i32) 
11	6_0 (xor,i32) 12_1 (ne,i32) 12_2 (ne,i32) 
12	5_0 (or,i32) 
13	3_2 (mul,i32) 11_0 (zext,eq,i32) 
14	7_0 (shl,i32) 
15	2_2 (sub,i32) 12_0 (zext,ne,i32) 
16	3_1 (mul,i32) 8_0 (lshr,i32) 
17	14_0 (zext,slt,i32) 
18	3_0 (mul,i32) 
19	2_0 (sub,i32) 
found valid wiring, output 17_0 (trunc,i1).
creating program from wiring
- starting with OutLoc 17_0 (trunc,i1), OpLocs { 17_1 (trunc,i32) }
- looking for OpLoc wiring 17_1 (trunc,i32)
- found wiring input on line 3, taking 13_0 (zext,ult,i32)
- continue with OutLoc 13_0 (zext,ult,i32), OpLocs {13_1 (ult,i32) 13_2 (ult,i32) }
- looking for OpLoc wiring 13_1 (ult,i32)
- found wiring input on line 2, taking 0_1 (input,i32)
- continue with OutLoc 0_1 (input,i32), OpLocs {}
- creating input inst 0_1 (input,i32)
- looking for OpLoc wiring 13_2 (ult,i32)
- found wiring input on line 0, taking 0_3 (const,i32)
- continue with OutLoc 0_3 (const,i32), OpLocs {}
- creating constant inst 0_3 (const,i32) with value 409594780
- creating inst ult, width 1
before junk removal:
%4:i1 = ult %0, 409594780:i32
result %4
- creating inst trunc, width 1
before junk removal:
%5:i32 = zext %4
%6:i1 = trunc %5
result %6
candidate:
result %4
didn't work for all inputs (#cex: 5, refinement: 1)
counterexample: in_0_1 = 25264
cand with constants, constraining wiring
18_0 (output,i1) == 17_0 (trunc,i1)
17_1 (trunc,i32) == 13_0 (zext,ult,i32)
13_1 (ult,i32) == 0_1 (input,i32)
13_2 (ult,i32) == 0_3 (const,i32)
with constant 0_3 (const,i32) == 409594780
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
setting input in_0_1 to 25264
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i32) 5_1 (or,i32) 6_1 (xor,i32) 11_1 (eq,i32) 12_2 (ne,i32) 13_1 (ult,i32) 13_2 (ult,i32) 15_2 (ule,i32) 
1	0_3 (const,i32) 10_2 (select,i32) 12_1 (ne,i32) 
3	4_2 (and,i32) 8_1 (lshr,i32) 12_0 (zext,ne,i32) 17_1 (trunc,i32) 
4	0_2 (const,i32) 3_2 (mul,i32) 5_2 (or,i32) 6_2 (xor,i32) 9_1 (ashr,i32) 11_2 (eq,i32) 17_0 (trunc,i1) 18_0 (output,i1) 
5	2_1 (sub,i32) 4_1 (and,i32) 5_0 (or,i32) 7_1 (shl,i32) 16_2 (sle,i32) 
6	4_0 (and,i32) 9_2 (ashr,i32) 
7	8_2 (lshr,i32) 13_0 (zext,ult,i32) 
8	8_0 (lshr,i32) 
9	7_2 (shl,i32) 10_1 (select,i32) 10_3 (select,i32) 11_0 (zext,eq,i32) 15_1 (ule,i32) 
10	1_1 (add,i32) 3_1 (mul,i32) 9_0 (ashr,i32) 14_2 (slt,i32) 16_1 (sle,i32) 
11	16_0 (zext,sle,i32) 
12	2_2 (sub,i32) 3_0 (mul,i32) 
13	15_0 (zext,ule,i32) 
14	2_0 (sub,i32) 14_1 (slt,i32) 
15	6_0 (xor,i32) 
16	1_2 (add,i32) 14_0 (zext,slt,i32) 
17	10_0 (select,i32) 
18	7_0 (shl,i32) 
19	1_0 (add,i32) 
found valid wiring, output 17_0 (trunc,i1).
creating program from wiring
- starting with OutLoc 17_0 (trunc,i1), OpLocs { 17_1 (trunc,i32) }
- looking for OpLoc wiring 17_1 (trunc,i32)
- found wiring input on line 3, taking 12_0 (zext,ne,i32)
- continue with OutLoc 12_0 (zext,ne,i32), OpLocs {12_1 (ne,i32) 12_2 (ne,i32) }
- looking for OpLoc wiring 12_1 (ne,i32)
- found wiring input on line 1, taking 0_3 (const,i32)
- continue with OutLoc 0_3 (const,i32), OpLocs {}
- creating constant inst 0_3 (const,i32) with value 25264
- looking for OpLoc wiring 12_2 (ne,i32)
- found wiring input on line 0, taking 0_1 (input,i32)
- continue with OutLoc 0_1 (input,i32), OpLocs {}
- creating input inst 0_1 (input,i32)
- creating inst ne, width 1
before junk removal:
%7:i1 = ne 25264:i32, %0
result %7
- creating inst trunc, width 1
before junk removal:
%8:i32 = zext %7
%9:i1 = trunc %8
result %9
candidate:
result %7
success:
result %7
; LHS cost = 7, RHS cost = 1, benefit = 5
; starting synthesis for LHS
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = mulnsw %0, %0
%2:i32 = urem %1, 1000000:i32
%3:i1 = ne 269696:i32, %2
%4:i1 = ne 2147483647:i32, %1
%5:i1 = and %3, %4
infer %5
inputs: 1, constants: 2
N: 3, M: 20
default width: 32
output width: 1
component library: add (32, { 32 32 }); sub (32, { 32 32 }); mul (32, { 32 32 }); and (32, { 32 32 }); or (32, { 32 32 }); xor (32, { 32 32 }); shl (32, { 32 32 }); lshr (32, { 32 32 }); ashr (32, { 32 32 }); select (32, { 1 32 32 }); eq (1, { 32 32 }); ne (1, { 32 32 }); ult (1, { 32 32 }); slt (1, { 32 32 }); ule (1, { 32 32 }); sle (1, { 32 32 }); trunc (1, { 32 }); 
const components: const (32); const (32); 
I: 0_1 (input,i32) 0_2 (const,i32) 0_3 (const,i32) 
P: 1_1 (add,i32) 1_2 (add,i32) 2_1 (sub,i32) 2_2 (sub,i32) 3_1 (mul,i32) 3_2 (mul,i32) 4_1 (and,i32) 4_2 (and,i32) 5_1 (or,i32) 5_2 (or,i32) 6_1 (xor,i32) 6_2 (xor,i32) 7_1 (shl,i32) 7_2 (shl,i32) 8_1 (lshr,i32) 8_2 (lshr,i32) 9_1 (ashr,i32) 9_2 (ashr,i32) 10_1 (select,i32) 10_2 (select,i32) 10_3 (select,i32) 11_1 (eq,i32) 11_2 (eq,i32) 12_1 (ne,i32) 12_2 (ne,i32) 13_1 (ult,i32) 13_2 (ult,i32) 14_1 (slt,i32) 14_2 (slt,i32) 15_1 (ule,i32) 15_2 (ule,i32) 16_1 (sle,i32) 16_2 (sle,i32) 17_1 (trunc,i32) 
R: 1_0 (add,i32) 2_0 (sub,i32) 3_0 (mul,i32) 4_0 (and,i32) 5_0 (or,i32) 6_0 (xor,i32) 7_0 (shl,i32) 8_0 (lshr,i32) 9_0 (ashr,i32) 10_0 (select,i32) 11_0 (zext,eq,i32) 12_0 (zext,ne,i32) 13_0 (zext,ult,i32) 14_0 (zext,slt,i32) 15_0 (zext,ule,i32) 16_0 (zext,sle,i32) 17_0 (trunc,i1) 
L: 0_1 (input,i32) 0_2 (const,i32) 0_3 (const,i32) 1_1 (add,i32) 1_2 (add,i32) 2_1 (sub,i32) 2_2 (sub,i32) 3_1 (mul,i32) 3_2 (mul,i32) 4_1 (and,i32) 4_2 (and,i32) 5_1 (or,i32) 5_2 (or,i32) 6_1 (xor,i32) 6_2 (xor,i32) 7_1 (shl,i32) 7_2 (shl,i32) 8_1 (lshr,i32) 8_2 (lshr,i32) 9_1 (ashr,i32) 9_2 (ashr,i32) 10_1 (select,i32) 10_2 (select,i32) 10_3 (select,i32) 11_1 (eq,i32) 11_2 (eq,i32) 12_1 (ne,i32) 12_2 (ne,i32) 13_1 (ult,i32) 13_2 (ult,i32) 14_1 (slt,i32) 14_2 (slt,i32) 15_1 (ule,i32) 15_2 (ule,i32) 16_1 (sle,i32) 16_2 (sle,i32) 17_1 (trunc,i32) 1_0 (add,i32) 2_0 (sub,i32) 3_0 (mul,i32) 4_0 (and,i32) 5_0 (or,i32) 6_0 (xor,i32) 7_0 (shl,i32) 8_0 (lshr,i32) 9_0 (ashr,i32) 10_0 (select,i32) 11_0 (zext,eq,i32) 12_0 (zext,ne,i32) 13_0 (zext,ult,i32) 14_0 (zext,slt,i32) 15_0 (zext,ule,i32) 16_0 (zext,sle,i32) 17_0 (trunc,i1) 18_0 (output,i1) 
O: 18_0 (output,i1)
consistency constraints:
1_0 (add,i32) != 2_0 (sub,i32)
1_0 (add,i32) != 3_0 (mul,i32)
1_0 (add,i32) != 4_0 (and,i32)
1_0 (add,i32) != 5_0 (or,i32)
1_0 (add,i32) != 6_0 (xor,i32)
1_0 (add,i32) != 7_0 (shl,i32)
1_0 (add,i32) != 8_0 (lshr,i32)
1_0 (add,i32) != 9_0 (ashr,i32)
1_0 (add,i32) != 10_0 (select,i32)
1_0 (add,i32) != 11_0 (zext,eq,i32)
1_0 (add,i32) != 12_0 (zext,ne,i32)
1_0 (add,i32) != 13_0 (zext,ult,i32)
1_0 (add,i32) != 14_0 (zext,slt,i32)
1_0 (add,i32) != 15_0 (zext,ule,i32)
1_0 (add,i32) != 16_0 (zext,sle,i32)
1_0 (add,i32) != 17_0 (trunc,i1)
2_0 (sub,i32) != 3_0 (mul,i32)
2_0 (sub,i32) != 4_0 (and,i32)
2_0 (sub,i32) != 5_0 (or,i32)
2_0 (sub,i32) != 6_0 (xor,i32)
2_0 (sub,i32) != 7_0 (shl,i32)
2_0 (sub,i32) != 8_0 (lshr,i32)
2_0 (sub,i32) != 9_0 (ashr,i32)
2_0 (sub,i32) != 10_0 (select,i32)
2_0 (sub,i32) != 11_0 (zext,eq,i32)
2_0 (sub,i32) != 12_0 (zext,ne,i32)
2_0 (sub,i32) != 13_0 (zext,ult,i32)
2_0 (sub,i32) != 14_0 (zext,slt,i32)
2_0 (sub,i32) != 15_0 (zext,ule,i32)
2_0 (sub,i32) != 16_0 (zext,sle,i32)
2_0 (sub,i32) != 17_0 (trunc,i1)
3_0 (mul,i32) != 4_0 (and,i32)
3_0 (mul,i32) != 5_0 (or,i32)
3_0 (mul,i32) != 6_0 (xor,i32)
3_0 (mul,i32) != 7_0 (shl,i32)
3_0 (mul,i32) != 8_0 (lshr,i32)
3_0 (mul,i32) != 9_0 (ashr,i32)
3_0 (mul,i32) != 10_0 (select,i32)
3_0 (mul,i32) != 11_0 (zext,eq,i32)
3_0 (mul,i32) != 12_0 (zext,ne,i32)
3_0 (mul,i32) != 13_0 (zext,ult,i32)
3_0 (mul,i32) != 14_0 (zext,slt,i32)
3_0 (mul,i32) != 15_0 (zext,ule,i32)
3_0 (mul,i32) != 16_0 (zext,sle,i32)
3_0 (mul,i32) != 17_0 (trunc,i1)
4_0 (and,i32) != 5_0 (or,i32)
4_0 (and,i32) != 6_0 (xor,i32)
4_0 (and,i32) != 7_0 (shl,i32)
4_0 (and,i32) != 8_0 (lshr,i32)
4_0 (and,i32) != 9_0 (ashr,i32)
4_0 (and,i32) != 10_0 (select,i32)
4_0 (and,i32) != 11_0 (zext,eq,i32)
4_0 (and,i32) != 12_0 (zext,ne,i32)
4_0 (and,i32) != 13_0 (zext,ult,i32)
4_0 (and,i32) != 14_0 (zext,slt,i32)
4_0 (and,i32) != 15_0 (zext,ule,i32)
4_0 (and,i32) != 16_0 (zext,sle,i32)
4_0 (and,i32) != 17_0 (trunc,i1)
5_0 (or,i32) != 6_0 (xor,i32)
5_0 (or,i32) != 7_0 (shl,i32)
5_0 (or,i32) != 8_0 (lshr,i32)
5_0 (or,i32) != 9_0 (ashr,i32)
5_0 (or,i32) != 10_0 (select,i32)
5_0 (or,i32) != 11_0 (zext,eq,i32)
5_0 (or,i32) != 12_0 (zext,ne,i32)
5_0 (or,i32) != 13_0 (zext,ult,i32)
5_0 (or,i32) != 14_0 (zext,slt,i32)
5_0 (or,i32) != 15_0 (zext,ule,i32)
5_0 (or,i32) != 16_0 (zext,sle,i32)
5_0 (or,i32) != 17_0 (trunc,i1)
6_0 (xor,i32) != 7_0 (shl,i32)
6_0 (xor,i32) != 8_0 (lshr,i32)
6_0 (xor,i32) != 9_0 (ashr,i32)
6_0 (xor,i32) != 10_0 (select,i32)
6_0 (xor,i32) != 11_0 (zext,eq,i32)
6_0 (xor,i32) != 12_0 (zext,ne,i32)
6_0 (xor,i32) != 13_0 (zext,ult,i32)
6_0 (xor,i32) != 14_0 (zext,slt,i32)
6_0 (xor,i32) != 15_0 (zext,ule,i32)
6_0 (xor,i32) != 16_0 (zext,sle,i32)
6_0 (xor,i32) != 17_0 (trunc,i1)
7_0 (shl,i32) != 8_0 (lshr,i32)
7_0 (shl,i32) != 9_0 (ashr,i32)
7_0 (shl,i32) != 10_0 (select,i32)
7_0 (shl,i32) != 11_0 (zext,eq,i32)
7_0 (shl,i32) != 12_0 (zext,ne,i32)
7_0 (shl,i32) != 13_0 (zext,ult,i32)
7_0 (shl,i32) != 14_0 (zext,slt,i32)
7_0 (shl,i32) != 15_0 (zext,ule,i32)
7_0 (shl,i32) != 16_0 (zext,sle,i32)
7_0 (shl,i32) != 17_0 (trunc,i1)
8_0 (lshr,i32) != 9_0 (ashr,i32)
8_0 (lshr,i32) != 10_0 (select,i32)
8_0 (lshr,i32) != 11_0 (zext,eq,i32)
8_0 (lshr,i32) != 12_0 (zext,ne,i32)
8_0 (lshr,i32) != 13_0 (zext,ult,i32)
8_0 (lshr,i32) != 14_0 (zext,slt,i32)
8_0 (lshr,i32) != 15_0 (zext,ule,i32)
8_0 (lshr,i32) != 16_0 (zext,sle,i32)
8_0 (lshr,i32) != 17_0 (trunc,i1)
9_0 (ashr,i32) != 10_0 (select,i32)
9_0 (ashr,i32) != 11_0 (zext,eq,i32)
9_0 (ashr,i32) != 12_0 (zext,ne,i32)
9_0 (ashr,i32) != 13_0 (zext,ult,i32)
9_0 (ashr,i32) != 14_0 (zext,slt,i32)
9_0 (ashr,i32) != 15_0 (zext,ule,i32)
9_0 (ashr,i32) != 16_0 (zext,sle,i32)
9_0 (ashr,i32) != 17_0 (trunc,i1)
10_0 (select,i32) != 11_0 (zext,eq,i32)
10_0 (select,i32) != 12_0 (zext,ne,i32)
10_0 (select,i32) != 13_0 (zext,ult,i32)
10_0 (select,i32) != 14_0 (zext,slt,i32)
10_0 (select,i32) != 15_0 (zext,ule,i32)
10_0 (select,i32) != 16_0 (zext,sle,i32)
10_0 (select,i32) != 17_0 (trunc,i1)
11_0 (zext,eq,i32) != 12_0 (zext,ne,i32)
11_0 (zext,eq,i32) != 13_0 (zext,ult,i32)
11_0 (zext,eq,i32) != 14_0 (zext,slt,i32)
11_0 (zext,eq,i32) != 15_0 (zext,ule,i32)
11_0 (zext,eq,i32) != 16_0 (zext,sle,i32)
11_0 (zext,eq,i32) != 17_0 (trunc,i1)
12_0 (zext,ne,i32) != 13_0 (zext,ult,i32)
12_0 (zext,ne,i32) != 14_0 (zext,slt,i32)
12_0 (zext,ne,i32) != 15_0 (zext,ule,i32)
12_0 (zext,ne,i32) != 16_0 (zext,sle,i32)
12_0 (zext,ne,i32) != 17_0 (trunc,i1)
13_0 (zext,ult,i32) != 14_0 (zext,slt,i32)
13_0 (zext,ult,i32) != 15_0 (zext,ule,i32)
13_0 (zext,ult,i32) != 16_0 (zext,sle,i32)
13_0 (zext,ult,i32) != 17_0 (trunc,i1)
14_0 (zext,slt,i32) != 15_0 (zext,ule,i32)
14_0 (zext,slt,i32) != 16_0 (zext,sle,i32)
14_0 (zext,slt,i32) != 17_0 (trunc,i1)
15_0 (zext,ule,i32) != 16_0 (zext,sle,i32)
15_0 (zext,ule,i32) != 17_0 (trunc,i1)
16_0 (zext,sle,i32) != 17_0 (trunc,i1)
acyclicity constraints:
1_1 (add,i32) < 1_0
1_2 (add,i32) < 1_0
2_1 (sub,i32) < 2_0
2_2 (sub,i32) < 2_0
3_1 (mul,i32) < 3_0
3_2 (mul,i32) < 3_0
4_1 (and,i32) < 4_0
4_2 (and,i32) < 4_0
5_1 (or,i32) < 5_0
5_2 (or,i32) < 5_0
6_1 (xor,i32) < 6_0
6_2 (xor,i32) < 6_0
7_1 (shl,i32) < 7_0
7_2 (shl,i32) < 7_0
8_1 (lshr,i32) < 8_0
8_2 (lshr,i32) < 8_0
9_1 (ashr,i32) < 9_0
9_2 (ashr,i32) < 9_0
10_1 (select,i32) < 10_0
10_2 (select,i32) < 10_0
10_3 (select,i32) < 10_0
11_1 (eq,i32) < 11_0
11_2 (eq,i32) < 11_0
12_1 (ne,i32) < 12_0
12_2 (ne,i32) < 12_0
13_1 (ult,i32) < 13_0
13_2 (ult,i32) < 13_0
14_1 (slt,i32) < 14_0
14_2 (slt,i32) < 14_0
15_1 (ule,i32) < 15_0
15_2 (ule,i32) < 15_0
16_1 (sle,i32) < 16_0
16_2 (sle,i32) < 16_0
17_1 (trunc,i32) < 17_0
location variable constraints:
0 <= 1_1 (add,i32) < 20
0 <= 1_2 (add,i32) < 20
0 <= 2_1 (sub,i32) < 20
0 <= 2_2 (sub,i32) < 20
0 <= 3_1 (mul,i32) < 20
0 <= 3_2 (mul,i32) < 20
0 <= 4_1 (and,i32) < 20
0 <= 4_2 (and,i32) < 20
0 <= 5_1 (or,i32) < 20
0 <= 5_2 (or,i32) < 20
0 <= 6_1 (xor,i32) < 20
0 <= 6_2 (xor,i32) < 20
0 <= 7_1 (shl,i32) < 20
0 <= 7_2 (shl,i32) < 20
0 <= 8_1 (lshr,i32) < 20
0 <= 8_2 (lshr,i32) < 20
0 <= 9_1 (ashr,i32) < 20
0 <= 9_2 (ashr,i32) < 20
0 <= 10_1 (select,i32) < 20
0 <= 10_2 (select,i32) < 20
0 <= 10_3 (select,i32) < 20
0 <= 11_1 (eq,i32) < 20
0 <= 11_2 (eq,i32) < 20
0 <= 12_1 (ne,i32) < 20
0 <= 12_2 (ne,i32) < 20
0 <= 13_1 (ult,i32) < 20
0 <= 13_2 (ult,i32) < 20
0 <= 14_1 (slt,i32) < 20
0 <= 14_2 (slt,i32) < 20
0 <= 15_1 (ule,i32) < 20
0 <= 15_2 (ule,i32) < 20
0 <= 16_1 (sle,i32) < 20
0 <= 16_2 (sle,i32) < 20
0 <= 17_1 (trunc,i32) < 20
0 <= 0_1 (input,i32) < 20
0 <= 0_2 (const,i32) < 20
0 <= 0_3 (const,i32) < 20
3 <= 1_0 (add,i32) < 20
3 <= 2_0 (sub,i32) < 20
3 <= 3_0 (mul,i32) < 20
3 <= 4_0 (and,i32) < 20
3 <= 5_0 (or,i32) < 20
3 <= 6_0 (xor,i32) < 20
3 <= 7_0 (shl,i32) < 20
3 <= 8_0 (lshr,i32) < 20
3 <= 9_0 (ashr,i32) < 20
3 <= 10_0 (select,i32) < 20
3 <= 11_0 (zext,eq,i32) < 20
3 <= 12_0 (zext,ne,i32) < 20
3 <= 13_0 (zext,ult,i32) < 20
3 <= 14_0 (zext,slt,i32) < 20
3 <= 15_0 (zext,ule,i32) < 20
3 <= 16_0 (zext,sle,i32) < 20
3 <= 17_0 (trunc,i1) < 20
component input constraints:
1_1 (add,i32) == 0_1 (input,i32) || 1_1 (add,i32) == 0_2 (const,i32) || 1_1 (add,i32) == 0_3 (const,i32) || 1_1 (add,i32) == 2_0 (sub,i32) || 1_1 (add,i32) == 3_0 (mul,i32) || 1_1 (add,i32) == 4_0 (and,i32) || 1_1 (add,i32) == 5_0 (or,i32) || 1_1 (add,i32) == 6_0 (xor,i32) || 1_1 (add,i32) == 7_0 (shl,i32) || 1_1 (add,i32) == 8_0 (lshr,i32) || 1_1 (add,i32) == 9_0 (ashr,i32) || 1_1 (add,i32) == 10_0 (select,i32) || 1_1 (add,i32) == 11_0 (zext,eq,i32) || 1_1 (add,i32) == 12_0 (zext,ne,i32) || 1_1 (add,i32) == 13_0 (zext,ult,i32) || 1_1 (add,i32) == 14_0 (zext,slt,i32) || 1_1 (add,i32) == 15_0 (zext,ule,i32) || 1_1 (add,i32) == 16_0 (zext,sle,i32) || false
1_2 (add,i32) == 0_1 (input,i32) || 1_2 (add,i32) == 0_2 (const,i32) || 1_2 (add,i32) == 0_3 (const,i32) || 1_2 (add,i32) == 2_0 (sub,i32) || 1_2 (add,i32) == 3_0 (mul,i32) || 1_2 (add,i32) == 4_0 (and,i32) || 1_2 (add,i32) == 5_0 (or,i32) || 1_2 (add,i32) == 6_0 (xor,i32) || 1_2 (add,i32) == 7_0 (shl,i32) || 1_2 (add,i32) == 8_0 (lshr,i32) || 1_2 (add,i32) == 9_0 (ashr,i32) || 1_2 (add,i32) == 10_0 (select,i32) || 1_2 (add,i32) == 11_0 (zext,eq,i32) || 1_2 (add,i32) == 12_0 (zext,ne,i32) || 1_2 (add,i32) == 13_0 (zext,ult,i32) || 1_2 (add,i32) == 14_0 (zext,slt,i32) || 1_2 (add,i32) == 15_0 (zext,ule,i32) || 1_2 (add,i32) == 16_0 (zext,sle,i32) || false
2_1 (sub,i32) == 0_1 (input,i32) || 2_1 (sub,i32) == 0_2 (const,i32) || 2_1 (sub,i32) == 0_3 (const,i32) || 2_1 (sub,i32) == 1_0 (add,i32) || 2_1 (sub,i32) == 3_0 (mul,i32) || 2_1 (sub,i32) == 4_0 (and,i32) || 2_1 (sub,i32) == 5_0 (or,i32) || 2_1 (sub,i32) == 6_0 (xor,i32) || 2_1 (sub,i32) == 7_0 (shl,i32) || 2_1 (sub,i32) == 8_0 (lshr,i32) || 2_1 (sub,i32) == 9_0 (ashr,i32) || 2_1 (sub,i32) == 10_0 (select,i32) || 2_1 (sub,i32) == 11_0 (zext,eq,i32) || 2_1 (sub,i32) == 12_0 (zext,ne,i32) || 2_1 (sub,i32) == 13_0 (zext,ult,i32) || 2_1 (sub,i32) == 14_0 (zext,slt,i32) || 2_1 (sub,i32) == 15_0 (zext,ule,i32) || 2_1 (sub,i32) == 16_0 (zext,sle,i32) || false
2_2 (sub,i32) == 0_1 (input,i32) || 2_2 (sub,i32) == 0_2 (const,i32) || 2_2 (sub,i32) == 0_3 (const,i32) || 2_2 (sub,i32) == 1_0 (add,i32) || 2_2 (sub,i32) == 3_0 (mul,i32) || 2_2 (sub,i32) == 4_0 (and,i32) || 2_2 (sub,i32) == 5_0 (or,i32) || 2_2 (sub,i32) == 6_0 (xor,i32) || 2_2 (sub,i32) == 7_0 (shl,i32) || 2_2 (sub,i32) == 8_0 (lshr,i32) || 2_2 (sub,i32) == 9_0 (ashr,i32) || 2_2 (sub,i32) == 10_0 (select,i32) || 2_2 (sub,i32) == 11_0 (zext,eq,i32) || 2_2 (sub,i32) == 12_0 (zext,ne,i32) || 2_2 (sub,i32) == 13_0 (zext,ult,i32) || 2_2 (sub,i32) == 14_0 (zext,slt,i32) || 2_2 (sub,i32) == 15_0 (zext,ule,i32) || 2_2 (sub,i32) == 16_0 (zext,sle,i32) || false
3_1 (mul,i32) == 0_1 (input,i32) || 3_1 (mul,i32) == 0_2 (const,i32) || 3_1 (mul,i32) == 0_3 (const,i32) || 3_1 (mul,i32) == 1_0 (add,i32) || 3_1 (mul,i32) == 2_0 (sub,i32) || 3_1 (mul,i32) == 4_0 (and,i32) || 3_1 (mul,i32) == 5_0 (or,i32) || 3_1 (mul,i32) == 6_0 (xor,i32) || 3_1 (mul,i32) == 7_0 (shl,i32) || 3_1 (mul,i32) == 8_0 (lshr,i32) || 3_1 (mul,i32) == 9_0 (ashr,i32) || 3_1 (mul,i32) == 10_0 (select,i32) || 3_1 (mul,i32) == 11_0 (zext,eq,i32) || 3_1 (mul,i32) == 12_0 (zext,ne,i32) || 3_1 (mul,i32) == 13_0 (zext,ult,i32) || 3_1 (mul,i32) == 14_0 (zext,slt,i32) || 3_1 (mul,i32) == 15_0 (zext,ule,i32) || 3_1 (mul,i32) == 16_0 (zext,sle,i32) || false
3_2 (mul,i32) == 0_1 (input,i32) || 3_2 (mul,i32) == 0_2 (const,i32) || 3_2 (mul,i32) == 0_3 (const,i32) || 3_2 (mul,i32) == 1_0 (add,i32) || 3_2 (mul,i32) == 2_0 (sub,i32) || 3_2 (mul,i32) == 4_0 (and,i32) || 3_2 (mul,i32) == 5_0 (or,i32) || 3_2 (mul,i32) == 6_0 (xor,i32) || 3_2 (mul,i32) == 7_0 (shl,i32) || 3_2 (mul,i32) == 8_0 (lshr,i32) || 3_2 (mul,i32) == 9_0 (ashr,i32) || 3_2 (mul,i32) == 10_0 (select,i32) || 3_2 (mul,i32) == 11_0 (zext,eq,i32) || 3_2 (mul,i32) == 12_0 (zext,ne,i32) || 3_2 (mul,i32) == 13_0 (zext,ult,i32) || 3_2 (mul,i32) == 14_0 (zext,slt,i32) || 3_2 (mul,i32) == 15_0 (zext,ule,i32) || 3_2 (mul,i32) == 16_0 (zext,sle,i32) || false
4_1 (and,i32) == 0_1 (input,i32) || 4_1 (and,i32) == 0_2 (const,i32) || 4_1 (and,i32) == 0_3 (const,i32) || 4_1 (and,i32) == 1_0 (add,i32) || 4_1 (and,i32) == 2_0 (sub,i32) || 4_1 (and,i32) == 3_0 (mul,i32) || 4_1 (and,i32) == 5_0 (or,i32) || 4_1 (and,i32) == 6_0 (xor,i32) || 4_1 (and,i32) == 7_0 (shl,i32) || 4_1 (and,i32) == 8_0 (lshr,i32) || 4_1 (and,i32) == 9_0 (ashr,i32) || 4_1 (and,i32) == 10_0 (select,i32) || 4_1 (and,i32) == 11_0 (zext,eq,i32) || 4_1 (and,i32) == 12_0 (zext,ne,i32) || 4_1 (and,i32) == 13_0 (zext,ult,i32) || 4_1 (and,i32) == 14_0 (zext,slt,i32) || 4_1 (and,i32) == 15_0 (zext,ule,i32) || 4_1 (and,i32) == 16_0 (zext,sle,i32) || false
4_2 (and,i32) == 0_1 (input,i32) || 4_2 (and,i32) == 0_2 (const,i32) || 4_2 (and,i32) == 0_3 (const,i32) || 4_2 (and,i32) == 1_0 (add,i32) || 4_2 (and,i32) == 2_0 (sub,i32) || 4_2 (and,i32) == 3_0 (mul,i32) || 4_2 (and,i32) == 5_0 (or,i32) || 4_2 (and,i32) == 6_0 (xor,i32) || 4_2 (and,i32) == 7_0 (shl,i32) || 4_2 (and,i32) == 8_0 (lshr,i32) || 4_2 (and,i32) == 9_0 (ashr,i32) || 4_2 (and,i32) == 10_0 (select,i32) || 4_2 (and,i32) == 11_0 (zext,eq,i32) || 4_2 (and,i32) == 12_0 (zext,ne,i32) || 4_2 (and,i32) == 13_0 (zext,ult,i32) || 4_2 (and,i32) == 14_0 (zext,slt,i32) || 4_2 (and,i32) == 15_0 (zext,ule,i32) || 4_2 (and,i32) == 16_0 (zext,sle,i32) || false
5_1 (or,i32) == 0_1 (input,i32) || 5_1 (or,i32) == 0_2 (const,i32) || 5_1 (or,i32) == 0_3 (const,i32) || 5_1 (or,i32) == 1_0 (add,i32) || 5_1 (or,i32) == 2_0 (sub,i32) || 5_1 (or,i32) == 3_0 (mul,i32) || 5_1 (or,i32) == 4_0 (and,i32) || 5_1 (or,i32) == 6_0 (xor,i32) || 5_1 (or,i32) == 7_0 (shl,i32) || 5_1 (or,i32) == 8_0 (lshr,i32) || 5_1 (or,i32) == 9_0 (ashr,i32) || 5_1 (or,i32) == 10_0 (select,i32) || 5_1 (or,i32) == 11_0 (zext,eq,i32) || 5_1 (or,i32) == 12_0 (zext,ne,i32) || 5_1 (or,i32) == 13_0 (zext,ult,i32) || 5_1 (or,i32) == 14_0 (zext,slt,i32) || 5_1 (or,i32) == 15_0 (zext,ule,i32) || 5_1 (or,i32) == 16_0 (zext,sle,i32) || false
5_2 (or,i32) == 0_1 (input,i32) || 5_2 (or,i32) == 0_2 (const,i32) || 5_2 (or,i32) == 0_3 (const,i32) || 5_2 (or,i32) == 1_0 (add,i32) || 5_2 (or,i32) == 2_0 (sub,i32) || 5_2 (or,i32) == 3_0 (mul,i32) || 5_2 (or,i32) == 4_0 (and,i32) || 5_2 (or,i32) == 6_0 (xor,i32) || 5_2 (or,i32) == 7_0 (shl,i32) || 5_2 (or,i32) == 8_0 (lshr,i32) || 5_2 (or,i32) == 9_0 (ashr,i32) || 5_2 (or,i32) == 10_0 (select,i32) || 5_2 (or,i32) == 11_0 (zext,eq,i32) || 5_2 (or,i32) == 12_0 (zext,ne,i32) || 5_2 (or,i32) == 13_0 (zext,ult,i32) || 5_2 (or,i32) == 14_0 (zext,slt,i32) || 5_2 (or,i32) == 15_0 (zext,ule,i32) || 5_2 (or,i32) == 16_0 (zext,sle,i32) || false
6_1 (xor,i32) == 0_1 (input,i32) || 6_1 (xor,i32) == 0_2 (const,i32) || 6_1 (xor,i32) == 0_3 (const,i32) || 6_1 (xor,i32) == 1_0 (add,i32) || 6_1 (xor,i32) == 2_0 (sub,i32) || 6_1 (xor,i32) == 3_0 (mul,i32) || 6_1 (xor,i32) == 4_0 (and,i32) || 6_1 (xor,i32) == 5_0 (or,i32) || 6_1 (xor,i32) == 7_0 (shl,i32) || 6_1 (xor,i32) == 8_0 (lshr,i32) || 6_1 (xor,i32) == 9_0 (ashr,i32) || 6_1 (xor,i32) == 10_0 (select,i32) || 6_1 (xor,i32) == 11_0 (zext,eq,i32) || 6_1 (xor,i32) == 12_0 (zext,ne,i32) || 6_1 (xor,i32) == 13_0 (zext,ult,i32) || 6_1 (xor,i32) == 14_0 (zext,slt,i32) || 6_1 (xor,i32) == 15_0 (zext,ule,i32) || 6_1 (xor,i32) == 16_0 (zext,sle,i32) || false
6_2 (xor,i32) == 0_1 (input,i32) || 6_2 (xor,i32) == 0_2 (const,i32) || 6_2 (xor,i32) == 0_3 (const,i32) || 6_2 (xor,i32) == 1_0 (add,i32) || 6_2 (xor,i32) == 2_0 (sub,i32) || 6_2 (xor,i32) == 3_0 (mul,i32) || 6_2 (xor,i32) == 4_0 (and,i32) || 6_2 (xor,i32) == 5_0 (or,i32) || 6_2 (xor,i32) == 7_0 (shl,i32) || 6_2 (xor,i32) == 8_0 (lshr,i32) || 6_2 (xor,i32) == 9_0 (ashr,i32) || 6_2 (xor,i32) == 10_0 (select,i32) || 6_2 (xor,i32) == 11_0 (zext,eq,i32) || 6_2 (xor,i32) == 12_0 (zext,ne,i32) || 6_2 (xor,i32) == 13_0 (zext,ult,i32) || 6_2 (xor,i32) == 14_0 (zext,slt,i32) || 6_2 (xor,i32) == 15_0 (zext,ule,i32) || 6_2 (xor,i32) == 16_0 (zext,sle,i32) || false
7_1 (shl,i32) == 0_1 (input,i32) || 7_1 (shl,i32) == 0_2 (const,i32) || 7_1 (shl,i32) == 0_3 (const,i32) || 7_1 (shl,i32) == 1_0 (add,i32) || 7_1 (shl,i32) == 2_0 (sub,i32) || 7_1 (shl,i32) == 3_0 (mul,i32) || 7_1 (shl,i32) == 4_0 (and,i32) || 7_1 (shl,i32) == 5_0 (or,i32) || 7_1 (shl,i32) == 6_0 (xor,i32) || 7_1 (shl,i32) == 8_0 (lshr,i32) || 7_1 (shl,i32) == 9_0 (ashr,i32) || 7_1 (shl,i32) == 10_0 (select,i32) || 7_1 (shl,i32) == 11_0 (zext,eq,i32) || 7_1 (shl,i32) == 12_0 (zext,ne,i32) || 7_1 (shl,i32) == 13_0 (zext,ult,i32) || 7_1 (shl,i32) == 14_0 (zext,slt,i32) || 7_1 (shl,i32) == 15_0 (zext,ule,i32) || 7_1 (shl,i32) == 16_0 (zext,sle,i32) || false
7_2 (shl,i32) == 0_1 (input,i32) || 7_2 (shl,i32) == 0_2 (const,i32) || 7_2 (shl,i32) == 0_3 (const,i32) || 7_2 (shl,i32) == 1_0 (add,i32) || 7_2 (shl,i32) == 2_0 (sub,i32) || 7_2 (shl,i32) == 3_0 (mul,i32) || 7_2 (shl,i32) == 4_0 (and,i32) || 7_2 (shl,i32) == 5_0 (or,i32) || 7_2 (shl,i32) == 6_0 (xor,i32) || 7_2 (shl,i32) == 8_0 (lshr,i32) || 7_2 (shl,i32) == 9_0 (ashr,i32) || 7_2 (shl,i32) == 10_0 (select,i32) || 7_2 (shl,i32) == 11_0 (zext,eq,i32) || 7_2 (shl,i32) == 12_0 (zext,ne,i32) || 7_2 (shl,i32) == 13_0 (zext,ult,i32) || 7_2 (shl,i32) == 14_0 (zext,slt,i32) || 7_2 (shl,i32) == 15_0 (zext,ule,i32) || 7_2 (shl,i32) == 16_0 (zext,sle,i32) || false
8_1 (lshr,i32) == 0_1 (input,i32) || 8_1 (lshr,i32) == 0_2 (const,i32) || 8_1 (lshr,i32) == 0_3 (const,i32) || 8_1 (lshr,i32) == 1_0 (add,i32) || 8_1 (lshr,i32) == 2_0 (sub,i32) || 8_1 (lshr,i32) == 3_0 (mul,i32) || 8_1 (lshr,i32) == 4_0 (and,i32) || 8_1 (lshr,i32) == 5_0 (or,i32) || 8_1 (lshr,i32) == 6_0 (xor,i32) || 8_1 (lshr,i32) == 7_0 (shl,i32) || 8_1 (lshr,i32) == 9_0 (ashr,i32) || 8_1 (lshr,i32) == 10_0 (select,i32) || 8_1 (lshr,i32) == 11_0 (zext,eq,i32) || 8_1 (lshr,i32) == 12_0 (zext,ne,i32) || 8_1 (lshr,i32) == 13_0 (zext,ult,i32) || 8_1 (lshr,i32) == 14_0 (zext,slt,i32) || 8_1 (lshr,i32) == 15_0 (zext,ule,i32) || 8_1 (lshr,i32) == 16_0 (zext,sle,i32) || false
8_2 (lshr,i32) == 0_1 (input,i32) || 8_2 (lshr,i32) == 0_2 (const,i32) || 8_2 (lshr,i32) == 0_3 (const,i32) || 8_2 (lshr,i32) == 1_0 (add,i32) || 8_2 (lshr,i32) == 2_0 (sub,i32) || 8_2 (lshr,i32) == 3_0 (mul,i32) || 8_2 (lshr,i32) == 4_0 (and,i32) || 8_2 (lshr,i32) == 5_0 (or,i32) || 8_2 (lshr,i32) == 6_0 (xor,i32) || 8_2 (lshr,i32) == 7_0 (shl,i32) || 8_2 (lshr,i32) == 9_0 (ashr,i32) || 8_2 (lshr,i32) == 10_0 (select,i32) || 8_2 (lshr,i32) == 11_0 (zext,eq,i32) || 8_2 (lshr,i32) == 12_0 (zext,ne,i32) || 8_2 (lshr,i32) == 13_0 (zext,ult,i32) || 8_2 (lshr,i32) == 14_0 (zext,slt,i32) || 8_2 (lshr,i32) == 15_0 (zext,ule,i32) || 8_2 (lshr,i32) == 16_0 (zext,sle,i32) || false
9_1 (ashr,i32) == 0_1 (input,i32) || 9_1 (ashr,i32) == 0_2 (const,i32) || 9_1 (ashr,i32) == 0_3 (const,i32) || 9_1 (ashr,i32) == 1_0 (add,i32) || 9_1 (ashr,i32) == 2_0 (sub,i32) || 9_1 (ashr,i32) == 3_0 (mul,i32) || 9_1 (ashr,i32) == 4_0 (and,i32) || 9_1 (ashr,i32) == 5_0 (or,i32) || 9_1 (ashr,i32) == 6_0 (xor,i32) || 9_1 (ashr,i32) == 7_0 (shl,i32) || 9_1 (ashr,i32) == 8_0 (lshr,i32) || 9_1 (ashr,i32) == 10_0 (select,i32) || 9_1 (ashr,i32) == 11_0 (zext,eq,i32) || 9_1 (ashr,i32) == 12_0 (zext,ne,i32) || 9_1 (ashr,i32) == 13_0 (zext,ult,i32) || 9_1 (ashr,i32) == 14_0 (zext,slt,i32) || 9_1 (ashr,i32) == 15_0 (zext,ule,i32) || 9_1 (ashr,i32) == 16_0 (zext,sle,i32) || false
9_2 (ashr,i32) == 0_1 (input,i32) || 9_2 (ashr,i32) == 0_2 (const,i32) || 9_2 (ashr,i32) == 0_3 (const,i32) || 9_2 (ashr,i32) == 1_0 (add,i32) || 9_2 (ashr,i32) == 2_0 (sub,i32) || 9_2 (ashr,i32) == 3_0 (mul,i32) || 9_2 (ashr,i32) == 4_0 (and,i32) || 9_2 (ashr,i32) == 5_0 (or,i32) || 9_2 (ashr,i32) == 6_0 (xor,i32) || 9_2 (ashr,i32) == 7_0 (shl,i32) || 9_2 (ashr,i32) == 8_0 (lshr,i32) || 9_2 (ashr,i32) == 10_0 (select,i32) || 9_2 (ashr,i32) == 11_0 (zext,eq,i32) || 9_2 (ashr,i32) == 12_0 (zext,ne,i32) || 9_2 (ashr,i32) == 13_0 (zext,ult,i32) || 9_2 (ashr,i32) == 14_0 (zext,slt,i32) || 9_2 (ashr,i32) == 15_0 (zext,ule,i32) || 9_2 (ashr,i32) == 16_0 (zext,sle,i32) || false
10_1 (select,i32) == 1_0 (add,i32) || 10_1 (select,i32) == 2_0 (sub,i32) || 10_1 (select,i32) == 3_0 (mul,i32) || 10_1 (select,i32) == 4_0 (and,i32) || 10_1 (select,i32) == 5_0 (or,i32) || 10_1 (select,i32) == 6_0 (xor,i32) || 10_1 (select,i32) == 7_0 (shl,i32) || 10_1 (select,i32) == 8_0 (lshr,i32) || 10_1 (select,i32) == 9_0 (ashr,i32) || 10_1 (select,i32) == 11_0 (zext,eq,i32) || 10_1 (select,i32) == 12_0 (zext,ne,i32) || 10_1 (select,i32) == 13_0 (zext,ult,i32) || 10_1 (select,i32) == 14_0 (zext,slt,i32) || 10_1 (select,i32) == 15_0 (zext,ule,i32) || 10_1 (select,i32) == 16_0 (zext,sle,i32) || false
10_2 (select,i32) == 0_1 (input,i32) || 10_2 (select,i32) == 0_2 (const,i32) || 10_2 (select,i32) == 0_3 (const,i32) || 10_2 (select,i32) == 1_0 (add,i32) || 10_2 (select,i32) == 2_0 (sub,i32) || 10_2 (select,i32) == 3_0 (mul,i32) || 10_2 (select,i32) == 4_0 (and,i32) || 10_2 (select,i32) == 5_0 (or,i32) || 10_2 (select,i32) == 6_0 (xor,i32) || 10_2 (select,i32) == 7_0 (shl,i32) || 10_2 (select,i32) == 8_0 (lshr,i32) || 10_2 (select,i32) == 9_0 (ashr,i32) || 10_2 (select,i32) == 11_0 (zext,eq,i32) || 10_2 (select,i32) == 12_0 (zext,ne,i32) || 10_2 (select,i32) == 13_0 (zext,ult,i32) || 10_2 (select,i32) == 14_0 (zext,slt,i32) || 10_2 (select,i32) == 15_0 (zext,ule,i32) || 10_2 (select,i32) == 16_0 (zext,sle,i32) || false
10_3 (select,i32) == 0_1 (input,i32) || 10_3 (select,i32) == 0_2 (const,i32) || 10_3 (select,i32) == 0_3 (const,i32) || 10_3 (select,i32) == 1_0 (add,i32) || 10_3 (select,i32) == 2_0 (sub,i32) || 10_3 (select,i32) == 3_0 (mul,i32) || 10_3 (select,i32) == 4_0 (and,i32) || 10_3 (select,i32) == 5_0 (or,i32) || 10_3 (select,i32) == 6_0 (xor,i32) || 10_3 (select,i32) == 7_0 (shl,i32) || 10_3 (select,i32) == 8_0 (lshr,i32) || 10_3 (select,i32) == 9_0 (ashr,i32) || 10_3 (select,i32) == 11_0 (zext,eq,i32) || 10_3 (select,i32) == 12_0 (zext,ne,i32) || 10_3 (select,i32) == 13_0 (zext,ult,i32) || 10_3 (select,i32) == 14_0 (zext,slt,i32) || 10_3 (select,i32) == 15_0 (zext,ule,i32) || 10_3 (select,i32) == 16_0 (zext,sle,i32) || false
11_1 (eq,i32) == 0_1 (input,i32) || 11_1 (eq,i32) == 0_2 (const,i32) || 11_1 (eq,i32) == 0_3 (const,i32) || 11_1 (eq,i32) == 1_0 (add,i32) || 11_1 (eq,i32) == 2_0 (sub,i32) || 11_1 (eq,i32) == 3_0 (mul,i32) || 11_1 (eq,i32) == 4_0 (and,i32) || 11_1 (eq,i32) == 5_0 (or,i32) || 11_1 (eq,i32) == 6_0 (xor,i32) || 11_1 (eq,i32) == 7_0 (shl,i32) || 11_1 (eq,i32) == 8_0 (lshr,i32) || 11_1 (eq,i32) == 9_0 (ashr,i32) || 11_1 (eq,i32) == 10_0 (select,i32) || 11_1 (eq,i32) == 12_0 (zext,ne,i32) || 11_1 (eq,i32) == 13_0 (zext,ult,i32) || 11_1 (eq,i32) == 14_0 (zext,slt,i32) || 11_1 (eq,i32) == 15_0 (zext,ule,i32) || 11_1 (eq,i32) == 16_0 (zext,sle,i32) || false
11_2 (eq,i32) == 0_1 (input,i32) || 11_2 (eq,i32) == 0_2 (const,i32) || 11_2 (eq,i32) == 0_3 (const,i32) || 11_2 (eq,i32) == 1_0 (add,i32) || 11_2 (eq,i32) == 2_0 (sub,i32) || 11_2 (eq,i32) == 3_0 (mul,i32) || 11_2 (eq,i32) == 4_0 (and,i32) || 11_2 (eq,i32) == 5_0 (or,i32) || 11_2 (eq,i32) == 6_0 (xor,i32) || 11_2 (eq,i32) == 7_0 (shl,i32) || 11_2 (eq,i32) == 8_0 (lshr,i32) || 11_2 (eq,i32) == 9_0 (ashr,i32) || 11_2 (eq,i32) == 10_0 (select,i32) || 11_2 (eq,i32) == 12_0 (zext,ne,i32) || 11_2 (eq,i32) == 13_0 (zext,ult,i32) || 11_2 (eq,i32) == 14_0 (zext,slt,i32) || 11_2 (eq,i32) == 15_0 (zext,ule,i32) || 11_2 (eq,i32) == 16_0 (zext,sle,i32) || false
12_1 (ne,i32) == 0_1 (input,i32) || 12_1 (ne,i32) == 0_2 (const,i32) || 12_1 (ne,i32) == 0_3 (const,i32) || 12_1 (ne,i32) == 1_0 (add,i32) || 12_1 (ne,i32) == 2_0 (sub,i32) || 12_1 (ne,i32) == 3_0 (mul,i32) || 12_1 (ne,i32) == 4_0 (and,i32) || 12_1 (ne,i32) == 5_0 (or,i32) || 12_1 (ne,i32) == 6_0 (xor,i32) || 12_1 (ne,i32) == 7_0 (shl,i32) || 12_1 (ne,i32) == 8_0 (lshr,i32) || 12_1 (ne,i32) == 9_0 (ashr,i32) || 12_1 (ne,i32) == 10_0 (select,i32) || 12_1 (ne,i32) == 11_0 (zext,eq,i32) || 12_1 (ne,i32) == 13_0 (zext,ult,i32) || 12_1 (ne,i32) == 14_0 (zext,slt,i32) || 12_1 (ne,i32) == 15_0 (zext,ule,i32) || 12_1 (ne,i32) == 16_0 (zext,sle,i32) || false
12_2 (ne,i32) == 0_1 (input,i32) || 12_2 (ne,i32) == 0_2 (const,i32) || 12_2 (ne,i32) == 0_3 (const,i32) || 12_2 (ne,i32) == 1_0 (add,i32) || 12_2 (ne,i32) == 2_0 (sub,i32) || 12_2 (ne,i32) == 3_0 (mul,i32) || 12_2 (ne,i32) == 4_0 (and,i32) || 12_2 (ne,i32) == 5_0 (or,i32) || 12_2 (ne,i32) == 6_0 (xor,i32) || 12_2 (ne,i32) == 7_0 (shl,i32) || 12_2 (ne,i32) == 8_0 (lshr,i32) || 12_2 (ne,i32) == 9_0 (ashr,i32) || 12_2 (ne,i32) == 10_0 (select,i32) || 12_2 (ne,i32) == 11_0 (zext,eq,i32) || 12_2 (ne,i32) == 13_0 (zext,ult,i32) || 12_2 (ne,i32) == 14_0 (zext,slt,i32) || 12_2 (ne,i32) == 15_0 (zext,ule,i32) || 12_2 (ne,i32) == 16_0 (zext,sle,i32) || false
13_1 (ult,i32) == 0_1 (input,i32) || 13_1 (ult,i32) == 0_2 (const,i32) || 13_1 (ult,i32) == 0_3 (const,i32) || 13_1 (ult,i32) == 1_0 (add,i32) || 13_1 (ult,i32) == 2_0 (sub,i32) || 13_1 (ult,i32) == 3_0 (mul,i32) || 13_1 (ult,i32) == 4_0 (and,i32) || 13_1 (ult,i32) == 5_0 (or,i32) || 13_1 (ult,i32) == 6_0 (xor,i32) || 13_1 (ult,i32) == 7_0 (shl,i32) || 13_1 (ult,i32) == 8_0 (lshr,i32) || 13_1 (ult,i32) == 9_0 (ashr,i32) || 13_1 (ult,i32) == 10_0 (select,i32) || 13_1 (ult,i32) == 11_0 (zext,eq,i32) || 13_1 (ult,i32) == 12_0 (zext,ne,i32) || 13_1 (ult,i32) == 14_0 (zext,slt,i32) || 13_1 (ult,i32) == 15_0 (zext,ule,i32) || 13_1 (ult,i32) == 16_0 (zext,sle,i32) || false
13_2 (ult,i32) == 0_1 (input,i32) || 13_2 (ult,i32) == 0_2 (const,i32) || 13_2 (ult,i32) == 0_3 (const,i32) || 13_2 (ult,i32) == 1_0 (add,i32) || 13_2 (ult,i32) == 2_0 (sub,i32) || 13_2 (ult,i32) == 3_0 (mul,i32) || 13_2 (ult,i32) == 4_0 (and,i32) || 13_2 (ult,i32) == 5_0 (or,i32) || 13_2 (ult,i32) == 6_0 (xor,i32) || 13_2 (ult,i32) == 7_0 (shl,i32) || 13_2 (ult,i32) == 8_0 (lshr,i32) || 13_2 (ult,i32) == 9_0 (ashr,i32) || 13_2 (ult,i32) == 10_0 (select,i32) || 13_2 (ult,i32) == 11_0 (zext,eq,i32) || 13_2 (ult,i32) == 12_0 (zext,ne,i32) || 13_2 (ult,i32) == 14_0 (zext,slt,i32) || 13_2 (ult,i32) == 15_0 (zext,ule,i32) || 13_2 (ult,i32) == 16_0 (zext,sle,i32) || false
14_1 (slt,i32) == 0_1 (input,i32) || 14_1 (slt,i32) == 0_2 (const,i32) || 14_1 (slt,i32) == 0_3 (const,i32) || 14_1 (slt,i32) == 1_0 (add,i32) || 14_1 (slt,i32) == 2_0 (sub,i32) || 14_1 (slt,i32) == 3_0 (mul,i32) || 14_1 (slt,i32) == 4_0 (and,i32) || 14_1 (slt,i32) == 5_0 (or,i32) || 14_1 (slt,i32) == 6_0 (xor,i32) || 14_1 (slt,i32) == 7_0 (shl,i32) || 14_1 (slt,i32) == 8_0 (lshr,i32) || 14_1 (slt,i32) == 9_0 (ashr,i32) || 14_1 (slt,i32) == 10_0 (select,i32) || 14_1 (slt,i32) == 11_0 (zext,eq,i32) || 14_1 (slt,i32) == 12_0 (zext,ne,i32) || 14_1 (slt,i32) == 13_0 (zext,ult,i32) || 14_1 (slt,i32) == 15_0 (zext,ule,i32) || 14_1 (slt,i32) == 16_0 (zext,sle,i32) || false
14_2 (slt,i32) == 0_1 (input,i32) || 14_2 (slt,i32) == 0_2 (const,i32) || 14_2 (slt,i32) == 0_3 (const,i32) || 14_2 (slt,i32) == 1_0 (add,i32) || 14_2 (slt,i32) == 2_0 (sub,i32) || 14_2 (slt,i32) == 3_0 (mul,i32) || 14_2 (slt,i32) == 4_0 (and,i32) || 14_2 (slt,i32) == 5_0 (or,i32) || 14_2 (slt,i32) == 6_0 (xor,i32) || 14_2 (slt,i32) == 7_0 (shl,i32) || 14_2 (slt,i32) == 8_0 (lshr,i32) || 14_2 (slt,i32) == 9_0 (ashr,i32) || 14_2 (slt,i32) == 10_0 (select,i32) || 14_2 (slt,i32) == 11_0 (zext,eq,i32) || 14_2 (slt,i32) == 12_0 (zext,ne,i32) || 14_2 (slt,i32) == 13_0 (zext,ult,i32) || 14_2 (slt,i32) == 15_0 (zext,ule,i32) || 14_2 (slt,i32) == 16_0 (zext,sle,i32) || false
15_1 (ule,i32) == 0_1 (input,i32) || 15_1 (ule,i32) == 0_2 (const,i32) || 15_1 (ule,i32) == 0_3 (const,i32) || 15_1 (ule,i32) == 1_0 (add,i32) || 15_1 (ule,i32) == 2_0 (sub,i32) || 15_1 (ule,i32) == 3_0 (mul,i32) || 15_1 (ule,i32) == 4_0 (and,i32) || 15_1 (ule,i32) == 5_0 (or,i32) || 15_1 (ule,i32) == 6_0 (xor,i32) || 15_1 (ule,i32) == 7_0 (shl,i32) || 15_1 (ule,i32) == 8_0 (lshr,i32) || 15_1 (ule,i32) == 9_0 (ashr,i32) || 15_1 (ule,i32) == 10_0 (select,i32) || 15_1 (ule,i32) == 11_0 (zext,eq,i32) || 15_1 (ule,i32) == 12_0 (zext,ne,i32) || 15_1 (ule,i32) == 13_0 (zext,ult,i32) || 15_1 (ule,i32) == 14_0 (zext,slt,i32) || 15_1 (ule,i32) == 16_0 (zext,sle,i32) || false
15_2 (ule,i32) == 0_1 (input,i32) || 15_2 (ule,i32) == 0_2 (const,i32) || 15_2 (ule,i32) == 0_3 (const,i32) || 15_2 (ule,i32) == 1_0 (add,i32) || 15_2 (ule,i32) == 2_0 (sub,i32) || 15_2 (ule,i32) == 3_0 (mul,i32) || 15_2 (ule,i32) == 4_0 (and,i32) || 15_2 (ule,i32) == 5_0 (or,i32) || 15_2 (ule,i32) == 6_0 (xor,i32) || 15_2 (ule,i32) == 7_0 (shl,i32) || 15_2 (ule,i32) == 8_0 (lshr,i32) || 15_2 (ule,i32) == 9_0 (ashr,i32) || 15_2 (ule,i32) == 10_0 (select,i32) || 15_2 (ule,i32) == 11_0 (zext,eq,i32) || 15_2 (ule,i32) == 12_0 (zext,ne,i32) || 15_2 (ule,i32) == 13_0 (zext,ult,i32) || 15_2 (ule,i32) == 14_0 (zext,slt,i32) || 15_2 (ule,i32) == 16_0 (zext,sle,i32) || false
16_1 (sle,i32) == 0_1 (input,i32) || 16_1 (sle,i32) == 0_2 (const,i32) || 16_1 (sle,i32) == 0_3 (const,i32) || 16_1 (sle,i32) == 1_0 (add,i32) || 16_1 (sle,i32) == 2_0 (sub,i32) || 16_1 (sle,i32) == 3_0 (mul,i32) || 16_1 (sle,i32) == 4_0 (and,i32) || 16_1 (sle,i32) == 5_0 (or,i32) || 16_1 (sle,i32) == 6_0 (xor,i32) || 16_1 (sle,i32) == 7_0 (shl,i32) || 16_1 (sle,i32) == 8_0 (lshr,i32) || 16_1 (sle,i32) == 9_0 (ashr,i32) || 16_1 (sle,i32) == 10_0 (select,i32) || 16_1 (sle,i32) == 11_0 (zext,eq,i32) || 16_1 (sle,i32) == 12_0 (zext,ne,i32) || 16_1 (sle,i32) == 13_0 (zext,ult,i32) || 16_1 (sle,i32) == 14_0 (zext,slt,i32) || 16_1 (sle,i32) == 15_0 (zext,ule,i32) || false
16_2 (sle,i32) == 0_1 (input,i32) || 16_2 (sle,i32) == 0_2 (const,i32) || 16_2 (sle,i32) == 0_3 (const,i32) || 16_2 (sle,i32) == 1_0 (add,i32) || 16_2 (sle,i32) == 2_0 (sub,i32) || 16_2 (sle,i32) == 3_0 (mul,i32) || 16_2 (sle,i32) == 4_0 (and,i32) || 16_2 (sle,i32) == 5_0 (or,i32) || 16_2 (sle,i32) == 6_0 (xor,i32) || 16_2 (sle,i32) == 7_0 (shl,i32) || 16_2 (sle,i32) == 8_0 (lshr,i32) || 16_2 (sle,i32) == 9_0 (ashr,i32) || 16_2 (sle,i32) == 10_0 (select,i32) || 16_2 (sle,i32) == 11_0 (zext,eq,i32) || 16_2 (sle,i32) == 12_0 (zext,ne,i32) || 16_2 (sle,i32) == 13_0 (zext,ult,i32) || 16_2 (sle,i32) == 14_0 (zext,slt,i32) || 16_2 (sle,i32) == 15_0 (zext,ule,i32) || false
17_1 (trunc,i32) == 0_1 (input,i32) || 17_1 (trunc,i32) == 0_2 (const,i32) || 17_1 (trunc,i32) == 0_3 (const,i32) || 17_1 (trunc,i32) == 1_0 (add,i32) || 17_1 (trunc,i32) == 2_0 (sub,i32) || 17_1 (trunc,i32) == 3_0 (mul,i32) || 17_1 (trunc,i32) == 4_0 (and,i32) || 17_1 (trunc,i32) == 5_0 (or,i32) || 17_1 (trunc,i32) == 6_0 (xor,i32) || 17_1 (trunc,i32) == 7_0 (shl,i32) || 17_1 (trunc,i32) == 8_0 (lshr,i32) || 17_1 (trunc,i32) == 9_0 (ashr,i32) || 17_1 (trunc,i32) == 10_0 (select,i32) || 17_1 (trunc,i32) == 11_0 (zext,eq,i32) || 17_1 (trunc,i32) == 12_0 (zext,ne,i32) || 17_1 (trunc,i32) == 13_0 (zext,ult,i32) || 17_1 (trunc,i32) == 14_0 (zext,slt,i32) || 17_1 (trunc,i32) == 15_0 (zext,ule,i32) || 17_1 (trunc,i32) == 16_0 (zext,sle,i32) || false
component const input constraints:
1_1 (add,i32) == 0_2 (const,i32) || 1_1 (add,i32) == 0_3 (const,i32) || false
1_2 (add,i32) == 0_2 (const,i32) || 1_2 (add,i32) == 0_3 (const,i32) || false
false
2_1 (sub,i32) == 0_2 (const,i32) || 2_1 (sub,i32) == 0_3 (const,i32) || false
2_2 (sub,i32) == 0_2 (const,i32) || 2_2 (sub,i32) == 0_3 (const,i32) || false
false
3_1 (mul,i32) == 0_2 (const,i32) || 3_1 (mul,i32) == 0_3 (const,i32) || false
3_2 (mul,i32) == 0_2 (const,i32) || 3_2 (mul,i32) == 0_3 (const,i32) || false
false
4_1 (and,i32) == 0_2 (const,i32) || 4_1 (and,i32) == 0_3 (const,i32) || false
4_2 (and,i32) == 0_2 (const,i32) || 4_2 (and,i32) == 0_3 (const,i32) || false
false
5_1 (or,i32) == 0_2 (const,i32) || 5_1 (or,i32) == 0_3 (const,i32) || false
5_2 (or,i32) == 0_2 (const,i32) || 5_2 (or,i32) == 0_3 (const,i32) || false
false
6_1 (xor,i32) == 0_2 (const,i32) || 6_1 (xor,i32) == 0_3 (const,i32) || false
6_2 (xor,i32) == 0_2 (const,i32) || 6_2 (xor,i32) == 0_3 (const,i32) || false
false
7_1 (shl,i32) == 0_2 (const,i32) || 7_1 (shl,i32) == 0_3 (const,i32) || false
7_2 (shl,i32) == 0_2 (const,i32) || 7_2 (shl,i32) == 0_3 (const,i32) || false
false
8_1 (lshr,i32) == 0_2 (const,i32) || 8_1 (lshr,i32) == 0_3 (const,i32) || false
8_2 (lshr,i32) == 0_2 (const,i32) || 8_2 (lshr,i32) == 0_3 (const,i32) || false
false
9_1 (ashr,i32) == 0_2 (const,i32) || 9_1 (ashr,i32) == 0_3 (const,i32) || false
9_2 (ashr,i32) == 0_2 (const,i32) || 9_2 (ashr,i32) == 0_3 (const,i32) || false
false
false
10_2 (select,i32) == 0_2 (const,i32) || 10_2 (select,i32) == 0_3 (const,i32) || false
10_3 (select,i32) == 0_2 (const,i32) || 10_3 (select,i32) == 0_3 (const,i32) || false
false
11_1 (eq,i32) == 0_2 (const,i32) || 11_1 (eq,i32) == 0_3 (const,i32) || false
11_2 (eq,i32) == 0_2 (const,i32) || 11_2 (eq,i32) == 0_3 (const,i32) || false
false
12_1 (ne,i32) == 0_2 (const,i32) || 12_1 (ne,i32) == 0_3 (const,i32) || false
12_2 (ne,i32) == 0_2 (const,i32) || 12_2 (ne,i32) == 0_3 (const,i32) || false
false
13_1 (ult,i32) == 0_2 (const,i32) || 13_1 (ult,i32) == 0_3 (const,i32) || false
13_2 (ult,i32) == 0_2 (const,i32) || 13_2 (ult,i32) == 0_3 (const,i32) || false
false
14_1 (slt,i32) == 0_2 (const,i32) || 14_1 (slt,i32) == 0_3 (const,i32) || false
14_2 (slt,i32) == 0_2 (const,i32) || 14_2 (slt,i32) == 0_3 (const,i32) || false
false
15_1 (ule,i32) == 0_2 (const,i32) || 15_1 (ule,i32) == 0_3 (const,i32) || false
15_2 (ule,i32) == 0_2 (const,i32) || 15_2 (ule,i32) == 0_3 (const,i32) || false
false
16_1 (sle,i32) == 0_2 (const,i32) || 16_1 (sle,i32) == 0_3 (const,i32) || false
16_2 (sle,i32) == 0_2 (const,i32) || 16_2 (sle,i32) == 0_3 (const,i32) || false
false
17_1 (trunc,i32) == 0_2 (const,i32) || 17_1 (trunc,i32) == 0_3 (const,i32) || false
false
component output constraints:
18_0 (output,i1) == 17_0 (trunc,i1) || false
possible wirings:
0_1 (input,i32) == 1_1 (add,i32)
0_1 (input,i32) == 1_2 (add,i32)
0_1 (input,i32) == 2_1 (sub,i32)
0_1 (input,i32) == 2_2 (sub,i32)
0_1 (input,i32) == 3_1 (mul,i32)
0_1 (input,i32) == 3_2 (mul,i32)
0_1 (input,i32) == 4_1 (and,i32)
0_1 (input,i32) == 4_2 (and,i32)
0_1 (input,i32) == 5_1 (or,i32)
0_1 (input,i32) == 5_2 (or,i32)
0_1 (input,i32) == 6_1 (xor,i32)
0_1 (input,i32) == 6_2 (xor,i32)
0_1 (input,i32) == 7_1 (shl,i32)
0_1 (input,i32) == 7_2 (shl,i32)
0_1 (input,i32) == 8_1 (lshr,i32)
0_1 (input,i32) == 8_2 (lshr,i32)
0_1 (input,i32) == 9_1 (ashr,i32)
0_1 (input,i32) == 9_2 (ashr,i32)
0_1 (input,i32) == 10_2 (select,i32)
0_1 (input,i32) == 10_3 (select,i32)
0_1 (input,i32) == 11_1 (eq,i32)
0_1 (input,i32) == 11_2 (eq,i32)
0_1 (input,i32) == 12_1 (ne,i32)
0_1 (input,i32) == 12_2 (ne,i32)
0_1 (input,i32) == 13_1 (ult,i32)
0_1 (input,i32) == 13_2 (ult,i32)
0_1 (input,i32) == 14_1 (slt,i32)
0_1 (input,i32) == 14_2 (slt,i32)
0_1 (input,i32) == 15_1 (ule,i32)
0_1 (input,i32) == 15_2 (ule,i32)
0_1 (input,i32) == 16_1 (sle,i32)
0_1 (input,i32) == 16_2 (sle,i32)
0_1 (input,i32) == 17_1 (trunc,i32)
0_2 (const,i32) == 1_1 (add,i32)
0_2 (const,i32) == 1_2 (add,i32)
0_2 (const,i32) == 2_1 (sub,i32)
0_2 (const,i32) == 2_2 (sub,i32)
0_2 (const,i32) == 3_1 (mul,i32)
0_2 (const,i32) == 3_2 (mul,i32)
0_2 (const,i32) == 4_1 (and,i32)
0_2 (const,i32) == 4_2 (and,i32)
0_2 (const,i32) == 5_1 (or,i32)
0_2 (const,i32) == 5_2 (or,i32)
0_2 (const,i32) == 6_1 (xor,i32)
0_2 (const,i32) == 6_2 (xor,i32)
0_2 (const,i32) == 7_1 (shl,i32)
0_2 (const,i32) == 7_2 (shl,i32)
0_2 (const,i32) == 8_1 (lshr,i32)
0_2 (const,i32) == 8_2 (lshr,i32)
0_2 (const,i32) == 9_1 (ashr,i32)
0_2 (const,i32) == 9_2 (ashr,i32)
0_2 (const,i32) == 10_2 (select,i32)
0_2 (const,i32) == 10_3 (select,i32)
0_2 (const,i32) == 11_1 (eq,i32)
0_2 (const,i32) == 11_2 (eq,i32)
0_2 (const,i32) == 12_1 (ne,i32)
0_2 (const,i32) == 12_2 (ne,i32)
0_2 (const,i32) == 13_1 (ult,i32)
0_2 (const,i32) == 13_2 (ult,i32)
0_2 (const,i32) == 14_1 (slt,i32)
0_2 (const,i32) == 14_2 (slt,i32)
0_2 (const,i32) == 15_1 (ule,i32)
0_2 (const,i32) == 15_2 (ule,i32)
0_2 (const,i32) == 16_1 (sle,i32)
0_2 (const,i32) == 16_2 (sle,i32)
0_2 (const,i32) == 17_1 (trunc,i32)
0_3 (const,i32) == 1_1 (add,i32)
0_3 (const,i32) == 1_2 (add,i32)
0_3 (const,i32) == 2_1 (sub,i32)
0_3 (const,i32) == 2_2 (sub,i32)
0_3 (const,i32) == 3_1 (mul,i32)
0_3 (const,i32) == 3_2 (mul,i32)
0_3 (const,i32) == 4_1 (and,i32)
0_3 (const,i32) == 4_2 (and,i32)
0_3 (const,i32) == 5_1 (or,i32)
0_3 (const,i32) == 5_2 (or,i32)
0_3 (const,i32) == 6_1 (xor,i32)
0_3 (const,i32) == 6_2 (xor,i32)
0_3 (const,i32) == 7_1 (shl,i32)
0_3 (const,i32) == 7_2 (shl,i32)
0_3 (const,i32) == 8_1 (lshr,i32)
0_3 (const,i32) == 8_2 (lshr,i32)
0_3 (const,i32) == 9_1 (ashr,i32)
0_3 (const,i32) == 9_2 (ashr,i32)
0_3 (const,i32) == 10_2 (select,i32)
0_3 (const,i32) == 10_3 (select,i32)
0_3 (const,i32) == 11_1 (eq,i32)
0_3 (const,i32) == 11_2 (eq,i32)
0_3 (const,i32) == 12_1 (ne,i32)
0_3 (const,i32) == 12_2 (ne,i32)
0_3 (const,i32) == 13_1 (ult,i32)
0_3 (const,i32) == 13_2 (ult,i32)
0_3 (const,i32) == 14_1 (slt,i32)
0_3 (const,i32) == 14_2 (slt,i32)
0_3 (const,i32) == 15_1 (ule,i32)
0_3 (const,i32) == 15_2 (ule,i32)
0_3 (const,i32) == 16_1 (sle,i32)
0_3 (const,i32) == 16_2 (sle,i32)
0_3 (const,i32) == 17_1 (trunc,i32)
1_1 (add,i32) == 2_0 (sub,i32)
1_1 (add,i32) == 3_0 (mul,i32)
1_1 (add,i32) == 4_0 (and,i32)
1_1 (add,i32) == 5_0 (or,i32)
1_1 (add,i32) == 6_0 (xor,i32)
1_1 (add,i32) == 7_0 (shl,i32)
1_1 (add,i32) == 8_0 (lshr,i32)
1_1 (add,i32) == 9_0 (ashr,i32)
1_1 (add,i32) == 10_0 (select,i32)
1_1 (add,i32) == 11_0 (zext,eq,i32)
1_1 (add,i32) == 12_0 (zext,ne,i32)
1_1 (add,i32) == 13_0 (zext,ult,i32)
1_1 (add,i32) == 14_0 (zext,slt,i32)
1_1 (add,i32) == 15_0 (zext,ule,i32)
1_1 (add,i32) == 16_0 (zext,sle,i32)
1_2 (add,i32) == 2_0 (sub,i32)
1_2 (add,i32) == 3_0 (mul,i32)
1_2 (add,i32) == 4_0 (and,i32)
1_2 (add,i32) == 5_0 (or,i32)
1_2 (add,i32) == 6_0 (xor,i32)
1_2 (add,i32) == 7_0 (shl,i32)
1_2 (add,i32) == 8_0 (lshr,i32)
1_2 (add,i32) == 9_0 (ashr,i32)
1_2 (add,i32) == 10_0 (select,i32)
1_2 (add,i32) == 11_0 (zext,eq,i32)
1_2 (add,i32) == 12_0 (zext,ne,i32)
1_2 (add,i32) == 13_0 (zext,ult,i32)
1_2 (add,i32) == 14_0 (zext,slt,i32)
1_2 (add,i32) == 15_0 (zext,ule,i32)
1_2 (add,i32) == 16_0 (zext,sle,i32)
2_1 (sub,i32) == 1_0 (add,i32)
2_1 (sub,i32) == 3_0 (mul,i32)
2_1 (sub,i32) == 4_0 (and,i32)
2_1 (sub,i32) == 5_0 (or,i32)
2_1 (sub,i32) == 6_0 (xor,i32)
2_1 (sub,i32) == 7_0 (shl,i32)
2_1 (sub,i32) == 8_0 (lshr,i32)
2_1 (sub,i32) == 9_0 (ashr,i32)
2_1 (sub,i32) == 10_0 (select,i32)
2_1 (sub,i32) == 11_0 (zext,eq,i32)
2_1 (sub,i32) == 12_0 (zext,ne,i32)
2_1 (sub,i32) == 13_0 (zext,ult,i32)
2_1 (sub,i32) == 14_0 (zext,slt,i32)
2_1 (sub,i32) == 15_0 (zext,ule,i32)
2_1 (sub,i32) == 16_0 (zext,sle,i32)
2_2 (sub,i32) == 1_0 (add,i32)
2_2 (sub,i32) == 3_0 (mul,i32)
2_2 (sub,i32) == 4_0 (and,i32)
2_2 (sub,i32) == 5_0 (or,i32)
2_2 (sub,i32) == 6_0 (xor,i32)
2_2 (sub,i32) == 7_0 (shl,i32)
2_2 (sub,i32) == 8_0 (lshr,i32)
2_2 (sub,i32) == 9_0 (ashr,i32)
2_2 (sub,i32) == 10_0 (select,i32)
2_2 (sub,i32) == 11_0 (zext,eq,i32)
2_2 (sub,i32) == 12_0 (zext,ne,i32)
2_2 (sub,i32) == 13_0 (zext,ult,i32)
2_2 (sub,i32) == 14_0 (zext,slt,i32)
2_2 (sub,i32) == 15_0 (zext,ule,i32)
2_2 (sub,i32) == 16_0 (zext,sle,i32)
3_1 (mul,i32) == 1_0 (add,i32)
3_1 (mul,i32) == 2_0 (sub,i32)
3_1 (mul,i32) == 4_0 (and,i32)
3_1 (mul,i32) == 5_0 (or,i32)
3_1 (mul,i32) == 6_0 (xor,i32)
3_1 (mul,i32) == 7_0 (shl,i32)
3_1 (mul,i32) == 8_0 (lshr,i32)
3_1 (mul,i32) == 9_0 (ashr,i32)
3_1 (mul,i32) == 10_0 (select,i32)
3_1 (mul,i32) == 11_0 (zext,eq,i32)
3_1 (mul,i32) == 12_0 (zext,ne,i32)
3_1 (mul,i32) == 13_0 (zext,ult,i32)
3_1 (mul,i32) == 14_0 (zext,slt,i32)
3_1 (mul,i32) == 15_0 (zext,ule,i32)
3_1 (mul,i32) == 16_0 (zext,sle,i32)
3_2 (mul,i32) == 1_0 (add,i32)
3_2 (mul,i32) == 2_0 (sub,i32)
3_2 (mul,i32) == 4_0 (and,i32)
3_2 (mul,i32) == 5_0 (or,i32)
3_2 (mul,i32) == 6_0 (xor,i32)
3_2 (mul,i32) == 7_0 (shl,i32)
3_2 (mul,i32) == 8_0 (lshr,i32)
3_2 (mul,i32) == 9_0 (ashr,i32)
3_2 (mul,i32) == 10_0 (select,i32)
3_2 (mul,i32) == 11_0 (zext,eq,i32)
3_2 (mul,i32) == 12_0 (zext,ne,i32)
3_2 (mul,i32) == 13_0 (zext,ult,i32)
3_2 (mul,i32) == 14_0 (zext,slt,i32)
3_2 (mul,i32) == 15_0 (zext,ule,i32)
3_2 (mul,i32) == 16_0 (zext,sle,i32)
4_1 (and,i32) == 1_0 (add,i32)
4_1 (and,i32) == 2_0 (sub,i32)
4_1 (and,i32) == 3_0 (mul,i32)
4_1 (and,i32) == 5_0 (or,i32)
4_1 (and,i32) == 6_0 (xor,i32)
4_1 (and,i32) == 7_0 (shl,i32)
4_1 (and,i32) == 8_0 (lshr,i32)
4_1 (and,i32) == 9_0 (ashr,i32)
4_1 (and,i32) == 10_0 (select,i32)
4_1 (and,i32) == 11_0 (zext,eq,i32)
4_1 (and,i32) == 12_0 (zext,ne,i32)
4_1 (and,i32) == 13_0 (zext,ult,i32)
4_1 (and,i32) == 14_0 (zext,slt,i32)
4_1 (and,i32) == 15_0 (zext,ule,i32)
4_1 (and,i32) == 16_0 (zext,sle,i32)
4_2 (and,i32) == 1_0 (add,i32)
4_2 (and,i32) == 2_0 (sub,i32)
4_2 (and,i32) == 3_0 (mul,i32)
4_2 (and,i32) == 5_0 (or,i32)
4_2 (and,i32) == 6_0 (xor,i32)
4_2 (and,i32) == 7_0 (shl,i32)
4_2 (and,i32) == 8_0 (lshr,i32)
4_2 (and,i32) == 9_0 (ashr,i32)
4_2 (and,i32) == 10_0 (select,i32)
4_2 (and,i32) == 11_0 (zext,eq,i32)
4_2 (and,i32) == 12_0 (zext,ne,i32)
4_2 (and,i32) == 13_0 (zext,ult,i32)
4_2 (and,i32) == 14_0 (zext,slt,i32)
4_2 (and,i32) == 15_0 (zext,ule,i32)
4_2 (and,i32) == 16_0 (zext,sle,i32)
5_1 (or,i32) == 1_0 (add,i32)
5_1 (or,i32) == 2_0 (sub,i32)
5_1 (or,i32) == 3_0 (mul,i32)
5_1 (or,i32) == 4_0 (and,i32)
5_1 (or,i32) == 6_0 (xor,i32)
5_1 (or,i32) == 7_0 (shl,i32)
5_1 (or,i32) == 8_0 (lshr,i32)
5_1 (or,i32) == 9_0 (ashr,i32)
5_1 (or,i32) == 10_0 (select,i32)
5_1 (or,i32) == 11_0 (zext,eq,i32)
5_1 (or,i32) == 12_0 (zext,ne,i32)
5_1 (or,i32) == 13_0 (zext,ult,i32)
5_1 (or,i32) == 14_0 (zext,slt,i32)
5_1 (or,i32) == 15_0 (zext,ule,i32)
5_1 (or,i32) == 16_0 (zext,sle,i32)
5_2 (or,i32) == 1_0 (add,i32)
5_2 (or,i32) == 2_0 (sub,i32)
5_2 (or,i32) == 3_0 (mul,i32)
5_2 (or,i32) == 4_0 (and,i32)
5_2 (or,i32) == 6_0 (xor,i32)
5_2 (or,i32) == 7_0 (shl,i32)
5_2 (or,i32) == 8_0 (lshr,i32)
5_2 (or,i32) == 9_0 (ashr,i32)
5_2 (or,i32) == 10_0 (select,i32)
5_2 (or,i32) == 11_0 (zext,eq,i32)
5_2 (or,i32) == 12_0 (zext,ne,i32)
5_2 (or,i32) == 13_0 (zext,ult,i32)
5_2 (or,i32) == 14_0 (zext,slt,i32)
5_2 (or,i32) == 15_0 (zext,ule,i32)
5_2 (or,i32) == 16_0 (zext,sle,i32)
6_1 (xor,i32) == 1_0 (add,i32)
6_1 (xor,i32) == 2_0 (sub,i32)
6_1 (xor,i32) == 3_0 (mul,i32)
6_1 (xor,i32) == 4_0 (and,i32)
6_1 (xor,i32) == 5_0 (or,i32)
6_1 (xor,i32) == 7_0 (shl,i32)
6_1 (xor,i32) == 8_0 (lshr,i32)
6_1 (xor,i32) == 9_0 (ashr,i32)
6_1 (xor,i32) == 10_0 (select,i32)
6_1 (xor,i32) == 11_0 (zext,eq,i32)
6_1 (xor,i32) == 12_0 (zext,ne,i32)
6_1 (xor,i32) == 13_0 (zext,ult,i32)
6_1 (xor,i32) == 14_0 (zext,slt,i32)
6_1 (xor,i32) == 15_0 (zext,ule,i32)
6_1 (xor,i32) == 16_0 (zext,sle,i32)
6_2 (xor,i32) == 1_0 (add,i32)
6_2 (xor,i32) == 2_0 (sub,i32)
6_2 (xor,i32) == 3_0 (mul,i32)
6_2 (xor,i32) == 4_0 (and,i32)
6_2 (xor,i32) == 5_0 (or,i32)
6_2 (xor,i32) == 7_0 (shl,i32)
6_2 (xor,i32) == 8_0 (lshr,i32)
6_2 (xor,i32) == 9_0 (ashr,i32)
6_2 (xor,i32) == 10_0 (select,i32)
6_2 (xor,i32) == 11_0 (zext,eq,i32)
6_2 (xor,i32) == 12_0 (zext,ne,i32)
6_2 (xor,i32) == 13_0 (zext,ult,i32)
6_2 (xor,i32) == 14_0 (zext,slt,i32)
6_2 (xor,i32) == 15_0 (zext,ule,i32)
6_2 (xor,i32) == 16_0 (zext,sle,i32)
7_1 (shl,i32) == 1_0 (add,i32)
7_1 (shl,i32) == 2_0 (sub,i32)
7_1 (shl,i32) == 3_0 (mul,i32)
7_1 (shl,i32) == 4_0 (and,i32)
7_1 (shl,i32) == 5_0 (or,i32)
7_1 (shl,i32) == 6_0 (xor,i32)
7_1 (shl,i32) == 8_0 (lshr,i32)
7_1 (shl,i32) == 9_0 (ashr,i32)
7_1 (shl,i32) == 10_0 (select,i32)
7_1 (shl,i32) == 11_0 (zext,eq,i32)
7_1 (shl,i32) == 12_0 (zext,ne,i32)
7_1 (shl,i32) == 13_0 (zext,ult,i32)
7_1 (shl,i32) == 14_0 (zext,slt,i32)
7_1 (shl,i32) == 15_0 (zext,ule,i32)
7_1 (shl,i32) == 16_0 (zext,sle,i32)
7_2 (shl,i32) == 1_0 (add,i32)
7_2 (shl,i32) == 2_0 (sub,i32)
7_2 (shl,i32) == 3_0 (mul,i32)
7_2 (shl,i32) == 4_0 (and,i32)
7_2 (shl,i32) == 5_0 (or,i32)
7_2 (shl,i32) == 6_0 (xor,i32)
7_2 (shl,i32) == 8_0 (lshr,i32)
7_2 (shl,i32) == 9_0 (ashr,i32)
7_2 (shl,i32) == 10_0 (select,i32)
7_2 (shl,i32) == 11_0 (zext,eq,i32)
7_2 (shl,i32) == 12_0 (zext,ne,i32)
7_2 (shl,i32) == 13_0 (zext,ult,i32)
7_2 (shl,i32) == 14_0 (zext,slt,i32)
7_2 (shl,i32) == 15_0 (zext,ule,i32)
7_2 (shl,i32) == 16_0 (zext,sle,i32)
8_1 (lshr,i32) == 1_0 (add,i32)
8_1 (lshr,i32) == 2_0 (sub,i32)
8_1 (lshr,i32) == 3_0 (mul,i32)
8_1 (lshr,i32) == 4_0 (and,i32)
8_1 (lshr,i32) == 5_0 (or,i32)
8_1 (lshr,i32) == 6_0 (xor,i32)
8_1 (lshr,i32) == 7_0 (shl,i32)
8_1 (lshr,i32) == 9_0 (ashr,i32)
8_1 (lshr,i32) == 10_0 (select,i32)
8_1 (lshr,i32) == 11_0 (zext,eq,i32)
8_1 (lshr,i32) == 12_0 (zext,ne,i32)
8_1 (lshr,i32) == 13_0 (zext,ult,i32)
8_1 (lshr,i32) == 14_0 (zext,slt,i32)
8_1 (lshr,i32) == 15_0 (zext,ule,i32)
8_1 (lshr,i32) == 16_0 (zext,sle,i32)
8_2 (lshr,i32) == 1_0 (add,i32)
8_2 (lshr,i32) == 2_0 (sub,i32)
8_2 (lshr,i32) == 3_0 (mul,i32)
8_2 (lshr,i32) == 4_0 (and,i32)
8_2 (lshr,i32) == 5_0 (or,i32)
8_2 (lshr,i32) == 6_0 (xor,i32)
8_2 (lshr,i32) == 7_0 (shl,i32)
8_2 (lshr,i32) == 9_0 (ashr,i32)
8_2 (lshr,i32) == 10_0 (select,i32)
8_2 (lshr,i32) == 11_0 (zext,eq,i32)
8_2 (lshr,i32) == 12_0 (zext,ne,i32)
8_2 (lshr,i32) == 13_0 (zext,ult,i32)
8_2 (lshr,i32) == 14_0 (zext,slt,i32)
8_2 (lshr,i32) == 15_0 (zext,ule,i32)
8_2 (lshr,i32) == 16_0 (zext,sle,i32)
9_1 (ashr,i32) == 1_0 (add,i32)
9_1 (ashr,i32) == 2_0 (sub,i32)
9_1 (ashr,i32) == 3_0 (mul,i32)
9_1 (ashr,i32) == 4_0 (and,i32)
9_1 (ashr,i32) == 5_0 (or,i32)
9_1 (ashr,i32) == 6_0 (xor,i32)
9_1 (ashr,i32) == 7_0 (shl,i32)
9_1 (ashr,i32) == 8_0 (lshr,i32)
9_1 (ashr,i32) == 10_0 (select,i32)
9_1 (ashr,i32) == 11_0 (zext,eq,i32)
9_1 (ashr,i32) == 12_0 (zext,ne,i32)
9_1 (ashr,i32) == 13_0 (zext,ult,i32)
9_1 (ashr,i32) == 14_0 (zext,slt,i32)
9_1 (ashr,i32) == 15_0 (zext,ule,i32)
9_1 (ashr,i32) == 16_0 (zext,sle,i32)
9_2 (ashr,i32) == 1_0 (add,i32)
9_2 (ashr,i32) == 2_0 (sub,i32)
9_2 (ashr,i32) == 3_0 (mul,i32)
9_2 (ashr,i32) == 4_0 (and,i32)
9_2 (ashr,i32) == 5_0 (or,i32)
9_2 (ashr,i32) == 6_0 (xor,i32)
9_2 (ashr,i32) == 7_0 (shl,i32)
9_2 (ashr,i32) == 8_0 (lshr,i32)
9_2 (ashr,i32) == 10_0 (select,i32)
9_2 (ashr,i32) == 11_0 (zext,eq,i32)
9_2 (ashr,i32) == 12_0 (zext,ne,i32)
9_2 (ashr,i32) == 13_0 (zext,ult,i32)
9_2 (ashr,i32) == 14_0 (zext,slt,i32)
9_2 (ashr,i32) == 15_0 (zext,ule,i32)
9_2 (ashr,i32) == 16_0 (zext,sle,i32)
10_1 (select,i32) == 1_0 (add,i32)
10_1 (select,i32) == 2_0 (sub,i32)
10_1 (select,i32) == 3_0 (mul,i32)
10_1 (select,i32) == 4_0 (and,i32)
10_1 (select,i32) == 5_0 (or,i32)
10_1 (select,i32) == 6_0 (xor,i32)
10_1 (select,i32) == 7_0 (shl,i32)
10_1 (select,i32) == 8_0 (lshr,i32)
10_1 (select,i32) == 9_0 (ashr,i32)
10_1 (select,i32) == 11_0 (zext,eq,i32)
10_1 (select,i32) == 12_0 (zext,ne,i32)
10_1 (select,i32) == 13_0 (zext,ult,i32)
10_1 (select,i32) == 14_0 (zext,slt,i32)
10_1 (select,i32) == 15_0 (zext,ule,i32)
10_1 (select,i32) == 16_0 (zext,sle,i32)
10_2 (select,i32) == 1_0 (add,i32)
10_2 (select,i32) == 2_0 (sub,i32)
10_2 (select,i32) == 3_0 (mul,i32)
10_2 (select,i32) == 4_0 (and,i32)
10_2 (select,i32) == 5_0 (or,i32)
10_2 (select,i32) == 6_0 (xor,i32)
10_2 (select,i32) == 7_0 (shl,i32)
10_2 (select,i32) == 8_0 (lshr,i32)
10_2 (select,i32) == 9_0 (ashr,i32)
10_2 (select,i32) == 11_0 (zext,eq,i32)
10_2 (select,i32) == 12_0 (zext,ne,i32)
10_2 (select,i32) == 13_0 (zext,ult,i32)
10_2 (select,i32) == 14_0 (zext,slt,i32)
10_2 (select,i32) == 15_0 (zext,ule,i32)
10_2 (select,i32) == 16_0 (zext,sle,i32)
10_3 (select,i32) == 1_0 (add,i32)
10_3 (select,i32) == 2_0 (sub,i32)
10_3 (select,i32) == 3_0 (mul,i32)
10_3 (select,i32) == 4_0 (and,i32)
10_3 (select,i32) == 5_0 (or,i32)
10_3 (select,i32) == 6_0 (xor,i32)
10_3 (select,i32) == 7_0 (shl,i32)
10_3 (select,i32) == 8_0 (lshr,i32)
10_3 (select,i32) == 9_0 (ashr,i32)
10_3 (select,i32) == 11_0 (zext,eq,i32)
10_3 (select,i32) == 12_0 (zext,ne,i32)
10_3 (select,i32) == 13_0 (zext,ult,i32)
10_3 (select,i32) == 14_0 (zext,slt,i32)
10_3 (select,i32) == 15_0 (zext,ule,i32)
10_3 (select,i32) == 16_0 (zext,sle,i32)
11_1 (eq,i32) == 1_0 (add,i32)
11_1 (eq,i32) == 2_0 (sub,i32)
11_1 (eq,i32) == 3_0 (mul,i32)
11_1 (eq,i32) == 4_0 (and,i32)
11_1 (eq,i32) == 5_0 (or,i32)
11_1 (eq,i32) == 6_0 (xor,i32)
11_1 (eq,i32) == 7_0 (shl,i32)
11_1 (eq,i32) == 8_0 (lshr,i32)
11_1 (eq,i32) == 9_0 (ashr,i32)
11_1 (eq,i32) == 10_0 (select,i32)
11_1 (eq,i32) == 12_0 (zext,ne,i32)
11_1 (eq,i32) == 13_0 (zext,ult,i32)
11_1 (eq,i32) == 14_0 (zext,slt,i32)
11_1 (eq,i32) == 15_0 (zext,ule,i32)
11_1 (eq,i32) == 16_0 (zext,sle,i32)
11_2 (eq,i32) == 1_0 (add,i32)
11_2 (eq,i32) == 2_0 (sub,i32)
11_2 (eq,i32) == 3_0 (mul,i32)
11_2 (eq,i32) == 4_0 (and,i32)
11_2 (eq,i32) == 5_0 (or,i32)
11_2 (eq,i32) == 6_0 (xor,i32)
11_2 (eq,i32) == 7_0 (shl,i32)
11_2 (eq,i32) == 8_0 (lshr,i32)
11_2 (eq,i32) == 9_0 (ashr,i32)
11_2 (eq,i32) == 10_0 (select,i32)
11_2 (eq,i32) == 12_0 (zext,ne,i32)
11_2 (eq,i32) == 13_0 (zext,ult,i32)
11_2 (eq,i32) == 14_0 (zext,slt,i32)
11_2 (eq,i32) == 15_0 (zext,ule,i32)
11_2 (eq,i32) == 16_0 (zext,sle,i32)
12_1 (ne,i32) == 1_0 (add,i32)
12_1 (ne,i32) == 2_0 (sub,i32)
12_1 (ne,i32) == 3_0 (mul,i32)
12_1 (ne,i32) == 4_0 (and,i32)
12_1 (ne,i32) == 5_0 (or,i32)
12_1 (ne,i32) == 6_0 (xor,i32)
12_1 (ne,i32) == 7_0 (shl,i32)
12_1 (ne,i32) == 8_0 (lshr,i32)
12_1 (ne,i32) == 9_0 (ashr,i32)
12_1 (ne,i32) == 10_0 (select,i32)
12_1 (ne,i32) == 11_0 (zext,eq,i32)
12_1 (ne,i32) == 13_0 (zext,ult,i32)
12_1 (ne,i32) == 14_0 (zext,slt,i32)
12_1 (ne,i32) == 15_0 (zext,ule,i32)
12_1 (ne,i32) == 16_0 (zext,sle,i32)
12_2 (ne,i32) == 1_0 (add,i32)
12_2 (ne,i32) == 2_0 (sub,i32)
12_2 (ne,i32) == 3_0 (mul,i32)
12_2 (ne,i32) == 4_0 (and,i32)
12_2 (ne,i32) == 5_0 (or,i32)
12_2 (ne,i32) == 6_0 (xor,i32)
12_2 (ne,i32) == 7_0 (shl,i32)
12_2 (ne,i32) == 8_0 (lshr,i32)
12_2 (ne,i32) == 9_0 (ashr,i32)
12_2 (ne,i32) == 10_0 (select,i32)
12_2 (ne,i32) == 11_0 (zext,eq,i32)
12_2 (ne,i32) == 13_0 (zext,ult,i32)
12_2 (ne,i32) == 14_0 (zext,slt,i32)
12_2 (ne,i32) == 15_0 (zext,ule,i32)
12_2 (ne,i32) == 16_0 (zext,sle,i32)
13_1 (ult,i32) == 1_0 (add,i32)
13_1 (ult,i32) == 2_0 (sub,i32)
13_1 (ult,i32) == 3_0 (mul,i32)
13_1 (ult,i32) == 4_0 (and,i32)
13_1 (ult,i32) == 5_0 (or,i32)
13_1 (ult,i32) == 6_0 (xor,i32)
13_1 (ult,i32) == 7_0 (shl,i32)
13_1 (ult,i32) == 8_0 (lshr,i32)
13_1 (ult,i32) == 9_0 (ashr,i32)
13_1 (ult,i32) == 10_0 (select,i32)
13_1 (ult,i32) == 11_0 (zext,eq,i32)
13_1 (ult,i32) == 12_0 (zext,ne,i32)
13_1 (ult,i32) == 14_0 (zext,slt,i32)
13_1 (ult,i32) == 15_0 (zext,ule,i32)
13_1 (ult,i32) == 16_0 (zext,sle,i32)
13_2 (ult,i32) == 1_0 (add,i32)
13_2 (ult,i32) == 2_0 (sub,i32)
13_2 (ult,i32) == 3_0 (mul,i32)
13_2 (ult,i32) == 4_0 (and,i32)
13_2 (ult,i32) == 5_0 (or,i32)
13_2 (ult,i32) == 6_0 (xor,i32)
13_2 (ult,i32) == 7_0 (shl,i32)
13_2 (ult,i32) == 8_0 (lshr,i32)
13_2 (ult,i32) == 9_0 (ashr,i32)
13_2 (ult,i32) == 10_0 (select,i32)
13_2 (ult,i32) == 11_0 (zext,eq,i32)
13_2 (ult,i32) == 12_0 (zext,ne,i32)
13_2 (ult,i32) == 14_0 (zext,slt,i32)
13_2 (ult,i32) == 15_0 (zext,ule,i32)
13_2 (ult,i32) == 16_0 (zext,sle,i32)
14_1 (slt,i32) == 1_0 (add,i32)
14_1 (slt,i32) == 2_0 (sub,i32)
14_1 (slt,i32) == 3_0 (mul,i32)
14_1 (slt,i32) == 4_0 (and,i32)
14_1 (slt,i32) == 5_0 (or,i32)
14_1 (slt,i32) == 6_0 (xor,i32)
14_1 (slt,i32) == 7_0 (shl,i32)
14_1 (slt,i32) == 8_0 (lshr,i32)
14_1 (slt,i32) == 9_0 (ashr,i32)
14_1 (slt,i32) == 10_0 (select,i32)
14_1 (slt,i32) == 11_0 (zext,eq,i32)
14_1 (slt,i32) == 12_0 (zext,ne,i32)
14_1 (slt,i32) == 13_0 (zext,ult,i32)
14_1 (slt,i32) == 15_0 (zext,ule,i32)
14_1 (slt,i32) == 16_0 (zext,sle,i32)
14_2 (slt,i32) == 1_0 (add,i32)
14_2 (slt,i32) == 2_0 (sub,i32)
14_2 (slt,i32) == 3_0 (mul,i32)
14_2 (slt,i32) == 4_0 (and,i32)
14_2 (slt,i32) == 5_0 (or,i32)
14_2 (slt,i32) == 6_0 (xor,i32)
14_2 (slt,i32) == 7_0 (shl,i32)
14_2 (slt,i32) == 8_0 (lshr,i32)
14_2 (slt,i32) == 9_0 (ashr,i32)
14_2 (slt,i32) == 10_0 (select,i32)
14_2 (slt,i32) == 11_0 (zext,eq,i32)
14_2 (slt,i32) == 12_0 (zext,ne,i32)
14_2 (slt,i32) == 13_0 (zext,ult,i32)
14_2 (slt,i32) == 15_0 (zext,ule,i32)
14_2 (slt,i32) == 16_0 (zext,sle,i32)
15_1 (ule,i32) == 1_0 (add,i32)
15_1 (ule,i32) == 2_0 (sub,i32)
15_1 (ule,i32) == 3_0 (mul,i32)
15_1 (ule,i32) == 4_0 (and,i32)
15_1 (ule,i32) == 5_0 (or,i32)
15_1 (ule,i32) == 6_0 (xor,i32)
15_1 (ule,i32) == 7_0 (shl,i32)
15_1 (ule,i32) == 8_0 (lshr,i32)
15_1 (ule,i32) == 9_0 (ashr,i32)
15_1 (ule,i32) == 10_0 (select,i32)
15_1 (ule,i32) == 11_0 (zext,eq,i32)
15_1 (ule,i32) == 12_0 (zext,ne,i32)
15_1 (ule,i32) == 13_0 (zext,ult,i32)
15_1 (ule,i32) == 14_0 (zext,slt,i32)
15_1 (ule,i32) == 16_0 (zext,sle,i32)
15_2 (ule,i32) == 1_0 (add,i32)
15_2 (ule,i32) == 2_0 (sub,i32)
15_2 (ule,i32) == 3_0 (mul,i32)
15_2 (ule,i32) == 4_0 (and,i32)
15_2 (ule,i32) == 5_0 (or,i32)
15_2 (ule,i32) == 6_0 (xor,i32)
15_2 (ule,i32) == 7_0 (shl,i32)
15_2 (ule,i32) == 8_0 (lshr,i32)
15_2 (ule,i32) == 9_0 (ashr,i32)
15_2 (ule,i32) == 10_0 (select,i32)
15_2 (ule,i32) == 11_0 (zext,eq,i32)
15_2 (ule,i32) == 12_0 (zext,ne,i32)
15_2 (ule,i32) == 13_0 (zext,ult,i32)
15_2 (ule,i32) == 14_0 (zext,slt,i32)
15_2 (ule,i32) == 16_0 (zext,sle,i32)
16_1 (sle,i32) == 1_0 (add,i32)
16_1 (sle,i32) == 2_0 (sub,i32)
16_1 (sle,i32) == 3_0 (mul,i32)
16_1 (sle,i32) == 4_0 (and,i32)
16_1 (sle,i32) == 5_0 (or,i32)
16_1 (sle,i32) == 6_0 (xor,i32)
16_1 (sle,i32) == 7_0 (shl,i32)
16_1 (sle,i32) == 8_0 (lshr,i32)
16_1 (sle,i32) == 9_0 (ashr,i32)
16_1 (sle,i32) == 10_0 (select,i32)
16_1 (sle,i32) == 11_0 (zext,eq,i32)
16_1 (sle,i32) == 12_0 (zext,ne,i32)
16_1 (sle,i32) == 13_0 (zext,ult,i32)
16_1 (sle,i32) == 14_0 (zext,slt,i32)
16_1 (sle,i32) == 15_0 (zext,ule,i32)
16_2 (sle,i32) == 1_0 (add,i32)
16_2 (sle,i32) == 2_0 (sub,i32)
16_2 (sle,i32) == 3_0 (mul,i32)
16_2 (sle,i32) == 4_0 (and,i32)
16_2 (sle,i32) == 5_0 (or,i32)
16_2 (sle,i32) == 6_0 (xor,i32)
16_2 (sle,i32) == 7_0 (shl,i32)
16_2 (sle,i32) == 8_0 (lshr,i32)
16_2 (sle,i32) == 9_0 (ashr,i32)
16_2 (sle,i32) == 10_0 (select,i32)
16_2 (sle,i32) == 11_0 (zext,eq,i32)
16_2 (sle,i32) == 12_0 (zext,ne,i32)
16_2 (sle,i32) == 13_0 (zext,ult,i32)
16_2 (sle,i32) == 14_0 (zext,slt,i32)
16_2 (sle,i32) == 15_0 (zext,ule,i32)
17_1 (trunc,i32) == 1_0 (add,i32)
17_1 (trunc,i32) == 2_0 (sub,i32)
17_1 (trunc,i32) == 3_0 (mul,i32)
17_1 (trunc,i32) == 4_0 (and,i32)
17_1 (trunc,i32) == 5_0 (or,i32)
17_1 (trunc,i32) == 6_0 (xor,i32)
17_1 (trunc,i32) == 7_0 (shl,i32)
17_1 (trunc,i32) == 8_0 (lshr,i32)
17_1 (trunc,i32) == 9_0 (ashr,i32)
17_1 (trunc,i32) == 10_0 (select,i32)
17_1 (trunc,i32) == 11_0 (zext,eq,i32)
17_1 (trunc,i32) == 12_0 (zext,ne,i32)
17_1 (trunc,i32) == 13_0 (zext,ult,i32)
17_1 (trunc,i32) == 14_0 (zext,slt,i32)
17_1 (trunc,i32) == 15_0 (zext,ule,i32)
17_1 (trunc,i32) == 16_0 (zext,sle,i32)
17_0 (trunc,i1) == 18_0 (output,i1)
synthesizing using 0 component(s)
0 <= 18_0 (output,i1) < 3
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
solving synthesis constraint.. UNSAT
synthesizing using 1 component(s)
3 <= 18_0 (output,i1) < 4
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
solving synthesis constraint.. UNSAT
synthesizing using 2 component(s)
3 <= 18_0 (output,i1) < 5
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i32) 11_1 (eq,i32) 13_1 (ult,i32) 
1	0_2 (const,i32) 2_1 (sub,i32) 4_2 (and,i32) 10_2 (select,i32) 10_3 (select,i32) 13_2 (ult,i32) 
2	0_3 (const,i32) 1_1 (add,i32) 8_1 (lshr,i32) 12_2 (ne,i32) 
3	4_1 (and,i32) 8_2 (lshr,i32) 10_1 (select,i32) 11_2 (eq,i32) 13_0 (zext,ult,i32) 14_2 (slt,i32) 17_1 (trunc,i32) 
4	17_0 (trunc,i1) 18_0 (output,i1) 
5	2_2 (sub,i32) 11_0 (zext,eq,i32) 12_1 (ne,i32) 
6	2_0 (sub,i32) 6_1 (xor,i32) 7_1 (shl,i32) 15_1 (ule,i32) 
7	3_2 (mul,i32) 10_0 (select,i32) 
8	6_2 (xor,i32) 8_0 (lshr,i32) 14_1 (slt,i32) 
9	4_0 (and,i32) 5_1 (or,i32) 5_2 (or,i32) 
10	1_2 (add,i32) 12_0 (zext,ne,i32) 
11	6_0 (xor,i32) 7_2 (shl,i32) 
12	7_0 (shl,i32) 9_1 (ashr,i32) 
13	1_0 (add,i32) 3_1 (mul,i32) 
14	5_0 (or,i32) 9_2 (ashr,i32) 
15	14_0 (zext,slt,i32) 
16	3_0 (mul,i32) 15_2 (ule,i32) 16_1 (sle,i32) 16_2 (sle,i32) 
17	16_0 (zext,sle,i32) 
18	9_0 (ashr,i32) 
19	15_0 (zext,ule,i32) 
found valid wiring, output 17_0 (trunc,i1).
creating program from wiring
- starting with OutLoc 17_0 (trunc,i1), OpLocs { 17_1 (trunc,i32) }
- looking for OpLoc wiring 17_1 (trunc,i32)
- found wiring input on line 3, taking 13_0 (zext,ult,i32)
- continue with OutLoc 13_0 (zext,ult,i32), OpLocs {13_1 (ult,i32) 13_2 (ult,i32) }
- looking for OpLoc wiring 13_1 (ult,i32)
- found wiring input on line 0, taking 0_1 (input,i32)
- continue with OutLoc 0_1 (input,i32), OpLocs {}
- creating input inst 0_1 (input,i32)
- looking for OpLoc wiring 13_2 (ult,i32)
- found wiring input on line 1, taking 0_2 (const,i32)
- continue with OutLoc 0_2 (const,i32), OpLocs {}
- creating constant inst 0_2 (const,i32) with value 767755289
- creating inst ult, width 1
before junk removal:
%6:i1 = ult %0, 767755289:i32
result %6
- creating inst trunc, width 1
before junk removal:
%7:i32 = zext %6
%8:i1 = trunc %7
result %8
candidate:
result %6
didn't work for all inputs (#cex: 5, refinement: 1)
counterexample: in_0_1 = 25264
cand with constants, constraining wiring
18_0 (output,i1) == 17_0 (trunc,i1)
17_1 (trunc,i32) == 13_0 (zext,ult,i32)
13_1 (ult,i32) == 0_1 (input,i32)
13_2 (ult,i32) == 0_2 (const,i32)
with constant 0_2 (const,i32) == 767755289
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
setting input in_0_1 to 25264
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i32) 1_2 (add,i32) 3_2 (mul,i32) 9_1 (ashr,i32) 12_1 (ne,i32) 15_1 (ule,i32) 
1	0_2 (const,i32) 9_2 (ashr,i32) 
2	0_3 (const,i32) 1_1 (add,i32) 8_1 (lshr,i32) 10_2 (select,i32) 10_3 (select,i32) 15_2 (ule,i32) 16_1 (sle,i32) 
3	5_1 (or,i32) 7_2 (shl,i32) 8_2 (lshr,i32) 9_0 (ashr,i32) 11_2 (eq,i32) 13_1 (ult,i32) 16_2 (sle,i32) 17_1 (trunc,i32) 
4	17_0 (trunc,i1) 18_0 (output,i1) 
5	4_1 (and,i32) 4_2 (and,i32) 12_2 (ne,i32) 14_1 (slt,i32) 16_0 (zext,sle,i32) 
6	8_0 (lshr,i32) 13_2 (ult,i32) 14_2 (slt,i32) 
7	4_0 (and,i32) 10_1 (select,i32) 
8	15_0 (zext,ule,i32) 
9	3_1 (mul,i32) 5_2 (or,i32) 13_0 (zext,ult,i32) 
10	2_1 (sub,i32) 2_2 (sub,i32) 10_0 (select,i32) 
11	5_0 (or,i32) 11_1 (eq,i32) 
12	12_0 (zext,ne,i32) 
13	1_0 (add,i32) 6_2 (xor,i32) 7_1 (shl,i32) 
14	2_0 (sub,i32) 
15	3_0 (mul,i32) 
16	6_1 (xor,i32) 7_0 (shl,i32) 
17	14_0 (zext,slt,i32) 
18	11_0 (zext,eq,i32) 
19	6_0 (xor,i32) 
found valid wiring, output 17_0 (trunc,i1).
creating program from wiring
- starting with OutLoc 17_0 (trunc,i1), OpLocs { 17_1 (trunc,i32) }
- looking for OpLoc wiring 17_1 (trunc,i32)
- found wiring input on line 3, taking 9_0 (ashr,i32)
- continue with OutLoc 9_0 (ashr,i32), OpLocs {9_1 (ashr,i32) 9_2 (ashr,i32) }
- looking for OpLoc wiring 9_1 (ashr,i32)
- found wiring input on line 0, taking 0_1 (input,i32)
- continue with OutLoc 0_1 (input,i32), OpLocs {}
- creating input inst 0_1 (input,i32)
- looking for OpLoc wiring 9_2 (ashr,i32)
- found wiring input on line 1, taking 0_2 (const,i32)
- continue with OutLoc 0_2 (const,i32), OpLocs {}
- creating constant inst 0_2 (const,i32) with value 11
- creating inst ashr, width 32
before junk removal:
%9:i32 = ashr %0, 11:i32
result %9
- creating inst trunc, width 1
before junk removal:
%10:i1 = trunc %9
result %10
candidate:
result %10
didn't work for all inputs (#cex: 6, refinement: 2)
counterexample: in_0_1 = 526
cand with constants, constraining wiring
18_0 (output,i1) == 17_0 (trunc,i1)
17_1 (trunc,i32) == 9_0 (ashr,i32)
9_1 (ashr,i32) == 0_1 (input,i32)
9_2 (ashr,i32) == 0_2 (const,i32)
with constant 0_2 (const,i32) == 11
setting input in_0_1 to 43919
setting input in_0_1 to 28037
setting input in_0_1 to 39647
setting input in_0_1 to 2936
setting input in_0_1 to 25264
setting input in_0_1 to 526
solving synthesis constraint.. SAT
line	locations
0	0_1 (input,i32) 1_1 (add,i32) 2_1 (sub,i32) 2_2 (sub,i32) 7_1 (shl,i32) 11_2 (eq,i32) 12_2 (ne,i32) 13_2 (ult,i32) 14_1 (slt,i32) 
1	0_3 (const,i32) 8_2 (lshr,i32) 9_2 (ashr,i32) 10_3 (select,i32) 13_1 (ult,i32) 15_1 (ule,i32) 16_1 (sle,i32) 
2	0_2 (const,i32) 3_2 (mul,i32) 12_1 (ne,i32) 14_2 (slt,i32) 
3	12_0 (zext,ne,i32) 15_2 (ule,i32) 17_1 (trunc,i32) 
4	17_0 (trunc,i1) 18_0 (output,i1) 
5	5_1 (or,i32) 9_1 (ashr,i32) 15_0 (zext,ule,i32) 16_2 (sle,i32) 
6	6_2 (xor,i32) 13_0 (zext,ult,i32) 
7	4_1 (and,i32) 11_1 (eq,i32) 16_0 (zext,sle,i32) 
8	5_2 (or,i32) 9_0 (ashr,i32) 
9	2_0 (sub,i32) 8_1 (lshr,i32) 10_2 (select,i32) 
10	8_0 (lshr,i32) 
11	5_0 (or,i32) 10_1 (select,i32) 
12	10_0 (select,i32) 
13	11_0 (zext,eq,i32) 
14	6_1 (xor,i32) 7_2 (shl,i32) 14_0 (zext,slt,i32) 
15	7_0 (shl,i32) 
16	4_2 (and,i32) 6_0 (xor,i32) 
17	3_1 (mul,i32) 4_0 (and,i32) 
18	1_2 (add,i32) 3_0 (mul,i32) 
19	1_0 (add,i32) 
found valid wiring, output 17_0 (trunc,i1).
creating program from wiring
- starting with OutLoc 17_0 (trunc,i1), OpLocs { 17_1 (trunc,i32) }
- looking for OpLoc wiring 17_1 (trunc,i32)
- found wiring input on line 3, taking 12_0 (zext,ne,i32)
- continue with OutLoc 12_0 (zext,ne,i32), OpLocs {12_1 (ne,i32) 12_2 (ne,i32) }
- looking for OpLoc wiring 12_1 (ne,i32)
- found wiring input on line 2, taking 0_2 (const,i32)
- continue with OutLoc 0_2 (const,i32), OpLocs {}
- creating constant inst 0_2 (const,i32) with value 25264
- looking for OpLoc wiring 12_2 (ne,i32)
- found wiring input on line 0, taking 0_1 (input,i32)
- continue with OutLoc 0_1 (input,i32), OpLocs {}
- creating input inst 0_1 (input,i32)
- creating inst ne, width 1
before junk removal:
%11:i1 = ne 25264:i32, %0
result %11
- creating inst trunc, width 1
before junk removal:
%12:i32 = zext %11
%13:i1 = trunc %12
result %13
candidate:
result %11
success:
result %11
; LHS cost = 9, RHS cost = 1, benefit = 8
; starting synthesis for LHS
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = addnw 1:i32, %0
infer %1
inputs: 1, constants: 2
N: 3, M: 19
default width: 32
output width: 32
component library: add (32, { 32 32 }); sub (32, { 32 32 }); mul (32, { 32 32 }); and (32, { 32 32 }); or (32, { 32 32 }); xor (32, { 32 32 }); shl (32, { 32 32 }); lshr (32, { 32 32 }); ashr (32, { 32 32 }); select (32, { 1 32 32 }); eq (1, { 32 32 }); ne (1, { 32 32 }); ult (1, { 32 32 }); slt (1, { 32 32 }); ule (1, { 32 32 }); sle (1, { 32 32 }); 
const components: const (32); const (32); 
I: 0_1 (input,i32) 0_2 (const,i32) 0_3 (const,i32) 
P: 1_1 (add,i32) 1_2 (add,i32) 2_1 (sub,i32) 2_2 (sub,i32) 3_1 (mul,i32) 3_2 (mul,i32) 4_1 (and,i32) 4_2 (and,i32) 5_1 (or,i32) 5_2 (or,i32) 6_1 (xor,i32) 6_2 (xor,i32) 7_1 (shl,i32) 7_2 (shl,i32) 8_1 (lshr,i32) 8_2 (lshr,i32) 9_1 (ashr,i32) 9_2 (ashr,i32) 10_1 (select,i32) 10_2 (select,i32) 10_3 (select,i32) 11_1 (eq,i32) 11_2 (eq,i32) 12_1 (ne,i32) 12_2 (ne,i32) 13_1 (ult,i32) 13_2 (ult,i32) 14_1 (slt,i32) 14_2 (slt,i32) 15_1 (ule,i32) 15_2 (ule,i32) 16_1 (sle,i32) 16_2 (sle,i32) 
R: 1_0 (add,i32) 2_0 (sub,i32) 3_0 (mul,i32) 4_0 (and,i32) 5_0 (or,i32) 6_0 (xor,i32) 7_0 (shl,i32) 8_0 (lshr,i32) 9_0 (ashr,i32) 10_0 (select,i32) 11_0 (zext,eq,i32) 12_0 (zext,ne,i32) 13_0 (zext,ult,i32) 14_0 (zext,slt,i32) 15_0 (zext,ule,i32) 16_0 (zext,sle,i32) 
L: 0_1 (input,i32) 0_2 (const,i32) 0_3 (const,i32) 1_1 (add,i32) 1_2 (add,i32) 2_1 (sub,i32) 2_2 (sub,i32) 3_1 (mul,i32) 3_2 (mul,i32) 4_1 (and,i32) 4_2 (and,i32) 5_1 (or,i32) 5_2 (or,i32) 6_1 (xor,i32) 6_2 (xor,i32) 7_1 (shl,i32) 7_2 (shl,i32) 8_1 (lshr,i32) 8_2 (lshr,i32) 9_1 (ashr,i32) 9_2 (ashr,i32) 10_1 (select,i32) 10_2 (select,i32) 10_3 (select,i32) 11_1 (eq,i32) 11_2 (eq,i32) 12_1 (ne,i32) 12_2 (ne,i32) 13_1 (ult,i32) 13_2 (ult,i32) 14_1 (slt,i32) 14_2 (slt,i32) 15_1 (ule,i32) 15_2 (ule,i32) 16_1 (sle,i32) 16_2 (sle,i32) 1_0 (add,i32) 2_0 (sub,i32) 3_0 (mul,i32) 4_0 (and,i32) 5_0 (or,i32) 6_0 (xor,i32) 7_0 (shl,i32) 8_0 (lshr,i32) 9_0 (ashr,i32) 10_0 (select,i32) 11_0 (zext,eq,i32) 12_0 (zext,ne,i32) 13_0 (zext,ult,i32) 14_0 (zext,slt,i32) 15_0 (zext,ule,i32) 16_0 (zext,sle,i32) 17_0 (output,i32) 
O: 17_0 (output,i32)
consistency constraints:
1_0 (add,i32) != 2_0 (sub,i32)
1_0 (add,i32) != 3_0 (mul,i32)
1_0 (add,i32) != 4_0 (and,i32)
1_0 (add,i32) != 5_0 (or,i32)
1_0 (add,i32) != 6_0 (xor,i32)
1_0 (add,i32) != 7_0 (shl,i32)
1_0 (add,i32) != 8_0 (lshr,i32)
1_0 (add,i32) != 9_0 (ashr,i32)
1_0 (add,i32) != 10_0 (select,i32)
1_0 (add,i32) != 11_0 (zext,eq,i32)
1_0 (add,i32) != 12_0 (zext,ne,i32)
1_0 (add,i32) != 13_0 (zext,ult,i32)
1_0 (add,i32) != 14_0 (zext,slt,i32)
1_0 (add,i32) != 15_0 (zext,ule,i32)
1_0 (add,i32) != 16_0 (zext,sle,i32)
2_0 (sub,i32) != 3_0 (mul,i32)
2_0 (sub,i32) != 4_0 (and,i32)
2_0 (sub,i32) != 5_0 (or,i32)
2_0 (sub,i32) != 6_0 (xor,i32)
2_0 (sub,i32) != 7_0 (shl,i32)
2_0 (sub,i32) != 8_0 (lshr,i32)
2_0 (sub,i32) != 9_0 (ashr,i32)
2_0 (sub,i32) != 10_0 (select,i32)
2_0 (sub,i32) != 11_0 (zext,eq,i32)
2_0 (sub,i32) != 12_0 (zext,ne,i32)
2_0 (sub,i32) != 13_0 (zext,ult,i32)
2_0 (sub,i32) != 14_0 (zext,slt,i32)
2_0 (sub,i32) != 15_0 (zext,ule,i32)
2_0 (sub,i32) != 16_0 (zext,sle,i32)
3_0 (mul,i32) != 4_0 (and,i32)
3_0 (mul,i32) != 5_0 (or,i32)
3_0 (mul,i32) != 6_0 (xor,i32)
3_0 (mul,i32) != 7_0 (shl,i32)
3_0 (mul,i32) != 8_0 (lshr,i32)
3_0 (mul,i32) != 9_0 (ashr,i32)
3_0 (mul,i32) != 10_0 (select,i32)
3_0 (mul,i32) != 11_0 (zext,eq,i32)
3_0 (mul,i32) != 12_0 (zext,ne,i32)
3_0 (mul,i32) != 13_0 (zext,ult,i32)
3_0 (mul,i32) != 14_0 (zext,slt,i32)
3_0 (mul,i32) != 15_0 (zext,ule,i32)
3_0 (mul,i32) != 16_0 (zext,sle,i32)
4_0 (and,i32) != 5_0 (or,i32)
4_0 (and,i32) != 6_0 (xor,i32)
4_0 (and,i32) != 7_0 (shl,i32)
4_0 (and,i32) != 8_0 (lshr,i32)
4_0 (and,i32) != 9_0 (ashr,i32)
4_0 (and,i32) != 10_0 (select,i32)
4_0 (and,i32) != 11_0 (zext,eq,i32)
4_0 (and,i32) != 12_0 (zext,ne,i32)
4_0 (and,i32) != 13_0 (zext,ult,i32)
4_0 (and,i32) != 14_0 (zext,slt,i32)
4_0 (and,i32) != 15_0 (zext,ule,i32)
4_0 (and,i32) != 16_0 (zext,sle,i32)
5_0 (or,i32) != 6_0 (xor,i32)
5_0 (or,i32) != 7_0 (shl,i32)
5_0 (or,i32) != 8_0 (lshr,i32)
5_0 (or,i32) != 9_0 (ashr,i32)
5_0 (or,i32) != 10_0 (select,i32)
5_0 (or,i32) != 11_0 (zext,eq,i32)
5_0 (or,i32) != 12_0 (zext,ne,i32)
5_0 (or,i32) != 13_0 (zext,ult,i32)
5_0 (or,i32) != 14_0 (zext,slt,i32)
5_0 (or,i32) != 15_0 (zext,ule,i32)
5_0 (or,i32) != 16_0 (zext,sle,i32)
6_0 (xor,i32) != 7_0 (shl,i32)
6_0 (xor,i32) != 8_0 (lshr,i32)
6_0 (xor,i32) != 9_0 (ashr,i32)
6_0 (xor,i32) != 10_0 (select,i32)
6_0 (xor,i32) != 11_0 (zext,eq,i32)
6_0 (xor,i32) != 12_0 (zext,ne,i32)
6_0 (xor,i32) != 13_0 (zext,ult,i32)
6_0 (xor,i32) != 14_0 (zext,slt,i32)
6_0 (xor,i32) != 15_0 (zext,ule,i32)
6_0 (xor,i32) != 16_0 (zext,sle,i32)
7_0 (shl,i32) != 8_0 (lshr,i32)
7_0 (shl,i32) != 9_0 (ashr,i32)
7_0 (shl,i32) != 10_0 (select,i32)
7_0 (shl,i32) != 11_0 (zext,eq,i32)
7_0 (shl,i32) != 12_0 (zext,ne,i32)
7_0 (shl,i32) != 13_0 (zext,ult,i32)
7_0 (shl,i32) != 14_0 (zext,slt,i32)
7_0 (shl,i32) != 15_0 (zext,ule,i32)
7_0 (shl,i32) != 16_0 (zext,sle,i32)
8_0 (lshr,i32) != 9_0 (ashr,i32)
8_0 (lshr,i32) != 10_0 (select,i32)
8_0 (lshr,i32) != 11_0 (zext,eq,i32)
8_0 (lshr,i32) != 12_0 (zext,ne,i32)
8_0 (lshr,i32) != 13_0 (zext,ult,i32)
8_0 (lshr,i32) != 14_0 (zext,slt,i32)
8_0 (lshr,i32) != 15_0 (zext,ule,i32)
8_0 (lshr,i32) != 16_0 (zext,sle,i32)
9_0 (ashr,i32) != 10_0 (select,i32)
9_0 (ashr,i32) != 11_0 (zext,eq,i32)
9_0 (ashr,i32) != 12_0 (zext,ne,i32)
9_0 (ashr,i32) != 13_0 (zext,ult,i32)
9_0 (ashr,i32) != 14_0 (zext,slt,i32)
9_0 (ashr,i32) != 15_0 (zext,ule,i32)
9_0 (ashr,i32) != 16_0 (zext,sle,i32)
10_0 (select,i32) != 11_0 (zext,eq,i32)
10_0 (select,i32) != 12_0 (zext,ne,i32)
10_0 (select,i32) != 13_0 (zext,ult,i32)
10_0 (select,i32) != 14_0 (zext,slt,i32)
10_0 (select,i32) != 15_0 (zext,ule,i32)
10_0 (select,i32) != 16_0 (zext,sle,i32)
11_0 (zext,eq,i32) != 12_0 (zext,ne,i32)
11_0 (zext,eq,i32) != 13_0 (zext,ult,i32)
11_0 (zext,eq,i32) != 14_0 (zext,slt,i32)
11_0 (zext,eq,i32) != 15_0 (zext,ule,i32)
11_0 (zext,eq,i32) != 16_0 (zext,sle,i32)
12_0 (zext,ne,i32) != 13_0 (zext,ult,i32)
12_0 (zext,ne,i32) != 14_0 (zext,slt,i32)
12_0 (zext,ne,i32) != 15_0 (zext,ule,i32)
12_0 (zext,ne,i32) != 16_0 (zext,sle,i32)
13_0 (zext,ult,i32) != 14_0 (zext,slt,i32)
13_0 (zext,ult,i32) != 15_0 (zext,ule,i32)
13_0 (zext,ult,i32) != 16_0 (zext,sle,i32)
14_0 (zext,slt,i32) != 15_0 (zext,ule,i32)
14_0 (zext,slt,i32) != 16_0 (zext,sle,i32)
15_0 (zext,ule,i32) != 16_0 (zext,sle,i32)
acyclicity constraints:
1_1 (add,i32) < 1_0
1_2 (add,i32) < 1_0
2_1 (sub,i32) < 2_0
2_2 (sub,i32) < 2_0
3_1 (mul,i32) < 3_0
3_2 (mul,i32) < 3_0
4_1 (and,i32) < 4_0
4_2 (and,i32) < 4_0
5_1 (or,i32) < 5_0
5_2 (or,i32) < 5_0
6_1 (xor,i32) < 6_0
6_2 (xor,i32) < 6_0
7_1 (shl,i32) < 7_0
7_2 (shl,i32) < 7_0
8_1 (lshr,i32) < 8_0
8_2 (lshr,i32) < 8_0
9_1 (ashr,i32) < 9_0
9_2 (ashr,i32) < 9_0
10_1 (select,i32) < 10_0
10_2 (select,i32) < 10_0
10_3 (select,i32) < 10_0
11_1 (eq,i32) < 11_0
11_2 (eq,i32) < 11_0
12_1 (ne,i32) < 12_0
12_2 (ne,i32) < 12_0
13_1 (ult,i32) < 13_0
13_2 (ult,i32) < 13_0
14_1 (slt,i32) < 14_0
14_2 (slt,i32) < 14_0
15_1 (ule,i32) < 15_0
15_2 (ule,i32) < 15_0
16_1 (sle,i32) < 16_0
16_2 (sle,i32) < 16_0
location variable constraints:
0 <= 1_1 (add,i32) < 19
0 <= 1_2 (add,i32) < 19
0 <= 2_1 (sub,i32) < 19
0 <= 2_2 (sub,i32) < 19
0 <= 3_1 (mul,i32) < 19
0 <= 3_2 (mul,i32) < 19
0 <= 4_1 (and,i32) < 19
0 <= 4_2 (and,i32) < 19
0 <= 5_1 (or,i32) < 19
0 <= 5_2 (or,i32) < 19
0 <= 6_1 (xor,i32) < 19
0 <= 6_2 (xor,i32) < 19
0 <= 7_1 (shl,i32) < 19
0 <= 7_2 (shl,i32) < 19
0 <= 8_1 (lshr,i32) < 19
0 <= 8_2 (lshr,i32) < 19
0 <= 9_1 (ashr,i32) < 19
0 <= 9_2 (ashr,i32) < 19
0 <= 10_1 (select,i32) < 19
0 <= 10_2 (select,i32) < 19
0 <= 10_3 (select,i32) < 19
0 <= 11_1 (eq,i32) < 19
0 <= 11_2 (eq,i32) < 19
0 <= 12_1 (ne,i32) < 19
0 <= 12_2 (ne,i32) < 19
0 <= 13_1 (ult,i32) < 19
0 <= 13_2 (ult,i32) < 19
0 <= 14_1 (slt,i32) < 19
0 <= 14_2 (slt,i32) < 19
0 <= 15_1 (ule,i32) < 19
0 <= 15_2 (ule,i32) < 19
0 <= 16_1 (sle,i32) < 19
0 <= 16_2 (sle,i32) < 19
0 <= 0_1 (input,i32) < 19
0 <= 0_2 (const,i32) < 19
0 <= 0_3 (const,i32) < 19
3 <= 1_0 (add,i32) < 19
3 <= 2_0 (sub,i32) < 19
3 <= 3_0 (mul,i32) < 19
3 <= 4_0 (and,i32) < 19
3 <= 5_0 (or,i32) < 19
3 <= 6_0 (xor,i32) < 19
3 <= 7_0 (shl,i32) < 19
3 <= 8_0 (lshr,i32) < 19
3 <= 9_0 (ashr,i32) < 19
3 <= 10_0 (select,i32) < 19
3 <= 11_0 (zext,eq,i32) < 19
3 <= 12_0 (zext,ne,i32) < 19
3 <= 13_0 (zext,ult,i32) < 19
3 <= 14_0 (zext,slt,i32) < 19
3 <= 15_0 (zext,ule,i32) < 19
3 <= 16_0 (zext,sle,i32) < 19
component input constraints:
1_1 (add,i32) == 0_1 (input,i32) || 1_1 (add,i32) == 0_2 (const,i32) || 1_1 (add,i32) == 0_3 (const,i32) || 1_1 (add,i32) == 2_0 (sub,i32) || 1_1 (add,i32) == 3_0 (mul,i32) || 1_1 (add,i32) == 4_0 (and,i32) || 1_1 (add,i32) == 5_0 (or,i32) || 1_1 (add,i32) == 6_0 (xor,i32) || 1_1 (add,i32) == 7_0 (shl,i32) || 1_1 (add,i32) == 8_0 (lshr,i32) || 1_1 (add,i32) == 9_0 (ashr,i32) || 1_1 (add,i32) == 10_0 (select,i32) || 1_1 (add,i32) == 11_0 (zext,eq,i32) || 1_1 (add,i32) == 12_0 (zext,ne,i32) || 1_1 (add,i32) == 13_0 (zext,ult,i32) || 1_1 (add,i32) == 14_0 (zext,slt,i32) || 1_1 (add,i32) == 15_0 (zext,ule,i32) || 1_1 (add,i32) == 16_0 (zext,sle,i32) || false
1_2 (add,i32) == 0_1 (input,i32) || 1_2 (add,i32) == 0_2 (const,i32) || 1_2 (add,i32) == 0_3 (const,i32) || 1_2 (add,i32) == 2_0 (sub,i32) || 1_2 (add,i32) == 3_0 (mul,i32) || 1_2 (add,i32) == 4_0 (and,i32) || 1_2 (add,i32) == 5_0 (or,i32) || 1_2 (add,i32) == 6_0 (xor,i32) || 1_2 (add,i32) == 7_0 (shl,i32) || 1_2 (add,i32) == 8_0 (lshr,i32) || 1_2 (add,i32) == 9_0 (ashr,i32) || 1_2 (add,i32) == 10_0 (select,i32) || 1_2 (add,i32) == 11_0 (zext,eq,i32) || 1_2 (add,i32) == 12_0 (zext,ne,i32) || 1_2 (add,i32) == 13_0 (zext,ult,i32) || 1_2 (add,i32) == 14_0 (zext,slt,i32) || 1_2 (add,i32) == 15_0 (zext,ule,i32) || 1_2 (add,i32) == 16_0 (zext,sle,i32) || false
2_1 (sub,i32) == 0_1 (input,i32) || 2_1 (sub,i32) == 0_2 (const,i32) || 2_1 (sub,i32) == 0_3 (const,i32) || 2_1 (sub,i32) == 1_0 (add,i32) || 2_1 (sub,i32) == 3_0 (mul,i32) || 2_1 (sub,i32) == 4_0 (and,i32) || 2_1 (sub,i32) == 5_0 (or,i32) || 2_1 (sub,i32) == 6_0 (xor,i32) || 2_1 (sub,i32) == 7_0 (shl,i32) || 2_1 (sub,i32) == 8_0 (lshr,i32) || 2_1 (sub,i32) == 9_0 (ashr,i32) || 2_1 (sub,i32) == 10_0 (select,i32) || 2_1 (sub,i32) == 11_0 (zext,eq,i32) || 2_1 (sub,i32) == 12_0 (zext,ne,i32) || 2_1 (sub,i32) == 13_0 (zext,ult,i32) || 2_1 (sub,i32) == 14_0 (zext,slt,i32) || 2_1 (sub,i32) == 15_0 (zext,ule,i32) || 2_1 (sub,i32) == 16_0 (zext,sle,i32) || false
2_2 (sub,i32) == 0_1 (input,i32) || 2_2 (sub,i32) == 0_2 (const,i32) || 2_2 (sub,i32) == 0_3 (const,i32) || 2_2 (sub,i32) == 1_0 (add,i32) || 2_2 (sub,i32) == 3_0 (mul,i32) || 2_2 (sub,i32) == 4_0 (and,i32) || 2_2 (sub,i32) == 5_0 (or,i32) || 2_2 (sub,i32) == 6_0 (xor,i32) || 2_2 (sub,i32) == 7_0 (shl,i32) || 2_2 (sub,i32) == 8_0 (lshr,i32) || 2_2 (sub,i32) == 9_0 (ashr,i32) || 2_2 (sub,i32) == 10_0 (select,i32) || 2_2 (sub,i32) == 11_0 (zext,eq,i32) || 2_2 (sub,i32) == 12_0 (zext,ne,i32) || 2_2 (sub,i32) == 13_0 (zext,ult,i32) || 2_2 (sub,i32) == 14_0 (zext,slt,i32) || 2_2 (sub,i32) == 15_0 (zext,ule,i32) || 2_2 (sub,i32) == 16_0 (zext,sle,i32) || false
3_1 (mul,i32) == 0_1 (input,i32) || 3_1 (mul,i32) == 0_2 (const,i32) || 3_1 (mul,i32) == 0_3 (const,i32) || 3_1 (mul,i32) == 1_0 (add,i32) || 3_1 (mul,i32) == 2_0 (sub,i32) || 3_1 (mul,i32) == 4_0 (and,i32) || 3_1 (mul,i32) == 5_0 (or,i32) || 3_1 (mul,i32) == 6_0 (xor,i32) || 3_1 (mul,i32) == 7_0 (shl,i32) || 3_1 (mul,i32) == 8_0 (lshr,i32) || 3_1 (mul,i32) == 9_0 (ashr,i32) || 3_1 (mul,i32) == 10_0 (select,i32) || 3_1 (mul,i32) == 11_0 (zext,eq,i32) || 3_1 (mul,i32) == 12_0 (zext,ne,i32) || 3_1 (mul,i32) == 13_0 (zext,ult,i32) || 3_1 (mul,i32) == 14_0 (zext,slt,i32) || 3_1 (mul,i32) == 15_0 (zext,ule,i32) || 3_1 (mul,i32) == 16_0 (zext,sle,i32) || false
3_2 (mul,i32) == 0_1 (input,i32) || 3_2 (mul,i32) == 0_2 (const,i32) || 3_2 (mul,i32) == 0_3 (const,i32) || 3_2 (mul,i32) == 1_0 (add,i32) || 3_2 (mul,i32) == 2_0 (sub,i32) || 3_2 (mul,i32) == 4_0 (and,i32) || 3_2 (mul,i32) == 5_0 (or,i32) || 3_2 (mul,i32) == 6_0 (xor,i32) || 3_2 (mul,i32) == 7_0 (shl,i32) || 3_2 (mul,i32) == 8_0 (lshr,i32) || 3_2 (mul,i32) == 9_0 (ashr,i32) || 3_2 (mul,i32) == 10_0 (select,i32) || 3_2 (mul,i32) == 11_0 (zext,eq,i32) || 3_2 (mul,i32) == 12_0 (zext,ne,i32) || 3_2 (mul,i32) == 13_0 (zext,ult,i32) || 3_2 (mul,i32) == 14_0 (zext,slt,i32) || 3_2 (mul,i32) == 15_0 (zext,ule,i32) || 3_2 (mul,i32) == 16_0 (zext,sle,i32) || false
4_1 (and,i32) == 0_1 (input,i32) || 4_1 (and,i32) == 0_2 (const,i32) || 4_1 (and,i32) == 0_3 (const,i32) || 4_1 (and,i32) == 1_0 (add,i32) || 4_1 (and,i32) == 2_0 (sub,i32) || 4_1 (and,i32) == 3_0 (mul,i32) || 4_1 (and,i32) == 5_0 (or,i32) || 4_1 (and,i32) == 6_0 (xor,i32) || 4_1 (and,i32) == 7_0 (shl,i32) || 4_1 (and,i32) == 8_0 (lshr,i32) || 4_1 (and,i32) == 9_0 (ashr,i32) || 4_1 (and,i32) == 10_0 (select,i32) || 4_1 (and,i32) == 11_0 (zext,eq,i32) || 4_1 (and,i32) == 12_0 (zext,ne,i32) || 4_1 (and,i32) == 13_0 (zext,ult,i32) || 4_1 (and,i32) == 14_0 (zext,slt,i32) || 4_1 (and,i32) == 15_0 (zext,ule,i32) || 4_1 (and,i32) == 16_0 (zext,sle,i32) || false
4_2 (and,i32) == 0_1 (input,i32) || 4_2 (and,i32) == 0_2 (const,i32) || 4_2 (and,i32) == 0_3 (const,i32) || 4_2 (and,i32) == 1_0 (add,i32) || 4_2 (and,i32) == 2_0 (sub,i32) || 4_2 (and,i32) == 3_0 (mul,i32) || 4_2 (and,i32) == 5_0 (or,i32) || 4_2 (and,i32) == 6_0 (xor,i32) || 4_2 (and,i32) == 7_0 (shl,i32) || 4_2 (and,i32) == 8_0 (lshr,i32) || 4_2 (and,i32) == 9_0 (ashr,i32) || 4_2 (and,i32) == 10_0 (select,i32) || 4_2 (and,i32) == 11_0 (zext,eq,i32) || 4_2 (and,i32) == 12_0 (zext,ne,i32) || 4_2 (and,i32) == 13_0 (zext,ult,i32) || 4_2 (and,i32) == 14_0 (zext,slt,i32) || 4_2 (and,i32) == 15_0 (zext,ule,i32) || 4_2 (and,i32) == 16_0 (zext,sle,i32) || false
5_1 (or,i32) == 0_1 (input,i32) || 5_1 (or,i32) == 0_2 (const,i32) || 5_1 (or,i32) == 0_3 (const,i32) || 5_1 (or,i32) == 1_0 (add,i32) || 5_1 (or,i32) == 2_0 (sub,i32) || 5_1 (or,i32) == 3_0 (mul,i32) || 5_1 (or,i32) == 4_0 (and,i32) || 5_1 (or,i32) == 6_0 (xor,i32) || 5_1 (or,i32) == 7_0 (shl,i32) || 5_1 (or,i32) == 8_0 (lshr,i32) || 5_1 (or,i32) == 9_0 (ashr,i32) || 5_1 (or,i32) == 10_0 (select,i32) || 5_1 (or,i32) == 11_0 (zext,eq,i32) || 5_1 (or,i32) == 12_0 (zext,ne,i32) || 5_1 (or,i32) == 13_0 (zext,ult,i32) || 5_1 (or,i32) == 14_0 (zext,slt,i32) || 5_1 (or,i32) == 15_0 (zext,ule,i32) || 5_1 (or,i32) == 16_0 (zext,sle,i32) || false
5_2 (or,i32) == 0_1 (input,i32) || 5_2 (or,i32) == 0_2 (const,i32) || 5_2 (or,i32) == 0_3 (const,i32) || 5_2 (or,i32) == 1_0 (add,i32) || 5_2 (or,i32) == 2_0 (sub,i32) || 5_2 (or,i32) == 3_0 (mul,i32) || 5_2 (or,i32) == 4_0 (and,i32) || 5_2 (or,i32) == 6_0 (xor,i32) || 5_2 (or,i32) == 7_0 (shl,i32) || 5_2 (or,i32) == 8_0 (lshr,i32) || 5_2 (or,i32) == 9_0 (ashr,i32) || 5_2 (or,i32) == 10_0 (select,i32) || 5_2 (or,i32) == 11_0 (zext,eq,i32) || 5_2 (or,i32) == 12_0 (zext,ne,i32) || 5_2 (or,i32) == 13_0 (zext,ult,i32) || 5_2 (or,i32) == 14_0 (zext,slt,i32) || 5_2 (or,i32) == 15_0 (zext,ule,i32) || 5_2 (or,i32) == 16_0 (zext,sle,i32) || false
6_1 (xor,i32) == 0_1 (input,i32) || 6_1 (xor,i32) == 0_2 (const,i32) || 6_1 (xor,i32) == 0_3 (const,i32) || 6_1 (xor,i32) == 1_0 (add,i32) || 6_1 (xor,i32) == 2_0 (sub,i32) || 6_1 (xor,i32) == 3_0 (mul,i32) || 6_1 (xor,i32) == 4_0 (and,i32) || 6_1 (xor,i32) == 5_0 (or,i32) || 6_1 (xor,i32) == 7_0 (shl,i32) || 6_1 (xor,i32) == 8_0 (lshr,i32) || 6_1 (xor,i32) == 9_0 (ashr,i32) || 6_1 (xor,i32) == 10_0 (select,i32) || 6_1 (xor,i32) == 11_0 (zext,eq,i32) || 6_1 (xor,i32) == 12_0 (zext,ne,i32) || 6_1 (xor,i32) == 13_0 (zext,ult,i32) || 6_1 (xor,i32) == 14_0 (zext,slt,i32) || 6_1 (xor,i32) == 15_0 (zext,ule,i32) || 6_1 (xor,i32) == 16_0 (zext,sle,i32) || false
6_2 (xor,i32) == 0_1 (input,i32) || 6_2 (xor,i32) == 0_2 (const,i32) || 6_2 (xor,i32) == 0_3 (const,i32) || 6_2 (xor,i32) == 1_0 (add,i32) || 6_2 (xor,i32) == 2_0 (sub,i32) || 6_2 (xor,i32) == 3_0 (mul,i32) || 6_2 (xor,i32) == 4_0 (and,i32) || 6_2 (xor,i32) == 5_0 (or,i32) || 6_2 (xor,i32) == 7_0 (shl,i32) || 6_2 (xor,i32) == 8_0 (lshr,i32) || 6_2 (xor,i32) == 9_0 (ashr,i32) || 6_2 (xor,i32) == 10_0 (select,i32) || 6_2 (xor,i32) == 11_0 (zext,eq,i32) || 6_2 (xor,i32) == 12_0 (zext,ne,i32) || 6_2 (xor,i32) == 13_0 (zext,ult,i32) || 6_2 (xor,i32) == 14_0 (zext,slt,i32) || 6_2 (xor,i32) == 15_0 (zext,ule,i32) || 6_2 (xor,i32) == 16_0 (zext,sle,i32) || false
7_1 (shl,i32) == 0_1 (input,i32) || 7_1 (shl,i32) == 0_2 (const,i32) || 7_1 (shl,i32) == 0_3 (const,i32) || 7_1 (shl,i32) == 1_0 (add,i32) || 7_1 (shl,i32) == 2_0 (sub,i32) || 7_1 (shl,i32) == 3_0 (mul,i32) || 7_1 (shl,i32) == 4_0 (and,i32) || 7_1 (shl,i32) == 5_0 (or,i32) || 7_1 (shl,i32) == 6_0 (xor,i32) || 7_1 (shl,i32) == 8_0 (lshr,i32) || 7_1 (shl,i32) == 9_0 (ashr,i32) || 7_1 (shl,i32) == 10_0 (select,i32) || 7_1 (shl,i32) == 11_0 (zext,eq,i32) || 7_1 (shl,i32) == 12_0 (zext,ne,i32) || 7_1 (shl,i32) == 13_0 (zext,ult,i32) || 7_1 (shl,i32) == 14_0 (zext,slt,i32) || 7_1 (shl,i32) == 15_0 (zext,ule,i32) || 7_1 (shl,i32) == 16_0 (zext,sle,i32) || false
7_2 (shl,i32) == 0_1 (input,i32) || 7_2 (shl,i32) == 0_2 (const,i32) || 7_2 (shl,i32) == 0_3 (const,i32) || 7_2 (shl,i32) == 1_0 (add,i32) || 7_2 (shl,i32) == 2_0 (sub,i32) || 7_2 (shl,i32) == 3_0 (mul,i32) || 7_2 (shl,i32) == 4_0 (and,i32) || 7_2 (shl,i32) == 5_0 (or,i32) || 7_2 (shl,i32) == 6_0 (xor,i32) || 7_2 (shl,i32) == 8_0 (lshr,i32) || 7_2 (shl,i32) == 9_0 (ashr,i32) || 7_2 (shl,i32) == 10_0 (select,i32) || 7_2 (shl,i32) == 11_0 (zext,eq,i32) || 7_2 (shl,i32) == 12_0 (zext,ne,i32) || 7_2 (shl,i32) == 13_0 (zext,ult,i32) || 7_2 (shl,i32) == 14_0 (zext,slt,i32) || 7_2 (shl,i32) == 15_0 (zext,ule,i32) || 7_2 (shl,i32) == 16_0 (zext,sle,i32) || false
8_1 (lshr,i32) == 0_1 (input,i32) || 8_1 (lshr,i32) == 0_2 (const,i32) || 8_1 (lshr,i32) == 0_3 (const,i32) || 8_1 (lshr,i32) == 1_0 (add,i32) || 8_1 (lshr,i32) == 2_0 (sub,i32) || 8_1 (lshr,i32) == 3_0 (mul,i32) || 8_1 (lshr,i32) == 4_0 (and,i32) || 8_1 (lshr,i32) == 5_0 (or,i32) || 8_1 (lshr,i32) == 6_0 (xor,i32) || 8_1 (lshr,i32) == 7_0 (shl,i32) || 8_1 (lshr,i32) == 9_0 (ashr,i32) || 8_1 (lshr,i32) == 10_0 (select,i32) || 8_1 (lshr,i32) == 11_0 (zext,eq,i32) || 8_1 (lshr,i32) == 12_0 (zext,ne,i32) || 8_1 (lshr,i32) == 13_0 (zext,ult,i32) || 8_1 (lshr,i32) == 14_0 (zext,slt,i32) || 8_1 (lshr,i32) == 15_0 (zext,ule,i32) || 8_1 (lshr,i32) == 16_0 (zext,sle,i32) || false
8_2 (lshr,i32) == 0_1 (input,i32) || 8_2 (lshr,i32) == 0_2 (const,i32) || 8_2 (lshr,i32) == 0_3 (const,i32) || 8_2 (lshr,i32) == 1_0 (add,i32) || 8_2 (lshr,i32) == 2_0 (sub,i32) || 8_2 (lshr,i32) == 3_0 (mul,i32) || 8_2 (lshr,i32) == 4_0 (and,i32) || 8_2 (lshr,i32) == 5_0 (or,i32) || 8_2 (lshr,i32) == 6_0 (xor,i32) || 8_2 (lshr,i32) == 7_0 (shl,i32) || 8_2 (lshr,i32) == 9_0 (ashr,i32) || 8_2 (lshr,i32) == 10_0 (select,i32) || 8_2 (lshr,i32) == 11_0 (zext,eq,i32) || 8_2 (lshr,i32) == 12_0 (zext,ne,i32) || 8_2 (lshr,i32) == 13_0 (zext,ult,i32) || 8_2 (lshr,i32) == 14_0 (zext,slt,i32) || 8_2 (lshr,i32) == 15_0 (zext,ule,i32) || 8_2 (lshr,i32) == 16_0 (zext,sle,i32) || false
9_1 (ashr,i32) == 0_1 (input,i32) || 9_1 (ashr,i32) == 0_2 (const,i32) || 9_1 (ashr,i32) == 0_3 (const,i32) || 9_1 (ashr,i32) == 1_0 (add,i32) || 9_1 (ashr,i32) == 2_0 (sub,i32) || 9_1 (ashr,i32) == 3_0 (mul,i32) || 9_1 (ashr,i32) == 4_0 (and,i32) || 9_1 (ashr,i32) == 5_0 (or,i32) || 9_1 (ashr,i32) == 6_0 (xor,i32) || 9_1 (ashr,i32) == 7_0 (shl,i32) || 9_1 (ashr,i32) == 8_0 (lshr,i32) || 9_1 (ashr,i32) == 10_0 (select,i32) || 9_1 (ashr,i32) == 11_0 (zext,eq,i32) || 9_1 (ashr,i32) == 12_0 (zext,ne,i32) || 9_1 (ashr,i32) == 13_0 (zext,ult,i32) || 9_1 (ashr,i32) == 14_0 (zext,slt,i32) || 9_1 (ashr,i32) == 15_0 (zext,ule,i32) || 9_1 (ashr,i32) == 16_0 (zext,sle,i32) || false
9_2 (ashr,i32) == 0_1 (input,i32) || 9_2 (ashr,i32) == 0_2 (const,i32) || 9_2 (ashr,i32) == 0_3 (const,i32) || 9_2 (ashr,i32) == 1_0 (add,i32) || 9_2 (ashr,i32) == 2_0 (sub,i32) || 9_2 (ashr,i32) == 3_0 (mul,i32) || 9_2 (ashr,i32) == 4_0 (and,i32) || 9_2 (ashr,i32) == 5_0 (or,i32) || 9_2 (ashr,i32) == 6_0 (xor,i32) || 9_2 (ashr,i32) == 7_0 (shl,i32) || 9_2 (ashr,i32) == 8_0 (lshr,i32) || 9_2 (ashr,i32) == 10_0 (select,i32) || 9_2 (ashr,i32) == 11_0 (zext,eq,i32) || 9_2 (ashr,i32) == 12_0 (zext,ne,i32) || 9_2 (ashr,i32) == 13_0 (zext,ult,i32) || 9_2 (ashr,i32) == 14_0 (zext,slt,i32) || 9_2 (ashr,i32) == 15_0 (zext,ule,i32) || 9_2 (ashr,i32) == 16_0 (zext,sle,i32) || false
10_1 (select,i32) == 1_0 (add,i32) || 10_1 (select,i32) == 2_0 (sub,i32) || 10_1 (select,i32) == 3_0 (mul,i32) || 10_1 (select,i32) == 4_0 (and,i32) || 10_1 (select,i32) == 5_0 (or,i32) || 10_1 (select,i32) == 6_0 (xor,i32) || 10_1 (select,i32) == 7_0 (shl,i32) || 10_1 (select,i32) == 8_0 (lshr,i32) || 10_1 (select,i32) == 9_0 (ashr,i32) || 10_1 (select,i32) == 11_0 (zext,eq,i32) || 10_1 (select,i32) == 12_0 (zext,ne,i32) || 10_1 (select,i32) == 13_0 (zext,ult,i32) || 10_1 (select,i32) == 14_0 (zext,slt,i32) || 10_1 (select,i32) == 15_0 (zext,ule,i32) || 10_1 (select,i32) == 16_0 (zext,sle,i32) || false
10_2 (select,i32) == 0_1 (input,i32) || 10_2 (select,i32) == 0_2 (const,i32) || 10_2 (select,i32) == 0_3 (const,i32) || 10_2 (select,i32) == 1_0 (add,i32) || 10_2 (select,i32) == 2_0 (sub,i32) || 10_2 (select,i32) == 3_0 (mul,i32) || 10_2 (select,i32) == 4_0 (and,i32) || 10_2 (select,i32) == 5_0 (or,i32) || 10_2 (select,i32) == 6_0 (xor,i32) || 10_2 (select,i32) == 7_0 (shl,i32) || 10_2 (select,i32) == 8_0 (lshr,i32) || 10_2 (select,i32) == 9_0 (ashr,i32) || 10_2 (select,i32) == 11_0 (zext,eq,i32) || 10_2 (select,i32) == 12_0 (zext,ne,i32) || 10_2 (select,i32) == 13_0 (zext,ult,i32) || 10_2 (select,i32) == 14_0 (zext,slt,i32) || 10_2 (select,i32) == 15_0 (zext,ule,i32) || 10_2 (select,i32) == 16_0 (zext,sle,i32) || false
10_3 (select,i32) == 0_1 (input,i32) || 10_3 (select,i32) == 0_2 (const,i32) || 10_3 (select,i32) == 0_3 (const,i32) || 10_3 (select,i32) == 1_0 (add,i32) || 10_3 (select,i32) == 2_0 (sub,i32) || 10_3 (select,i32) == 3_0 (mul,i32) || 10_3 (select,i32) == 4_0 (and,i32) || 10_3 (select,i32) == 5_0 (or,i32) || 10_3 (select,i32) == 6_0 (xor,i32) || 10_3 (select,i32) == 7_0 (shl,i32) || 10_3 (select,i32) == 8_0 (lshr,i32) || 10_3 (select,i32) == 9_0 (ashr,i32) || 10_3 (select,i32) == 11_0 (zext,eq,i32) || 10_3 (select,i32) == 12_0 (zext,ne,i32) || 10_3 (select,i32) == 13_0 (zext,ult,i32) || 10_3 (select,i32) == 14_0 (zext,slt,i32) || 10_3 (select,i32) == 15_0 (zext,ule,i32) || 10_3 (select,i32) == 16_0 (zext,sle,i32) || false
11_1 (eq,i32) == 0_1 (input,i32) || 11_1 (eq,i32) == 0_2 (const,i32) || 11_1 (eq,i32) == 0_3 (const,i32) || 11_1 (eq,i32) == 1_0 (add,i32) || 11_1 (eq,i32) == 2_0 (sub,i32) || 11_1 (eq,i32) == 3_0 (mul,i32) || 11_1 (eq,i32) == 4_0 (and,i32) || 11_1 (eq,i32) == 5_0 (or,i32) || 11_1 (eq,i32) == 6_0 (xor,i32) || 11_1 (eq,i32) == 7_0 (shl,i32) || 11_1 (eq,i32) == 8_0 (lshr,i32) || 11_1 (eq,i32) == 9_0 (ashr,i32) || 11_1 (eq,i32) == 10_0 (select,i32) || 11_1 (eq,i32) == 12_0 (zext,ne,i32) || 11_1 (eq,i32) == 13_0 (zext,ult,i32) || 11_1 (eq,i32) == 14_0 (zext,slt,i32) || 11_1 (eq,i32) == 15_0 (zext,ule,i32) || 11_1 (eq,i32) == 16_0 (zext,sle,i32) || false
11_2 (eq,i32) == 0_1 (input,i32) || 11_2 (eq,i32) == 0_2 (const,i32) || 11_2 (eq,i32) == 0_3 (const,i32) || 11_2 (eq,i32) == 1_0 (add,i32) || 11_2 (eq,i32) == 2_0 (sub,i32) || 11_2 (eq,i32) == 3_0 (mul,i32) || 11_2 (eq,i32) == 4_0 (and,i32) || 11_2 (eq,i32) == 5_0 (or,i32) || 11_2 (eq,i32) == 6_0 (xor,i32) || 11_2 (eq,i32) == 7_0 (shl,i32) || 11_2 (eq,i32) == 8_0 (lshr,i32) || 11_2 (eq,i32) == 9_0 (ashr,i32) || 11_2 (eq,i32) == 10_0 (select,i32) || 11_2 (eq,i32) == 12_0 (zext,ne,i32) || 11_2 (eq,i32) == 13_0 (zext,ult,i32) || 11_2 (eq,i32) == 14_0 (zext,slt,i32) || 11_2 (eq,i32) == 15_0 (zext,ule,i32) || 11_2 (eq,i32) == 16_0 (zext,sle,i32) || false
12_1 (ne,i32) == 0_1 (input,i32) || 12_1 (ne,i32) == 0_2 (const,i32) || 12_1 (ne,i32) == 0_3 (const,i32) || 12_1 (ne,i32) == 1_0 (add,i32) || 12_1 (ne,i32) == 2_0 (sub,i32) || 12_1 (ne,i32) == 3_0 (mul,i32) || 12_1 (ne,i32) == 4_0 (and,i32) || 12_1 (ne,i32) == 5_0 (or,i32) || 12_1 (ne,i32) == 6_0 (xor,i32) || 12_1 (ne,i32) == 7_0 (shl,i32) || 12_1 (ne,i32) == 8_0 (lshr,i32) || 12_1 (ne,i32) == 9_0 (ashr,i32) || 12_1 (ne,i32) == 10_0 (select,i32) || 12_1 (ne,i32) == 11_0 (zext,eq,i32) || 12_1 (ne,i32) == 13_0 (zext,ult,i32) || 12_1 (ne,i32) == 14_0 (zext,slt,i32) || 12_1 (ne,i32) == 15_0 (zext,ule,i32) || 12_1 (ne,i32) == 16_0 (zext,sle,i32) || false
12_2 (ne,i32) == 0_1 (input,i32) || 12_2 (ne,i32) == 0_2 (const,i32) || 12_2 (ne,i32) == 0_3 (const,i32) || 12_2 (ne,i32) == 1_0 (add,i32) || 12_2 (ne,i32) == 2_0 (sub,i32) || 12_2 (ne,i32) == 3_0 (mul,i32) || 12_2 (ne,i32) == 4_0 (and,i32) || 12_2 (ne,i32) == 5_0 (or,i32) || 12_2 (ne,i32) == 6_0 (xor,i32) || 12_2 (ne,i32) == 7_0 (shl,i32) || 12_2 (ne,i32) == 8_0 (lshr,i32) || 12_2 (ne,i32) == 9_0 (ashr,i32) || 12_2 (ne,i32) == 10_0 (select,i32) || 12_2 (ne,i32) == 11_0 (zext,eq,i32) || 12_2 (ne,i32) == 13_0 (zext,ult,i32) || 12_2 (ne,i32) == 14_0 (zext,slt,i32) || 12_2 (ne,i32) == 15_0 (zext,ule,i32) || 12_2 (ne,i32) == 16_0 (zext,sle,i32) || false
13_1 (ult,i32) == 0_1 (input,i32) || 13_1 (ult,i32) == 0_2 (const,i32) || 13_1 (ult,i32) == 0_3 (const,i32) || 13_1 (ult,i32) == 1_0 (add,i32) || 13_1 (ult,i32) == 2_0 (sub,i32) || 13_1 (ult,i32) == 3_0 (mul,i32) || 13_1 (ult,i32) == 4_0 (and,i32) || 13_1 (ult,i32) == 5_0 (or,i32) || 13_1 (ult,i32) == 6_0 (xor,i32) || 13_1 (ult,i32) == 7_0 (shl,i32) || 13_1 (ult,i32) == 8_0 (lshr,i32) || 13_1 (ult,i32) == 9_0 (ashr,i32) || 13_1 (ult,i32) == 10_0 (select,i32) || 13_1 (ult,i32) == 11_0 (zext,eq,i32) || 13_1 (ult,i32) == 12_0 (zext,ne,i32) || 13_1 (ult,i32) == 14_0 (zext,slt,i32) || 13_1 (ult,i32) == 15_0 (zext,ule,i32) || 13_1 (ult,i32) == 16_0 (zext,sle,i32) || false
13_2 (ult,i32) == 0_1 (input,i32) || 13_2 (ult,i32) == 0_2 (const,i32) || 13_2 (ult,i32) == 0_3 (const,i32) || 13_2 (ult,i32) == 1_0 (add,i32) || 13_2 (ult,i32) == 2_0 (sub,i32) || 13_2 (ult,i32) == 3_0 (mul,i32) || 13_2 (ult,i32) == 4_0 (and,i32) || 13_2 (ult,i32) == 5_0 (or,i32) || 13_2 (ult,i32) == 6_0 (xor,i32) || 13_2 (ult,i32) == 7_0 (shl,i32) || 13_2 (ult,i32) == 8_0 (lshr,i32) || 13_2 (ult,i32) == 9_0 (ashr,i32) || 13_2 (ult,i32) == 10_0 (select,i32) || 13_2 (ult,i32) == 11_0 (zext,eq,i32) || 13_2 (ult,i32) == 12_0 (zext,ne,i32) || 13_2 (ult,i32) == 14_0 (zext,slt,i32) || 13_2 (ult,i32) == 15_0 (zext,ule,i32) || 13_2 (ult,i32) == 16_0 (zext,sle,i32) || false
14_1 (slt,i32) == 0_1 (input,i32) || 14_1 (slt,i32) == 0_2 (const,i32) || 14_1 (slt,i32) == 0_3 (const,i32) || 14_1 (slt,i32) == 1_0 (add,i32) || 14_1 (slt,i32) == 2_0 (sub,i32) || 14_1 (slt,i32) == 3_0 (mul,i32) || 14_1 (slt,i32) == 4_0 (and,i32) || 14_1 (slt,i32) == 5_0 (or,i32) || 14_1 (slt,i32) == 6_0 (xor,i32) || 14_1 (slt,i32) == 7_0 (shl,i32) || 14_1 (slt,i32) == 8_0 (lshr,i32) || 14_1 (slt,i32) == 9_0 (ashr,i32) || 14_1 (slt,i32) == 10_0 (select,i32) || 14_1 (slt,i32) == 11_0 (zext,eq,i32) || 14_1 (slt,i32) == 12_0 (zext,ne,i32) || 14_1 (slt,i32) == 13_0 (zext,ult,i32) || 14_1 (slt,i32) == 15_0 (zext,ule,i32) || 14_1 (slt,i32) == 16_0 (zext,sle,i32) || false
14_2 (slt,i32) == 0_1 (input,i32) || 14_2 (slt,i32) == 0_2 (const,i32) || 14_2 (slt,i32) == 0_3 (const,i32) || 14_2 (slt,i32) == 1_0 (add,i32) || 14_2 (slt,i32) == 2_0 (sub,i32) || 14_2 (slt,i32) == 3_0 (mul,i32) || 14_2 (slt,i32) == 4_0 (and,i32) || 14_2 (slt,i32) == 5_0 (or,i32) || 14_2 (slt,i32) == 6_0 (xor,i32) || 14_2 (slt,i32) == 7_0 (shl,i32) || 14_2 (slt,i32) == 8_0 (lshr,i32) || 14_2 (slt,i32) == 9_0 (ashr,i32) || 14_2 (slt,i32) == 10_0 (select,i32) || 14_2 (slt,i32) == 11_0 (zext,eq,i32) || 14_2 (slt,i32) == 12_0 (zext,ne,i32) || 14_2 (slt,i32) == 13_0 (zext,ult,i32) || 14_2 (slt,i32) == 15_0 (zext,ule,i32) || 14_2 (slt,i32) == 16_0 (zext,sle,i32) || false
15_1 (ule,i32) == 0_1 (input,i32) || 15_1 (ule,i32) == 0_2 (const,i32) || 15_1 (ule,i32) == 0_3 (const,i32) || 15_1 (ule,i32) == 1_0 (add,i32) || 15_1 (ule,i32) == 2_0 (sub,i32) || 15_1 (ule,i32) == 3_0 (mul,i32) || 15_1 (ule,i32) == 4_0 (and,i32) || 15_1 (ule,i32) == 5_0 (or,i32) || 15_1 (ule,i32) == 6_0 (xor,i32) || 15_1 (ule,i32) == 7_0 (shl,i32) || 15_1 (ule,i32) == 8_0 (lshr,i32) || 15_1 (ule,i32) == 9_0 (ashr,i32) || 15_1 (ule,i32) == 10_0 (select,i32) || 15_1 (ule,i32) == 11_0 (zext,eq,i32) || 15_1 (ule,i32) == 12_0 (zext,ne,i32) || 15_1 (ule,i32) == 13_0 (zext,ult,i32) || 15_1 (ule,i32) == 14_0 (zext,slt,i32) || 15_1 (ule,i32) == 16_0 (zext,sle,i32) || false
15_2 (ule,i32) == 0_1 (input,i32) || 15_2 (ule,i32) == 0_2 (const,i32) || 15_2 (ule,i32) == 0_3 (const,i32) || 15_2 (ule,i32) == 1_0 (add,i32) || 15_2 (ule,i32) == 2_0 (sub,i32) || 15_2 (ule,i32) == 3_0 (mul,i32) || 15_2 (ule,i32) == 4_0 (and,i32) || 15_2 (ule,i32) == 5_0 (or,i32) || 15_2 (ule,i32) == 6_0 (xor,i32) || 15_2 (ule,i32) == 7_0 (shl,i32) || 15_2 (ule,i32) == 8_0 (lshr,i32) || 15_2 (ule,i32) == 9_0 (ashr,i32) || 15_2 (ule,i32) == 10_0 (select,i32) || 15_2 (ule,i32) == 11_0 (zext,eq,i32) || 15_2 (ule,i32) == 12_0 (zext,ne,i32) || 15_2 (ule,i32) == 13_0 (zext,ult,i32) || 15_2 (ule,i32) == 14_0 (zext,slt,i32) || 15_2 (ule,i32) == 16_0 (zext,sle,i32) || false
16_1 (sle,i32) == 0_1 (input,i32) || 16_1 (sle,i32) == 0_2 (const,i32) || 16_1 (sle,i32) == 0_3 (const,i32) || 16_1 (sle,i32) == 1_0 (add,i32) || 16_1 (sle,i32) == 2_0 (sub,i32) || 16_1 (sle,i32) == 3_0 (mul,i32) || 16_1 (sle,i32) == 4_0 (and,i32) || 16_1 (sle,i32) == 5_0 (or,i32) || 16_1 (sle,i32) == 6_0 (xor,i32) || 16_1 (sle,i32) == 7_0 (shl,i32) || 16_1 (sle,i32) == 8_0 (lshr,i32) || 16_1 (sle,i32) == 9_0 (ashr,i32) || 16_1 (sle,i32) == 10_0 (select,i32) || 16_1 (sle,i32) == 11_0 (zext,eq,i32) || 16_1 (sle,i32) == 12_0 (zext,ne,i32) || 16_1 (sle,i32) == 13_0 (zext,ult,i32) || 16_1 (sle,i32) == 14_0 (zext,slt,i32) || 16_1 (sle,i32) == 15_0 (zext,ule,i32) || false
16_2 (sle,i32) == 0_1 (input,i32) || 16_2 (sle,i32) == 0_2 (const,i32) || 16_2 (sle,i32) == 0_3 (const,i32) || 16_2 (sle,i32) == 1_0 (add,i32) || 16_2 (sle,i32) == 2_0 (sub,i32) || 16_2 (sle,i32) == 3_0 (mul,i32) || 16_2 (sle,i32) == 4_0 (and,i32) || 16_2 (sle,i32) == 5_0 (or,i32) || 16_2 (sle,i32) == 6_0 (xor,i32) || 16_2 (sle,i32) == 7_0 (shl,i32) || 16_2 (sle,i32) == 8_0 (lshr,i32) || 16_2 (sle,i32) == 9_0 (ashr,i32) || 16_2 (sle,i32) == 10_0 (select,i32) || 16_2 (sle,i32) == 11_0 (zext,eq,i32) || 16_2 (sle,i32) == 12_0 (zext,ne,i32) || 16_2 (sle,i32) == 13_0 (zext,ult,i32) || 16_2 (sle,i32) == 14_0 (zext,slt,i32) || 16_2 (sle,i32) == 15_0 (zext,ule,i32) || false
component const input constraints:
1_1 (add,i32) == 0_2 (const,i32) || 1_1 (add,i32) == 0_3 (const,i32) || false
1_2 (add,i32) == 0_2 (const,i32) || 1_2 (add,i32) == 0_3 (const,i32) || false
false
2_1 (sub,i32) == 0_2 (const,i32) || 2_1 (sub,i32) == 0_3 (const,i32) || false
2_2 (sub,i32) == 0_2 (const,i32) || 2_2 (sub,i32) == 0_3 (const,i32) || false
false
3_1 (mul,i32) == 0_2 (const,i32) || 3_1 (mul,i32) == 0_3 (const,i32) || false
3_2 (mul,i32) == 0_2 (const,i32) || 3_2 (mul,i32) == 0_3 (const,i32) || false
false
4_1 (and,i32) == 0_2 (const,i32) || 4_1 (and,i32) == 0_3 (const,i32) || false
4_2 (and,i32) == 0_2 (const,i32) || 4_2 (and,i32) == 0_3 (const,i32) || false
false
5_1 (or,i32) == 0_2 (const,i32) || 5_1 (or,i32) == 0_3 (const,i32) || false
5_2 (or,i32) == 0_2 (const,i32) || 5_2 (or,i32) == 0_3 (const,i32) || false
false
6_1 (xor,i32) == 0_2 (const,i32) || 6_1 (xor,i32) == 0_3 (const,i32) || false
6_2 (xor,i32) == 0_2 (const,i32) || 6_2 (xor,i32) == 0_3 (const,i32) || false
false
7_1 (shl,i32) == 0_2 (const,i32) || 7_1 (shl,i32) == 0_3 (const,i32) || false
7_2 (shl,i32) == 0_2 (const,i32) || 7_2 (shl,i32) == 0_3 (const,i32) || false
false
8_1 (lshr,i32) == 0_2 (const,i32) || 8_1 (lshr,i32) == 0_3 (const,i32) || false
8_2 (lshr,i32) == 0_2 (const,i32) || 8_2 (lshr,i32) == 0_3 (const,i32) || false
false
9_1 (ashr,i32) == 0_2 (const,i32) || 9_1 (ashr,i32) == 0_3 (const,i32) || false
9_2 (ashr,i32) == 0_2 (const,i32) || 9_2 (ashr,i32) == 0_3 (const,i32) || false
false
false
10_2 (select,i32) == 0_2 (const,i32) || 10_2 (select,i32) == 0_3 (const,i32) || false
10_3 (select,i32) == 0_2 (const,i32) || 10_3 (select,i32) == 0_3 (const,i32) || false
false
11_1 (eq,i32) == 0_2 (const,i32) || 11_1 (eq,i32) == 0_3 (const,i32) || false
11_2 (eq,i32) == 0_2 (const,i32) || 11_2 (eq,i32) == 0_3 (const,i32) || false
false
12_1 (ne,i32) == 0_2 (const,i32) || 12_1 (ne,i32) == 0_3 (const,i32) || false
12_2 (ne,i32) == 0_2 (const,i32) || 12_2 (ne,i32) == 0_3 (const,i32) || false
false
13_1 (ult,i32) == 0_2 (const,i32) || 13_1 (ult,i32) == 0_3 (const,i32) || false
13_2 (ult,i32) == 0_2 (const,i32) || 13_2 (ult,i32) == 0_3 (const,i32) || false
false
14_1 (slt,i32) == 0_2 (const,i32) || 14_1 (slt,i32) == 0_3 (const,i32) || false
14_2 (slt,i32) == 0_2 (const,i32) || 14_2 (slt,i32) == 0_3 (const,i32) || false
false
15_1 (ule,i32) == 0_2 (const,i32) || 15_1 (ule,i32) == 0_3 (const,i32) || false
15_2 (ule,i32) == 0_2 (const,i32) || 15_2 (ule,i32) == 0_3 (const,i32) || false
false
16_1 (sle,i32) == 0_2 (const,i32) || 16_1 (sle,i32) == 0_3 (const,i32) || false
16_2 (sle,i32) == 0_2 (const,i32) || 16_2 (sle,i32) == 0_3 (const,i32) || false
false
component output constraints:
17_0 (output,i32) == 0_1 (input,i32) || 17_0 (output,i32) == 0_2 (const,i32) || 17_0 (output,i32) == 0_3 (const,i32) || 17_0 (output,i32) == 1_0 (add,i32) || 17_0 (output,i32) == 2_0 (sub,i32) || 17_0 (output,i32) == 3_0 (mul,i32) || 17_0 (output,i32) == 4_0 (and,i32) || 17_0 (output,i32) == 5_0 (or,i32) || 17_0 (output,i32) == 6_0 (xor,i32) || 17_0 (output,i32) == 7_0 (shl,i32) || 17_0 (output,i32) == 8_0 (lshr,i32) || 17_0 (output,i32) == 9_0 (ashr,i32) || 17_0 (output,i32) == 10_0 (select,i32) || 17_0 (output,i32) == 11_0 (zext,eq,i32) || 17_0 (output,i32) == 12_0 (zext,ne,i32) || 17_0 (output,i32) == 13_0 (zext,ult,i32) || 17_0 (output,i32) == 14_0 (zext,slt,i32) || 17_0 (output,i32) == 15_0 (zext,ule,i32) || 17_0 (output,i32) == 16_0 (zext,sle,i32) || false
possible wirings:
0_1 (input,i32) == 1_1 (add,i32)
0_1 (input,i32) == 1_2 (add,i32)
0_1 (input,i32) == 2_1 (sub,i32)
0_1 (input,i32) == 2_2 (sub,i32)
0_1 (input,i32) == 3_1 (mul,i32)
0_1 (input,i32) == 3_2 (mul,i32)
0_1 (input,i32) == 4_1 (and,i32)
0_1 (input,i32) == 4_2 (and,i32)
0_1 (input,i32) == 5_1 (or,i32)
0_1 (input,i32) == 5_2 (or,i32)
0_1 (input,i32) == 6_1 (xor,i32)
0_1 (input,i32) == 6_2 (xor,i32)
0_1 (input,i32) == 7_1 (shl,i32)
0_1 (input,i32) == 7_2 (shl,i32)
0_1 (input,i32) == 8_1 (lshr,i32)
0_1 (input,i32) == 8_2 (lshr,i32)
0_1 (input,i32) == 9_1 (ashr,i32)
0_1 (input,i32) == 9_2 (ashr,i32)
0_1 (input,i32) == 10_2 (select,i32)
0_1 (input,i32) == 10_3 (select,i32)
0_1 (input,i32) == 11_1 (eq,i32)
0_1 (input,i32) == 11_2 (eq,i32)
0_1 (input,i32) == 12_1 (ne,i32)
0_1 (input,i32) == 12_2 (ne,i32)
0_1 (input,i32) == 13_1 (ult,i32)
0_1 (input,i32) == 13_2 (ult,i32)
0_1 (input,i32) == 14_1 (slt,i32)
0_1 (input,i32) == 14_2 (slt,i32)
0_1 (input,i32) == 15_1 (ule,i32)
0_1 (input,i32) == 15_2 (ule,i32)
0_1 (input,i32) == 16_1 (sle,i32)
0_1 (input,i32) == 16_2 (sle,i32)
0_1 (input,i32) == 17_0 (output,i32)
0_2 (const,i32) == 1_1 (add,i32)
0_2 (const,i32) == 1_2 (add,i32)
0_2 (const,i32) == 2_1 (sub,i32)
0_2 (const,i32) == 2_2 (sub,i32)
0_2 (const,i32) == 3_1 (mul,i32)
0_2 (const,i32) == 3_2 (mul,i32)
0_2 (const,i32) == 4_1 (and,i32)
0_2 (const,i32) == 4_2 (and,i32)
0_2 (const,i32) == 5_1 (or,i32)
0_2 (const,i32) == 5_2 (or,i32)
0_2 (const,i32) == 6_1 (xor,i32)
0_2 (const,i32) == 6_2 (xor,i32)
0_2 (const,i32) == 7_1 (shl,i32)
0_2 (const,i32) == 7_2 (shl,i32)
0_2 (const,i32) == 8_1 (lshr,i32)
0_2 (const,i32) == 8_2 (lshr,i32)
0_2 (const,i32) == 9_1 (ashr,i32)
0_2 (const,i32) == 9_2 (ashr,i32)
0_2 (const,i32) == 10_2 (select,i32)
0_2 (const,i32) == 10_3 (select,i32)
0_2 (const,i32) == 11_1 (eq,i32)
0_2 (const,i32) == 11_2 (eq,i32)
0_2 (const,i32) == 12_1 (ne,i32)
0_2 (const,i32) == 12_2 (ne,i32)
0_2 (const,i32) == 13_1 (ult,i32)
0_2 (const,i32) == 13_2 (ult,i32)
0_2 (const,i32) == 14_1 (slt,i32)
0_2 (const,i32) == 14_2 (slt,i32)
0_2 (const,i32) == 15_1 (ule,i32)
0_2 (const,i32) == 15_2 (ule,i32)
0_2 (const,i32) == 16_1 (sle,i32)
0_2 (const,i32) == 16_2 (sle,i32)
0_2 (const,i32) == 17_0 (output,i32)
0_3 (const,i32) == 1_1 (add,i32)
0_3 (const,i32) == 1_2 (add,i32)
0_3 (const,i32) == 2_1 (sub,i32)
0_3 (const,i32) == 2_2 (sub,i32)
0_3 (const,i32) == 3_1 (mul,i32)
0_3 (const,i32) == 3_2 (mul,i32)
0_3 (const,i32) == 4_1 (and,i32)
0_3 (const,i32) == 4_2 (and,i32)
0_3 (const,i32) == 5_1 (or,i32)
0_3 (const,i32) == 5_2 (or,i32)
0_3 (const,i32) == 6_1 (xor,i32)
0_3 (const,i32) == 6_2 (xor,i32)
0_3 (const,i32) == 7_1 (shl,i32)
0_3 (const,i32) == 7_2 (shl,i32)
0_3 (const,i32) == 8_1 (lshr,i32)
0_3 (const,i32) == 8_2 (lshr,i32)
0_3 (const,i32) == 9_1 (ashr,i32)
0_3 (const,i32) == 9_2 (ashr,i32)
0_3 (const,i32) == 10_2 (select,i32)
0_3 (const,i32) == 10_3 (select,i32)
0_3 (const,i32) == 11_1 (eq,i32)
0_3 (const,i32) == 11_2 (eq,i32)
0_3 (const,i32) == 12_1 (ne,i32)
0_3 (const,i32) == 12_2 (ne,i32)
0_3 (const,i32) == 13_1 (ult,i32)
0_3 (const,i32) == 13_2 (ult,i32)
0_3 (const,i32) == 14_1 (slt,i32)
0_3 (const,i32) == 14_2 (slt,i32)
0_3 (const,i32) == 15_1 (ule,i32)
0_3 (const,i32) == 15_2 (ule,i32)
0_3 (const,i32) == 16_1 (sle,i32)
0_3 (const,i32) == 16_2 (sle,i32)
0_3 (const,i32) == 17_0 (output,i32)
1_1 (add,i32) == 2_0 (sub,i32)
1_1 (add,i32) == 3_0 (mul,i32)
1_1 (add,i32) == 4_0 (and,i32)
1_1 (add,i32) == 5_0 (or,i32)
1_1 (add,i32) == 6_0 (xor,i32)
1_1 (add,i32) == 7_0 (shl,i32)
1_1 (add,i32) == 8_0 (lshr,i32)
1_1 (add,i32) == 9_0 (ashr,i32)
1_1 (add,i32) == 10_0 (select,i32)
1_1 (add,i32) == 11_0 (zext,eq,i32)
1_1 (add,i32) == 12_0 (zext,ne,i32)
1_1 (add,i32) == 13_0 (zext,ult,i32)
1_1 (add,i32) == 14_0 (zext,slt,i32)
1_1 (add,i32) == 15_0 (zext,ule,i32)
1_1 (add,i32) == 16_0 (zext,sle,i32)
1_2 (add,i32) == 2_0 (sub,i32)
1_2 (add,i32) == 3_0 (mul,i32)
1_2 (add,i32) == 4_0 (and,i32)
1_2 (add,i32) == 5_0 (or,i32)
1_2 (add,i32) == 6_0 (xor,i32)
1_2 (add,i32) == 7_0 (shl,i32)
1_2 (add,i32) == 8_0 (lshr,i32)
1_2 (add,i32) == 9_0 (ashr,i32)
1_2 (add,i32) == 10_0 (select,i32)
1_2 (add,i32) == 11_0 (zext,eq,i32)
1_2 (add,i32) == 12_0 (zext,ne,i32)
1_2 (add,i32) == 13_0 (zext,ult,i32)
1_2 (add,i32) == 14_0 (zext,slt,i32)
1_2 (add,i32) == 15_0 (zext,ule,i32)
1_2 (add,i32) == 16_0 (zext,sle,i32)
2_1 (sub,i32) == 1_0 (add,i32)
2_1 (sub,i32) == 3_0 (mul,i32)
2_1 (sub,i32) == 4_0 (and,i32)
2_1 (sub,i32) == 5_0 (or,i32)
2_1 (sub,i32) == 6_0 (xor,i32)
2_1 (sub,i32) == 7_0 (shl,i32)
2_1 (sub,i32) == 8_0 (lshr,i32)
2_1 (sub,i32) == 9_0 (ashr,i32)
2_1 (sub,i32) == 10_0 (select,i32)
2_1 (sub,i32) == 11_0 (zext,eq,i32)
2_1 (sub,i32) == 12_0 (zext,ne,i32)
2_1 (sub,i32) == 13_0 (zext,ult,i32)
2_1 (sub,i32) == 14_0 (zext,slt,i32)
2_1 (sub,i32) == 15_0 (zext,ule,i32)
2_1 (sub,i32) == 16_0 (zext,sle,i32)
2_2 (sub,i32) == 1_0 (add,i32)
2_2 (sub,i32) == 3_0 (mul,i32)
2_2 (sub,i32) == 4_0 (and,i32)
2_2 (sub,i32) == 5_0 (or,i32)
2_2 (sub,i32) == 6_0 (xor,i32)
2_2 (sub,i32) == 7_0 (shl,i32)
2_2 (sub,i32) == 8_0 (lshr,i32)
2_2 (sub,i32) == 9_0 (ashr,i32)
2_2 (sub,i32) == 10_0 (select,i32)
2_2 (sub,i32) == 11_0 (zext,eq,i32)
2_2 (sub,i32) == 12_0 (zext,ne,i32)
2_2 (sub,i32) == 13_0 (zext,ult,i32)
2_2 (sub,i32) == 14_0 (zext,slt,i32)
2_2 (sub,i32) == 15_0 (zext,ule,i32)
2_2 (sub,i32) == 16_0 (zext,sle,i32)
3_1 (mul,i32) == 1_0 (add,i32)
3_1 (mul,i32) == 2_0 (sub,i32)
3_1 (mul,i32) == 4_0 (and,i32)
3_1 (mul,i32) == 5_0 (or,i32)
3_1 (mul,i32) == 6_0 (xor,i32)
3_1 (mul,i32) == 7_0 (shl,i32)
3_1 (mul,i32) == 8_0 (lshr,i32)
3_1 (mul,i32) == 9_0 (ashr,i32)
3_1 (mul,i32) == 10_0 (select,i32)
3_1 (mul,i32) == 11_0 (zext,eq,i32)
3_1 (mul,i32) == 12_0 (zext,ne,i32)
3_1 (mul,i32) == 13_0 (zext,ult,i32)
3_1 (mul,i32) == 14_0 (zext,slt,i32)
3_1 (mul,i32) == 15_0 (zext,ule,i32)
3_1 (mul,i32) == 16_0 (zext,sle,i32)
3_2 (mul,i32) == 1_0 (add,i32)
3_2 (mul,i32) == 2_0 (sub,i32)
3_2 (mul,i32) == 4_0 (and,i32)
3_2 (mul,i32) == 5_0 (or,i32)
3_2 (mul,i32) == 6_0 (xor,i32)
3_2 (mul,i32) == 7_0 (shl,i32)
3_2 (mul,i32) == 8_0 (lshr,i32)
3_2 (mul,i32) == 9_0 (ashr,i32)
3_2 (mul,i32) == 10_0 (select,i32)
3_2 (mul,i32) == 11_0 (zext,eq,i32)
3_2 (mul,i32) == 12_0 (zext,ne,i32)
3_2 (mul,i32) == 13_0 (zext,ult,i32)
3_2 (mul,i32) == 14_0 (zext,slt,i32)
3_2 (mul,i32) == 15_0 (zext,ule,i32)
3_2 (mul,i32) == 16_0 (zext,sle,i32)
4_1 (and,i32) == 1_0 (add,i32)
4_1 (and,i32) == 2_0 (sub,i32)
4_1 (and,i32) == 3_0 (mul,i32)
4_1 (and,i32) == 5_0 (or,i32)
4_1 (and,i32) == 6_0 (xor,i32)
4_1 (and,i32) == 7_0 (shl,i32)
4_1 (and,i32) == 8_0 (lshr,i32)
4_1 (and,i32) == 9_0 (ashr,i32)
4_1 (and,i32) == 10_0 (select,i32)
4_1 (and,i32) == 11_0 (zext,eq,i32)
4_1 (and,i32) == 12_0 (zext,ne,i32)
4_1 (and,i32) == 13_0 (zext,ult,i32)
4_1 (and,i32) == 14_0 (zext,slt,i32)
4_1 (and,i32) == 15_0 (zext,ule,i32)
4_1 (and,i32) == 16_0 (zext,sle,i32)
4_2 (and,i32) == 1_0 (add,i32)
4_2 (and,i32) == 2_0 (sub,i32)
4_2 (and,i32) == 3_0 (mul,i32)
4_2 (and,i32) == 5_0 (or,i32)
4_2 (and,i32) == 6_0 (xor,i32)
4_2 (and,i32) == 7_0 (shl,i32)
4_2 (and,i32) == 8_0 (lshr,i32)
4_2 (and,i32) == 9_0 (ashr,i32)
4_2 (and,i32) == 10_0 (select,i32)
4_2 (and,i32) == 11_0 (zext,eq,i32)
4_2 (and,i32) == 12_0 (zext,ne,i32)
4_2 (and,i32) == 13_0 (zext,ult,i32)
4_2 (and,i32) == 14_0 (zext,slt,i32)
4_2 (and,i32) == 15_0 (zext,ule,i32)
4_2 (and,i32) == 16_0 (zext,sle,i32)
5_1 (or,i32) == 1_0 (add,i32)
5_1 (or,i32) == 2_0 (sub,i32)
5_1 (or,i32) == 3_0 (mul,i32)
5_1 (or,i32) == 4_0 (and,i32)
5_1 (or,i32) == 6_0 (xor,i32)
5_1 (or,i32) == 7_0 (shl,i32)
5_1 (or,i32) == 8_0 (lshr,i32)
5_1 (or,i32) == 9_0 (ashr,i32)
5_1 (or,i32) == 10_0 (select,i32)
5_1 (or,i32) == 11_0 (zext,eq,i32)
5_1 (or,i32) == 12_0 (zext,ne,i32)
5_1 (or,i32) == 13_0 (zext,ult,i32)
5_1 (or,i32) == 14_0 (zext,slt,i32)
5_1 (or,i32) == 15_0 (zext,ule,i32)
5_1 (or,i32) == 16_0 (zext,sle,i32)
5_2 (or,i32) == 1_0 (add,i32)
5_2 (or,i32) == 2_0 (sub,i32)
5_2 (or,i32) == 3_0 (mul,i32)
5_2 (or,i32) == 4_0 (and,i32)
5_2 (or,i32) == 6_0 (xor,i32)
5_2 (or,i32) == 7_0 (shl,i32)
5_2 (or,i32) == 8_0 (lshr,i32)
5_2 (or,i32) == 9_0 (ashr,i32)
5_2 (or,i32) == 10_0 (select,i32)
5_2 (or,i32) == 11_0 (zext,eq,i32)
5_2 (or,i32) == 12_0 (zext,ne,i32)
5_2 (or,i32) == 13_0 (zext,ult,i32)
5_2 (or,i32) == 14_0 (zext,slt,i32)
5_2 (or,i32) == 15_0 (zext,ule,i32)
5_2 (or,i32) == 16_0 (zext,sle,i32)
6_1 (xor,i32) == 1_0 (add,i32)
6_1 (xor,i32) == 2_0 (sub,i32)
6_1 (xor,i32) == 3_0 (mul,i32)
6_1 (xor,i32) == 4_0 (and,i32)
6_1 (xor,i32) == 5_0 (or,i32)
6_1 (xor,i32) == 7_0 (shl,i32)
6_1 (xor,i32) == 8_0 (lshr,i32)
6_1 (xor,i32) == 9_0 (ashr,i32)
6_1 (xor,i32) == 10_0 (select,i32)
6_1 (xor,i32) == 11_0 (zext,eq,i32)
6_1 (xor,i32) == 12_0 (zext,ne,i32)
6_1 (xor,i32) == 13_0 (zext,ult,i32)
6_1 (xor,i32) == 14_0 (zext,slt,i32)
6_1 (xor,i32) == 15_0 (zext,ule,i32)
6_1 (xor,i32) == 16_0 (zext,sle,i32)
6_2 (xor,i32) == 1_0 (add,i32)
6_2 (xor,i32) == 2_0 (sub,i32)
6_2 (xor,i32) == 3_0 (mul,i32)
6_2 (xor,i32) == 4_0 (and,i32)
6_2 (xor,i32) == 5_0 (or,i32)
6_2 (xor,i32) == 7_0 (shl,i32)
6_2 (xor,i32) == 8_0 (lshr,i32)
6_2 (xor,i32) == 9_0 (ashr,i32)
6_2 (xor,i32) == 10_0 (select,i32)
6_2 (xor,i32) == 11_0 (zext,eq,i32)
6_2 (xor,i32) == 12_0 (zext,ne,i32)
6_2 (xor,i32) == 13_0 (zext,ult,i32)
6_2 (xor,i32) == 14_0 (zext,slt,i32)
6_2 (xor,i32) == 15_0 (zext,ule,i32)
6_2 (xor,i32) == 16_0 (zext,sle,i32)
7_1 (shl,i32) == 1_0 (add,i32)
7_1 (shl,i32) == 2_0 (sub,i32)
7_1 (shl,i32) == 3_0 (mul,i32)
7_1 (shl,i32) == 4_0 (and,i32)
7_1 (shl,i32) == 5_0 (or,i32)
7_1 (shl,i32) == 6_0 (xor,i32)
7_1 (shl,i32) == 8_0 (lshr,i32)
7_1 (shl,i32) == 9_0 (ashr,i32)
7_1 (shl,i32) == 10_0 (select,i32)
7_1 (shl,i32) == 11_0 (zext,eq,i32)
7_1 (shl,i32) == 12_0 (zext,ne,i32)
7_1 (shl,i32) == 13_0 (zext,ult,i32)
7_1 (shl,i32) == 14_0 (zext,slt,i32)
7_1 (shl,i32) == 15_0 (zext,ule,i32)
7_1 (shl,i32) == 16_0 (zext,sle,i32)
7_2 (shl,i32) == 1_0 (add,i32)
7_2 (shl,i32) == 2_0 (sub,i32)
7_2 (shl,i32) == 3_0 (mul,i32)
7_2 (shl,i32) == 4_0 (and,i32)
7_2 (shl,i32) == 5_0 (or,i32)
7_2 (shl,i32) == 6_0 (xor,i32)
7_2 (shl,i32) == 8_0 (lshr,i32)
7_2 (shl,i32) == 9_0 (ashr,i32)
7_2 (shl,i32) == 10_0 (select,i32)
7_2 (shl,i32) == 11_0 (zext,eq,i32)
7_2 (shl,i32) == 12_0 (zext,ne,i32)
7_2 (shl,i32) == 13_0 (zext,ult,i32)
7_2 (shl,i32) == 14_0 (zext,slt,i32)
7_2 (shl,i32) == 15_0 (zext,ule,i32)
7_2 (shl,i32) == 16_0 (zext,sle,i32)
8_1 (lshr,i32) == 1_0 (add,i32)
8_1 (lshr,i32) == 2_0 (sub,i32)
8_1 (lshr,i32) == 3_0 (mul,i32)
8_1 (lshr,i32) == 4_0 (and,i32)
8_1 (lshr,i32) == 5_0 (or,i32)
8_1 (lshr,i32) == 6_0 (xor,i32)
8_1 (lshr,i32) == 7_0 (shl,i32)
8_1 (lshr,i32) == 9_0 (ashr,i32)
8_1 (lshr,i32) == 10_0 (select,i32)
8_1 (lshr,i32) == 11_0 (zext,eq,i32)
8_1 (lshr,i32) == 12_0 (zext,ne,i32)
8_1 (lshr,i32) == 13_0 (zext,ult,i32)
8_1 (lshr,i32) == 14_0 (zext,slt,i32)
8_1 (lshr,i32) == 15_0 (zext,ule,i32)
8_1 (lshr,i32) == 16_0 (zext,sle,i32)
8_2 (lshr,i32) == 1_0 (add,i32)
8_2 (lshr,i32) == 2_0 (sub,i32)
8_2 (lshr,i32) == 3_0 (mul,i32)
8_2 (lshr,i32) == 4_0 (and,i32)
8_2 (lshr,i32) == 5_0 (or,i32)
8_2 (lshr,i32) == 6_0 (xor,i32)
8_2 (lshr,i32) == 7_0 (shl,i32)
8_2 (lshr,i32) == 9_0 (ashr,i32)
8_2 (lshr,i32) == 10_0 (select,i32)
8_2 (lshr,i32) == 11_0 (zext,eq,i32)
8_2 (lshr,i32) == 12_0 (zext,ne,i32)
8_2 (lshr,i32) == 13_0 (zext,ult,i32)
8_2 (lshr,i32) == 14_0 (zext,slt,i32)
8_2 (lshr,i32) == 15_0 (zext,ule,i32)
8_2 (lshr,i32) == 16_0 (zext,sle,i32)
9_1 (ashr,i32) == 1_0 (add,i32)
9_1 (ashr,i32) == 2_0 (sub,i32)
9_1 (ashr,i32) == 3_0 (mul,i32)
9_1 (ashr,i32) == 4_0 (and,i32)
9_1 (ashr,i32) == 5_0 (or,i32)
9_1 (ashr,i32) == 6_0 (xor,i32)
9_1 (ashr,i32) == 7_0 (shl,i32)
9_1 (ashr,i32) == 8_0 (lshr,i32)
9_1 (ashr,i32) == 10_0 (select,i32)
9_1 (ashr,i32) == 11_0 (zext,eq,i32)
9_1 (ashr,i32) == 12_0 (zext,ne,i32)
9_1 (ashr,i32) == 13_0 (zext,ult,i32)
9_1 (ashr,i32) == 14_0 (zext,slt,i32)
9_1 (ashr,i32) == 15_0 (zext,ule,i32)
9_1 (ashr,i32) == 16_0 (zext,sle,i32)
9_2 (ashr,i32) == 1_0 (add,i32)
9_2 (ashr,i32) == 2_0 (sub,i32)
9_2 (ashr,i32) == 3_0 (mul,i32)
9_2 (ashr,i32) == 4_0 (and,i32)
9_2 (ashr,i32) == 5_0 (or,i32)
9_2 (ashr,i32) == 6_0 (xor,i32)
9_2 (ashr,i32) == 7_0 (shl,i32)
9_2 (ashr,i32) == 8_0 (lshr,i32)
9_2 (ashr,i32) == 10_0 (select,i32)
9_2 (ashr,i32) == 11_0 (zext,eq,i32)
9_2 (ashr,i32) == 12_0 (zext,ne,i32)
9_2 (ashr,i32) == 13_0 (zext,ult,i32)
9_2 (ashr,i32) == 14_0 (zext,slt,i32)
9_2 (ashr,i32) == 15_0 (zext,ule,i32)
9_2 (ashr,i32) == 16_0 (zext,sle,i32)
10_1 (select,i32) == 1_0 (add,i32)
10_1 (select,i32) == 2_0 (sub,i32)
10_1 (select,i32) == 3_0 (mul,i32)
10_1 (select,i32) == 4_0 (and,i32)
10_1 (select,i32) == 5_0 (or,i32)
10_1 (select,i32) == 6_0 (xor,i32)
10_1 (select,i32) == 7_0 (shl,i32)
10_1 (select,i32) == 8_0 (lshr,i32)
10_1 (select,i32) == 9_0 (ashr,i32)
10_1 (select,i32) == 11_0 (zext,eq,i32)
10_1 (select,i32) == 12_0 (zext,ne,i32)
10_1 (select,i32) == 13_0 (zext,ult,i32)
10_1 (select,i32) == 14_0 (zext,slt,i32)
10_1 (select,i32) == 15_0 (zext,ule,i32)
10_1 (select,i32) == 16_0 (zext,sle,i32)
10_2 (select,i32) == 1_0 (add,i32)
10_2 (select,i32) == 2_0 (sub,i32)
10_2 (select,i32) == 3_0 (mul,i32)
10_2 (select,i32) == 4_0 (and,i32)
10_2 (select,i32) == 5_0 (or,i32)
10_2 (select,i32) == 6_0 (xor,i32)
10_2 (select,i32) == 7_0 (shl,i32)
10_2 (select,i32) == 8_0 (lshr,i32)
10_2 (select,i32) == 9_0 (ashr,i32)
10_2 (select,i32) == 11_0 (zext,eq,i32)
10_2 (select,i32) == 12_0 (zext,ne,i32)
10_2 (select,i32) == 13_0 (zext,ult,i32)
10_2 (select,i32) == 14_0 (zext,slt,i32)
10_2 (select,i32) == 15_0 (zext,ule,i32)
10_2 (select,i32) == 16_0 (zext,sle,i32)
10_3 (select,i32) == 1_0 (add,i32)
10_3 (select,i32) == 2_0 (sub,i32)
10_3 (select,i32) == 3_0 (mul,i32)
10_3 (select,i32) == 4_0 (and,i32)
10_3 (select,i32) == 5_0 (or,i32)
10_3 (select,i32) == 6_0 (xor,i32)
10_3 (select,i32) == 7_0 (shl,i32)
10_3 (select,i32) == 8_0 (lshr,i32)
10_3 (select,i32) == 9_0 (ashr,i32)
10_3 (select,i32) == 11_0 (zext,eq,i32)
10_3 (select,i32) == 12_0 (zext,ne,i32)
10_3 (select,i32) == 13_0 (zext,ult,i32)
10_3 (select,i32) == 14_0 (zext,slt,i32)
10_3 (select,i32) == 15_0 (zext,ule,i32)
10_3 (select,i32) == 16_0 (zext,sle,i32)
11_1 (eq,i32) == 1_0 (add,i32)
11_1 (eq,i32) == 2_0 (sub,i32)
11_1 (eq,i32) == 3_0 (mul,i32)
11_1 (eq,i32) == 4_0 (and,i32)
11_1 (eq,i32) == 5_0 (or,i32)
11_1 (eq,i32) == 6_0 (xor,i32)
11_1 (eq,i32) == 7_0 (shl,i32)
11_1 (eq,i32) == 8_0 (lshr,i32)
11_1 (eq,i32) == 9_0 (ashr,i32)
11_1 (eq,i32) == 10_0 (select,i32)
11_1 (eq,i32) == 12_0 (zext,ne,i32)
11_1 (eq,i32) == 13_0 (zext,ult,i32)
11_1 (eq,i32) == 14_0 (zext,slt,i32)
11_1 (eq,i32) == 15_0 (zext,ule,i32)
11_1 (eq,i32) == 16_0 (zext,sle,i32)
11_2 (eq,i32) == 1_0 (add,i32)
11_2 (eq,i32) == 2_0 (sub,i32)
11_2 (eq,i32) == 3_0 (mul,i32)
11_2 (eq,i32) == 4_0 (and,i32)
11_2 (eq,i32) == 5_0 (or,i32)
11_2 (eq,i32) == 6_0 (xor,i32)
11_2 (eq,i32) == 7_0 (shl,i32)
11_2 (eq,i32) == 8_0 (lshr,i32)
11_2 (eq,i32) == 9_0 (ashr,i32)
11_2 (eq,i32) == 10_0 (select,i32)
11_2 (eq,i32) == 12_0 (zext,ne,i32)
11_2 (eq,i32) == 13_0 (zext,ult,i32)
11_2 (eq,i32) == 14_0 (zext,slt,i32)
11_2 (eq,i32) == 15_0 (zext,ule,i32)
11_2 (eq,i32) == 16_0 (zext,sle,i32)
12_1 (ne,i32) == 1_0 (add,i32)
12_1 (ne,i32) == 2_0 (sub,i32)
12_1 (ne,i32) == 3_0 (mul,i32)
12_1 (ne,i32) == 4_0 (and,i32)
12_1 (ne,i32) == 5_0 (or,i32)
12_1 (ne,i32) == 6_0 (xor,i32)
12_1 (ne,i32) == 7_0 (shl,i32)
12_1 (ne,i32) == 8_0 (lshr,i32)
12_1 (ne,i32) == 9_0 (ashr,i32)
12_1 (ne,i32) == 10_0 (select,i32)
12_1 (ne,i32) == 11_0 (zext,eq,i32)
12_1 (ne,i32) == 13_0 (zext,ult,i32)
12_1 (ne,i32) == 14_0 (zext,slt,i32)
12_1 (ne,i32) == 15_0 (zext,ule,i32)
12_1 (ne,i32) == 16_0 (zext,sle,i32)
12_2 (ne,i32) == 1_0 (add,i32)
12_2 (ne,i32) == 2_0 (sub,i32)
12_2 (ne,i32) == 3_0 (mul,i32)
12_2 (ne,i32) == 4_0 (and,i32)
12_2 (ne,i32) == 5_0 (or,i32)
12_2 (ne,i32) == 6_0 (xor,i32)
12_2 (ne,i32) == 7_0 (shl,i32)
12_2 (ne,i32) == 8_0 (lshr,i32)
12_2 (ne,i32) == 9_0 (ashr,i32)
12_2 (ne,i32) == 10_0 (select,i32)
12_2 (ne,i32) == 11_0 (zext,eq,i32)
12_2 (ne,i32) == 13_0 (zext,ult,i32)
12_2 (ne,i32) == 14_0 (zext,slt,i32)
12_2 (ne,i32) == 15_0 (zext,ule,i32)
12_2 (ne,i32) == 16_0 (zext,sle,i32)
13_1 (ult,i32) == 1_0 (add,i32)
13_1 (ult,i32) == 2_0 (sub,i32)
13_1 (ult,i32) == 3_0 (mul,i32)
13_1 (ult,i32) == 4_0 (and,i32)
13_1 (ult,i32) == 5_0 (or,i32)
13_1 (ult,i32) == 6_0 (xor,i32)
13_1 (ult,i32) == 7_0 (shl,i32)
13_1 (ult,i32) == 8_0 (lshr,i32)
13_1 (ult,i32) == 9_0 (ashr,i32)
13_1 (ult,i32) == 10_0 (select,i32)
13_1 (ult,i32) == 11_0 (zext,eq,i32)
13_1 (ult,i32) == 12_0 (zext,ne,i32)
13_1 (ult,i32) == 14_0 (zext,slt,i32)
13_1 (ult,i32) == 15_0 (zext,ule,i32)
13_1 (ult,i32) == 16_0 (zext,sle,i32)
13_2 (ult,i32) == 1_0 (add,i32)
13_2 (ult,i32) == 2_0 (sub,i32)
13_2 (ult,i32) == 3_0 (mul,i32)
13_2 (ult,i32) == 4_0 (and,i32)
13_2 (ult,i32) == 5_0 (or,i32)
13_2 (ult,i32) == 6_0 (xor,i32)
13_2 (ult,i32) == 7_0 (shl,i32)
13_2 (ult,i32) == 8_0 (lshr,i32)
13_2 (ult,i32) == 9_0 (ashr,i32)
13_2 (ult,i32) == 10_0 (select,i32)
13_2 (ult,i32) == 11_0 (zext,eq,i32)
13_2 (ult,i32) == 12_0 (zext,ne,i32)
13_2 (ult,i32) == 14_0 (zext,slt,i32)
13_2 (ult,i32) == 15_0 (zext,ule,i32)
13_2 (ult,i32) == 16_0 (zext,sle,i32)
14_1 (slt,i32) == 1_0 (add,i32)
14_1 (slt,i32) == 2_0 (sub,i32)
14_1 (slt,i32) == 3_0 (mul,i32)
14_1 (slt,i32) == 4_0 (and,i32)
14_1 (slt,i32) == 5_0 (or,i32)
14_1 (slt,i32) == 6_0 (xor,i32)
14_1 (slt,i32) == 7_0 (shl,i32)
14_1 (slt,i32) == 8_0 (lshr,i32)
14_1 (slt,i32) == 9_0 (ashr,i32)
14_1 (slt,i32) == 10_0 (select,i32)
14_1 (slt,i32) == 11_0 (zext,eq,i32)
14_1 (slt,i32) == 12_0 (zext,ne,i32)
14_1 (slt,i32) == 13_0 (zext,ult,i32)
14_1 (slt,i32) == 15_0 (zext,ule,i32)
14_1 (slt,i32) == 16_0 (zext,sle,i32)
14_2 (slt,i32) == 1_0 (add,i32)
14_2 (slt,i32) == 2_0 (sub,i32)
14_2 (slt,i32) == 3_0 (mul,i32)
14_2 (slt,i32) == 4_0 (and,i32)
14_2 (slt,i32) == 5_0 (or,i32)
14_2 (slt,i32) == 6_0 (xor,i32)
14_2 (slt,i32) == 7_0 (shl,i32)
14_2 (slt,i32) == 8_0 (lshr,i32)
14_2 (slt,i32) == 9_0 (ashr,i32)
14_2 (slt,i32) == 10_0 (select,i32)
14_2 (slt,i32) == 11_0 (zext,eq,i32)
14_2 (slt,i32) == 12_0 (zext,ne,i32)
14_2 (slt,i32) == 13_0 (zext,ult,i32)
14_2 (slt,i32) == 15_0 (zext,ule,i32)
14_2 (slt,i32) == 16_0 (zext,sle,i32)
15_1 (ule,i32) == 1_0 (add,i32)
15_1 (ule,i32) == 2_0 (sub,i32)
15_1 (ule,i32) == 3_0 (mul,i32)
15_1 (ule,i32) == 4_0 (and,i32)
15_1 (ule,i32) == 5_0 (or,i32)
15_1 (ule,i32) == 6_0 (xor,i32)
15_1 (ule,i32) == 7_0 (shl,i32)
15_1 (ule,i32) == 8_0 (lshr,i32)
15_1 (ule,i32) == 9_0 (ashr,i32)
15_1 (ule,i32) == 10_0 (select,i32)
15_1 (ule,i32) == 11_0 (zext,eq,i32)
15_1 (ule,i32) == 12_0 (zext,ne,i32)
15_1 (ule,i32) == 13_0 (zext,ult,i32)
15_1 (ule,i32) == 14_0 (zext,slt,i32)
15_1 (ule,i32) == 16_0 (zext,sle,i32)
15_2 (ule,i32) == 1_0 (add,i32)
15_2 (ule,i32) == 2_0 (sub,i32)
15_2 (ule,i32) == 3_0 (mul,i32)
15_2 (ule,i32) == 4_0 (and,i32)
15_2 (ule,i32) == 5_0 (or,i32)
15_2 (ule,i32) == 6_0 (xor,i32)
15_2 (ule,i32) == 7_0 (shl,i32)
15_2 (ule,i32) == 8_0 (lshr,i32)
15_2 (ule,i32) == 9_0 (ashr,i32)
15_2 (ule,i32) == 10_0 (select,i32)
15_2 (ule,i32) == 11_0 (zext,eq,i32)
15_2 (ule,i32) == 12_0 (zext,ne,i32)
15_2 (ule,i32) == 13_0 (zext,ult,i32)
15_2 (ule,i32) == 14_0 (zext,slt,i32)
15_2 (ule,i32) == 16_0 (zext,sle,i32)
16_1 (sle,i32) == 1_0 (add,i32)
16_1 (sle,i32) == 2_0 (sub,i32)
16_1 (sle,i32) == 3_0 (mul,i32)
16_1 (sle,i32) == 4_0 (and,i32)
16_1 (sle,i32) == 5_0 (or,i32)
16_1 (sle,i32) == 6_0 (xor,i32)
16_1 (sle,i32) == 7_0 (shl,i32)
16_1 (sle,i32) == 8_0 (lshr,i32)
16_1 (sle,i32) == 9_0 (ashr,i32)
16_1 (sle,i32) == 10_0 (select,i32)
16_1 (sle,i32) == 11_0 (zext,eq,i32)
16_1 (sle,i32) == 12_0 (zext,ne,i32)
16_1 (sle,i32) == 13_0 (zext,ult,i32)
16_1 (sle,i32) == 14_0 (zext,slt,i32)
16_1 (sle,i32) == 15_0 (zext,ule,i32)
16_2 (sle,i32) == 1_0 (add,i32)
16_2 (sle,i32) == 2_0 (sub,i32)
16_2 (sle,i32) == 3_0 (mul,i32)
16_2 (sle,i32) == 4_0 (and,i32)
16_2 (sle,i32) == 5_0 (or,i32)
16_2 (sle,i32) == 6_0 (xor,i32)
16_2 (sle,i32) == 7_0 (shl,i32)
16_2 (sle,i32) == 8_0 (lshr,i32)
16_2 (sle,i32) == 9_0 (ashr,i32)
16_2 (sle,i32) == 10_0 (select,i32)
16_2 (sle,i32) == 11_0 (zext,eq,i32)
16_2 (sle,i32) == 12_0 (zext,ne,i32)
16_2 (sle,i32) == 13_0 (zext,ult,i32)
16_2 (sle,i32) == 14_0 (zext,slt,i32)
16_2 (sle,i32) == 15_0 (zext,ule,i32)
1_0 (add,i32) == 17_0 (output,i32)
2_0 (sub,i32) == 17_0 (output,i32)
3_0 (mul,i32) == 17_0 (output,i32)
4_0 (and,i32) == 17_0 (output,i32)
5_0 (or,i32) == 17_0 (output,i32)
6_0 (xor,i32) == 17_0 (output,i32)
7_0 (shl,i32) == 17_0 (output,i32)
8_0 (lshr,i32) == 17_0 (output,i32)
9_0 (ashr,i32) == 17_0 (output,i32)
10_0 (select,i32) == 17_0 (output,i32)
11_0 (zext,eq,i32) == 17_0 (output,i32)
12_0 (zext,ne,i32) == 17_0 (output,i32)
13_0 (zext,ult,i32) == 17_0 (output,i32)
14_0 (zext,slt,i32) == 17_0 (output,i32)
15_0 (zext,ule,i32) == 17_0 (output,i32)
16_0 (zext,sle,i32) == 17_0 (output,i32)
synthesizing using 0 component(s)
0 <= 17_0 (output,i32) < 3
setting input in_0_1 to 0
setting input in_0_1 to 536870912
setting input in_0_1 to 268435456
setting input in_0_1 to 32768
solving synthesis constraint.. UNSAT
; no valid wiring found
Souper pass finished
/pipe/benchmark4pipeline_c/babbage_problem
526 479

Wed Feb 19 14:08:43 UTC 2020 Wed Feb 19 14:02:23 UTC 2020
