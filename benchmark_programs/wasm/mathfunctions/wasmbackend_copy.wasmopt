
; function: $0

; start LHS (in $0)
%0:i32 = var
%1 = and %0, 32:i32
infer %1


; start LHS (in $0)
%0:i32 = var
%1 = and %0, 32:i32
%2 = eq %1, 0:i32
infer %2


; function: $1

; start LHS (in $1)
%0:i32 = var
%1 = sub %0, 256:i32
infer %1


; start LHS (in $1)
%0:i32 = var
%1:i32 = var
%2 = sle %0, %1
infer %2


; start LHS (in $1)
%0:i32 = var
%1 = and %0, 73728:i32
infer %1


; start LHS (in $1)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
infer %2


; start LHS (in $1)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1 (hasExternalUses)
%3 = ult %2, 256:i32
infer %3


; start LHS (in $1)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1 (hasExternalUses)
%3 = ult %2, 256:i32 (hasExternalUses)
%4 = select %3, %2, 256:i32
infer %4


; start LHS (in $1)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1 (hasExternalUses)
%3 = ult %2, 256:i32 (hasExternalUses)
%4:i32 = zext %3
%5 = eq %4, 0:i32
infer %5


; start LHS (in $1)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3 = sub %0, %1
%4 = ult %3, 256:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1:i1
infer %2


; start LHS (in $1)
%0:i32 = var
%1 = add %0, -256:i32
%2:i32 = var
%3:i32 = var
%4 = sub %2, %3
%5 = ult %4, 256:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1:i1
infer %1


; start LHS (in $1)
%0:i32 = var
%1 = add %0, -256:i32
%2 = ult 255:i32, %1
%3:i32 = var
%4:i32 = var
%5 = sub %3, %4
%6 = ult %5, 256:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %8 1:i1
infer %2


; start LHS (in $1)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3 = and %2, 255:i32
%4 = sub %0, %1
%5 = ult %4, 256:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1:i1
infer %3


; start LHS (in $1)
%0:i32 = var
%1 = sub %0, 256:i32 (hasExternalUses)
%2 = add %1, 256:i32
infer %2


; function: $2

; start LHS (in $2)
%0:i32 = var
%1 = and %0, 64:i32
infer %1


; start LHS (in $2)
%0:i32 = var
%1 = and %0, 64:i32
%2 = eq %1, 0:i32
infer %2


; start LHS (in $2)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = and %0, 64:i32
%3 = eq %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $2)
%0:i32 = var
%1 = sub 64:i32, %0
%2 = and %0, 64:i32
%3 = eq %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $2)
%0:i64 = var
%1:i64 = var
%2 = lshr %0, %1
%3:i32 = var
%4 = and %3, 64:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $2)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3:i32 = var
%4 = and %3, 64:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $2)
%0:i64 = var
%1:i64 = var
%2 = lshr %0, %1
%3:i64 = var
%4:i64 = var
%5 = shl %3, %4
%6 = or %2, %5
%7:i32 = var
%8 = and %7, 64:i32
%9 = eq %8, 0:i32
pc %9 1:i1
infer %6


; start LHS (in $2)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3:i32 = var
%4 = and %3, 64:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $2)
%0:i32 = var
%1 = add %0, -64:i32
infer %1


; start LHS (in $2)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
infer %2


; function: $3

; start LHS (in $3)
%0:i64 = var
%1 = ne %0, 0:i64
infer %1


; start LHS (in $3)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64
infer %1


; start LHS (in $3)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = ult 9223090561878065152:i64, %1
infer %2


; start LHS (in $3)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
infer %2


; start LHS (in $3)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
%3:i64 = var
%4 = ne %3, 0:i64
%5:i32 = zext %4
%6 = ult 9223090561878065152:i64, %1
%7:i32 = zext %6
%8 = select %2, %5, %7
infer %8


; start LHS (in $3)
%0:i64 = var
%1 = ne %0, 0:i64
infer %1


; start LHS (in $3)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64
infer %1


; start LHS (in $3)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = ult 9223090561878065152:i64, %1
infer %2


; start LHS (in $3)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
infer %2


; start LHS (in $3)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
%3:i64 = var
%4 = ne %3, 0:i64
%5:i32 = zext %4
%6 = ult 9223090561878065152:i64, %1
%7:i32 = zext %6
%8 = select %2, %5, %7
infer %8


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
infer %2


; start LHS (in $3)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = or %1, %3
infer %4


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5:i64 = var
%6 = and %5, 9223372036854775807:i64 (hasExternalUses)
%7 = or %4, %6
%8 = or %2, %7
infer %8


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5:i64 = var
%6 = and %5, 9223372036854775807:i64 (hasExternalUses)
%7 = or %4, %6
%8 = or %2, %7
%9 = eq %8, 0:i64
infer %9


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5:i64 = var
%6 = and %5, 9223372036854775807:i64 (hasExternalUses)
%7 = or %4, %6
%8 = or %2, %7
%9 = eq %8, 0:i64
%10:i32 = zext %9
%11 = eq %10, 0:i32
infer %11


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = and %0, %1
%3:i64 = var
%4:i64 = var
%5 = or %3, %4
%6 = and %0, 9223372036854775807:i64
%7 = and %1, 9223372036854775807:i64
%8 = or %6, %7
%9 = or %5, %8
%10 = eq %9, 0:i64
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1:i1
infer %2


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = and %0, %1
%3 = slt %2, 0:i64
%4:i64 = var
%5:i64 = var
%6 = or %4, %5
%7 = and %0, 9223372036854775807:i64
%8 = and %1, 9223372036854775807:i64
%9 = or %7, %8
%10 = or %6, %9
%11 = eq %10, 0:i64
%12:i32 = zext %11
%13 = eq %12, 0:i32
pc %13 1:i1
infer %3


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = ult %0, %1
%3 = or %1, %0
%4:i64 = var
%5 = and %4, 9223372036854775807:i64
%6:i64 = var
%7 = and %6, 9223372036854775807:i64
%8 = or %5, %7
%9 = or %3, %8
%10 = eq %9, 0:i64
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1:i1
infer %2


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = slt %0, %1
%3:i64 = var
%4:i64 = var
%5 = or %3, %4
%6 = and %1, 9223372036854775807:i64
%7 = and %0, 9223372036854775807:i64
%8 = or %6, %7
%9 = or %5, %8
%10 = eq %9, 0:i64
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1:i1
infer %2


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = eq %0, %1
%3:i64 = var
%4:i64 = var
%5 = or %3, %4
%6 = and %1, 9223372036854775807:i64
%7 = and %0, 9223372036854775807:i64
%8 = or %6, %7
%9 = or %5, %8
%10 = eq %9, 0:i64
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1:i1
infer %2


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = eq %0, %1
%3:i64 = var
%4:i64 = var
%5 = ult %3, %4
%6:i32 = zext %5
%7 = slt %0, %1
%8:i32 = zext %7
%9 = select %2, %6, %8
%10 = or %4, %3
%11 = and %1, 9223372036854775807:i64
%12 = and %0, 9223372036854775807:i64
%13 = or %11, %12
%14 = or %10, %13
%15 = eq %14, 0:i64
%16:i32 = zext %15
%17 = eq %16, 0:i32
pc %17 1:i1
infer %9


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3 = or %1, %0
%4:i64 = var
%5 = and %4, 9223372036854775807:i64
%6:i64 = var
%7 = and %6, 9223372036854775807:i64
%8 = or %5, %7
%9 = or %3, %8
%10 = eq %9, 0:i64
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1:i1
infer %2


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3:i64 = var
%4:i64 = var
%5 = or %3, %4
%6 = and %1, 9223372036854775807:i64
%7 = and %0, 9223372036854775807:i64
%8 = or %6, %7
%9 = or %5, %8
%10 = eq %9, 0:i64
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1:i1
infer %2


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3:i64 = var
%4:i64 = var
%5 = xor %3, %4
%6 = or %2, %5
%7 = or %1, %0
%8 = and %4, 9223372036854775807:i64
%9 = and %3, 9223372036854775807:i64
%10 = or %8, %9
%11 = or %7, %10
%12 = eq %11, 0:i64
%13:i32 = zext %12
%14 = eq %13, 0:i32
pc %14 1:i1
infer %6


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3:i64 = var
%4:i64 = var
%5 = xor %3, %4
%6 = or %2, %5
%7 = ne %6, 0:i64
%8 = or %1, %0
%9 = and %4, 9223372036854775807:i64
%10 = and %3, 9223372036854775807:i64
%11 = or %9, %10
%12 = or %8, %11
%13 = eq %12, 0:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %15 1:i1
infer %7


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = ult %0, %1
infer %2


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = slt %0, %1
infer %2


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = eq %0, %1
infer %2


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = eq %0, %1
%3:i64 = var
%4:i64 = var
%5 = ult %3, %4
%6:i32 = zext %5
%7 = slt %1, %0
%8:i32 = zext %7
%9 = select %2, %6, %8
infer %9


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
infer %2


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
infer %2


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3:i64 = var
%4:i64 = var
%5 = xor %3, %4
%6 = or %2, %5
infer %6


; start LHS (in $3)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3:i64 = var
%4:i64 = var
%5 = xor %3, %4
%6 = or %2, %5
%7 = ne %6, 0:i64
infer %7


; function: $4

; start LHS (in $4)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $4)
%0:i32 = var
%1 = shl %0, 8:i32
infer %1


; start LHS (in $4)
%0:i32 = var
%1 = shl %0, 8:i32
%2 = and %1, 16711680:i32
infer %2


; start LHS (in $4)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = shl %0, 8:i32
%3 = and %2, 16711680:i32
%4 = or %1, %3
infer %4


; start LHS (in $4)
%0:i32 = var
%1 = lshr %0, 8:i32
infer %1


; start LHS (in $4)
%0:i32 = var
%1 = lshr %0, 8:i32
%2 = and %1, 65280:i32
infer %2


; start LHS (in $4)
%0:i32 = var
%1 = lshr %0, 24:i32
infer %1


; start LHS (in $4)
%0:i32 = var
%1 = lshr %0, 8:i32
%2 = and %1, 65280:i32
%3 = lshr %0, 24:i32
%4 = or %2, %3
infer %4


; start LHS (in $4)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = shl %0, 8:i32
%3 = and %2, 16711680:i32
%4 = or %1, %3
%5 = lshr %0, 8:i32
%6 = and %5, 65280:i32
%7 = lshr %0, 24:i32
%8 = or %6, %7
%9 = or %4, %8
infer %9


; start LHS (in $4)
%0:i32 = var
%1 = ne %0, 0:i32
infer %1


; start LHS (in $4)
%0:i32 = var
%1 = ne %0, 0:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = shl %2, 8:i32
%5 = and %4, 16711680:i32
%6 = or %3, %5
%7 = lshr %2, 8:i32
%8 = and %7, 65280:i32
%9 = lshr %2, 24:i32
%10 = or %8, %9
%11 = or %6, %10
%12 = select %1, %11, %2
infer %12


; function: $5

; start LHS (in $5)
%0:i32 = var
%1 = and %0, 64:i32
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = and %0, 64:i32
%2 = eq %1, 0:i32
infer %2


; start LHS (in $5)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = and %0, 64:i32
%3 = eq %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = sub 64:i32, %0
%2 = and %0, 64:i32
%3 = eq %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $5)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3:i32 = var
%4 = and %3, 64:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $5)
%0:i64 = var
%1:i64 = var
%2 = lshr %0, %1
%3:i32 = var
%4 = and %3, 64:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $5)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3:i64 = var
%4:i64 = var
%5 = lshr %3, %4
%6 = or %2, %5
%7:i32 = var
%8 = and %7, 64:i32
%9 = eq %8, 0:i32
pc %9 1:i1
infer %6


; start LHS (in $5)
%0:i64 = var
%1:i64 = var
%2 = lshr %0, %1
%3:i32 = var
%4 = and %3, 64:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $5)
%0:i32 = var
%1 = add %0, -64:i32
infer %1


; start LHS (in $5)
%0:i64 = var
%1:i64 = var
%2 = lshr %0, %1
infer %2


; start LHS (in $5)
%0 = block 2
%1:i64 = var
%2:i64 = var
%3 = shl %1, %2
%4:i64 = var
%5:i64 = var
%6 = lshr %4, %5
%7 = or %3, %6
%8:i64 = var
%9 = lshr %1, %8
%10 = phi %0, %7, %9
%11 = or 0:i64, %10
infer %11


; function: $6

; start LHS (in $6)
%0:i64 = var
%1 = ule 4294967296:i64, %0
infer %1


; start LHS (in $6)
%0:i32 = var
%1 = add %0, -1:i32
%2:i64 = var
%3 = ule 4294967296:i64, %2
pc %3 1:i1
infer %1


; start LHS (in $6)
%0:i64 = var
%1 = udiv %0, 10:i64
%2:i64 = var
%3 = ule 4294967296:i64, %2
pc %3 1:i1
infer %1


; start LHS (in $6)
%0:i64 = var
%1 = udiv %0, 10:i64 (hasExternalUses)
%2 = mul %1, 10:i64
%3:i64 = var
%4 = ule 4294967296:i64, %3
pc %4 1:i1
infer %2


; start LHS (in $6)
%0:i64 = var
%1 = udiv %0, 10:i64 (hasExternalUses)
%2 = mul %1, 10:i64
%3 = sub %0, %2
%4:i64 = var
%5 = ule 4294967296:i64, %4
pc %5 1:i1
infer %3


; start LHS (in $6)
%0:i32 = var
%1 = or %0, 48:i32
%2:i64 = var
%3 = ule 4294967296:i64, %2
pc %3 1:i1
infer %1


; start LHS (in $6)
%0:i64 = var
%1 = ult 42949672959:i64, %0
%2:i64 = var
%3 = ule 4294967296:i64, %2
pc %3 1:i1
infer %1


; start LHS (in $6)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $6)
%0:i32 = var
%1 = udiv %0, 10:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $6)
%0:i32 = var
%1 = udiv %0, 10:i32 (hasExternalUses)
%2 = mul %1, 10:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $6)
%0:i32 = var
%1 = udiv %0, 10:i32 (hasExternalUses)
%2 = mul %1, 10:i32
%3 = sub %0, %2
%4:i32 = var
%5 = ne %4, 0:i32
pc %5 1:i1
infer %3


; start LHS (in $6)
%0:i32 = var
%1 = udiv %0, 10:i32 (hasExternalUses)
%2 = mul %1, 10:i32
%3 = sub %0, %2
%4 = or %3, 48:i32
%5:i32 = var
%6 = ne %5, 0:i32
pc %6 1:i1
infer %4


; start LHS (in $6)
%0:i32 = var
%1 = ult 9:i32, %0
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; function: $7

; start LHS (in $7)
%0:i32 = var
%1 = sub %0, 96:i32
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 17:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = shl %0, 47:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 17:i64
%2:i64 = var
%3 = shl %2, 47:i64
%4 = or %1, %3
infer %4


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 32:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = shl %0, 32:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 32:i64
%2:i64 = var
%3 = shl %2, 32:i64
%4 = or %1, %3
infer %4


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 49:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2 = shl %1, 15:i64
infer %2


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 49:i64
%2:i64 = var
%3 = and %2, 281474976710655:i64 (hasExternalUses)
%4 = shl %3, 15:i64
%5 = or %1, %4
infer %5


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
infer %2


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3 = and %2, -9223372036854775808:i64
infer %3


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2 = lshr %1, 17:i64
infer %2


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2 = lshr %1, 32:i64
infer %2


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 48:i64
infer %1


; start LHS (in $7)
%0:i32 = var
%1 = and %0, 32767:i32
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 48:i64
infer %1


; start LHS (in $7)
%0:i32 = var
%1 = and %0, 32767:i32
infer %1


; start LHS (in $7)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = add %1, -1:i32
infer %2


; start LHS (in $7)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = add %1, -1:i32
%3 = ule %2, 32765:i32
infer %3


; start LHS (in $7)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = add %1, -1:i32
%3:i32 = var
%4 = and %3, 32767:i32
%5 = add %4, -1:i32
%6 = ule %5, 32765:i32
pc %6 1:i1
infer %2


; start LHS (in $7)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = add %1, -1:i32
%3 = ult %2, 32766:i32
%4:i32 = var
%5 = and %4, 32767:i32
%6 = add %5, -1:i32
%7 = ule %6, 32765:i32
pc %7 1:i1
infer %3


; start LHS (in $7)
%0:i64 = var
%1 = eq %0, 0:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = ult %1, 9223090561878065152:i64
infer %2


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
infer %2


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = ult %1, 9223090561878065152:i64
%7:i32 = zext %6
%8 = select %2, %5, %7
infer %8


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = ult %1, 9223090561878065152:i64
%7:i32 = zext %6
%8 = select %2, %5, %7
%9 = eq %8, 0:i32
infer %9


; start LHS (in $7)
%0:i64 = var
%1 = or %0, 140737488355328:i64
%2 = and %0, 9223372036854775807:i64
%3 = eq %2, 9223090561878065152:i64
%4:i64 = var
%5 = eq %4, 0:i64
%6:i32 = zext %5
%7 = ult %2, 9223090561878065152:i64
%8:i32 = zext %7
%9 = select %3, %6, %8
%10 = eq %9, 0:i32
pc %10 1:i1
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = eq %0, 0:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = ult %1, 9223090561878065152:i64
infer %2


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
infer %2


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = ult %1, 9223090561878065152:i64
%7:i32 = zext %6
%8 = select %2, %5, %7
infer %8


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = ult %1, 9223090561878065152:i64
%7:i32 = zext %6
%8 = select %2, %5, %7
%9 = eq %8, 0:i32
infer %9


; start LHS (in $7)
%0:i64 = var
%1 = or %0, 140737488355328:i64
%2 = and %0, 9223372036854775807:i64
%3 = eq %2, 9223090561878065152:i64
%4:i64 = var
%5 = eq %4, 0:i64
%6:i32 = zext %5
%7 = ult %2, 9223090561878065152:i64
%8:i32 = zext %7
%9 = select %3, %6, %8
%10 = eq %9, 0:i32
pc %10 1:i1
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = xor %1, 9223090561878065152:i64
infer %2


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = xor %2, 9223090561878065152:i64
%4 = or %0, %3
infer %4


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = xor %2, 9223090561878065152:i64
%4 = or %0, %3
%5 = eq %4, 0:i64
infer %5


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
%4:i64 = var
%5:i64 = var
%6 = and %5, 9223372036854775807:i64
%7 = xor %6, 9223090561878065152:i64
%8 = or %4, %7
%9 = eq %8, 0:i64
pc %9 1:i1
infer %3


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
%4 = eq %3, 0:i64
%5:i64 = var
%6:i64 = var
%7 = and %6, 9223372036854775807:i64
%8 = xor %7, 9223090561878065152:i64
%9 = or %5, %8
%10 = eq %9, 0:i64
pc %10 1:i1
infer %4


; start LHS (in $7)
%0:i64 = var
%1 = and %0, -9223372036854775808:i64
%2:i64 = var
%3:i64 = var
%4 = and %3, 9223372036854775807:i64
%5 = xor %4, 9223090561878065152:i64
%6 = or %2, %5
%7 = eq %6, 0:i64
pc %7 1:i1
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = and %0, -9223372036854775808:i64
%2:i64 = var
%3 = xor %1, %2
%4:i64 = var
%5 = and %2, 9223372036854775807:i64
%6 = xor %5, 9223090561878065152:i64
%7 = or %4, %6
%8 = eq %7, 0:i64
pc %8 1:i1
infer %3


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = xor %1, 9223090561878065152:i64
infer %2


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = xor %2, 9223090561878065152:i64
%4 = or %0, %3
infer %4


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = xor %2, 9223090561878065152:i64
%4 = or %0, %3
%5 = ne %4, 0:i64
infer %5


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
infer %3


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
%4 = eq %3, 0:i64
infer %4


; start LHS (in $7)
%0:i64 = var
%1 = and %0, -9223372036854775808:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = and %0, -9223372036854775808:i64
%2:i64 = var
%3 = xor %1, %2
infer %3


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
infer %3


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
%4 = eq %3, 0:i64
infer %4


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
infer %3


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
%4 = eq %3, 0:i64
infer %4


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = ule %1, 281474976710655:i64
infer %2


; start LHS (in $7)
%0:i32 = var
%1 = sub %0, 96:i32 (hasExternalUses)
%2 = add %1, 80:i32
%3:i64 = var
%4 = and %3, 9223372036854775807:i64
%5 = ule %4, 281474976710655:i64
pc %5 1:i1
infer %2


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2 = eq %1, 0:i64
%3 = and %0, 9223372036854775807:i64
%4 = ule %3, 281474976710655:i64
pc %4 1:i1
infer %2


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2 = eq %1, 0:i64 (hasExternalUses)
%3:i64 = var
%4 = select %2, %3, %1
%5 = and %0, 9223372036854775807:i64
%6 = ule %5, 281474976710655:i64
pc %6 1:i1
infer %4


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2 = eq %1, 0:i64 (hasExternalUses)
%3:i64 = var
%4 = select %2, %3, %1
%5 = ctlz %4
%6 = and %0, 9223372036854775807:i64
%7 = ule %6, 281474976710655:i64
pc %7 1:i1
infer %5


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2 = eq %1, 0:i64 (hasExternalUses)
%3:i32 = zext %2
%4 = shl %3, 6:i32
%5 = and %0, 9223372036854775807:i64
%6 = ule %5, 281474976710655:i64
pc %6 1:i1
infer %4


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2 = eq %1, 0:i64 (hasExternalUses)
%3:i64 = var
%4 = select %2, %3, %1
%5 = ctlz %4
%6:i64 = var
%7 = add %5, %6
%8 = and %0, 9223372036854775807:i64
%9 = ule %8, 281474976710655:i64
pc %9 1:i1
infer %7


; start LHS (in $7)
%0:i32 = var
%1 = add %0, -15:i32
%2:i64 = var
%3 = and %2, 9223372036854775807:i64
%4 = ule %3, 281474976710655:i64
pc %4 1:i1
infer %1


; start LHS (in $7)
%0:i32 = var
%1 = sub 16:i32, %0
%2:i64 = var
%3 = and %2, 9223372036854775807:i64
%4 = ule %3, 281474976710655:i64
pc %4 1:i1
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 32:i64
%2:i64 = var
%3 = and %2, 9223372036854775807:i64
%4 = ule %3, 281474976710655:i64
pc %4 1:i1
infer %1


; start LHS (in $7)
%0:i32 = var
%1 = sub %0, 96:i32 (hasExternalUses)
%2 = add %1, 88:i32
%3:i64 = var
%4 = and %3, 9223372036854775807:i64
%5 = ule %4, 281474976710655:i64
pc %5 1:i1
infer %2


; start LHS (in $7)
%0:i64 = var
%1 = shl %0, 32:i64
%2:i64 = var
%3 = and %2, 9223372036854775807:i64
%4 = ule %3, 281474976710655:i64
pc %4 1:i1
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 32:i64
%2:i64 = var
%3 = shl %2, 32:i64
%4 = or %1, %3
%5:i64 = var
%6 = and %5, 9223372036854775807:i64
%7 = ule %6, 281474976710655:i64
pc %7 1:i1
infer %4


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 32:i64
%2:i64 = var
%3 = and %2, 9223372036854775807:i64
%4 = ule %3, 281474976710655:i64
pc %4 1:i1
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = ult 281474976710655:i64, %1
infer %2


; start LHS (in $7)
%0:i32 = var
%1 = sub %0, 96:i32 (hasExternalUses)
%2 = sub %1, -64:i32
infer %2


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2 = eq %1, 0:i64
infer %2


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2 = eq %1, 0:i64 (hasExternalUses)
%3:i64 = var
%4 = select %2, %3, %1
infer %4


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2 = eq %1, 0:i64 (hasExternalUses)
%3:i64 = var
%4 = select %2, %3, %1
%5 = ctlz %4
infer %5


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2 = eq %1, 0:i64 (hasExternalUses)
%3:i32 = zext %2
%4 = shl %3, 6:i32
infer %4


; start LHS (in $7)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2 = eq %1, 0:i64 (hasExternalUses)
%3:i64 = var
%4 = select %2, %3, %1
%5 = ctlz %4
%6:i64 = var
%7 = add %5, %6
infer %7


; start LHS (in $7)
%0:i32 = var
%1 = add %0, -15:i32
infer %1


; start LHS (in $7)
%0:i32 = var
%1 = sub 16:i32, %0
infer %1


; start LHS (in $7)
%0:i32 = var
%1 = sub 16:i32, %0
%2 = block 2
%3:i32 = var
%4 = sub 16:i32, %3 (hasExternalUses)
%5 = phi %2, 0:i32, %4
%6 = add %1, %5
%7:i64 = var
%8 = and %7, 9223372036854775807:i64
%9 = ule %8, 281474976710655:i64
blockpc %2 0 %9 1:i1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %2 1 %11 1:i1
infer %6


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 49:i64
infer %1


; start LHS (in $7)
%0:i32 = var
%1 = sub %0, 96:i32 (hasExternalUses)
%2 = add %1, 72:i32
infer %2


; start LHS (in $7)
%0:i64 = var
%1 = shl %0, 15:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 49:i64
%2:i64 = var
%3 = shl %2, 15:i64
%4 = or %1, %3
infer %4


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 17:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = shl %0, 47:i64
infer %1


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 17:i64
%2:i64 = var
%3 = shl %2, 47:i64
%4 = or %1, %3
infer %4


; start LHS (in $7)
%0:i64 = var
%1 = lshr %0, 17:i64
infer %1


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = and %1, 281474976710655:i64 (hasExternalUses)
%3 = block 2
%4:i64 = var
%5 = phi %3, %2, %4
%6 = phi %0, %2, %5, %5
%7 = and %6, 4294967295:i64
%8 = and %1, 9223372036854775807:i64
%9 = ule %8, 281474976710655:i64
blockpc %3 0 %9 1:i1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %3 1 %11 1:i1
infer %7


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 49:i64
%3:i64 = var
%4 = and %3, 281474976710655:i64 (hasExternalUses)
%5 = shl %4, 15:i64
%6 = or %2, %5
%7:i64 = var
%8 = lshr %7, 49:i64
%9:i64 = var
%10 = shl %9, 15:i64
%11 = or %8, %10
%12 = phi %0, %6, %6, %11
%13 = and %12, 4294967295:i64
infer %13


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 49:i64
%3:i64 = var
%4 = and %3, 281474976710655:i64 (hasExternalUses)
%5 = shl %4, 15:i64
%6 = or %2, %5
%7:i64 = var
%8 = lshr %7, 49:i64
%9:i64 = var
%10 = shl %9, 15:i64
%11 = or %8, %10
%12 = phi %0, %6, %6, %11
%13 = and %12, 4294967295:i64 (hasExternalUses)
%14:i64 = var
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16 = block 2
%17:i64 = var
%18 = phi %16, %15, %17
%19 = phi %0, %15, %18, %18
%20 = and %19, 4294967295:i64 (hasExternalUses)
%21 = mul %13, %20
%22 = and %14, 9223372036854775807:i64
%23 = ule %22, 281474976710655:i64
blockpc %16 0 %23 1:i1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %16 1 %25 1:i1
infer %21


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64
infer %12


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = and %1, 281474976710655:i64 (hasExternalUses)
%3 = lshr %2, 32:i64
%4 = block 2
%5:i64 = var
%6 = lshr %5, 32:i64
%7 = phi %4, %3, %6
%8 = phi %0, %3, %7, %7
%9 = or %8, 65536:i64
%10 = and %1, 9223372036854775807:i64
%11 = ule %10, 281474976710655:i64
blockpc %4 0 %11 1:i1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %4 1 %13 1:i1
infer %9


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = lshr %14, 32:i64
%16 = block 2
%17:i64 = var
%18 = lshr %17, 32:i64
%19 = phi %16, %15, %18
%20 = phi %0, %15, %19, %19
%21 = or %20, 65536:i64 (hasExternalUses)
%22 = mul %12, %21
%23 = and %13, 9223372036854775807:i64
%24 = ule %23, 281474976710655:i64
blockpc %16 0 %24 1:i1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %16 1 %26 1:i1
infer %22


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 49:i64
%3:i64 = var
%4 = and %3, 281474976710655:i64 (hasExternalUses)
%5 = shl %4, 15:i64
%6 = or %2, %5
%7:i64 = var
%8 = lshr %7, 49:i64
%9:i64 = var
%10 = shl %9, 15:i64
%11 = or %8, %10
%12 = phi %0, %6, %6, %11
%13 = and %12, 4294967295:i64 (hasExternalUses)
%14:i64 = var
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16 = block 2
%17:i64 = var
%18 = phi %16, %15, %17
%19 = phi %0, %15, %18, %18
%20 = and %19, 4294967295:i64 (hasExternalUses)
%21 = mul %13, %20 (hasExternalUses)
%22 = lshr %1, 17:i64
%23 = shl %3, 47:i64
%24 = or %22, %23
%25 = lshr %7, 17:i64
%26 = shl %9, 47:i64
%27 = or %25, %26
%28 = phi %0, %24, %24, %27
%29 = and %28, 4294967295:i64 (hasExternalUses)
%30:i64 = var
%31 = mul %29, %30
%32 = add %21, %31
%33:i32 = var
blockpc %16 0 %33 1:i1
%34:i32 = var
blockpc %16 1 %34 1:i1
infer %32


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = and %1, 281474976710655:i64 (hasExternalUses)
%3 = lshr %2, 17:i64
%4:i64 = var
%5 = lshr %4, 17:i64
%6 = phi %0, %3, %3, %5
%7 = and %6, 2147483647:i64
infer %7


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = and %1, 281474976710655:i64 (hasExternalUses)
%3 = lshr %2, 17:i64
%4:i64 = var
%5 = lshr %4, 17:i64
%6 = phi %0, %3, %3, %5
%7 = and %6, 2147483647:i64
%8 = or %7, 2147483648:i64
infer %8


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 32:i64
%3:i64 = var
%4 = shl %3, 32:i64
%5 = or %2, %4
%6 = block 2
%7:i64 = var
%8 = lshr %7, 32:i64
%9:i64 = var
%10 = shl %9, 32:i64
%11 = or %8, %10
%12 = phi %6, %5, %11
%13 = phi %0, %5, %12, %12
%14 = and %13, 4294967295:i64
%15 = and %3, 9223372036854775807:i64
%16 = ule %15, 281474976710655:i64
blockpc %6 0 %16 1:i1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %6 1 %18 1:i1
infer %14


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = and %1, 281474976710655:i64 (hasExternalUses)
%3 = lshr %2, 17:i64
%4:i64 = var
%5 = lshr %4, 17:i64
%6 = phi %0, %3, %3, %5
%7 = and %6, 2147483647:i64
%8 = or %7, 2147483648:i64 (hasExternalUses)
%9:i64 = var
%10 = lshr %9, 32:i64
%11:i64 = var
%12 = shl %11, 32:i64
%13 = or %10, %12
%14 = block 2
%15:i64 = var
%16 = lshr %15, 32:i64
%17:i64 = var
%18 = shl %17, 32:i64
%19 = or %16, %18
%20 = phi %14, %13, %19
%21 = phi %0, %13, %20, %20
%22 = and %21, 4294967295:i64 (hasExternalUses)
%23 = mul %8, %22
%24 = and %11, 9223372036854775807:i64
%25 = ule %24, 281474976710655:i64
blockpc %14 0 %25 1:i1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %14 1 %27 1:i1
infer %23


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 49:i64
%3:i64 = var
%4 = and %3, 281474976710655:i64 (hasExternalUses)
%5 = shl %4, 15:i64
%6 = or %2, %5
%7:i64 = var
%8 = lshr %7, 49:i64
%9:i64 = var
%10 = shl %9, 15:i64
%11 = or %8, %10
%12 = phi %0, %6, %6, %11
%13 = and %12, 4294967295:i64 (hasExternalUses)
%14:i64 = var
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16 = block 2
%17:i64 = var
%18 = phi %16, %15, %17
%19 = phi %0, %15, %18, %18
%20 = and %19, 4294967295:i64 (hasExternalUses)
%21 = mul %13, %20 (hasExternalUses)
%22 = lshr %1, 17:i64
%23 = shl %3, 47:i64
%24 = or %22, %23
%25 = lshr %7, 17:i64
%26 = shl %9, 47:i64
%27 = or %25, %26
%28 = phi %0, %24, %24, %27
%29 = and %28, 4294967295:i64 (hasExternalUses)
%30:i64 = var
%31 = mul %29, %30
%32 = add %21, %31 (hasExternalUses)
%33:i64 = var
%34 = add %32, %33
%35:i32 = var
blockpc %16 0 %35 1:i1
%36:i32 = var
blockpc %16 1 %36 1:i1
infer %34


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = lshr %13, 32:i64
%15:i64 = var
%16 = shl %15, 32:i64
%17 = or %14, %16
%18 = block 2
%19:i64 = var
%20 = lshr %19, 32:i64
%21:i64 = var
%22 = shl %21, 32:i64
%23 = or %20, %22
%24 = phi %18, %17, %23
%25 = phi %0, %17, %24, %24
%26 = and %25, 4294967295:i64 (hasExternalUses)
%27 = mul %12, %26
%28 = and %15, 9223372036854775807:i64
%29 = ule %28, 281474976710655:i64
blockpc %18 0 %29 1:i1
%30:i32 = var
blockpc %18 1 %30 1:i1
infer %27


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %1, %2
%4 = shl %3, 15:i64
infer %4


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %1, %2
%4 = shl %3, 15:i64
%5 = and %4, 4294934528:i64
infer %5


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %1, %2
%4 = shl %3, 15:i64
%5 = and %4, 4294934528:i64 (hasExternalUses)
%6:i64 = var
%7 = and %6, 281474976710655:i64 (hasExternalUses)
%8 = block 2
%9:i64 = var
%10 = phi %8, %7, %9
%11 = phi %0, %7, %10, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13 = mul %5, %12
%14 = and %6, 9223372036854775807:i64
%15 = ule %14, 281474976710655:i64
blockpc %8 0 %15 1:i1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %8 1 %17 1:i1
infer %13


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = lshr %13, 32:i64
%15:i64 = var
%16 = shl %15, 32:i64
%17 = or %14, %16
%18 = block 2
%19:i64 = var
%20 = lshr %19, 32:i64
%21:i64 = var
%22 = shl %21, 32:i64
%23 = or %20, %22
%24 = phi %18, %17, %23
%25 = phi %0, %17, %24, %24
%26 = and %25, 4294967295:i64 (hasExternalUses)
%27 = mul %12, %26 (hasExternalUses)
%28 = phi %0, %1, %1, %6
%29 = shl %28, 15:i64
%30 = and %29, 4294934528:i64 (hasExternalUses)
%31:i64 = var
%32 = mul %30, %31
%33 = add %27, %32
%34:i32 = var
blockpc %18 0 %34 1:i1
%35:i32 = var
blockpc %18 1 %35 1:i1
infer %33


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = block 2
%3:i64 = var
%4 = phi %2, %1, %3
%5 = phi %0, %1, %4, %4
%6 = and %5, 4294967295:i64
%7:i64 = var
%8 = and %7, 9223372036854775807:i64
%9 = ule %8, 281474976710655:i64
blockpc %2 0 %9 1:i1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %2 1 %11 1:i1
infer %6


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 49:i64
%3:i64 = var
%4 = and %3, 281474976710655:i64 (hasExternalUses)
%5 = shl %4, 15:i64
%6 = or %2, %5
%7:i64 = var
%8 = lshr %7, 49:i64
%9:i64 = var
%10 = shl %9, 15:i64
%11 = or %8, %10
%12 = phi %0, %6, %6, %11
%13 = and %12, 4294967295:i64 (hasExternalUses)
%14:i64 = var
%15 = block 2
%16:i64 = var
%17 = phi %15, %14, %16
%18 = phi %0, %14, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %13, %19
%21:i64 = var
%22 = and %21, 9223372036854775807:i64
%23 = ule %22, 281474976710655:i64
blockpc %15 0 %23 1:i1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %15 1 %25 1:i1
infer %20


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = lshr %13, 32:i64
%15:i64 = var
%16 = shl %15, 32:i64
%17 = or %14, %16
%18 = block 2
%19:i64 = var
%20 = lshr %19, 32:i64
%21:i64 = var
%22 = shl %21, 32:i64
%23 = or %20, %22
%24 = phi %18, %17, %23
%25 = phi %0, %17, %24, %24
%26 = and %25, 4294967295:i64 (hasExternalUses)
%27 = mul %12, %26 (hasExternalUses)
%28 = phi %0, %1, %1, %6
%29 = shl %28, 15:i64
%30 = and %29, 4294934528:i64 (hasExternalUses)
%31:i64 = var
%32 = mul %30, %31
%33 = add %27, %32 (hasExternalUses)
%34:i64 = var
%35 = add %33, %34
%36:i32 = var
blockpc %18 0 %36 1:i1
%37:i32 = var
blockpc %18 1 %37 1:i1
infer %35


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = lshr %13, 32:i64
%15:i64 = var
%16 = shl %15, 32:i64
%17 = or %14, %16
%18 = block 2
%19:i64 = var
%20 = lshr %19, 32:i64
%21:i64 = var
%22 = shl %21, 32:i64
%23 = or %20, %22
%24 = phi %18, %17, %23
%25 = phi %0, %17, %24, %24
%26 = and %25, 4294967295:i64 (hasExternalUses)
%27 = mul %12, %26
%28 = phi %0, %1, %1, %6
%29 = shl %28, 15:i64
%30 = and %29, 4294934528:i64 (hasExternalUses)
%31:i64 = var
%32 = mul %30, %31
%33 = add %27, %32 (hasExternalUses)
%34 = ult %33, %27
%35:i32 = var
blockpc %18 0 %35 1:i1
%36:i32 = var
blockpc %18 1 %36 1:i1
infer %34


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = lshr %13, 32:i64
%15:i64 = var
%16 = shl %15, 32:i64
%17 = or %14, %16
%18 = block 2
%19:i64 = var
%20 = lshr %19, 32:i64
%21:i64 = var
%22 = shl %21, 32:i64
%23 = or %20, %22
%24 = phi %18, %17, %23
%25 = phi %0, %17, %24, %24
%26 = and %25, 4294967295:i64 (hasExternalUses)
%27 = mul %12, %26 (hasExternalUses)
%28 = phi %0, %1, %1, %6
%29 = shl %28, 15:i64
%30 = and %29, 4294934528:i64 (hasExternalUses)
%31:i64 = var
%32 = mul %30, %31
%33 = add %27, %32 (hasExternalUses)
%34:i64 = var
%35 = add %33, %34 (hasExternalUses)
%36 = ult %35, %33
%37:i32 = var
blockpc %18 0 %37 1:i1
%38:i32 = var
blockpc %18 1 %38 1:i1
infer %36


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
infer %2


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 49:i64
%3:i64 = var
%4 = and %3, 281474976710655:i64 (hasExternalUses)
%5 = shl %4, 15:i64
%6 = or %2, %5
%7:i64 = var
%8 = lshr %7, 49:i64
%9:i64 = var
%10 = shl %9, 15:i64
%11 = or %8, %10
%12 = phi %0, %6, %6, %11
%13 = and %12, 4294967295:i64 (hasExternalUses)
%14:i64 = var
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16 = block 2
%17:i64 = var
%18 = phi %16, %15, %17
%19 = phi %0, %15, %18, %18
%20 = and %19, 4294967295:i64 (hasExternalUses)
%21 = mul %13, %20 (hasExternalUses)
%22 = lshr %1, 17:i64
%23 = shl %3, 47:i64
%24 = or %22, %23
%25 = lshr %7, 17:i64
%26 = shl %9, 47:i64
%27 = or %25, %26
%28 = phi %0, %24, %24, %27
%29 = and %28, 4294967295:i64 (hasExternalUses)
%30:i64 = var
%31 = mul %29, %30
%32 = add %21, %31 (hasExternalUses)
%33:i64 = var
%34 = add %32, %33 (hasExternalUses)
%35:i64 = var
%36 = add %34, %35
%37:i32 = var
blockpc %16 0 %37 1:i1
%38:i32 = var
blockpc %16 1 %38 1:i1
infer %36


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = and %1, 281474976710655:i64 (hasExternalUses)
%3 = lshr %2, 17:i64
%4:i64 = var
%5 = lshr %4, 17:i64
%6 = phi %0, %3, %3, %5
%7 = and %6, 2147483647:i64
%8 = or %7, 2147483648:i64 (hasExternalUses)
%9:i64 = var
%10 = and %9, 281474976710655:i64 (hasExternalUses)
%11 = block 2
%12:i64 = var
%13 = phi %11, %10, %12
%14 = phi %0, %10, %13, %13
%15 = and %14, 4294967295:i64 (hasExternalUses)
%16 = mul %8, %15
%17 = and %9, 9223372036854775807:i64
%18 = ule %17, 281474976710655:i64
blockpc %11 0 %18 1:i1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %11 1 %20 1:i1
infer %16


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 49:i64
%3:i64 = var
%4 = and %3, 281474976710655:i64 (hasExternalUses)
%5 = shl %4, 15:i64
%6 = or %2, %5
%7:i64 = var
%8 = lshr %7, 49:i64
%9:i64 = var
%10 = shl %9, 15:i64
%11 = or %8, %10
%12 = phi %0, %6, %6, %11
%13 = and %12, 4294967295:i64 (hasExternalUses)
%14:i64 = var
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16 = lshr %15, 32:i64
%17 = block 2
%18:i64 = var
%19 = lshr %18, 32:i64
%20 = phi %17, %16, %19
%21 = phi %0, %16, %20, %20
%22 = or %21, 65536:i64 (hasExternalUses)
%23 = mul %13, %22
%24 = and %14, 9223372036854775807:i64
%25 = ule %24, 281474976710655:i64
blockpc %17 0 %25 1:i1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %17 1 %27 1:i1
infer %23


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = and %1, 281474976710655:i64 (hasExternalUses)
%3 = lshr %2, 17:i64
%4:i64 = var
%5 = lshr %4, 17:i64
%6 = phi %0, %3, %3, %5
%7 = and %6, 2147483647:i64
%8 = or %7, 2147483648:i64 (hasExternalUses)
%9:i64 = var
%10 = and %9, 281474976710655:i64 (hasExternalUses)
%11 = block 2
%12:i64 = var
%13 = phi %11, %10, %12
%14 = phi %0, %10, %13, %13
%15 = and %14, 4294967295:i64 (hasExternalUses)
%16 = mul %8, %15 (hasExternalUses)
%17:i64 = var
%18 = lshr %17, 49:i64
%19 = shl %2, 15:i64
%20 = or %18, %19
%21:i64 = var
%22 = lshr %21, 49:i64
%23 = shl %4, 15:i64
%24 = or %22, %23
%25 = phi %0, %20, %20, %24
%26 = and %25, 4294967295:i64 (hasExternalUses)
%27 = lshr %10, 32:i64
%28 = lshr %12, 32:i64
%29 = phi %11, %27, %28
%30 = phi %0, %27, %29, %29
%31 = or %30, 65536:i64 (hasExternalUses)
%32 = mul %26, %31
%33 = add %16, %32
%34:i32 = var
blockpc %11 0 %34 1:i1
%35:i32 = var
blockpc %11 1 %35 1:i1
infer %33


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = and %1, 281474976710655:i64 (hasExternalUses)
%3 = lshr %2, 17:i64
%4:i64 = var
%5 = lshr %4, 17:i64
%6 = phi %0, %3, %3, %5
%7 = and %6, 2147483647:i64
%8 = or %7, 2147483648:i64 (hasExternalUses)
%9:i64 = var
%10 = and %9, 281474976710655:i64 (hasExternalUses)
%11 = block 2
%12:i64 = var
%13 = phi %11, %10, %12
%14 = phi %0, %10, %13, %13
%15 = and %14, 4294967295:i64 (hasExternalUses)
%16 = mul %8, %15 (hasExternalUses)
%17:i64 = var
%18 = lshr %17, 49:i64
%19 = shl %2, 15:i64
%20 = or %18, %19
%21:i64 = var
%22 = lshr %21, 49:i64
%23 = shl %4, 15:i64
%24 = or %22, %23
%25 = phi %0, %20, %20, %24
%26 = and %25, 4294967295:i64 (hasExternalUses)
%27 = lshr %10, 32:i64
%28 = lshr %12, 32:i64
%29 = phi %11, %27, %28
%30 = phi %0, %27, %29, %29
%31 = or %30, 65536:i64 (hasExternalUses)
%32 = mul %26, %31
%33 = add %16, %32 (hasExternalUses)
%34 = shl %33, 32:i64
%35:i32 = var
blockpc %11 0 %35 1:i1
%36:i32 = var
blockpc %11 1 %36 1:i1
infer %34


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 49:i64
%3:i64 = var
%4 = shl %3, 15:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 49:i64
%8:i64 = var
%9 = shl %8, 15:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = block 2
%16:i64 = var
%17 = phi %15, %14, %16
%18 = phi %0, %14, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %12, %19 (hasExternalUses)
%21 = lshr %1, 17:i64
%22:i64 = var
%23 = shl %22, 47:i64
%24 = or %21, %23
%25 = lshr %6, 17:i64
%26 = shl %8, 47:i64
%27 = or %25, %26
%28 = phi %0, %24, %24, %27
%29 = and %28, 4294967295:i64 (hasExternalUses)
%30:i64 = var
%31 = mul %29, %30
%32 = add %20, %31 (hasExternalUses)
%33:i64 = var
%34 = add %32, %33 (hasExternalUses)
%35:i64 = var
%36 = add %34, %35 (hasExternalUses)
%37:i64 = var
%38 = add %36, %37
%39:i32 = var
blockpc %15 0 %39 1:i1
%40:i32 = var
blockpc %15 1 %40 1:i1
infer %38


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = block 2
%16:i64 = var
%17 = phi %15, %14, %16
%18 = phi %0, %14, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %12, %19
%21 = and %13, 9223372036854775807:i64
%22 = ule %21, 281474976710655:i64
blockpc %15 0 %22 1:i1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %15 1 %24 1:i1
infer %20


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %1, %2
%4 = shl %3, 15:i64
%5 = and %4, 4294934528:i64 (hasExternalUses)
%6:i64 = var
%7 = and %6, 281474976710655:i64 (hasExternalUses)
%8 = lshr %7, 32:i64
%9 = block 2
%10:i64 = var
%11 = lshr %10, 32:i64
%12 = phi %9, %8, %11
%13 = phi %0, %8, %12, %12
%14 = or %13, 65536:i64 (hasExternalUses)
%15 = mul %5, %14
%16 = and %6, 9223372036854775807:i64
%17 = ule %16, 281474976710655:i64
blockpc %9 0 %17 1:i1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %9 1 %19 1:i1
infer %15


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = block 2
%16:i64 = var
%17 = phi %15, %14, %16
%18 = phi %0, %14, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %12, %19 (hasExternalUses)
%21 = phi %0, %1, %1, %6
%22 = shl %21, 15:i64
%23 = and %22, 4294934528:i64 (hasExternalUses)
%24 = lshr %14, 32:i64
%25 = lshr %16, 32:i64
%26 = phi %15, %24, %25
%27 = phi %0, %24, %26, %26
%28 = or %27, 65536:i64 (hasExternalUses)
%29 = mul %23, %28
%30 = add %20, %29
%31:i32 = var
blockpc %15 0 %31 1:i1
%32:i32 = var
blockpc %15 1 %32 1:i1
infer %30


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 49:i64
%3:i64 = var
%4 = and %3, 281474976710655:i64 (hasExternalUses)
%5 = shl %4, 15:i64
%6 = or %2, %5
%7:i64 = var
%8 = lshr %7, 49:i64
%9:i64 = var
%10 = shl %9, 15:i64
%11 = or %8, %10
%12 = phi %0, %6, %6, %11
%13 = and %12, 4294967295:i64 (hasExternalUses)
%14:i64 = var
%15 = lshr %14, 32:i64
%16:i64 = var
%17 = shl %16, 32:i64
%18 = or %15, %17
%19 = block 2
%20:i64 = var
%21 = lshr %20, 32:i64
%22:i64 = var
%23 = shl %22, 32:i64
%24 = or %21, %23
%25 = phi %19, %18, %24
%26 = phi %0, %18, %25, %25
%27 = and %26, 4294967295:i64 (hasExternalUses)
%28 = mul %13, %27
%29 = and %16, 9223372036854775807:i64
%30 = ule %29, 281474976710655:i64
blockpc %19 0 %30 1:i1
%31:i32 = var
blockpc %19 1 %31 1:i1
infer %28


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = block 2
%16:i64 = var
%17 = phi %15, %14, %16
%18 = phi %0, %14, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %12, %19 (hasExternalUses)
%21 = phi %0, %1, %1, %6
%22 = shl %21, 15:i64
%23 = and %22, 4294934528:i64 (hasExternalUses)
%24 = lshr %14, 32:i64
%25 = lshr %16, 32:i64
%26 = phi %15, %24, %25
%27 = phi %0, %24, %26, %26
%28 = or %27, 65536:i64 (hasExternalUses)
%29 = mul %23, %28
%30 = add %20, %29 (hasExternalUses)
%31:i64 = var
%32 = add %30, %31
%33:i32 = var
blockpc %15 0 %33 1:i1
%34:i32 = var
blockpc %15 1 %34 1:i1
infer %32


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = and %1, 281474976710655:i64 (hasExternalUses)
%3 = lshr %2, 17:i64
%4:i64 = var
%5 = lshr %4, 17:i64
%6 = phi %0, %3, %3, %5
%7 = and %6, 2147483647:i64
%8 = or %7, 2147483648:i64 (hasExternalUses)
%9:i64 = var
%10 = block 2
%11:i64 = var
%12 = phi %10, %9, %11
%13 = phi %0, %9, %12, %12
%14 = and %13, 4294967295:i64 (hasExternalUses)
%15 = mul %8, %14
%16:i64 = var
%17 = and %16, 9223372036854775807:i64
%18 = ule %17, 281474976710655:i64
blockpc %10 0 %18 1:i1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %10 1 %20 1:i1
infer %15


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = block 2
%16:i64 = var
%17 = phi %15, %14, %16
%18 = phi %0, %14, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %12, %19 (hasExternalUses)
%21 = phi %0, %1, %1, %6
%22 = shl %21, 15:i64
%23 = and %22, 4294934528:i64 (hasExternalUses)
%24 = lshr %14, 32:i64
%25 = lshr %16, 32:i64
%26 = phi %15, %24, %25
%27 = phi %0, %24, %26, %26
%28 = or %27, 65536:i64 (hasExternalUses)
%29 = mul %23, %28
%30 = add %20, %29 (hasExternalUses)
%31:i64 = var
%32 = add %30, %31 (hasExternalUses)
%33:i64 = var
%34 = add %32, %33
%35:i32 = var
blockpc %15 0 %35 1:i1
%36:i32 = var
blockpc %15 1 %36 1:i1
infer %34


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = block 2
%16:i64 = var
%17 = phi %15, %14, %16
%18 = phi %0, %14, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %12, %19 (hasExternalUses)
%21 = phi %0, %1, %1, %6
%22 = shl %21, 15:i64
%23 = and %22, 4294934528:i64 (hasExternalUses)
%24 = lshr %14, 32:i64
%25 = lshr %16, 32:i64
%26 = phi %15, %24, %25
%27 = phi %0, %24, %26, %26
%28 = or %27, 65536:i64 (hasExternalUses)
%29 = mul %23, %28
%30 = add %20, %29 (hasExternalUses)
%31:i64 = var
%32 = add %30, %31 (hasExternalUses)
%33:i64 = var
%34 = add %32, %33 (hasExternalUses)
%35 = lshr %34, 32:i64
%36:i32 = var
blockpc %15 0 %36 1:i1
%37:i32 = var
blockpc %15 1 %37 1:i1
infer %35


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = block 2
%16:i64 = var
%17 = phi %15, %14, %16
%18 = phi %0, %14, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %12, %19
%21 = phi %0, %1, %1, %6
%22 = shl %21, 15:i64
%23 = and %22, 4294934528:i64 (hasExternalUses)
%24 = lshr %14, 32:i64
%25 = lshr %16, 32:i64
%26 = phi %15, %24, %25
%27 = phi %0, %24, %26, %26
%28 = or %27, 65536:i64 (hasExternalUses)
%29 = mul %23, %28
%30 = add %20, %29 (hasExternalUses)
%31 = ult %30, %20
%32:i32 = var
blockpc %15 0 %32 1:i1
%33:i32 = var
blockpc %15 1 %33 1:i1
infer %31


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = block 2
%16:i64 = var
%17 = phi %15, %14, %16
%18 = phi %0, %14, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %12, %19 (hasExternalUses)
%21 = phi %0, %1, %1, %6
%22 = shl %21, 15:i64
%23 = and %22, 4294934528:i64 (hasExternalUses)
%24 = lshr %14, 32:i64
%25 = lshr %16, 32:i64
%26 = phi %15, %24, %25
%27 = phi %0, %24, %26, %26
%28 = or %27, 65536:i64 (hasExternalUses)
%29 = mul %23, %28
%30 = add %20, %29 (hasExternalUses)
%31:i64 = var
%32 = add %30, %31 (hasExternalUses)
%33 = ult %32, %30
%34:i32 = var
blockpc %15 0 %34 1:i1
%35:i32 = var
blockpc %15 1 %35 1:i1
infer %33


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
infer %2


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = block 2
%16:i64 = var
%17 = phi %15, %14, %16
%18 = phi %0, %14, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %12, %19 (hasExternalUses)
%21 = phi %0, %1, %1, %6
%22 = shl %21, 15:i64
%23 = and %22, 4294934528:i64 (hasExternalUses)
%24 = lshr %14, 32:i64
%25 = lshr %16, 32:i64
%26 = phi %15, %24, %25
%27 = phi %0, %24, %26, %26
%28 = or %27, 65536:i64 (hasExternalUses)
%29 = mul %23, %28
%30 = add %20, %29 (hasExternalUses)
%31:i64 = var
%32 = add %30, %31 (hasExternalUses)
%33:i64 = var
%34 = add %32, %33 (hasExternalUses)
%35 = ult %34, %32
%36:i32 = var
blockpc %15 0 %36 1:i1
%37:i32 = var
blockpc %15 1 %37 1:i1
infer %35


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
%3:i64 = var
%4 = add %2, %3
infer %4


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
%3:i64 = var
%4 = add %2, %3
%5 = shl %4, 32:i64
infer %5


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = or %1, %2
%4:i64 = var
%5:i64 = var
%6 = or %4, %5
%7 = phi %0, %3, %3, %6
%8 = and %7, 4294967295:i64 (hasExternalUses)
%9:i64 = var
%10 = and %9, 281474976710655:i64 (hasExternalUses)
%11 = block 2
%12:i64 = var
%13 = phi %11, %10, %12
%14 = phi %0, %10, %13, %13
%15 = and %14, 4294967295:i64 (hasExternalUses)
%16 = mul %8, %15 (hasExternalUses)
%17:i64 = var
%18:i64 = var
%19 = phi %0, %17, %17, %18
%20 = shl %19, 15:i64
%21 = and %20, 4294934528:i64 (hasExternalUses)
%22 = lshr %10, 32:i64
%23:i64 = var
%24 = phi %11, %22, %23
%25 = phi %0, %22, %24, %24
%26 = or %25, 65536:i64 (hasExternalUses)
%27 = mul %21, %26
%28 = add %16, %27 (hasExternalUses)
%29 = lshr %17, 49:i64
%30:i64 = var
%31 = or %29, %30
%32:i64 = var
%33 = phi %0, %31, %31, %32
%34 = and %33, 4294967295:i64 (hasExternalUses)
%35:i64 = var
%36 = mul %34, %35
%37 = add %28, %36 (hasExternalUses)
%38:i64 = var
%39 = add %37, %38 (hasExternalUses)
%40 = lshr %39, 32:i64
%41:i64 = var
%42 = or %40, %41
%43:i32 = var
blockpc %11 0 %43 1:i1
%44:i32 = var
blockpc %11 1 %44 1:i1
infer %42


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = or %1, %2
%4:i64 = var
%5:i64 = var
%6 = or %4, %5
%7 = phi %0, %3, %3, %6
%8 = and %7, 4294967295:i64 (hasExternalUses)
%9:i64 = var
%10 = and %9, 281474976710655:i64 (hasExternalUses)
%11 = block 2
%12:i64 = var
%13 = phi %11, %10, %12
%14 = phi %0, %10, %13, %13
%15 = and %14, 4294967295:i64 (hasExternalUses)
%16 = mul %8, %15 (hasExternalUses)
%17:i64 = var
%18:i64 = var
%19 = or %17, %18
%20:i64 = var
%21:i64 = var
%22 = or %20, %21
%23 = phi %0, %19, %19, %22
%24 = and %23, 4294967295:i64 (hasExternalUses)
%25 = lshr %10, 32:i64
%26:i64 = var
%27 = phi %11, %25, %26
%28 = phi %0, %25, %27, %27
%29 = or %28, 65536:i64 (hasExternalUses)
%30 = mul %24, %29
%31 = add %16, %30 (hasExternalUses)
%32:i64 = var
%33 = add %31, %32 (hasExternalUses)
%34:i64 = var
%35 = add %33, %34 (hasExternalUses)
%36:i64 = var
%37 = add %35, %36 (hasExternalUses)
%38:i64 = var
%39 = add %37, %38
%40:i32 = var
blockpc %11 0 %40 1:i1
%41:i32 = var
blockpc %11 1 %41 1:i1
infer %39


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = block 2
%15:i64 = var
%16 = phi %14, %13, %15
%17 = phi %0, %13, %16, %16
%18 = and %17, 4294967295:i64 (hasExternalUses)
%19 = mul %12, %18
%20:i64 = var
%21 = and %20, 9223372036854775807:i64
%22 = ule %21, 281474976710655:i64
blockpc %14 0 %22 1:i1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %14 1 %24 1:i1
infer %19


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %1, %2
%4 = shl %3, 15:i64
%5 = and %4, 4294934528:i64 (hasExternalUses)
%6:i64 = var
%7 = lshr %6, 32:i64
%8:i64 = var
%9 = shl %8, 32:i64
%10 = or %7, %9
%11 = block 2
%12:i64 = var
%13 = lshr %12, 32:i64
%14:i64 = var
%15 = shl %14, 32:i64
%16 = or %13, %15
%17 = phi %11, %10, %16
%18 = phi %0, %10, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %5, %19
%21 = and %8, 9223372036854775807:i64
%22 = ule %21, 281474976710655:i64
blockpc %11 0 %22 1:i1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %11 1 %24 1:i1
infer %20


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = block 2
%15:i64 = var
%16 = phi %14, %13, %15
%17 = phi %0, %13, %16, %16
%18 = and %17, 4294967295:i64 (hasExternalUses)
%19 = mul %12, %18 (hasExternalUses)
%20 = phi %0, %1, %1, %6
%21 = shl %20, 15:i64
%22 = and %21, 4294934528:i64 (hasExternalUses)
%23 = lshr %13, 32:i64
%24:i64 = var
%25 = shl %24, 32:i64
%26 = or %23, %25
%27 = lshr %15, 32:i64
%28:i64 = var
%29 = shl %28, 32:i64
%30 = or %27, %29
%31 = phi %14, %26, %30
%32 = phi %0, %26, %31, %31
%33 = and %32, 4294967295:i64 (hasExternalUses)
%34 = mul %22, %33
%35 = add %19, %34
%36:i32 = var
blockpc %14 0 %36 1:i1
%37:i32 = var
blockpc %14 1 %37 1:i1
infer %35


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = block 2
%15:i64 = var
%16 = phi %14, %13, %15
%17 = phi %0, %13, %16, %16
%18 = and %17, 4294967295:i64 (hasExternalUses)
%19 = mul %12, %18 (hasExternalUses)
%20 = phi %0, %1, %1, %6
%21 = shl %20, 15:i64
%22 = and %21, 4294934528:i64 (hasExternalUses)
%23 = lshr %13, 32:i64
%24:i64 = var
%25 = shl %24, 32:i64
%26 = or %23, %25
%27 = lshr %15, 32:i64
%28:i64 = var
%29 = shl %28, 32:i64
%30 = or %27, %29
%31 = phi %14, %26, %30
%32 = phi %0, %26, %31, %31
%33 = and %32, 4294967295:i64 (hasExternalUses)
%34 = mul %22, %33
%35 = add %19, %34 (hasExternalUses)
%36 = lshr %35, 32:i64
%37:i32 = var
blockpc %14 0 %37 1:i1
%38:i32 = var
blockpc %14 1 %38 1:i1
infer %36


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = block 2
%15:i64 = var
%16 = phi %14, %13, %15
%17 = phi %0, %13, %16, %16
%18 = and %17, 4294967295:i64 (hasExternalUses)
%19 = mul %12, %18
%20 = phi %0, %1, %1, %6
%21 = shl %20, 15:i64
%22 = and %21, 4294934528:i64 (hasExternalUses)
%23 = lshr %13, 32:i64
%24:i64 = var
%25 = shl %24, 32:i64
%26 = or %23, %25
%27 = lshr %15, 32:i64
%28:i64 = var
%29 = shl %28, 32:i64
%30 = or %27, %29
%31 = phi %14, %26, %30
%32 = phi %0, %26, %31, %31
%33 = and %32, 4294967295:i64 (hasExternalUses)
%34 = mul %22, %33
%35 = add %19, %34 (hasExternalUses)
%36 = ult %35, %19
%37:i32 = var
blockpc %14 0 %37 1:i1
%38:i32 = var
blockpc %14 1 %38 1:i1
infer %36


; start LHS (in $7)
%0:i64 = var
%1 = shl %0, 32:i64
infer %1


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = block 2
%15:i64 = var
%16 = phi %14, %13, %15
%17 = phi %0, %13, %16, %16
%18 = and %17, 4294967295:i64 (hasExternalUses)
%19 = mul %12, %18 (hasExternalUses)
%20 = phi %0, %1, %1, %6
%21 = shl %20, 15:i64
%22 = and %21, 4294934528:i64 (hasExternalUses)
%23 = lshr %13, 32:i64
%24:i64 = var
%25 = shl %24, 32:i64
%26 = or %23, %25
%27 = lshr %15, 32:i64
%28:i64 = var
%29 = shl %28, 32:i64
%30 = or %27, %29
%31 = phi %14, %26, %30
%32 = phi %0, %26, %31, %31
%33 = and %32, 4294967295:i64 (hasExternalUses)
%34 = mul %22, %33
%35 = add %19, %34 (hasExternalUses)
%36 = lshr %35, 32:i64
%37:i64 = var
%38 = or %36, %37
%39:i32 = var
blockpc %14 0 %39 1:i1
%40:i32 = var
blockpc %14 1 %40 1:i1
infer %38


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = lshr %13, 32:i64
%15:i64 = var
%16 = shl %15, 32:i64
%17 = or %14, %16
%18 = block 2
%19:i64 = var
%20 = lshr %19, 32:i64
%21:i64 = var
%22 = shl %21, 32:i64
%23 = or %20, %22
%24 = phi %18, %17, %23
%25 = phi %0, %17, %24, %24
%26 = and %25, 4294967295:i64 (hasExternalUses)
%27 = mul %12, %26 (hasExternalUses)
%28 = phi %0, %1, %1, %6
%29 = shl %28, 15:i64
%30 = and %29, 4294934528:i64 (hasExternalUses)
%31:i64 = var
%32 = mul %30, %31
%33 = add %27, %32 (hasExternalUses)
%34:i64 = var
%35 = add %33, %34 (hasExternalUses)
%36:i64 = var
%37 = add %35, %36
%38:i32 = var
blockpc %18 0 %38 1:i1
%39:i32 = var
blockpc %18 1 %39 1:i1
infer %37


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = block 2
%16:i64 = var
%17 = phi %15, %14, %16
%18 = phi %0, %14, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %12, %19 (hasExternalUses)
%21 = phi %0, %1, %1, %6
%22 = shl %21, 15:i64
%23 = and %22, 4294934528:i64 (hasExternalUses)
%24 = lshr %14, 32:i64
%25 = lshr %16, 32:i64
%26 = phi %15, %24, %25
%27 = phi %0, %24, %26, %26
%28 = or %27, 65536:i64 (hasExternalUses)
%29 = mul %23, %28
%30 = add %20, %29 (hasExternalUses)
%31:i64 = var
%32 = add %30, %31 (hasExternalUses)
%33:i64 = var
%34 = add %32, %33 (hasExternalUses)
%35 = shl %34, 32:i64
%36:i32 = var
blockpc %15 0 %36 1:i1
%37:i32 = var
blockpc %15 1 %37 1:i1
infer %35


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = lshr %13, 32:i64
%15:i64 = var
%16 = shl %15, 32:i64
%17 = or %14, %16
%18 = block 2
%19:i64 = var
%20:i64 = var
%21 = or %19, %20
%22 = phi %18, %17, %21
%23 = phi %0, %17, %22, %22
%24 = and %23, 4294967295:i64 (hasExternalUses)
%25 = mul %12, %24 (hasExternalUses)
%26 = phi %0, %1, %1, %6
%27 = shl %26, 15:i64
%28 = and %27, 4294934528:i64 (hasExternalUses)
%29 = and %15, 281474976710655:i64 (hasExternalUses)
%30:i64 = var
%31 = phi %18, %29, %30
%32 = phi %0, %29, %31, %31
%33 = and %32, 4294967295:i64 (hasExternalUses)
%34 = mul %28, %33
%35 = add %25, %34 (hasExternalUses)
%36:i64 = var
%37 = add %35, %36 (hasExternalUses)
%38:i64 = var
%39 = add %37, %38 (hasExternalUses)
%40:i64 = var
%41 = add %39, %40
%42:i32 = var
blockpc %18 0 %42 1:i1
%43:i32 = var
blockpc %18 1 %43 1:i1
infer %41


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 49:i64
%3:i64 = var
%4 = and %3, 281474976710655:i64 (hasExternalUses)
%5 = shl %4, 15:i64
%6 = or %2, %5
%7:i64 = var
%8 = lshr %7, 49:i64
%9:i64 = var
%10 = shl %9, 15:i64
%11 = or %8, %10
%12 = phi %0, %6, %6, %11
%13 = and %12, 4294967295:i64 (hasExternalUses)
%14:i64 = var
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16 = block 2
%17:i64 = var
%18 = phi %16, %15, %17
%19 = phi %0, %15, %18, %18
%20 = and %19, 4294967295:i64 (hasExternalUses)
%21 = mul %13, %20
%22 = lshr %1, 17:i64
%23 = shl %3, 47:i64
%24 = or %22, %23
%25 = lshr %7, 17:i64
%26 = shl %9, 47:i64
%27 = or %25, %26
%28 = phi %0, %24, %24, %27
%29 = and %28, 4294967295:i64 (hasExternalUses)
%30:i64 = var
%31 = mul %29, %30
%32 = add %21, %31 (hasExternalUses)
%33 = ult %32, %21
%34:i32 = var
blockpc %16 0 %34 1:i1
%35:i32 = var
blockpc %16 1 %35 1:i1
infer %33


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 49:i64
%3:i64 = var
%4 = and %3, 281474976710655:i64 (hasExternalUses)
%5 = shl %4, 15:i64
%6 = or %2, %5
%7:i64 = var
%8 = lshr %7, 49:i64
%9:i64 = var
%10 = shl %9, 15:i64
%11 = or %8, %10
%12 = phi %0, %6, %6, %11
%13 = and %12, 4294967295:i64 (hasExternalUses)
%14:i64 = var
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16 = block 2
%17:i64 = var
%18 = phi %16, %15, %17
%19 = phi %0, %15, %18, %18
%20 = and %19, 4294967295:i64 (hasExternalUses)
%21 = mul %13, %20 (hasExternalUses)
%22 = lshr %1, 17:i64
%23 = shl %3, 47:i64
%24 = or %22, %23
%25 = lshr %7, 17:i64
%26 = shl %9, 47:i64
%27 = or %25, %26
%28 = phi %0, %24, %24, %27
%29 = and %28, 4294967295:i64 (hasExternalUses)
%30:i64 = var
%31 = mul %29, %30
%32 = add %21, %31 (hasExternalUses)
%33:i64 = var
%34 = add %32, %33 (hasExternalUses)
%35 = ult %34, %32
%36:i32 = var
blockpc %16 0 %36 1:i1
%37:i32 = var
blockpc %16 1 %37 1:i1
infer %35


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
infer %2


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 49:i64
%3:i64 = var
%4 = shl %3, 15:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 49:i64
%8:i64 = var
%9 = shl %8, 15:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = block 2
%16:i64 = var
%17 = phi %15, %14, %16
%18 = phi %0, %14, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %12, %19 (hasExternalUses)
%21 = lshr %1, 17:i64
%22:i64 = var
%23 = shl %22, 47:i64
%24 = or %21, %23
%25 = lshr %6, 17:i64
%26 = shl %8, 47:i64
%27 = or %25, %26
%28 = phi %0, %24, %24, %27
%29 = and %28, 4294967295:i64 (hasExternalUses)
%30:i64 = var
%31 = mul %29, %30
%32 = add %20, %31 (hasExternalUses)
%33:i64 = var
%34 = add %32, %33 (hasExternalUses)
%35:i64 = var
%36 = add %34, %35 (hasExternalUses)
%37 = ult %36, %34
%38:i32 = var
blockpc %15 0 %38 1:i1
%39:i32 = var
blockpc %15 1 %39 1:i1
infer %37


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
%3:i64 = var
%4 = add %2, %3
infer %4


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = and %1, 281474976710655:i64 (hasExternalUses)
%3 = lshr %2, 17:i64
%4:i64 = var
%5 = lshr %4, 17:i64
%6 = phi %0, %3, %3, %5
%7 = and %6, 2147483647:i64
%8 = or %7, 2147483648:i64 (hasExternalUses)
%9:i64 = var
%10 = and %9, 281474976710655:i64 (hasExternalUses)
%11 = lshr %10, 32:i64
%12 = block 2
%13:i64 = var
%14 = lshr %13, 32:i64
%15 = phi %12, %11, %14
%16 = phi %0, %11, %15, %15
%17 = or %16, 65536:i64 (hasExternalUses)
%18 = mul %8, %17
%19 = and %9, 9223372036854775807:i64
%20 = ule %19, 281474976710655:i64
blockpc %12 0 %20 1:i1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %12 1 %22 1:i1
infer %18


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
%3:i64 = var
%4 = add %2, %3
%5 = block 3
%6:i64 = var
%7 = and %6, 281474976710655:i64 (hasExternalUses)
%8 = lshr %7, 17:i64
%9:i64 = var
%10 = lshr %9, 17:i64
%11 = phi %5, %8, %8, %10
%12 = and %11, 2147483647:i64
%13 = or %12, 2147483648:i64 (hasExternalUses)
%14:i64 = var
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16 = lshr %15, 32:i64
%17 = block 2
%18:i64 = var
%19 = lshr %18, 32:i64
%20 = phi %17, %16, %19
%21 = phi %5, %16, %20, %20
%22 = or %21, 65536:i64 (hasExternalUses)
%23 = mul %13, %22
%24 = add %4, %23
%25 = and %14, 9223372036854775807:i64
%26 = ule %25, 281474976710655:i64
blockpc %17 0 %26 1:i1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %17 1 %28 1:i1
infer %24


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = and %1, 281474976710655:i64 (hasExternalUses)
%3 = lshr %2, 17:i64
%4:i64 = var
%5 = lshr %4, 17:i64
%6 = phi %0, %3, %3, %5
%7 = and %6, 2147483647:i64
%8 = or %7, 2147483648:i64 (hasExternalUses)
%9:i64 = var
%10 = and %9, 281474976710655:i64 (hasExternalUses)
%11 = block 2
%12:i64 = var
%13 = phi %11, %10, %12
%14 = phi %0, %10, %13, %13
%15 = and %14, 4294967295:i64 (hasExternalUses)
%16 = mul %8, %15
%17:i64 = var
%18 = lshr %17, 49:i64
%19 = shl %2, 15:i64
%20 = or %18, %19
%21:i64 = var
%22 = lshr %21, 49:i64
%23 = shl %4, 15:i64
%24 = or %22, %23
%25 = phi %0, %20, %20, %24
%26 = and %25, 4294967295:i64 (hasExternalUses)
%27 = lshr %10, 32:i64
%28 = lshr %12, 32:i64
%29 = phi %11, %27, %28
%30 = phi %0, %27, %29, %29
%31 = or %30, 65536:i64 (hasExternalUses)
%32 = mul %26, %31
%33 = add %16, %32 (hasExternalUses)
%34 = ult %33, %16
%35:i32 = var
blockpc %11 0 %35 1:i1
%36:i32 = var
blockpc %11 1 %36 1:i1
infer %34


; start LHS (in $7)
%0:i64 = var
%1 = shl %0, 32:i64
infer %1


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = and %1, 281474976710655:i64 (hasExternalUses)
%3 = lshr %2, 17:i64
%4:i64 = var
%5 = lshr %4, 17:i64
%6 = phi %0, %3, %3, %5
%7 = and %6, 2147483647:i64
%8 = or %7, 2147483648:i64 (hasExternalUses)
%9:i64 = var
%10 = and %9, 281474976710655:i64 (hasExternalUses)
%11 = block 2
%12:i64 = var
%13 = phi %11, %10, %12
%14 = phi %0, %10, %13, %13
%15 = and %14, 4294967295:i64 (hasExternalUses)
%16 = mul %8, %15 (hasExternalUses)
%17:i64 = var
%18 = lshr %17, 49:i64
%19 = shl %2, 15:i64
%20 = or %18, %19
%21:i64 = var
%22 = lshr %21, 49:i64
%23 = shl %4, 15:i64
%24 = or %22, %23
%25 = phi %0, %20, %20, %24
%26 = and %25, 4294967295:i64 (hasExternalUses)
%27 = lshr %10, 32:i64
%28 = lshr %12, 32:i64
%29 = phi %11, %27, %28
%30 = phi %0, %27, %29, %29
%31 = or %30, 65536:i64 (hasExternalUses)
%32 = mul %26, %31
%33 = add %16, %32 (hasExternalUses)
%34 = lshr %33, 32:i64
%35:i32 = var
blockpc %11 0 %35 1:i1
%36:i32 = var
blockpc %11 1 %36 1:i1
infer %34


; start LHS (in $7)
%0:i64 = var
%1 = shl %0, 32:i64
%2 = block 3
%3:i64 = var
%4 = and %3, 281474976710655:i64 (hasExternalUses)
%5 = lshr %4, 17:i64
%6:i64 = var
%7 = lshr %6, 17:i64
%8 = phi %2, %5, %5, %7
%9 = and %8, 2147483647:i64
%10 = or %9, 2147483648:i64 (hasExternalUses)
%11:i64 = var
%12 = and %11, 281474976710655:i64 (hasExternalUses)
%13 = block 2
%14:i64 = var
%15 = phi %13, %12, %14
%16 = phi %2, %12, %15, %15
%17 = and %16, 4294967295:i64 (hasExternalUses)
%18 = mul %10, %17 (hasExternalUses)
%19:i64 = var
%20 = lshr %19, 49:i64
%21 = shl %4, 15:i64
%22 = or %20, %21
%23:i64 = var
%24 = lshr %23, 49:i64
%25 = shl %6, 15:i64
%26 = or %24, %25
%27 = phi %2, %22, %22, %26
%28 = and %27, 4294967295:i64 (hasExternalUses)
%29 = lshr %12, 32:i64
%30:i64 = var
%31 = phi %13, %29, %30
%32 = phi %2, %29, %31, %31
%33 = or %32, 65536:i64 (hasExternalUses)
%34 = mul %28, %33
%35 = add %18, %34 (hasExternalUses)
%36 = lshr %35, 32:i64
%37 = or %1, %36
%38:i32 = var
blockpc %13 0 %38 1:i1
%39:i32 = var
blockpc %13 1 %39 1:i1
infer %37


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
%3:i64 = var
%4 = add %2, %3
%5 = block 3
%6:i64 = var
%7 = and %6, 281474976710655:i64 (hasExternalUses)
%8 = lshr %7, 17:i64
%9:i64 = var
%10 = lshr %9, 17:i64
%11 = phi %5, %8, %8, %10
%12 = and %11, 2147483647:i64
%13 = or %12, 2147483648:i64 (hasExternalUses)
%14:i64 = var
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16 = lshr %15, 32:i64
%17 = block 2
%18:i64 = var
%19 = lshr %18, 32:i64
%20 = phi %17, %16, %19
%21 = phi %5, %16, %20, %20
%22 = or %21, 65536:i64 (hasExternalUses)
%23 = mul %13, %22
%24 = add %4, %23
%25:i64 = var
%26 = shl %25, 32:i64
%27 = phi %17, %15, %18
%28 = phi %5, %15, %27, %27
%29 = and %28, 4294967295:i64 (hasExternalUses)
%30 = mul %13, %29 (hasExternalUses)
%31:i64 = var
%32 = add %30, %31 (hasExternalUses)
%33 = lshr %32, 32:i64
%34 = or %26, %33
%35 = add %24, %34
%36:i32 = var
blockpc %17 0 %36 1:i1
%37:i32 = var
blockpc %17 1 %37 1:i1
infer %35


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = or %1, %2
%4:i64 = var
%5:i64 = var
%6 = or %4, %5
%7 = phi %0, %3, %3, %6
%8 = and %7, 4294967295:i64 (hasExternalUses)
%9:i64 = var
%10 = and %9, 281474976710655:i64 (hasExternalUses)
%11 = block 2
%12:i64 = var
%13 = phi %11, %10, %12
%14 = phi %0, %10, %13, %13
%15 = and %14, 4294967295:i64 (hasExternalUses)
%16 = mul %8, %15 (hasExternalUses)
%17:i64 = var
%18:i64 = var
%19 = or %17, %18
%20:i64 = var
%21:i64 = var
%22 = or %20, %21
%23 = phi %0, %19, %19, %22
%24 = and %23, 4294967295:i64 (hasExternalUses)
%25 = lshr %10, 32:i64
%26:i64 = var
%27 = phi %11, %25, %26
%28 = phi %0, %25, %27, %27
%29 = or %28, 65536:i64 (hasExternalUses)
%30 = mul %24, %29
%31 = add %16, %30 (hasExternalUses)
%32:i64 = var
%33 = add %31, %32 (hasExternalUses)
%34:i64 = var
%35 = add %33, %34 (hasExternalUses)
%36:i64 = var
%37 = add %35, %36 (hasExternalUses)
%38 = ult %37, %35
%39:i32 = var
blockpc %11 0 %39 1:i1
%40:i32 = var
blockpc %11 1 %40 1:i1
infer %38


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
%3:i64 = var
%4 = add %2, %3
%5 = block 3
%6:i64 = var
%7 = and %6, 281474976710655:i64 (hasExternalUses)
%8 = lshr %7, 17:i64
%9:i64 = var
%10 = lshr %9, 17:i64
%11 = phi %5, %8, %8, %10
%12 = and %11, 2147483647:i64
%13 = or %12, 2147483648:i64 (hasExternalUses)
%14:i64 = var
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16 = lshr %15, 32:i64
%17 = block 2
%18:i64 = var
%19 = lshr %18, 32:i64
%20 = phi %17, %16, %19
%21 = phi %5, %16, %20, %20
%22 = or %21, 65536:i64 (hasExternalUses)
%23 = mul %13, %22
%24 = add %4, %23
%25:i64 = var
%26 = shl %25, 32:i64
%27 = phi %17, %15, %18
%28 = phi %5, %15, %27, %27
%29 = and %28, 4294967295:i64 (hasExternalUses)
%30 = mul %13, %29 (hasExternalUses)
%31:i64 = var
%32 = add %30, %31 (hasExternalUses)
%33 = lshr %32, 32:i64
%34 = or %26, %33
%35 = add %24, %34
%36:i64 = var
%37 = add %35, %36
%38:i32 = var
blockpc %17 0 %38 1:i1
%39:i32 = var
blockpc %17 1 %39 1:i1
infer %37


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %1, %2
%4 = and %3, 4294967295:i64 (hasExternalUses)
%5:i64 = var
%6 = block 2
%7:i64 = var
%8 = phi %6, %5, %7
%9 = phi %0, %5, %8, %8
%10 = and %9, 4294967295:i64 (hasExternalUses)
%11 = mul %4, %10 (hasExternalUses)
%12:i64 = var
%13:i64 = var
%14 = phi %0, %12, %12, %13
%15 = and %14, 4294967295:i64 (hasExternalUses)
%16:i64 = var
%17:i64 = var
%18 = phi %6, %16, %17
%19 = phi %0, %16, %18, %18
%20 = or %19, 65536:i64 (hasExternalUses)
%21 = mul %15, %20
%22 = add %11, %21 (hasExternalUses)
%23:i64 = var
%24:i64 = var
%25 = phi %0, %23, %23, %24
%26 = and %25, 2147483647:i64
%27 = or %26, 2147483648:i64 (hasExternalUses)
%28:i64 = var
%29:i64 = var
%30 = or %28, %29
%31:i64 = var
%32 = phi %6, %30, %31
%33 = phi %0, %30, %32, %32
%34 = and %33, 4294967295:i64 (hasExternalUses)
%35 = mul %27, %34
%36 = add %22, %35 (hasExternalUses)
%37:i64 = var
%38 = add %36, %37 (hasExternalUses)
%39:i64 = var
%40 = add %38, %39 (hasExternalUses)
%41:i64 = var
%42 = add %40, %41 (hasExternalUses)
%43 = ult %42, %40
%44:i32 = var
blockpc %6 0 %44 1:i1
%45:i32 = var
blockpc %6 1 %45 1:i1
infer %43


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
%3:i64 = var
%4 = add %2, %3
%5 = block 3
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = lshr %8, 17:i64
%10 = phi %5, %7, %7, %9
%11 = and %10, 2147483647:i64
%12 = or %11, 2147483648:i64 (hasExternalUses)
%13:i64 = var
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = lshr %14, 32:i64
%16 = block 2
%17:i64 = var
%18 = lshr %17, 32:i64
%19 = phi %16, %15, %18
%20 = phi %5, %15, %19, %19
%21 = or %20, 65536:i64 (hasExternalUses)
%22 = mul %12, %21
%23 = add %4, %22
%24:i64 = var
%25 = shl %24, 32:i64
%26 = phi %16, %14, %17
%27 = phi %5, %14, %26, %26
%28 = and %27, 4294967295:i64 (hasExternalUses)
%29 = mul %12, %28 (hasExternalUses)
%30:i64 = var
%31 = add %29, %30 (hasExternalUses)
%32 = lshr %31, 32:i64
%33 = or %25, %32
%34 = add %23, %33
%35:i64 = var
%36 = add %34, %35
%37:i64 = var
%38 = add %36, %37
%39:i32 = var
blockpc %16 0 %39 1:i1
%40:i32 = var
blockpc %16 1 %40 1:i1
infer %38


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = lshr %13, 32:i64
%15:i64 = var
%16 = shl %15, 32:i64
%17 = or %14, %16
%18 = block 2
%19:i64 = var
%20:i64 = var
%21 = or %19, %20
%22 = phi %18, %17, %21
%23 = phi %0, %17, %22, %22
%24 = and %23, 4294967295:i64 (hasExternalUses)
%25 = mul %12, %24 (hasExternalUses)
%26 = phi %0, %1, %1, %6
%27 = shl %26, 15:i64
%28 = and %27, 4294934528:i64 (hasExternalUses)
%29 = and %15, 281474976710655:i64 (hasExternalUses)
%30:i64 = var
%31 = phi %18, %29, %30
%32 = phi %0, %29, %31, %31
%33 = and %32, 4294967295:i64 (hasExternalUses)
%34 = mul %28, %33
%35 = add %25, %34 (hasExternalUses)
%36:i64 = var
%37 = add %35, %36 (hasExternalUses)
%38:i64 = var
%39 = add %37, %38 (hasExternalUses)
%40 = ult %39, %37
%41:i32 = var
blockpc %18 0 %41 1:i1
%42:i32 = var
blockpc %18 1 %42 1:i1
infer %40


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = or %1, %2
%4:i64 = var
%5:i64 = var
%6 = or %4, %5
%7 = phi %0, %3, %3, %6
%8 = and %7, 4294967295:i64 (hasExternalUses)
%9:i64 = var
%10:i64 = var
%11 = or %9, %10
%12 = block 2
%13:i64 = var
%14 = phi %12, %11, %13
%15 = phi %0, %11, %14, %14
%16 = and %15, 4294967295:i64 (hasExternalUses)
%17 = mul %8, %16 (hasExternalUses)
%18:i64 = var
%19:i64 = var
%20 = phi %0, %18, %18, %19
%21 = shl %20, 15:i64
%22 = and %21, 4294934528:i64 (hasExternalUses)
%23:i64 = var
%24 = and %23, 281474976710655:i64 (hasExternalUses)
%25:i64 = var
%26 = phi %12, %24, %25
%27 = phi %0, %24, %26, %26
%28 = and %27, 4294967295:i64 (hasExternalUses)
%29 = mul %22, %28
%30 = add %17, %29 (hasExternalUses)
%31:i64 = var
%32 = add %30, %31 (hasExternalUses)
%33:i64 = var
%34 = add %32, %33 (hasExternalUses)
%35:i64 = var
%36 = add %34, %35 (hasExternalUses)
%37 = ult %36, %34
%38:i32 = var
blockpc %12 0 %38 1:i1
%39:i32 = var
blockpc %12 1 %39 1:i1
infer %37


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
infer %2


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %1, %2
%4 = and %3, 4294967295:i64 (hasExternalUses)
%5:i64 = var
%6 = block 2
%7:i64 = var
%8 = phi %6, %5, %7
%9 = phi %0, %5, %8, %8
%10 = and %9, 4294967295:i64 (hasExternalUses)
%11 = mul %4, %10 (hasExternalUses)
%12:i64 = var
%13:i64 = var
%14 = phi %0, %12, %12, %13
%15 = and %14, 4294967295:i64 (hasExternalUses)
%16:i64 = var
%17:i64 = var
%18 = phi %6, %16, %17
%19 = phi %0, %16, %18, %18
%20 = or %19, 65536:i64 (hasExternalUses)
%21 = mul %15, %20
%22 = add %11, %21 (hasExternalUses)
%23:i64 = var
%24:i64 = var
%25 = phi %0, %23, %23, %24
%26 = and %25, 2147483647:i64
%27 = or %26, 2147483648:i64 (hasExternalUses)
%28:i64 = var
%29:i64 = var
%30 = or %28, %29
%31:i64 = var
%32 = phi %6, %30, %31
%33 = phi %0, %30, %32, %32
%34 = and %33, 4294967295:i64 (hasExternalUses)
%35 = mul %27, %34
%36 = add %22, %35 (hasExternalUses)
%37:i64 = var
%38 = add %36, %37 (hasExternalUses)
%39:i64 = var
%40 = add %38, %39 (hasExternalUses)
%41:i64 = var
%42 = add %40, %41 (hasExternalUses)
%43:i64 = var
%44 = add %42, %43
%45:i32 = var
blockpc %6 0 %45 1:i1
%46:i32 = var
blockpc %6 1 %46 1:i1
infer %44


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %1, %2
%4 = and %3, 4294967295:i64 (hasExternalUses)
%5:i64 = var
%6 = block 2
%7:i64 = var
%8 = phi %6, %5, %7
%9 = phi %0, %5, %8, %8
%10 = and %9, 4294967295:i64 (hasExternalUses)
%11 = mul %4, %10 (hasExternalUses)
%12:i64 = var
%13:i64 = var
%14 = phi %0, %12, %12, %13
%15 = and %14, 4294967295:i64 (hasExternalUses)
%16:i64 = var
%17:i64 = var
%18 = phi %6, %16, %17
%19 = phi %0, %16, %18, %18
%20 = or %19, 65536:i64 (hasExternalUses)
%21 = mul %15, %20
%22 = add %11, %21 (hasExternalUses)
%23:i64 = var
%24:i64 = var
%25 = phi %0, %23, %23, %24
%26 = and %25, 2147483647:i64
%27 = or %26, 2147483648:i64 (hasExternalUses)
%28:i64 = var
%29:i64 = var
%30 = phi %6, %28, %29
%31 = phi %0, %28, %30, %30
%32 = and %31, 4294967295:i64 (hasExternalUses)
%33 = mul %27, %32
%34 = add %22, %33 (hasExternalUses)
%35:i64 = var
%36 = add %34, %35 (hasExternalUses)
%37:i64 = var
%38 = add %36, %37 (hasExternalUses)
%39:i64 = var
%40 = add %38, %39 (hasExternalUses)
%41:i64 = var
%42 = add %40, %41 (hasExternalUses)
%43 = ult %42, %40
%44:i32 = var
blockpc %6 0 %44 1:i1
%45:i32 = var
blockpc %6 1 %45 1:i1
infer %43


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
%3:i64 = var
%4 = add %2, %3
%5 = block 3
%6:i64 = var
%7:i64 = var
%8 = phi %5, %6, %6, %7
%9 = and %8, 2147483647:i64
%10 = or %9, 2147483648:i64 (hasExternalUses)
%11:i64 = var
%12 = lshr %11, 32:i64
%13 = block 2
%14:i64 = var
%15 = phi %13, %12, %14
%16 = phi %5, %12, %15, %15
%17 = or %16, 65536:i64 (hasExternalUses)
%18 = mul %10, %17
%19 = add %4, %18
%20:i64 = var
%21 = shl %20, 32:i64
%22:i64 = var
%23 = phi %13, %11, %22
%24 = phi %5, %11, %23, %23
%25 = and %24, 4294967295:i64 (hasExternalUses)
%26 = mul %10, %25 (hasExternalUses)
%27:i64 = var
%28:i64 = var
%29 = phi %5, %27, %27, %28
%30 = and %29, 4294967295:i64 (hasExternalUses)
%31 = mul %30, %17
%32 = add %26, %31 (hasExternalUses)
%33 = lshr %32, 32:i64
%34 = or %21, %33
%35 = add %19, %34
%36:i64 = var
%37 = add %35, %36
%38:i64 = var
%39 = add %37, %38
%40:i64 = var
%41 = add %39, %40
%42:i32 = var
blockpc %13 0 %42 1:i1
%43:i32 = var
blockpc %13 1 %43 1:i1
infer %41


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = block 2
%15:i64 = var
%16 = phi %14, %13, %15
%17 = phi %0, %13, %16, %16
%18 = and %17, 4294967295:i64 (hasExternalUses)
%19 = mul %12, %18 (hasExternalUses)
%20 = phi %0, %1, %1, %6
%21 = shl %20, 15:i64
%22 = and %21, 4294934528:i64 (hasExternalUses)
%23 = lshr %13, 32:i64
%24:i64 = var
%25 = shl %24, 32:i64
%26 = or %23, %25
%27 = lshr %15, 32:i64
%28:i64 = var
%29 = shl %28, 32:i64
%30 = or %27, %29
%31 = phi %14, %26, %30
%32 = phi %0, %26, %31, %31
%33 = and %32, 4294967295:i64 (hasExternalUses)
%34 = mul %22, %33
%35 = add %19, %34 (hasExternalUses)
%36 = shl %35, 32:i64
%37:i32 = var
blockpc %14 0 %37 1:i1
%38:i32 = var
blockpc %14 1 %38 1:i1
infer %36


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %1, %2
%4 = shl %3, 15:i64
%5 = and %4, 4294934528:i64 (hasExternalUses)
%6:i64 = var
%7 = block 2
%8:i64 = var
%9 = phi %7, %6, %8
%10 = phi %0, %6, %9, %9
%11 = and %10, 4294967295:i64 (hasExternalUses)
%12 = mul %5, %11
%13:i64 = var
%14 = and %13, 9223372036854775807:i64
%15 = ule %14, 281474976710655:i64
blockpc %7 0 %15 1:i1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %7 1 %17 1:i1
infer %12


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = block 2
%15:i64 = var
%16 = phi %14, %13, %15
%17 = phi %0, %13, %16, %16
%18 = and %17, 4294967295:i64 (hasExternalUses)
%19 = mul %12, %18 (hasExternalUses)
%20 = phi %0, %1, %1, %6
%21 = shl %20, 15:i64
%22 = and %21, 4294934528:i64 (hasExternalUses)
%23 = lshr %13, 32:i64
%24:i64 = var
%25 = shl %24, 32:i64
%26 = or %23, %25
%27 = lshr %15, 32:i64
%28:i64 = var
%29 = shl %28, 32:i64
%30 = or %27, %29
%31 = phi %14, %26, %30
%32 = phi %0, %26, %31, %31
%33 = and %32, 4294967295:i64 (hasExternalUses)
%34 = mul %22, %33
%35 = add %19, %34 (hasExternalUses)
%36 = shl %35, 32:i64 (hasExternalUses)
%37:i64 = var
%38 = add %36, %37
%39:i32 = var
blockpc %14 0 %39 1:i1
%40:i32 = var
blockpc %14 1 %40 1:i1
infer %38


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = block 2
%15:i64 = var
%16 = phi %14, %13, %15
%17 = phi %0, %13, %16, %16
%18 = and %17, 4294967295:i64 (hasExternalUses)
%19 = mul %12, %18 (hasExternalUses)
%20 = phi %0, %1, %1, %6
%21 = shl %20, 15:i64
%22 = and %21, 4294934528:i64 (hasExternalUses)
%23 = lshr %13, 32:i64
%24:i64 = var
%25 = shl %24, 32:i64
%26 = or %23, %25
%27:i64 = var
%28:i64 = var
%29 = or %27, %28
%30 = phi %14, %26, %29
%31 = phi %0, %26, %30, %30
%32 = and %31, 4294967295:i64 (hasExternalUses)
%33 = mul %22, %32
%34 = add %19, %33 (hasExternalUses)
%35 = shl %34, 32:i64
%36:i64 = var
%37 = add %35, %36 (hasExternalUses)
%38 = ult %37, %35
%39:i32 = var
blockpc %14 0 %39 1:i1
%40:i32 = var
blockpc %14 1 %40 1:i1
infer %38


; start LHS (in $7)
%0:i64 = var
%1 = block 3
%2:i64 = var
%3:i64 = var
%4 = or %2, %3
%5:i64 = var
%6:i64 = var
%7 = or %5, %6
%8 = phi %1, %4, %4, %7
%9 = and %8, 4294967295:i64 (hasExternalUses)
%10:i64 = var
%11:i64 = var
%12 = or %10, %11
%13 = block 2
%14:i64 = var
%15 = phi %13, %12, %14
%16 = phi %1, %12, %15, %15
%17 = and %16, 4294967295:i64 (hasExternalUses)
%18 = mul %9, %17 (hasExternalUses)
%19:i64 = var
%20:i64 = var
%21 = phi %1, %19, %19, %20
%22 = shl %21, 15:i64
%23 = and %22, 4294934528:i64 (hasExternalUses)
%24:i64 = var
%25 = and %24, 281474976710655:i64 (hasExternalUses)
%26:i64 = var
%27 = phi %13, %25, %26
%28 = phi %1, %25, %27, %27
%29 = and %28, 4294967295:i64 (hasExternalUses)
%30 = mul %23, %29
%31 = add %18, %30 (hasExternalUses)
%32:i64 = var
%33 = add %31, %32 (hasExternalUses)
%34:i64 = var
%35 = add %33, %34 (hasExternalUses)
%36:i64 = var
%37 = add %35, %36 (hasExternalUses)
%38 = add %0, %37
%39:i32 = var
blockpc %13 0 %39 1:i1
%40:i32 = var
blockpc %13 1 %40 1:i1
infer %38


; start LHS (in $7)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 32767:i32 (hasExternalUses)
%4 = add %1, %3
infer %4


; start LHS (in $7)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 32767:i32 (hasExternalUses)
%4 = add %1, %3
%5 = block 3
%6 = block 2
%7:i32 = var
%8 = sub 16:i32, %7
%9 = phi %6, 0:i32, %8
%10:i32 = var
%11 = sub 16:i32, %10
%12 = add %11, %9
%13 = phi %5, 0:i32, %9, %12
%14 = add %4, %13
%15:i64 = var
%16 = and %15, 9223372036854775807:i64
%17 = ule %16, 281474976710655:i64
blockpc %6 0 %17 1:i1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %6 1 %19 1:i1
infer %14


; start LHS (in $7)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 32767:i32 (hasExternalUses)
%4 = add %1, %3
%5 = block 3
%6 = block 2
%7:i32 = var
%8 = sub 16:i32, %7
%9 = phi %6, 0:i32, %8
%10:i32 = var
%11 = sub 16:i32, %10
%12 = add %11, %9
%13 = phi %5, 0:i32, %9, %12
%14 = add %4, %13
%15 = add %14, -16383:i32
%16:i64 = var
%17 = and %16, 9223372036854775807:i64
%18 = ule %17, 281474976710655:i64
blockpc %6 0 %18 1:i1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %6 1 %20 1:i1
infer %15


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
%3:i64 = var
%4 = add %2, %3
%5 = block 3
%6:i64 = var
%7:i64 = var
%8 = phi %5, %6, %6, %7
%9 = and %8, 2147483647:i64
%10 = or %9, 2147483648:i64 (hasExternalUses)
%11:i64 = var
%12 = block 2
%13:i64 = var
%14 = phi %12, %11, %13
%15 = phi %5, %11, %14, %14
%16 = or %15, 65536:i64 (hasExternalUses)
%17 = mul %10, %16
%18 = add %4, %17
%19:i64 = var
%20 = shl %19, 32:i64
%21:i64 = var
%22 = mul %10, %21 (hasExternalUses)
%23:i64 = var
%24 = mul %23, %16
%25 = add %22, %24 (hasExternalUses)
%26 = lshr %25, 32:i64
%27 = or %20, %26
%28 = add %18, %27
%29:i64 = var
%30 = add %28, %29
%31:i64 = var
%32 = add %30, %31
%33:i64 = var
%34 = add %32, %33 (hasExternalUses)
%35 = and %34, 281474976710656:i64
%36:i32 = var
blockpc %12 0 %36 1:i1
%37:i32 = var
blockpc %12 1 %37 1:i1
infer %35


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
%3:i64 = var
%4 = add %2, %3
%5:i64 = var
%6 = or %5, 2147483648:i64 (hasExternalUses)
%7 = block 3
%8:i64 = var
%9 = block 2
%10:i64 = var
%11 = phi %9, %8, %10
%12 = phi %7, %8, %11, %11
%13 = or %12, 65536:i64 (hasExternalUses)
%14 = mul %6, %13
%15 = add %4, %14
%16:i64 = var
%17 = shl %16, 32:i64
%18:i64 = var
%19:i64 = var
%20 = add %18, %19 (hasExternalUses)
%21 = lshr %20, 32:i64
%22 = or %17, %21
%23 = add %15, %22
%24:i64 = var
%25 = add %23, %24
%26:i64 = var
%27 = add %25, %26
%28:i64 = var
%29 = add %27, %28 (hasExternalUses)
%30 = and %29, 281474976710656:i64
%31 = eq %30, 0:i64
%32:i32 = var
blockpc %9 0 %32 1:i1
%33:i32 = var
blockpc %9 1 %33 1:i1
infer %31


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = block 2
%15:i64 = var
%16 = phi %14, %13, %15
%17 = phi %0, %13, %16, %16
%18 = and %17, 4294967295:i64 (hasExternalUses)
%19 = mul %12, %18 (hasExternalUses)
%20 = phi %0, %1, %1, %6
%21 = shl %20, 15:i64
%22 = and %21, 4294934528:i64 (hasExternalUses)
%23 = lshr %13, 32:i64
%24:i64 = var
%25 = shl %24, 32:i64
%26 = or %23, %25
%27:i64 = var
%28:i64 = var
%29 = or %27, %28
%30 = phi %14, %26, %29
%31 = phi %0, %26, %30, %30
%32 = and %31, 4294967295:i64 (hasExternalUses)
%33 = mul %22, %32
%34 = add %19, %33 (hasExternalUses)
%35 = shl %34, 32:i64 (hasExternalUses)
%36:i64 = var
%37 = add %35, %36 (hasExternalUses)
%38 = lshr %37, 63:i64
%39:i32 = var
blockpc %14 0 %39 1:i1
%40:i32 = var
blockpc %14 1 %40 1:i1
%41:i32 = var
pc %41 1:i1
infer %38


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
%3:i64 = var
%4 = add %2, %3
%5 = block 3
%6:i64 = var
%7:i64 = var
%8 = phi %5, %6, %6, %7
%9 = and %8, 2147483647:i64
%10 = or %9, 2147483648:i64 (hasExternalUses)
%11:i64 = var
%12 = block 2
%13:i64 = var
%14 = phi %12, %11, %13
%15 = phi %5, %11, %14, %14
%16 = or %15, 65536:i64 (hasExternalUses)
%17 = mul %10, %16
%18 = add %4, %17
%19:i64 = var
%20 = shl %19, 32:i64
%21:i64 = var
%22 = mul %10, %21 (hasExternalUses)
%23:i64 = var
%24 = mul %23, %16
%25 = add %22, %24 (hasExternalUses)
%26 = lshr %25, 32:i64
%27 = or %20, %26
%28 = add %18, %27
%29:i64 = var
%30 = add %28, %29
%31:i64 = var
%32 = add %30, %31
%33:i64 = var
%34 = add %32, %33 (hasExternalUses)
%35 = shl %34, 1:i64
%36:i32 = var
blockpc %12 0 %36 1:i1
%37:i32 = var
blockpc %12 1 %37 1:i1
%38:i32 = var
pc %38 1:i1
infer %35


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %1, %2
%4 = and %3, 4294967295:i64 (hasExternalUses)
%5:i64 = var
%6 = block 2
%7:i64 = var
%8 = phi %6, %5, %7
%9 = phi %0, %5, %8, %8
%10 = and %9, 4294967295:i64 (hasExternalUses)
%11 = mul %4, %10 (hasExternalUses)
%12:i64 = var
%13:i64 = var
%14 = phi %0, %12, %12, %13
%15 = and %14, 4294967295:i64 (hasExternalUses)
%16:i64 = var
%17:i64 = var
%18 = phi %6, %16, %17
%19 = phi %0, %16, %18, %18
%20 = or %19, 65536:i64 (hasExternalUses)
%21 = mul %15, %20
%22 = add %11, %21 (hasExternalUses)
%23:i64 = var
%24:i64 = var
%25 = phi %0, %23, %23, %24
%26 = and %25, 2147483647:i64
%27 = or %26, 2147483648:i64 (hasExternalUses)
%28:i64 = var
%29:i64 = var
%30 = phi %6, %28, %29
%31 = phi %0, %28, %30, %30
%32 = and %31, 4294967295:i64 (hasExternalUses)
%33 = mul %27, %32
%34 = add %22, %33 (hasExternalUses)
%35:i64 = var
%36 = add %34, %35 (hasExternalUses)
%37:i64 = var
%38 = add %36, %37 (hasExternalUses)
%39:i64 = var
%40 = add %38, %39 (hasExternalUses)
%41:i64 = var
%42 = add %40, %41 (hasExternalUses)
%43 = lshr %42, 63:i64
%44:i32 = var
blockpc %6 0 %44 1:i1
%45:i32 = var
blockpc %6 1 %45 1:i1
%46:i32 = var
pc %46 1:i1
infer %43


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = add %0, %1
%3:i64 = var
%4 = add %2, %3
%5:i64 = var
%6 = or %5, 2147483648:i64 (hasExternalUses)
%7 = block 3
%8:i64 = var
%9 = block 2
%10:i64 = var
%11 = phi %9, %8, %10
%12 = phi %7, %8, %11, %11
%13 = or %12, 65536:i64 (hasExternalUses)
%14 = mul %6, %13
%15 = add %4, %14
%16:i64 = var
%17 = shl %16, 32:i64
%18:i64 = var
%19:i64 = var
%20 = add %18, %19 (hasExternalUses)
%21 = lshr %20, 32:i64
%22 = or %17, %21
%23 = add %15, %22
%24:i64 = var
%25 = add %23, %24
%26:i64 = var
%27 = add %25, %26
%28:i64 = var
%29 = add %27, %28 (hasExternalUses)
%30 = shl %29, 1:i64
%31:i64 = var
%32 = or %30, %31
%33:i32 = var
blockpc %9 0 %33 1:i1
%34:i32 = var
blockpc %9 1 %34 1:i1
%35:i32 = var
pc %35 1:i1
infer %32


; start LHS (in $7)
%0:i64 = var
%1 = block 3
%2:i64 = var
%3:i64 = var
%4 = phi %1, %2, %2, %3
%5 = and %4, 4294967295:i64 (hasExternalUses)
%6:i64 = var
%7 = block 2
%8:i64 = var
%9 = phi %7, %6, %8
%10 = phi %1, %6, %9, %9
%11 = and %10, 4294967295:i64 (hasExternalUses)
%12 = mul %5, %11 (hasExternalUses)
%13:i64 = var
%14:i64 = var
%15 = phi %1, %13, %13, %14
%16 = shl %15, 15:i64
%17 = and %16, 4294934528:i64 (hasExternalUses)
%18:i64 = var
%19:i64 = var
%20 = phi %7, %18, %19
%21 = phi %1, %18, %20, %20
%22 = and %21, 4294967295:i64 (hasExternalUses)
%23 = mul %17, %22
%24 = add %12, %23 (hasExternalUses)
%25:i64 = var
%26:i64 = var
%27 = or %25, %26
%28:i64 = var
%29:i64 = var
%30 = or %28, %29
%31 = phi %1, %27, %27, %30
%32 = and %31, 4294967295:i64 (hasExternalUses)
%33:i64 = var
%34 = mul %32, %33
%35 = add %24, %34 (hasExternalUses)
%36:i64 = var
%37 = add %35, %36 (hasExternalUses)
%38:i64 = var
%39 = add %37, %38 (hasExternalUses)
%40 = add %0, %39 (hasExternalUses)
%41 = lshr %40, 63:i64
%42:i32 = var
blockpc %7 0 %42 1:i1
%43:i32 = var
blockpc %7 1 %43 1:i1
%44:i32 = var
pc %44 1:i1
infer %41


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %1, %2
%4 = and %3, 4294967295:i64 (hasExternalUses)
%5:i64 = var
%6 = block 2
%7:i64 = var
%8 = phi %6, %5, %7
%9 = phi %0, %5, %8, %8
%10 = and %9, 4294967295:i64 (hasExternalUses)
%11 = mul %4, %10 (hasExternalUses)
%12:i64 = var
%13:i64 = var
%14 = phi %0, %12, %12, %13
%15 = and %14, 4294967295:i64 (hasExternalUses)
%16:i64 = var
%17:i64 = var
%18 = phi %6, %16, %17
%19 = phi %0, %16, %18, %18
%20 = or %19, 65536:i64 (hasExternalUses)
%21 = mul %15, %20
%22 = add %11, %21 (hasExternalUses)
%23:i64 = var
%24:i64 = var
%25 = phi %0, %23, %23, %24
%26 = and %25, 2147483647:i64
%27 = or %26, 2147483648:i64 (hasExternalUses)
%28:i64 = var
%29:i64 = var
%30 = phi %6, %28, %29
%31 = phi %0, %28, %30, %30
%32 = and %31, 4294967295:i64 (hasExternalUses)
%33 = mul %27, %32
%34 = add %22, %33 (hasExternalUses)
%35:i64 = var
%36 = add %34, %35 (hasExternalUses)
%37:i64 = var
%38 = add %36, %37 (hasExternalUses)
%39:i64 = var
%40 = add %38, %39 (hasExternalUses)
%41:i64 = var
%42 = add %40, %41 (hasExternalUses)
%43 = shl %42, 1:i64
%44:i32 = var
blockpc %6 0 %44 1:i1
%45:i32 = var
blockpc %6 1 %45 1:i1
%46:i32 = var
pc %46 1:i1
infer %43


; start LHS (in $7)
%0:i64 = var
%1 = block 3
%2:i64 = var
%3:i64 = var
%4 = phi %1, %2, %2, %3
%5 = and %4, 4294967295:i64 (hasExternalUses)
%6:i64 = var
%7 = block 2
%8:i64 = var
%9 = phi %7, %6, %8
%10 = phi %1, %6, %9, %9
%11 = and %10, 4294967295:i64 (hasExternalUses)
%12 = mul %5, %11 (hasExternalUses)
%13:i64 = var
%14 = and %13, 4294934528:i64 (hasExternalUses)
%15:i64 = var
%16:i64 = var
%17 = phi %7, %15, %16
%18 = phi %1, %15, %17, %17
%19 = and %18, 4294967295:i64 (hasExternalUses)
%20 = mul %14, %19
%21 = add %12, %20 (hasExternalUses)
%22:i64 = var
%23:i64 = var
%24 = phi %1, %22, %22, %23
%25 = and %24, 4294967295:i64 (hasExternalUses)
%26:i64 = var
%27:i64 = var
%28 = phi %7, %26, %27
%29 = phi %1, %26, %28, %28
%30 = and %29, 4294967295:i64 (hasExternalUses)
%31 = mul %25, %30
%32 = add %21, %31 (hasExternalUses)
%33:i64 = var
%34 = add %32, %33 (hasExternalUses)
%35:i64 = var
%36 = add %34, %35 (hasExternalUses)
%37 = add %0, %36 (hasExternalUses)
%38 = lshr %37, 63:i64
%39:i64 = var
%40 = or %38, %39
%41:i32 = var
blockpc %7 0 %41 1:i1
%42:i32 = var
blockpc %7 1 %42 1:i1
%43:i32 = var
pc %43 1:i1
infer %40


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2 = lshr %1, 17:i64
%3:i64 = var
%4 = shl %3, 47:i64
%5 = or %2, %4
%6:i64 = var
%7 = lshr %6, 17:i64
%8:i64 = var
%9 = shl %8, 47:i64
%10 = or %7, %9
%11 = phi %0, %5, %5, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13:i64 = var
%14 = block 2
%15:i64 = var
%16 = phi %14, %13, %15
%17 = phi %0, %13, %16, %16
%18 = and %17, 4294967295:i64 (hasExternalUses)
%19 = mul %12, %18 (hasExternalUses)
%20 = phi %0, %1, %1, %6
%21 = shl %20, 15:i64
%22 = and %21, 4294934528:i64 (hasExternalUses)
%23 = lshr %13, 32:i64
%24:i64 = var
%25 = shl %24, 32:i64
%26 = or %23, %25
%27:i64 = var
%28:i64 = var
%29 = or %27, %28
%30 = phi %14, %26, %29
%31 = phi %0, %26, %30, %30
%32 = and %31, 4294967295:i64 (hasExternalUses)
%33 = mul %22, %32
%34 = add %19, %33 (hasExternalUses)
%35 = shl %34, 32:i64 (hasExternalUses)
%36:i64 = var
%37 = add %35, %36 (hasExternalUses)
%38 = shl %37, 1:i64
%39:i32 = var
blockpc %14 0 %39 1:i1
%40:i32 = var
blockpc %14 1 %40 1:i1
%41:i32 = var
pc %41 1:i1
infer %38


; start LHS (in $7)
%0:i64 = var
%1 = block 3
%2:i64 = var
%3:i64 = var
%4 = phi %1, %2, %2, %3
%5 = and %4, 4294967295:i64 (hasExternalUses)
%6:i64 = var
%7 = block 2
%8:i64 = var
%9 = phi %7, %6, %8
%10 = phi %1, %6, %9, %9
%11 = and %10, 4294967295:i64 (hasExternalUses)
%12 = mul %5, %11 (hasExternalUses)
%13:i64 = var
%14:i64 = var
%15 = phi %1, %13, %13, %14
%16 = shl %15, 15:i64
%17 = and %16, 4294934528:i64 (hasExternalUses)
%18:i64 = var
%19:i64 = var
%20 = phi %7, %18, %19
%21 = phi %1, %18, %20, %20
%22 = and %21, 4294967295:i64 (hasExternalUses)
%23 = mul %17, %22
%24 = add %12, %23 (hasExternalUses)
%25:i64 = var
%26:i64 = var
%27 = or %25, %26
%28:i64 = var
%29:i64 = var
%30 = or %28, %29
%31 = phi %1, %27, %27, %30
%32 = and %31, 4294967295:i64 (hasExternalUses)
%33:i64 = var
%34 = mul %32, %33
%35 = add %24, %34 (hasExternalUses)
%36:i64 = var
%37 = add %35, %36 (hasExternalUses)
%38:i64 = var
%39 = add %37, %38 (hasExternalUses)
%40 = add %0, %39 (hasExternalUses)
%41 = shl %40, 1:i64
%42:i32 = var
blockpc %7 0 %42 1:i1
%43:i32 = var
blockpc %7 1 %43 1:i1
%44:i32 = var
pc %44 1:i1
infer %41


; start LHS (in $7)
%0 = block 3
%1:i64 = var
%2:i64 = var
%3 = or %1, %2
%4:i64 = var
%5:i64 = var
%6 = or %4, %5
%7 = phi %0, %3, %3, %6
%8 = and %7, 4294967295:i64 (hasExternalUses)
%9:i64 = var
%10 = block 2
%11:i64 = var
%12 = phi %10, %9, %11
%13 = phi %0, %9, %12, %12
%14 = and %13, 4294967295:i64 (hasExternalUses)
%15 = mul %8, %14 (hasExternalUses)
%16:i64 = var
%17:i64 = var
%18 = phi %0, %16, %16, %17
%19 = shl %18, 15:i64
%20 = and %19, 4294934528:i64 (hasExternalUses)
%21:i64 = var
%22:i64 = var
%23 = or %21, %22
%24:i64 = var
%25 = phi %10, %23, %24
%26 = phi %0, %23, %25, %25
%27 = and %26, 4294967295:i64 (hasExternalUses)
%28 = mul %20, %27
%29 = add %15, %28 (hasExternalUses)
%30 = shl %29, 32:i64 (hasExternalUses)
%31:i64 = var
%32 = add %30, %31 (hasExternalUses)
%33 = lshr %32, 63:i64
%34:i64 = var
%35 = or %33, %34
%36:i32 = var
blockpc %10 0 %36 1:i1
%37:i32 = var
blockpc %10 1 %37 1:i1
%38:i32 = var
pc %38 1:i1
infer %35


; start LHS (in $7)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 32767:i32 (hasExternalUses)
%4 = add %1, %3
%5 = block 3
%6 = block 2
%7:i32 = var
%8 = sub 16:i32, %7
%9 = phi %6, 0:i32, %8
%10:i32 = var
%11 = sub 16:i32, %10
%12 = add %11, %9
%13 = phi %5, 0:i32, %9, %12
%14 = add %4, %13
%15 = add %14, -16383:i32 (hasExternalUses)
%16 = add %15, 1:i32
%17:i64 = var
%18 = and %17, 9223372036854775807:i64
%19 = ule %18, 281474976710655:i64
blockpc %6 0 %19 1:i1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %6 1 %21 1:i1
infer %16


; start LHS (in $7)
%0 = block 2
%1:i32 = var
%2 = and %1, 32767:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, 32767:i32 (hasExternalUses)
%5 = add %2, %4
%6 = block 3
%7 = block 2
%8:i32 = var
%9 = sub 16:i32, %8
%10 = phi %7, 0:i32, %9
%11:i32 = var
%12 = sub 16:i32, %11
%13 = add %12, %10
%14 = phi %6, 0:i32, %10, %13
%15 = add %5, %14
%16 = add %15, -16383:i32 (hasExternalUses)
%17 = add %16, 1:i32 (hasExternalUses)
%18 = phi %0, %16, %17
%19 = sle 32767:i32, %18
%20:i64 = var
%21 = and %20, 9223372036854775807:i64
%22 = ule %21, 281474976710655:i64
blockpc %7 0 %22 1:i1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %7 1 %24 1:i1
infer %19


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3 = and %2, -9223372036854775808:i64 (hasExternalUses)
%4 = or %3, 9223090561878065152:i64
%5 = block 2
%6:i32 = var
%7 = and %6, 32767:i32
%8:i32 = var
%9 = and %8, 32767:i32
%10 = add %7, %9
%11 = block 3
%12 = block 2
%13 = and %1, 9223372036854775807:i64
%14 = ule %13, 281474976710655:i64
blockpc %12 0 %14 1:i1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1:i1
%17:i32 = var
%18 = sub 16:i32, %17
%19 = phi %12, 0:i32, %18
%20:i32 = var
%21 = sub 16:i32, %20
%22 = add %21, %19
%23 = phi %11, 0:i32, %19, %22
%24 = add %10, %23
%25 = add %24, -16383:i32
%26 = add %25, 1:i32
%27 = phi %5, %25, %26
%28 = sle 32767:i32, %27
pc %28 1:i1
infer %4


; start LHS (in $7)
%0:i64 = var
%1 = shl %0, 48:i64
infer %1


; start LHS (in $7)
%0 = block 2
%1:i64 = var
%2:i64 = var
%3 = add %1, %2
%4:i64 = var
%5:i64 = var
%6 = or %4, %5
%7 = add %3, %6
%8:i64 = var
%9 = add %7, %8
%10:i64 = var
%11 = add %9, %10
%12:i64 = var
%13 = add %11, %12 (hasExternalUses)
%14 = shl %13, 1:i64
%15:i64 = var
%16:i64 = var
%17 = add %15, %16 (hasExternalUses)
%18:i64 = var
%19:i64 = var
%20 = add %18, %19
%21 = add %17, %20 (hasExternalUses)
%22:i64 = var
%23:i64 = var
%24 = add %22, %23 (hasExternalUses)
%25 = shl %24, 32:i64
%26 = add %21, %25 (hasExternalUses)
%27:i64 = var
%28:i64 = var
%29 = add %27, %28 (hasExternalUses)
%30 = lshr %29, 32:i64
%31:i64 = var
%32 = or %30, %31
%33 = add %26, %32 (hasExternalUses)
%34:i64 = var
%35 = add %33, %34 (hasExternalUses)
%36 = lshr %35, 63:i64
%37 = or %14, %36 (hasExternalUses)
%38 = phi %0, %37, %13
%39 = and %38, 281474976710655:i64
infer %39


; start LHS (in $7)
%0 = block 2
%1:i32 = var
%2 = and %1, 32767:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, 32767:i32 (hasExternalUses)
%5 = add %2, %4
%6 = block 3
%7 = block 2
%8:i32 = var
%9 = sub 16:i32, %8
%10 = phi %7, 0:i32, %9
%11:i32 = var
%12 = sub 16:i32, %11
%13 = add %12, %10
%14 = phi %6, 0:i32, %10, %13
%15 = add %5, %14
%16 = add %15, -16383:i32 (hasExternalUses)
%17 = add %16, 1:i32 (hasExternalUses)
%18 = phi %0, %16, %17
%19 = slt 0:i32, %18
%20:i64 = var
%21 = and %20, 9223372036854775807:i64
%22 = ule %21, 281474976710655:i64
blockpc %7 0 %22 1:i1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %7 1 %24 1:i1
infer %19


; start LHS (in $7)
%0:i64 = var
%1 = shl %0, 48:i64
%2 = block 2
%3:i64 = var
%4:i64 = var
%5 = add %3, %4
%6:i64 = var
%7 = add %5, %6
%8:i64 = var
%9 = add %7, %8
%10:i64 = var
%11 = add %9, %10 (hasExternalUses)
%12 = shl %11, 1:i64
%13:i64 = var
%14:i64 = var
%15 = add %13, %14 (hasExternalUses)
%16:i64 = var
%17 = shl %16, 32:i64
%18 = add %15, %17 (hasExternalUses)
%19:i64 = var
%20 = lshr %19, 32:i64
%21:i64 = var
%22 = shl %21, 32:i64
%23 = or %20, %22
%24 = add %18, %23 (hasExternalUses)
%25:i64 = var
%26:i64 = var
%27 = add %25, %26
%28 = add %24, %27 (hasExternalUses)
%29 = lshr %28, 63:i64
%30 = or %12, %29 (hasExternalUses)
%31 = phi %2, %30, %11
%32 = and %31, 281474976710655:i64
%33 = or %1, %32
infer %33


; start LHS (in $7)
%0 = block 2
%1:i32 = var
%2 = and %1, 32767:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, 32767:i32 (hasExternalUses)
%5 = add %2, %4
%6 = block 3
%7 = block 2
%8:i32 = var
%9 = sub 16:i32, %8
%10 = phi %7, 0:i32, %9
%11:i32 = var
%12 = sub 16:i32, %11
%13 = add %12, %10
%14 = phi %6, 0:i32, %10, %13
%15 = add %5, %14
%16 = add %15, -16383:i32 (hasExternalUses)
%17 = add %16, 1:i32 (hasExternalUses)
%18 = phi %0, %16, %17
%19 = sub 1:i32, %18
%20:i64 = var
%21 = and %20, 9223372036854775807:i64
%22 = ule %21, 281474976710655:i64
blockpc %7 0 %22 1:i1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %7 1 %24 1:i1
infer %19


; start LHS (in $7)
%0 = block 2
%1:i32 = var
%2 = and %1, 32767:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, 32767:i32 (hasExternalUses)
%5 = add %2, %4
%6 = block 3
%7 = block 2
%8:i32 = var
%9 = sub 16:i32, %8
%10 = phi %7, 0:i32, %9
%11:i32 = var
%12 = sub 16:i32, %11
%13 = add %12, %10
%14 = phi %6, 0:i32, %10, %13
%15 = add %5, %14
%16 = add %15, -16383:i32 (hasExternalUses)
%17 = add %16, 1:i32 (hasExternalUses)
%18 = phi %0, %16, %17
%19 = sub 1:i32, %18 (hasExternalUses)
%20 = ult 127:i32, %19
%21:i64 = var
%22 = and %21, 9223372036854775807:i64
%23 = ule %22, 281474976710655:i64
blockpc %7 0 %23 1:i1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %7 1 %25 1:i1
infer %20


; start LHS (in $7)
%0:i32 = var
%1 = sub %0, 96:i32 (hasExternalUses)
%2 = add %1, 32:i32
infer %2


; start LHS (in $7)
%0:i32 = var
%1 = sub %0, 96:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; start LHS (in $7)
%0 = block 2
%1:i32 = var
%2 = and %1, 32767:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, 32767:i32 (hasExternalUses)
%5 = add %2, %4
%6 = block 3
%7 = block 2
%8:i32 = var
%9 = sub 16:i32, %8
%10 = phi %7, 0:i32, %9
%11:i32 = var
%12 = sub 16:i32, %11
%13 = add %12, %10
%14 = phi %6, 0:i32, %10, %13
%15 = add %5, %14
%16 = add %15, -16383:i32 (hasExternalUses)
%17 = add %16, 1:i32 (hasExternalUses)
%18 = phi %0, %16, %17
%19 = sub 1:i32, %18 (hasExternalUses)
%20 = sub 128:i32, %19
%21:i64 = var
%22 = and %21, 9223372036854775807:i64
%23 = ule %22, 281474976710655:i64
blockpc %7 0 %23 1:i1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %7 1 %25 1:i1
infer %20


; start LHS (in $7)
%0:i32 = var
%1 = sub %0, 96:i32 (hasExternalUses)
%2 = add %1, 48:i32
infer %2


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
infer %2


; start LHS (in $7)
%0:i32 = var
%1 = sub %0, 96:i32 (hasExternalUses)
%2 = add %1, 56:i32
infer %2


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
infer %2


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
%3 = ne %2, 0:i64
infer %3


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
%3:i64 = var
%4 = or %2, %3
infer %4


; start LHS (in $7)
%0:i32 = var
%1 = sub %0, 96:i32 (hasExternalUses)
%2 = add %1, 24:i32
infer %2


; start LHS (in $7)
%0:i32 = var
%1 = sub %0, 96:i32 (hasExternalUses)
%2 = add %1, 40:i32
infer %2


; start LHS (in $7)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
infer %2


; start LHS (in $7)
%0:i32 = var
%1 = sub %0, 96:i32 (hasExternalUses)
%2 = add %1, 8:i32
infer %2


; start LHS (in $7)
%0 = block 2
%1:i64 = var
%2 = shl %1, 48:i64
%3 = block 2
%4:i64 = var
%5:i64 = var
%6 = add %4, %5
%7:i64 = var
%8 = add %6, %7 (hasExternalUses)
%9 = shl %8, 1:i64
%10:i64 = var
%11:i64 = var
%12 = add %10, %11 (hasExternalUses)
%13:i64 = var
%14:i64 = var
%15 = add %13, %14
%16 = add %12, %15 (hasExternalUses)
%17 = lshr %16, 63:i64
%18 = or %9, %17 (hasExternalUses)
%19 = phi %3, %18, %8
%20 = and %19, 281474976710655:i64
%21 = or %2, %20
%22:i64 = var
%23 = phi %0, %21, %22
%24:i64 = var
%25:i64 = var
%26 = xor %24, %25
%27 = and %26, -9223372036854775808:i64 (hasExternalUses)
%28 = or %23, %27
infer %28


; start LHS (in $7)
%0 = block 2
%1 = block 2
%2 = block 3
%3:i64 = var
%4:i64 = var
%5 = phi %2, %3, %3, %4
%6 = and %5, 4294967295:i64 (hasExternalUses)
%7:i64 = var
%8 = block 2
%9:i64 = var
%10 = phi %8, %7, %9
%11 = phi %2, %7, %10, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13 = mul %6, %12 (hasExternalUses)
%14:i64 = var
%15 = and %14, 4294934528:i64 (hasExternalUses)
%16:i64 = var
%17:i64 = var
%18 = phi %8, %16, %17
%19 = phi %2, %16, %18, %18
%20 = and %19, 4294967295:i64 (hasExternalUses)
%21 = mul %15, %20
%22 = add %13, %21 (hasExternalUses)
%23 = shl %22, 32:i64 (hasExternalUses)
%24 = mul %15, %12
%25 = add %23, %24 (hasExternalUses)
%26 = shl %25, 1:i64 (hasExternalUses)
%27 = phi %1, %26, %25
%28:i64 = var
%29:i64 = var
%30 = or %28, %29
%31:i64 = var
%32 = or %30, %31 (hasExternalUses)
%33 = phi %0, %27, %32
%34 = eq %33, 0:i64
%35:i32 = var
blockpc %8 0 %35 1:i1
%36:i32 = var
blockpc %8 1 %36 1:i1
infer %34


; start LHS (in $7)
%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = var
%4 = mul %2, %3 (hasExternalUses)
%5:i64 = var
%6:i64 = var
%7 = mul %5, %6
%8 = add %4, %7 (hasExternalUses)
%9 = shl %8, 32:i64 (hasExternalUses)
%10 = mul %5, %3
%11 = add %9, %10 (hasExternalUses)
%12 = lshr %11, 63:i64
%13:i64 = var
%14:i64 = var
%15:i64 = var
%16 = add %14, %15 (hasExternalUses)
%17:i64 = var
%18:i64 = var
%19 = or %17, %18
%20 = add %16, %19 (hasExternalUses)
%21:i64 = var
%22:i64 = var
%23 = add %21, %22 (hasExternalUses)
%24 = shl %23, 32:i64
%25 = add %20, %24 (hasExternalUses)
%26 = add %13, %25 (hasExternalUses)
%27 = shl %26, 1:i64
%28 = or %12, %27 (hasExternalUses)
%29 = phi %1, %28, %26
%30:i64 = var
%31 = phi %0, %29, %30
%32 = slt -1:i64, %31
infer %32


; start LHS (in $7)
%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = var
%4 = mul %2, %3 (hasExternalUses)
%5:i64 = var
%6:i64 = var
%7 = mul %5, %6
%8 = add %4, %7 (hasExternalUses)
%9 = shl %8, 32:i64 (hasExternalUses)
%10 = mul %5, %3
%11 = add %9, %10 (hasExternalUses)
%12 = lshr %11, 63:i64
%13:i64 = var
%14:i64 = var
%15:i64 = var
%16 = add %14, %15 (hasExternalUses)
%17:i64 = var
%18:i64 = var
%19 = or %17, %18
%20 = add %16, %19 (hasExternalUses)
%21:i64 = var
%22:i64 = var
%23 = add %21, %22 (hasExternalUses)
%24 = shl %23, 32:i64
%25 = add %20, %24 (hasExternalUses)
%26 = add %13, %25 (hasExternalUses)
%27 = shl %26, 1:i64
%28 = or %12, %27 (hasExternalUses)
%29 = phi %1, %28, %26
%30:i64 = var
%31 = phi %0, %29, %30
%32 = eq %31, -9223372036854775808:i64
infer %32


; start LHS (in $7)
%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = var
%4 = add %2, %3 (hasExternalUses)
%5 = shl %4, 32:i64 (hasExternalUses)
%6:i64 = var
%7 = and %6, 4294934528:i64 (hasExternalUses)
%8 = block 3
%9:i64 = var
%10 = block 2
%11:i64 = var
%12 = phi %10, %9, %11
%13 = phi %8, %9, %12, %12
%14 = and %13, 4294967295:i64 (hasExternalUses)
%15 = mul %7, %14
%16 = add %5, %15 (hasExternalUses)
%17 = lshr %16, 63:i64
%18:i64 = var
%19:i64 = var
%20:i64 = var
%21 = add %19, %20 (hasExternalUses)
%22:i64 = var
%23 = shl %22, 32:i64
%24 = add %21, %23 (hasExternalUses)
%25 = add %18, %24 (hasExternalUses)
%26 = shl %25, 1:i64
%27 = or %17, %26 (hasExternalUses)
%28 = phi %1, %27, %25
%29:i64 = var
%30:i64 = var
%31 = or %29, %30 (hasExternalUses)
%32 = phi %0, %28, %31
%33 = eq %32, -9223372036854775808:i64
%34:i32 = var
%35:i32 = zext %34
%36:i32 = var
%37:i32 = zext %36
%38 = select %33, %35, %37
%39:i32 = var
blockpc %10 0 %39 1:i1
%40:i32 = var
blockpc %10 1 %40 1:i1
infer %38


; start LHS (in $7)
%0 = block 2
%1 = block 2
%2:i64 = var
%3 = shl %2, 32:i64 (hasExternalUses)
%4:i64 = var
%5:i64 = var
%6 = mul %4, %5
%7 = add %3, %6 (hasExternalUses)
%8 = lshr %7, 63:i64
%9:i64 = var
%10:i64 = var
%11:i64 = var
%12 = add %10, %11 (hasExternalUses)
%13 = add %9, %12 (hasExternalUses)
%14 = shl %13, 1:i64
%15 = or %8, %14 (hasExternalUses)
%16 = phi %1, %15, %13
%17:i64 = var
%18:i64 = var
%19 = or %17, %18 (hasExternalUses)
%20 = phi %0, %16, %19
%21 = eq %20, -9223372036854775808:i64
%22 = shl %7, 1:i64 (hasExternalUses)
%23 = phi %1, %22, %7
%24:i64 = var
%25:i64 = var
%26 = or %24, %25
%27:i64 = var
%28 = or %26, %27 (hasExternalUses)
%29 = phi %0, %23, %28
%30 = eq %29, 0:i64
%31:i32 = zext %30
%32:i32 = var
%33:i32 = zext %32
%34 = select %21, %31, %33
%35 = eq %34, 0:i32
infer %35


; start LHS (in $7)
%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = var
%4:i64 = var
%5 = add %3, %4 (hasExternalUses)
%6:i64 = var
%7:i64 = var
%8 = or %6, %7
%9 = add %5, %8 (hasExternalUses)
%10:i64 = var
%11:i64 = var
%12 = add %10, %11 (hasExternalUses)
%13 = shl %12, 32:i64
%14 = add %9, %13 (hasExternalUses)
%15 = add %2, %14 (hasExternalUses)
%16 = lshr %15, 63:i64
%17:i64 = var
%18:i64 = var
%19 = add %17, %18 (hasExternalUses)
%20:i64 = var
%21 = shl %20, 32:i64
%22 = add %19, %21 (hasExternalUses)
%23 = lshr %12, 32:i64
%24:i64 = var
%25 = shl %24, 32:i64
%26 = or %23, %25
%27 = add %22, %26 (hasExternalUses)
%28:i64 = var
%29:i64 = var
%30 = add %28, %29
%31 = add %27, %30 (hasExternalUses)
%32 = shl %31, 1:i64
%33 = or %16, %32 (hasExternalUses)
%34 = phi %1, %33, %31
%35:i64 = var
%36 = phi %0, %34, %35
%37 = add %36, 1:i64
%38:i32 = var
pc %38 1:i1
infer %37


; start LHS (in $7)
%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = var
%4:i64 = var
%5 = add %3, %4 (hasExternalUses)
%6:i64 = var
%7 = shl %6, 32:i64
%8 = add %5, %7 (hasExternalUses)
%9 = add %2, %8 (hasExternalUses)
%10 = lshr %9, 63:i64
%11:i64 = var
%12:i64 = var
%13 = add %11, %12 (hasExternalUses)
%14:i64 = var
%15:i64 = var
%16 = or %14, %15
%17 = add %13, %16 (hasExternalUses)
%18:i64 = var
%19:i64 = var
%20 = add %18, %19
%21 = add %17, %20 (hasExternalUses)
%22 = shl %21, 1:i64
%23 = or %10, %22 (hasExternalUses)
%24 = phi %1, %23, %21
%25:i64 = var
%26 = phi %0, %24, %25
%27 = add %26, 1:i64 (hasExternalUses)
%28 = ult %27, %26
%29:i64 = var
%30 = shl %29, 32:i64
%31:i64 = var
%32 = add %30, %31
%33 = lshr %32, 63:i64
%34:i64 = var
%35 = or %33, %34
%36 = phi %1, %35, %9
%37:i64 = var
%38 = phi %0, %36, %37
%39 = eq %38, -9223372036854775808:i64
%40:i32 = var
%41:i32 = zext %40
%42:i32 = var
%43:i32 = zext %42
%44 = select %39, %41, %43
%45 = eq %44, 0:i32
pc %45 1:i1
infer %28


; start LHS (in $7)
%0 = block 2
%1:i64 = var
%2 = shl %1, 48:i64
%3 = block 2
%4:i64 = var
%5:i64 = var
%6 = add %4, %5 (hasExternalUses)
%7 = shl %6, 1:i64
%8:i64 = var
%9:i64 = var
%10 = add %8, %9 (hasExternalUses)
%11 = lshr %10, 63:i64
%12 = or %7, %11 (hasExternalUses)
%13 = phi %3, %12, %6
%14 = and %13, 281474976710655:i64
%15 = or %2, %14
%16:i64 = var
%17 = phi %0, %15, %16
%18:i64 = var
%19:i64 = var
%20 = xor %18, %19
%21 = and %20, -9223372036854775808:i64 (hasExternalUses)
%22 = or %17, %21 (hasExternalUses)
%23:i64 = var
%24 = add %22, %23
%25:i64 = var
%26 = shl %25, 32:i64
%27:i64 = var
%28:i64 = var
%29 = mul %27, %28
%30 = add %26, %29
%31 = lshr %30, 63:i64
%32:i64 = var
%33 = or %31, %32
%34:i64 = var
%35 = phi %3, %33, %34
%36:i64 = var
%37 = phi %0, %35, %36
%38 = eq %37, -9223372036854775808:i64
%39:i32 = var
%40:i32 = zext %39
%41:i32 = var
%42:i32 = zext %41
%43 = select %38, %40, %42
%44 = eq %43, 0:i32
pc %44 1:i1
infer %24


; start LHS (in $7)
%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = var
%4 = mul %2, %3 (hasExternalUses)
%5:i64 = var
%6:i64 = var
%7 = mul %5, %6
%8 = add %4, %7 (hasExternalUses)
%9 = shl %8, 32:i64 (hasExternalUses)
%10 = mul %5, %3
%11 = add %9, %10 (hasExternalUses)
%12 = lshr %11, 63:i64
%13:i64 = var
%14:i64 = var
%15:i64 = var
%16 = add %14, %15 (hasExternalUses)
%17:i64 = var
%18:i64 = var
%19 = or %17, %18
%20 = add %16, %19 (hasExternalUses)
%21:i64 = var
%22:i64 = var
%23 = add %21, %22 (hasExternalUses)
%24 = shl %23, 32:i64
%25 = add %20, %24 (hasExternalUses)
%26 = add %13, %25 (hasExternalUses)
%27 = shl %26, 1:i64
%28 = or %12, %27 (hasExternalUses)
%29 = phi %1, %28, %26
%30:i64 = var
%31 = phi %0, %29, %30
%32 = xor %31, -9223372036854775808:i64
infer %32


; start LHS (in $7)
%0 = block 2
%1 = block 2
%2 = block 3
%3:i64 = var
%4:i64 = var
%5 = phi %2, %3, %3, %4
%6 = and %5, 4294967295:i64 (hasExternalUses)
%7:i64 = var
%8 = block 2
%9:i64 = var
%10 = phi %8, %7, %9
%11 = phi %2, %7, %10, %10
%12 = and %11, 4294967295:i64 (hasExternalUses)
%13 = mul %6, %12 (hasExternalUses)
%14:i64 = var
%15 = and %14, 4294934528:i64 (hasExternalUses)
%16:i64 = var
%17:i64 = var
%18 = phi %8, %16, %17
%19 = phi %2, %16, %18, %18
%20 = and %19, 4294967295:i64 (hasExternalUses)
%21 = mul %15, %20
%22 = add %13, %21 (hasExternalUses)
%23 = shl %22, 32:i64 (hasExternalUses)
%24 = mul %15, %12
%25 = add %23, %24 (hasExternalUses)
%26 = shl %25, 1:i64 (hasExternalUses)
%27 = phi %1, %26, %25
%28:i64 = var
%29:i64 = var
%30 = or %28, %29
%31:i64 = var
%32 = or %30, %31 (hasExternalUses)
%33 = phi %0, %27, %32
%34:i64 = var
%35 = or %33, %34
%36:i32 = var
blockpc %8 0 %36 1:i1
%37:i32 = var
blockpc %8 1 %37 1:i1
infer %35


; start LHS (in $7)
%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = var
%4 = mul %2, %3 (hasExternalUses)
%5:i64 = var
%6:i64 = var
%7 = mul %5, %6
%8 = add %4, %7 (hasExternalUses)
%9 = shl %8, 32:i64 (hasExternalUses)
%10 = mul %5, %3
%11 = add %9, %10 (hasExternalUses)
%12 = shl %11, 1:i64 (hasExternalUses)
%13 = phi %1, %12, %11
%14:i64 = var
%15:i64 = var
%16 = or %14, %15
%17:i64 = var
%18 = or %16, %17 (hasExternalUses)
%19 = phi %0, %13, %18
%20 = lshr %11, 63:i64
%21:i64 = var
%22:i64 = var
%23:i64 = var
%24 = add %22, %23 (hasExternalUses)
%25 = add %21, %24 (hasExternalUses)
%26 = shl %25, 1:i64
%27 = or %20, %26 (hasExternalUses)
%28 = phi %1, %27, %25
%29:i64 = var
%30:i64 = var
%31 = or %29, %30 (hasExternalUses)
%32 = phi %0, %28, %31
%33 = xor %32, -9223372036854775808:i64
%34 = or %19, %33
%35 = eq %34, 0:i64
infer %35


; start LHS (in $7)
%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = var
%4:i64 = var
%5 = add %3, %4 (hasExternalUses)
%6:i64 = var
%7:i64 = var
%8 = or %6, %7
%9 = add %5, %8 (hasExternalUses)
%10:i64 = var
%11:i64 = var
%12 = add %10, %11 (hasExternalUses)
%13 = shl %12, 32:i64
%14 = add %9, %13 (hasExternalUses)
%15 = add %2, %14 (hasExternalUses)
%16 = lshr %15, 63:i64
%17:i64 = var
%18:i64 = var
%19 = add %17, %18 (hasExternalUses)
%20:i64 = var
%21 = shl %20, 32:i64
%22 = add %19, %21 (hasExternalUses)
%23 = lshr %12, 32:i64
%24:i64 = var
%25 = shl %24, 32:i64
%26 = or %23, %25
%27 = add %22, %26 (hasExternalUses)
%28:i64 = var
%29:i64 = var
%30 = add %28, %29
%31 = add %27, %30 (hasExternalUses)
%32 = shl %31, 1:i64
%33 = or %16, %32 (hasExternalUses)
%34 = phi %1, %33, %31
%35:i64 = var
%36 = phi %0, %34, %35
%37 = and %36, 1:i64
%38:i32 = var
pc %38 1:i1
infer %37


; start LHS (in $7)
%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = var
%4:i64 = var
%5 = add %3, %4 (hasExternalUses)
%6:i64 = var
%7:i64 = var
%8 = or %6, %7
%9 = add %5, %8 (hasExternalUses)
%10:i64 = var
%11:i64 = var
%12 = add %10, %11 (hasExternalUses)
%13 = shl %12, 32:i64
%14 = add %9, %13 (hasExternalUses)
%15 = add %2, %14 (hasExternalUses)
%16 = lshr %15, 63:i64
%17:i64 = var
%18:i64 = var
%19 = add %17, %18 (hasExternalUses)
%20:i64 = var
%21 = shl %20, 32:i64
%22 = add %19, %21 (hasExternalUses)
%23 = lshr %12, 32:i64
%24:i64 = var
%25 = shl %24, 32:i64
%26 = or %23, %25
%27 = add %22, %26 (hasExternalUses)
%28:i64 = var
%29:i64 = var
%30 = add %28, %29
%31 = add %27, %30 (hasExternalUses)
%32 = shl %31, 1:i64
%33 = or %16, %32 (hasExternalUses)
%34 = phi %1, %33, %31
%35:i64 = var
%36 = phi %0, %34, %35
%37:i64 = var
%38 = add %36, %37
%39:i32 = var
pc %39 1:i1
infer %38


; start LHS (in $7)
%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = var
%4:i64 = var
%5 = add %3, %4 (hasExternalUses)
%6:i64 = var
%7 = shl %6, 32:i64
%8 = add %5, %7 (hasExternalUses)
%9 = add %2, %8 (hasExternalUses)
%10 = lshr %9, 63:i64
%11:i64 = var
%12:i64 = var
%13 = add %11, %12 (hasExternalUses)
%14:i64 = var
%15:i64 = var
%16 = or %14, %15
%17 = add %13, %16 (hasExternalUses)
%18:i64 = var
%19:i64 = var
%20 = add %18, %19
%21 = add %17, %20 (hasExternalUses)
%22 = shl %21, 1:i64
%23 = or %10, %22 (hasExternalUses)
%24 = phi %1, %23, %21
%25:i64 = var
%26 = phi %0, %24, %25
%27 = and %26, 1:i64
%28 = add %26, %27 (hasExternalUses)
%29 = ult %28, %26
%30:i32 = var
pc %30 1:i1
infer %29


; start LHS (in $7)
%0 = block 2
%1:i64 = var
%2 = shl %1, 48:i64
%3 = block 2
%4:i64 = var
%5:i64 = var
%6 = add %4, %5 (hasExternalUses)
%7 = shl %6, 1:i64
%8:i64 = var
%9:i64 = var
%10 = add %8, %9 (hasExternalUses)
%11 = lshr %10, 63:i64
%12 = or %7, %11 (hasExternalUses)
%13 = phi %3, %12, %6
%14 = and %13, 281474976710655:i64
%15 = or %2, %14
%16:i64 = var
%17 = phi %0, %15, %16
%18:i64 = var
%19:i64 = var
%20 = xor %18, %19
%21 = and %20, -9223372036854775808:i64 (hasExternalUses)
%22 = or %17, %21 (hasExternalUses)
%23:i64 = var
%24 = add %22, %23
%25:i64 = var
%26:i64 = var
%27 = mul %25, %26
%28:i64 = var
%29:i64 = var
%30 = mul %28, %29
%31 = add %27, %30
%32 = shl %31, 32:i64
%33:i64 = var
%34 = add %32, %33
%35 = shl %34, 1:i64
%36 = phi %3, %35, %34
%37:i64 = var
%38 = phi %0, %36, %37
%39:i64 = var
%40 = or %38, %39
%41 = eq %40, 0:i64
pc %41 1:i1
infer %24


; start LHS (in $7)
%0:i32 = var
%1 = sub %0, 96:i32 (hasExternalUses)
%2 = add %1, 96:i32
infer %2


; function: $8

; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32
infer %1


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64
infer %1


; start LHS (in $8)
%0:i64 = var
%1 = add %0, -1:i64
infer %1


; start LHS (in $8)
%0:i64 = var
%1 = add %0, -1:i64 (hasExternalUses)
%2 = ult %1, %0
infer %2


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = add %1, %2
infer %3


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = add %1, %2
%4 = add %3, -1:i64
infer %4


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64
infer %1


; start LHS (in $8)
%0:i64 = var
%1 = add %0, -1:i64 (hasExternalUses)
%2 = eq %1, -1:i64
infer %2


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = add %1, %2
%4 = add %3, -1:i64 (hasExternalUses)
%5 = ult 9223090561878065151:i64, %4
infer %5


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = add %1, %2
%4 = add %3, -1:i64 (hasExternalUses)
%5 = eq %4, 9223090561878065151:i64
infer %5


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = add %1, %2
%4 = add %3, -1:i64
%5 = eq %4, 9223090561878065151:i64
%6:i64 = var
%7 = add %6, -1:i64 (hasExternalUses)
%8 = eq %7, -1:i64
%9:i32 = zext %8
%10 = ult 9223090561878065151:i64, %4
%11:i32 = zext %10
%12 = select %5, %9, %11
infer %12


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = add %1, %2
%4 = add %3, -1:i64
%5 = eq %4, 9223090561878065151:i64
%6:i64 = var
%7 = add %6, -1:i64 (hasExternalUses)
%8 = eq %7, -1:i64
%9:i32 = zext %8
%10 = ult 9223090561878065151:i64, %4
%11:i32 = zext %10
%12 = select %5, %9, %11
%13 = eq %12, 0:i32
infer %13


; start LHS (in $8)
%0:i64 = var
%1 = add %0, -1:i64
%2:i64 = var
%3 = and %2, 9223372036854775807:i64
%4:i64 = var
%5 = add %3, %4
%6 = add %5, -1:i64
%7 = eq %6, 9223090561878065151:i64
%8:i64 = var
%9 = add %8, -1:i64
%10 = eq %9, -1:i64
%11:i32 = zext %10
%12 = ult 9223090561878065151:i64, %6
%13:i32 = zext %12
%14 = select %7, %11, %13
%15 = eq %14, 0:i32
pc %15 1:i1
infer %1


; start LHS (in $8)
%0:i64 = var
%1 = add %0, -1:i64 (hasExternalUses)
%2 = ult %1, %0
%3:i64 = var
%4 = and %3, 9223372036854775807:i64
%5:i64 = var
%6 = add %4, %5
%7 = add %6, -1:i64
%8 = eq %7, 9223090561878065151:i64
%9:i64 = var
%10 = add %9, -1:i64
%11 = eq %10, -1:i64
%12:i32 = zext %11
%13 = ult 9223090561878065151:i64, %7
%14:i32 = zext %13
%15 = select %8, %12, %14
%16 = eq %15, 0:i32
pc %16 1:i1
infer %2


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = add %1, %2
%4:i64 = var
%5 = and %4, 9223372036854775807:i64
%6:i64 = var
%7 = add %5, %6
%8 = add %7, -1:i64
%9 = eq %8, 9223090561878065151:i64
%10:i64 = var
%11 = add %10, -1:i64
%12 = eq %11, -1:i64
%13:i32 = zext %12
%14 = ult 9223090561878065151:i64, %8
%15:i32 = zext %14
%16 = select %9, %13, %15
%17 = eq %16, 0:i32
pc %17 1:i1
infer %3


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = add %1, %2
%4 = add %3, -1:i64
%5:i64 = var
%6 = and %5, 9223372036854775807:i64
%7:i64 = var
%8 = add %6, %7
%9 = add %8, -1:i64
%10 = eq %9, 9223090561878065151:i64
%11:i64 = var
%12 = add %11, -1:i64
%13 = eq %12, -1:i64
%14:i32 = zext %13
%15 = ult 9223090561878065151:i64, %9
%16:i32 = zext %15
%17 = select %10, %14, %16
%18 = eq %17, 0:i32
pc %18 1:i1
infer %4


; start LHS (in $8)
%0:i64 = var
%1 = add %0, -1:i64 (hasExternalUses)
%2 = ne %1, -1:i64
%3:i64 = var
%4 = and %3, 9223372036854775807:i64
%5:i64 = var
%6 = add %4, %5
%7 = add %6, -1:i64
%8 = eq %7, 9223090561878065151:i64
%9:i64 = var
%10 = add %9, -1:i64
%11 = eq %10, -1:i64
%12:i32 = zext %11
%13 = ult 9223090561878065151:i64, %7
%14:i32 = zext %13
%15 = select %8, %12, %14
%16 = eq %15, 0:i32
pc %16 1:i1
infer %2


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = add %1, %2
%4 = add %3, -1:i64 (hasExternalUses)
%5 = ult %4, 9223090561878065151:i64
%6:i64 = var
%7 = and %6, 9223372036854775807:i64
%8:i64 = var
%9 = add %7, %8
%10 = add %9, -1:i64
%11 = eq %10, 9223090561878065151:i64
%12:i64 = var
%13 = add %12, -1:i64
%14 = eq %13, -1:i64
%15:i32 = zext %14
%16 = ult 9223090561878065151:i64, %10
%17:i32 = zext %16
%18 = select %11, %15, %17
%19 = eq %18, 0:i32
pc %19 1:i1
infer %5


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = add %1, %2
%4 = add %3, -1:i64 (hasExternalUses)
%5 = eq %4, 9223090561878065151:i64
%6:i64 = var
%7 = and %6, 9223372036854775807:i64
%8:i64 = var
%9 = add %7, %8
%10 = add %9, -1:i64
%11 = eq %10, 9223090561878065151:i64
%12:i64 = var
%13 = add %12, -1:i64
%14 = eq %13, -1:i64
%15:i32 = zext %14
%16 = ult 9223090561878065151:i64, %10
%17:i32 = zext %16
%18 = select %11, %15, %17
%19 = eq %18, 0:i32
pc %19 1:i1
infer %5


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = add %1, %2
%4 = add %3, -1:i64
%5 = eq %4, 9223090561878065151:i64
%6:i64 = var
%7 = add %6, -1:i64 (hasExternalUses)
%8 = ne %7, -1:i64
%9:i32 = zext %8
%10 = ult %4, 9223090561878065151:i64
%11:i32 = zext %10
%12 = select %5, %9, %11
%13:i64 = var
%14 = and %13, 9223372036854775807:i64
%15:i64 = var
%16 = add %14, %15
%17 = add %16, -1:i64
%18 = eq %17, 9223090561878065151:i64
%19:i64 = var
%20 = add %19, -1:i64
%21 = eq %20, -1:i64
%22:i32 = zext %21
%23 = ult 9223090561878065151:i64, %17
%24:i32 = zext %23
%25 = select %18, %22, %24
%26 = eq %25, 0:i32
pc %26 1:i1
infer %12


; start LHS (in $8)
%0:i64 = var
%1 = eq %0, 0:i64
infer %1


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = ult %1, 9223090561878065152:i64
infer %2


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
infer %2


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = ult %1, 9223090561878065152:i64
%7:i32 = zext %6
%8 = select %2, %5, %7
infer %8


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = ult %1, 9223090561878065152:i64
%7:i32 = zext %6
%8 = select %2, %5, %7
%9 = eq %8, 0:i32
infer %9


; start LHS (in $8)
%0:i64 = var
%1 = or %0, 140737488355328:i64
%2 = and %0, 9223372036854775807:i64
%3 = eq %2, 9223090561878065152:i64
%4:i64 = var
%5 = eq %4, 0:i64
%6:i32 = zext %5
%7 = ult %2, 9223090561878065152:i64
%8:i32 = zext %7
%9 = select %3, %6, %8
%10 = eq %9, 0:i32
pc %10 1:i1
infer %1


; start LHS (in $8)
%0:i64 = var
%1 = eq %0, 0:i64
infer %1


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = ult %1, 9223090561878065152:i64
infer %2


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
infer %2


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = ult %1, 9223090561878065152:i64
%7:i32 = zext %6
%8 = select %2, %5, %7
infer %8


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = ult %1, 9223090561878065152:i64
%7:i32 = zext %6
%8 = select %2, %5, %7
%9 = eq %8, 0:i32
infer %9


; start LHS (in $8)
%0:i64 = var
%1 = or %0, 140737488355328:i64
%2 = and %0, 9223372036854775807:i64
%3 = eq %2, 9223090561878065152:i64
%4:i64 = var
%5 = eq %4, 0:i64
%6:i32 = zext %5
%7 = ult %2, 9223090561878065152:i64
%8:i32 = zext %7
%9 = select %3, %6, %8
%10 = eq %9, 0:i32
pc %10 1:i1
infer %1


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = xor %1, 9223090561878065152:i64
infer %2


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = xor %2, 9223090561878065152:i64
%4 = or %0, %3
infer %4


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = xor %2, 9223090561878065152:i64
%4 = or %0, %3
%5 = eq %4, 0:i64
infer %5


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3:i64 = var
%4 = and %3, 9223372036854775807:i64
%5 = xor %4, 9223090561878065152:i64
%6 = or %1, %5
%7 = eq %6, 0:i64
pc %7 1:i1
infer %2


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3:i64 = var
%4 = and %1, 9223372036854775807:i64
%5 = xor %4, 9223090561878065152:i64
%6 = or %3, %5
%7 = eq %6, 0:i64
pc %7 1:i1
infer %2


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3 = xor %2, -9223372036854775808:i64
%4:i64 = var
%5 = and %1, 9223372036854775807:i64
%6 = xor %5, 9223090561878065152:i64
%7 = or %4, %6
%8 = eq %7, 0:i64
pc %8 1:i1
infer %3


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3:i64 = var
%4:i64 = var
%5 = xor %3, %4
%6 = xor %5, -9223372036854775808:i64
%7 = or %2, %6
%8 = and %4, 9223372036854775807:i64
%9 = xor %8, 9223090561878065152:i64
%10 = or %1, %9
%11 = eq %10, 0:i64
pc %11 1:i1
infer %7


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3:i64 = var
%4:i64 = var
%5 = xor %3, %4
%6 = xor %5, -9223372036854775808:i64
%7 = or %2, %6
%8 = eq %7, 0:i64
%9 = and %4, 9223372036854775807:i64
%10 = xor %9, 9223090561878065152:i64
%11 = or %1, %10
%12 = eq %11, 0:i64
pc %12 1:i1
infer %8


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3:i64 = var
%4:i64 = var
%5 = xor %3, %4
%6 = xor %5, -9223372036854775808:i64
%7 = or %2, %6
%8 = eq %7, 0:i64 (hasExternalUses)
%9 = select %8, 9223231299366420480:i64, %4
%10 = and %4, 9223372036854775807:i64
%11 = xor %10, 9223090561878065152:i64
%12 = or %1, %11
%13 = eq %12, 0:i64
pc %13 1:i1
infer %9


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = xor %0, %1
%3:i64 = var
%4:i64 = var
%5 = xor %3, %4
%6 = xor %5, -9223372036854775808:i64
%7 = or %2, %6
%8 = eq %7, 0:i64 (hasExternalUses)
%9 = select %8, 0:i64, %1
%10 = and %4, 9223372036854775807:i64
%11 = xor %10, 9223090561878065152:i64
%12 = or %1, %11
%13 = eq %12, 0:i64
pc %13 1:i1
infer %9


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = xor %1, 9223090561878065152:i64
infer %2


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = xor %2, 9223090561878065152:i64
%4 = or %0, %3
infer %4


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = xor %2, 9223090561878065152:i64
%4 = or %0, %3
%5 = eq %4, 0:i64
infer %5


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
infer %3


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
%4 = ne %3, 0:i64
infer %4


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
%4:i64 = var
%5:i64 = var
%6 = and %5, 9223372036854775807:i64
%7 = or %4, %6
%8 = ne %7, 0:i64
pc %8 1:i1
infer %3


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
%4 = eq %3, 0:i64
%5:i64 = var
%6:i64 = var
%7 = and %6, 9223372036854775807:i64
%8 = or %5, %7
%9 = ne %8, 0:i64
pc %9 1:i1
infer %4


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i64 = var
%8:i64 = var
%9 = and %8, 9223372036854775807:i64
%10 = or %7, %9
%11 = ne %10, 0:i64
pc %11 1:i1
infer %6


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
infer %3


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = or %0, %2
%4 = ne %3, 0:i64
infer %4


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = and %0, %1
infer %2


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = and %0, %1
infer %2


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = ult %0, %1
infer %2


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = ult %1, %3
infer %4


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
infer %4


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10
infer %11


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32
infer %12


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32
%13 = select %12, %6, %5
infer %13


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32
infer %12


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32
%13 = select %12, %2, %0
infer %13


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32
infer %12


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32
%13 = select %12, %0, %2
infer %13


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %0, %2 (hasExternalUses)
%14 = and %13, 281474976710655:i64
infer %14


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %2, %0 (hasExternalUses)
%14 = lshr %13, 48:i64
infer %14


; start LHS (in $8)
%0:i32 = var
%1 = and %0, 32767:i32
infer %1


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %0, %2 (hasExternalUses)
%14 = lshr %13, 48:i64
infer %14


; start LHS (in $8)
%0:i32 = var
%1 = and %0, 32767:i32
infer %1


; start LHS (in $8)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = eq %1, 0:i32
infer %2


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 96:i32
%3:i32 = var
%4 = and %3, 32767:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %0, %2 (hasExternalUses)
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = eq %14, 0:i64
%16:i32 = var
%17 = and %16, 32767:i32
%18 = eq %17, 0:i32
pc %18 1:i1
infer %15


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %0, %2 (hasExternalUses)
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = eq %14, 0:i64 (hasExternalUses)
%16 = ne %11, 0:i32 (hasExternalUses)
%17 = select %16, %6, %5 (hasExternalUses)
%18 = select %15, %17, %14
%19:i32 = var
%20 = and %19, 32767:i32
%21 = eq %20, 0:i32
pc %21 1:i1
infer %18


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %0, %2 (hasExternalUses)
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = eq %14, 0:i64 (hasExternalUses)
%16 = ne %11, 0:i32 (hasExternalUses)
%17 = select %16, %6, %5 (hasExternalUses)
%18 = select %15, %17, %14
%19 = ctlz %18
%20:i32 = var
%21 = and %20, 32767:i32
%22 = eq %21, 0:i32
pc %22 1:i1
infer %19


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %0, %2 (hasExternalUses)
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = eq %14, 0:i64 (hasExternalUses)
%16:i32 = zext %15
%17 = shl %16, 6:i32
%18:i32 = var
%19 = and %18, 32767:i32
%20 = eq %19, 0:i32
pc %20 1:i1
infer %17


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = eq %0, %1
%3:i32 = var
%4:i32 = zext %3
%5:i32 = var
%6:i32 = zext %5
%7 = select %2, %4, %6 (hasExternalUses)
%8 = ne %7, 0:i32 (hasExternalUses)
%9:i64 = var
%10:i64 = var
%11 = select %8, %9, %10 (hasExternalUses)
%12 = and %11, 281474976710655:i64 (hasExternalUses)
%13 = eq %12, 0:i64 (hasExternalUses)
%14 = ne %7, 0:i32 (hasExternalUses)
%15:i64 = var
%16:i64 = var
%17 = select %14, %15, %16 (hasExternalUses)
%18 = select %13, %17, %12
%19 = ctlz %18
%20:i64 = var
%21 = add %19, %20
%22:i32 = var
%23 = and %22, 32767:i32
%24 = eq %23, 0:i32
pc %24 1:i1
infer %21


; start LHS (in $8)
%0:i32 = var
%1 = add %0, -15:i32
%2:i32 = var
%3 = and %2, 32767:i32
%4 = eq %3, 0:i32
pc %4 1:i1
infer %1


; start LHS (in $8)
%0:i32 = var
%1 = sub 16:i32, %0
%2:i32 = var
%3 = and %2, 32767:i32
%4 = eq %3, 0:i32
pc %4 1:i1
infer %1


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 104:i32
%3:i32 = var
%4 = and %3, 32767:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32
infer %12


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32
%13 = select %12, %5, %6
infer %13


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %2, %0 (hasExternalUses)
%14 = and %13, 281474976710655:i64
infer %14


; start LHS (in $8)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = eq %1, 0:i32
infer %2


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 80:i32
%3:i32 = var
%4 = and %3, 32767:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %2, %0 (hasExternalUses)
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = eq %14, 0:i64
%16:i32 = var
%17 = and %16, 32767:i32
%18 = eq %17, 0:i32
pc %18 1:i1
infer %15


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %2, %0 (hasExternalUses)
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = eq %14, 0:i64 (hasExternalUses)
%16 = ne %11, 0:i32 (hasExternalUses)
%17 = select %16, %5, %6 (hasExternalUses)
%18 = select %15, %17, %14
%19:i32 = var
%20 = and %19, 32767:i32
%21 = eq %20, 0:i32
pc %21 1:i1
infer %18


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %2, %0 (hasExternalUses)
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = eq %14, 0:i64 (hasExternalUses)
%16 = ne %11, 0:i32 (hasExternalUses)
%17 = select %16, %5, %6 (hasExternalUses)
%18 = select %15, %17, %14
%19 = ctlz %18
%20:i32 = var
%21 = and %20, 32767:i32
%22 = eq %21, 0:i32
pc %22 1:i1
infer %19


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %2, %0 (hasExternalUses)
%14 = and %13, 281474976710655:i64 (hasExternalUses)
%15 = eq %14, 0:i64 (hasExternalUses)
%16:i32 = zext %15
%17 = shl %16, 6:i32
%18:i32 = var
%19 = and %18, 32767:i32
%20 = eq %19, 0:i32
pc %20 1:i1
infer %17


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = eq %0, %1
%3:i32 = var
%4:i32 = zext %3
%5:i32 = var
%6:i32 = zext %5
%7 = select %2, %4, %6 (hasExternalUses)
%8 = ne %7, 0:i32 (hasExternalUses)
%9:i64 = var
%10:i64 = var
%11 = select %8, %9, %10 (hasExternalUses)
%12 = and %11, 281474976710655:i64 (hasExternalUses)
%13 = eq %12, 0:i64 (hasExternalUses)
%14 = ne %7, 0:i32 (hasExternalUses)
%15:i64 = var
%16:i64 = var
%17 = select %14, %15, %16 (hasExternalUses)
%18 = select %13, %17, %12
%19 = ctlz %18
%20:i64 = var
%21 = add %19, %20
%22:i32 = var
%23 = and %22, 32767:i32
%24 = eq %23, 0:i32
pc %24 1:i1
infer %21


; start LHS (in $8)
%0:i32 = var
%1 = add %0, -15:i32
%2:i32 = var
%3 = and %2, 32767:i32
%4 = eq %3, 0:i32
pc %4 1:i1
infer %1


; start LHS (in $8)
%0:i32 = var
%1 = sub 16:i32, %0
%2:i32 = var
%3 = and %2, 32767:i32
%4 = eq %3, 0:i32
pc %4 1:i1
infer %1


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 88:i32
%3:i32 = var
%4 = and %3, 32767:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5 = eq %2, %4
%6:i64 = var
%7:i64 = var
%8 = ult %6, %7
%9:i32 = zext %8
%10 = ult %4, %2
%11:i32 = zext %10
%12 = select %5, %9, %11 (hasExternalUses)
%13 = ne %12, 0:i32 (hasExternalUses)
%14 = select %13, %1, %3 (hasExternalUses)
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16:i64 = var
%17 = phi %0, %15, %16
%18 = shl %17, 3:i64
%19:i32 = var
%20 = and %19, 32767:i32
%21 = eq %20, 0:i32
blockpc %0 0 %21 1:i1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %0 1 %23 1:i1
infer %18


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5 = eq %2, %4
%6:i64 = var
%7:i64 = var
%8 = ult %6, %7
%9:i32 = zext %8
%10 = ult %4, %2
%11:i32 = zext %10
%12 = select %5, %9, %11 (hasExternalUses)
%13 = ne %12, 0:i32 (hasExternalUses)
%14 = select %13, %7, %6 (hasExternalUses)
%15:i64 = var
%16 = phi %0, %14, %15
%17 = lshr %16, 61:i64
%18:i32 = var
%19 = and %18, 32767:i32
%20 = eq %19, 0:i32
blockpc %0 0 %20 1:i1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1:i1
infer %17


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5 = eq %2, %4
%6:i64 = var
%7:i64 = var
%8 = ult %6, %7
%9:i32 = zext %8
%10 = ult %4, %2
%11:i32 = zext %10
%12 = select %5, %9, %11 (hasExternalUses)
%13 = ne %12, 0:i32 (hasExternalUses)
%14 = select %13, %1, %3 (hasExternalUses)
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16:i64 = var
%17 = phi %0, %15, %16
%18 = shl %17, 3:i64
%19 = ne %12, 0:i32 (hasExternalUses)
%20 = select %19, %7, %6 (hasExternalUses)
%21:i64 = var
%22 = phi %0, %20, %21
%23 = lshr %22, 61:i64
%24 = or %18, %23
%25:i32 = var
%26 = and %25, 32767:i32
%27 = eq %26, 0:i32
blockpc %0 0 %27 1:i1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %0 1 %29 1:i1
infer %24


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5 = eq %2, %4
%6:i64 = var
%7:i64 = var
%8 = ult %6, %7
%9:i32 = zext %8
%10 = ult %4, %2
%11:i32 = zext %10
%12 = select %5, %9, %11 (hasExternalUses)
%13 = ne %12, 0:i32 (hasExternalUses)
%14 = select %13, %6, %7 (hasExternalUses)
%15:i64 = var
%16 = phi %0, %14, %15
%17 = shl %16, 3:i64
%18:i32 = var
%19 = and %18, 32767:i32
%20 = eq %19, 0:i32
blockpc %0 0 %20 1:i1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1:i1
infer %17


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %0, %2 (hasExternalUses)
%14 = ne %11, 0:i32 (hasExternalUses)
%15 = select %14, %2, %0 (hasExternalUses)
%16 = xor %13, %15
infer %16


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5 = eq %2, %4
%6:i64 = var
%7:i64 = var
%8 = ult %6, %7
%9:i32 = zext %8
%10 = ult %4, %2
%11:i32 = zext %10
%12 = select %5, %9, %11 (hasExternalUses)
%13 = ne %12, 0:i32 (hasExternalUses)
%14 = select %13, %3, %1 (hasExternalUses)
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16:i64 = var
%17 = phi %0, %15, %16
%18 = shl %17, 3:i64
%19:i32 = var
%20 = and %19, 32767:i32
%21 = eq %20, 0:i32
blockpc %0 0 %21 1:i1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %0 1 %23 1:i1
infer %18


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5 = eq %2, %4
%6:i64 = var
%7:i64 = var
%8 = ult %6, %7
%9:i32 = zext %8
%10 = ult %4, %2
%11:i32 = zext %10
%12 = select %5, %9, %11 (hasExternalUses)
%13 = ne %12, 0:i32 (hasExternalUses)
%14 = select %13, %6, %7 (hasExternalUses)
%15:i64 = var
%16 = phi %0, %14, %15
%17 = lshr %16, 61:i64
%18:i32 = var
%19 = and %18, 32767:i32
%20 = eq %19, 0:i32
blockpc %0 0 %20 1:i1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1:i1
infer %17


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5 = eq %2, %4
%6:i64 = var
%7:i64 = var
%8 = ult %6, %7
%9:i32 = zext %8
%10 = ult %4, %2
%11:i32 = zext %10
%12 = select %5, %9, %11 (hasExternalUses)
%13 = ne %12, 0:i32 (hasExternalUses)
%14 = select %13, %3, %1 (hasExternalUses)
%15 = and %14, 281474976710655:i64 (hasExternalUses)
%16:i64 = var
%17 = phi %0, %15, %16
%18 = shl %17, 3:i64
%19 = ne %12, 0:i32 (hasExternalUses)
%20 = select %19, %6, %7 (hasExternalUses)
%21:i64 = var
%22 = phi %0, %20, %21
%23 = lshr %22, 61:i64
%24 = or %18, %23
%25:i32 = var
%26 = and %25, 32767:i32
%27 = eq %26, 0:i32
blockpc %0 0 %27 1:i1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %0 1 %29 1:i1
infer %24


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2:i64 = var
%3 = eq %1, %2
%4:i32 = var
%5:i32 = zext %4
%6:i32 = var
%7:i32 = zext %6
%8 = select %3, %5, %7 (hasExternalUses)
%9 = ne %8, 0:i32 (hasExternalUses)
%10:i64 = var
%11:i64 = var
%12 = select %9, %10, %11 (hasExternalUses)
%13 = and %12, 281474976710655:i64 (hasExternalUses)
%14:i64 = var
%15 = phi %0, %13, %14
%16 = shl %15, 3:i64
%17 = ne %8, 0:i32 (hasExternalUses)
%18:i64 = var
%19:i64 = var
%20 = select %17, %18, %19 (hasExternalUses)
%21:i64 = var
%22 = phi %0, %20, %21
%23 = lshr %22, 61:i64
%24 = or %16, %23
%25 = or %24, 2251799813685248:i64
%26:i32 = var
%27 = and %26, 32767:i32
%28 = eq %27, 0:i32
blockpc %0 0 %28 1:i1
%29:i32 = var
blockpc %0 1 %29 1:i1
infer %25


; start LHS (in $8)
%0 = block 2
%1:i32 = var
%2 = and %1, 32767:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 16:i32, %3 (hasExternalUses)
%5 = phi %0, %2, %4
%6 = block 2
%7:i32 = var
%8 = and %7, 32767:i32 (hasExternalUses)
%9:i32 = var
%10 = sub 16:i32, %9
%11 = phi %6, %8, %10
%12 = sub %5, %11
%13 = eq %2, 0:i32
blockpc %0 0 %13 1:i1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %0 1 %15 1:i1
%16 = eq %8, 0:i32
blockpc %6 0 %16 1:i1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %6 1 %18 1:i1
infer %12


; start LHS (in $8)
%0 = block 2
%1:i32 = var
%2 = and %1, 32767:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 16:i32, %3 (hasExternalUses)
%5 = phi %0, %2, %4
%6 = block 2
%7:i32 = var
%8 = and %7, 32767:i32 (hasExternalUses)
%9:i32 = var
%10 = sub 16:i32, %9
%11 = phi %6, %8, %10
%12 = sub %5, %11 (hasExternalUses)
%13 = eq %12, 0:i32
%14 = eq %2, 0:i32
blockpc %0 0 %14 1:i1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %0 1 %16 1:i1
%17 = eq %8, 0:i32
blockpc %6 0 %17 1:i1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %6 1 %19 1:i1
infer %13


; start LHS (in $8)
%0 = block 2
%1:i32 = var
%2 = and %1, 32767:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 16:i32, %3 (hasExternalUses)
%5 = phi %0, %2, %4
%6 = block 2
%7:i32 = var
%8 = and %7, 32767:i32 (hasExternalUses)
%9:i32 = var
%10 = sub 16:i32, %9
%11 = phi %6, %8, %10
%12 = sub %5, %11 (hasExternalUses)
%13 = ule %12, 127:i32
%14 = eq %2, 0:i32
blockpc %0 0 %14 1:i1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %0 1 %16 1:i1
%17 = eq %8, 0:i32
blockpc %6 0 %17 1:i1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %6 1 %19 1:i1
infer %13


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = sub %1, -64:i32
%3 = block 2
%4:i32 = var
%5 = and %4, 32767:i32
%6 = eq %5, 0:i32
blockpc %3 0 %6 1:i1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1:i1
%9:i32 = var
%10 = sub 16:i32, %9
%11 = phi %3, %5, %10
%12 = block 2
%13:i32 = var
%14 = and %13, 32767:i32
%15 = eq %14, 0:i32
blockpc %12 0 %15 1:i1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %12 1 %17 1:i1
%18:i32 = var
%19 = sub 16:i32, %18
%20 = phi %12, %14, %19
%21 = sub %11, %20
%22 = ule %21, 127:i32
pc %22 1:i1
infer %2


; start LHS (in $8)
%0 = block 2
%1:i32 = var
%2 = and %1, 32767:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 16:i32, %3 (hasExternalUses)
%5 = phi %0, %2, %4
%6 = block 2
%7:i32 = var
%8 = and %7, 32767:i32 (hasExternalUses)
%9:i32 = var
%10 = sub 16:i32, %9
%11 = phi %6, %8, %10
%12 = sub %5, %11 (hasExternalUses)
%13 = sub 128:i32, %12
%14 = eq %2, 0:i32
blockpc %0 0 %14 1:i1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %0 1 %16 1:i1
%17 = eq %8, 0:i32
blockpc %6 0 %17 1:i1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %6 1 %19 1:i1
%20 = ule %12, 127:i32
pc %20 1:i1
infer %13


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 48:i32
%3 = block 2
%4:i32 = var
%5 = and %4, 32767:i32
%6 = eq %5, 0:i32
blockpc %3 0 %6 1:i1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1:i1
%9:i32 = var
%10 = sub 16:i32, %9
%11 = phi %3, %5, %10
%12 = block 2
%13:i32 = var
%14 = and %13, 32767:i32
%15 = eq %14, 0:i32
blockpc %12 0 %15 1:i1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %12 1 %17 1:i1
%18:i32 = var
%19 = sub 16:i32, %18
%20 = phi %12, %14, %19
%21 = sub %11, %20
%22 = ule %21, 127:i32
pc %22 1:i1
infer %2


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 72:i32
%3 = block 2
%4:i32 = var
%5 = and %4, 32767:i32
%6 = eq %5, 0:i32
blockpc %3 0 %6 1:i1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1:i1
%9:i32 = var
%10 = sub 16:i32, %9
%11 = phi %3, %5, %10
%12 = block 2
%13:i32 = var
%14 = and %13, 32767:i32
%15 = eq %14, 0:i32
blockpc %12 0 %15 1:i1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %12 1 %17 1:i1
%18:i32 = var
%19 = sub 16:i32, %18
%20 = phi %12, %14, %19
%21 = sub %11, %20
%22 = ule %21, 127:i32
pc %22 1:i1
infer %2


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
%3 = block 2
%4:i32 = var
%5 = and %4, 32767:i32
%6 = eq %5, 0:i32
blockpc %3 0 %6 1:i1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1:i1
%9:i32 = var
%10 = sub 16:i32, %9
%11 = phi %3, %5, %10
%12 = block 2
%13:i32 = var
%14 = and %13, 32767:i32
%15 = eq %14, 0:i32
blockpc %12 0 %15 1:i1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %12 1 %17 1:i1
%18:i32 = var
%19 = sub 16:i32, %18
%20 = phi %12, %14, %19
%21 = sub %11, %20
%22 = ule %21, 127:i32
pc %22 1:i1
infer %2


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
%3 = ne %2, 0:i64
%4 = block 2
%5:i32 = var
%6 = and %5, 32767:i32
%7 = eq %6, 0:i32
blockpc %4 0 %7 1:i1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1:i1
%10:i32 = var
%11 = sub 16:i32, %10
%12 = phi %4, %6, %11
%13 = block 2
%14:i32 = var
%15 = and %14, 32767:i32
%16 = eq %15, 0:i32
blockpc %13 0 %16 1:i1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %13 1 %18 1:i1
%19:i32 = var
%20 = sub 16:i32, %19
%21 = phi %13, %15, %20
%22 = sub %12, %21
%23 = ule %22, 127:i32
pc %23 1:i1
infer %3


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
%3 = block 2
%4:i32 = var
%5 = and %4, 32767:i32
%6 = eq %5, 0:i32
blockpc %3 0 %6 1:i1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1:i1
%9:i32 = var
%10 = sub 16:i32, %9
%11 = phi %3, %5, %10
%12 = block 2
%13:i32 = var
%14 = and %13, 32767:i32
%15 = eq %14, 0:i32
blockpc %12 0 %15 1:i1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %12 1 %17 1:i1
%18:i32 = var
%19 = sub 16:i32, %18
%20 = phi %12, %14, %19
%21 = sub %11, %20
%22 = ule %21, 127:i32
pc %22 1:i1
infer %2


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 56:i32
%3 = block 2
%4:i32 = var
%5 = and %4, 32767:i32
%6 = eq %5, 0:i32
blockpc %3 0 %6 1:i1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1:i1
%9:i32 = var
%10 = sub 16:i32, %9
%11 = phi %3, %5, %10
%12 = block 2
%13:i32 = var
%14 = and %13, 32767:i32
%15 = eq %14, 0:i32
blockpc %12 0 %15 1:i1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %12 1 %17 1:i1
%18:i32 = var
%19 = sub 16:i32, %18
%20 = phi %12, %14, %19
%21 = sub %11, %20
%22 = ule %21, 127:i32
pc %22 1:i1
infer %2


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2:i64 = var
%3 = eq %1, %2
%4:i32 = var
%5:i32 = zext %4
%6:i32 = var
%7:i32 = zext %6
%8 = select %3, %5, %7 (hasExternalUses)
%9 = ne %8, 0:i32 (hasExternalUses)
%10:i64 = var
%11:i64 = var
%12 = select %9, %10, %11 (hasExternalUses)
%13 = and %12, 281474976710655:i64 (hasExternalUses)
%14:i64 = var
%15 = phi %0, %13, %14
%16 = shl %15, 3:i64
%17 = ne %8, 0:i32 (hasExternalUses)
%18:i64 = var
%19:i64 = var
%20 = select %17, %18, %19 (hasExternalUses)
%21:i64 = var
%22 = phi %0, %20, %21
%23 = lshr %22, 61:i64
%24 = or %16, %23
%25 = or %24, 2251799813685248:i64
%26:i32 = var
%27 = and %26, 32767:i32
%28 = eq %27, 0:i32
blockpc %0 0 %28 1:i1
%29:i32 = var
blockpc %0 1 %29 1:i1
infer %25


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5 = eq %2, %4
%6:i64 = var
%7:i64 = var
%8 = ult %6, %7
%9:i32 = zext %8
%10 = ult %4, %2
%11:i32 = zext %10
%12 = select %5, %9, %11 (hasExternalUses)
%13 = ne %12, 0:i32 (hasExternalUses)
%14 = select %13, %7, %6 (hasExternalUses)
%15:i64 = var
%16 = phi %0, %14, %15
%17 = shl %16, 3:i64
%18:i32 = var
%19 = and %18, 32767:i32
%20 = eq %19, 0:i32
blockpc %0 0 %20 1:i1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1:i1
infer %17


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %0, %2 (hasExternalUses)
%14 = ne %11, 0:i32 (hasExternalUses)
%15 = select %14, %2, %0 (hasExternalUses)
%16 = xor %13, %15
%17 = slt -1:i64, %16
infer %17


; start LHS (in $8)
%0 = block 3
%1 = block 2
%2:i32 = var
%3 = ne %2, 0:i32 (hasExternalUses)
%4:i64 = var
%5:i64 = var
%6 = select %3, %4, %5 (hasExternalUses)
%7 = and %6, 281474976710655:i64 (hasExternalUses)
%8:i64 = var
%9 = phi %1, %7, %8
%10 = shl %9, 3:i64
%11 = ne %2, 0:i32 (hasExternalUses)
%12:i64 = var
%13:i64 = var
%14 = select %11, %12, %13 (hasExternalUses)
%15:i64 = var
%16 = phi %1, %14, %15
%17 = lshr %16, 61:i64
%18 = or %10, %17
%19 = or %18, 2251799813685248:i64 (hasExternalUses)
%20:i64 = var
%21 = phi %0, %19, %20, 0:i64
%22 = block 2
%23 = ne %2, 0:i32 (hasExternalUses)
%24 = select %23, %5, %4 (hasExternalUses)
%25 = and %24, 281474976710655:i64 (hasExternalUses)
%26:i64 = var
%27 = phi %22, %25, %26
%28 = shl %27, 3:i64
%29 = ne %2, 0:i32 (hasExternalUses)
%30 = select %29, %13, %12 (hasExternalUses)
%31:i64 = var
%32 = phi %22, %30, %31
%33 = lshr %32, 61:i64
%34 = or %28, %33
%35 = or %34, 2251799813685248:i64 (hasExternalUses)
%36 = add %21, %35
%37:i32 = var
blockpc %1 0 %37 1:i1
%38:i32 = var
blockpc %1 1 %38 1:i1
%39:i32 = var
blockpc %22 0 %39 1:i1
%40:i32 = var
blockpc %22 1 %40 1:i1
%41:i32 = var
pc %41 1:i1
infer %36


; start LHS (in $8)
%0 = block 3
%1 = block 2
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4:i64 = var
%5 = and %4, 9223372036854775807:i64 (hasExternalUses)
%6 = eq %3, %5
%7:i64 = var
%8:i64 = var
%9 = ult %7, %8
%10:i32 = zext %9
%11 = ult %5, %3
%12:i32 = zext %11
%13 = select %6, %10, %12 (hasExternalUses)
%14 = ne %13, 0:i32 (hasExternalUses)
%15 = select %14, %7, %8 (hasExternalUses)
%16:i64 = var
%17 = phi %1, %15, %16
%18 = shl %17, 3:i64 (hasExternalUses)
%19:i64 = var
%20:i64 = var
%21 = or %19, %20 (hasExternalUses)
%22 = phi %0, %18, %21, 1:i64
%23 = block 2
%24 = ne %13, 0:i32 (hasExternalUses)
%25 = select %24, %8, %7 (hasExternalUses)
%26:i64 = var
%27 = phi %23, %25, %26
%28 = shl %27, 3:i64 (hasExternalUses)
%29 = add %22, %28
%30:i32 = var
blockpc %1 0 %30 1:i1
%31:i32 = var
blockpc %1 1 %31 1:i1
%32:i32 = var
blockpc %23 0 %32 1:i1
%33:i32 = var
blockpc %23 1 %33 1:i1
%34:i32 = var
pc %34 1:i1
infer %29


; start LHS (in $8)
%0 = block 3
%1 = block 2
%2:i64 = var
%3:i64 = var
%4 = eq %2, %3
%5:i32 = var
%6:i32 = zext %5
%7:i32 = var
%8:i32 = zext %7
%9 = select %4, %6, %8 (hasExternalUses)
%10 = ne %9, 0:i32 (hasExternalUses)
%11:i64 = var
%12:i64 = var
%13 = select %10, %11, %12 (hasExternalUses)
%14:i64 = var
%15 = phi %1, %13, %14
%16 = shl %15, 3:i64 (hasExternalUses)
%17:i64 = var
%18:i64 = var
%19 = or %17, %18 (hasExternalUses)
%20 = phi %0, %16, %19, 1:i64
%21 = block 2
%22 = ne %9, 0:i32 (hasExternalUses)
%23 = select %22, %12, %11 (hasExternalUses)
%24:i64 = var
%25 = phi %21, %23, %24
%26 = shl %25, 3:i64 (hasExternalUses)
%27 = add %20, %26 (hasExternalUses)
%28 = ult %27, %20
%29:i32 = var
%30 = and %29, 32767:i32
%31 = eq %30, 0:i32
blockpc %1 0 %31 1:i1
%32:i32 = var
blockpc %1 1 %32 1:i1
%33:i32 = var
blockpc %21 0 %33 1:i1
%34:i32 = var
blockpc %21 1 %34 1:i1
%35:i32 = var
pc %35 1:i1
infer %28


; start LHS (in $8)
%0 = block 3
%1 = block 2
%2:i32 = var
%3:i64 = var
%4:i64 = var
%5 = select %2, %3, %4 (hasExternalUses)
%6 = and %5, 281474976710655:i64 (hasExternalUses)
%7:i64 = var
%8 = phi %1, %6, %7
%9 = shl %8, 3:i64
%10:i32 = var
%11 = ne %10, 0:i32 (hasExternalUses)
%12:i64 = var
%13:i64 = var
%14 = select %11, %12, %13 (hasExternalUses)
%15:i64 = var
%16 = phi %1, %14, %15
%17 = lshr %16, 61:i64
%18 = or %9, %17
%19 = or %18, 2251799813685248:i64 (hasExternalUses)
%20:i64 = var
%21 = phi %0, %19, %20, 0:i64
%22 = block 2
%23 = ne %10, 0:i32 (hasExternalUses)
%24 = select %23, %4, %3 (hasExternalUses)
%25 = and %24, 281474976710655:i64 (hasExternalUses)
%26:i64 = var
%27 = phi %22, %25, %26
%28 = shl %27, 3:i64
%29 = ne %10, 0:i32 (hasExternalUses)
%30 = select %29, %13, %12 (hasExternalUses)
%31:i64 = var
%32 = phi %22, %30, %31
%33 = lshr %32, 61:i64
%34 = or %28, %33
%35 = or %34, 2251799813685248:i64 (hasExternalUses)
%36 = add %21, %35
%37:i64 = var
%38 = add %36, %37
%39:i32 = var
blockpc %1 0 %39 1:i1
%40:i32 = var
blockpc %1 1 %40 1:i1
%41:i32 = var
blockpc %22 0 %41 1:i1
%42:i32 = var
blockpc %22 1 %42 1:i1
%43:i32 = var
pc %43 1:i1
infer %38


; start LHS (in $8)
%0 = block 3
%1 = block 2
%2:i64 = var
%3 = and %2, 281474976710655:i64 (hasExternalUses)
%4:i64 = var
%5 = phi %1, %3, %4
%6 = shl %5, 3:i64
%7:i32 = var
%8:i64 = var
%9:i64 = var
%10 = select %7, %8, %9 (hasExternalUses)
%11:i64 = var
%12 = phi %1, %10, %11
%13 = lshr %12, 61:i64
%14 = or %6, %13
%15 = or %14, 2251799813685248:i64 (hasExternalUses)
%16:i64 = var
%17 = phi %0, %15, %16, 0:i64
%18 = block 2
%19:i32 = var
%20:i64 = var
%21:i64 = var
%22 = select %19, %20, %21 (hasExternalUses)
%23 = and %22, 281474976710655:i64 (hasExternalUses)
%24:i64 = var
%25 = phi %18, %23, %24
%26 = shl %25, 3:i64
%27:i32 = var
%28 = ne %27, 0:i32 (hasExternalUses)
%29 = select %28, %9, %8 (hasExternalUses)
%30:i64 = var
%31 = phi %18, %29, %30
%32 = lshr %31, 61:i64
%33 = or %26, %32
%34 = or %33, 2251799813685248:i64 (hasExternalUses)
%35 = add %17, %34
%36:i64 = var
%37 = add %35, %36 (hasExternalUses)
%38 = and %37, 4503599627370496:i64
%39:i32 = var
blockpc %1 0 %39 1:i1
%40:i32 = var
blockpc %1 1 %40 1:i1
%41:i32 = var
blockpc %18 0 %41 1:i1
%42:i32 = var
blockpc %18 1 %42 1:i1
%43:i32 = var
pc %43 1:i1
infer %38


; start LHS (in $8)
%0 = block 3
%1 = block 2
%2:i64 = var
%3:i64 = var
%4 = phi %1, %2, %3
%5 = shl %4, 3:i64
%6:i64 = var
%7:i64 = var
%8 = phi %1, %6, %7
%9 = lshr %8, 61:i64
%10 = or %5, %9
%11 = or %10, 2251799813685248:i64 (hasExternalUses)
%12:i64 = var
%13 = phi %0, %11, %12, 0:i64
%14 = block 2
%15:i64 = var
%16 = and %15, 281474976710655:i64 (hasExternalUses)
%17:i64 = var
%18 = phi %14, %16, %17
%19 = shl %18, 3:i64
%20:i32 = var
%21:i64 = var
%22:i64 = var
%23 = select %20, %21, %22 (hasExternalUses)
%24:i64 = var
%25 = phi %14, %23, %24
%26 = lshr %25, 61:i64
%27 = or %19, %26
%28 = or %27, 2251799813685248:i64 (hasExternalUses)
%29 = add %13, %28
%30:i64 = var
%31 = add %29, %30 (hasExternalUses)
%32 = and %31, 4503599627370496:i64
%33 = eq %32, 0:i64
%34:i32 = var
blockpc %1 0 %34 1:i1
%35:i32 = var
blockpc %1 1 %35 1:i1
%36:i32 = var
blockpc %14 0 %36 1:i1
%37:i32 = var
blockpc %14 1 %37 1:i1
%38:i32 = var
pc %38 1:i1
infer %33


; start LHS (in $8)
%0 = block 3
%1 = block 2
%2:i64 = var
%3:i64 = var
%4 = eq %2, %3
%5:i32 = var
%6:i32 = zext %5
%7:i32 = var
%8:i32 = zext %7
%9 = select %4, %6, %8 (hasExternalUses)
%10 = ne %9, 0:i32 (hasExternalUses)
%11:i64 = var
%12:i64 = var
%13 = select %10, %11, %12 (hasExternalUses)
%14:i64 = var
%15 = phi %1, %13, %14
%16 = shl %15, 3:i64 (hasExternalUses)
%17:i64 = var
%18:i64 = var
%19 = or %17, %18 (hasExternalUses)
%20 = phi %0, %16, %19, 1:i64
%21 = block 2
%22 = ne %9, 0:i32 (hasExternalUses)
%23 = select %22, %12, %11 (hasExternalUses)
%24:i64 = var
%25 = phi %21, %23, %24
%26 = shl %25, 3:i64 (hasExternalUses)
%27 = add %20, %26 (hasExternalUses)
%28 = lshr %27, 1:i64
%29:i32 = var
%30 = and %29, 32767:i32
%31 = eq %30, 0:i32
blockpc %1 0 %31 1:i1
%32:i32 = var
blockpc %1 1 %32 1:i1
%33:i32 = var
blockpc %21 0 %33 1:i1
%34:i32 = var
blockpc %21 1 %34 1:i1
%35:i32 = var
pc %35 1:i1
infer %28


; start LHS (in $8)
%0 = block 3
%1 = block 2
%2:i64 = var
%3 = and %2, 281474976710655:i64 (hasExternalUses)
%4:i64 = var
%5 = phi %1, %3, %4
%6 = shl %5, 3:i64
%7:i32 = var
%8:i64 = var
%9:i64 = var
%10 = select %7, %8, %9 (hasExternalUses)
%11:i64 = var
%12 = phi %1, %10, %11
%13 = lshr %12, 61:i64
%14 = or %6, %13
%15 = or %14, 2251799813685248:i64 (hasExternalUses)
%16:i64 = var
%17 = phi %0, %15, %16, 0:i64
%18 = block 2
%19:i32 = var
%20:i64 = var
%21:i64 = var
%22 = select %19, %20, %21 (hasExternalUses)
%23 = and %22, 281474976710655:i64 (hasExternalUses)
%24:i64 = var
%25 = phi %18, %23, %24
%26 = shl %25, 3:i64
%27:i32 = var
%28 = ne %27, 0:i32 (hasExternalUses)
%29 = select %28, %9, %8 (hasExternalUses)
%30:i64 = var
%31 = phi %18, %29, %30
%32 = lshr %31, 61:i64
%33 = or %26, %32
%34 = or %33, 2251799813685248:i64 (hasExternalUses)
%35 = add %17, %34
%36:i64 = var
%37 = add %35, %36 (hasExternalUses)
%38 = shl %37, 63:i64
%39:i32 = var
blockpc %1 0 %39 1:i1
%40:i32 = var
blockpc %1 1 %40 1:i1
%41:i32 = var
blockpc %18 0 %41 1:i1
%42:i32 = var
blockpc %18 1 %42 1:i1
%43:i32 = var
pc %43 1:i1
infer %38


; start LHS (in $8)
%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = var
%4:i32 = zext %3
%5:i32 = var
%6:i32 = zext %5
%7 = select %2, %4, %6 (hasExternalUses)
%8 = ne %7, 0:i32 (hasExternalUses)
%9:i64 = var
%10:i64 = var
%11 = select %8, %9, %10 (hasExternalUses)
%12:i64 = var
%13 = phi %1, %11, %12
%14 = shl %13, 3:i64 (hasExternalUses)
%15:i64 = var
%16:i64 = var
%17 = or %15, %16 (hasExternalUses)
%18 = phi %0, %14, %17, 1:i64
%19 = block 2
%20 = ne %7, 0:i32 (hasExternalUses)
%21 = select %20, %10, %9 (hasExternalUses)
%22:i64 = var
%23 = phi %19, %21, %22
%24 = shl %23, 3:i64 (hasExternalUses)
%25 = add %18, %24 (hasExternalUses)
%26 = lshr %25, 1:i64
%27:i64 = var
%28:i64 = var
%29 = phi %1, %27, %28
%30 = shl %29, 3:i64
%31:i64 = var
%32 = or %30, %31
%33 = or %32, 2251799813685248:i64 (hasExternalUses)
%34:i64 = var
%35 = phi %0, %33, %34, 0:i64
%36:i64 = var
%37 = add %35, %36
%38:i64 = var
%39 = add %37, %38 (hasExternalUses)
%40 = shl %39, 63:i64
%41 = or %26, %40
%42:i32 = var
blockpc %1 0 %42 1:i1
%43:i32 = var
blockpc %1 1 %43 1:i1
%44:i32 = var
blockpc %19 0 %44 1:i1
%45:i32 = var
blockpc %19 1 %45 1:i1
%46:i32 = var
pc %46 1:i1
infer %41


; start LHS (in $8)
%0 = block 3
%1 = block 2
%2:i64 = var
%3:i64 = var
%4 = eq %2, %3
%5:i32 = var
%6:i32 = zext %5
%7:i32 = var
%8:i32 = zext %7
%9 = select %4, %6, %8 (hasExternalUses)
%10 = ne %9, 0:i32 (hasExternalUses)
%11:i64 = var
%12:i64 = var
%13 = select %10, %11, %12 (hasExternalUses)
%14:i64 = var
%15 = phi %1, %13, %14
%16 = shl %15, 3:i64 (hasExternalUses)
%17:i64 = var
%18:i64 = var
%19 = or %17, %18 (hasExternalUses)
%20 = phi %0, %16, %19, 1:i64
%21 = block 2
%22 = ne %9, 0:i32 (hasExternalUses)
%23 = select %22, %12, %11 (hasExternalUses)
%24:i64 = var
%25 = phi %21, %23, %24
%26 = shl %25, 3:i64 (hasExternalUses)
%27 = add %20, %26 (hasExternalUses)
%28 = and %27, 1:i64
%29:i32 = var
%30 = and %29, 32767:i32
%31 = eq %30, 0:i32
blockpc %1 0 %31 1:i1
%32:i32 = var
blockpc %1 1 %32 1:i1
%33:i32 = var
blockpc %21 0 %33 1:i1
%34:i32 = var
blockpc %21 1 %34 1:i1
%35:i32 = var
pc %35 1:i1
infer %28


; start LHS (in $8)
%0 = block 3
%1 = block 2
%2:i32 = var
%3 = ne %2, 0:i32 (hasExternalUses)
%4:i64 = var
%5:i64 = var
%6 = select %3, %4, %5 (hasExternalUses)
%7:i64 = var
%8 = phi %1, %6, %7
%9 = shl %8, 3:i64 (hasExternalUses)
%10:i64 = var
%11:i64 = var
%12 = or %10, %11 (hasExternalUses)
%13 = phi %0, %9, %12, 1:i64
%14 = block 2
%15 = ne %2, 0:i32 (hasExternalUses)
%16 = select %15, %5, %4 (hasExternalUses)
%17:i64 = var
%18 = phi %14, %16, %17
%19 = shl %18, 3:i64 (hasExternalUses)
%20 = add %13, %19 (hasExternalUses)
%21 = lshr %20, 1:i64
%22:i64 = var
%23:i64 = var
%24 = phi %1, %22, %23
%25 = shl %24, 3:i64
%26 = lshr %8, 61:i64
%27 = or %25, %26
%28 = or %27, 2251799813685248:i64 (hasExternalUses)
%29:i64 = var
%30 = phi %0, %28, %29, 0:i64
%31:i64 = var
%32 = add %30, %31
%33:i64 = var
%34 = add %32, %33 (hasExternalUses)
%35 = shl %34, 63:i64
%36 = or %21, %35
%37:i64 = var
%38 = or %36, %37
%39:i32 = var
blockpc %1 0 %39 1:i1
%40:i32 = var
blockpc %1 1 %40 1:i1
%41:i32 = var
blockpc %14 0 %41 1:i1
%42:i32 = var
blockpc %14 1 %42 1:i1
%43:i32 = var
pc %43 1:i1
infer %38


; start LHS (in $8)
%0 = block 2
%1:i32 = var
%2 = and %1, 32767:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 16:i32, %3 (hasExternalUses)
%5 = phi %0, %2, %4
%6 = add %5, 1:i32
%7 = eq %2, 0:i32
blockpc %0 0 %7 1:i1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %0 1 %9 1:i1
%10:i64 = var
%11 = and %10, 9223372036854775807:i64
%12:i64 = var
%13 = and %12, 9223372036854775807:i64
%14 = eq %11, %13
%15:i64 = var
%16:i64 = var
%17 = ult %15, %16
%18:i32 = zext %17
%19 = ult %13, %11
%20:i32 = zext %19
%21 = select %14, %18, %20
%22 = ne %21, 0:i32
%23 = select %22, %10, %12
%24 = ne %21, 0:i32
%25 = select %24, %12, %10
%26 = xor %23, %25
%27 = slt -1:i64, %26
pc %27 1:i1
infer %6


; start LHS (in $8)
%0 = block 3
%1 = block 2
%2:i64 = var
%3 = and %2, 281474976710655:i64 (hasExternalUses)
%4:i64 = var
%5 = phi %1, %3, %4
%6 = shl %5, 3:i64
%7:i32 = var
%8:i64 = var
%9:i64 = var
%10 = select %7, %8, %9 (hasExternalUses)
%11:i64 = var
%12 = phi %1, %10, %11
%13 = lshr %12, 61:i64
%14 = or %6, %13
%15 = or %14, 2251799813685248:i64 (hasExternalUses)
%16:i64 = var
%17 = phi %0, %15, %16, 0:i64
%18 = block 2
%19:i32 = var
%20:i64 = var
%21:i64 = var
%22 = select %19, %20, %21 (hasExternalUses)
%23 = and %22, 281474976710655:i64 (hasExternalUses)
%24:i64 = var
%25 = phi %18, %23, %24
%26 = shl %25, 3:i64
%27:i32 = var
%28 = ne %27, 0:i32 (hasExternalUses)
%29 = select %28, %9, %8 (hasExternalUses)
%30:i64 = var
%31 = phi %18, %29, %30
%32 = lshr %31, 61:i64
%33 = or %26, %32
%34 = or %33, 2251799813685248:i64 (hasExternalUses)
%35 = add %17, %34
%36:i64 = var
%37 = add %35, %36 (hasExternalUses)
%38 = lshr %37, 1:i64
%39:i32 = var
blockpc %1 0 %39 1:i1
%40:i32 = var
blockpc %1 1 %40 1:i1
%41:i32 = var
blockpc %18 0 %41 1:i1
%42:i32 = var
blockpc %18 1 %42 1:i1
%43:i32 = var
pc %43 1:i1
infer %38


; start LHS (in $8)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = zext %2
%4:i32 = var
%5:i32 = zext %4
%6 = select %1, %3, %5 (hasExternalUses)
%7 = ne %6, 0:i32 (hasExternalUses)
%8:i64 = var
%9:i64 = var
%10 = select %7, %8, %9 (hasExternalUses)
%11 = and %10, 281474976710655:i64 (hasExternalUses)
%12:i64 = var
%13 = phi %0, %11, %12
%14 = shl %13, 3:i64
%15 = ne %6, 0:i32 (hasExternalUses)
%16:i64 = var
%17:i64 = var
%18 = select %15, %16, %17 (hasExternalUses)
%19:i64 = var
%20 = phi %0, %18, %19
%21 = lshr %20, 61:i64
%22 = or %14, %21
%23 = or %22, 2251799813685248:i64 (hasExternalUses)
%24 = block 3
%25 = block 2
%26 = ne %6, 0:i32 (hasExternalUses)
%27 = select %26, %9, %8 (hasExternalUses)
%28 = and %27, 281474976710655:i64 (hasExternalUses)
%29:i64 = var
%30 = phi %25, %28, %29
%31 = shl %30, 3:i64
%32:i64 = var
%33 = or %31, %32
%34 = or %33, 2251799813685248:i64 (hasExternalUses)
%35:i64 = var
%36 = phi %24, %34, %35, 0:i64
%37 = sub %23, %36
%38:i32 = var
blockpc %0 0 %38 1:i1
%39:i32 = var
blockpc %0 1 %39 1:i1
%40:i32 = var
blockpc %25 0 %40 1:i1
%41:i32 = var
blockpc %25 1 %41 1:i1
infer %37


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5 = eq %2, %4
%6:i64 = var
%7:i64 = var
%8 = ult %6, %7
%9:i32 = zext %8
%10 = ult %4, %2
%11:i32 = zext %10
%12 = select %5, %9, %11 (hasExternalUses)
%13 = ne %12, 0:i32 (hasExternalUses)
%14 = select %13, %7, %6 (hasExternalUses)
%15:i64 = var
%16 = phi %0, %14, %15
%17 = shl %16, 3:i64 (hasExternalUses)
%18 = block 3
%19 = block 2
%20 = ne %12, 0:i32 (hasExternalUses)
%21 = select %20, %6, %7 (hasExternalUses)
%22:i64 = var
%23 = phi %19, %21, %22
%24 = shl %23, 3:i64 (hasExternalUses)
%25:i64 = var
%26:i64 = var
%27 = or %25, %26 (hasExternalUses)
%28 = phi %18, %24, %27, 1:i64
%29 = ult %17, %28
%30:i32 = var
blockpc %0 0 %30 1:i1
%31:i32 = var
blockpc %0 1 %31 1:i1
%32:i32 = var
blockpc %19 0 %32 1:i1
%33:i32 = var
blockpc %19 1 %33 1:i1
infer %29


; start LHS (in $8)
%0 = block 2
%1:i32 = var
%2 = ne %1, 0:i32 (hasExternalUses)
%3:i64 = var
%4:i64 = var
%5 = select %2, %3, %4 (hasExternalUses)
%6 = and %5, 281474976710655:i64 (hasExternalUses)
%7:i64 = var
%8 = phi %0, %6, %7
%9 = shl %8, 3:i64
%10 = ne %1, 0:i32 (hasExternalUses)
%11:i64 = var
%12:i64 = var
%13 = select %10, %11, %12 (hasExternalUses)
%14:i64 = var
%15 = phi %0, %13, %14
%16 = lshr %15, 61:i64
%17 = or %9, %16
%18 = or %17, 2251799813685248:i64 (hasExternalUses)
%19 = block 3
%20 = block 2
%21:i32 = var
%22 = select %21, %4, %3 (hasExternalUses)
%23 = and %22, 281474976710655:i64 (hasExternalUses)
%24:i64 = var
%25 = phi %20, %23, %24
%26 = shl %25, 3:i64
%27 = ne %1, 0:i32 (hasExternalUses)
%28 = select %27, %12, %11 (hasExternalUses)
%29:i64 = var
%30 = phi %20, %28, %29
%31 = lshr %30, 61:i64
%32 = or %26, %31
%33 = or %32, 2251799813685248:i64 (hasExternalUses)
%34:i64 = var
%35 = phi %19, %33, %34, 0:i64
%36 = sub %18, %35
%37:i64 = var
%38 = sub %36, %37
%39:i32 = var
blockpc %0 0 %39 1:i1
%40:i32 = var
blockpc %0 1 %40 1:i1
%41:i32 = var
blockpc %20 0 %41 1:i1
%42:i32 = var
blockpc %20 1 %42 1:i1
infer %38


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5 = eq %2, %4
%6:i64 = var
%7:i64 = var
%8 = ult %6, %7
%9:i32 = zext %8
%10 = ult %4, %2
%11:i32 = zext %10
%12 = select %5, %9, %11 (hasExternalUses)
%13 = ne %12, 0:i32 (hasExternalUses)
%14 = select %13, %7, %6 (hasExternalUses)
%15:i64 = var
%16 = phi %0, %14, %15
%17 = shl %16, 3:i64 (hasExternalUses)
%18 = block 3
%19 = block 2
%20 = ne %12, 0:i32 (hasExternalUses)
%21 = select %20, %6, %7 (hasExternalUses)
%22:i64 = var
%23 = phi %19, %21, %22
%24 = shl %23, 3:i64 (hasExternalUses)
%25:i64 = var
%26:i64 = var
%27 = or %25, %26 (hasExternalUses)
%28 = phi %18, %24, %27, 1:i64
%29 = sub %17, %28
%30:i32 = var
blockpc %0 0 %30 1:i1
%31:i32 = var
blockpc %0 1 %31 1:i1
%32:i32 = var
blockpc %19 0 %32 1:i1
%33:i32 = var
blockpc %19 1 %33 1:i1
infer %29


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3:i64 = var
%4 = and %3, 9223372036854775807:i64 (hasExternalUses)
%5 = eq %2, %4
%6:i64 = var
%7:i64 = var
%8 = ult %6, %7
%9:i32 = zext %8
%10 = ult %4, %2
%11:i32 = zext %10
%12 = select %5, %9, %11 (hasExternalUses)
%13 = ne %12, 0:i32 (hasExternalUses)
%14 = select %13, %7, %6 (hasExternalUses)
%15:i64 = var
%16 = phi %0, %14, %15
%17 = shl %16, 3:i64 (hasExternalUses)
%18 = block 3
%19 = block 2
%20 = ne %12, 0:i32 (hasExternalUses)
%21 = select %20, %6, %7 (hasExternalUses)
%22:i64 = var
%23 = phi %19, %21, %22
%24 = shl %23, 3:i64 (hasExternalUses)
%25:i64 = var
%26:i64 = var
%27 = or %25, %26 (hasExternalUses)
%28 = phi %18, %24, %27, 1:i64
%29 = sub %17, %28 (hasExternalUses)
%30:i64 = var
%31 = or %29, %30
%32:i32 = var
blockpc %0 0 %32 1:i1
%33:i32 = var
blockpc %0 1 %33 1:i1
%34:i32 = var
blockpc %19 0 %34 1:i1
%35:i32 = var
blockpc %19 1 %35 1:i1
infer %31


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2:i64 = var
%3 = eq %1, %2
%4:i32 = var
%5:i32 = zext %4
%6:i32 = var
%7:i32 = zext %6
%8 = select %3, %5, %7 (hasExternalUses)
%9 = ne %8, 0:i32 (hasExternalUses)
%10:i64 = var
%11:i64 = var
%12 = select %9, %10, %11 (hasExternalUses)
%13:i64 = var
%14 = phi %0, %12, %13
%15 = shl %14, 3:i64 (hasExternalUses)
%16 = block 3
%17 = block 2
%18 = ne %8, 0:i32 (hasExternalUses)
%19 = select %18, %11, %10 (hasExternalUses)
%20:i64 = var
%21 = phi %17, %19, %20
%22 = shl %21, 3:i64 (hasExternalUses)
%23:i64 = var
%24:i64 = var
%25 = or %23, %24 (hasExternalUses)
%26 = phi %16, %22, %25, 1:i64
%27 = sub %15, %26 (hasExternalUses)
%28:i64 = var
%29 = and %28, 281474976710655:i64 (hasExternalUses)
%30:i64 = var
%31 = phi %0, %29, %30
%32 = shl %31, 3:i64
%33:i64 = var
%34 = or %32, %33
%35 = or %34, 2251799813685248:i64 (hasExternalUses)
%36:i64 = var
%37:i64 = var
%38 = phi %16, %36, %37, 0:i64
%39 = sub %35, %38
%40:i64 = var
%41 = sub %39, %40 (hasExternalUses)
%42 = or %27, %41
%43 = eq %42, 0:i64
%44:i32 = var
blockpc %0 0 %44 1:i1
%45:i32 = var
blockpc %0 1 %45 1:i1
%46:i32 = var
blockpc %17 0 %46 1:i1
%47:i32 = var
blockpc %17 1 %47 1:i1
infer %43


; start LHS (in $8)
%0 = block 2
%1:i32 = var
%2:i64 = var
%3:i64 = var
%4 = select %1, %2, %3 (hasExternalUses)
%5 = and %4, 281474976710655:i64 (hasExternalUses)
%6:i64 = var
%7 = phi %0, %5, %6
%8 = shl %7, 3:i64
%9:i32 = var
%10 = ne %9, 0:i32 (hasExternalUses)
%11:i64 = var
%12:i64 = var
%13 = select %10, %11, %12 (hasExternalUses)
%14:i64 = var
%15 = phi %0, %13, %14
%16 = lshr %15, 61:i64
%17 = or %8, %16
%18 = or %17, 2251799813685248:i64 (hasExternalUses)
%19 = block 3
%20 = block 2
%21:i64 = var
%22 = and %21, 281474976710655:i64 (hasExternalUses)
%23:i64 = var
%24 = phi %20, %22, %23
%25 = shl %24, 3:i64
%26:i32 = var
%27 = select %26, %12, %11 (hasExternalUses)
%28:i64 = var
%29 = phi %20, %27, %28
%30 = lshr %29, 61:i64
%31 = or %25, %30
%32 = or %31, 2251799813685248:i64 (hasExternalUses)
%33:i64 = var
%34 = phi %19, %32, %33, 0:i64
%35 = sub %18, %34
%36:i64 = var
%37 = sub %35, %36 (hasExternalUses)
%38 = ult 2251799813685247:i64, %37
%39:i32 = var
blockpc %0 0 %39 1:i1
%40:i32 = var
blockpc %0 1 %40 1:i1
%41:i32 = var
blockpc %20 0 %41 1:i1
%42:i32 = var
blockpc %20 1 %42 1:i1
infer %38


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 32:i32
infer %2


; start LHS (in $8)
%0 = block 2
%1:i32 = var
%2:i64 = var
%3:i64 = var
%4 = select %1, %2, %3 (hasExternalUses)
%5 = and %4, 281474976710655:i64 (hasExternalUses)
%6:i64 = var
%7 = phi %0, %5, %6
%8 = shl %7, 3:i64
%9:i32 = var
%10 = ne %9, 0:i32 (hasExternalUses)
%11:i64 = var
%12:i64 = var
%13 = select %10, %11, %12 (hasExternalUses)
%14:i64 = var
%15 = phi %0, %13, %14
%16 = lshr %15, 61:i64
%17 = or %8, %16
%18 = or %17, 2251799813685248:i64 (hasExternalUses)
%19 = block 3
%20 = block 2
%21:i64 = var
%22 = and %21, 281474976710655:i64 (hasExternalUses)
%23:i64 = var
%24 = phi %20, %22, %23
%25 = shl %24, 3:i64
%26:i32 = var
%27 = select %26, %12, %11 (hasExternalUses)
%28:i64 = var
%29 = phi %20, %27, %28
%30 = lshr %29, 61:i64
%31 = or %25, %30
%32 = or %31, 2251799813685248:i64 (hasExternalUses)
%33:i64 = var
%34 = phi %19, %32, %33, 0:i64
%35 = sub %18, %34
%36:i64 = var
%37 = sub %35, %36 (hasExternalUses)
%38 = eq %37, 0:i64
%39:i32 = var
blockpc %0 0 %39 1:i1
%40:i32 = var
blockpc %0 1 %40 1:i1
%41:i32 = var
blockpc %20 0 %41 1:i1
%42:i32 = var
blockpc %20 1 %42 1:i1
infer %38


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2 = and %1, 281474976710655:i64 (hasExternalUses)
%3:i64 = var
%4 = phi %0, %2, %3
%5 = shl %4, 3:i64
%6:i32 = var
%7:i64 = var
%8:i64 = var
%9 = select %6, %7, %8 (hasExternalUses)
%10:i64 = var
%11 = phi %0, %9, %10
%12 = lshr %11, 61:i64
%13 = or %5, %12
%14 = or %13, 2251799813685248:i64 (hasExternalUses)
%15 = block 3
%16 = block 2
%17:i64 = var
%18:i64 = var
%19 = phi %16, %17, %18
%20 = shl %19, 3:i64
%21:i64 = var
%22:i64 = var
%23 = phi %16, %21, %22
%24 = lshr %23, 61:i64
%25 = or %20, %24
%26 = or %25, 2251799813685248:i64 (hasExternalUses)
%27:i64 = var
%28 = phi %15, %26, %27, 0:i64
%29 = sub %14, %28
%30:i64 = var
%31 = sub %29, %30 (hasExternalUses)
%32 = eq %31, 0:i64 (hasExternalUses)
%33:i64 = var
%34 = select %32, %33, %31
%35:i32 = var
blockpc %0 0 %35 1:i1
%36:i32 = var
blockpc %0 1 %36 1:i1
%37:i32 = var
blockpc %16 0 %37 1:i1
%38:i32 = var
blockpc %16 1 %38 1:i1
infer %34


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %2
%4 = shl %3, 3:i64
%5:i64 = var
%6:i64 = var
%7 = phi %0, %5, %6
%8 = lshr %7, 61:i64
%9 = or %4, %8
%10 = or %9, 2251799813685248:i64 (hasExternalUses)
%11 = block 3
%12 = block 2
%13:i64 = var
%14:i64 = var
%15 = phi %12, %13, %14
%16 = shl %15, 3:i64
%17:i64 = var
%18:i64 = var
%19 = phi %12, %17, %18
%20 = lshr %19, 61:i64
%21 = or %16, %20
%22 = or %21, 2251799813685248:i64 (hasExternalUses)
%23:i64 = var
%24 = phi %11, %22, %23, 0:i64
%25 = sub %10, %24
%26:i64 = var
%27 = sub %25, %26 (hasExternalUses)
%28 = eq %27, 0:i64 (hasExternalUses)
%29 = shl %7, 3:i64 (hasExternalUses)
%30:i64 = var
%31:i64 = var
%32 = phi %11, %30, %31, 1:i64
%33 = sub %29, %32 (hasExternalUses)
%34 = select %28, %33, %27
%35 = ctlz %34
%36:i32 = var
blockpc %0 0 %36 1:i1
%37:i32 = var
blockpc %0 1 %37 1:i1
%38:i32 = var
blockpc %12 0 %38 1:i1
%39:i32 = var
blockpc %12 1 %39 1:i1
infer %35


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %2
%4 = shl %3, 3:i64
%5:i64 = var
%6:i64 = var
%7 = phi %0, %5, %6
%8 = lshr %7, 61:i64
%9 = or %4, %8
%10 = or %9, 2251799813685248:i64 (hasExternalUses)
%11 = block 3
%12 = block 2
%13:i64 = var
%14:i64 = var
%15 = phi %12, %13, %14
%16 = shl %15, 3:i64
%17:i64 = var
%18:i64 = var
%19 = phi %12, %17, %18
%20 = lshr %19, 61:i64
%21 = or %16, %20
%22 = or %21, 2251799813685248:i64 (hasExternalUses)
%23:i64 = var
%24 = phi %11, %22, %23, 0:i64
%25 = sub %10, %24
%26:i64 = var
%27 = sub %25, %26 (hasExternalUses)
%28 = eq %27, 0:i64 (hasExternalUses)
%29:i32 = zext %28
%30 = shl %29, 6:i32
%31:i32 = var
blockpc %0 0 %31 1:i1
%32:i32 = var
blockpc %0 1 %32 1:i1
%33:i32 = var
blockpc %12 0 %33 1:i1
%34:i32 = var
blockpc %12 1 %34 1:i1
infer %30


; start LHS (in $8)
%0 = block 2
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %2
%4 = shl %3, 3:i64
%5:i64 = var
%6:i64 = var
%7 = phi %0, %5, %6
%8 = lshr %7, 61:i64
%9 = or %4, %8
%10 = or %9, 2251799813685248:i64 (hasExternalUses)
%11 = block 3
%12:i64 = var
%13:i64 = var
%14 = or %12, %13
%15 = or %14, 2251799813685248:i64 (hasExternalUses)
%16:i64 = var
%17 = phi %11, %15, %16, 0:i64
%18 = sub %10, %17
%19:i64 = var
%20 = sub %18, %19 (hasExternalUses)
%21 = eq %20, 0:i64 (hasExternalUses)
%22 = shl %7, 3:i64 (hasExternalUses)
%23 = block 2
%24:i32 = var
%25 = ne %24, 0:i32 (hasExternalUses)
%26:i64 = var
%27:i64 = var
%28 = select %25, %26, %27 (hasExternalUses)
%29:i64 = var
%30 = phi %23, %28, %29
%31 = shl %30, 3:i64 (hasExternalUses)
%32:i64 = var
%33 = phi %11, %31, %32, 1:i64
%34 = sub %22, %33 (hasExternalUses)
%35 = select %21, %34, %20
%36 = ctlz %35
%37:i64 = var
%38 = add %36, %37
%39:i32 = var
blockpc %0 0 %39 1:i1
%40:i32 = var
blockpc %0 1 %40 1:i1
%41:i32 = var
blockpc %23 0 %41 1:i1
%42:i32 = var
blockpc %23 1 %42 1:i1
infer %38


; start LHS (in $8)
%0:i32 = var
%1 = add %0, -12:i32
infer %1


; start LHS (in $8)
%0 = block 2
%1:i32 = var
%2 = and %1, 32767:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 16:i32, %3 (hasExternalUses)
%5 = phi %0, %2, %4
%6:i32 = var
%7 = add %6, -12:i32 (hasExternalUses)
%8 = sub %5, %7
%9 = eq %2, 0:i32
blockpc %0 0 %9 1:i1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %0 1 %11 1:i1
infer %8


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 40:i32
infer %2


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %0, %2 (hasExternalUses)
%14 = and %13, -9223372036854775808:i64
infer %14


; start LHS (in $8)
%0 = block 4
%1 = block 2
%2:i32 = var
%3 = and %2, 32767:i32 (hasExternalUses)
%4:i32 = var
%5 = sub 16:i32, %4 (hasExternalUses)
%6 = phi %1, %3, %5
%7 = add %6, 1:i32 (hasExternalUses)
%8:i32 = var
%9 = add %8, -12:i32 (hasExternalUses)
%10 = sub %6, %9 (hasExternalUses)
%11 = phi %0, %6, %7, %6, %10
%12 = sle 32767:i32, %11
%13 = eq %3, 0:i32
blockpc %1 0 %13 1:i1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %1 1 %15 1:i1
infer %12


; start LHS (in $8)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2:i64 = var
%3 = and %2, 9223372036854775807:i64 (hasExternalUses)
%4 = eq %1, %3
%5:i64 = var
%6:i64 = var
%7 = ult %5, %6
%8:i32 = zext %7
%9 = ult %3, %1
%10:i32 = zext %9
%11 = select %4, %8, %10 (hasExternalUses)
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = select %12, %0, %2 (hasExternalUses)
%14 = and %13, -9223372036854775808:i64 (hasExternalUses)
%15 = or %14, 9223090561878065152:i64
%16 = block 4
%17 = block 2
%18:i32 = var
%19 = and %18, 32767:i32
%20 = eq %19, 0:i32
blockpc %17 0 %20 1:i1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %17 1 %22 1:i1
%23:i32 = var
%24 = sub 16:i32, %23
%25 = phi %17, %19, %24
%26 = add %25, 1:i32
%27:i32 = var
%28 = add %27, -12:i32
%29 = sub %25, %28
%30 = phi %16, %25, %26, %25, %29
%31 = sle 32767:i32, %30
pc %31 1:i1
infer %15


; start LHS (in $8)
%0 = block 4
%1 = block 2
%2:i32 = var
%3 = and %2, 32767:i32 (hasExternalUses)
%4:i32 = var
%5 = sub 16:i32, %4 (hasExternalUses)
%6 = phi %1, %3, %5
%7 = add %6, 1:i32 (hasExternalUses)
%8:i32 = var
%9 = add %8, -12:i32 (hasExternalUses)
%10 = sub %6, %9 (hasExternalUses)
%11 = phi %0, %6, %7, %6, %10
%12 = slt 0:i32, %11
%13 = eq %3, 0:i32
blockpc %1 0 %13 1:i1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %1 1 %15 1:i1
infer %12


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; start LHS (in $8)
%0 = block 4
%1 = block 2
%2:i32 = var
%3 = and %2, 32767:i32 (hasExternalUses)
%4:i32 = var
%5 = sub 16:i32, %4 (hasExternalUses)
%6 = phi %1, %3, %5
%7 = add %6, 1:i32 (hasExternalUses)
%8:i32 = var
%9 = add %8, -12:i32 (hasExternalUses)
%10 = sub %6, %9 (hasExternalUses)
%11 = phi %0, %6, %7, %6, %10
%12 = sub 1:i32, %11
%13 = eq %3, 0:i32
blockpc %1 0 %13 1:i1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %1 1 %15 1:i1
infer %12


; start LHS (in $8)
%0 = block 4
%1 = block 2
%2:i32 = var
%3 = and %2, 32767:i32 (hasExternalUses)
%4:i32 = var
%5 = sub 16:i32, %4 (hasExternalUses)
%6 = phi %1, %3, %5
%7 = add %6, 1:i32 (hasExternalUses)
%8:i32 = var
%9 = add %8, -12:i32 (hasExternalUses)
%10 = sub %6, %9 (hasExternalUses)
%11 = phi %0, %6, %7, %6, %10
%12 = sub 1:i32, %11 (hasExternalUses)
%13 = sub 128:i32, %12
%14 = eq %3, 0:i32
blockpc %1 0 %14 1:i1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %1 1 %16 1:i1
infer %13


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 24:i32
infer %2


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
infer %2


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
%3 = ne %2, 0:i64
infer %3


; start LHS (in $8)
%0:i64 = var
%1:i64 = var
%2 = or %0, %1
infer %2


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 8:i32
infer %2


; start LHS (in $8)
%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i32 = var
%5 = ne %4, 0:i32 (hasExternalUses)
%6:i64 = var
%7:i64 = var
%8 = select %5, %6, %7 (hasExternalUses)
%9:i64 = var
%10 = phi %3, %8, %9
%11 = shl %10, 3:i64 (hasExternalUses)
%12:i64 = var
%13:i64 = var
%14 = or %12, %13 (hasExternalUses)
%15 = phi %2, %11, %14, 1:i64
%16 = block 2
%17 = ne %4, 0:i32 (hasExternalUses)
%18 = select %17, %7, %6 (hasExternalUses)
%19:i64 = var
%20 = phi %16, %18, %19
%21 = shl %20, 3:i64 (hasExternalUses)
%22 = add %15, %21 (hasExternalUses)
%23 = lshr %22, 1:i64
%24:i64 = var
%25:i64 = var
%26 = phi %2, %24, %25, 0:i64
%27:i64 = var
%28 = or %27, 2251799813685248:i64 (hasExternalUses)
%29 = add %26, %28
%30:i64 = var
%31 = add %29, %30 (hasExternalUses)
%32 = shl %31, 63:i64
%33 = or %23, %32
%34:i64 = var
%35 = or %33, %34 (hasExternalUses)
%36:i64 = var
%37:i64 = var
%38 = phi %1, %22, %35, %36, %37
%39:i64 = var
%40 = phi %0, %38, %39
%41 = lshr %40, 3:i64
%42:i32 = var
blockpc %3 0 %42 1:i1
%43:i32 = var
blockpc %3 1 %43 1:i1
%44:i32 = var
blockpc %16 0 %44 1:i1
%45:i32 = var
blockpc %16 1 %45 1:i1
infer %41


; start LHS (in $8)
%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i64 = var
%5:i64 = var
%6 = phi %3, %4, %5
%7 = shl %6, 3:i64
%8:i64 = var
%9:i64 = var
%10 = phi %3, %8, %9
%11 = lshr %10, 61:i64
%12 = or %7, %11
%13 = or %12, 2251799813685248:i64 (hasExternalUses)
%14:i64 = var
%15 = phi %2, %13, %14, 0:i64
%16 = block 2
%17:i64 = var
%18:i64 = var
%19 = phi %16, %17, %18
%20 = shl %19, 3:i64
%21:i64 = var
%22:i64 = var
%23 = phi %16, %21, %22
%24 = lshr %23, 61:i64
%25 = or %20, %24
%26 = or %25, 2251799813685248:i64 (hasExternalUses)
%27 = add %15, %26
%28:i64 = var
%29 = add %27, %28 (hasExternalUses)
%30:i64 = var
%31:i64 = var
%32:i64 = var
%33 = phi %1, %29, %30, %31, %32
%34:i64 = var
%35 = phi %0, %33, %34
%36 = shl %35, 61:i64
%37:i32 = var
blockpc %3 0 %37 1:i1
%38:i32 = var
blockpc %3 1 %38 1:i1
%39:i32 = var
blockpc %16 0 %39 1:i1
%40:i32 = var
blockpc %16 1 %40 1:i1
infer %36


; start LHS (in $8)
%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i32 = var
%5:i64 = var
%6:i64 = var
%7 = select %4, %5, %6 (hasExternalUses)
%8:i64 = var
%9 = phi %3, %7, %8
%10 = shl %9, 3:i64 (hasExternalUses)
%11:i64 = var
%12:i64 = var
%13 = or %11, %12 (hasExternalUses)
%14 = phi %2, %10, %13, 1:i64
%15 = block 2
%16:i32 = var
%17 = ne %16, 0:i32 (hasExternalUses)
%18 = select %17, %6, %5 (hasExternalUses)
%19:i64 = var
%20 = phi %15, %18, %19
%21 = shl %20, 3:i64 (hasExternalUses)
%22 = add %14, %21 (hasExternalUses)
%23 = lshr %22, 1:i64
%24:i64 = var
%25:i64 = var
%26 = phi %2, %24, %25, 0:i64
%27:i64 = var
%28 = add %26, %27
%29:i64 = var
%30 = add %28, %29 (hasExternalUses)
%31 = shl %30, 63:i64
%32 = or %23, %31
%33:i64 = var
%34 = or %32, %33 (hasExternalUses)
%35:i64 = var
%36:i64 = var
%37 = phi %1, %22, %34, %35, %36
%38:i64 = var
%39 = phi %0, %37, %38
%40 = lshr %39, 3:i64
%41:i64 = var
%42 = or %40, %41
%43:i32 = var
blockpc %3 0 %43 1:i1
%44:i32 = var
blockpc %3 1 %44 1:i1
%45:i32 = var
blockpc %15 0 %45 1:i1
%46:i32 = var
blockpc %15 1 %46 1:i1
infer %42


; start LHS (in $8)
%0:i32 = var
%1 = and %0, 7:i32
infer %1


; start LHS (in $8)
%0:i32 = var
%1 = and %0, 7:i32 (hasExternalUses)
%2 = ult 4:i32, %1
infer %2


; start LHS (in $8)
%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i64 = var
%5:i64 = var
%6 = phi %3, %4, %5
%7 = shl %6, 3:i64 (hasExternalUses)
%8:i64 = var
%9:i64 = var
%10 = or %8, %9 (hasExternalUses)
%11 = phi %2, %7, %10, 1:i64
%12 = block 2
%13:i32 = var
%14:i64 = var
%15:i64 = var
%16 = select %13, %14, %15 (hasExternalUses)
%17:i64 = var
%18 = phi %12, %16, %17
%19 = shl %18, 3:i64 (hasExternalUses)
%20 = add %11, %19 (hasExternalUses)
%21 = lshr %20, 1:i64
%22:i64 = var
%23:i64 = var
%24 = add %22, %23 (hasExternalUses)
%25 = shl %24, 63:i64
%26 = or %21, %25
%27 = and %20, 1:i64
%28 = or %26, %27 (hasExternalUses)
%29 = sub %19, %11 (hasExternalUses)
%30:i64 = var
%31 = phi %1, %20, %28, %29, %30
%32:i64 = var
%33 = phi %0, %31, %32
%34 = lshr %33, 3:i64
%35:i64 = var
%36 = or %34, %35 (hasExternalUses)
%37:i64 = var
%38 = add %36, %37
%39:i32 = var
blockpc %3 0 %39 1:i1
%40:i32 = var
blockpc %3 1 %40 1:i1
%41:i32 = var
blockpc %12 0 %41 1:i1
%42:i32 = var
blockpc %12 1 %42 1:i1
infer %38


; start LHS (in $8)
%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i64 = var
%5:i64 = var
%6 = phi %3, %4, %5
%7 = shl %6, 3:i64 (hasExternalUses)
%8:i64 = var
%9:i64 = var
%10 = or %8, %9 (hasExternalUses)
%11 = phi %2, %7, %10, 1:i64
%12 = block 2
%13:i64 = var
%14:i64 = var
%15 = phi %12, %13, %14
%16 = shl %15, 3:i64 (hasExternalUses)
%17 = add %11, %16 (hasExternalUses)
%18 = lshr %17, 1:i64
%19:i64 = var
%20 = shl %19, 63:i64
%21 = or %18, %20
%22 = and %17, 1:i64
%23 = or %21, %22 (hasExternalUses)
%24 = sub %16, %11 (hasExternalUses)
%25:i64 = var
%26 = phi %1, %17, %23, %24, %25
%27:i64 = var
%28:i64 = var
%29 = or %27, %28 (hasExternalUses)
%30 = phi %0, %26, %29
%31 = lshr %30, 3:i64
%32:i64 = var
%33 = or %31, %32 (hasExternalUses)
%34:i64 = var
%35 = add %33, %34 (hasExternalUses)
%36 = and %35, 1:i64
%37:i32 = var
blockpc %3 0 %37 1:i1
%38:i32 = var
blockpc %3 1 %38 1:i1
%39:i32 = var
blockpc %12 0 %39 1:i1
%40:i32 = var
blockpc %12 1 %40 1:i1
infer %36


; start LHS (in $8)
%0:i32 = var
%1 = and %0, 7:i32 (hasExternalUses)
%2 = eq %1, 4:i32
infer %2


; start LHS (in $8)
%0:i32 = var
%1 = and %0, 7:i32 (hasExternalUses)
%2 = eq %1, 4:i32
%3 = block 2
%4 = block 4
%5 = block 3
%6:i64 = var
%7:i64 = var
%8 = phi %5, %6, %7, 1:i64
%9 = block 2
%10:i64 = var
%11:i64 = var
%12 = phi %9, %10, %11
%13 = shl %12, 3:i64 (hasExternalUses)
%14 = add %8, %13 (hasExternalUses)
%15:i64 = var
%16:i64 = var
%17 = or %15, %16
%18 = and %14, 1:i64
%19 = or %17, %18 (hasExternalUses)
%20 = sub %13, %8 (hasExternalUses)
%21:i64 = var
%22 = phi %4, %14, %19, %20, %21
%23:i64 = var
%24:i64 = var
%25 = or %23, %24 (hasExternalUses)
%26 = phi %3, %22, %25
%27 = lshr %26, 3:i64
%28:i64 = var
%29:i64 = var
%30 = phi %5, %28, %29, 0:i64
%31:i64 = var
%32 = add %30, %31
%33:i64 = var
%34 = add %32, %33 (hasExternalUses)
%35:i64 = var
%36:i64 = var
%37:i64 = var
%38 = phi %4, %34, %35, %36, %37
%39:i64 = var
%40 = phi %3, %38, %39
%41 = shl %40, 61:i64
%42 = or %27, %41 (hasExternalUses)
%43:i64 = var
%44 = add %42, %43 (hasExternalUses)
%45 = and %44, 1:i64
%46 = select %2, %45, 0:i64
%47:i32 = var
blockpc %9 0 %47 1:i1
%48:i32 = var
blockpc %9 1 %48 1:i1
infer %46


; start LHS (in $8)
%0:i32 = var
%1 = and %0, 7:i32 (hasExternalUses)
%2 = eq %1, 4:i32
%3 = block 2
%4 = block 4
%5 = block 3
%6:i64 = var
%7:i64 = var
%8 = phi %5, %6, %7, 1:i64
%9:i64 = var
%10 = add %8, %9 (hasExternalUses)
%11:i64 = var
%12:i64 = var
%13 = or %11, %12 (hasExternalUses)
%14 = sub %9, %8 (hasExternalUses)
%15:i64 = var
%16 = phi %4, %10, %13, %14, %15
%17:i64 = var
%18:i64 = var
%19 = or %17, %18 (hasExternalUses)
%20 = phi %3, %16, %19
%21 = lshr %20, 3:i64
%22:i64 = var
%23:i64 = var
%24 = add %22, %23 (hasExternalUses)
%25 = lshr %24, 1:i64 (hasExternalUses)
%26:i64 = var
%27:i64 = var
%28 = sub %26, %27 (hasExternalUses)
%29:i64 = var
%30 = phi %4, %24, %25, %28, %29
%31:i64 = var
%32 = phi %3, %30, %31
%33 = shl %32, 61:i64
%34 = or %21, %33 (hasExternalUses)
%35:i64 = var
%36 = add %34, %35 (hasExternalUses)
%37 = and %36, 1:i64
%38 = select %2, %37, 0:i64 (hasExternalUses)
%39 = add %38, %36
infer %39


; start LHS (in $8)
%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i64 = var
%5:i64 = var
%6 = phi %3, %4, %5
%7 = shl %6, 3:i64
%8:i64 = var
%9:i64 = var
%10 = phi %3, %8, %9
%11 = lshr %10, 61:i64
%12 = or %7, %11
%13 = or %12, 2251799813685248:i64 (hasExternalUses)
%14:i64 = var
%15 = phi %2, %13, %14, 0:i64
%16 = block 2
%17:i64 = var
%18:i64 = var
%19 = phi %16, %17, %18
%20 = shl %19, 3:i64
%21:i64 = var
%22:i64 = var
%23 = phi %16, %21, %22
%24 = lshr %23, 61:i64
%25 = or %20, %24
%26 = or %25, 2251799813685248:i64 (hasExternalUses)
%27 = add %15, %26
%28:i64 = var
%29 = add %27, %28 (hasExternalUses)
%30:i64 = var
%31:i64 = var
%32:i64 = var
%33 = phi %1, %29, %30, %31, %32
%34:i64 = var
%35 = phi %0, %33, %34
%36 = lshr %35, 3:i64
%37:i32 = var
blockpc %3 0 %37 1:i1
%38:i32 = var
blockpc %3 1 %38 1:i1
%39:i32 = var
blockpc %16 0 %39 1:i1
%40:i32 = var
blockpc %16 1 %40 1:i1
infer %36


; start LHS (in $8)
%0 = block 2
%1 = block 4
%2 = block 3
%3:i64 = var
%4:i64 = var
%5 = or %3, %4
%6 = or %5, 2251799813685248:i64 (hasExternalUses)
%7:i64 = var
%8 = phi %2, %6, %7, 0:i64
%9 = block 2
%10:i64 = var
%11:i64 = var
%12 = phi %9, %10, %11
%13 = shl %12, 3:i64
%14:i64 = var
%15:i64 = var
%16 = phi %9, %14, %15
%17 = lshr %16, 61:i64
%18 = or %13, %17
%19 = or %18, 2251799813685248:i64
%20 = add %8, %19
%21:i64 = var
%22 = add %20, %21 (hasExternalUses)
%23 = lshr %22, 1:i64 (hasExternalUses)
%24 = sub %19, %8
%25:i64 = var
%26 = sub %24, %25 (hasExternalUses)
%27:i64 = var
%28 = phi %1, %22, %23, %26, %27
%29:i64 = var
%30 = phi %0, %28, %29
%31 = lshr %30, 3:i64
%32 = and %31, 281474976710655:i64
%33:i32 = var
blockpc %9 0 %33 1:i1
%34:i32 = var
blockpc %9 1 %34 1:i1
infer %32


; start LHS (in $8)
%0 = block 2
%1 = block 4
%2 = block 3
%3:i64 = var
%4 = or %3, 2251799813685248:i64 (hasExternalUses)
%5:i64 = var
%6 = phi %2, %4, %5, 0:i64
%7:i64 = var
%8:i64 = var
%9 = or %7, %8
%10 = or %9, 2251799813685248:i64
%11 = add %6, %10
%12:i64 = var
%13 = add %11, %12 (hasExternalUses)
%14 = lshr %13, 1:i64 (hasExternalUses)
%15 = sub %10, %6
%16:i64 = var
%17 = sub %15, %16 (hasExternalUses)
%18:i64 = var
%19 = phi %1, %13, %14, %17, %18
%20:i64 = var
%21 = phi %0, %19, %20
%22 = lshr %21, 3:i64
%23 = and %22, 281474976710655:i64
%24:i64 = var
%25 = and %24, 9223372036854775807:i64 (hasExternalUses)
%26:i64 = var
%27 = and %26, 9223372036854775807:i64 (hasExternalUses)
%28 = eq %25, %27
%29:i64 = var
%30:i64 = var
%31 = ult %29, %30
%32:i32 = zext %31
%33:i32 = var
%34:i32 = zext %33
%35 = select %28, %32, %34 (hasExternalUses)
%36 = ne %35, 0:i32 (hasExternalUses)
%37 = select %36, %24, %26 (hasExternalUses)
%38 = and %37, -9223372036854775808:i64 (hasExternalUses)
%39 = or %23, %38
infer %39


; start LHS (in $8)
%0:i64 = var
%1 = shl %0, 48:i64
infer %1


; start LHS (in $8)
%0 = block 2
%1 = block 4
%2 = block 3
%3:i64 = var
%4:i64 = var
%5 = phi %2, %3, %4, 0:i64
%6:i64 = var
%7 = or %6, 2251799813685248:i64
%8 = add %5, %7
%9:i64 = var
%10 = add %8, %9 (hasExternalUses)
%11 = lshr %10, 1:i64 (hasExternalUses)
%12 = sub %7, %5
%13:i64 = var
%14 = sub %12, %13 (hasExternalUses)
%15:i64 = var
%16 = phi %1, %10, %11, %14, %15
%17:i64 = var
%18 = phi %0, %16, %17
%19 = lshr %18, 3:i64
%20 = and %19, 281474976710655:i64
%21:i64 = var
%22 = and %21, 9223372036854775807:i64 (hasExternalUses)
%23:i64 = var
%24 = and %23, 9223372036854775807:i64 (hasExternalUses)
%25 = eq %22, %24
%26:i64 = var
%27:i64 = var
%28 = ult %26, %27
%29:i32 = zext %28
%30:i32 = var
%31:i32 = zext %30
%32 = select %25, %29, %31 (hasExternalUses)
%33 = ne %32, 0:i32 (hasExternalUses)
%34 = select %33, %21, %23 (hasExternalUses)
%35 = and %34, -9223372036854775808:i64 (hasExternalUses)
%36 = or %20, %35
%37:i64 = var
%38 = or %36, %37
infer %38


; start LHS (in $8)
%0 = block 2
%1 = block 4
%2 = block 3
%3 = block 2
%4:i64 = var
%5:i64 = var
%6 = phi %3, %4, %5
%7 = shl %6, 3:i64 (hasExternalUses)
%8:i64 = var
%9:i64 = var
%10 = or %8, %9 (hasExternalUses)
%11 = phi %2, %7, %10, 1:i64
%12 = block 2
%13:i64 = var
%14:i64 = var
%15 = phi %12, %13, %14
%16 = shl %15, 3:i64 (hasExternalUses)
%17 = add %11, %16 (hasExternalUses)
%18 = lshr %17, 1:i64
%19:i64 = var
%20 = shl %19, 63:i64
%21 = or %18, %20
%22 = and %17, 1:i64
%23 = or %21, %22 (hasExternalUses)
%24 = sub %16, %11 (hasExternalUses)
%25:i64 = var
%26 = phi %1, %17, %23, %24, %25
%27:i64 = var
%28:i64 = var
%29 = or %27, %28 (hasExternalUses)
%30 = phi %0, %26, %29
%31 = lshr %30, 3:i64
%32:i64 = var
%33 = or %31, %32
%34:i64 = var
%35 = add %33, %34 (hasExternalUses)
%36 = ult %35, %33
%37:i32 = var
blockpc %3 0 %37 1:i1
%38:i32 = var
blockpc %3 1 %38 1:i1
%39:i32 = var
blockpc %12 0 %39 1:i1
%40:i32 = var
blockpc %12 1 %40 1:i1
infer %36


; start LHS (in $8)
%0 = block 2
%1 = block 4
%2 = block 3
%3:i64 = var
%4:i64 = var
%5 = phi %2, %3, %4, 0:i64
%6:i64 = var
%7 = add %5, %6
%8:i64 = var
%9 = add %7, %8 (hasExternalUses)
%10 = lshr %9, 1:i64 (hasExternalUses)
%11 = sub %6, %5
%12:i64 = var
%13 = sub %11, %12 (hasExternalUses)
%14:i64 = var
%15 = phi %1, %9, %10, %13, %14
%16:i64 = var
%17 = phi %0, %15, %16
%18 = lshr %17, 3:i64
%19 = and %18, 281474976710655:i64
%20:i64 = var
%21 = and %20, 9223372036854775807:i64 (hasExternalUses)
%22:i64 = var
%23 = and %22, 9223372036854775807:i64 (hasExternalUses)
%24 = eq %21, %23
%25:i64 = var
%26:i64 = var
%27 = ult %25, %26
%28:i32 = zext %27
%29 = ult %23, %21
%30:i32 = zext %29
%31 = select %24, %28, %30 (hasExternalUses)
%32 = ne %31, 0:i32 (hasExternalUses)
%33 = select %32, %20, %22 (hasExternalUses)
%34 = and %33, -9223372036854775808:i64 (hasExternalUses)
%35 = or %19, %34
%36:i64 = var
%37 = or %35, %36
%38:i64 = var
%39 = add %37, %38
infer %39


; start LHS (in $8)
%0:i32 = var
%1 = and %0, 7:i32 (hasExternalUses)
%2 = eq %1, 4:i32
%3 = block 2
%4 = block 4
%5:i64 = var
%6:i64 = var
%7:i64 = var
%8:i64 = var
%9 = phi %4, %5, %6, %7, %8
%10:i64 = var
%11:i64 = var
%12 = or %10, %11 (hasExternalUses)
%13 = phi %3, %9, %12
%14 = lshr %13, 3:i64
%15:i64 = var
%16:i64 = var
%17:i64 = var
%18:i64 = var
%19 = phi %4, %15, %16, %17, %18
%20:i64 = var
%21 = phi %3, %19, %20
%22 = shl %21, 61:i64
%23 = or %14, %22 (hasExternalUses)
%24:i64 = var
%25 = add %23, %24 (hasExternalUses)
%26 = and %25, 1:i64
%27 = select %2, %26, 0:i64
%28 = add %27, %25 (hasExternalUses)
%29 = ult %28, %27
infer %29


; start LHS (in $8)
%0 = block 2
%1 = block 4
%2:i64 = var
%3:i64 = var
%4 = add %2, %3 (hasExternalUses)
%5 = lshr %4, 1:i64 (hasExternalUses)
%6:i64 = var
%7:i64 = var
%8 = sub %6, %7 (hasExternalUses)
%9:i64 = var
%10 = phi %1, %4, %5, %8, %9
%11:i64 = var
%12 = phi %0, %10, %11
%13 = lshr %12, 3:i64
%14 = and %13, 281474976710655:i64
%15:i64 = var
%16:i64 = var
%17 = eq %15, %16
%18:i32 = var
%19:i32 = zext %18
%20:i32 = var
%21:i32 = zext %20
%22 = select %17, %19, %21 (hasExternalUses)
%23 = ne %22, 0:i32 (hasExternalUses)
%24:i64 = var
%25:i64 = var
%26 = select %23, %24, %25 (hasExternalUses)
%27 = and %26, -9223372036854775808:i64 (hasExternalUses)
%28 = or %14, %27
%29:i64 = var
%30 = shl %29, 48:i64
%31 = or %28, %30
%32:i64 = var
%33 = add %31, %32
%34:i64 = var
%35 = add %33, %34
infer %35


; start LHS (in $8)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 112:i32
infer %2


; function: $9

; start LHS (in $9)
%0:i32 = var
%1 = sub %0, 16:i32
infer %1


; start LHS (in $9)
%0:i64 = var
%1 = xor %0, -9223372036854775808:i64
infer %1


; start LHS (in $9)
%0:i32 = var
%1 = sub %0, 16:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; function: $10

; start LHS (in $10)
%0:i32 = var
%1 = sub %0, 112:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 70:i32
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = sub %0, 112:i32 (hasExternalUses)
%2 = add %1, 71:i32
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = slt %0, 0:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = sub 2147483647:i32, %0
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = sub 2147483647:i32, %0
%2:i32 = var
%3 = slt %1, %2
infer %3


; start LHS (in $10)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = and %0, 255:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = and %0, 255:i32 (hasExternalUses)
%2 = eq %1, 0:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = and %0, 255:i32 (hasExternalUses)
%2 = ne %1, 37:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = and %2, 255:i32
%4 = ne %3, 37:i32
%5:i32 = var
%6 = ne %5, 0:i32
pc %4 1:i1
pc %6 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = and %2, 255:i32
%4 = ne %3, 37:i32
%5:i32 = var
%6 = ne %5, 0:i32
pc %4 1:i1
pc %6 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 37:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = eq %0, 37:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0 = block 3
%1:i32 = var
%2 = add %1, 1:i32
%3:i32 = var
%4 = add %3, -1:i32
%5 = phi %0, %1, %2, %4
%6:i32 = var
%7:i32 = var
%8 = phi %0, %6, %6, %7
%9 = sub %5, %8
%10:i32 = var
%11 = ne %10, 0:i32
pc %11 1:i1
infer %9


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -48:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -48:i32
%2 = ult %1, 10:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -48:i32
%2 = ult %1, 10:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = ne %5, 0:i32
pc %6 1:i1
infer %4


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 36:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -48:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = block 3
%2 = phi %1, 1:i32, 1:i32, 3:i32
%3 = add %0, %2
%4:i32 = var
%5 = ne %4, 0:i32
pc %5 1:i1
infer %3


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -32:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -32:i32 (hasExternalUses)
%2 = ult 31:i32, %1
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -32:i32 (hasExternalUses)
%2 = shl 1:i32, %1
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -32:i32 (hasExternalUses)
%2 = shl 1:i32, %1 (hasExternalUses)
%3 = and %2, 75913:i32
%4:i32 = var
%5 = ne %4, 0:i32
pc %5 1:i1
infer %3


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -32:i32 (hasExternalUses)
%2 = shl 1:i32, %1 (hasExternalUses)
%3 = and %2, 75913:i32
%4 = eq %3, 0:i32
%5:i32 = var
%6 = ne %5, 0:i32
pc %6 1:i1
infer %4


; start LHS (in $10)
%0:i32 = var
%1 = block 3
%2 = phi %1, 1:i32, 1:i32, 3:i32
%3 = add %0, %2
%4:i32 = var
%5 = ne %4, 0:i32
pc %5 1:i1
infer %3


; start LHS (in $10)
%0:i32 = var
%1 = block 3
%2 = phi %1, 1:i32, 1:i32, 3:i32
%3 = add %0, %2
%4 = add %3, 1:i32
%5:i32 = var
%6 = ne %5, 0:i32
pc %6 1:i1
infer %4


; start LHS (in $10)
%0:i32 = var
%1:i32 = var
%2 = or %0, %1
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -32:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -32:i32 (hasExternalUses)
%2 = ule 32:i32, %1
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -32:i32 (hasExternalUses)
%2 = shl 1:i32, %1
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -32:i32 (hasExternalUses)
%2 = shl 1:i32, %1 (hasExternalUses)
%3 = and %2, 75913:i32
%4:i32 = var
%5 = ne %4, 0:i32
pc %5 1:i1
infer %3


; start LHS (in $10)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %1, %2, %2
%4 = eq %3, 42:i32
%5:i32 = var
%6 = ne %5, 0:i32
pc %6 1:i1
infer %4


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -48:i32
%2 = block 4
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %3, %4, %4
%6 = eq %5, 42:i32
%7:i32 = var
%8 = ne %7, 0:i32
pc %6 1:i1
pc %8 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -48:i32
%2 = ult %1, 10:i32
%3 = block 4
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %4, %5, %5
%7 = eq %6, 42:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %7 1:i1
pc %9 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -48:i32
%2 = ult %1, 10:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5 = block 4
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %6, %7, %7
%9 = eq %8, 42:i32
%10:i32 = var
%11 = ne %10, 0:i32
pc %9 1:i1
pc %11 1:i1
infer %4


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 36:i32
%2 = block 4
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %3, %4, %4
%6 = eq %5, 42:i32
%7:i32 = var
%8 = ne %7, 0:i32
pc %6 1:i1
pc %8 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = shl %0, 2:i32
%2 = block 4
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %3, %4, %4
%6 = eq %5, 42:i32
%7:i32 = var
%8 = ne %7, 0:i32
pc %6 1:i1
pc %8 1:i1
infer %1


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7:i32 = var
%8 = shl %7, 2:i32
%9 = add %6, %8
%10:i32 = var
%11:i32 = var
%12 = phi %0, %10, %10, %11, %11
%13 = eq %12, 42:i32
%14:i32 = var
%15 = ne %14, 0:i32
pc %13 1:i1
pc %15 1:i1
infer %9


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7:i32 = var
%8 = shl %7, 2:i32
%9 = add %6, %8
%10 = add %9, -192:i32
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %11, %12, %12
%14 = eq %13, 42:i32
%15:i32 = var
%16 = ne %15, 0:i32
pc %14 1:i1
pc %16 1:i1
infer %10


; start LHS (in $10)
%0:i32 = var
%1 = shl %0, 4:i32
%2 = block 4
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %3, %4, %4
%6 = eq %5, 42:i32
%7:i32 = var
%8 = ne %7, 0:i32
pc %6 1:i1
pc %8 1:i1
infer %1


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7:i32 = var
%8 = shl %7, 4:i32
%9 = add %6, %8
%10:i32 = var
%11:i32 = var
%12 = phi %0, %10, %10, %11, %11
%13 = eq %12, 42:i32
%14:i32 = var
%15 = ne %14, 0:i32
pc %13 1:i1
pc %15 1:i1
infer %9


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7:i32 = var
%8 = shl %7, 4:i32
%9 = add %6, %8
%10 = add %9, -768:i32
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %11, %12, %12
%14 = eq %13, 42:i32
%15:i32 = var
%16 = ne %15, 0:i32
pc %14 1:i1
pc %16 1:i1
infer %10


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 3:i32
%2 = block 4
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %3, %4, %4
%6 = eq %5, 42:i32
%7:i32 = var
%8 = ne %7, 0:i32
pc %6 1:i1
pc %8 1:i1
infer %1


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = add %6, 108:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0:i32 = var
%1 = slt %0, 0:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 4
%3 = block 3
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %4, %5
%7:i32 = var
%8 = phi %2, %6, %6, %7, %6
%9 = ne %8, 0:i32
%10:i32 = var
%11 = ne %10, 0:i32
pc %9 1:i1
pc %11 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = phi %2, 0:i32, %3
%5 = phi %0, %1, %4
%6 = slt -1:i32, %5
%7 = block 4
%8 = block 3
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %9, %10
%12:i32 = var
%13 = phi %7, %11, %11, %12, %11
%14 = ne %13, 0:i32
blockpc %2 0 %14 1:i1
%15 = eq %13, 0:i32
blockpc %2 1 %15 1:i1
%16:i32 = var
%17 = ne %16, 0:i32
pc %17 1:i1
infer %6


; start LHS (in $10)
%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = phi %2, 0:i32, %3
%5 = phi %0, %1, %4
%6 = sub 0:i32, %5
%7 = block 4
%8 = block 3
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %9, %10
%12:i32 = var
%13 = phi %7, %11, %11, %12, %11
%14 = ne %13, 0:i32
blockpc %2 0 %14 1:i1
%15 = eq %13, 0:i32
blockpc %2 1 %15 1:i1
%16:i32 = var
%17 = ne %16, 0:i32
pc %17 1:i1
infer %6


; start LHS (in $10)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = or %1, %2 (hasExternalUses)
%4 = phi %0, 0:i32, 0:i32, %3, %3
%5 = or %4, 8192:i32
%6:i32 = var
%7 = ne %6, 0:i32
pc %7 1:i1
infer %5


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 46:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = eq %0, 42:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -48:i32
%2:i32 = var
%3 = eq %2, 42:i32
%4:i32 = var
%5 = ne %4, 0:i32
pc %3 1:i1
pc %5 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -48:i32
%2 = ult %1, 10:i32
%3:i32 = var
%4 = eq %3, 42:i32
%5:i32 = var
%6 = ne %5, 0:i32
pc %4 1:i1
pc %6 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -48:i32
%2 = ult %1, 10:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = eq %5, 42:i32
%7:i32 = var
%8 = ne %7, 0:i32
pc %6 1:i1
pc %8 1:i1
infer %4


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 36:i32
%2:i32 = var
%3 = eq %2, 42:i32
%4:i32 = var
%5 = ne %4, 0:i32
pc %3 1:i1
pc %5 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = shl %0, 2:i32
%2:i32 = var
%3 = eq %2, 42:i32
%4:i32 = var
%5 = ne %4, 0:i32
pc %3 1:i1
pc %5 1:i1
infer %1


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7:i32 = var
%8 = shl %7, 2:i32
%9 = add %6, %8
%10:i32 = var
%11 = eq %10, 42:i32
%12:i32 = var
%13 = ne %12, 0:i32
pc %11 1:i1
pc %13 1:i1
infer %9


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7:i32 = var
%8 = shl %7, 2:i32
%9 = add %6, %8
%10 = add %9, -192:i32
%11:i32 = var
%12 = eq %11, 42:i32
%13:i32 = var
%14 = ne %13, 0:i32
pc %12 1:i1
pc %14 1:i1
infer %10


; start LHS (in $10)
%0:i32 = var
%1 = shl %0, 4:i32
%2:i32 = var
%3 = eq %2, 42:i32
%4:i32 = var
%5 = ne %4, 0:i32
pc %3 1:i1
pc %5 1:i1
infer %1


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7:i32 = var
%8 = shl %7, 4:i32
%9 = add %6, %8
%10:i32 = var
%11 = eq %10, 42:i32
%12:i32 = var
%13 = ne %12, 0:i32
pc %11 1:i1
pc %13 1:i1
infer %9


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7:i32 = var
%8 = shl %7, 4:i32
%9 = add %6, %8
%10 = add %9, -768:i32
%11:i32 = var
%12 = eq %11, 42:i32
%13:i32 = var
%14 = ne %13, 0:i32
pc %12 1:i1
pc %14 1:i1
infer %10


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = eq %2, 42:i32
%4:i32 = var
%5 = ne %4, 0:i32
pc %3 1:i1
pc %5 1:i1
infer %1


; start LHS (in $10)
%0 = block 3
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = add %3, 3:i32 (hasExternalUses)
%5:i32 = var
%6 = add %5, 1:i32 (hasExternalUses)
%7 = phi %2, %4, %6
%8 = phi %0, %1, %7, %7
%9 = add %8, 1:i32
%10:i32 = var
%11 = ne %10, 0:i32
pc %11 1:i1
infer %9


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = add %6, 108:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 4
%3 = block 3
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %4, %5
%7:i32 = var
%8 = phi %2, %6, %6, %7, %6
%9 = ne %8, 0:i32
%10:i32 = var
%11 = ne %10, 0:i32
pc %9 1:i1
pc %11 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -65:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -65:i32
%2 = ult 57:i32, %1
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = mul %0, 58:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = mul %0, 58:i32
%2:i32 = var
%3 = add %1, %2
%4:i32 = var
%5 = ne %4, 0:i32
pc %5 1:i1
infer %3


; start LHS (in $10)
%0:i32 = var
%1 = mul %0, 58:i32
%2:i32 = var
%3 = add %1, %2
%4 = add %3, 2735:i32
%5:i32 = var
%6 = ne %5, 0:i32
pc %6 1:i1
infer %4


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, -1:i32
%2 = ult %1, 8:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = eq %0, 19:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3 = add %2, -48:i32 (hasExternalUses)
%4 = phi %1, -1:i32, -1:i32, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = sle %6, -1:i32
%8:i32 = var
%9 = eq %8, 19:i32
%10:i32 = var
%11 = ne %10, 0:i32
pc %9 1:i1
pc %11 1:i1
infer %7


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3 = add %2, -48:i32 (hasExternalUses)
%4 = phi %1, -1:i32, -1:i32, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = slt %6, 0:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3 = add %2, -48:i32 (hasExternalUses)
%4 = phi %1, -1:i32, -1:i32, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = shl %6, 2:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = block 3
%8:i32 = var
%9 = add %8, -48:i32 (hasExternalUses)
%10 = phi %7, -1:i32, -1:i32, %9
%11:i32 = var
%12 = phi %0, %10, %10, %11, %10
%13 = shl %12, 2:i32
%14 = add %6, %13
%15:i32 = var
%16 = ne %15, 0:i32
pc %16 1:i1
infer %14


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3 = add %2, -48:i32 (hasExternalUses)
%4 = phi %1, -1:i32, -1:i32, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = shl %6, 4:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = block 3
%8:i32 = var
%9 = add %8, -48:i32 (hasExternalUses)
%10 = phi %7, -1:i32, -1:i32, %9
%11:i32 = var
%12 = phi %0, %10, %10, %11, %10
%13 = shl %12, 4:i32
%14 = add %6, %13
%15:i32 = var
%16 = ne %15, 0:i32
pc %16 1:i1
infer %14


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = block 3
%8:i32 = var
%9 = add %8, -48:i32 (hasExternalUses)
%10 = phi %7, -1:i32, -1:i32, %9
%11:i32 = var
%12 = phi %0, %10, %10, %11, %10
%13 = shl %12, 4:i32
%14 = add %6, %13 (hasExternalUses)
%15 = add %14, 8:i32
%16:i32 = var
%17 = ne %16, 0:i32
pc %17 1:i1
infer %15


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = eq %6, 0:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = eq %6, 0:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = add %6, 80:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0 = block 3
%1 = block 4
%2:i32 = var
%3:i32 = var
%4 = or %2, %3 (hasExternalUses)
%5 = phi %1, 0:i32, 0:i32, %4, %4
%6 = or %5, 8192:i32 (hasExternalUses)
%7 = phi %0, %5, %5, %6
%8 = and %7, -65537:i32
%9:i32 = var
%10 = ne %9, 0:i32
pc %10 1:i1
infer %8


; start LHS (in $10)
%0 = block 3
%1 = block 4
%2:i32 = var
%3:i32 = var
%4 = or %2, %3 (hasExternalUses)
%5 = phi %1, 0:i32, 0:i32, %4, %4
%6 = or %5, 8192:i32 (hasExternalUses)
%7 = phi %0, %5, %5, %6
%8 = and %7, 8192:i32
%9:i32 = var
%10 = ne %9, 0:i32
pc %10 1:i1
infer %8


; start LHS (in $10)
%0 = block 3
%1 = block 4
%2:i32 = var
%3:i32 = var
%4 = or %2, %3 (hasExternalUses)
%5 = phi %1, 0:i32, 0:i32, %4, %4
%6 = or %5, 8192:i32 (hasExternalUses)
%7 = phi %0, %5, %5, %6
%8 = and %7, 8192:i32
%9 = ne %8, 0:i32
infer %9


; start LHS (in $10)
%0 = block 3
%1 = block 4
%2:i32 = var
%3:i32 = var
%4 = or %2, %3
%5 = phi %1, 0:i32, 0:i32, %4, %4
%6 = or %5, 8192:i32
%7 = phi %0, %5, %5, %6
%8 = and %7, 8192:i32
%9 = ne %8, 0:i32
%10 = and %7, -65537:i32 (hasExternalUses)
%11 = select %9, %10, %7
%12:i32 = var
%13 = ne %12, 0:i32
pc %13 1:i1
infer %11


; start LHS (in $10)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -1:i32
%6:i32 = var
%7 = ne %6, 0:i32
pc %7 1:i1
infer %5


; start LHS (in $10)
%0:i32 = var
%1 = and %0, -33:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = and %0, 15:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = and %0, 15:i32
%2 = eq %1, 3:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = and %0, 15:i32
%2 = eq %1, 3:i32
%3 = and %0, -33:i32
%4 = select %2, %3, %0
%5:i32 = var
%6 = ne %5, 0:i32
pc %6 1:i1
infer %4


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32
%2:i32 = var
%3 = and %2, 15:i32
%4 = eq %3, 3:i32
%5 = and %2, -33:i32
%6 = select %4, %5, %2
%7 = select %1, %6, %2
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 15:i32
%4 = eq %3, 3:i32
%5 = and %2, -33:i32
%6 = select %4, %5, %2
%7 = select %1, %6, %2 (hasExternalUses)
%8 = slt 82:i32, %7
%9:i32 = var
%10 = ne %9, 0:i32
pc %10 1:i1
infer %8


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 15:i32
%4 = eq %3, 3:i32
%5 = and %2, -33:i32
%6 = select %4, %5, %2
%7 = select %1, %6, %2 (hasExternalUses)
%8 = add %7, -83:i32
%9 = slt 82:i32, %7
%10:i32 = var
%11 = ne %10, 0:i32
pc %9 1:i1
pc %11 1:i1
infer %8


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 15:i32
%4 = eq %3, 3:i32
%5 = and %2, -33:i32
%6 = select %4, %5, %2
%7 = select %1, %6, %2 (hasExternalUses)
%8 = add %7, -83:i32 (hasExternalUses)
%9 = ult 37:i32, %8
%10 = slt 82:i32, %7
%11:i32 = var
%12 = ne %11, 0:i32
pc %10 1:i1
pc %12 1:i1
infer %9


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 15:i32
%4 = eq %3, 3:i32
%5 = and %2, -33:i32
%6 = select %4, %5, %2
%7 = select %1, %6, %2 (hasExternalUses)
%8 = add %7, -83:i32 (hasExternalUses)
%9 = sub %8, 1:i32
%10 = slt 82:i32, %7
%11:i32 = var
%12 = ne %11, 0:i32
pc %10 1:i1
pc %12 1:i1
infer %9


; start LHS (in $10)
%0:i64 = var
%1 = sle %0, -1:i64
%2:i32 = var
%3 = ne %2, 0:i32
%4:i32 = var
%5 = and %4, 15:i32
%6 = eq %5, 3:i32
%7 = and %4, -33:i32
%8 = select %6, %7, %4
%9 = select %3, %8, %4
%10 = slt 82:i32, %9
%11:i32 = var
%12 = ne %11, 0:i32
pc %10 1:i1
pc %12 1:i1
infer %1


; start LHS (in $10)
%0 = block 3
%1 = block 4
%2:i32 = var
%3:i32 = var
%4 = or %2, %3
%5 = phi %1, 0:i32, 0:i32, %4, %4
%6 = or %5, 8192:i32
%7 = phi %0, %5, %5, %6
%8 = and %7, 8192:i32
%9 = ne %8, 0:i32 (hasExternalUses)
%10 = and %7, -65537:i32 (hasExternalUses)
%11 = select %9, %10, %7 (hasExternalUses)
%12 = and %11, 2048:i32
%13:i32 = var
%14 = ne %13, 0:i32
%15:i32 = var
%16 = and %15, 15:i32
%17 = eq %16, 3:i32
%18 = and %15, -33:i32
%19 = select %17, %18, %15
%20 = select %14, %19, %15
%21 = slt 82:i32, %20
%22:i32 = var
%23 = ne %22, 0:i32
pc %21 1:i1
pc %23 1:i1
infer %12


; start LHS (in $10)
%0 = block 3
%1 = block 4
%2:i32 = var
%3:i32 = var
%4 = or %2, %3
%5 = phi %1, 0:i32, 0:i32, %4, %4
%6 = or %5, 8192:i32
%7 = phi %0, %5, %5, %6
%8 = and %7, 8192:i32
%9 = ne %8, 0:i32 (hasExternalUses)
%10 = and %7, -65537:i32 (hasExternalUses)
%11 = select %9, %10, %7 (hasExternalUses)
%12 = and %11, 1:i32
%13:i32 = var
%14 = ne %13, 0:i32
%15:i32 = var
%16 = and %15, 15:i32
%17 = eq %16, 3:i32
%18 = and %15, -33:i32
%19 = select %17, %18, %15
%20 = select %14, %19, %15
%21 = slt 82:i32, %20
%22:i32 = var
%23 = ne %22, 0:i32
pc %21 1:i1
pc %23 1:i1
infer %12


; start LHS (in $10)
%0 = block 3
%1 = block 4
%2:i32 = var
%3:i32 = var
%4 = or %2, %3
%5 = phi %1, 0:i32, 0:i32, %4, %4
%6 = or %5, 8192:i32
%7 = phi %0, %5, %5, %6
%8 = and %7, 8192:i32
%9 = ne %8, 0:i32 (hasExternalUses)
%10 = and %7, -65537:i32 (hasExternalUses)
%11 = select %9, %10, %7 (hasExternalUses)
%12 = and %11, 1:i32 (hasExternalUses)
%13 = ne %12, 0:i32
infer %13


; start LHS (in $10)
%0 = block 3
%1 = block 4
%2:i32 = var
%3:i32 = var
%4 = or %2, %3
%5 = phi %1, 0:i32, 0:i32, %4, %4
%6 = or %5, 8192:i32
%7 = phi %0, %5, %5, %6
%8 = and %7, 8192:i32
%9 = ne %8, 0:i32 (hasExternalUses)
%10 = and %7, -65537:i32 (hasExternalUses)
%11 = select %9, %10, %7 (hasExternalUses)
%12 = and %11, 1:i32 (hasExternalUses)
%13 = ne %12, 0:i32
%14 = select %13, 3266:i32, 3264:i32
%15:i32 = var
%16 = ne %15, 0:i32
%17:i32 = var
%18 = and %17, 15:i32
%19 = eq %18, 3:i32
%20 = and %17, -33:i32
%21 = select %19, %20, %17
%22 = select %16, %21, %17
%23 = slt 82:i32, %22
%24:i32 = var
%25 = ne %24, 0:i32
pc %23 1:i1
pc %25 1:i1
infer %14


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 15:i32
%4 = eq %3, 3:i32
%5 = and %2, -33:i32
%6 = select %4, %5, %2
%7 = select %1, %6, %2 (hasExternalUses)
%8 = add %7, -69:i32
%9:i32 = var
%10 = ne %9, 0:i32
pc %10 1:i1
infer %8


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 15:i32
%4 = eq %3, 3:i32
%5 = and %2, -33:i32
%6 = select %4, %5, %2
%7 = select %1, %6, %2 (hasExternalUses)
%8 = add %7, -69:i32
%9 = ult %8, 3:i32
%10:i32 = var
%11 = ne %10, 0:i32
pc %11 1:i1
infer %9


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 15:i32
%4 = eq %3, 3:i32
%5 = and %2, -33:i32
%6 = select %4, %5, %2
%7 = select %1, %6, %2 (hasExternalUses)
%8 = eq %7, 65:i32
%9:i32 = var
%10 = ne %9, 0:i32
pc %10 1:i1
infer %8


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 15:i32
%4 = eq %3, 3:i32
%5 = and %2, -33:i32
%6 = select %4, %5, %2
%7 = select %1, %6, %2 (hasExternalUses)
%8 = ne %7, 67:i32
%9:i32 = var
%10 = ne %9, 0:i32
pc %10 1:i1
infer %8


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = add %6, 12:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = add %6, 8:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = add %6, 8:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0:i32 = var
%1 = and %0, 255:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = and %0, 255:i32 (hasExternalUses)
%2 = ult 7:i32, %1
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = and %0, 255:i32 (hasExternalUses)
%2 = sub %1, 1:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0 = block 3
%1 = block 4
%2:i32 = var
%3:i32 = var
%4 = or %2, %3
%5 = phi %1, 0:i32, 0:i32, %4, %4
%6 = or %5, 8192:i32
%7 = phi %0, %5, %5, %6
%8 = and %7, 8192:i32
%9 = ne %8, 0:i32 (hasExternalUses)
%10 = and %7, -65537:i32 (hasExternalUses)
%11 = select %9, %10, %7 (hasExternalUses)
%12 = and %11, 8:i32
%13:i32 = var
%14 = ne %13, 0:i32
pc %14 1:i1
infer %12


; start LHS (in $10)
%0 = block 3
%1 = block 4
%2:i32 = var
%3:i32 = var
%4 = or %2, %3
%5 = phi %1, 0:i32, 0:i32, %4, %4
%6 = or %5, 8192:i32
%7 = phi %0, %5, %5, %6
%8 = and %7, 8192:i32
%9 = ne %8, 0:i32 (hasExternalUses)
%10 = and %7, -65537:i32 (hasExternalUses)
%11 = select %9, %10, %7 (hasExternalUses)
%12 = and %11, 8:i32
%13 = eq %12, 0:i32
%14:i32 = var
%15 = ne %14, 0:i32
pc %15 1:i1
infer %13


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7:i32 = var
%8 = sub %6, %7
%9:i32 = var
%10 = ne %9, 0:i32
pc %10 1:i1
infer %8


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7:i32 = var
%8 = sub %6, %7 (hasExternalUses)
%9 = add %8, 1:i32
%10:i32 = var
%11 = ne %10, 0:i32
pc %11 1:i1
infer %9


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7:i32 = var
%8 = sub %6, %7 (hasExternalUses)
%9 = block 3
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = block 2
%14:i32 = var
%15 = phi %13, %14, 0:i32
%16 = phi %11, %12, %15
%17 = phi %9, -1:i32, %10, %16
%18 = slt %8, %17
%19:i32 = var
%20 = ne %19, 0:i32
pc %20 1:i1
infer %18


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7:i32 = var
%8 = sub %6, %7
%9 = block 3
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = block 2
%14:i32 = var
%15 = phi %13, %14, 0:i32
%16 = phi %11, %12, %15
%17 = phi %9, -1:i32, %10, %16
%18 = slt %8, %17
%19 = add %8, 1:i32
%20 = select %18, %17, %19
%21:i32 = var
%22 = ne %21, 0:i32
pc %22 1:i1
infer %20


; start LHS (in $10)
%0 = block 3
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = phi %2, %3, %6
%8 = phi %0, -1:i32, %1, %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ne %10, 0:i32
pc %11 1:i1
infer %9


; start LHS (in $10)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = add %6, 4:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0:i32 = var
%1 = slt %0, 0:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0 = block 2
%1 = block 3
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = phi %3, %4, %7
%9 = phi %1, -1:i32, %2, %8
%10 = phi %0, -1:i32, %9
%11:i32 = var
%12 = sub %10, %11
%13:i32 = var
%14 = ne %13, 0:i32
pc %14 1:i1
infer %12


; start LHS (in $10)
%0 = block 2
%1 = block 3
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = phi %3, %4, %7
%9 = phi %1, -1:i32, %2, %8
%10 = phi %0, -1:i32, %9
%11:i32 = var
%12 = sub %10, %11
%13:i32 = var
%14 = ult %12, %13
%15:i32 = var
%16 = ne %15, 0:i32
pc %16 1:i1
infer %14


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = block 2
%4 = block 3
%5:i32 = var
%6 = block 2
%7:i32 = var
%8 = block 2
%9:i32 = var
%10 = phi %8, %9, 0:i32
%11 = phi %6, %7, %10
%12 = phi %4, -1:i32, %5, %11
%13 = phi %3, -1:i32, %12
%14 = ult %2, %13
%15:i32 = var
%16 = ne %15, 0:i32
pc %16 1:i1
infer %14


; start LHS (in $10)
%0 = block 3
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = phi %2, %3, %6
%8 = phi %0, -1:i32, %1, %7
%9 = ult 8:i32, %8
%10:i32 = var
%11 = ne %10, 0:i32
pc %11 1:i1
infer %9


; start LHS (in $10)
%0 = block 3
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = phi %2, %3, %6
%8 = phi %0, -1:i32, %1, %7
%9 = ult 8:i32, %8
%10 = select %9, %8, 8:i32
%11:i32 = var
%12 = ne %11, 0:i32
pc %12 1:i1
infer %10


; start LHS (in $10)
%0 = block 3
%1 = block 4
%2:i32 = var
%3:i32 = var
%4 = or %2, %3
%5 = phi %1, 0:i32, 0:i32, %4, %4
%6 = or %5, 8192:i32
%7 = phi %0, %5, %5, %6
%8 = and %7, 8192:i32
%9 = ne %8, 0:i32 (hasExternalUses)
%10 = and %7, -65537:i32 (hasExternalUses)
%11 = select %9, %10, %7 (hasExternalUses)
%12 = or %11, 8:i32
%13:i32 = var
%14 = ne %13, 0:i32
pc %14 1:i1
infer %12


; start LHS (in $10)
%0 = block 2
%1:i32 = var
%2 = ne %1, 0:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, 15:i32
%5 = eq %4, 3:i32
%6 = and %3, -33:i32
%7 = select %5, %6, %3
%8 = select %2, %7, %3 (hasExternalUses)
%9 = phi %0, %8, 120:i32
%10 = and %9, 32:i32
%11:i32 = var
%12 = ne %11, 0:i32
pc %12 1:i1
infer %10


; start LHS (in $10)
%0 = block 2
%1 = block 3
%2 = block 4
%3:i32 = var
%4:i32 = var
%5 = or %3, %4
%6 = phi %2, 0:i32, 0:i32, %5, %5
%7 = or %6, 8192:i32
%8 = phi %1, %6, %6, %7
%9 = and %8, 8192:i32
%10 = ne %9, 0:i32 (hasExternalUses)
%11 = and %8, -65537:i32 (hasExternalUses)
%12 = select %10, %11, %8 (hasExternalUses)
%13 = or %12, 8:i32 (hasExternalUses)
%14 = phi %0, %12, %13
%15 = and %14, 8:i32
%16:i32 = var
%17 = ne %16, 0:i32
pc %17 1:i1
infer %15


; start LHS (in $10)
%0 = block 2
%1 = block 3
%2 = block 4
%3:i32 = var
%4:i32 = var
%5 = or %3, %4
%6 = phi %2, 0:i32, 0:i32, %5, %5
%7 = or %6, 8192:i32
%8 = phi %1, %6, %6, %7
%9 = and %8, 8192:i32
%10 = ne %9, 0:i32 (hasExternalUses)
%11 = and %8, -65537:i32 (hasExternalUses)
%12 = select %10, %11, %8 (hasExternalUses)
%13 = or %12, 8:i32 (hasExternalUses)
%14 = phi %0, %12, %13
%15 = and %14, 8:i32
%16 = eq %15, 0:i32
%17:i32 = var
%18 = ne %17, 0:i32
pc %18 1:i1
infer %16


; start LHS (in $10)
%0:i64 = var
%1 = eq %0, 0:i64
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0 = block 2
%1 = block 3
%2 = block 4
%3:i32 = var
%4:i32 = var
%5 = or %3, %4
%6 = phi %2, 0:i32, 0:i32, %5, %5
%7 = or %6, 8192:i32
%8 = phi %1, %6, %6, %7
%9 = and %8, 8192:i32
%10 = ne %9, 0:i32 (hasExternalUses)
%11 = and %8, -65537:i32 (hasExternalUses)
%12 = select %10, %11, %8 (hasExternalUses)
%13 = or %12, 8:i32 (hasExternalUses)
%14 = phi %0, %12, %13
%15 = and %14, -65537:i32
%16:i32 = var
%17 = ne %16, 0:i32
pc %17 1:i1
infer %15


; start LHS (in $10)
%0 = block 2
%1 = block 3
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = phi %3, %4, %7
%9 = phi %1, -1:i32, %2, %8
%10 = ult 8:i32, %9
%11 = select %10, %9, 8:i32 (hasExternalUses)
%12 = phi %0, %9, %11
%13 = slt -1:i32, %12
%14:i32 = var
%15 = ne %14, 0:i32
pc %15 1:i1
infer %13


; start LHS (in $10)
%0 = block 2
%1 = block 3
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = phi %3, %4, %7
%9 = phi %1, -1:i32, %2, %8
%10 = ult 8:i32, %9
%11 = select %10, %9, 8:i32 (hasExternalUses)
%12 = phi %0, %9, %11
%13 = slt -1:i32, %12
%14 = block 3
%15 = block 4
%16:i32 = var
%17:i32 = var
%18 = or %16, %17
%19 = phi %15, 0:i32, 0:i32, %18, %18
%20 = or %19, 8192:i32
%21 = phi %14, %19, %19, %20
%22 = and %21, 8192:i32
%23 = ne %22, 0:i32 (hasExternalUses)
%24 = and %21, -65537:i32 (hasExternalUses)
%25 = select %23, %24, %21 (hasExternalUses)
%26 = or %25, 8:i32 (hasExternalUses)
%27 = phi %0, %25, %26
%28 = and %27, -65537:i32
%29 = select %13, %28, %27
%30:i32 = var
pc %30 1:i1
infer %29


; start LHS (in $10)
%0 = block 2
%1:i32 = var
%2 = ne %1, 0:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, 15:i32
%5 = eq %4, 3:i32
%6 = and %3, -33:i32
%7 = select %5, %6, %3
%8 = select %2, %7, %3 (hasExternalUses)
%9 = phi %0, %8, 120:i32
%10 = lshr %9, 4:i32
%11:i32 = var
%12 = ne %11, 0:i32
pc %12 1:i1
infer %10


; start LHS (in $10)
%0 = block 2
%1:i32 = var
%2 = ne %1, 0:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, 15:i32
%5 = eq %4, 3:i32
%6 = and %3, -33:i32
%7 = select %5, %6, %3
%8 = select %2, %7, %3 (hasExternalUses)
%9 = phi %0, %8, 120:i32
%10 = lshr %9, 4:i32
%11 = add %10, 3264:i32
%12:i32 = var
%13 = ne %12, 0:i32
pc %13 1:i1
infer %11


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32
%2 = select %1, %0, 3280:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $10)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = ne %2, 0:i32 (hasExternalUses)
%4 = select %3, %2, 3280:i32 (hasExternalUses)
%5 = phi %0, %1, %4
%6 = block 3
%7:i32 = var
%8 = block 2
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = phi %8, %9, %12
%14 = phi %6, -1:i32, %7, %13
%15 = add %5, %14
%16:i32 = var
%17 = ne %16, 0:i32
pc %17 1:i1
infer %15


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = ne %4, 0:i32 (hasExternalUses)
%6 = select %5, %4, 3280:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 3
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = phi %10, %11, %14
%16 = phi %8, -1:i32, %9, %15
%17 = add %7, %16
%18 = select %1, %0, %17
%19:i32 = var
%20 = ne %19, 0:i32
pc %20 1:i1
infer %18


; start LHS (in $10)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = ne %3, 0:i32 (hasExternalUses)
%5 = select %4, %3, 3280:i32 (hasExternalUses)
%6 = phi %1, %2, %5
%7 = sub %0, %6
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = ne %0, 0:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = ne %4, 0:i32 (hasExternalUses)
%6 = select %5, %4, 3280:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = sub %0, %7
%9 = block 3
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = block 2
%14:i32 = var
%15 = phi %13, %14, 0:i32
%16 = phi %11, %12, %15
%17 = phi %9, -1:i32, %10, %16
%18 = select %1, %8, %17
%19:i32 = var
%20 = ne %19, 0:i32
pc %20 1:i1
infer %18


; start LHS (in $10)
%0:i64 = var
%1 = sub 0:i64, %0
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $10)
%0 = block 5
%1 = block 3
%2 = block 4
%3:i32 = var
%4:i32 = var
%5 = or %3, %4
%6 = phi %2, 0:i32, 0:i32, %5, %5
%7 = or %6, 8192:i32
%8 = phi %1, %6, %6, %7
%9 = and %8, 8192:i32
%10 = ne %9, 0:i32 (hasExternalUses)
%11 = and %8, -65537:i32 (hasExternalUses)
%12 = select %10, %11, %8 (hasExternalUses)
%13 = block 2
%14 = or %12, 8:i32 (hasExternalUses)
%15 = phi %13, %12, %14
%16 = phi %0, %12, %12, %15, %15, %12
%17 = and %16, -65537:i32
%18:i32 = var
%19 = ne %18, 0:i32
pc %19 1:i1
infer %17


; start LHS (in $10)
%0 = block 5
%1 = block 3
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = phi %3, %4, %7
%9 = phi %1, -1:i32, %2, %8
%10 = block 4
%11 = block 3
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %12, %13
%15:i32 = var
%16 = phi %10, %14, %14, %15, %14
%17:i32 = var
%18 = sub %16, %17
%19 = slt %18, %9
%20 = add %18, 1:i32
%21 = select %19, %9, %20 (hasExternalUses)
%22 = block 2
%23 = ult 8:i32, %9
%24 = select %23, %9, 8:i32 (hasExternalUses)
%25 = phi %22, %9, %24
%26 = phi %0, %9, %21, %25, %25, %9
%27 = slt -1:i32, %26
%28:i32 = var
%29 = ne %28, 0:i32
pc %29 1:i1
infer %27


; start LHS (in $10)
%0 = block 5
%1 = block 3
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = phi %3, %4, %7
%9 = phi %1, -1:i32, %2, %8
%10 = block 4
%11 = block 3
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %12, %13
%15:i32 = var
%16 = phi %10, %14, %14, %15, %14
%17:i32 = var
%18 = sub %16, %17
%19 = slt %18, %9
%20 = add %18, 1:i32
%21 = select %19, %9, %20 (hasExternalUses)
%22 = block 2
%23 = ult 8:i32, %9
%24 = select %23, %9, 8:i32 (hasExternalUses)
%25 = phi %22, %9, %24
%26 = phi %0, %9, %21, %25, %25, %9
%27 = slt -1:i32, %26
%28 = block 3
%29:i32 = var
%30:i32 = var
%31 = or %29, %30 (hasExternalUses)
%32 = phi %10, 0:i32, 0:i32, %31, %31
%33:i32 = var
%34 = phi %28, %32, %32, %33
%35 = and %34, 8192:i32
%36 = ne %35, 0:i32 (hasExternalUses)
%37:i32 = var
%38 = select %36, %37, %34 (hasExternalUses)
%39:i32 = var
%40 = phi %22, %38, %39
%41 = phi %0, %38, %38, %40, %40, %38
%42 = and %41, -65537:i32
%43 = select %27, %42, %41
%44:i32 = var
pc %44 1:i1
infer %43


; start LHS (in $10)
%0 = block 5
%1:i64 = var
%2:i64 = var
%3 = block 4
%4:i64 = var
%5:i64 = var
%6 = sub 0:i64, %4 (hasExternalUses)
%7 = phi %3, %4, %5, %6, %4
%8 = phi %0, %1, %1, %2, %2, %7
%9 = ne %8, 0:i64
%10:i32 = var
%11 = ne %10, 0:i32
pc %11 1:i1
infer %9


; start LHS (in $10)
%0 = block 5
%1:i64 = var
%2:i64 = var
%3 = block 4
%4:i64 = var
%5:i64 = var
%6 = sub 0:i64, %4 (hasExternalUses)
%7 = phi %3, %4, %5, %6, %4
%8 = phi %0, %1, %1, %2, %2, %7
%9 = eq %8, 0:i64
%10:i32 = var
%11 = ne %10, 0:i32
pc %11 1:i1
infer %9


; start LHS (in $10)
%0 = block 5
%1:i64 = var
%2:i64 = var
%3 = block 4
%4:i64 = var
%5:i64 = var
%6 = sub 0:i64, %4 (hasExternalUses)
%7 = phi %3, %4, %5, %6, %4
%8 = phi %0, %1, %1, %2, %2, %7
%9 = eq %8, 0:i64
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13 = ne %12, 0:i32
pc %13 1:i1
infer %11


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = block 3
%8:i32 = var
%9 = block 5
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %10, %8, %8, %11
%13 = phi %7, %8, %12, %12
%14 = sub %6, %13
%15:i32 = var
%16 = ne %15, 0:i32
pc %16 1:i1
infer %14


; start LHS (in $10)
%0 = block 3
%1 = block 5
%2:i64 = var
%3:i64 = var
%4 = block 4
%5:i64 = var
%6:i64 = var
%7 = sub 0:i64, %5 (hasExternalUses)
%8 = phi %4, %5, %6, %7, %5
%9 = phi %1, %2, %2, %3, %3, %8
%10 = ne %9, 0:i64
%11:i32 = zext %10
%12:i32 = zext %10
%13 = phi %0, 1:i32, %11, %12
%14 = xor %13, 1:i32
%15:i32 = var
%16 = ne %15, 0:i32
pc %16 1:i1
infer %14


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = block 3
%8:i32 = var
%9 = block 5
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %10, %8, %8, %11
%13 = phi %7, %8, %12, %12
%14 = sub %6, %13
%15:i64 = var
%16:i64 = var
%17 = block 4
%18:i64 = var
%19:i64 = var
%20 = sub 0:i64, %18 (hasExternalUses)
%21 = phi %17, %18, %19, %20, %18
%22 = phi %9, %15, %15, %16, %16, %21
%23 = ne %22, 0:i64
%24:i32 = zext %23
%25:i32 = zext %23
%26 = phi %7, 1:i32, %24, %25
%27 = xor %26, 1:i32
%28 = add %14, %27
%29:i32 = var
%30 = ne %29, 0:i32
pc %30 1:i1
infer %28


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = block 3
%8:i32 = var
%9 = block 5
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %10, %8, %8, %11
%13 = phi %7, %8, %12, %12
%14 = sub %6, %13
%15:i64 = var
%16:i64 = var
%17 = block 4
%18:i64 = var
%19:i64 = var
%20 = sub 0:i64, %18 (hasExternalUses)
%21 = phi %17, %18, %19, %20, %18
%22 = phi %9, %15, %15, %16, %16, %21
%23 = ne %22, 0:i64
%24:i32 = zext %23
%25:i32 = zext %23
%26 = phi %7, 1:i32, %24, %25
%27 = xor %26, 1:i32
%28 = add %14, %27 (hasExternalUses)
%29 = block 2
%30 = block 3
%31:i32 = var
%32 = block 2
%33:i32 = var
%34 = block 2
%35:i32 = var
%36 = phi %34, %35, 0:i32
%37 = phi %32, %33, %36
%38 = phi %30, -1:i32, %31, %37
%39:i32 = var
%40 = phi %29, %38, %39
%41:i32 = var
%42 = phi %9, %38, %41, %40, %40, %38
%43 = phi %7, %40, %42, %42
%44 = slt %28, %43
%45:i32 = var
pc %45 1:i1
infer %44


; start LHS (in $10)
%0 = block 4
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5:i32 = var
%6 = phi %0, %4, %4, %5, %4
%7 = block 3
%8:i32 = var
%9 = block 5
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %10, %8, %8, %11
%13 = phi %7, %8, %12, %12
%14 = sub %6, %13
%15:i64 = var
%16:i64 = var
%17 = block 4
%18:i64 = var
%19:i64 = var
%20:i64 = var
%21 = phi %17, %18, %19, %20, %18
%22 = phi %9, %15, %15, %16, %16, %21
%23 = ne %22, 0:i64
%24:i32 = zext %23
%25:i32 = zext %23
%26 = phi %7, 1:i32, %24, %25
%27 = xor %26, 1:i32
%28 = add %14, %27
%29 = block 2
%30 = block 3
%31:i32 = var
%32 = block 2
%33:i32 = var
%34 = block 2
%35:i32 = var
%36 = phi %34, %35, 0:i32
%37 = phi %32, %33, %36
%38 = phi %30, -1:i32, %31, %37
%39:i32 = var
%40 = phi %29, %38, %39
%41:i32 = var
%42 = phi %9, %38, %41, %40, %40, %38
%43 = phi %7, %40, %42, %42
%44 = slt %28, %43
%45 = select %44, %43, %28
%46:i32 = var
pc %46 1:i1
infer %45


; start LHS (in $10)
%0 = block 6
%1 = block 4
%2 = block 3
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %3, %4
%6:i32 = var
%7 = phi %1, %5, %5, %6, %5
%8:i32 = var
%9 = ne %8, 0:i32
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = ne %12, 0:i32 (hasExternalUses)
%14 = select %13, %12, 3280:i32 (hasExternalUses)
%15 = phi %10, %11, %14
%16 = block 3
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, 0:i32
%23 = phi %18, %19, %22
%24 = phi %16, -1:i32, %17, %23
%25 = add %15, %24
%26 = select %9, %8, %25
%27 = phi %0, %7, %7, %7, %7, %26, %7
%28:i32 = var
%29:i32 = var
%30 = phi %2, %28, %28, %29
%31:i32 = var
%32 = phi %1, %30, %30, %31, %30
%33:i32 = var
%34:i32 = var
%35 = phi %2, %33, %33, %34
%36:i32 = var
%37 = phi %1, %35, %35, %36, %35
%38 = block 2
%39 = block 3
%40:i32 = var
%41 = block 5
%42:i32 = var
%43:i32 = var
%44 = phi %41, %42, %42, %40, %40, %43
%45 = phi %39, %40, %44, %44
%46 = phi %38, %7, %45
%47 = phi %0, %32, %32, %32, %37, %15, %46
%48 = sub %27, %47
%49:i32 = var
pc %49 1:i1
infer %48


; start LHS (in $10)
%0 = block 6
%1 = block 3
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = phi %3, %4, %7
%9 = phi %1, -1:i32, %2, %8
%10:i32 = var
%11 = ne %10, 0:i32 (hasExternalUses)
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = ne %14, 0:i32 (hasExternalUses)
%16 = select %15, %14, 3280:i32 (hasExternalUses)
%17 = phi %12, %13, %16
%18 = sub %10, %17
%19 = select %11, %18, %9 (hasExternalUses)
%20 = block 2
%21 = block 4
%22 = block 3
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %23, %24
%26:i32 = var
%27 = phi %21, %25, %25, %26, %25
%28 = block 3
%29:i32 = var
%30 = block 5
%31:i32 = var
%32:i32 = var
%33 = phi %30, %31, %31, %29, %29, %32
%34 = phi %28, %29, %33, %33
%35 = sub %27, %34
%36:i32 = var
%37 = add %35, %36
%38 = block 2
%39:i32 = var
%40 = phi %38, %9, %39
%41:i32 = var
%42 = phi %30, %9, %41, %40, %40, %9
%43 = phi %28, %40, %42, %42
%44 = slt %37, %43
%45 = select %44, %43, %37 (hasExternalUses)
%46 = phi %20, 0:i32, %45
%47 = phi %0, %9, %9, %9, 1:i32, %19, %46
%48:i32 = var
%49 = slt %47, %48
%50:i32 = var
pc %50 1:i1
infer %49


; start LHS (in $10)
%0 = block 6
%1 = block 3
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = phi %3, %4, %7
%9 = phi %1, -1:i32, %2, %8
%10:i32 = var
%11 = ne %10, 0:i32
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = ne %14, 0:i32 (hasExternalUses)
%16 = select %15, %14, 3280:i32 (hasExternalUses)
%17 = phi %12, %13, %16
%18 = sub %10, %17
%19 = select %11, %18, %9
%20 = block 2
%21 = block 4
%22 = block 3
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %23, %24
%26:i32 = var
%27 = phi %21, %25, %25, %26, %25
%28 = block 3
%29:i32 = var
%30 = block 5
%31:i32 = var
%32:i32 = var
%33 = phi %30, %31, %31, %29, %29, %32
%34 = phi %28, %29, %33, %33
%35 = sub %27, %34
%36:i32 = var
%37 = add %35, %36
%38 = block 2
%39:i32 = var
%40 = phi %38, %9, %39
%41:i32 = var
%42 = phi %30, %9, %41, %40, %40, %9
%43 = phi %28, %40, %42, %42
%44 = slt %37, %43
%45 = select %44, %43, %37
%46 = phi %20, 0:i32, %45
%47 = phi %0, %9, %9, %9, 1:i32, %19, %46
%48:i32 = var
%49 = slt %47, %48
%50 = select %49, %48, %47
%51:i32 = var
pc %51 1:i1
infer %50


; start LHS (in $10)
%0 = block 6
%1 = block 2
%2 = block 5
%3 = block 4
%4 = block 3
%5 = block 4
%6:i32 = var
%7 = phi %5, 0:i32, 0:i32, %6, %6
%8:i32 = var
%9 = phi %4, %7, %7, %8
%10 = and %9, 8192:i32
%11 = ne %10, 0:i32 (hasExternalUses)
%12 = and %9, -65537:i32 (hasExternalUses)
%13 = select %11, %12, %9 (hasExternalUses)
%14 = and %13, 1:i32 (hasExternalUses)
%15 = phi %3, %14, 0:i32, 1:i32, 1:i32
%16 = phi %2, 0:i32, 0:i32, 0:i32, 0:i32, %15
%17 = block 3
%18 = phi %17, 2:i32, %16, %16
%19 = phi %1, %16, %18
%20 = phi %0, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %19
%21 = block 3
%22:i32 = var
%23 = block 2
%24:i32 = var
%25 = block 2
%26:i32 = var
%27 = phi %25, %26, 0:i32
%28 = phi %23, %24, %27
%29 = phi %21, -1:i32, %22, %28
%30:i32 = var
%31:i32 = var
%32 = phi %1, 0:i32, %31
%33 = phi %0, %29, %29, %29, 1:i32, %30, %32
%34:i32 = var
%35 = slt %33, %34
%36 = select %35, %34, %33 (hasExternalUses)
%37 = add %20, %36
%38:i32 = var
pc %38 1:i1
infer %37


; start LHS (in $10)
%0 = block 3
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, 0:i32, %5
%7 = phi %2, %3, %6
%8 = sub 0:i32, %7 (hasExternalUses)
%9 = phi %0, %1, %7, %8
%10 = block 6
%11 = block 2
%12 = block 5
%13 = block 4
%14:i32 = var
%15 = ne %14, 0:i32 (hasExternalUses)
%16 = block 4
%17:i32 = var
%18 = phi %16, 0:i32, 0:i32, %17, %17
%19:i32 = var
%20 = phi %0, %18, %18, %19
%21 = and %20, -65537:i32 (hasExternalUses)
%22 = select %15, %21, %20 (hasExternalUses)
%23 = and %22, 1:i32 (hasExternalUses)
%24 = phi %13, %23, 0:i32, 1:i32, 1:i32
%25 = phi %12, 0:i32, 0:i32, 0:i32, 0:i32, %24
%26 = block 3
%27 = phi %26, 2:i32, %25, %25
%28 = phi %11, %25, %27
%29 = phi %10, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %28
%30:i32 = var
%31 = add %29, %30 (hasExternalUses)
%32 = slt %9, %31
%33:i32 = var
blockpc %4 0 %33 1:i1
%34:i32 = var
blockpc %4 1 %34 1:i1
%35:i32 = var
pc %35 1:i1
infer %32


; start LHS (in $10)
%0 = block 3
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, 0:i32, %5
%7 = phi %2, %3, %6
%8 = sub 0:i32, %7 (hasExternalUses)
%9 = phi %0, %1, %7, %8
%10 = block 6
%11 = block 2
%12 = block 5
%13 = block 4
%14:i32 = var
%15:i32 = var
%16 = block 4
%17:i32 = var
%18 = phi %16, 0:i32, 0:i32, %17, %17
%19:i32 = var
%20 = phi %0, %18, %18, %19
%21 = select %14, %15, %20 (hasExternalUses)
%22 = and %21, 1:i32 (hasExternalUses)
%23 = phi %13, %22, 0:i32, 1:i32, 1:i32
%24 = phi %12, 0:i32, 0:i32, 0:i32, 0:i32, %23
%25 = block 3
%26 = phi %25, 2:i32, %24, %24
%27 = phi %11, %24, %26
%28 = phi %10, 0:i32, 0:i32, 0:i32, 0:i32, 0:i32, %27
%29 = block 3
%30:i32 = var
%31 = block 2
%32:i32 = var
%33 = block 2
%34:i32 = var
%35 = phi %33, %34, 0:i32
%36 = phi %31, %32, %35
%37 = phi %29, -1:i32, %30, %36
%38:i32 = var
%39:i32 = var
%40 = phi %11, 0:i32, %39
%41 = phi %10, %37, %37, %37, 1:i32, %38, %40
%42:i32 = var
%43 = slt %41, %42
%44 = select %43, %42, %41 (hasExternalUses)
%45 = add %28, %44 (hasExternalUses)
%46 = slt %9, %45
%47 = select %46, %45, %9
%48:i32 = var
blockpc %4 0 %48 1:i1
%49:i32 = var
blockpc %4 1 %49 1:i1
%50:i32 = var
pc %50 1:i1
infer %47


; start LHS (in $10)
%0 = block 6
%1 = block 3
%2 = block 4
%3:i32 = var
%4:i32 = var
%5 = or %3, %4
%6 = phi %2, 0:i32, 0:i32, %5, %5
%7 = or %6, 8192:i32
%8 = phi %1, %6, %6, %7
%9 = and %8, 8192:i32
%10 = ne %9, 0:i32 (hasExternalUses)
%11 = and %8, -65537:i32 (hasExternalUses)
%12 = select %10, %11, %8 (hasExternalUses)
%13 = block 2
%14 = block 5
%15 = block 3
%16:i32 = var
%17 = block 2
%18:i32 = var
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, 0:i32
%22 = phi %17, %18, %21
%23 = phi %15, -1:i32, %16, %22
%24 = block 3
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %25, %26
%28:i32 = var
%29 = phi %2, %27, %27, %28, %27
%30:i32 = var
%31 = sub %29, %30 (hasExternalUses)
%32 = slt %31, %23
%33:i32 = var
%34 = select %32, %23, %33 (hasExternalUses)
%35 = block 2
%36:i32 = var
%37 = phi %35, %23, %36
%38 = phi %14, %23, %34, %37, %37, %23
%39 = slt -1:i32, %38
%40:i32 = var
%41:i32 = var
%42 = phi %35, %12, %41
%43 = phi %14, %12, %12, %42, %42, %12
%44 = select %39, %40, %43 (hasExternalUses)
%45 = block 3
%46:i32 = var
%47 = phi %45, %46, %44, %44
%48 = phi %13, %44, %47
%49 = phi %0, %12, %12, %12, %11, %11, %48
%50 = xor %49, 65536:i32
%51:i32 = var
pc %51 1:i1
infer %50


; start LHS (in $10)
%0 = block 6
%1 = block 3
%2 = block 4
%3:i32 = var
%4:i32 = var
%5 = or %3, %4
%6 = phi %2, 0:i32, 0:i32, %5, %5
%7 = or %6, 8192:i32
%8 = phi %1, %6, %6, %7
%9 = and %8, 8192:i32
%10 = ne %9, 0:i32 (hasExternalUses)
%11 = and %8, -65537:i32 (hasExternalUses)
%12 = select %10, %11, %8 (hasExternalUses)
%13 = block 2
%14 = block 5
%15 = block 3
%16:i32 = var
%17 = block 2
%18:i32 = var
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, 0:i32
%22 = phi %17, %18, %21
%23 = phi %15, -1:i32, %16, %22
%24 = block 3
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %25, %26
%28:i32 = var
%29 = phi %2, %27, %27, %28, %27
%30:i32 = var
%31 = sub %29, %30 (hasExternalUses)
%32 = slt %31, %23
%33:i32 = var
%34 = select %32, %23, %33 (hasExternalUses)
%35 = block 2
%36:i32 = var
%37 = phi %35, %23, %36
%38 = phi %14, %23, %34, %37, %37, %23
%39 = slt -1:i32, %38
%40:i32 = var
%41:i32 = var
%42 = phi %35, %12, %41
%43 = phi %14, %12, %12, %42, %42, %12
%44 = select %39, %40, %43 (hasExternalUses)
%45 = block 3
%46:i32 = var
%47 = phi %45, %46, %44, %44
%48 = phi %13, %44, %47
%49 = phi %0, %12, %12, %12, %11, %11, %48
%50 = xor %49, 8192:i32
%51:i32 = var
pc %51 1:i1
infer %50


; start LHS (in $10)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 3
%3:i32 = var
%4:i32 = var
%5 = add %4, %3
%6 = phi %2, %3, %5, %3
%7 = ne %6, 0:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %7 1:i1
pc %9 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 3
%3:i32 = var
%4:i32 = var
%5 = add %4, %3
%6 = phi %2, %3, %5, %3
%7 = ne %6, 0:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %7 1:i1
pc %9 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3 = block 3
%4:i32 = var
%5:i32 = var
%6 = add %5, %4
%7 = phi %3, %4, %6, %4
%8 = ne %7, 0:i32
%9:i32 = var
%10 = ne %9, 0:i32
pc %8 1:i1
pc %10 1:i1
infer %2


; start LHS (in $10)
%0 = block 3
%1:i32 = var
%2:i32 = var
%3 = add %2, %1 (hasExternalUses)
%4 = phi %0, %1, %3, %1
%5:i32 = var
%6:i32 = var
%7 = add %5, %6 (hasExternalUses)
%8 = slt %4, %7
%9 = ne %4, 0:i32
%10:i32 = var
%11 = ne %10, 0:i32
pc %9 1:i1
pc %11 1:i1
infer %8


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 3
%3:i32 = var
%4:i32 = var
%5 = add %4, %3
%6 = phi %2, %3, %5, %3
%7 = ne %6, 0:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %7 1:i1
pc %9 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 3
%3:i32 = var
%4:i32 = var
%5 = add %4, %3
%6 = phi %2, %3, %5, %3
%7 = ne %6, 0:i32
%8:i32 = var
%9 = ne %8, 0:i32
pc %7 1:i1
pc %9 1:i1
infer %1


; start LHS (in $10)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = block 3
%4:i32 = var
%5:i32 = var
%6 = add %5, %4 (hasExternalUses)
%7 = phi %3, %4, %6, %4
%8 = ult %2, %7
%9 = ne %7, 0:i32
%10:i32 = var
%11 = ne %10, 0:i32
pc %9 1:i1
pc %11 1:i1
infer %8


; start LHS (in $10)
%0 = block 5
%1:i32 = var
%2:i32 = var
%3 = block 3
%4 = block 4
%5:i32 = var
%6:i32 = var
%7 = or %5, %6
%8 = phi %4, 0:i32, 0:i32, %7, %7
%9 = or %8, 8192:i32
%10 = phi %3, %8, %8, %9
%11 = and %10, 8192:i32
%12 = ne %11, 0:i32 (hasExternalUses)
%13 = and %10, -65537:i32 (hasExternalUses)
%14 = select %12, %13, %10 (hasExternalUses)
%15 = phi %0, %1, %1, %1, %2, %14
%16 = xor %15, 8192:i32
%17:i32 = var
%18 = ne %17, 0:i32
pc %18 1:i1
infer %16


; start LHS (in $10)
%0 = block 5
%1:i32 = var
%2 = phi %0, %1, %1, %1, 0:i32, 0:i32
%3:i32 = var
%4:i32 = var
%5 = block 3
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = phi %9, 0:i32, %10
%12 = phi %7, %8, %11
%13 = sub 0:i32, %12 (hasExternalUses)
%14 = phi %5, %6, %12, %13
%15 = phi %0, %3, %3, %3, %4, %14
%16 = slt %2, %15
%17 = block 4
%18 = block 3
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %19, %20
%22:i32 = var
%23 = phi %17, %21, %21, %22, %21
%24 = ne %23, 0:i32
blockpc %9 0 %24 1:i1
%25 = eq %23, 0:i32
blockpc %9 1 %25 1:i1
%26:i32 = var
%27 = ne %26, 0:i32
pc %27 1:i1
infer %16


; start LHS (in $10)
%0 = block 5
%1:i32 = var
%2 = phi %0, %1, %1, %1, 0:i32, 0:i32
%3:i32 = var
%4:i32 = var
%5 = block 3
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = phi %9, 0:i32, %10
%12 = phi %7, %8, %11
%13 = sub 0:i32, %12 (hasExternalUses)
%14 = phi %5, %6, %12, %13
%15 = phi %0, %3, %3, %3, %4, %14
%16 = slt %2, %15
%17 = select %16, %15, %2
%18 = block 4
%19 = block 3
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %20, %21
%23:i32 = var
%24 = phi %18, %22, %22, %23, %22
%25 = ne %24, 0:i32
blockpc %9 0 %25 1:i1
%26 = eq %24, 0:i32
blockpc %9 1 %26 1:i1
%27:i32 = var
%28 = ne %27, 0:i32
pc %28 1:i1
infer %17


; start LHS (in $10)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 16:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 16:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = ult %1, 10:i32
infer %2


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $10)
%0:i32 = var
%1 = add %0, 1:i32
%2 = ule %1, 9:i32
infer %2


; start LHS (in $10)
%0 = block 9
%1:i32 = var
%2 = block 4
%3 = block 3
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %4, %5
%7:i32 = var
%8 = phi %2, %6, %6, %7, %6
%9:i32 = var
%10:i32 = var
%11:i32 = var
%12 = block 2
%13 = phi %12, %8, %10
%14 = block 4
%15:i32 = var
%16 = phi %14, %8, %8, %8, %15
%17 = phi %0, %1, %8, %8, %9, %10, %11, %13, %11, %16
%18 = add %17, 112:i32
infer %18


; function: $11

; start LHS (in $11)
%0:i32 = var
%1 = sub %0, 48:i32
infer %1


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = sub %0, 48:i32 (hasExternalUses)
%2 = add %1, 32:i32
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = sub %0, 48:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = ule -4095:i32, %0
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = ule -4095:i32, %0
pc %2 1:i1
infer %1


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1 (hasExternalUses)
%3:i32 = var
%4 = add %2, %3
infer %4


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1 (hasExternalUses)
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, -1:i32
%8 = ne %4, %7
%9 = ule -4095:i32, %6
blockpc %5 0 %9 1:i1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %5 1 %11 1:i1
infer %8


; start LHS (in $11)
%0:i32 = var
%1 = sub %0, 48:i32 (hasExternalUses)
%2 = add %1, 32:i32
%3:i32 = var
%4:i32 = var
%5 = sub %3, %4
%6:i32 = var
%7 = add %5, %6
%8 = block 2
%9:i32 = var
%10 = ule -4095:i32, %9
blockpc %8 0 %10 1:i1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1:i1
%13 = phi %8, %9, -1:i32
%14 = ne %7, %13
pc %14 1:i1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 60:i32
%2:i32 = var
%3:i32 = var
%4 = sub %2, %3
%5:i32 = var
%6 = add %4, %5
%7 = block 2
%8:i32 = var
%9 = ule -4095:i32, %8
blockpc %7 0 %9 1:i1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1:i1
%12 = phi %7, %8, -1:i32
%13 = ne %6, %12
pc %13 1:i1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = sle %0, -1:i32
%2:i32 = var
%3:i32 = var
%4 = sub %2, %3
%5:i32 = var
%6 = add %4, %5
%7 = block 2
%8:i32 = var
%9 = ule -4095:i32, %8
blockpc %7 0 %9 1:i1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1:i1
%12 = phi %7, %8, -1:i32
%13 = ne %6, %12
pc %13 1:i1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3:i32 = var
%4 = sub %2, %3
%5:i32 = var
%6 = add %4, %5
%7 = block 2
%8:i32 = var
%9 = ule -4095:i32, %8
blockpc %7 0 %9 1:i1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1:i1
%12 = phi %7, %8, -1:i32
%13 = ne %6, %12
pc %13 1:i1
infer %1


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3:i32 = var
%4:i32 = var
%5 = sub %3, %4
%6:i32 = var
%7 = add %5, %6
%8 = block 2
%9:i32 = var
%10 = ule -4095:i32, %9
blockpc %8 0 %10 1:i1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1:i1
%13 = phi %8, %9, -1:i32
%14 = ne %7, %13
pc %14 1:i1
infer %2


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1 (hasExternalUses)
%3:i32 = var
%4 = add %3, 8:i32
%5 = select %2, %4, %3
%6:i32 = var
%7:i32 = var
%8 = sub %6, %7
%9:i32 = var
%10 = add %8, %9
%11 = block 2
%12:i32 = var
%13 = ule -4095:i32, %12
blockpc %11 0 %13 1:i1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1:i1
%16 = phi %11, %12, -1:i32
%17 = ne %10, %16
pc %17 1:i1
infer %5


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1 (hasExternalUses)
%3 = select %2, %0, 0:i32
%4:i32 = var
%5:i32 = var
%6 = sub %4, %5
%7:i32 = var
%8 = add %6, %7
%9 = block 2
%10:i32 = var
%11 = ule -4095:i32, %10
blockpc %9 0 %11 1:i1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1:i1
%14 = phi %9, %10, -1:i32
%15 = ne %8, %14
pc %15 1:i1
infer %3


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = ult %1, %0 (hasExternalUses)
%3 = select %2, %1, 0:i32
%4 = sub %0, %3
%5:i32 = var
%6:i32 = var
%7 = sub %5, %6
%8:i32 = var
%9 = add %7, %8
%10 = block 2
%11:i32 = var
%12 = ule -4095:i32, %11
blockpc %10 0 %12 1:i1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %10 1 %14 1:i1
%15 = phi %10, %11, -1:i32
%16 = ne %9, %15
pc %16 1:i1
infer %4


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = ult %2, %1 (hasExternalUses)
%4 = select %3, %2, 0:i32
%5 = sub %1, %4 (hasExternalUses)
%6 = add %0, %5
%7:i32 = var
%8:i32 = var
%9 = sub %7, %8
%10:i32 = var
%11 = add %9, %10
%12 = block 2
%13:i32 = var
%14 = ule -4095:i32, %13
blockpc %12 0 %14 1:i1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1:i1
%17 = phi %12, %13, -1:i32
%18 = ne %11, %17
pc %18 1:i1
infer %6


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = ult %2, %1 (hasExternalUses)
%4 = select %3, %2, 0:i32
%5 = sub %1, %4 (hasExternalUses)
%6 = sub %0, %5
%7:i32 = var
%8:i32 = var
%9 = sub %7, %8
%10:i32 = var
%11 = add %9, %10
%12 = block 2
%13:i32 = var
%14 = ule -4095:i32, %13
blockpc %12 0 %14 1:i1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1:i1
%17 = phi %12, %13, -1:i32
%18 = ne %11, %17
pc %18 1:i1
infer %6


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = ult %1, %2 (hasExternalUses)
%4:i32 = zext %3
%5 = sub %0, %4
%6:i32 = var
%7:i32 = var
%8 = sub %6, %7
%9:i32 = var
%10 = add %8, %9
%11 = block 2
%12:i32 = var
%13 = ule -4095:i32, %12
blockpc %11 0 %13 1:i1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1:i1
%16 = phi %11, %12, -1:i32
%17 = ne %10, %16
pc %17 1:i1
infer %5


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3:i32 = var
%4:i32 = var
%5 = sub %3, %4
%6:i32 = var
%7 = add %5, %6
%8 = block 2
%9:i32 = var
%10 = ule -4095:i32, %9
blockpc %8 0 %10 1:i1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1:i1
%13 = phi %8, %9, -1:i32
%14 = ne %7, %13
pc %14 1:i1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = ule -4095:i32, %0
%2:i32 = var
%3:i32 = var
%4 = sub %2, %3
%5:i32 = var
%6 = add %4, %5
%7 = block 2
%8:i32 = var
%9 = ule -4095:i32, %8
blockpc %7 0 %9 1:i1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1:i1
%12 = phi %7, %8, -1:i32
%13 = ne %6, %12
pc %13 1:i1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = ule -4095:i32, %0
%3:i32 = var
%4:i32 = var
%5 = sub %3, %4
%6:i32 = var
%7 = add %5, %6
%8 = block 2
%9:i32 = var
%10 = ule -4095:i32, %9
blockpc %8 0 %10 1:i1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1:i1
%13 = phi %8, %9, -1:i32
%14 = ne %7, %13
pc %2 1:i1
pc %14 1:i1
infer %1


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3 = block 2
%4:i32 = var
%5 = phi %3, %4, -1:i32
%6 = ne %2, %5
%7 = ule -4095:i32, %4
blockpc %3 0 %7 1:i1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %3 1 %9 1:i1
%10:i32 = var
%11:i32 = var
%12 = sub %10, %11
%13:i32 = var
%14 = add %12, %13
%15 = block 2
%16:i32 = var
%17 = ule -4095:i32, %16
blockpc %15 0 %17 1:i1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %15 1 %19 1:i1
%20 = phi %15, %16, -1:i32
%21 = ne %14, %20
pc %21 1:i1
infer %6


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 28:i32
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 20:i32
infer %1


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 28:i32
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = or %0, 32:i32
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = eq %0, 2:i32
infer %1


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
infer %2


; start LHS (in $11)
%0 = block 3
%1:i32 = var
%2 = sub %1, 48:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3, %3
%5 = add %4, 48:i32
infer %5


; function: $12

; start LHS (in $12)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $12)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
infer %2


; start LHS (in $12)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = add %2, -1:i32
infer %3


; start LHS (in $12)
%0:i32 = var
%1 = ult %0, 3:i32
infer %1


; start LHS (in $12)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = add %2, -2:i32
infer %3


; start LHS (in $12)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = add %2, -3:i32
infer %3


; start LHS (in $12)
%0:i32 = var
%1 = ult %0, 7:i32
infer %1


; start LHS (in $12)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = add %2, -4:i32
infer %3


; start LHS (in $12)
%0:i32 = var
%1 = ult %0, 9:i32
infer %1


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
infer %1


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %1, 3:i32
infer %2


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %1, 3:i32 (hasExternalUses)
%3 = add %0, %2
infer %3


; start LHS (in $12)
%0:i32 = var
%1 = and %0, 255:i32
infer %1


; start LHS (in $12)
%0:i32 = var
%1 = and %0, 255:i32
%2 = mul %1, 16843009:i32
infer %2


; start LHS (in $12)
%0:i32 = var
%1:i32 = var
%2 = sub 0:i32, %1
%3 = and %2, 3:i32 (hasExternalUses)
%4 = sub %0, %3
infer %4


; start LHS (in $12)
%0:i32 = var
%1:i32 = var
%2 = sub 0:i32, %1
%3 = and %2, 3:i32 (hasExternalUses)
%4 = sub %0, %3
%5 = and %4, -4:i32
infer %5


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %1, 3:i32
%3 = add %0, %2 (hasExternalUses)
%4:i32 = var
%5 = sub %4, %2
%6 = and %5, -4:i32 (hasExternalUses)
%7 = add %3, %6
infer %7


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %1, 3:i32
%3 = add %0, %2 (hasExternalUses)
%4:i32 = var
%5 = sub %4, %2
%6 = and %5, -4:i32 (hasExternalUses)
%7 = add %3, %6 (hasExternalUses)
%8 = add %7, -4:i32
infer %8


; start LHS (in $12)
%0:i32 = var
%1:i32 = var
%2 = sub 0:i32, %1
%3 = and %2, 3:i32 (hasExternalUses)
%4 = sub %0, %3
%5 = and %4, -4:i32 (hasExternalUses)
%6 = ult %5, 9:i32
infer %6


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %1, 3:i32
%3 = add %0, %2 (hasExternalUses)
%4:i32 = var
%5 = sub %4, %2
%6 = and %5, -4:i32 (hasExternalUses)
%7 = add %3, %6 (hasExternalUses)
%8 = add %7, -8:i32
infer %8


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %1, 3:i32
%3 = add %0, %2 (hasExternalUses)
%4:i32 = var
%5 = sub %4, %2
%6 = and %5, -4:i32 (hasExternalUses)
%7 = add %3, %6 (hasExternalUses)
%8 = add %7, -12:i32
infer %8


; start LHS (in $12)
%0:i32 = var
%1:i32 = var
%2 = sub 0:i32, %1
%3 = and %2, 3:i32 (hasExternalUses)
%4 = sub %0, %3
%5 = and %4, -4:i32 (hasExternalUses)
%6 = ult %5, 25:i32
infer %6


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %1, 3:i32
%3 = add %0, %2 (hasExternalUses)
%4:i32 = var
%5 = sub %4, %2
%6 = and %5, -4:i32 (hasExternalUses)
%7 = add %3, %6 (hasExternalUses)
%8 = add %7, -24:i32
infer %8


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %1, 3:i32
%3 = add %0, %2 (hasExternalUses)
%4:i32 = var
%5 = sub %4, %2
%6 = and %5, -4:i32 (hasExternalUses)
%7 = add %3, %6 (hasExternalUses)
%8 = add %7, -28:i32
infer %8


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %1, 3:i32
%3 = add %0, %2 (hasExternalUses)
%4:i32 = var
%5 = sub %4, %2
%6 = and %5, -4:i32 (hasExternalUses)
%7 = add %3, %6 (hasExternalUses)
%8 = add %7, -20:i32
infer %8


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %1, 3:i32
%3 = add %0, %2 (hasExternalUses)
%4:i32 = var
%5 = sub %4, %2
%6 = and %5, -4:i32 (hasExternalUses)
%7 = add %3, %6 (hasExternalUses)
%8 = add %7, -16:i32
infer %8


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %1, 3:i32 (hasExternalUses)
%3 = add %0, %2 (hasExternalUses)
%4 = and %3, 4:i32
infer %4


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %1, 3:i32 (hasExternalUses)
%3 = add %0, %2 (hasExternalUses)
%4 = and %3, 4:i32
%5 = or %4, 24:i32
infer %5


; start LHS (in $12)
%0:i32 = var
%1:i32 = var
%2 = sub 0:i32, %1
%3 = and %2, 3:i32
%4 = sub %0, %3
%5 = and %4, -4:i32 (hasExternalUses)
%6 = add %1, %3 (hasExternalUses)
%7 = and %6, 4:i32
%8 = or %7, 24:i32 (hasExternalUses)
%9 = sub %5, %8
infer %9


; start LHS (in $12)
%0:i32 = var
%1:i32 = var
%2 = sub 0:i32, %1
%3 = and %2, 3:i32
%4 = sub %0, %3
%5 = and %4, -4:i32 (hasExternalUses)
%6 = add %1, %3 (hasExternalUses)
%7 = and %6, 4:i32
%8 = or %7, 24:i32 (hasExternalUses)
%9 = sub %5, %8 (hasExternalUses)
%10 = ult %9, 32:i32
infer %10


; start LHS (in $12)
%0:i64 = var
%1 = shl %0, 32:i64
infer %1


; start LHS (in $12)
%0:i64 = var
%1 = shl %0, 32:i64
%2 = or %1, %0
infer %2


; start LHS (in $12)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %1, 3:i32 (hasExternalUses)
%3 = add %0, %2 (hasExternalUses)
%4 = and %3, 4:i32
%5 = or %4, 24:i32 (hasExternalUses)
%6 = add %3, %5
infer %6


; start LHS (in $12)
%0:i32 = var
%1 = add %0, 8:i32
infer %1


; start LHS (in $12)
%0:i32 = var
%1 = add %0, 16:i32
infer %1


; start LHS (in $12)
%0:i32 = var
%1 = add %0, 24:i32
infer %1


; start LHS (in $12)
%0:i32 = var
%1 = add %0, 32:i32
infer %1


; start LHS (in $12)
%0:i32 = var
%1 = add %0, -32:i32
infer %1


; start LHS (in $12)
%0:i32 = var
%1 = add %0, -32:i32
%2 = ult 31:i32, %1
infer %2


; function: $13

; start LHS (in $13)
%0:i32 = var
%1 = sub %0, 16:i32
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = sub %0, 16:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; function: $14

; start LHS (in $14)
%0:i32 = var
%1 = sub %0, 32:i32
infer %1


; start LHS (in $14)
%0:i64 = var
%1 = lshr %0, 48:i64
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 32767:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = eq %1, 32767:i32
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = eq %1, 0:i32
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = and %2, 32767:i32
%4 = eq %3, 0:i32
pc %4 1:i1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = sub %0, 32:i32 (hasExternalUses)
%2 = add %1, 16:i32
%3:i32 = var
%4 = and %3, 32767:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = sub %0, 32:i32 (hasExternalUses)
%2 = add %1, 8:i32
%3:i32 = var
%4 = and %3, 32767:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = add %0, -120:i32
%2:i32 = var
%3 = and %2, 32767:i32
%4 = eq %3, 0:i32
pc %4 1:i1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 32767:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 32767:i32
%2 = add %1, -16382:i32
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 32768:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 32768:i32
%2 = or %1, 16382:i32
infer %2


; start LHS (in $14)
%0:i64 = var
%1 = shl %0, 48:i64
infer %1


; start LHS (in $14)
%0:i64 = var
%1 = and %0, 281474976710655:i64
infer %1


; start LHS (in $14)
%0:i64 = var
%1 = shl %0, 48:i64
%2:i64 = var
%3 = and %2, 281474976710655:i64
%4 = or %1, %3
infer %4


; start LHS (in $14)
%0:i32 = var
%1 = sub %0, 32:i32 (hasExternalUses)
%2 = add %1, 32:i32
infer %2


; function: $15

; function: $16

; start LHS (in $16)
%0:i32 = var
%1 = sub %0, 16:i32
infer %1


; start LHS (in $16)
%0:i32 = var
%1 = ult 20:i32, %0
infer %1


; start LHS (in $16)
%0:i32 = var
%1 = add %0, -9:i32
infer %1


; start LHS (in $16)
%0:i32 = var
%1 = add %0, -9:i32 (hasExternalUses)
%2 = ult 9:i32, %1
infer %2


; start LHS (in $16)
%0:i32 = var
%1 = add %0, -9:i32 (hasExternalUses)
%2 = sub %1, 1:i32
infer %2


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 7:i32
infer %1


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 7:i32
%2 = and %1, -8:i32
infer %2


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 7:i32
%2 = and %1, -8:i32 (hasExternalUses)
%3 = add %2, 8:i32
infer %3


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 7:i32
infer %1


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 7:i32
%2 = and %1, -8:i32
infer %2


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 7:i32
%2 = and %1, -8:i32 (hasExternalUses)
%3 = add %2, 8:i32
infer %3


; start LHS (in $16)
%0:i32 = var
%1 = sub %0, 16:i32 (hasExternalUses)
%2 = add %1, 8:i32
infer %2


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 15:i32
infer %1


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 15:i32
%2 = and %1, -16:i32
infer %2


; start LHS (in $16)
%0:i32 = var
%1 = add %0, 15:i32
%2 = and %1, -16:i32 (hasExternalUses)
%3 = add %2, 16:i32
infer %3


; start LHS (in $16)
%0:i32 = var
%1 = sub %0, 16:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; function: $17

; start LHS (in $17)
%0:i32 = var
%1 = add %0, -48:i32
infer %1


; start LHS (in $17)
%0:i32 = var
%1 = add %0, -48:i32
%2 = ult %1, 10:i32
infer %2


; start LHS (in $17)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = add %2, -48:i32
%4 = ult %3, 10:i32
pc %4 1:i1
infer %1


; start LHS (in $17)
%0:i32 = var
%1 = mul %0, 10:i32
%2:i32 = var
%3 = add %2, -48:i32
%4 = ult %3, 10:i32
pc %4 1:i1
infer %1


; start LHS (in $17)
%0:i32 = var
%1:i32 = var
%2 = mul %1, 10:i32
%3 = add %0, %2
%4:i32 = var
%5 = add %4, -48:i32
%6 = ult %5, 10:i32
pc %6 1:i1
infer %3


; start LHS (in $17)
%0:i32 = var
%1:i32 = var
%2 = mul %1, 10:i32
%3 = add %0, %2
%4 = add %3, -48:i32
%5:i32 = var
%6 = add %5, -48:i32
%7 = ult %6, 10:i32
pc %7 1:i1
infer %4


; start LHS (in $17)
%0:i32 = var
%1 = add %0, -48:i32
%2:i32 = var
%3 = add %2, -48:i32
%4 = ult %3, 10:i32
pc %4 1:i1
infer %1


; start LHS (in $17)
%0:i32 = var
%1 = add %0, -48:i32
%2 = ult %1, 10:i32
%3:i32 = var
%4 = add %3, -48:i32
%5 = ult %4, 10:i32
pc %5 1:i1
infer %2


; function: $18

; start LHS (in $18)
%0:i32 = var
%1 = sub %0, 288:i32
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = sub %0, 288:i32 (hasExternalUses)
%2 = add %1, 240:i32
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = sub %0, 288:i32 (hasExternalUses)
%2 = add %1, 280:i32
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = sub %0, 288:i32 (hasExternalUses)
%2 = add %1, 80:i32
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = sub %0, 288:i32 (hasExternalUses)
%2 = add %1, 240:i32
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = slt -1:i32, %0
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = sle 0:i32, %0
%2:i32 = var
%3 = slt -1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = sle %0, 0:i32
%2:i32 = var
%3 = slt -1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = and %0, -33:i32
%2:i32 = var
%3 = sle %2, 0:i32
%4:i32 = var
%5 = slt -1:i32, %4
pc %3 1:i1
pc %5 1:i1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = and %0, 32:i32
%2:i32 = var
%3 = slt -1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = sub %0, 288:i32 (hasExternalUses)
%2 = add %1, 280:i32
%3:i32 = var
%4 = ne %3, 0:i32
%5:i32 = var
%6 = slt -1:i32, %5
pc %4 1:i1
pc %6 1:i1
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = sub %0, 288:i32 (hasExternalUses)
%2 = add %1, 80:i32
%3:i32 = var
%4 = ne %3, 0:i32
%5:i32 = var
%6 = slt -1:i32, %5
pc %4 1:i1
pc %6 1:i1
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = sub %0, 288:i32 (hasExternalUses)
%2 = add %1, 240:i32
%3:i32 = var
%4 = ne %3, 0:i32
%5:i32 = var
%6 = slt -1:i32, %5
pc %4 1:i1
pc %6 1:i1
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = add %0, 48:i32
%2:i32 = var
%3 = slt -1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = sub %0, 288:i32 (hasExternalUses)
%2 = add %1, 80:i32
%3:i32 = var
%4 = slt -1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = sub %0, 288:i32 (hasExternalUses)
%2 = add %1, 280:i32
%3:i32 = var
%4 = slt -1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = sub %0, 288:i32 (hasExternalUses)
%2 = add %1, 80:i32
%3:i32 = var
%4 = slt -1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = sub %0, 288:i32 (hasExternalUses)
%2 = add %1, 240:i32
%3:i32 = var
%4 = slt -1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = slt -1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = add %0, 44:i32
%2:i32 = var
%3 = slt -1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = slt -1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = add %0, 28:i32
%2:i32 = var
%3 = slt -1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = slt -1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = ne %0, 0:i32
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = ne %0, 0:i32
%2:i32 = var
%3 = select %1, %2, -1:i32
%4:i32 = var
%5 = slt -1:i32, %4
pc %5 1:i1
infer %3


; start LHS (in $18)
%0:i32 = var
%1:i32 = var
%2 = and %1, 32:i32
%3 = or %0, %2
%4:i32 = var
%5 = slt -1:i32, %4
pc %5 1:i1
infer %3


; start LHS (in $18)
%0:i32 = var
%1 = and %0, 32:i32
%2:i32 = var
%3 = slt -1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = and %0, 32:i32
%2 = ne %1, 0:i32
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = and %0, 32:i32
%2 = ne %1, 0:i32
%3 = block 3
%4:i32 = var
%5:i32 = var
%6:i32 = var
%7 = ne %6, 0:i32
%8 = select %7, %5, -1:i32
%9 = phi %3, %4, %5, %8
%10 = select %2, -1:i32, %9
%11:i32 = var
%12 = slt -1:i32, %11
pc %12 1:i1
infer %10


; start LHS (in $18)
%0:i32 = var
%1 = sub %0, 288:i32 (hasExternalUses)
%2 = add %1, 288:i32
infer %2


; function: $19

; start LHS (in $19)
%0:i64 = var
%1 = and %0, 281474976710655:i64
infer %1


; start LHS (in $19)
%0:i64 = var
%1 = lshr %0, 48:i64
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = and %0, 32767:i32
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = ne %1, 32767:i32
infer %2


; start LHS (in $19)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2:i64 = var
%3 = or %1, %2
%4:i32 = var
%5 = and %4, 32767:i32
%6 = ne %5, 32767:i32
pc %6 1:i1
infer %3


; start LHS (in $19)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2:i64 = var
%3 = or %1, %2
%4 = eq %3, 0:i64
%5:i32 = var
%6 = and %5, 32767:i32
%7 = ne %6, 32767:i32
pc %7 1:i1
infer %4


; start LHS (in $19)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2:i64 = var
%3 = or %1, %2
%4 = eq %3, 0:i64
%5 = select %4, 2:i32, 3:i32
%6:i32 = var
%7 = and %6, 32767:i32
%8 = ne %7, 32767:i32
pc %8 1:i1
infer %5


; start LHS (in $19)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2:i64 = var
%3 = or %1, %2
infer %3


; start LHS (in $19)
%0:i64 = var
%1 = and %0, 281474976710655:i64 (hasExternalUses)
%2:i64 = var
%3 = or %1, %2
%4 = eq %3, 0:i64
infer %4


; function: $20

; start LHS (in $20)
%0:i32 = var
%1 = sub %0, 32:i32
infer %1


; start LHS (in $20)
%0:i32 = var
%1 = and %0, 64:i32
infer %1


; start LHS (in $20)
%0:i32 = var
%1 = sub %0, 32:i32 (hasExternalUses)
%2 = add %1, 24:i32
infer %2


; start LHS (in $20)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $20)
%0:i32 = var
%1 = sub %0, 32:i32 (hasExternalUses)
%2 = add %1, 32:i32
infer %2


; function: $21

; start LHS (in $21)
%0:i32 = var
%1 = sub %0, 32:i32
infer %1


; start LHS (in $21)
%0:i32 = var
%1 = sub %0, 32:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; start LHS (in $21)
%0:i32 = var
%1 = sub %0, 32:i32 (hasExternalUses)
%2 = add %1, 28:i32
infer %2


; start LHS (in $21)
%0:i32 = var
%1 = ule -4095:i32, %0
infer %1


; start LHS (in $21)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = ule -4095:i32, %0
pc %2 1:i1
infer %1


; start LHS (in $21)
%0 = block 2
%1:i32 = var
%2 = phi %0, %1, -1:i32
%3 = sle 0:i32, %2
%4 = ule -4095:i32, %1
blockpc %0 0 %4 1:i1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %0 1 %6 1:i1
infer %3


; start LHS (in $21)
%0:i32 = var
%1 = sub %0, 32:i32 (hasExternalUses)
%2 = add %1, 32:i32
infer %2


; function: $22

; function: $23

; start LHS (in $23)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
infer %2


; start LHS (in $23)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3 = and %2, -16:i32
infer %3


; function: $24

; function: $25

; start LHS (in $25)
%0:i32 = var
%1 = sub %0, 16:i32
infer %1


; start LHS (in $25)
%0:i32 = var
%1 = ctlz %0
%2 = ne %0, 0:i32
pc %2 1:i1
infer %1


; start LHS (in $25)
%0:i32 = var
%1 = ctlz %0 (hasExternalUses)
%2 = sub 0:i32, %1
%3 = ne %0, 0:i32
pc %3 1:i1
infer %2


; start LHS (in $25)
%0:i32 = var
%1 = ctlz %0 (hasExternalUses)
%2 = sub 0:i32, %1
%3 = sub 81:i32, %2
%4 = ne %0, 0:i32
pc %4 1:i1
infer %3


; start LHS (in $25)
%0:i32 = var
%1 = sub %0, 16:i32 (hasExternalUses)
%2 = add %1, 8:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $25)
%0:i64 = var
%1 = xor %0, 281474976710656:i64
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $25)
%0:i32 = var
%1 = ctlz %0 (hasExternalUses)
%2 = sub 16414:i32, %1
%3 = ne %0, 0:i32
pc %3 1:i1
infer %2


; start LHS (in $25)
%0:i64 = var
%1 = shl %0, 48:i64
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $25)
%0:i64 = var
%1 = xor %0, 281474976710656:i64
%2:i64 = var
%3 = shl %2, 48:i64
%4 = add %1, %3
%5:i32 = var
%6 = ne %5, 0:i32
pc %6 1:i1
infer %4


; start LHS (in $25)
%0:i32 = var
%1 = sub %0, 16:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; function: $26

; start LHS (in $26)
%0:i32 = var
%1 = sub %0, 16:i32
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = ashr %0, 31:i32
%2 = ne %0, 0:i32
pc %2 1:i1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = ashr %0, 31:i32 (hasExternalUses)
%2 = add %0, %1
%3 = ne %0, 0:i32
pc %3 1:i1
infer %2


; start LHS (in $26)
%0:i32 = var
%1 = ashr %0, 31:i32
%2 = add %0, %1
%3 = xor %2, %1
%4 = ne %0, 0:i32
pc %4 1:i1
infer %3


; start LHS (in $26)
%0:i32 = var
%1 = ashr %0, 31:i32
%2 = add %0, %1
%3 = xor %2, %1 (hasExternalUses)
%4 = ctlz %3
%5 = ne %0, 0:i32
pc %5 1:i1
infer %4


; start LHS (in $26)
%0:i32 = var
%1 = ashr %0, 31:i32
%2 = add %0, %1
%3 = xor %2, %1 (hasExternalUses)
%4 = ctlz %3 (hasExternalUses)
%5 = sub 0:i32, %4
%6 = ne %0, 0:i32
pc %6 1:i1
infer %5


; start LHS (in $26)
%0:i32 = var
%1 = ashr %0, 31:i32
%2 = add %0, %1
%3 = xor %2, %1 (hasExternalUses)
%4 = ctlz %3 (hasExternalUses)
%5 = sub 0:i32, %4
%6 = sub 81:i32, %5
%7 = ne %0, 0:i32
pc %7 1:i1
infer %6


; start LHS (in $26)
%0:i32 = var
%1 = sub %0, 16:i32 (hasExternalUses)
%2 = add %1, 8:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $26)
%0:i64 = var
%1 = xor %0, 281474976710656:i64
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = ashr %0, 31:i32
%2 = add %0, %1
%3 = xor %2, %1 (hasExternalUses)
%4 = ctlz %3 (hasExternalUses)
%5 = sub 16414:i32, %4
%6 = ne %0, 0:i32
pc %6 1:i1
infer %5


; start LHS (in $26)
%0:i64 = var
%1 = shl %0, 48:i64
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $26)
%0:i64 = var
%1 = xor %0, 281474976710656:i64
%2:i64 = var
%3 = shl %2, 48:i64
%4 = add %1, %3
%5:i32 = var
%6 = ne %5, 0:i32
pc %6 1:i1
infer %4


; start LHS (in $26)
%0:i32 = var
%1 = and %0, -2147483648:i32
%2 = ne %0, 0:i32
pc %2 1:i1
infer %1


; start LHS (in $26)
%0:i64 = var
%1 = shl %0, 32:i64
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $26)
%0:i64 = var
%1 = xor %0, 281474976710656:i64
%2:i64 = var
%3 = shl %2, 48:i64
%4 = add %1, %3
%5:i64 = var
%6 = shl %5, 32:i64
%7 = or %4, %6
%8:i32 = var
%9 = ne %8, 0:i32
pc %9 1:i1
infer %7


; start LHS (in $26)
%0:i32 = var
%1 = sub %0, 16:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; function: $27

; start LHS (in $27)
%0:i32 = var
%1 = sub %0, 16:i32
infer %1


; start LHS (in $27)
%0:i64 = var
%1 = slt %0, 0:i64
infer %1


; start LHS (in $27)
%0:i64 = var
%1 = lshr %0, 48:i64
infer %1


; start LHS (in $27)
%0:i32 = var
%1 = and %0, 32767:i32
infer %1


; start LHS (in $27)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = ult %1, 16383:i32
infer %2


; start LHS (in $27)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = add %1, -16383:i32
infer %2


; start LHS (in $27)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = add %1, -16383:i32
%3 = ult 31:i32, %2
infer %3


; start LHS (in $27)
%0:i64 = var
%1 = and %0, 281474976710655:i64
infer %1


; start LHS (in $27)
%0:i64 = var
%1 = and %0, 281474976710655:i64
%2 = or %1, 281474976710656:i64
infer %2


; start LHS (in $27)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = sub 16495:i32, %1
infer %2


; start LHS (in $27)
%0:i32 = var
%1 = sub %0, 16:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; function: $28

; start LHS (in $28)
%0:i32 = var
%1 = sub %0, 16:i32
infer %1


; start LHS (in $28)
%0:i64 = var
%1 = lshr %0, 48:i64
infer %1


; start LHS (in $28)
%0:i32 = var
%1 = and %0, 32767:i32
infer %1


; start LHS (in $28)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = ult %1, 16383:i32
infer %2


; start LHS (in $28)
%0:i64 = var
%1 = lshr %0, 62:i64
infer %1


; start LHS (in $28)
%0:i32 = var
%1 = xor %0, -1:i32
infer %1


; start LHS (in $28)
%0:i32 = var
%1 = xor %0, -1:i32
%2 = and %1, 2:i32
infer %2


; start LHS (in $28)
%0:i32 = var
%1 = xor %0, -1:i32
%2 = and %1, 2:i32
%3 = add %2, -1:i32
infer %3


; start LHS (in $28)
%0:i32 = var
%1 = xor %0, -1:i32
%2 = and %1, 2:i32
%3 = add %2, -1:i32 (hasExternalUses)
%4 = eq %3, 1:i32
infer %4


; start LHS (in $28)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = add %1, -16383:i32
infer %2


; start LHS (in $28)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = add %1, -16383:i32
%3 = ule 32:i32, %2
infer %3


; start LHS (in $28)
%0:i32 = var
%1 = xor %0, -1:i32
%2 = and %1, 2:i32
%3 = add %2, -1:i32 (hasExternalUses)
%4 = eq %3, 1:i32
%5 = select %4, 2147483647:i32, -2147483648:i32
infer %5


; start LHS (in $28)
%0:i64 = var
%1 = and %0, 281474976710655:i64
infer %1


; start LHS (in $28)
%0:i64 = var
%1 = and %0, 281474976710655:i64
%2 = or %1, 281474976710656:i64
infer %2


; start LHS (in $28)
%0:i32 = var
%1 = and %0, 32767:i32 (hasExternalUses)
%2 = sub 16495:i32, %1
infer %2


; start LHS (in $28)
%0:i32 = var
%1 = xor %0, -1:i32
%2 = and %1, 2:i32
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = mul %3, %4
infer %5


; start LHS (in $28)
%0:i32 = var
%1 = sub %0, 16:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; function: $29

; start LHS (in $29)
%0:i32 = var
%1 = sub %0, 16:i32
infer %1


; start LHS (in $29)
%0:i64 = var
%1 = and %0, -9223372036854775808:i64
infer %1


; start LHS (in $29)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64
infer %1


; start LHS (in $29)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = add %1, -4503599627370496:i64
infer %2


; start LHS (in $29)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = add %1, -4503599627370496:i64
%3 = ule %2, 9214364837600034815:i64
infer %3


; start LHS (in $29)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = shl %1, 60:i64
%3 = add %1, -4503599627370496:i64
%4 = ule %3, 9214364837600034815:i64
pc %4 1:i1
infer %2


; start LHS (in $29)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = lshr %1, 4:i64
%3 = add %1, -4503599627370496:i64
%4 = ule %3, 9214364837600034815:i64
pc %4 1:i1
infer %2


; start LHS (in $29)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = lshr %1, 4:i64
%3 = add %2, 4323455642275676160:i64
%4 = add %1, -4503599627370496:i64
%5 = ule %4, 9214364837600034815:i64
pc %5 1:i1
infer %3


; start LHS (in $29)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = ule 9218868437227405312:i64, %1
infer %2


; start LHS (in $29)
%0:i64 = var
%1 = shl %0, 60:i64
%2 = and %0, 9223372036854775807:i64
%3 = ule 9218868437227405312:i64, %2
pc %3 1:i1
infer %1


; start LHS (in $29)
%0:i64 = var
%1 = lshr %0, 4:i64
%2 = and %0, 9223372036854775807:i64
%3 = ule 9218868437227405312:i64, %2
pc %3 1:i1
infer %1


; start LHS (in $29)
%0:i64 = var
%1 = lshr %0, 4:i64
%2 = or %1, 9223090561878065152:i64
%3 = and %0, 9223372036854775807:i64
%4 = ule 9218868437227405312:i64, %3
pc %4 1:i1
infer %2


; start LHS (in $29)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 0:i64
infer %2


; start LHS (in $29)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 0:i64
%3:i32 = zext %2
%4 = eq %3, 0:i32
infer %4


; start LHS (in $29)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = ule 4294967296:i64, %1
%3 = eq %1, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $29)
%0:i32 = var
%1 = ctlz %0
%2:i64 = var
%3 = and %2, 9223372036854775807:i64
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1:i1
infer %1


; start LHS (in $29)
%0:i32 = var
%1 = ctlz %0
%2 = add %1, 32:i32
%3:i64 = var
%4 = and %3, 9223372036854775807:i64
%5 = eq %4, 0:i64
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1:i1
infer %2


; start LHS (in $29)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = lshr %1, 32:i64
infer %2


; start LHS (in $29)
%0:i32 = var
%1 = ctlz %0
infer %1


; start LHS (in $29)
%0 = block 2
%1:i32 = var
%2 = ctlz %1
%3 = add %2, 32:i32 (hasExternalUses)
%4:i32 = var
%5 = ctlz %4 (hasExternalUses)
%6 = phi %0, %3, %5
%7 = add %6, 49:i32
infer %7


; start LHS (in $29)
%0:i32 = var
%1 = sub %0, 16:i32 (hasExternalUses)
%2 = add %1, 8:i32
infer %2


; start LHS (in $29)
%0:i64 = var
%1 = xor %0, 281474976710656:i64
infer %1


; start LHS (in $29)
%0 = block 2
%1:i32 = var
%2 = ctlz %1
%3 = add %2, 32:i32 (hasExternalUses)
%4:i32 = var
%5 = ctlz %4 (hasExternalUses)
%6 = phi %0, %3, %5
%7 = sub 15372:i32, %6
infer %7


; start LHS (in $29)
%0:i64 = var
%1 = shl %0, 48:i64
infer %1


; start LHS (in $29)
%0:i64 = var
%1 = xor %0, 281474976710656:i64
%2:i64 = var
%3 = shl %2, 48:i64
%4 = or %1, %3
infer %4


; start LHS (in $29)
%0 = block 4
%1:i64 = var
%2 = and %1, 9223372036854775807:i64 (hasExternalUses)
%3 = lshr %2, 4:i64
%4 = add %3, 4323455642275676160:i64
%5 = lshr %1, 4:i64
%6 = or %5, 9223090561878065152:i64
%7:i64 = var
%8 = xor %7, 281474976710656:i64
%9:i64 = var
%10 = shl %9, 48:i64
%11 = or %8, %10
%12 = phi %0, %4, %6, 0:i64, %11
%13 = and %1, -9223372036854775808:i64
%14 = or %12, %13
infer %14


; start LHS (in $29)
%0:i32 = var
%1 = sub %0, 16:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; function: $30

; start LHS (in $30)
%0:i64 = var
%1 = ne %0, 0:i64
infer %1


; start LHS (in $30)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64
infer %1


; start LHS (in $30)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = ult 9223090561878065152:i64, %1
infer %2


; start LHS (in $30)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
infer %2


; start LHS (in $30)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64
%2 = eq %1, 9223090561878065152:i64
%3:i64 = var
%4 = ne %3, 0:i64
%5:i32 = zext %4
%6 = ult 9223090561878065152:i64, %1
%7:i32 = zext %6
%8 = select %2, %5, %7
infer %8


; start LHS (in $30)
%0:i64 = var
%1 = ne %0, 0:i64
infer %1


; start LHS (in $30)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64
infer %1


; start LHS (in $30)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = ult 9223090561878065152:i64, %1
infer %2


; start LHS (in $30)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64 (hasExternalUses)
%2 = eq %1, 9223090561878065152:i64
infer %2


; start LHS (in $30)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64
%2 = eq %1, 9223090561878065152:i64
%3:i64 = var
%4 = ne %3, 0:i64
%5:i32 = zext %4
%6 = ult 9223090561878065152:i64, %1
%7:i32 = zext %6
%8 = select %2, %5, %7
infer %8


; start LHS (in $30)
%0:i64 = var
%1 = and %0, 9223372036854775807:i64
%2 = eq %1, 9223090561878065152:i64
%3:i64 = var
%4 = ne %3, 0:i64
%5:i32 = zext %4
%6 = ult 9223090561878065152:i64, %1
%7:i32 = zext %6
%8 = select %2, %5, %7
%9:i64 = var
%10 = and %9, 9223372036854775807:i64
%11 = eq %10, 9223090561878065152:i64
%12:i64 = var
%13 = ne %12, 0:i64
%14:i32 = zext %13
%15 = ult 9223090561878065152:i64, %10
%16:i32 = zext %15
%17 = select %11, %14, %16
%18 = or %8, %17
infer %18


; function: $31

; start LHS (in $31)
%0:i32 = var
%1 = sub %0, 16:i32
infer %1


; start LHS (in $31)
%0:i32 = var
%1 = ule -4095:i32, %0
infer %1


; start LHS (in $31)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = ule -4095:i32, %0
pc %2 1:i1
infer %1


; start LHS (in $31)
%0:i32 = var
%1 = sub %0, 16:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; function: $32

; start LHS (in $32)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = and %0, 3:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = and %0, 3:i32
%2 = eq %1, 0:i32
infer %2


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -1:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = eq %0, 1:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = and %1, 3:i32
infer %2


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = and %1, 3:i32
infer %2


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = and %1, 3:i32
%3 = eq %2, 0:i32
infer %3


; start LHS (in $32)
%0:i32 = var
%1 = and %0, 3:i32
infer %1


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = ule 16:i32, %4
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -16:i32
%6 = ule 16:i32, %4
pc %6 1:i1
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -16:i32 (hasExternalUses)
%6 = and %5, -16:i32
%7 = ule 16:i32, %4
pc %7 1:i1
infer %6


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -16:i32 (hasExternalUses)
%6 = and %5, -16:i32 (hasExternalUses)
%7 = add %6, 16:i32
%8 = ule 16:i32, %4
pc %8 1:i1
infer %7


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5:i32 = var
%6 = add %5, -1:i32 (hasExternalUses)
%7:i32 = var
%8 = phi %0, %6, %7
%9 = add %8, -16:i32 (hasExternalUses)
%10 = and %9, -16:i32 (hasExternalUses)
%11 = add %10, 16:i32 (hasExternalUses)
%12 = add %4, %11
%13 = ule 16:i32, %8
pc %13 1:i1
infer %12


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = ule 16:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = ule 16:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 8:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = ule 16:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 8:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = ule 16:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 12:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = ule 16:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 12:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = ule 16:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 16:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = ule 16:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 16:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = ule 16:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -16:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = ule 16:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -16:i32
%2 = ult 15:i32, %1
%3 = block 2
%4:i32 = var
%5 = add %4, -1:i32
%6:i32 = var
%7 = phi %3, %5, %6
%8 = ule 16:i32, %7
pc %8 1:i1
infer %2


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -16:i32
%6 = and %5, -16:i32 (hasExternalUses)
%7 = sub %5, %6
%8 = ule 16:i32, %4
pc %8 1:i1
infer %7


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5:i32 = var
%6 = add %5, -1:i32 (hasExternalUses)
%7:i32 = var
%8 = phi %0, %6, %7
%9 = add %8, -16:i32 (hasExternalUses)
%10 = and %9, -16:i32 (hasExternalUses)
%11 = add %10, 16:i32 (hasExternalUses)
%12 = add %4, %11
%13 = ule 16:i32, %8
pc %13 1:i1
infer %12


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6 = add %5, -16:i32
%7 = and %6, -16:i32 (hasExternalUses)
%8 = sub %6, %7 (hasExternalUses)
%9 = phi %0, %8, %5
%10 = and %9, 8:i32
infer %10


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, 1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6:i32 = var
%7 = add %6, -1:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %1, %7, %8
%10 = add %9, -16:i32 (hasExternalUses)
%11 = and %10, -16:i32 (hasExternalUses)
%12 = add %11, 16:i32 (hasExternalUses)
%13 = add %5, %12 (hasExternalUses)
%14 = phi %0, %13, %5
%15 = add %14, 8:i32
%16 = sub %10, %11
%17 = phi %0, %16, %9
%18 = and %17, 8:i32
%19 = ne %18, 0:i32
pc %19 1:i1
infer %15


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, 1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6:i32 = var
%7 = add %6, -1:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %1, %7, %8
%10 = add %9, -16:i32 (hasExternalUses)
%11 = and %10, -16:i32 (hasExternalUses)
%12 = add %11, 16:i32 (hasExternalUses)
%13 = add %5, %12 (hasExternalUses)
%14 = phi %0, %13, %5
%15 = add %14, 8:i32
%16 = sub %10, %11
%17 = phi %0, %16, %9
%18 = and %17, 8:i32
%19 = ne %18, 0:i32
pc %19 1:i1
infer %15


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6 = add %5, -16:i32
%7 = and %6, -16:i32 (hasExternalUses)
%8 = sub %6, %7 (hasExternalUses)
%9 = phi %0, %8, %5
%10 = and %9, 4:i32
infer %10


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32 (hasExternalUses)
%5:i32 = var
%6 = phi %2, %4, %5
%7:i32 = var
%8 = add %7, -1:i32 (hasExternalUses)
%9:i32 = var
%10 = phi %2, %8, %9
%11 = add %10, -16:i32 (hasExternalUses)
%12 = and %11, -16:i32 (hasExternalUses)
%13 = add %12, 16:i32 (hasExternalUses)
%14 = add %6, %13 (hasExternalUses)
%15 = phi %1, %14, %6
%16 = add %15, 8:i32 (hasExternalUses)
%17 = phi %0, %15, %16
%18 = add %17, 4:i32
%19 = sub %11, %12
%20 = phi %1, %19, %10
%21 = and %20, 8:i32
%22 = ne %21, 0:i32
blockpc %0 0 %22 1:i1
%23 = eq %21, 0:i32
blockpc %0 1 %23 1:i1
%24 = and %20, 4:i32
%25 = ne %24, 0:i32
pc %25 1:i1
infer %18


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32 (hasExternalUses)
%5:i32 = var
%6 = phi %2, %4, %5
%7:i32 = var
%8 = add %7, -1:i32 (hasExternalUses)
%9:i32 = var
%10 = phi %2, %8, %9
%11 = add %10, -16:i32 (hasExternalUses)
%12 = and %11, -16:i32 (hasExternalUses)
%13 = add %12, 16:i32 (hasExternalUses)
%14 = add %6, %13 (hasExternalUses)
%15 = phi %1, %14, %6
%16 = add %15, 8:i32 (hasExternalUses)
%17 = phi %0, %15, %16
%18 = add %17, 4:i32
%19 = sub %11, %12
%20 = phi %1, %19, %10
%21 = and %20, 8:i32
%22 = ne %21, 0:i32
blockpc %0 0 %22 1:i1
%23 = eq %21, 0:i32
blockpc %0 1 %23 1:i1
%24 = and %20, 4:i32
%25 = ne %24, 0:i32
pc %25 1:i1
infer %18


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6 = add %5, -16:i32
%7 = and %6, -16:i32 (hasExternalUses)
%8 = sub %6, %7 (hasExternalUses)
%9 = phi %0, %8, %5
%10 = and %9, 2:i32
infer %10


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = add %4, 1:i32 (hasExternalUses)
%6:i32 = var
%7 = phi %3, %5, %6
%8:i32 = var
%9:i32 = var
%10 = phi %3, %8, %9
%11 = add %10, -16:i32 (hasExternalUses)
%12 = and %11, -16:i32 (hasExternalUses)
%13 = add %12, 16:i32 (hasExternalUses)
%14 = add %7, %13 (hasExternalUses)
%15 = phi %2, %14, %7
%16 = add %15, 8:i32 (hasExternalUses)
%17 = phi %1, %15, %16
%18 = add %17, 4:i32 (hasExternalUses)
%19 = phi %0, %17, %18
%20 = add %19, 2:i32
%21 = sub %11, %12
%22 = phi %2, %21, %10
%23 = and %22, 4:i32
%24 = ne %23, 0:i32
blockpc %0 0 %24 1:i1
%25 = eq %23, 0:i32
blockpc %0 1 %25 1:i1
%26 = and %22, 8:i32
%27 = ne %26, 0:i32
blockpc %1 0 %27 1:i1
%28:i32 = var
blockpc %1 1 %28 1:i1
%29:i32 = var
pc %29 1:i1
infer %20


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = add %4, 1:i32 (hasExternalUses)
%6:i32 = var
%7 = phi %3, %5, %6
%8:i32 = var
%9:i32 = var
%10 = phi %3, %8, %9
%11 = add %10, -16:i32 (hasExternalUses)
%12 = and %11, -16:i32 (hasExternalUses)
%13 = add %12, 16:i32 (hasExternalUses)
%14 = add %7, %13 (hasExternalUses)
%15 = phi %2, %14, %7
%16 = add %15, 8:i32 (hasExternalUses)
%17 = phi %1, %15, %16
%18 = add %17, 4:i32 (hasExternalUses)
%19 = phi %0, %17, %18
%20 = add %19, 2:i32
%21 = sub %11, %12
%22 = phi %2, %21, %10
%23 = and %22, 4:i32
%24 = ne %23, 0:i32
blockpc %0 0 %24 1:i1
%25 = eq %23, 0:i32
blockpc %0 1 %25 1:i1
%26 = and %22, 8:i32
%27 = ne %26, 0:i32
blockpc %1 0 %27 1:i1
%28:i32 = var
blockpc %1 1 %28 1:i1
%29:i32 = var
pc %29 1:i1
infer %20


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6 = add %5, -16:i32
%7 = and %6, -16:i32 (hasExternalUses)
%8 = sub %6, %7 (hasExternalUses)
%9 = phi %0, %8, %5
%10 = and %9, 1:i32
infer %10


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6 = add %5, -16:i32
%7 = and %6, -16:i32 (hasExternalUses)
%8 = sub %6, %7 (hasExternalUses)
%9 = phi %0, %8, %5
%10 = and %9, 1:i32
%11 = eq %10, 0:i32
infer %11


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = ult %4, 32:i32
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = and %4, 3:i32
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = and %4, 3:i32 (hasExternalUses)
%6 = ne %5, 3:i32
infer %6


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = and %4, 3:i32 (hasExternalUses)
%6 = eq %5, 2:i32
%7 = ne %5, 3:i32
pc %7 1:i1
infer %6


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = and %4, 3:i32 (hasExternalUses)
%6 = ne %5, 1:i32
%7 = ne %5, 3:i32
pc %7 1:i1
infer %6


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, 16:i32
%6:i32 = var
%7 = add %6, 1:i32
%8:i32 = var
%9 = phi %0, %7, %8
%10 = and %9, 3:i32
%11 = ne %10, 3:i32
pc %11 1:i1
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -19:i32
%6:i32 = var
%7 = add %6, 1:i32
%8:i32 = var
%9 = phi %0, %7, %8
%10 = and %9, 3:i32
%11 = ne %10, 3:i32
pc %11 1:i1
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -3:i32
%6:i32 = var
%7 = add %6, 1:i32
%8:i32 = var
%9 = phi %0, %7, %8
%10 = and %9, 3:i32
%11 = ne %10, 3:i32
pc %11 1:i1
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, 3:i32
%6 = and %4, 3:i32
%7 = ne %6, 3:i32
pc %7 1:i1
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -20:i32
%6:i32 = var
%7 = add %6, 1:i32
%8:i32 = var
%9 = phi %0, %7, %8
%10 = and %9, 3:i32
%11 = ne %10, 3:i32
pc %11 1:i1
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -20:i32
%6 = and %5, -16:i32
%7:i32 = var
%8 = add %7, 1:i32
%9:i32 = var
%10 = phi %0, %8, %9
%11 = and %10, 3:i32
%12 = ne %11, 3:i32
pc %12 1:i1
infer %6


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -20:i32
%6 = and %5, -16:i32 (hasExternalUses)
%7 = add %6, 19:i32
%8:i32 = var
%9 = add %8, 1:i32
%10:i32 = var
%11 = phi %0, %9, %10
%12 = and %11, 3:i32
%13 = ne %12, 3:i32
pc %13 1:i1
infer %7


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5:i32 = var
%6 = add %5, -1:i32 (hasExternalUses)
%7:i32 = var
%8 = phi %0, %6, %7
%9 = add %8, -20:i32
%10 = and %9, -16:i32 (hasExternalUses)
%11 = add %10, 19:i32 (hasExternalUses)
%12 = add %4, %11
%13:i32 = var
%14 = add %13, 1:i32
%15:i32 = var
%16 = phi %0, %14, %15
%17 = and %16, 3:i32
%18 = ne %17, 3:i32
pc %18 1:i1
infer %12


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -12:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 8:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = lshr %0, 24:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 8:i32
%2:i32 = var
%3 = lshr %2, 24:i32
%4 = or %1, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 1:i32
%8:i32 = var
%9 = phi %5, %7, %8
%10 = and %9, 3:i32
%11 = ne %10, 3:i32
pc %11 1:i1
infer %4


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -8:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 8:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = lshr %0, 24:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 8:i32
%2:i32 = var
%3 = lshr %2, 24:i32
%4 = or %1, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 1:i32
%8:i32 = var
%9 = phi %5, %7, %8
%10 = and %9, 3:i32
%11 = ne %10, 3:i32
pc %11 1:i1
infer %4


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 8:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -4:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 8:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = lshr %0, 24:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 8:i32
%2:i32 = var
%3 = lshr %2, 24:i32
%4 = or %1, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 1:i32
%8:i32 = var
%9 = phi %5, %7, %8
%10 = and %9, 3:i32
%11 = ne %10, 3:i32
pc %11 1:i1
infer %4


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 12:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 8:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = lshr %0, 24:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 8:i32
%2:i32 = var
%3 = lshr %2, 24:i32
%4 = or %1, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 1:i32
%8:i32 = var
%9 = phi %5, %7, %8
%10 = and %9, 3:i32
%11 = ne %10, 3:i32
pc %11 1:i1
infer %4


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 16:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 16:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -16:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = and %6, 3:i32
%8 = ne %7, 3:i32
pc %8 1:i1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -16:i32
%2 = ult 16:i32, %1
%3 = block 2
%4:i32 = var
%5 = add %4, 1:i32
%6:i32 = var
%7 = phi %3, %5, %6
%8 = and %7, 3:i32
%9 = ne %8, 3:i32
pc %9 1:i1
infer %2


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -19:i32
%6 = add %4, -20:i32
%7 = and %6, -16:i32 (hasExternalUses)
%8 = sub %5, %7
%9:i32 = var
%10 = add %9, 1:i32
%11:i32 = var
%12 = phi %0, %10, %11
%13 = and %12, 3:i32
%14 = ne %13, 3:i32
pc %14 1:i1
infer %8


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5:i32 = var
%6 = add %5, -1:i32 (hasExternalUses)
%7:i32 = var
%8 = phi %0, %6, %7
%9 = add %8, -20:i32
%10 = and %9, -16:i32 (hasExternalUses)
%11 = add %10, 19:i32 (hasExternalUses)
%12 = add %4, %11
%13 = and %4, 3:i32
%14 = ne %13, 3:i32
pc %14 1:i1
infer %12


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, 16:i32
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -17:i32
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -1:i32
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, 1:i32
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -20:i32
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -20:i32
%6 = and %5, -16:i32
infer %6


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -20:i32
%6 = and %5, -16:i32 (hasExternalUses)
%7 = add %6, 17:i32
infer %7


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5:i32 = var
%6 = add %5, -1:i32 (hasExternalUses)
%7:i32 = var
%8 = phi %0, %6, %7
%9 = add %8, -20:i32
%10 = and %9, -16:i32 (hasExternalUses)
%11 = add %10, 17:i32 (hasExternalUses)
%12 = add %4, %11
infer %12


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -12:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = lshr %0, 8:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = lshr %2, 8:i32
%4 = or %1, %3
infer %4


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -8:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = lshr %0, 8:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = lshr %2, 8:i32
%4 = or %1, %3
infer %4


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 8:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -4:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = lshr %0, 8:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = lshr %2, 8:i32
%4 = or %1, %3
infer %4


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 12:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = lshr %0, 8:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = lshr %2, 8:i32
%4 = or %1, %3
infer %4


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -16:i32
%2 = ult 18:i32, %1
infer %2


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -17:i32
%6 = add %4, -20:i32
%7 = and %6, -16:i32 (hasExternalUses)
%8 = sub %5, %7
infer %8


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5:i32 = var
%6 = add %5, -1:i32 (hasExternalUses)
%7:i32 = var
%8 = phi %0, %6, %7
%9 = add %8, -20:i32
%10 = and %9, -16:i32 (hasExternalUses)
%11 = add %10, 17:i32 (hasExternalUses)
%12 = add %4, %11
infer %12


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, 16:i32
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -18:i32
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -2:i32
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, 2:i32
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -20:i32
infer %5


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -20:i32
%6 = and %5, -16:i32
infer %6


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -20:i32
%6 = and %5, -16:i32 (hasExternalUses)
%7 = add %6, 18:i32
infer %7


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5:i32 = var
%6 = add %5, -1:i32 (hasExternalUses)
%7:i32 = var
%8 = phi %0, %6, %7
%9 = add %8, -20:i32
%10 = and %9, -16:i32 (hasExternalUses)
%11 = add %10, 18:i32 (hasExternalUses)
%12 = add %4, %11
infer %12


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -12:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = lshr %0, 16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 16:i32
%2:i32 = var
%3 = lshr %2, 16:i32
%4 = or %1, %3
infer %4


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -8:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = lshr %0, 16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 16:i32
%2:i32 = var
%3 = lshr %2, 16:i32
%4 = or %1, %3
infer %4


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 8:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -4:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = lshr %0, 16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 16:i32
%2:i32 = var
%3 = lshr %2, 16:i32
%4 = or %1, %3
infer %4


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 12:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = lshr %0, 16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = shl %0, 16:i32
%2:i32 = var
%3 = lshr %2, 16:i32
%4 = or %1, %3
infer %4


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, 16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -16:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -16:i32
%2 = ult 17:i32, %1
infer %2


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -18:i32
%6 = add %4, -20:i32
%7 = and %6, -16:i32 (hasExternalUses)
%8 = sub %5, %7
infer %8


; start LHS (in $32)
%0 = block 2
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5:i32 = var
%6 = add %5, -1:i32 (hasExternalUses)
%7:i32 = var
%8 = phi %0, %6, %7
%9 = add %8, -20:i32
%10 = and %9, -16:i32 (hasExternalUses)
%11 = add %10, 18:i32 (hasExternalUses)
%12 = add %4, %11
infer %12


; start LHS (in $32)
%0 = block 5
%1 = block 2
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6 = add %5, -19:i32
%7 = add %5, -20:i32
%8 = and %7, -16:i32 (hasExternalUses)
%9 = sub %6, %8 (hasExternalUses)
%10 = add %5, -17:i32
%11 = add %5, -20:i32
%12 = and %11, -16:i32 (hasExternalUses)
%13 = sub %10, %12 (hasExternalUses)
%14 = add %5, -18:i32
%15 = add %5, -20:i32
%16 = and %15, -16:i32 (hasExternalUses)
%17 = sub %14, %16 (hasExternalUses)
%18 = phi %0, %5, %5, %9, %13, %17
%19 = and %18, 16:i32
infer %19


; start LHS (in $32)
%0 = block 5
%1 = block 2
%2:i32 = var
%3 = add %2, 1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6:i32 = var
%7 = add %6, -1:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %1, %7, %8
%10 = add %9, -20:i32
%11 = and %10, -16:i32 (hasExternalUses)
%12 = add %11, 19:i32 (hasExternalUses)
%13 = add %5, %12 (hasExternalUses)
%14 = add %9, -20:i32
%15 = and %14, -16:i32 (hasExternalUses)
%16 = add %15, 17:i32 (hasExternalUses)
%17 = add %5, %16 (hasExternalUses)
%18 = add %9, -20:i32
%19 = and %18, -16:i32 (hasExternalUses)
%20 = add %19, 18:i32 (hasExternalUses)
%21 = add %5, %20 (hasExternalUses)
%22 = phi %0, %5, %5, %13, %17, %21
%23 = add %22, 16:i32
%24 = add %9, -19:i32
%25 = sub %24, %11
%26 = add %9, -17:i32
%27 = sub %26, %15
%28 = add %9, -18:i32
%29 = sub %28, %19
%30 = phi %0, %9, %9, %25, %27, %29
%31 = and %30, 16:i32
%32 = ne %31, 0:i32
pc %32 1:i1
infer %23


; start LHS (in $32)
%0 = block 5
%1 = block 2
%2:i32 = var
%3 = add %2, 1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6:i32 = var
%7 = add %6, -1:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %1, %7, %8
%10 = add %9, -20:i32
%11 = and %10, -16:i32 (hasExternalUses)
%12 = add %11, 19:i32 (hasExternalUses)
%13 = add %5, %12 (hasExternalUses)
%14 = add %9, -20:i32
%15 = and %14, -16:i32 (hasExternalUses)
%16 = add %15, 17:i32 (hasExternalUses)
%17 = add %5, %16 (hasExternalUses)
%18 = add %9, -20:i32
%19 = and %18, -16:i32 (hasExternalUses)
%20 = add %19, 18:i32 (hasExternalUses)
%21 = add %5, %20 (hasExternalUses)
%22 = phi %0, %5, %5, %13, %17, %21
%23 = add %22, 16:i32
%24 = add %9, -19:i32
%25 = sub %24, %11
%26 = add %9, -17:i32
%27 = sub %26, %15
%28 = add %9, -18:i32
%29 = sub %28, %19
%30 = phi %0, %9, %9, %25, %27, %29
%31 = and %30, 16:i32
%32 = ne %31, 0:i32
pc %32 1:i1
infer %23


; start LHS (in $32)
%0 = block 5
%1 = block 2
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6 = add %5, -19:i32
%7 = add %5, -20:i32
%8 = and %7, -16:i32 (hasExternalUses)
%9 = sub %6, %8 (hasExternalUses)
%10 = add %5, -17:i32
%11 = add %5, -20:i32
%12 = and %11, -16:i32 (hasExternalUses)
%13 = sub %10, %12 (hasExternalUses)
%14 = add %5, -18:i32
%15 = add %5, -20:i32
%16 = and %15, -16:i32 (hasExternalUses)
%17 = sub %14, %16 (hasExternalUses)
%18 = phi %0, %5, %5, %9, %13, %17
%19 = and %18, 8:i32
infer %19


; start LHS (in $32)
%0 = block 2
%1 = block 5
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32 (hasExternalUses)
%5:i32 = var
%6 = phi %2, %4, %5
%7:i32 = var
%8 = add %7, -1:i32 (hasExternalUses)
%9:i32 = var
%10 = phi %2, %8, %9
%11 = add %10, -20:i32
%12 = and %11, -16:i32 (hasExternalUses)
%13 = add %12, 19:i32 (hasExternalUses)
%14 = add %6, %13 (hasExternalUses)
%15 = add %10, -20:i32
%16 = and %15, -16:i32 (hasExternalUses)
%17 = add %16, 17:i32 (hasExternalUses)
%18 = add %6, %17 (hasExternalUses)
%19 = add %10, -20:i32
%20 = and %19, -16:i32 (hasExternalUses)
%21 = add %20, 18:i32 (hasExternalUses)
%22 = add %6, %21 (hasExternalUses)
%23 = phi %1, %6, %6, %14, %18, %22
%24 = add %23, 16:i32 (hasExternalUses)
%25 = phi %0, %23, %24
%26 = add %25, 8:i32
%27 = add %10, -19:i32
%28 = sub %27, %12
%29 = add %10, -17:i32
%30 = sub %29, %16
%31:i32 = var
%32 = phi %1, %10, %10, %28, %30, %31
%33 = and %32, 16:i32
%34 = ne %33, 0:i32
blockpc %0 0 %34 1:i1
%35:i32 = var
blockpc %0 1 %35 1:i1
%36:i32 = var
pc %36 1:i1
infer %26


; start LHS (in $32)
%0 = block 2
%1 = block 5
%2 = block 2
%3:i32 = var
%4 = add %3, 1:i32 (hasExternalUses)
%5:i32 = var
%6 = phi %2, %4, %5
%7:i32 = var
%8 = add %7, -1:i32 (hasExternalUses)
%9:i32 = var
%10 = phi %2, %8, %9
%11 = add %10, -20:i32
%12 = and %11, -16:i32 (hasExternalUses)
%13 = add %12, 19:i32 (hasExternalUses)
%14 = add %6, %13 (hasExternalUses)
%15 = add %10, -20:i32
%16 = and %15, -16:i32 (hasExternalUses)
%17 = add %16, 17:i32 (hasExternalUses)
%18 = add %6, %17 (hasExternalUses)
%19 = add %10, -20:i32
%20 = and %19, -16:i32 (hasExternalUses)
%21 = add %20, 18:i32 (hasExternalUses)
%22 = add %6, %21 (hasExternalUses)
%23 = phi %1, %6, %6, %14, %18, %22
%24 = add %23, 16:i32 (hasExternalUses)
%25 = phi %0, %23, %24
%26 = add %25, 8:i32
%27 = add %10, -19:i32
%28 = sub %27, %12
%29 = add %10, -17:i32
%30 = sub %29, %16
%31:i32 = var
%32 = phi %1, %10, %10, %28, %30, %31
%33 = and %32, 16:i32
%34 = ne %33, 0:i32
blockpc %0 0 %34 1:i1
%35:i32 = var
blockpc %0 1 %35 1:i1
%36:i32 = var
pc %36 1:i1
infer %26


; start LHS (in $32)
%0 = block 5
%1 = block 2
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6 = add %5, -19:i32
%7 = add %5, -20:i32
%8 = and %7, -16:i32 (hasExternalUses)
%9 = sub %6, %8 (hasExternalUses)
%10 = add %5, -17:i32
%11 = add %5, -20:i32
%12 = and %11, -16:i32 (hasExternalUses)
%13 = sub %10, %12 (hasExternalUses)
%14 = add %5, -18:i32
%15 = add %5, -20:i32
%16 = and %15, -16:i32 (hasExternalUses)
%17 = sub %14, %16 (hasExternalUses)
%18 = phi %0, %5, %5, %9, %13, %17
%19 = and %18, 4:i32
infer %19


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2 = block 5
%3 = block 2
%4:i32 = var
%5 = add %4, 1:i32 (hasExternalUses)
%6:i32 = var
%7 = phi %3, %5, %6
%8:i32 = var
%9:i32 = var
%10 = phi %3, %8, %9
%11 = add %10, -20:i32
%12 = and %11, -16:i32 (hasExternalUses)
%13 = add %12, 19:i32 (hasExternalUses)
%14 = add %7, %13 (hasExternalUses)
%15 = add %10, -20:i32
%16 = and %15, -16:i32 (hasExternalUses)
%17 = add %16, 17:i32 (hasExternalUses)
%18 = add %7, %17 (hasExternalUses)
%19 = add %10, -20:i32
%20 = and %19, -16:i32 (hasExternalUses)
%21 = add %20, 18:i32 (hasExternalUses)
%22 = add %7, %21 (hasExternalUses)
%23 = phi %2, %7, %7, %14, %18, %22
%24 = add %23, 16:i32 (hasExternalUses)
%25 = phi %1, %23, %24
%26 = add %25, 8:i32 (hasExternalUses)
%27 = phi %0, %25, %26
%28 = add %27, 4:i32
%29 = add %10, -19:i32
%30 = sub %29, %12
%31:i32 = var
%32:i32 = var
%33 = phi %2, %10, %10, %30, %31, %32
%34 = and %33, 8:i32
%35 = ne %34, 0:i32
blockpc %0 0 %35 1:i1
%36:i32 = var
blockpc %0 1 %36 1:i1
%37:i32 = var
blockpc %1 0 %37 1:i1
%38:i32 = var
blockpc %1 1 %38 1:i1
%39:i32 = var
pc %39 1:i1
infer %28


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2 = block 5
%3 = block 2
%4:i32 = var
%5 = add %4, 1:i32 (hasExternalUses)
%6:i32 = var
%7 = phi %3, %5, %6
%8:i32 = var
%9:i32 = var
%10 = phi %3, %8, %9
%11 = add %10, -20:i32
%12 = and %11, -16:i32 (hasExternalUses)
%13 = add %12, 19:i32 (hasExternalUses)
%14 = add %7, %13 (hasExternalUses)
%15 = add %10, -20:i32
%16 = and %15, -16:i32 (hasExternalUses)
%17 = add %16, 17:i32 (hasExternalUses)
%18 = add %7, %17 (hasExternalUses)
%19 = add %10, -20:i32
%20 = and %19, -16:i32 (hasExternalUses)
%21 = add %20, 18:i32 (hasExternalUses)
%22 = add %7, %21 (hasExternalUses)
%23 = phi %2, %7, %7, %14, %18, %22
%24 = add %23, 16:i32 (hasExternalUses)
%25 = phi %1, %23, %24
%26 = add %25, 8:i32 (hasExternalUses)
%27 = phi %0, %25, %26
%28 = add %27, 4:i32
%29 = add %10, -19:i32
%30 = sub %29, %12
%31:i32 = var
%32:i32 = var
%33 = phi %2, %10, %10, %30, %31, %32
%34 = and %33, 8:i32
%35 = ne %34, 0:i32
blockpc %0 0 %35 1:i1
%36:i32 = var
blockpc %0 1 %36 1:i1
%37:i32 = var
blockpc %1 0 %37 1:i1
%38:i32 = var
blockpc %1 1 %38 1:i1
%39:i32 = var
pc %39 1:i1
infer %28


; start LHS (in $32)
%0 = block 5
%1 = block 2
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6 = add %5, -19:i32
%7 = add %5, -20:i32
%8 = and %7, -16:i32 (hasExternalUses)
%9 = sub %6, %8 (hasExternalUses)
%10 = add %5, -17:i32
%11 = add %5, -20:i32
%12 = and %11, -16:i32 (hasExternalUses)
%13 = sub %10, %12 (hasExternalUses)
%14 = add %5, -18:i32
%15 = add %5, -20:i32
%16 = and %15, -16:i32 (hasExternalUses)
%17 = sub %14, %16 (hasExternalUses)
%18 = phi %0, %5, %5, %9, %13, %17
%19 = and %18, 2:i32
infer %19


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 5
%4 = block 2
%5:i32 = var
%6 = add %5, 1:i32 (hasExternalUses)
%7:i32 = var
%8 = phi %4, %6, %7
%9:i32 = var
%10:i32 = var
%11 = phi %4, %9, %10
%12 = add %11, -20:i32
%13 = and %12, -16:i32 (hasExternalUses)
%14 = add %13, 19:i32 (hasExternalUses)
%15 = add %8, %14 (hasExternalUses)
%16 = add %11, -20:i32
%17 = and %16, -16:i32 (hasExternalUses)
%18 = add %17, 17:i32 (hasExternalUses)
%19 = add %8, %18 (hasExternalUses)
%20 = add %11, -20:i32
%21 = and %20, -16:i32 (hasExternalUses)
%22 = add %21, 18:i32 (hasExternalUses)
%23 = add %8, %22 (hasExternalUses)
%24 = phi %3, %8, %8, %15, %19, %23
%25 = add %24, 16:i32 (hasExternalUses)
%26 = phi %2, %24, %25
%27 = add %26, 8:i32 (hasExternalUses)
%28 = phi %1, %26, %27
%29 = add %28, 4:i32 (hasExternalUses)
%30 = phi %0, %28, %29
%31 = add %30, 2:i32
%32:i32 = var
blockpc %0 0 %32 1:i1
%33:i32 = var
blockpc %0 1 %33 1:i1
%34:i32 = var
blockpc %1 0 %34 1:i1
%35:i32 = var
blockpc %1 1 %35 1:i1
%36:i32 = var
blockpc %2 0 %36 1:i1
%37:i32 = var
blockpc %2 1 %37 1:i1
%38:i32 = var
pc %38 1:i1
infer %31


; start LHS (in $32)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 5
%4 = block 2
%5:i32 = var
%6 = add %5, 1:i32 (hasExternalUses)
%7:i32 = var
%8 = phi %4, %6, %7
%9:i32 = var
%10:i32 = var
%11 = phi %4, %9, %10
%12 = add %11, -20:i32
%13 = and %12, -16:i32 (hasExternalUses)
%14 = add %13, 19:i32 (hasExternalUses)
%15 = add %8, %14 (hasExternalUses)
%16 = add %11, -20:i32
%17 = and %16, -16:i32 (hasExternalUses)
%18 = add %17, 17:i32 (hasExternalUses)
%19 = add %8, %18 (hasExternalUses)
%20 = add %11, -20:i32
%21 = and %20, -16:i32 (hasExternalUses)
%22 = add %21, 18:i32 (hasExternalUses)
%23 = add %8, %22 (hasExternalUses)
%24 = phi %3, %8, %8, %15, %19, %23
%25 = add %24, 16:i32 (hasExternalUses)
%26 = phi %2, %24, %25
%27 = add %26, 8:i32 (hasExternalUses)
%28 = phi %1, %26, %27
%29 = add %28, 4:i32 (hasExternalUses)
%30 = phi %0, %28, %29
%31 = add %30, 2:i32
%32:i32 = var
blockpc %0 0 %32 1:i1
%33:i32 = var
blockpc %0 1 %33 1:i1
%34:i32 = var
blockpc %1 0 %34 1:i1
%35:i32 = var
blockpc %1 1 %35 1:i1
%36:i32 = var
blockpc %2 0 %36 1:i1
%37:i32 = var
blockpc %2 1 %37 1:i1
%38:i32 = var
pc %38 1:i1
infer %31


; start LHS (in $32)
%0 = block 5
%1 = block 2
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6 = add %5, -19:i32
%7 = add %5, -20:i32
%8 = and %7, -16:i32 (hasExternalUses)
%9 = sub %6, %8 (hasExternalUses)
%10 = add %5, -17:i32
%11 = add %5, -20:i32
%12 = and %11, -16:i32 (hasExternalUses)
%13 = sub %10, %12 (hasExternalUses)
%14 = add %5, -18:i32
%15 = add %5, -20:i32
%16 = and %15, -16:i32 (hasExternalUses)
%17 = sub %14, %16 (hasExternalUses)
%18 = phi %0, %5, %5, %9, %13, %17
%19 = and %18, 1:i32
infer %19


; start LHS (in $32)
%0 = block 5
%1 = block 2
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4
%6 = add %5, -19:i32
%7 = add %5, -20:i32
%8 = and %7, -16:i32 (hasExternalUses)
%9 = sub %6, %8 (hasExternalUses)
%10 = add %5, -17:i32
%11 = add %5, -20:i32
%12 = and %11, -16:i32 (hasExternalUses)
%13 = sub %10, %12 (hasExternalUses)
%14 = add %5, -18:i32
%15 = add %5, -20:i32
%16 = and %15, -16:i32 (hasExternalUses)
%17 = sub %14, %16 (hasExternalUses)
%18 = phi %0, %5, %5, %9, %13, %17
%19 = and %18, 1:i32
%20 = eq %19, 0:i32
infer %20


; function: $33

; start LHS (in $33)
%0:i32 = var
%1 = add %0, -1:i32
infer %1


; start LHS (in $33)
%0:i32 = var
%1 = add %0, -1:i32
%2 = or %1, %0
infer %2


; start LHS (in $33)
%0:i32 = var
%1 = and %0, 8:i32
infer %1


; start LHS (in $33)
%0:i32 = var
%1 = and %0, 8:i32
%2 = eq %1, 0:i32
infer %2


; start LHS (in $33)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3:i32 = var
%4 = and %3, 8:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %2


; start LHS (in $33)
%0:i32 = var
%1 = or %0, 32:i32
infer %1


; function: $34

; start LHS (in $34)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $34)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = eq %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $34)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4:i32 = var
%5 = sub %3, %4
%6 = eq %1, 0:i32
blockpc %0 0 %6 1:i1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %0 1 %8 1:i1
infer %5


; start LHS (in $34)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4:i32 = var
%5 = sub %3, %4
%6:i32 = var
%7 = ult %5, %6
%8 = eq %1, 0:i32
blockpc %0 0 %8 1:i1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %0 1 %10 1:i1
infer %7


; start LHS (in $34)
%0:i32 = var
%1 = slt %0, 0:i32
infer %1


; start LHS (in $34)
%0:i32 = var
%1:i32 = var
%2 = eq %0, %1
infer %2


; start LHS (in $34)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $34)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
infer %2


; start LHS (in $34)
%0:i32 = var
%1 = add %0, -1:i32
infer %1


; start LHS (in $34)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3 = add %2, -1:i32
infer %3


; start LHS (in $34)
%0:i32 = var
%1 = ne %0, 10:i32
infer %1


; start LHS (in $34)
%0:i32 = var
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3 = sub %0, %2
infer %3


; start LHS (in $34)
%0:i32 = var
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3 = sub %0, %2
%4 = add %3, 1:i32
infer %4


; start LHS (in $34)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %2, 1:i32 (hasExternalUses)
%4 = sub %1, %3
%5 = add %4, 1:i32 (hasExternalUses)
%6 = ult %0, %5
infer %6


; start LHS (in $34)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2:i32 = var
%3 = add %1, %2
infer %3


; start LHS (in $34)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2:i32 = var
%3 = add %1, %2
%4 = add %3, 1:i32
infer %4


; start LHS (in $34)
%0:i32 = var
%1 = add %0, 20:i32
infer %1


; start LHS (in $34)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = add %1, -1:i32
infer %2


; start LHS (in $34)
%0 = block 3
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1
%4 = add %3, 20:i32
infer %4


; start LHS (in $34)
%0:i32 = var
%1 = block 3
%2:i32 = var
%3:i32 = var
%4:i32 = var
%5 = add %4, 1:i32 (hasExternalUses)
%6 = add %5, -1:i32 (hasExternalUses)
%7 = phi %1, %2, %3, %6
%8 = add %0, %7
infer %8


; start LHS (in $34)
%0 = block 3
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %3, 1:i32 (hasExternalUses)
%5 = sub %2, %4
%6 = add %5, 1:i32 (hasExternalUses)
%7 = phi %0, 0:i32, %1, %6
%8:i32 = var
%9 = add %4, -1:i32 (hasExternalUses)
%10 = phi %0, %2, %8, %9
%11 = add %7, %10
infer %11


; function: $35

; start LHS (in $35)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $35)
%0:i32 = var
%1:i32 = var
%2 = ne %0, %1
infer %2


; start LHS (in $35)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $35)
%0:i32 = var
%1:i32 = var
%2 = eq %0, %1
infer %2


; start LHS (in $35)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %1, %2, %2
%4:i32 = var
%5:i32 = var
%6 = phi %0, %4, %4, %5, %5
%7 = sub %3, %6
infer %7


; function: $36

; start LHS (in $36)
%0:i32 = var
%1 = add %0, 1794895138:i32
infer %1


; start LHS (in $36)
%0:i32 = var
%1 = lshr %0, 2:i32
infer %1


; start LHS (in $36)
%0:i32 = var
%1 = lshr %0, 2:i32
%2:i32 = var
%3 = ule %1, %2
infer %3


; start LHS (in $36)
%0:i32 = var
%1 = shl %0, 2:i32
infer %1


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = shl %1, 2:i32
%3 = sub %0, %2
infer %3


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = shl %1, 2:i32
%3 = sub %0, %2 (hasExternalUses)
%4:i32 = var
%5 = ule %3, %4
infer %5


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = shl %1, 2:i32
%3 = sub %0, %2 (hasExternalUses)
%4:i32 = var
%5 = ule %3, %4
infer %5


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = or %0, %1
infer %2


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = or %0, %1
%3 = and %2, 3:i32
infer %3


; start LHS (in $36)
%0:i32 = var
%1 = lshr %0, 2:i32
infer %1


; start LHS (in $36)
%0:i32 = var
%1 = lshr %0, 2:i32
infer %1


; start LHS (in $36)
%0:i32 = var
%1 = lshr %0, 1:i32
infer %1


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = lshr %1, 1:i32 (hasExternalUses)
%3 = add %0, %2
infer %3


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = lshr %1, 1:i32 (hasExternalUses)
%3 = add %0, %2 (hasExternalUses)
%4 = shl %3, 1:i32
infer %4


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = lshr %1, 1:i32 (hasExternalUses)
%3 = add %0, %2 (hasExternalUses)
%4 = shl %3, 1:i32 (hasExternalUses)
%5:i32 = var
%6 = lshr %5, 2:i32
%7 = add %4, %6
infer %7


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = lshr %1, 1:i32 (hasExternalUses)
%3 = add %0, %2 (hasExternalUses)
%4 = shl %3, 1:i32 (hasExternalUses)
%5:i32 = var
%6 = lshr %5, 2:i32
%7 = add %4, %6
%8 = shl %7, 2:i32
infer %8


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = lshr %2, 1:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = shl %4, 1:i32 (hasExternalUses)
%6:i32 = var
%7 = lshr %6, 2:i32
%8 = add %5, %7
%9 = shl %8, 2:i32
%10 = add %0, %9
infer %10


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = lshr %2, 1:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = shl %4, 1:i32 (hasExternalUses)
%6:i32 = var
%7 = lshr %6, 2:i32
%8 = add %5, %7
%9 = shl %8, 2:i32
%10 = add %0, %9 (hasExternalUses)
%11 = add %10, 4:i32
infer %11


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = ule %0, %1
infer %2


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
infer %2


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3:i32 = var
%4 = ule %2, %3
infer %4


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
infer %2


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2
%4 = add %0, %3
infer %4


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
infer %2


; start LHS (in $36)
%0:i32 = var
%1 = eq %0, 1:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $36)
%0:i32 = var
%1 = lshr %0, 1:i32 (hasExternalUses)
%2 = sub %0, %1
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $36)
%0:i32 = var
%1 = slt %0, 0:i32
%2 = ne %0, 0:i32
pc %2 1:i1
infer %1


; start LHS (in $36)
%0:i32 = var
%1 = slt %0, 0:i32 (hasExternalUses)
%2:i32 = var
%3 = lshr %2, 1:i32 (hasExternalUses)
%4 = sub %2, %3
%5 = select %1, %3, %4
%6 = ne %0, 0:i32
pc %6 1:i1
infer %5


; start LHS (in $36)
%0:i32 = var
%1 = slt %0, 0:i32 (hasExternalUses)
%2:i32 = var
%3:i32 = var
%4 = lshr %3, 1:i32 (hasExternalUses)
%5 = add %2, %4 (hasExternalUses)
%6 = select %1, %2, %5
%7 = ne %0, 0:i32
pc %7 1:i1
infer %6


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = lshr %1, 1:i32 (hasExternalUses)
%3 = add %0, %2 (hasExternalUses)
%4 = shl %3, 1:i32 (hasExternalUses)
%5:i32 = var
%6 = lshr %5, 2:i32
%7 = add %4, %6
infer %7


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = lshr %1, 1:i32 (hasExternalUses)
%3 = add %0, %2 (hasExternalUses)
%4 = shl %3, 1:i32 (hasExternalUses)
%5:i32 = var
%6 = lshr %5, 2:i32
%7 = add %4, %6
%8 = shl %7, 2:i32
infer %8


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = lshr %2, 1:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = shl %4, 1:i32 (hasExternalUses)
%6:i32 = var
%7 = lshr %6, 2:i32
%8 = add %5, %7
%9 = shl %8, 2:i32
%10 = add %0, %9
infer %10


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = lshr %2, 1:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = shl %4, 1:i32 (hasExternalUses)
%6:i32 = var
%7 = lshr %6, 2:i32
%8 = add %5, %7
%9 = shl %8, 2:i32
%10 = add %0, %9 (hasExternalUses)
%11 = add %10, 4:i32
infer %11


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = ule %0, %1
infer %2


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
infer %2


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3:i32 = var
%4 = ule %2, %3
infer %4


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
infer %2


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
infer %2


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2
%4 = add %0, %3
infer %4


; start LHS (in $36)
%0:i32 = var
%1 = ne %0, 0:i32
infer %1


; start LHS (in $36)
%0:i32 = var
%1 = ne %0, 0:i32
%2:i32 = var
%3:i32 = var
%4 = add %2, %3
%5 = select %1, 0:i32, %4
infer %5


; function: $37

; start LHS (in $37)
%0:i32 = var
%1 = add %0, 3664:i32
infer %1


; start LHS (in $37)
%0:i32 = var
%1:i32 = var
%2 = eq %0, %1
infer %2


; start LHS (in $37)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $37)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = ne %1, 87:i32
infer %2


; start LHS (in $37)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $37)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $37)
%0:i32 = var
%1 = add %0, -1:i32
infer %1


; start LHS (in $37)
%0 = block 2
%1:i32 = var
%2 = phi %0, %1, 0:i32
%3 = ne %2, 0:i32
infer %3


; start LHS (in $37)
%0 = block 2
%1:i32 = var
%2 = phi %0, %1, 0:i32
%3 = ne %2, 0:i32
%4 = block 2
%5:i32 = var
%6 = add %5, 1:i32 (hasExternalUses)
%7 = phi %4, %6, 3760:i32
%8 = select %3, %2, %7
infer %8


; function: $38

; start LHS (in $38)
%0:i32 = var
%1 = ule %0, 127:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = ult 2047:i32, %0
%2:i32 = var
%3 = ne %2, 0:i32
%4:i32 = var
%5 = ne %4, 0:i32
pc %3 1:i1
pc %5 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 63:i32
%2:i32 = var
%3 = ne %2, 0:i32
%4:i32 = var
%5 = ne %4, 0:i32
pc %3 1:i1
pc %5 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 63:i32
%2 = or %1, 128:i32
%3:i32 = var
%4 = ne %3, 0:i32
%5:i32 = var
%6 = ne %5, 0:i32
pc %4 1:i1
pc %6 1:i1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 6:i32
%2:i32 = var
%3 = ne %2, 0:i32
%4:i32 = var
%5 = ne %4, 0:i32
pc %3 1:i1
pc %5 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = or %1, 192:i32
%3:i32 = var
%4 = ne %3, 0:i32
%5:i32 = var
%6 = ne %5, 0:i32
pc %4 1:i1
pc %6 1:i1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -128:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -128:i32
%2 = eq %1, 57216:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = ult %0, 55296:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8192:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8192:i32
%2 = eq %1, 57344:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = add %0, -65536:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, -65536:i32
%2 = ult 1048575:i32, %1
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 18:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 18:i32
%2 = or %1, 240:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 63:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 63:i32
%2 = or %1, 128:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 12:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 12:i32
%2 = and %1, 63:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 12:i32
%2 = and %1, 63:i32
%3 = or %2, 128:i32
%4:i32 = var
%5 = ne %4, 0:i32
pc %5 1:i1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 6:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = and %1, 63:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = and %1, 63:i32
%3 = or %2, 128:i32
%4:i32 = var
%5 = ne %4, 0:i32
pc %5 1:i1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 12:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 12:i32
%2 = or %1, 224:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 63:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 63:i32
%2 = or %1, 128:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 6:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = and %1, 63:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = and %1, 63:i32
%3 = or %2, 128:i32
%4:i32 = var
%5 = ne %4, 0:i32
pc %5 1:i1
infer %3


; function: $39

; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32
infer %1


; start LHS (in $39)
%0:i64 = var
%1 = lshr %0, 63:i64
infer %1


; start LHS (in $39)
%0:i64 = var
%1 = xor %0, -9223372036854775808:i64
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 2048:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 2048:i32
%2 = eq %1, 0:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 1:i32
%2 = and %0, 2048:i32
%3 = eq %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 1:i32 (hasExternalUses)
%2 = ne %1, 0:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 1:i32 (hasExternalUses)
%2 = ne %1, 0:i32
%3 = select %2, 3302:i32, 3297:i32
%4 = and %0, 2048:i32
%5 = eq %4, 0:i32
pc %5 1:i1
infer %3


; start LHS (in $39)
%0:i32 = var
%1 = slt 1:i32, %0
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 224:i32
%3:i32 = var
%4 = slt 1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 300:i32
%3:i32 = var
%4 = slt 1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 208:i32
%3:i32 = var
%4 = slt 1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 216:i32
%3:i32 = var
%4 = slt 1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3 = ne %2, 0:i32
%4:i32 = var
%5 = slt 1:i32, %4
pc %3 1:i1
pc %5 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 256:i32
%3:i32 = var
%4 = slt 1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = or %0, 32:i32
%2:i32 = var
%3 = slt 1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = or %0, 32:i32 (hasExternalUses)
%2 = ne %1, 97:i32
%3:i32 = var
%4 = slt 1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $39)
%0 = block 3
%1:i32 = var
%2 = and %1, 1:i32 (hasExternalUses)
%3 = ne %2, 0:i32 (hasExternalUses)
%4 = select %3, 3302:i32, 3297:i32 (hasExternalUses)
%5 = phi %0, 3296:i32, %4, 3299:i32
%6 = add %5, 9:i32
%7:i32 = var
%8 = slt 1:i32, %7
pc %8 1:i1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 32:i32
%2:i32 = var
%3 = slt 1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 32:i32 (hasExternalUses)
%2 = ne %1, 0:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 32:i32 (hasExternalUses)
%2 = ne %1, 0:i32
%3 = block 3
%4:i32 = var
%5 = and %4, 1:i32 (hasExternalUses)
%6 = ne %5, 0:i32 (hasExternalUses)
%7 = select %6, 3302:i32, 3297:i32 (hasExternalUses)
%8 = phi %3, 3296:i32, %7, 3299:i32
%9 = add %8, 9:i32
%10 = select %2, %9, %8
%11:i32 = var
%12 = slt 1:i32, %11
pc %12 1:i1
infer %10


; start LHS (in $39)
%0:i32 = var
%1 = ult 26:i32, %0
%2:i32 = var
%3 = slt 1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub 27:i32, %0
%2:i32 = var
%3 = slt 1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub 27:i32, %0
%2 = eq %1, 0:i32
%3:i32 = var
%4 = slt 1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -27:i32
%2:i32 = var
%3 = slt 1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 120:i32
%3:i32 = var
%4 = slt 1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 112:i32
%3:i32 = var
%4 = slt 1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = slt 1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = ne %0, 45:i32
%2:i32 = var
%3 = slt 1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = sub %1, -64:i32
%3:i32 = var
%4 = slt 1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i64 = var
%1 = xor %0, -9223372036854775808:i64
%2:i32 = var
%3 = slt 1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 48:i32
%3:i32 = var
%4 = slt 1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 72:i32
%3:i32 = var
%4 = slt 1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 56:i32
%3:i32 = var
%4 = slt 1:i32, %3
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i64 = var
%1 = xor %0, -9223372036854775808:i64
%2:i32 = var
%3 = slt 1:i32, %2
pc %3 1:i1
infer %1


; start LHS (in $39)
%0 = block 3
%1:i32 = var
%2 = and %1, 1:i32 (hasExternalUses)
%3 = phi %0, 1:i32, %2, 1:i32
%4 = add %3, 3:i32
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = and %0, -65537:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 5:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 5:i32
%2 = and %1, 1:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 5:i32
%2 = and %1, 1:i32 (hasExternalUses)
%3 = ne %2, 0:i32
infer %3


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 5:i32
%2 = and %1, 1:i32 (hasExternalUses)
%3 = ne %2, 0:i32
%4 = select %3, 3360:i32, 3376:i32
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 5:i32
%2 = and %1, 1:i32 (hasExternalUses)
%3 = ne %2, 0:i32
infer %3


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 5:i32
%2 = and %1, 1:i32 (hasExternalUses)
%3 = ne %2, 0:i32
%4 = select %3, 3328:i32, 3344:i32
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = ne %0, 0:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = ne %0, 0:i32
%2:i32 = var
%3 = lshr %2, 5:i32
%4 = and %3, 1:i32
%5 = ne %4, 0:i32
%6 = select %5, 3360:i32, 3376:i32
%7 = ne %4, 0:i32
%8 = select %7, 3328:i32, 3344:i32
%9 = select %1, %6, %8
infer %9


; start LHS (in $39)
%0:i32 = var
%1 = slt %0, 0:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 192:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -28:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 200:i32
%3:i32 = var
%4 = ne %3, 0:i32
pc %4 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = slt %0, 0:i32
%2 = select %1, 6:i32, %0
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 304:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 7216:i32
infer %2


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = add %1, -28:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = slt %4, 0:i32
infer %5


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = add %1, -28:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = slt %4, 0:i32
%6:i32 = var
%7 = sub %6, 7680:i32 (hasExternalUses)
%8 = add %7, 304:i32
%9 = add %7, 7216:i32
%10 = select %5, %8, %9
infer %10


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 176:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 160:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 184:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 144:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 168:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 152:i32
infer %2


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = add %1, -28:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = sle 1:i32, %4
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = slt %0, 29:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -28:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = sle 1:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = slt %0, 29:i32
%2 = select %1, %0, 29:i32
%3 = block 2
%4:i32 = var
%5 = add %4, -28:i32
%6:i32 = var
%7 = phi %3, %5, %6
%8 = sle 1:i32, %7
pc %8 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -4:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -28:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = sle 1:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -4:i32 (hasExternalUses)
%2:i32 = var
%3 = ult %1, %2
%4 = block 2
%5:i32 = var
%6 = add %5, -28:i32
%7:i32 = var
%8 = phi %4, %6, %7
%9 = sle 1:i32, %8
pc %9 1:i1
infer %3


; start LHS (in $39)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3 = block 2
%4:i32 = var
%5 = add %4, -28:i32
%6:i32 = var
%7 = phi %3, %5, %6
%8 = sle 1:i32, %7
pc %8 1:i1
infer %2


; start LHS (in $39)
%0:i64 = var
%1 = and %0, 4294967295:i64
%2 = block 2
%3:i32 = var
%4 = add %3, -28:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = sle 1:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $39)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3:i64 = var
%4 = and %3, 4294967295:i64
%5 = add %2, %4
%6 = block 2
%7:i32 = var
%8 = add %7, -28:i32
%9:i32 = var
%10 = phi %6, %8, %9
%11 = sle 1:i32, %10
pc %11 1:i1
infer %5


; start LHS (in $39)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3:i64 = var
%4 = and %3, 4294967295:i64
%5 = add %2, %4 (hasExternalUses)
%6 = udiv %5, 1000000000:i64
%7 = block 2
%8:i32 = var
%9 = add %8, -28:i32
%10:i32 = var
%11 = phi %7, %9, %10
%12 = sle 1:i32, %11
pc %12 1:i1
infer %6


; start LHS (in $39)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3:i64 = var
%4 = and %3, 4294967295:i64
%5 = add %2, %4 (hasExternalUses)
%6 = udiv %5, 1000000000:i64 (hasExternalUses)
%7 = mul %6, 1000000000:i64
%8 = block 2
%9:i32 = var
%10 = add %9, -28:i32
%11:i32 = var
%12 = phi %8, %10, %11
%13 = sle 1:i32, %12
pc %13 1:i1
infer %7


; start LHS (in $39)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3:i64 = var
%4 = and %3, 4294967295:i64
%5 = add %2, %4
%6 = udiv %5, 1000000000:i64 (hasExternalUses)
%7 = mul %6, 1000000000:i64
%8 = sub %5, %7
%9 = block 2
%10:i32 = var
%11 = add %10, -28:i32
%12:i32 = var
%13 = phi %9, %11, %12
%14 = sle 1:i32, %13
pc %14 1:i1
infer %8


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -4:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -28:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = sle 1:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = add %1, -4:i32 (hasExternalUses)
%3 = ule %0, %2
%4 = block 2
%5:i32 = var
%6 = add %5, -28:i32
%7:i32 = var
%8 = phi %4, %6, %7
%9 = sle 1:i32, %8
pc %9 1:i1
infer %3


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -28:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = sle 1:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -4:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -28:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = sle 1:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = block 3
%2:i32 = var
%3 = add %2, -4:i32 (hasExternalUses)
%4 = phi %1, %2, %2, %3
%5 = ule %0, %4
%6 = block 2
%7:i32 = var
%8 = add %7, -28:i32
%9:i32 = var
%10 = phi %6, %8, %9
%11 = sle 1:i32, %10
pc %11 1:i1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -4:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -28:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = sle 1:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -28:i32
%5:i32 = var
%6 = phi %2, %4, %5
%7 = sle 1:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = slt %3, 29:i32
%5 = select %4, %3, 29:i32 (hasExternalUses)
%6 = phi %1, %2, %5
%7 = sub %0, %6
%8 = block 2
%9:i32 = var
%10 = add %9, -28:i32
%11:i32 = var
%12 = phi %8, %10, %11
%13 = sle 1:i32, %12
pc %13 1:i1
infer %7


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = slt %3, 29:i32
%5 = select %4, %3, 29:i32 (hasExternalUses)
%6 = phi %1, %2, %5
%7 = sub %0, %6 (hasExternalUses)
%8 = slt 0:i32, %7
%9 = block 2
%10:i32 = var
%11 = add %10, -28:i32
%12:i32 = var
%13 = phi %9, %11, %12
%14 = sle 1:i32, %13
pc %14 1:i1
infer %8


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = slt %4, 29:i32
%6 = select %5, %4, 29:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = sub %1, %7 (hasExternalUses)
%9 = block 2
%10:i32 = var
%11 = add %10, -28:i32 (hasExternalUses)
%12:i32 = var
%13 = phi %9, %11, %12
%14 = phi %0, %8, %13
%15 = sle %14, -1:i32
infer %15


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9 = add %8, 45:i32
%10:i32 = var
%11:i32 = var
%12:i32 = var
%13 = slt %12, 29:i32
%14 = select %13, %12, 29:i32
%15 = phi %1, %11, %14
%16 = sub %10, %15
%17 = block 2
%18:i32 = var
%19 = add %18, -28:i32
%20:i32 = var
%21 = phi %17, %19, %20
%22 = phi %0, %16, %21
%23 = sle %22, -1:i32
pc %23 1:i1
infer %9


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9 = add %8, 45:i32
%10 = sdiv %9, 9:i32
%11:i32 = var
%12:i32 = var
%13:i32 = var
%14 = slt %13, 29:i32
%15 = select %14, %13, 29:i32
%16 = phi %1, %12, %15
%17 = sub %11, %16
%18 = block 2
%19:i32 = var
%20 = add %19, -28:i32
%21:i32 = var
%22 = phi %18, %20, %21
%23 = phi %0, %17, %22
%24 = sle %23, -1:i32
pc %24 1:i1
infer %10


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9 = add %8, 45:i32
%10 = sdiv %9, 9:i32
%11 = add %10, 1:i32
%12:i32 = var
%13:i32 = var
%14:i32 = var
%15 = slt %14, 29:i32
%16 = select %15, %14, 29:i32
%17 = phi %1, %13, %16
%18 = sub %12, %17
%19 = block 2
%20:i32 = var
%21 = add %20, -28:i32
%22:i32 = var
%23 = phi %19, %21, %22
%24 = phi %0, %18, %23
%25 = sle %24, -1:i32
pc %25 1:i1
infer %11


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = or %5, 32:i32 (hasExternalUses)
%7 = phi %0, %4, %6
%8 = eq %7, 102:i32
%9:i32 = var
%10:i32 = var
%11:i32 = var
%12 = slt %11, 29:i32
%13 = select %12, %11, 29:i32
%14 = phi %1, %10, %13
%15 = sub %9, %14
%16 = block 2
%17:i32 = var
%18 = add %17, -28:i32
%19:i32 = var
%20 = phi %16, %18, %19
%21 = phi %0, %15, %20
%22 = sle %21, -1:i32
pc %22 1:i1
infer %8


; start LHS (in $39)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = block 2
%3:i32 = var
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = slt %6, 29:i32
%8 = select %7, %6, 29:i32
%9 = phi %4, %5, %8
%10 = sub %3, %9
%11 = block 2
%12:i32 = var
%13 = add %12, -28:i32
%14:i32 = var
%15 = phi %11, %13, %14
%16 = phi %2, %10, %15
%17 = sle %16, -1:i32
pc %17 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub 0:i32, %0 (hasExternalUses)
%2 = slt %1, 9:i32
%3 = block 2
%4:i32 = var
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = slt %7, 29:i32
%9 = select %8, %7, 29:i32
%10 = phi %5, %6, %9
%11 = sub %4, %10
%12 = block 2
%13:i32 = var
%14 = add %13, -28:i32
%15:i32 = var
%16 = phi %12, %14, %15
%17 = phi %3, %11, %16
%18 = sle %17, -1:i32
pc %18 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = slt %1, 9:i32
%3 = select %2, %1, 9:i32
%4 = block 2
%5:i32 = var
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = slt %8, 29:i32
%10 = select %9, %8, 29:i32
%11 = phi %6, %7, %10
%12 = sub %5, %11
%13 = block 2
%14:i32 = var
%15 = add %14, -28:i32
%16:i32 = var
%17 = phi %13, %15, %16
%18 = phi %4, %12, %17
%19 = sle %18, -1:i32
pc %19 1:i1
infer %3


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3 = block 2
%4:i32 = var
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = slt %7, 29:i32
%9 = select %8, %7, 29:i32
%10 = phi %5, %6, %9
%11 = sub %4, %10
%12 = block 2
%13:i32 = var
%14 = add %13, -28:i32
%15:i32 = var
%16 = phi %12, %14, %15
%17 = phi %3, %11, %16
%18 = sle %17, -1:i32
pc %18 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = slt %1, 9:i32
%3 = select %2, %1, 9:i32 (hasExternalUses)
%4 = lshr 1000000000:i32, %3
%5:i32 = var
%6:i32 = var
%7 = ult %5, %6
%8 = block 2
%9:i32 = var
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = slt %12, 29:i32
%14 = select %13, %12, 29:i32
%15 = phi %10, %11, %14
%16 = sub %9, %15
%17 = block 2
%18:i32 = var
%19 = add %18, -28:i32
%20:i32 = var
%21 = phi %17, %19, %20
%22 = phi %8, %16, %21
%23 = sle %22, -1:i32
pc %7 1:i1
pc %23 1:i1
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = slt %1, 9:i32
%3 = select %2, %1, 9:i32 (hasExternalUses)
%4 = shl 1:i32, %3
%5:i32 = var
%6:i32 = var
%7 = ult %5, %6
%8 = block 2
%9:i32 = var
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = slt %12, 29:i32
%14 = select %13, %12, 29:i32
%15 = phi %10, %11, %14
%16 = sub %9, %15
%17 = block 2
%18:i32 = var
%19 = add %18, -28:i32
%20:i32 = var
%21 = phi %17, %19, %20
%22 = phi %8, %16, %21
%23 = sle %22, -1:i32
pc %7 1:i1
pc %23 1:i1
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = slt %1, 9:i32
%3 = select %2, %1, 9:i32 (hasExternalUses)
%4 = shl 1:i32, %3
%5 = add %4, -1:i32
%6:i32 = var
%7:i32 = var
%8 = ult %6, %7
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = slt %13, 29:i32
%15 = select %14, %13, 29:i32
%16 = phi %11, %12, %15
%17 = sub %10, %16
%18 = block 2
%19:i32 = var
%20 = add %19, -28:i32
%21:i32 = var
%22 = phi %18, %20, %21
%23 = phi %9, %17, %22
%24 = sle %23, -1:i32
pc %8 1:i1
pc %24 1:i1
infer %5


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = sub 0:i32, %1
%3 = slt %2, 9:i32
%4 = select %3, %2, 9:i32 (hasExternalUses)
%5 = lshr %0, %4
%6:i32 = var
%7:i32 = var
%8 = ult %6, %7
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = slt %13, 29:i32
%15 = select %14, %13, 29:i32
%16 = phi %11, %12, %15
%17 = sub %10, %16
%18 = block 2
%19:i32 = var
%20 = add %19, -28:i32
%21:i32 = var
%22 = phi %18, %20, %21
%23 = phi %9, %17, %22
%24 = sle %23, -1:i32
pc %8 1:i1
pc %24 1:i1
infer %5


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = sub 0:i32, %1
%3 = slt %2, 9:i32
%4 = select %3, %2, 9:i32 (hasExternalUses)
%5 = lshr %0, %4
%6:i32 = var
%7 = add %5, %6
%8:i32 = var
%9:i32 = var
%10 = ult %8, %9
%11 = block 2
%12:i32 = var
%13 = block 2
%14:i32 = var
%15:i32 = var
%16 = slt %15, 29:i32
%17 = select %16, %15, 29:i32
%18 = phi %13, %14, %17
%19 = sub %12, %18
%20 = block 2
%21:i32 = var
%22 = add %21, -28:i32
%23:i32 = var
%24 = phi %20, %22, %23
%25 = phi %11, %19, %24
%26 = sle %25, -1:i32
pc %10 1:i1
pc %26 1:i1
infer %7


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = sub 0:i32, %1
%3 = slt %2, 9:i32
%4 = select %3, %2, 9:i32 (hasExternalUses)
%5 = shl 1:i32, %4
%6 = add %5, -1:i32
%7 = and %0, %6
%8:i32 = var
%9:i32 = var
%10 = ult %8, %9
%11 = block 2
%12:i32 = var
%13 = block 2
%14:i32 = var
%15:i32 = var
%16 = slt %15, 29:i32
%17 = select %16, %15, 29:i32
%18 = phi %13, %14, %17
%19 = sub %12, %18
%20 = block 2
%21:i32 = var
%22 = add %21, -28:i32
%23:i32 = var
%24 = phi %20, %22, %23
%25 = phi %11, %19, %24
%26 = sle %25, -1:i32
pc %10 1:i1
pc %26 1:i1
infer %7


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = sub 0:i32, %1
%3 = slt %2, 9:i32
%4 = select %3, %2, 9:i32 (hasExternalUses)
%5 = shl 1:i32, %4
%6 = add %5, -1:i32
%7 = and %0, %6
%8 = lshr 1000000000:i32, %4
%9 = mul %7, %8
%10:i32 = var
%11:i32 = var
%12 = ult %10, %11
%13 = block 2
%14:i32 = var
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = slt %17, 29:i32
%19 = select %18, %17, 29:i32
%20 = phi %15, %16, %19
%21 = sub %14, %20
%22 = block 2
%23:i32 = var
%24 = add %23, -28:i32
%25:i32 = var
%26 = phi %22, %24, %25
%27 = phi %13, %21, %26
%28 = sle %27, -1:i32
pc %12 1:i1
pc %28 1:i1
infer %9


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3:i32 = var
%4 = ult %2, %3
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = slt %9, 29:i32
%11 = select %10, %9, 29:i32
%12 = phi %7, %8, %11
%13 = sub %6, %12
%14 = block 2
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %14, %16, %17
%19 = phi %5, %13, %18
%20 = sle %19, -1:i32
pc %4 1:i1
pc %20 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 4:i32 (hasExternalUses)
%2:i32 = var
%3 = ult %1, %2
%4:i32 = var
%5 = ult %4, %2
%6 = block 2
%7:i32 = var
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = slt %10, 29:i32
%12 = select %11, %10, 29:i32
%13 = phi %8, %9, %12
%14 = sub %7, %13
%15 = block 2
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %15, %17, %18
%20 = phi %6, %14, %19
%21 = sle %20, -1:i32
pc %5 1:i1
pc %21 1:i1
infer %3


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = ult %0, %2
%4 = block 2
%5:i32 = var
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = slt %8, 29:i32
%10 = select %9, %8, 29:i32
%11 = phi %6, %7, %10
%12 = sub %5, %11
%13 = block 2
%14:i32 = var
%15 = add %14, -28:i32
%16:i32 = var
%17 = phi %13, %15, %16
%18 = phi %4, %12, %17
%19 = sle %18, -1:i32
pc %3 1:i1
pc %19 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = ne %0, 0:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = ne %0, 0:i32
%2:i32 = var
%3 = add %2, 4:i32
%4 = select %1, %2, %3
%5:i32 = var
%6 = ult %2, %5
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = slt %11, 29:i32
%13 = select %12, %11, 29:i32
%14 = phi %9, %10, %13
%15 = sub %8, %14
%16 = block 2
%17:i32 = var
%18 = add %17, -28:i32
%19:i32 = var
%20 = phi %16, %18, %19
%21 = phi %7, %15, %20
%22 = sle %21, -1:i32
pc %6 1:i1
pc %22 1:i1
infer %4


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = sub 0:i32, %1
%3 = slt %2, 9:i32
%4 = select %3, %2, 9:i32 (hasExternalUses)
%5 = shl 1:i32, %4
%6 = add %5, -1:i32
%7 = and %0, %6
%8 = lshr 1000000000:i32, %4
%9 = mul %7, %8 (hasExternalUses)
%10 = eq %9, 0:i32
%11:i32 = var
%12:i32 = var
%13 = ult %11, %12
%14 = block 2
%15:i32 = var
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = slt %18, 29:i32
%20 = select %19, %18, 29:i32
%21 = phi %16, %17, %20
%22 = sub %15, %21
%23 = block 2
%24:i32 = var
%25 = add %24, -28:i32
%26:i32 = var
%27 = phi %23, %25, %26
%28 = phi %14, %22, %27
%29 = sle %28, -1:i32
pc %13 1:i1
pc %29 1:i1
infer %10


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = ult %2, %0
%4 = block 2
%5:i32 = var
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = slt %8, 29:i32
%10 = select %9, %8, 29:i32
%11 = phi %6, %7, %10
%12 = sub %5, %11
%13 = block 2
%14:i32 = var
%15 = add %14, -28:i32
%16:i32 = var
%17 = phi %13, %15, %16
%18 = phi %4, %12, %17
%19 = sle %18, -1:i32
pc %3 1:i1
pc %19 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3:i32 = var
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = slt %6, 29:i32
%8 = select %7, %6, 29:i32
%9 = phi %4, %5, %8
%10 = sub %3, %9
%11 = block 2
%12:i32 = var
%13 = add %12, -28:i32
%14:i32 = var
%15 = phi %11, %13, %14
%16 = phi %2, %10, %15
%17 = sle %16, -1:i32
pc %17 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = ne %0, 0:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = ne %0, 0:i32
%2:i32 = var
%3 = add %2, 4:i32
%4 = select %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = slt %9, 29:i32
%11 = select %10, %9, 29:i32
%12 = phi %7, %8, %11
%13 = sub %6, %12
%14 = block 2
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %14, %16, %17
%19 = phi %5, %13, %18
%20 = sle %19, -1:i32
pc %20 1:i1
infer %4


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = sub 0:i32, %1
%3 = slt %2, 9:i32
%4 = select %3, %2, 9:i32 (hasExternalUses)
%5 = add %0, %4
%6 = block 2
%7:i32 = var
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = slt %10, 29:i32
%12 = select %11, %10, 29:i32
%13 = phi %8, %9, %12
%14 = sub %7, %13
%15 = block 2
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %15, %17, %18
%20 = phi %6, %14, %19
%21 = sle %20, -1:i32
pc %21 1:i1
infer %5


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = or %5, 32:i32 (hasExternalUses)
%7 = phi %0, %4, %6
%8 = eq %7, 102:i32
%9 = ne %8, 0:i32
infer %9


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = or %5, 32:i32 (hasExternalUses)
%7 = phi %0, %4, %6
%8 = eq %7, 102:i32
%9 = ne %8, 0:i32
%10:i32 = var
%11:i32 = var
%12 = phi %1, %10, %11
%13 = block 2
%14:i32 = var
%15 = add %14, -28:i32 (hasExternalUses)
%16:i32 = var
%17 = phi %13, %15, %16
%18 = slt %17, 0:i32
%19:i32 = var
%20 = sub %19, 7680:i32 (hasExternalUses)
%21 = add %20, 304:i32
%22 = add %20, 7216:i32
%23 = select %18, %21, %22 (hasExternalUses)
%24 = phi %0, %12, %23
%25 = block 3
%26:i32 = var
%27 = ne %26, 0:i32 (hasExternalUses)
%28:i32 = var
%29 = add %28, 4:i32
%30 = select %27, %28, %29 (hasExternalUses)
%31:i32 = var
%32 = phi %25, %30, %30, %31
%33 = select %9, %24, %32
%34:i32 = var
pc %34 1:i1
infer %33


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9 = add %8, 45:i32
%10 = sdiv %9, 9:i32
%11 = add %10, 1:i32 (hasExternalUses)
%12 = shl %11, 2:i32
%13:i32 = var
%14:i32 = var
%15:i32 = var
%16 = slt %15, 29:i32
%17 = select %16, %15, 29:i32
%18 = phi %1, %14, %17
%19 = sub %13, %18
%20 = block 2
%21:i32 = var
%22 = add %21, -28:i32
%23:i32 = var
%24 = phi %20, %22, %23
%25 = phi %0, %19, %24
%26 = sle %25, -1:i32
pc %26 1:i1
infer %12


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = or %5, 32:i32 (hasExternalUses)
%7 = phi %0, %4, %6
%8 = eq %7, 102:i32
%9 = ne %8, 0:i32 (hasExternalUses)
%10:i32 = var
%11:i32 = var
%12 = phi %1, %10, %11
%13 = block 2
%14:i32 = var
%15 = add %14, -28:i32 (hasExternalUses)
%16:i32 = var
%17 = phi %13, %15, %16
%18 = slt %17, 0:i32
%19:i32 = var
%20 = sub %19, 7680:i32 (hasExternalUses)
%21 = add %20, 304:i32
%22 = add %20, 7216:i32
%23 = select %18, %21, %22 (hasExternalUses)
%24 = phi %0, %12, %23
%25 = block 3
%26:i32 = var
%27 = ne %26, 0:i32 (hasExternalUses)
%28:i32 = var
%29 = add %28, 4:i32
%30 = select %27, %28, %29 (hasExternalUses)
%31:i32 = var
%32 = phi %25, %30, %30, %31
%33 = select %9, %24, %32 (hasExternalUses)
%34:i32 = var
%35 = add %33, %34
%36:i32 = var
pc %36 1:i1
infer %35


; start LHS (in $39)
%0 = block 3
%1:i32 = var
%2 = add %1, 4:i32 (hasExternalUses)
%3 = phi %0, %1, %2, %1
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = or %9, 32:i32 (hasExternalUses)
%11 = phi %4, %8, %10
%12 = eq %11, 102:i32
%13 = ne %12, 0:i32 (hasExternalUses)
%14:i32 = var
%15:i32 = var
%16 = phi %5, %14, %15
%17 = block 2
%18:i32 = var
%19 = add %18, -28:i32 (hasExternalUses)
%20:i32 = var
%21 = phi %17, %19, %20
%22 = slt %21, 0:i32
%23:i32 = var
%24 = sub %23, 7680:i32 (hasExternalUses)
%25 = add %24, 304:i32
%26 = add %24, 7216:i32
%27 = select %22, %25, %26 (hasExternalUses)
%28 = phi %4, %16, %27
%29:i32 = var
%30 = ne %29, 0:i32 (hasExternalUses)
%31:i32 = var
%32:i32 = var
%33 = select %30, %31, %32 (hasExternalUses)
%34:i32 = var
%35 = phi %0, %33, %33, %34
%36 = select %13, %28, %35 (hasExternalUses)
%37 = sub %3, %36
%38:i32 = var
pc %38 1:i1
infer %37


; start LHS (in $39)
%0 = block 3
%1:i32 = var
%2 = add %1, 4:i32 (hasExternalUses)
%3 = phi %0, %1, %2, %1
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = or %9, 32:i32 (hasExternalUses)
%11 = phi %4, %8, %10
%12 = eq %11, 102:i32
%13 = ne %12, 0:i32 (hasExternalUses)
%14:i32 = var
%15:i32 = var
%16 = phi %5, %14, %15
%17 = block 2
%18:i32 = var
%19 = add %18, -28:i32 (hasExternalUses)
%20:i32 = var
%21 = phi %17, %19, %20
%22 = slt %21, 0:i32
%23:i32 = var
%24 = sub %23, 7680:i32 (hasExternalUses)
%25 = add %24, 304:i32
%26 = add %24, 7216:i32
%27 = select %22, %25, %26 (hasExternalUses)
%28 = phi %4, %16, %27
%29:i32 = var
%30 = ne %29, 0:i32 (hasExternalUses)
%31:i32 = var
%32:i32 = var
%33 = select %30, %31, %32 (hasExternalUses)
%34:i32 = var
%35 = phi %0, %33, %33, %34
%36 = select %13, %28, %35 (hasExternalUses)
%37 = sub %3, %36
%38 = ashr %37, 2:i32
%39:i32 = var
pc %39 1:i1
infer %38


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9 = add %8, 45:i32
%10 = sdiv %9, 9:i32
%11 = add %10, 1:i32 (hasExternalUses)
%12 = block 3
%13:i32 = var
%14 = add %13, 4:i32 (hasExternalUses)
%15 = phi %12, %13, %14, %13
%16:i32 = var
%17:i32 = var
%18 = phi %1, %16, %17
%19:i32 = var
%20 = or %19, 32:i32 (hasExternalUses)
%21 = phi %0, %18, %20
%22 = eq %21, 102:i32
%23 = ne %22, 0:i32 (hasExternalUses)
%24:i32 = var
%25:i32 = var
%26 = phi %1, %24, %25
%27 = block 2
%28:i32 = var
%29 = add %28, -28:i32 (hasExternalUses)
%30:i32 = var
%31 = phi %27, %29, %30
%32 = slt %31, 0:i32
%33:i32 = var
%34:i32 = var
%35 = select %32, %33, %34 (hasExternalUses)
%36 = phi %0, %26, %35
%37:i32 = var
%38:i32 = var
%39 = phi %12, %37, %37, %38
%40 = select %23, %36, %39 (hasExternalUses)
%41 = sub %15, %40
%42 = ashr %41, 2:i32
%43 = slt %11, %42
%44:i32 = var
pc %44 1:i1
infer %43


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9 = add %8, 45:i32
%10 = sdiv %9, 9:i32
%11 = add %10, 1:i32 (hasExternalUses)
%12 = block 3
%13:i32 = var
%14 = add %13, 4:i32
%15 = phi %12, %13, %14, %13
%16:i32 = var
%17:i32 = var
%18 = phi %1, %16, %17
%19:i32 = var
%20 = or %19, 32:i32 (hasExternalUses)
%21 = phi %0, %18, %20
%22 = eq %21, 102:i32
%23 = ne %22, 0:i32 (hasExternalUses)
%24:i32 = var
%25:i32 = var
%26 = phi %1, %24, %25
%27 = block 2
%28:i32 = var
%29:i32 = var
%30 = phi %27, %28, %29
%31 = slt %30, 0:i32
%32:i32 = var
%33:i32 = var
%34 = select %31, %32, %33 (hasExternalUses)
%35 = phi %0, %26, %34
%36:i32 = var
%37:i32 = var
%38 = phi %12, %36, %36, %37
%39 = select %23, %35, %38 (hasExternalUses)
%40 = sub %15, %39
%41 = ashr %40, 2:i32
%42 = slt %11, %41
%43:i32 = var
%44 = select %42, %43, %15
%45:i32 = var
pc %45 1:i1
infer %44


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = sub 0:i32, %1
%3 = slt %2, 9:i32
%4 = select %3, %2, 9:i32 (hasExternalUses)
%5 = add %0, %4 (hasExternalUses)
%6 = slt %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = slt %11, 29:i32
%13 = select %12, %11, 29:i32
%14 = phi %9, %10, %13
%15 = sub %8, %14
%16 = block 2
%17:i32 = var
%18 = add %17, -28:i32
%19:i32 = var
%20 = phi %16, %18, %19
%21 = phi %7, %15, %20
%22 = sle %21, -1:i32
pc %22 1:i1
infer %6


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = add %3, 4:i32 (hasExternalUses)
%5 = phi %1, %2, %4
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10:i32 = var
%11:i32 = var
%12 = select %10, 6:i32, %11 (hasExternalUses)
%13 = phi %1, %9, %12
%14 = add %13, 45:i32
%15 = sdiv %14, 9:i32
%16 = add %15, 1:i32 (hasExternalUses)
%17 = block 3
%18:i32 = var
%19 = add %18, 4:i32
%20 = phi %17, %18, %19, %18
%21:i32 = var
%22:i32 = var
%23 = phi %6, %21, %22
%24:i32 = var
%25 = phi %1, %23, %24
%26 = eq %25, 102:i32
%27 = ne %26, 0:i32 (hasExternalUses)
%28:i32 = var
%29:i32 = var
%30 = phi %6, %28, %29
%31:i32 = var
%32 = phi %1, %30, %31
%33:i32 = var
%34:i32 = var
%35 = phi %17, %33, %33, %34
%36 = select %27, %32, %35 (hasExternalUses)
%37 = sub %20, %36
%38 = ashr %37, 2:i32
%39 = slt %16, %38
%40:i32 = var
%41 = select %39, %40, %20 (hasExternalUses)
%42 = phi %0, %5, %41
%43:i32 = var
%44 = block 3
%45:i32 = var
%46:i32 = var
%47 = phi %44, %45, %45, %46
%48 = phi %6, %43, %47
%49 = phi %1, %48, %31
%50 = phi %0, %49, %35
%51 = ule %42, %50
%52:i32 = var
blockpc %0 0 %52 1:i1
%53:i32 = var
blockpc %0 1 %53 1:i1
infer %51


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, -28:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %5, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = sub %11, 7680:i32 (hasExternalUses)
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %10, %13, %14 (hasExternalUses)
%16 = phi %0, %4, %15
%17 = block 2
%18:i32 = var
%19 = block 3
%20:i32 = var
%21 = add %20, -4:i32 (hasExternalUses)
%22 = phi %19, %20, %20, %21
%23 = phi %1, %18, %22
%24 = phi %0, %23, %15
%25 = block 3
%26:i32 = var
%27 = ne %26, 0:i32 (hasExternalUses)
%28:i32 = var
%29 = add %28, 4:i32
%30 = select %27, %28, %29 (hasExternalUses)
%31:i32 = var
%32 = phi %25, %30, %30, %31
%33 = phi %17, %24, %32
%34 = sub %16, %33
%35:i32 = var
blockpc %17 0 %35 1:i1
%36:i32 = var
blockpc %17 1 %36 1:i1
infer %34


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, -28:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %5, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = sub %11, 7680:i32 (hasExternalUses)
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %10, %13, %14 (hasExternalUses)
%16 = phi %0, %4, %15
%17 = block 2
%18:i32 = var
%19 = block 3
%20:i32 = var
%21 = add %20, -4:i32 (hasExternalUses)
%22 = phi %19, %20, %20, %21
%23 = phi %1, %18, %22
%24 = phi %0, %23, %15
%25 = block 3
%26:i32 = var
%27 = ne %26, 0:i32 (hasExternalUses)
%28:i32 = var
%29 = add %28, 4:i32
%30 = select %27, %28, %29 (hasExternalUses)
%31:i32 = var
%32 = phi %25, %30, %30, %31
%33 = phi %17, %24, %32
%34 = sub %16, %33
%35 = ashr %34, 2:i32
%36:i32 = var
blockpc %17 0 %36 1:i1
%37:i32 = var
blockpc %17 1 %37 1:i1
infer %35


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, -28:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %5, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = sub %11, 7680:i32 (hasExternalUses)
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %10, %13, %14 (hasExternalUses)
%16 = phi %0, %4, %15
%17 = block 2
%18:i32 = var
%19 = block 3
%20:i32 = var
%21 = add %20, -4:i32 (hasExternalUses)
%22 = phi %19, %20, %20, %21
%23 = phi %1, %18, %22
%24 = phi %0, %23, %15
%25 = block 3
%26:i32 = var
%27 = ne %26, 0:i32 (hasExternalUses)
%28:i32 = var
%29 = add %28, 4:i32
%30 = select %27, %28, %29 (hasExternalUses)
%31:i32 = var
%32 = phi %25, %30, %30, %31
%33 = phi %17, %24, %32
%34 = sub %16, %33
%35 = ashr %34, 2:i32
%36 = mul %35, 9:i32
%37:i32 = var
blockpc %17 0 %37 1:i1
%38:i32 = var
blockpc %17 1 %38 1:i1
infer %36


; start LHS (in $39)
%0:i32 = var
%1 = ult %0, 10:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = mul %0, 10:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = mul %0, 10:i32
%2:i32 = var
%3 = ule %1, %2
infer %3


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = or %5, 32:i32 (hasExternalUses)
%7 = phi %0, %4, %6
%8 = eq %7, 102:i32
infer %8


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = or %5, 32:i32 (hasExternalUses)
%7 = phi %0, %4, %6
%8 = eq %7, 102:i32
%9 = block 3
%10:i32 = var
%11:i32 = var
%12 = phi %1, %10, %11
%13 = block 2
%14:i32 = var
%15:i32 = var
%16 = phi %13, %14, %15
%17 = slt %16, 0:i32
%18:i32 = var
%19 = sub %18, 7680:i32 (hasExternalUses)
%20 = add %19, 304:i32
%21 = add %19, 7216:i32
%22 = select %17, %20, %21 (hasExternalUses)
%23 = phi %0, %12, %22
%24 = block 2
%25:i32 = var
%26 = block 3
%27:i32 = var
%28:i32 = var
%29 = phi %26, %27, %27, %28
%30 = phi %1, %25, %29
%31 = phi %0, %30, %22
%32 = block 3
%33:i32 = var
%34:i32 = var
%35 = phi %32, %33, %33, %34
%36 = phi %24, %31, %35
%37 = sub %23, %36
%38 = ashr %37, 2:i32
%39 = mul %38, 9:i32 (hasExternalUses)
%40:i32 = var
%41 = phi %9, 0:i32, %39, %40
%42 = select %8, 0:i32, %41
%43:i32 = var
blockpc %24 0 %43 1:i1
%44:i32 = var
blockpc %24 1 %44 1:i1
infer %42


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9:i32 = var
%10:i32 = var
%11 = phi %1, %9, %10
%12:i32 = var
%13 = or %12, 32:i32 (hasExternalUses)
%14 = phi %0, %11, %13
%15 = eq %14, 102:i32
%16 = block 3
%17:i32 = var
%18:i32 = var
%19 = phi %1, %17, %18
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = slt %23, 0:i32
%25:i32 = var
%26 = add %25, 304:i32
%27 = add %25, 7216:i32
%28 = select %24, %26, %27 (hasExternalUses)
%29 = phi %0, %19, %28
%30 = block 2
%31:i32 = var
%32 = block 3
%33:i32 = var
%34:i32 = var
%35 = phi %32, %33, %33, %34
%36 = phi %1, %31, %35
%37 = phi %0, %36, %28
%38 = block 3
%39:i32 = var
%40:i32 = var
%41 = phi %38, %39, %39, %40
%42 = phi %30, %37, %41
%43 = sub %29, %42
%44 = ashr %43, 2:i32
%45 = mul %44, 9:i32 (hasExternalUses)
%46:i32 = var
%47 = phi %16, 0:i32, %45, %46
%48 = select %15, 0:i32, %47 (hasExternalUses)
%49 = sub %8, %48
%50:i32 = var
blockpc %30 0 %50 1:i1
%51:i32 = var
blockpc %30 1 %51 1:i1
infer %49


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9 = ne %8, 0:i32
infer %9


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = or %5, 32:i32 (hasExternalUses)
%7 = phi %0, %4, %6
%8 = eq %7, 103:i32
infer %8


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9 = ne %8, 0:i32
%10:i32 = zext %9
%11:i32 = var
%12:i32 = var
%13 = phi %1, %11, %12
%14:i32 = var
%15 = or %14, 32:i32 (hasExternalUses)
%16 = phi %0, %13, %15
%17 = eq %16, 103:i32
%18:i32 = zext %17
%19 = and %10, %18
infer %19


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9:i32 = var
%10:i32 = var
%11 = phi %1, %9, %10
%12:i32 = var
%13 = or %12, 32:i32 (hasExternalUses)
%14 = phi %0, %11, %13
%15 = eq %14, 102:i32
%16 = block 3
%17:i32 = var
%18:i32 = var
%19 = phi %1, %17, %18
%20:i32 = var
%21:i32 = var
%22:i32 = var
%23 = select %20, %21, %22 (hasExternalUses)
%24 = phi %0, %19, %23
%25 = block 2
%26:i32 = var
%27 = block 3
%28:i32 = var
%29:i32 = var
%30 = phi %27, %28, %28, %29
%31 = phi %1, %26, %30
%32 = phi %0, %31, %23
%33 = block 3
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %34, %35
%37 = phi %25, %32, %36
%38 = sub %24, %37
%39 = ashr %38, 2:i32
%40 = mul %39, 9:i32 (hasExternalUses)
%41:i32 = var
%42 = phi %16, 0:i32, %40, %41
%43 = select %15, 0:i32, %42 (hasExternalUses)
%44 = sub %8, %43
%45:i32 = var
%46 = sub %44, %45
%47:i32 = var
blockpc %25 0 %47 1:i1
%48:i32 = var
blockpc %25 1 %48 1:i1
infer %46


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = add %3, 4:i32 (hasExternalUses)
%5 = phi %1, %2, %4
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10:i32 = var
%11:i32 = var
%12 = select %10, 6:i32, %11 (hasExternalUses)
%13 = phi %1, %9, %12
%14 = add %13, 45:i32
%15 = sdiv %14, 9:i32
%16 = add %15, 1:i32 (hasExternalUses)
%17 = block 3
%18:i32 = var
%19 = add %18, 4:i32
%20 = phi %17, %18, %19, %18
%21:i32 = var
%22:i32 = var
%23 = phi %6, %21, %22
%24:i32 = var
%25 = phi %1, %23, %24
%26 = eq %25, 102:i32
%27 = ne %26, 0:i32 (hasExternalUses)
%28:i32 = var
%29:i32 = var
%30 = phi %6, %28, %29
%31:i32 = var
%32 = phi %1, %30, %31
%33:i32 = var
%34:i32 = var
%35 = phi %17, %33, %33, %34
%36 = select %27, %32, %35 (hasExternalUses)
%37 = sub %20, %36
%38 = ashr %37, 2:i32
%39 = slt %16, %38
%40:i32 = var
%41 = select %39, %40, %20 (hasExternalUses)
%42 = phi %0, %5, %41
%43 = sub %42, %32
%44:i32 = var
blockpc %0 0 %44 1:i1
%45:i32 = var
blockpc %0 1 %45 1:i1
infer %43


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = add %3, 4:i32 (hasExternalUses)
%5 = phi %1, %2, %4
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10:i32 = var
%11 = phi %1, %9, %10
%12 = add %11, 45:i32
%13 = sdiv %12, 9:i32
%14 = add %13, 1:i32 (hasExternalUses)
%15 = block 3
%16:i32 = var
%17 = add %16, 4:i32
%18 = phi %15, %16, %17, %16
%19:i32 = var
%20 = ne %19, 0:i32 (hasExternalUses)
%21:i32 = var
%22:i32 = var
%23 = phi %6, %21, %22
%24:i32 = var
%25 = phi %1, %23, %24
%26:i32 = var
%27:i32 = var
%28 = phi %15, %26, %26, %27
%29 = select %20, %25, %28 (hasExternalUses)
%30 = sub %18, %29
%31 = ashr %30, 2:i32
%32 = slt %14, %31
%33:i32 = var
%34 = select %32, %33, %18 (hasExternalUses)
%35 = phi %0, %5, %34
%36 = sub %35, %25
%37 = ashr %36, 2:i32
%38:i32 = var
blockpc %0 0 %38 1:i1
%39:i32 = var
blockpc %0 1 %39 1:i1
infer %37


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = add %3, 4:i32 (hasExternalUses)
%5 = phi %1, %2, %4
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10:i32 = var
%11 = phi %1, %9, %10
%12 = add %11, 45:i32
%13 = sdiv %12, 9:i32
%14 = add %13, 1:i32 (hasExternalUses)
%15 = block 3
%16:i32 = var
%17:i32 = var
%18 = phi %15, %16, %17, %16
%19:i32 = var
%20:i32 = var
%21:i32 = var
%22 = phi %6, %20, %21
%23:i32 = var
%24 = phi %1, %22, %23
%25:i32 = var
%26:i32 = var
%27 = phi %15, %25, %25, %26
%28 = select %19, %24, %27 (hasExternalUses)
%29 = sub %18, %28
%30 = ashr %29, 2:i32
%31 = slt %14, %30
%32:i32 = var
%33 = select %31, %32, %18 (hasExternalUses)
%34 = phi %0, %5, %33
%35 = sub %34, %24
%36 = ashr %35, 2:i32
%37 = mul %36, 9:i32
%38:i32 = var
blockpc %0 0 %38 1:i1
%39:i32 = var
blockpc %0 1 %39 1:i1
infer %37


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = add %3, 4:i32 (hasExternalUses)
%5 = phi %1, %2, %4
%6:i32 = var
%7 = sdiv %6, 9:i32
%8 = add %7, 1:i32 (hasExternalUses)
%9 = block 3
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11, %10
%13:i32 = var
%14 = sub %12, %13
%15 = ashr %14, 2:i32
%16 = slt %8, %15
%17 = shl %8, 2:i32
%18 = add %13, %17
%19 = select %16, %18, %12 (hasExternalUses)
%20 = phi %0, %5, %19
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = block 2
%26:i32 = var
%27 = add %26, -28:i32 (hasExternalUses)
%28:i32 = var
%29 = phi %25, %27, %28
%30 = slt %29, 0:i32
%31:i32 = var
%32:i32 = var
%33 = select %30, %31, %32 (hasExternalUses)
%34 = phi %1, %24, %33
%35 = sub %20, %34
%36 = ashr %35, 2:i32
%37 = mul %36, 9:i32
%38 = add %37, -9:i32
%39:i32 = var
blockpc %0 0 %39 1:i1
%40:i32 = var
blockpc %0 1 %40 1:i1
infer %38


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9:i32 = var
%10:i32 = var
%11 = phi %1, %9, %10
%12:i32 = var
%13 = or %12, 32:i32 (hasExternalUses)
%14 = phi %0, %11, %13
%15 = eq %14, 102:i32
%16 = block 3
%17:i32 = var
%18:i32 = var
%19 = phi %1, %17, %18
%20:i32 = var
%21 = phi %0, %19, %20
%22 = block 2
%23:i32 = var
%24 = block 3
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %25, %26
%28 = phi %1, %23, %27
%29 = phi %0, %28, %20
%30 = block 3
%31:i32 = var
%32:i32 = var
%33 = phi %30, %31, %31, %32
%34 = phi %22, %29, %33
%35 = sub %21, %34
%36 = ashr %35, 2:i32
%37 = mul %36, 9:i32 (hasExternalUses)
%38:i32 = var
%39 = phi %16, 0:i32, %37, %38
%40 = select %15, 0:i32, %39 (hasExternalUses)
%41 = sub %8, %40
%42:i32 = var
%43 = sub %41, %42 (hasExternalUses)
%44:i32 = var
%45 = slt %43, %44
%46:i32 = var
blockpc %22 0 %46 1:i1
%47:i32 = var
blockpc %22 1 %47 1:i1
infer %45


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9:i32 = var
%10:i32 = var
%11 = phi %1, %9, %10
%12:i32 = var
%13 = or %12, 32:i32 (hasExternalUses)
%14 = phi %0, %11, %13
%15 = eq %14, 102:i32
%16 = block 3
%17:i32 = var
%18:i32 = var
%19 = phi %1, %17, %18
%20:i32 = var
%21 = phi %0, %19, %20
%22 = block 2
%23:i32 = var
%24 = block 3
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %25, %26
%28 = phi %1, %23, %27
%29 = phi %0, %28, %20
%30 = block 3
%31:i32 = var
%32:i32 = var
%33 = phi %30, %31, %31, %32
%34 = phi %22, %29, %33
%35 = sub %21, %34
%36 = ashr %35, 2:i32
%37 = mul %36, 9:i32 (hasExternalUses)
%38:i32 = var
%39 = phi %16, 0:i32, %37, %38
%40 = select %15, 0:i32, %39 (hasExternalUses)
%41 = sub %8, %40
%42:i32 = var
%43 = sub %41, %42 (hasExternalUses)
%44 = add %43, 147456:i32
%45:i32 = var
blockpc %22 0 %45 1:i1
%46:i32 = var
blockpc %22 1 %46 1:i1
%47:i32 = var
pc %47 1:i1
infer %44


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9:i32 = var
%10:i32 = var
%11 = phi %1, %9, %10
%12:i32 = var
%13 = or %12, 32:i32 (hasExternalUses)
%14 = phi %0, %11, %13
%15 = eq %14, 102:i32
%16 = block 3
%17:i32 = var
%18:i32 = var
%19 = phi %1, %17, %18
%20:i32 = var
%21 = phi %0, %19, %20
%22 = block 2
%23:i32 = var
%24 = block 3
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %25, %26
%28 = phi %1, %23, %27
%29 = phi %0, %28, %20
%30 = block 3
%31:i32 = var
%32:i32 = var
%33 = phi %30, %31, %31, %32
%34 = phi %22, %29, %33
%35 = sub %21, %34
%36 = ashr %35, 2:i32
%37 = mul %36, 9:i32 (hasExternalUses)
%38:i32 = var
%39 = phi %16, 0:i32, %37, %38
%40 = select %15, 0:i32, %39 (hasExternalUses)
%41 = sub %8, %40
%42:i32 = var
%43 = sub %41, %42 (hasExternalUses)
%44 = add %43, 147456:i32 (hasExternalUses)
%45 = sdiv %44, 9:i32
%46:i32 = var
blockpc %22 0 %46 1:i1
%47:i32 = var
blockpc %22 1 %47 1:i1
%48:i32 = var
pc %48 1:i1
infer %45


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9:i32 = var
%10:i32 = var
%11 = phi %1, %9, %10
%12:i32 = var
%13 = or %12, 32:i32 (hasExternalUses)
%14 = phi %0, %11, %13
%15 = eq %14, 102:i32
%16 = block 3
%17:i32 = var
%18 = ashr %17, 2:i32
%19 = mul %18, 9:i32 (hasExternalUses)
%20:i32 = var
%21 = add %20, 1:i32 (hasExternalUses)
%22 = phi %16, 0:i32, %19, %21
%23 = select %15, 0:i32, %22 (hasExternalUses)
%24 = sub %8, %23
%25 = ne %8, 0:i32
%26:i32 = zext %25
%27 = eq %14, 103:i32
%28:i32 = zext %27
%29 = and %26, %28 (hasExternalUses)
%30 = sub %24, %29 (hasExternalUses)
%31 = add %30, 147456:i32 (hasExternalUses)
%32 = sdiv %31, 9:i32 (hasExternalUses)
%33 = mul %32, 9:i32
%34:i32 = var
pc %34 1:i1
infer %33


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9:i32 = var
%10:i32 = var
%11 = phi %1, %9, %10
%12:i32 = var
%13 = or %12, 32:i32 (hasExternalUses)
%14 = phi %0, %11, %13
%15 = eq %14, 102:i32
%16 = block 3
%17:i32 = var
%18 = ashr %17, 2:i32
%19 = mul %18, 9:i32 (hasExternalUses)
%20:i32 = var
%21 = add %20, 1:i32 (hasExternalUses)
%22 = phi %16, 0:i32, %19, %21
%23 = select %15, 0:i32, %22 (hasExternalUses)
%24 = sub %8, %23
%25 = ne %8, 0:i32
%26:i32 = zext %25
%27 = eq %14, 103:i32
%28:i32 = zext %27
%29 = and %26, %28 (hasExternalUses)
%30 = sub %24, %29 (hasExternalUses)
%31 = add %30, 147456:i32 (hasExternalUses)
%32 = sdiv %31, 9:i32 (hasExternalUses)
%33 = add %32, -16384:i32
%34:i32 = var
pc %34 1:i1
infer %33


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9:i32 = var
%10:i32 = var
%11 = phi %1, %9, %10
%12:i32 = var
%13 = phi %0, %11, %12
%14 = eq %13, 102:i32
%15 = block 3
%16:i32 = var
%17 = mul %16, 9:i32 (hasExternalUses)
%18:i32 = var
%19 = add %18, 1:i32 (hasExternalUses)
%20 = phi %15, 0:i32, %17, %19
%21 = select %14, 0:i32, %20 (hasExternalUses)
%22 = sub %8, %21
%23 = ne %8, 0:i32
%24:i32 = zext %23
%25 = eq %13, 103:i32
%26:i32 = zext %25
%27 = and %24, %26 (hasExternalUses)
%28 = sub %22, %27 (hasExternalUses)
%29 = add %28, 147456:i32 (hasExternalUses)
%30 = sdiv %29, 9:i32 (hasExternalUses)
%31 = add %30, -16384:i32 (hasExternalUses)
%32 = shl %31, 2:i32
%33:i32 = var
pc %33 1:i1
infer %32


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, -28:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %5, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = sub %11, 7680:i32 (hasExternalUses)
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %10, %13, %14 (hasExternalUses)
%16 = phi %0, %4, %15
%17:i32 = var
%18:i32 = var
%19 = phi %1, %17, %18
%20:i32 = var
%21:i32 = var
%22 = select %20, 6:i32, %21 (hasExternalUses)
%23 = phi %0, %19, %22
%24:i32 = var
%25:i32 = var
%26 = phi %1, %24, %25
%27:i32 = var
%28 = phi %0, %26, %27
%29 = eq %28, 102:i32
%30 = block 3
%31:i32 = var
%32:i32 = var
%33 = phi %30, 0:i32, %31, %32
%34 = select %29, 0:i32, %33 (hasExternalUses)
%35 = sub %23, %34
%36:i32 = var
%37 = sub %35, %36 (hasExternalUses)
%38 = add %37, 147456:i32 (hasExternalUses)
%39 = sdiv %38, 9:i32 (hasExternalUses)
%40 = add %39, -16384:i32 (hasExternalUses)
%41 = shl %40, 2:i32
%42 = add %16, %41
%43:i32 = var
pc %43 1:i1
infer %42


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, -28:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %5, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = sub %11, 7680:i32 (hasExternalUses)
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %10, %13, %14 (hasExternalUses)
%16 = phi %0, %4, %15
%17:i32 = var
%18:i32 = var
%19 = phi %1, %17, %18
%20:i32 = var
%21 = phi %0, %19, %20
%22:i32 = var
%23 = block 3
%24:i32 = var
%25:i32 = var
%26 = phi %23, 0:i32, %24, %25
%27 = select %22, 0:i32, %26 (hasExternalUses)
%28 = sub %21, %27
%29:i32 = var
%30:i32 = zext %29
%31:i32 = var
%32:i32 = zext %31
%33 = and %30, %32 (hasExternalUses)
%34 = sub %28, %33 (hasExternalUses)
%35 = add %34, 147456:i32 (hasExternalUses)
%36 = sdiv %35, 9:i32 (hasExternalUses)
%37 = add %36, -16384:i32 (hasExternalUses)
%38 = shl %37, 2:i32
%39 = add %16, %38
%40 = add %39, 4:i32
%41:i32 = var
pc %41 1:i1
infer %40


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9:i32 = var
%10:i32 = var
%11 = phi %1, %9, %10
%12:i32 = var
%13 = or %12, 32:i32 (hasExternalUses)
%14 = phi %0, %11, %13
%15 = eq %14, 102:i32
%16 = block 3
%17:i32 = var
%18:i32 = var
%19 = phi %1, %17, %18
%20:i32 = var
%21 = phi %0, %19, %20
%22 = block 2
%23:i32 = var
%24 = block 3
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %25, %26
%28 = phi %1, %23, %27
%29 = phi %0, %28, %20
%30 = block 3
%31:i32 = var
%32:i32 = var
%33 = phi %30, %31, %31, %32
%34 = phi %22, %29, %33
%35 = sub %21, %34
%36 = ashr %35, 2:i32
%37 = mul %36, 9:i32 (hasExternalUses)
%38:i32 = var
%39 = phi %16, 0:i32, %37, %38
%40 = select %15, 0:i32, %39 (hasExternalUses)
%41 = sub %8, %40
%42:i32 = var
%43 = sub %41, %42 (hasExternalUses)
%44 = add %43, 147456:i32 (hasExternalUses)
%45:i32 = var
%46 = sub %44, %45
%47:i32 = var
blockpc %22 0 %47 1:i1
%48:i32 = var
blockpc %22 1 %48 1:i1
%49:i32 = var
pc %49 1:i1
infer %46


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9:i32 = var
%10:i32 = var
%11 = phi %1, %9, %10
%12:i32 = var
%13 = or %12, 32:i32 (hasExternalUses)
%14 = phi %0, %11, %13
%15 = eq %14, 102:i32
%16 = block 3
%17:i32 = var
%18 = ashr %17, 2:i32
%19 = mul %18, 9:i32 (hasExternalUses)
%20:i32 = var
%21 = add %20, 1:i32 (hasExternalUses)
%22 = phi %16, 0:i32, %19, %21
%23 = select %15, 0:i32, %22 (hasExternalUses)
%24 = sub %8, %23
%25 = ne %8, 0:i32
%26:i32 = zext %25
%27 = eq %14, 103:i32
%28:i32 = zext %27
%29 = and %26, %28 (hasExternalUses)
%30 = sub %24, %29 (hasExternalUses)
%31 = add %30, 147456:i32 (hasExternalUses)
%32:i32 = var
%33 = sub %31, %32
%34 = sle %33, 7:i32
%35:i32 = var
pc %35 1:i1
infer %34


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9 = ne %8, 0:i32
%10:i32 = zext %9
%11:i32 = var
%12:i32 = var
%13 = phi %1, %11, %12
%14:i32 = var
%15 = or %14, 32:i32 (hasExternalUses)
%16 = phi %0, %13, %15
%17 = eq %16, 103:i32
%18:i32 = zext %17
%19 = and %10, %18 (hasExternalUses)
%20 = sub %8, %19
%21 = eq %16, 102:i32
%22 = block 3
%23:i32 = var
%24 = ashr %23, 2:i32
%25 = mul %24, 9:i32
%26:i32 = var
%27 = add %26, 1:i32
%28 = phi %22, 0:i32, %25, %27
%29 = select %21, 0:i32, %28
%30 = sub %8, %29
%31 = sub %30, %19
%32 = add %31, 147456:i32
%33:i32 = var
%34 = sub %32, %33
%35 = sle %34, 7:i32
%36:i32 = var
pc %35 1:i1
pc %36 1:i1
infer %20


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9 = ne %8, 0:i32
%10:i32 = zext %9
%11:i32 = var
%12:i32 = var
%13 = phi %1, %11, %12
%14:i32 = var
%15 = or %14, 32:i32 (hasExternalUses)
%16 = phi %0, %13, %15
%17 = eq %16, 103:i32
%18:i32 = zext %17
%19 = and %10, %18 (hasExternalUses)
%20 = sub %8, %19
%21 = add %20, 147455:i32
%22 = eq %16, 102:i32
%23 = block 3
%24:i32 = var
%25 = ashr %24, 2:i32
%26 = mul %25, 9:i32
%27:i32 = var
%28 = add %27, 1:i32
%29 = phi %23, 0:i32, %26, %28
%30 = select %22, 0:i32, %29
%31 = sub %8, %30
%32 = sub %31, %19
%33 = add %32, 147456:i32
%34:i32 = var
%35 = sub %33, %34
%36 = sle %35, 7:i32
%37:i32 = var
pc %36 1:i1
pc %37 1:i1
infer %21


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9 = ne %8, 0:i32
%10:i32 = zext %9
%11:i32 = var
%12:i32 = var
%13 = phi %1, %11, %12
%14:i32 = var
%15 = or %14, 32:i32 (hasExternalUses)
%16 = phi %0, %13, %15
%17 = eq %16, 103:i32
%18:i32 = zext %17
%19 = and %10, %18 (hasExternalUses)
%20 = sub %8, %19
%21 = add %20, 147455:i32
%22 = eq %16, 102:i32
%23 = block 3
%24:i32 = var
%25:i32 = var
%26 = phi %1, %24, %25
%27 = block 2
%28:i32 = var
%29:i32 = var
%30 = phi %27, %28, %29
%31 = slt %30, 0:i32
%32:i32 = var
%33:i32 = var
%34 = select %31, %32, %33 (hasExternalUses)
%35 = phi %0, %26, %34
%36 = block 2
%37:i32 = var
%38 = block 3
%39:i32 = var
%40:i32 = var
%41 = phi %38, %39, %39, %40
%42 = phi %1, %37, %41
%43 = phi %0, %42, %34
%44 = block 3
%45:i32 = var
%46:i32 = var
%47 = phi %44, %45, %45, %46
%48 = phi %36, %43, %47
%49 = sub %35, %48
%50 = ashr %49, 2:i32
%51 = mul %50, 9:i32 (hasExternalUses)
%52:i32 = var
%53 = phi %23, 0:i32, %51, %52
%54 = select %22, 0:i32, %53 (hasExternalUses)
%55 = sub %21, %54
%56:i32 = var
blockpc %36 0 %56 1:i1
%57:i32 = var
blockpc %36 1 %57 1:i1
%58:i32 = var
%59:i32 = var
pc %58 1:i1
pc %59 1:i1
infer %55


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9 = ne %8, 0:i32
%10:i32 = zext %9
%11:i32 = var
%12:i32 = var
%13 = phi %1, %11, %12
%14:i32 = var
%15 = or %14, 32:i32 (hasExternalUses)
%16 = phi %0, %13, %15
%17 = eq %16, 103:i32
%18:i32 = zext %17
%19 = and %10, %18 (hasExternalUses)
%20 = sub %8, %19
%21 = add %20, 147455:i32
%22 = eq %16, 102:i32
%23 = block 3
%24:i32 = var
%25:i32 = var
%26 = phi %1, %24, %25
%27:i32 = var
%28:i32 = var
%29:i32 = var
%30 = select %27, %28, %29 (hasExternalUses)
%31 = phi %0, %26, %30
%32 = block 2
%33:i32 = var
%34 = block 3
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %35, %36
%38 = phi %1, %33, %37
%39 = phi %0, %38, %30
%40 = block 3
%41:i32 = var
%42:i32 = var
%43 = phi %40, %41, %41, %42
%44 = phi %32, %39, %43
%45 = sub %31, %44
%46 = ashr %45, 2:i32
%47 = mul %46, 9:i32 (hasExternalUses)
%48:i32 = var
%49 = phi %23, 0:i32, %47, %48
%50 = select %22, 0:i32, %49 (hasExternalUses)
%51 = sub %21, %50
%52:i32 = var
%53 = sub %51, %52
%54:i32 = var
blockpc %32 0 %54 1:i1
%55:i32 = var
blockpc %32 1 %55 1:i1
%56:i32 = var
%57:i32 = var
pc %56 1:i1
pc %57 1:i1
infer %53


; start LHS (in $39)
%0:i32 = var
%1 = mul %0, 10:i32
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = slt %7, 0:i32
%9 = select %8, 6:i32, %7
%10 = phi %2, %6, %9
%11:i32 = var
%12:i32 = var
%13 = phi %3, %11, %12
%14:i32 = var
%15 = or %14, 32:i32
%16 = phi %2, %13, %15
%17 = eq %16, 102:i32
%18 = block 3
%19:i32 = var
%20 = ashr %19, 2:i32
%21 = mul %20, 9:i32
%22:i32 = var
%23 = add %22, 1:i32
%24 = phi %18, 0:i32, %21, %23
%25 = select %17, 0:i32, %24
%26 = sub %10, %25
%27 = ne %10, 0:i32
%28:i32 = zext %27
%29 = eq %16, 103:i32
%30:i32 = zext %29
%31 = and %28, %30
%32 = sub %26, %31
%33 = add %32, 147456:i32
%34:i32 = var
%35 = sub %33, %34
%36 = sle %35, 7:i32
%37:i32 = var
pc %36 1:i1
pc %37 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 1:i32
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = slt %7, 0:i32
%9 = select %8, 6:i32, %7
%10 = phi %2, %6, %9
%11:i32 = var
%12:i32 = var
%13 = phi %3, %11, %12
%14:i32 = var
%15 = or %14, 32:i32
%16 = phi %2, %13, %15
%17 = eq %16, 102:i32
%18 = block 3
%19:i32 = var
%20 = ashr %19, 2:i32
%21 = mul %20, 9:i32
%22:i32 = var
%23 = add %22, 1:i32
%24 = phi %18, 0:i32, %21, %23
%25 = select %17, 0:i32, %24
%26 = sub %10, %25
%27 = ne %10, 0:i32
%28:i32 = zext %27
%29 = eq %16, 103:i32
%30:i32 = zext %29
%31 = and %28, %30
%32 = sub %26, %31
%33 = add %32, 147456:i32
%34:i32 = var
%35 = sub %33, %34
%36 = sle %35, 7:i32
%37:i32 = var
pc %36 1:i1
pc %37 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 1:i32
%2 = slt %1, 7:i32
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = slt %8, 0:i32
%10 = select %9, 6:i32, %8
%11 = phi %3, %7, %10
%12:i32 = var
%13:i32 = var
%14 = phi %4, %12, %13
%15:i32 = var
%16 = or %15, 32:i32
%17 = phi %3, %14, %16
%18 = eq %17, 102:i32
%19 = block 3
%20:i32 = var
%21 = ashr %20, 2:i32
%22 = mul %21, 9:i32
%23:i32 = var
%24 = add %23, 1:i32
%25 = phi %19, 0:i32, %22, %24
%26 = select %18, 0:i32, %25
%27 = sub %11, %26
%28 = ne %11, 0:i32
%29:i32 = zext %28
%30:i32 = var
%31:i32 = zext %30
%32 = and %29, %31
%33 = sub %27, %32
%34 = add %33, 147456:i32
%35:i32 = var
%36 = sub %34, %35
%37 = sle %36, 7:i32
%38:i32 = var
pc %37 1:i1
pc %38 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, 10:i32, %3
%5 = udiv %0, %4
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11:i32 = var
%12 = slt %11, 0:i32
%13 = select %12, 6:i32, %11
%14 = phi %6, %10, %13
%15:i32 = var
%16:i32 = var
%17 = phi %7, %15, %16
%18:i32 = var
%19 = phi %6, %17, %18
%20 = eq %19, 102:i32
%21 = block 3
%22:i32 = var
%23 = mul %22, 9:i32
%24:i32 = var
%25 = add %24, 1:i32
%26 = phi %21, 0:i32, %23, %25
%27 = select %20, 0:i32, %26
%28 = sub %14, %27
%29 = ne %14, 0:i32
%30:i32 = zext %29
%31:i32 = var
%32:i32 = zext %31
%33 = and %30, %32
%34 = sub %28, %33
%35 = add %34, 147456:i32
%36:i32 = var
%37 = sub %35, %36
%38 = sle %37, 7:i32
blockpc %1 0 %38 1:i1
%39:i32 = var
blockpc %1 1 %39 1:i1
%40:i32 = var
pc %40 1:i1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, 10:i32, %3
%5 = udiv %0, %4 (hasExternalUses)
%6 = mul %5, %4
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12:i32 = var
%13 = slt %12, 0:i32
%14 = select %13, 6:i32, %12
%15 = phi %7, %11, %14
%16:i32 = var
%17:i32 = var
%18 = phi %8, %16, %17
%19:i32 = var
%20 = phi %7, %18, %19
%21 = eq %20, 102:i32
%22 = block 3
%23:i32 = var
%24 = mul %23, 9:i32
%25:i32 = var
%26 = add %25, 1:i32
%27 = phi %22, 0:i32, %24, %26
%28 = select %21, 0:i32, %27
%29 = sub %15, %28
%30:i32 = var
%31 = sub %29, %30
%32 = add %31, 147456:i32
%33:i32 = var
%34 = sub %32, %33
%35 = sle %34, 7:i32
blockpc %1 0 %35 1:i1
%36:i32 = var
blockpc %1 1 %36 1:i1
%37:i32 = var
pc %37 1:i1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, 10:i32, %3
%5 = udiv %0, %4 (hasExternalUses)
%6 = mul %5, %4
%7 = sub %0, %6
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13:i32 = var
%14 = slt %13, 0:i32
%15 = select %14, 6:i32, %13
%16 = phi %8, %12, %15
%17:i32 = var
%18:i32 = var
%19 = phi %9, %17, %18
%20:i32 = var
%21 = phi %8, %19, %20
%22 = eq %21, 102:i32
%23 = block 3
%24:i32 = var
%25 = mul %24, 9:i32
%26:i32 = var
%27 = add %26, 1:i32
%28 = phi %23, 0:i32, %25, %27
%29 = select %22, 0:i32, %28
%30 = sub %16, %29
%31:i32 = var
%32 = sub %30, %31
%33 = add %32, 147456:i32
%34:i32 = var
%35 = sub %33, %34
%36 = sle %35, 7:i32
blockpc %1 0 %36 1:i1
%37:i32 = var
blockpc %1 1 %37 1:i1
%38:i32 = var
pc %38 1:i1
infer %7


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, -28:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %5, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = sub %11, 7680:i32 (hasExternalUses)
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %10, %13, %14 (hasExternalUses)
%16 = phi %0, %4, %15
%17:i32 = var
%18:i32 = var
%19 = phi %1, %17, %18
%20:i32 = var
%21 = phi %0, %19, %20
%22:i32 = var
%23 = sub %21, %22
%24:i32 = var
%25:i32 = zext %24
%26:i32 = var
%27:i32 = zext %26
%28 = and %25, %27 (hasExternalUses)
%29 = sub %23, %28 (hasExternalUses)
%30 = add %29, 147456:i32 (hasExternalUses)
%31 = sdiv %30, 9:i32 (hasExternalUses)
%32 = add %31, -16384:i32 (hasExternalUses)
%33 = shl %32, 2:i32
%34 = add %16, %33
%35 = add %34, 4:i32 (hasExternalUses)
%36 = add %35, 4:i32
%37:i32 = var
pc %37 1:i1
infer %36


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, -28:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %5, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = sub %11, 7680:i32 (hasExternalUses)
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %10, %13, %14 (hasExternalUses)
%16 = phi %0, %4, %15
%17:i32 = var
%18:i32 = var
%19 = sub %17, %18 (hasExternalUses)
%20 = add %19, 147456:i32 (hasExternalUses)
%21 = sdiv %20, 9:i32 (hasExternalUses)
%22 = add %21, -16384:i32 (hasExternalUses)
%23 = shl %22, 2:i32
%24 = add %16, %23
%25 = add %24, 4:i32 (hasExternalUses)
%26 = add %25, 4:i32 (hasExternalUses)
%27 = block 2
%28:i32 = var
%29:i32 = var
%30 = add %29, 4:i32 (hasExternalUses)
%31 = phi %0, %28, %30
%32:i32 = var
%33 = phi %27, %31, %32
%34 = eq %26, %33
%35:i32 = var
blockpc %27 0 %35 1:i1
%36:i32 = var
blockpc %27 1 %36 1:i1
%37:i32 = var
pc %37 1:i1
infer %34


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, 10:i32, %3
%5 = udiv %0, %4 (hasExternalUses)
%6 = mul %5, %4
%7 = sub %0, %6 (hasExternalUses)
%8 = eq %7, 0:i32
%9 = block 2
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14:i32 = var
%15 = slt %14, 0:i32
%16 = select %15, 6:i32, %14
%17 = phi %9, %13, %16
%18:i32 = var
%19:i32 = var
%20 = phi %10, %18, %19
%21:i32 = var
%22 = phi %9, %20, %21
%23 = eq %22, 102:i32
%24 = block 3
%25:i32 = var
%26 = mul %25, 9:i32
%27:i32 = var
%28 = add %27, 1:i32
%29 = phi %24, 0:i32, %26, %28
%30 = select %23, 0:i32, %29
%31 = sub %17, %30
%32:i32 = var
%33 = sub %31, %32
%34 = add %33, 147456:i32
%35:i32 = var
%36 = sub %34, %35
%37 = sle %36, 7:i32
blockpc %1 0 %37 1:i1
%38:i32 = var
blockpc %1 1 %38 1:i1
%39:i32 = var
%40:i32 = var
pc %39 1:i1
pc %40 1:i1
infer %8


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, 10:i32, %3
%5 = udiv %0, %4 (hasExternalUses)
%6 = and %5, 1:i32
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12:i32 = var
%13 = slt %12, 0:i32
%14 = select %13, 6:i32, %12
%15 = phi %7, %11, %14
%16:i32 = var
%17:i32 = var
%18 = phi %8, %16, %17
%19:i32 = var
%20 = phi %7, %18, %19
%21 = eq %20, 102:i32
%22 = block 3
%23:i32 = var
%24 = mul %23, 9:i32
%25:i32 = var
%26 = add %25, 1:i32
%27 = phi %22, 0:i32, %24, %26
%28 = select %21, 0:i32, %27
%29 = sub %15, %28
%30:i32 = var
%31 = sub %29, %30
%32 = add %31, 147456:i32
%33:i32 = var
%34 = sub %32, %33
%35 = sle %34, 7:i32
blockpc %1 0 %35 1:i1
%36:i32 = var
blockpc %1 1 %36 1:i1
%37:i32 = var
pc %37 1:i1
infer %6


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = mul %1, 10:i32 (hasExternalUses)
%3 = phi %0, 10:i32, %2
%4 = lshr %3, 1:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10:i32 = var
%11 = slt %10, 0:i32
%12 = select %11, 6:i32, %10
%13 = phi %5, %9, %12
%14:i32 = var
%15:i32 = var
%16 = phi %6, %14, %15
%17:i32 = var
%18 = phi %5, %16, %17
%19 = eq %18, 102:i32
%20 = block 3
%21:i32 = var
%22 = mul %21, 9:i32
%23:i32 = var
%24 = add %23, 1:i32
%25 = phi %20, 0:i32, %22, %24
%26 = select %19, 0:i32, %25
%27 = sub %13, %26
%28 = ne %13, 0:i32
%29:i32 = zext %28
%30:i32 = var
%31:i32 = zext %30
%32 = and %29, %31
%33 = sub %27, %32
%34 = add %33, 147456:i32
%35:i32 = var
%36 = sub %34, %35
%37 = sle %36, 7:i32
blockpc %0 0 %37 1:i1
%38:i32 = var
blockpc %0 1 %38 1:i1
%39:i32 = var
pc %39 1:i1
infer %4


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = mul %1, 10:i32 (hasExternalUses)
%3 = phi %0, 10:i32, %2
%4 = lshr %3, 1:i32 (hasExternalUses)
%5:i32 = var
%6 = udiv %5, %3 (hasExternalUses)
%7 = mul %6, %3
%8 = sub %5, %7 (hasExternalUses)
%9 = ule %4, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15:i32 = var
%16 = slt %15, 0:i32
%17 = select %16, 6:i32, %15
%18 = phi %10, %14, %17
%19:i32 = var
%20:i32 = var
%21 = phi %11, %19, %20
%22:i32 = var
%23 = phi %10, %21, %22
%24 = eq %23, 102:i32
%25 = block 3
%26:i32 = var
%27 = mul %26, 9:i32
%28:i32 = var
%29 = add %28, 1:i32
%30 = phi %25, 0:i32, %27, %29
%31 = select %24, 0:i32, %30
%32 = sub %18, %31
%33:i32 = var
%34 = sub %32, %33
%35 = add %34, 147456:i32
%36:i32 = var
%37 = sub %35, %36
%38 = sle %37, 7:i32
blockpc %0 0 %38 1:i1
%39:i32 = var
blockpc %0 1 %39 1:i1
%40:i32 = var
pc %40 1:i1
infer %9


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, 10:i32, %3
%5 = udiv %0, %4 (hasExternalUses)
%6 = mul %5, %4
%7 = sub %0, %6 (hasExternalUses)
%8 = lshr %4, 1:i32 (hasExternalUses)
%9 = eq %7, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15:i32 = var
%16 = slt %15, 0:i32
%17 = select %16, 6:i32, %15
%18 = phi %10, %14, %17
%19:i32 = var
%20:i32 = var
%21 = phi %11, %19, %20
%22:i32 = var
%23 = phi %10, %21, %22
%24 = eq %23, 102:i32
%25 = block 3
%26:i32 = var
%27 = mul %26, 9:i32
%28:i32 = var
%29 = add %28, 1:i32
%30 = phi %25, 0:i32, %27, %29
%31 = select %24, 0:i32, %30
%32 = sub %18, %31
%33:i32 = var
%34 = sub %32, %33
%35 = add %34, 147456:i32
%36:i32 = var
%37 = sub %35, %36
%38 = sle %37, 7:i32
blockpc %1 0 %38 1:i1
%39:i32 = var
blockpc %1 1 %39 1:i1
%40:i32 = var
%41:i32 = var
pc %40 1:i1
pc %41 1:i1
infer %9


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, 10:i32, %3
%5 = udiv %0, %4 (hasExternalUses)
%6 = mul %5, %4
%7 = sub %0, %6 (hasExternalUses)
%8 = lshr %4, 1:i32 (hasExternalUses)
%9 = eq %7, %8
%10 = select %9, 4611404543450677248:i64, 4611545280939032576:i64
%11 = block 2
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = phi %12, %13, %14
%16:i32 = var
%17 = slt %16, 0:i32
%18 = select %17, 6:i32, %16
%19 = phi %11, %15, %18
%20:i32 = var
%21:i32 = var
%22 = phi %12, %20, %21
%23:i32 = var
%24 = phi %11, %22, %23
%25 = eq %24, 102:i32
%26 = block 3
%27:i32 = var
%28 = mul %27, 9:i32
%29:i32 = var
%30 = add %29, 1:i32
%31 = phi %26, 0:i32, %28, %30
%32 = select %25, 0:i32, %31
%33 = sub %19, %32
%34:i32 = var
%35 = sub %33, %34
%36 = add %35, 147456:i32
%37:i32 = var
%38 = sub %36, %37
%39 = sle %38, 7:i32
blockpc %1 0 %39 1:i1
%40:i32 = var
blockpc %1 1 %40 1:i1
%41:i32 = var
%42:i32 = var
pc %41 1:i1
pc %42 1:i1
infer %10


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, -28:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %5, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = sub %11, 7680:i32 (hasExternalUses)
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %10, %13, %14 (hasExternalUses)
%16 = phi %0, %4, %15
%17:i32 = var
%18:i32 = var
%19 = sub %17, %18 (hasExternalUses)
%20 = add %19, 147456:i32 (hasExternalUses)
%21 = sdiv %20, 9:i32 (hasExternalUses)
%22 = add %21, -16384:i32 (hasExternalUses)
%23 = shl %22, 2:i32
%24 = add %16, %23
%25 = add %24, 4:i32 (hasExternalUses)
%26 = add %25, 4:i32 (hasExternalUses)
%27 = block 2
%28:i32 = var
%29:i32 = var
%30 = add %29, 4:i32 (hasExternalUses)
%31 = phi %0, %28, %30
%32:i32 = var
%33 = phi %27, %31, %32
%34 = eq %26, %33
%35:i32 = var
blockpc %27 0 %35 1:i1
%36:i32 = var
blockpc %27 1 %36 1:i1
%37:i32 = var
%38:i32 = var
pc %37 1:i1
pc %38 1:i1
infer %34


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9 = slt %8, 0:i32
%10:i32 = var
%11 = sub %10, 7680:i32 (hasExternalUses)
%12 = add %11, 304:i32
%13 = add %11, 7216:i32
%14 = select %9, %12, %13 (hasExternalUses)
%15 = phi %0, %4, %14
%16:i32 = var
%17 = add %16, 147456:i32 (hasExternalUses)
%18 = sdiv %17, 9:i32 (hasExternalUses)
%19 = add %18, -16384:i32 (hasExternalUses)
%20 = shl %19, 2:i32
%21 = add %15, %20
%22 = add %21, 4:i32 (hasExternalUses)
%23 = add %22, 4:i32 (hasExternalUses)
%24 = block 2
%25:i32 = var
%26:i32 = var
%27 = add %26, 4:i32 (hasExternalUses)
%28 = phi %0, %25, %27
%29:i32 = var
%30:i32 = var
%31 = phi %1, %29, %30
%32:i32 = var
%33 = phi %0, %31, %32
%34 = add %33, 45:i32
%35 = sdiv %34, 9:i32
%36 = add %35, 1:i32 (hasExternalUses)
%37:i32 = var
%38 = slt %36, %37
%39:i32 = var
%40 = block 3
%41:i32 = var
%42:i32 = var
%43 = phi %40, %41, %42, %41
%44 = select %38, %39, %43 (hasExternalUses)
%45 = phi %24, %28, %44
%46 = eq %23, %45
%47:i64 = var
%48 = select %46, %47, 4611545280939032576:i64
%49:i32 = var
blockpc %24 0 %49 1:i1
%50:i32 = var
blockpc %24 1 %50 1:i1
%51:i32 = var
%52:i32 = var
pc %51 1:i1
pc %52 1:i1
infer %48


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 3
%6:i32 = var
%7 = and %6, 1:i32 (hasExternalUses)
%8 = phi %5, 1:i32, %7, 1:i32
%9 = phi %0, %4, %8
%10 = eq %9, 0:i32
%11:i32 = var
%12:i32 = var
%13 = phi %1, %11, %12
%14:i32 = var
%15 = slt %14, 0:i32
%16 = select %15, 6:i32, %14
%17 = phi %0, %13, %16
%18:i32 = var
%19:i32 = var
%20 = phi %1, %18, %19
%21:i32 = var
%22 = or %21, 32:i32
%23 = phi %0, %20, %22
%24 = eq %23, 102:i32
%25 = block 3
%26:i32 = var
%27:i32 = var
%28 = phi %1, %26, %27
%29:i32 = var
%30 = phi %0, %28, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1:i1
%33:i32 = var
blockpc %31 1 %33 1:i1
%34:i32 = var
%35 = block 3
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %36, %37
%39 = phi %1, %34, %38
%40 = phi %0, %39, %29
%41 = block 3
%42:i32 = var
%43:i32 = var
%44 = phi %41, %42, %42, %43
%45 = phi %31, %40, %44
%46 = sub %30, %45
%47 = ashr %46, 2:i32
%48 = mul %47, 9:i32
%49:i32 = var
%50 = phi %25, 0:i32, %48, %49
%51 = select %24, 0:i32, %50
%52 = sub %17, %51
%53:i32 = var
%54 = sub %52, %53
%55:i32 = var
%56 = slt %54, %55
pc %56 1:i1
infer %10


; start LHS (in $39)
%0:i32 = var
%1 = ne %0, 45:i32
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = slt %7, 0:i32
%9 = select %8, 6:i32, %7
%10 = phi %2, %6, %9
%11:i32 = var
%12:i32 = var
%13 = phi %3, %11, %12
%14:i32 = var
%15 = or %14, 32:i32
%16 = phi %2, %13, %15
%17 = eq %16, 102:i32
%18 = block 3
%19:i32 = var
%20:i32 = var
%21 = phi %3, %19, %20
%22:i32 = var
%23 = phi %2, %21, %22
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1:i1
%26:i32 = var
blockpc %24 1 %26 1:i1
%27:i32 = var
%28 = block 3
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %29, %30
%32 = phi %3, %27, %31
%33 = phi %2, %32, %22
%34 = block 3
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %35, %36
%38 = phi %24, %33, %37
%39 = sub %23, %38
%40 = ashr %39, 2:i32
%41 = mul %40, 9:i32
%42:i32 = var
%43 = phi %18, 0:i32, %41, %42
%44 = select %17, 0:i32, %43
%45 = sub %10, %44
%46:i32 = var
%47 = sub %45, %46
%48:i32 = var
%49 = slt %47, %48
pc %49 1:i1
infer %1


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6:i32 = var
%7:i32 = var
%8:i32 = var
%9 = select %6, %7, %8 (hasExternalUses)
%10 = phi %1, %5, %9
%11:i32 = var
%12 = add %11, -16384:i32 (hasExternalUses)
%13 = shl %12, 2:i32
%14 = add %10, %13
%15 = add %14, 4:i32 (hasExternalUses)
%16 = add %15, 4:i32 (hasExternalUses)
%17 = block 2
%18:i32 = var
%19:i32 = var
%20 = add %19, 4:i32 (hasExternalUses)
%21 = phi %1, %18, %20
%22:i32 = var
%23 = sdiv %22, 9:i32
%24 = add %23, 1:i32 (hasExternalUses)
%25 = block 3
%26:i32 = var
%27:i32 = var
%28 = phi %25, %26, %27, %26
%29:i32 = var
%30 = sub %28, %29
%31 = ashr %30, 2:i32
%32 = slt %24, %31
%33:i32 = var
%34 = select %32, %33, %28 (hasExternalUses)
%35 = phi %17, %21, %34
%36 = eq %16, %35
%37:i64 = var
%38 = select %36, %37, 4611545280939032576:i64 (hasExternalUses)
%39 = phi %0, 4611123068473966592:i64, %38
%40 = xor %39, -9223372036854775808:i64
%41:i32 = var
blockpc %0 0 %41 1:i1
%42:i32 = var
blockpc %0 1 %42 1:i1
%43:i32 = var
blockpc %17 0 %43 1:i1
%44:i32 = var
blockpc %17 1 %44 1:i1
%45:i32 = var
pc %45 1:i1
infer %40


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = sub %5, 7680:i32 (hasExternalUses)
%7 = phi %0, %4, %6
%8 = add %7, 128:i32
%9:i32 = var
%10:i32 = var
%11 = phi %1, %9, %10
%12:i32 = var
%13 = slt %12, 0:i32
%14 = select %13, 6:i32, %12
%15 = phi %0, %11, %14
%16:i32 = var
%17:i32 = var
%18 = phi %1, %16, %17
%19:i32 = var
%20 = or %19, 32:i32
%21 = phi %0, %18, %20
%22 = eq %21, 102:i32
%23 = block 3
%24:i32 = var
%25:i32 = var
%26 = phi %1, %24, %25
%27:i32 = var
%28 = phi %0, %26, %27
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1:i1
%31:i32 = var
blockpc %29 1 %31 1:i1
%32:i32 = var
%33 = block 3
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %34, %35
%37 = phi %1, %32, %36
%38 = phi %0, %37, %27
%39 = block 3
%40:i32 = var
%41:i32 = var
%42 = phi %39, %40, %40, %41
%43 = phi %29, %38, %42
%44 = sub %28, %43
%45 = ashr %44, 2:i32
%46 = mul %45, 9:i32
%47:i32 = var
%48 = phi %23, 0:i32, %46, %47
%49 = select %22, 0:i32, %48
%50 = sub %15, %49
%51:i32 = var
%52 = sub %50, %51
%53:i32 = var
%54 = slt %52, %53
pc %54 1:i1
infer %8


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, 10:i32, %3
%5 = udiv %0, %4 (hasExternalUses)
%6 = mul %5, %4
%7 = sub %0, %6 (hasExternalUses)
%8 = sub %0, %7
%9 = block 2
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14:i32 = var
%15 = slt %14, 0:i32
%16 = select %15, 6:i32, %14
%17 = phi %9, %13, %16
%18:i32 = var
%19:i32 = var
%20 = phi %10, %18, %19
%21:i32 = var
%22 = phi %9, %20, %21
%23 = eq %22, 102:i32
%24 = block 3
%25:i32 = var
%26 = mul %25, 9:i32
%27:i32 = var
%28 = add %27, 1:i32
%29 = phi %24, 0:i32, %26, %28
%30 = select %23, 0:i32, %29
%31 = sub %17, %30
%32:i32 = var
%33 = sub %31, %32
%34 = add %33, 147456:i32
%35:i32 = var
%36 = sub %34, %35
%37 = sle %36, 7:i32
blockpc %1 0 %37 1:i1
%38:i32 = var
blockpc %1 1 %38 1:i1
%39:i32 = var
pc %39 1:i1
infer %8


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = sub %5, 7680:i32 (hasExternalUses)
%7 = phi %0, %4, %6
%8 = add %7, 136:i32
%9:i32 = var
%10:i32 = var
%11 = phi %1, %9, %10
%12:i32 = var
%13 = slt %12, 0:i32
%14 = select %13, 6:i32, %12
%15 = phi %0, %11, %14
%16:i32 = var
%17:i32 = var
%18 = phi %1, %16, %17
%19:i32 = var
%20 = or %19, 32:i32
%21 = phi %0, %18, %20
%22 = eq %21, 102:i32
%23 = block 3
%24:i32 = var
%25:i32 = var
%26 = phi %1, %24, %25
%27:i32 = var
%28 = phi %0, %26, %27
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1:i1
%31:i32 = var
blockpc %29 1 %31 1:i1
%32:i32 = var
%33 = block 3
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %34, %35
%37 = phi %1, %32, %36
%38 = phi %0, %37, %27
%39 = block 3
%40:i32 = var
%41:i32 = var
%42 = phi %39, %40, %40, %41
%43 = phi %29, %38, %42
%44 = sub %28, %43
%45 = ashr %44, 2:i32
%46 = mul %45, 9:i32
%47:i32 = var
%48 = phi %23, 0:i32, %46, %47
%49 = select %22, 0:i32, %48
%50 = sub %15, %49
%51:i32 = var
%52 = sub %50, %51
%53:i32 = var
%54 = slt %52, %53
pc %54 1:i1
infer %8


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = slt %7, 0:i32
%9 = select %8, 6:i32, %7
%10 = phi %2, %6, %9
%11:i32 = var
%12:i32 = var
%13 = phi %3, %11, %12
%14:i32 = var
%15 = or %14, 32:i32
%16 = phi %2, %13, %15
%17 = eq %16, 102:i32
%18 = block 3
%19:i32 = var
%20:i32 = var
%21 = phi %3, %19, %20
%22:i32 = var
%23 = phi %2, %21, %22
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1:i1
%26:i32 = var
blockpc %24 1 %26 1:i1
%27:i32 = var
%28 = block 3
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %29, %30
%32 = phi %3, %27, %31
%33 = phi %2, %32, %22
%34 = block 3
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %35, %36
%38 = phi %24, %33, %37
%39 = sub %23, %38
%40 = ashr %39, 2:i32
%41 = mul %40, 9:i32
%42:i32 = var
%43 = phi %18, 0:i32, %41, %42
%44 = select %17, 0:i32, %43
%45 = sub %10, %44
%46:i32 = var
%47 = sub %45, %46
%48:i32 = var
%49 = slt %47, %48
pc %49 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, 10:i32, %3
%5 = udiv %0, %4 (hasExternalUses)
%6 = mul %5, %4
%7 = sub %0, %6 (hasExternalUses)
%8 = sub %0, %7 (hasExternalUses)
%9 = add %8, %4
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15:i32 = var
%16 = slt %15, 0:i32
%17 = select %16, 6:i32, %15
%18 = phi %10, %14, %17
%19:i32 = var
%20:i32 = var
%21 = phi %11, %19, %20
%22:i32 = var
%23 = phi %10, %21, %22
%24 = eq %23, 102:i32
%25 = block 3
%26:i32 = var
%27 = mul %26, 9:i32
%28:i32 = var
%29 = add %28, 1:i32
%30 = phi %25, 0:i32, %27, %29
%31 = select %24, 0:i32, %30
%32 = sub %18, %31
%33:i32 = var
%34 = sub %32, %33
%35 = add %34, 147456:i32
%36:i32 = var
%37 = sub %35, %36
%38 = sle %37, 7:i32
blockpc %1 0 %38 1:i1
%39:i32 = var
blockpc %1 1 %39 1:i1
%40:i32 = var
pc %40 1:i1
infer %9


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, 10:i32, %3
%5 = udiv %0, %4 (hasExternalUses)
%6 = mul %5, %4
%7 = sub %0, %6 (hasExternalUses)
%8 = sub %0, %7 (hasExternalUses)
%9 = add %8, %4 (hasExternalUses)
%10 = ule 1000000000:i32, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = phi %12, %13, %14
%16:i32 = var
%17 = slt %16, 0:i32
%18 = select %17, 6:i32, %16
%19 = phi %11, %15, %18
%20:i32 = var
%21:i32 = var
%22 = phi %12, %20, %21
%23:i32 = var
%24 = phi %11, %22, %23
%25 = eq %24, 102:i32
%26 = block 3
%27:i32 = var
%28 = mul %27, 9:i32
%29:i32 = var
%30 = add %29, 1:i32
%31 = phi %26, 0:i32, %28, %30
%32 = select %25, 0:i32, %31
%33 = sub %19, %32
%34:i32 = var
%35 = sub %33, %34
%36 = add %35, 147456:i32
%37:i32 = var
%38 = sub %36, %37
%39 = sle %38, 7:i32
blockpc %1 0 %39 1:i1
%40:i32 = var
blockpc %1 1 %40 1:i1
%41:i32 = var
pc %41 1:i1
infer %10


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = slt %5, 0:i32
%7 = select %6, 6:i32, %5 (hasExternalUses)
%8 = phi %0, %4, %7
%9:i32 = var
%10:i32 = var
%11 = phi %1, %9, %10
%12:i32 = var
%13 = phi %0, %11, %12
%14 = eq %13, 102:i32
%15 = block 3
%16:i32 = var
%17 = mul %16, 9:i32 (hasExternalUses)
%18:i32 = var
%19 = add %18, 1:i32 (hasExternalUses)
%20 = phi %15, 0:i32, %17, %19
%21 = select %14, 0:i32, %20 (hasExternalUses)
%22 = sub %8, %21
%23 = ne %8, 0:i32
%24:i32 = zext %23
%25 = eq %13, 103:i32
%26:i32 = zext %25
%27 = and %24, %26 (hasExternalUses)
%28 = sub %22, %27 (hasExternalUses)
%29 = add %28, 147456:i32 (hasExternalUses)
%30 = sdiv %29, 9:i32 (hasExternalUses)
%31 = add %30, -16384:i32 (hasExternalUses)
%32 = shl %31, 2:i32
%33:i32 = var
%34:i32 = var
pc %33 1:i1
pc %34 1:i1
infer %32


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, -28:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %5, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = sub %11, 7680:i32 (hasExternalUses)
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %10, %13, %14 (hasExternalUses)
%16 = phi %0, %4, %15
%17:i32 = var
%18:i32 = var
%19 = phi %1, %17, %18
%20:i32 = var
%21:i32 = var
%22 = select %20, 6:i32, %21 (hasExternalUses)
%23 = phi %0, %19, %22
%24:i32 = var
%25:i32 = var
%26 = phi %1, %24, %25
%27:i32 = var
%28 = phi %0, %26, %27
%29 = eq %28, 102:i32
%30 = block 3
%31:i32 = var
%32:i32 = var
%33 = phi %30, 0:i32, %31, %32
%34 = select %29, 0:i32, %33 (hasExternalUses)
%35 = sub %23, %34
%36:i32 = var
%37 = sub %35, %36 (hasExternalUses)
%38 = add %37, 147456:i32 (hasExternalUses)
%39 = sdiv %38, 9:i32 (hasExternalUses)
%40 = add %39, -16384:i32 (hasExternalUses)
%41 = shl %40, 2:i32
%42 = add %16, %41
%43:i32 = var
%44:i32 = var
pc %43 1:i1
pc %44 1:i1
infer %42


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = sle %4, 7:i32
blockpc %3 0 %5 1:i1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1:i1
%8:i32 = var
%9 = mul %8, 10:i32
%10 = phi %3, 10:i32, %9
%11 = udiv %2, %10
%12 = mul %11, %10
%13 = sub %2, %12
%14 = sub %2, %13
%15 = add %14, %10
%16 = ule 1000000000:i32, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22:i32 = var
%23 = slt %22, 0:i32
%24 = select %23, 6:i32, %22
%25 = phi %17, %21, %24
%26:i32 = var
%27:i32 = var
%28 = phi %18, %26, %27
%29:i32 = var
%30 = phi %17, %28, %29
%31 = eq %30, 102:i32
%32 = block 3
%33:i32 = var
%34:i32 = var
%35 = phi %32, 0:i32, %33, %34
%36 = select %31, 0:i32, %35
%37 = sub %25, %36
%38:i32 = var
%39 = sub %37, %38
%40:i32 = var
%41 = slt %39, %40
pc %16 1:i1
pc %41 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = sle %5, 7:i32
blockpc %4 0 %6 1:i1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1:i1
%9:i32 = var
%10 = mul %9, 10:i32
%11 = phi %4, 10:i32, %10
%12 = udiv %3, %11
%13 = mul %12, %11
%14 = sub %3, %13
%15 = sub %3, %14
%16 = add %15, %11
%17 = ule 1000000000:i32, %16
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23:i32 = var
%24 = slt %23, 0:i32
%25 = select %24, 6:i32, %23
%26 = phi %18, %22, %25
%27:i32 = var
%28:i32 = var
%29 = phi %19, %27, %28
%30:i32 = var
%31 = phi %18, %29, %30
%32 = eq %31, 102:i32
%33 = block 3
%34:i32 = var
%35:i32 = var
%36 = phi %33, 0:i32, %34, %35
%37 = select %32, 0:i32, %36
%38 = sub %26, %37
%39:i32 = var
%40 = sub %38, %39
%41:i32 = var
%42 = slt %40, %41
pc %17 1:i1
pc %42 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -4:i32
%2:i32 = var
%3 = ult %2, %0
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = sle %6, 7:i32
blockpc %5 0 %7 1:i1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1:i1
%10:i32 = var
%11 = mul %10, 10:i32
%12 = phi %5, 10:i32, %11
%13 = udiv %4, %12
%14 = mul %13, %12
%15 = sub %4, %14
%16 = sub %4, %15
%17 = add %16, %12
%18 = ule 1000000000:i32, %17
%19 = block 2
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24:i32 = var
%25 = slt %24, 0:i32
%26 = select %25, 6:i32, %24
%27 = phi %19, %23, %26
%28:i32 = var
%29 = sub %27, %28
%30:i32 = var
%31 = sub %29, %30
%32:i32 = var
%33 = slt %31, %32
pc %3 1:i1
pc %18 1:i1
pc %33 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = sle %4, 7:i32
blockpc %3 0 %5 1:i1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1:i1
%8:i32 = var
%9 = mul %8, 10:i32
%10 = phi %3, 10:i32, %9
%11 = udiv %2, %10
%12 = mul %11, %10
%13 = sub %2, %12
%14 = sub %2, %13
%15 = add %14, %10
%16 = ule 1000000000:i32, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22:i32 = var
%23 = slt %22, 0:i32
%24 = select %23, 6:i32, %22
%25 = phi %17, %21, %24
%26:i32 = var
%27:i32 = var
%28 = phi %18, %26, %27
%29:i32 = var
%30 = phi %17, %28, %29
%31 = eq %30, 102:i32
%32 = block 3
%33:i32 = var
%34:i32 = var
%35 = phi %32, 0:i32, %33, %34
%36 = select %31, 0:i32, %35
%37 = sub %25, %36
%38:i32 = var
%39 = sub %37, %38
%40:i32 = var
%41 = slt %39, %40
pc %16 1:i1
pc %41 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -4:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = sle %4, 7:i32
blockpc %3 0 %5 1:i1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1:i1
%8:i32 = var
%9 = mul %8, 10:i32
%10 = phi %3, 10:i32, %9
%11 = udiv %2, %10
%12 = mul %11, %10
%13 = sub %2, %12
%14 = sub %2, %13
%15 = add %14, %10
%16 = ule 1000000000:i32, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22:i32 = var
%23 = slt %22, 0:i32
%24 = select %23, 6:i32, %22
%25 = phi %17, %21, %24
%26:i32 = var
%27:i32 = var
%28 = phi %18, %26, %27
%29:i32 = var
%30 = phi %17, %28, %29
%31 = eq %30, 102:i32
%32 = block 3
%33:i32 = var
%34:i32 = var
%35 = phi %32, 0:i32, %33, %34
%36 = select %31, 0:i32, %35
%37 = sub %25, %36
%38:i32 = var
%39 = sub %37, %38
%40:i32 = var
%41 = slt %39, %40
pc %16 1:i1
pc %41 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = ult 999999999:i32, %1
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = sle %5, 7:i32
blockpc %4 0 %6 1:i1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1:i1
%9:i32 = var
%10 = mul %9, 10:i32
%11 = phi %4, 10:i32, %10
%12 = udiv %3, %11
%13 = mul %12, %11
%14 = sub %3, %13
%15 = sub %3, %14
%16 = add %15, %11
%17 = ule 1000000000:i32, %16
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23:i32 = var
%24 = slt %23, 0:i32
%25 = select %24, 6:i32, %23
%26 = phi %18, %22, %25
%27:i32 = var
%28:i32 = var
%29 = phi %19, %27, %28
%30:i32 = var
%31 = phi %18, %29, %30
%32 = eq %31, 102:i32
%33 = block 3
%34:i32 = var
%35:i32 = var
%36 = phi %33, 0:i32, %34, %35
%37 = select %32, 0:i32, %36
%38 = sub %26, %37
%39:i32 = var
%40 = sub %38, %39
%41:i32 = var
%42 = slt %40, %41
pc %17 1:i1
pc %42 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -4:i32 (hasExternalUses)
%2 = add %1, 4:i32
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = sle %5, 7:i32
blockpc %4 0 %6 1:i1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1:i1
%9:i32 = var
%10 = mul %9, 10:i32
%11 = phi %4, 10:i32, %10
%12 = udiv %3, %11
%13 = mul %12, %11
%14 = sub %3, %13
%15 = sub %3, %14
%16 = add %15, %11
%17 = ule 1000000000:i32, %16
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23:i32 = var
%24 = slt %23, 0:i32
%25 = select %24, 6:i32, %23
%26 = phi %18, %22, %25
%27:i32 = var
%28:i32 = var
%29 = phi %19, %27, %28
%30:i32 = var
%31 = phi %18, %29, %30
%32 = eq %31, 102:i32
%33 = block 3
%34:i32 = var
%35:i32 = var
%36 = phi %33, 0:i32, %34, %35
%37 = select %32, 0:i32, %36
%38 = sub %26, %37
%39:i32 = var
%40 = sub %38, %39
%41:i32 = var
%42 = slt %40, %41
pc %17 1:i1
pc %42 1:i1
infer %2


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, -28:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %5, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = sub %11, 7680:i32 (hasExternalUses)
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %10, %13, %14 (hasExternalUses)
%16 = phi %0, %4, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 3
%21:i32 = var
%22 = add %21, -4:i32 (hasExternalUses)
%23 = phi %20, %21, %21, %22
%24 = phi %1, %19, %23
%25 = phi %0, %24, %15
%26 = block 3
%27:i32 = var
%28 = ne %27, 0:i32 (hasExternalUses)
%29:i32 = var
%30:i32 = var
%31 = select %28, %29, %30 (hasExternalUses)
%32:i32 = var
%33 = phi %26, %31, %31, %32
%34 = phi %18, %25, %33
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %37
%39 = phi %17, %34, %38
%40 = sub %16, %39
%41:i32 = var
blockpc %17 0 %41 1:i1
%42:i32 = var
blockpc %17 1 %42 1:i1
%43:i32 = var
blockpc %18 0 %43 1:i1
%44:i32 = var
blockpc %18 1 %44 1:i1
%45:i32 = var
blockpc %35 0 %45 1:i1
%46:i32 = var
blockpc %35 1 %46 1:i1
%47:i32 = var
pc %47 1:i1
infer %40


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, -28:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %5, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = sub %11, 7680:i32 (hasExternalUses)
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %10, %13, %14 (hasExternalUses)
%16 = phi %0, %4, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 3
%21:i32 = var
%22 = add %21, -4:i32 (hasExternalUses)
%23 = phi %20, %21, %21, %22
%24 = phi %1, %19, %23
%25 = phi %0, %24, %15
%26 = block 3
%27:i32 = var
%28 = ne %27, 0:i32 (hasExternalUses)
%29:i32 = var
%30:i32 = var
%31 = select %28, %29, %30 (hasExternalUses)
%32:i32 = var
%33 = phi %26, %31, %31, %32
%34 = phi %18, %25, %33
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %37
%39 = phi %17, %34, %38
%40 = sub %16, %39
%41 = ashr %40, 2:i32
%42:i32 = var
blockpc %17 0 %42 1:i1
%43:i32 = var
blockpc %17 1 %43 1:i1
%44:i32 = var
blockpc %18 0 %44 1:i1
%45:i32 = var
blockpc %18 1 %45 1:i1
%46:i32 = var
blockpc %35 0 %46 1:i1
%47:i32 = var
blockpc %35 1 %47 1:i1
%48:i32 = var
pc %48 1:i1
infer %41


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, -28:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %5, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = sub %11, 7680:i32 (hasExternalUses)
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %10, %13, %14 (hasExternalUses)
%16 = phi %0, %4, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 3
%21:i32 = var
%22 = add %21, -4:i32 (hasExternalUses)
%23 = phi %20, %21, %21, %22
%24 = phi %1, %19, %23
%25 = phi %0, %24, %15
%26 = block 3
%27:i32 = var
%28 = ne %27, 0:i32 (hasExternalUses)
%29:i32 = var
%30:i32 = var
%31 = select %28, %29, %30 (hasExternalUses)
%32:i32 = var
%33 = phi %26, %31, %31, %32
%34 = phi %18, %25, %33
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %37
%39 = phi %17, %34, %38
%40 = sub %16, %39
%41 = ashr %40, 2:i32
%42 = mul %41, 9:i32
%43:i32 = var
blockpc %17 0 %43 1:i1
%44:i32 = var
blockpc %17 1 %44 1:i1
%45:i32 = var
blockpc %18 0 %45 1:i1
%46:i32 = var
blockpc %18 1 %46 1:i1
%47:i32 = var
blockpc %35 0 %47 1:i1
%48:i32 = var
blockpc %35 1 %48 1:i1
%49:i32 = var
pc %49 1:i1
infer %42


; start LHS (in $39)
%0:i32 = var
%1 = ult %0, 10:i32
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = slt %7, 0:i32
%9 = select %8, 6:i32, %7
%10 = phi %2, %6, %9
%11:i32 = var
%12:i32 = var
%13 = phi %3, %11, %12
%14:i32 = var
%15 = or %14, 32:i32
%16 = phi %2, %13, %15
%17 = eq %16, 102:i32
%18 = block 3
%19:i32 = var
%20:i32 = var
%21 = phi %3, %19, %20
%22:i32 = var
%23 = phi %2, %21, %22
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1:i1
%26:i32 = var
blockpc %24 1 %26 1:i1
%27:i32 = var
%28 = block 3
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %29, %30
%32 = phi %3, %27, %31
%33 = phi %2, %32, %22
%34 = block 3
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %35, %36
%38 = phi %24, %33, %37
%39 = sub %23, %38
%40 = ashr %39, 2:i32
%41 = mul %40, 9:i32
%42:i32 = var
%43 = phi %18, 0:i32, %41, %42
%44 = select %17, 0:i32, %43
%45 = sub %10, %44
%46:i32 = var
%47 = sub %45, %46
%48:i32 = var
%49 = slt %47, %48
pc %49 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 1:i32
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = slt %7, 0:i32
%9 = select %8, 6:i32, %7
%10 = phi %2, %6, %9
%11:i32 = var
%12:i32 = var
%13 = phi %3, %11, %12
%14:i32 = var
%15 = or %14, 32:i32
%16 = phi %2, %13, %15
%17 = eq %16, 102:i32
%18 = block 3
%19:i32 = var
%20:i32 = var
%21 = phi %3, %19, %20
%22:i32 = var
%23 = phi %2, %21, %22
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1:i1
%26:i32 = var
blockpc %24 1 %26 1:i1
%27:i32 = var
%28 = block 3
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %29, %30
%32 = phi %3, %27, %31
%33 = phi %2, %32, %22
%34 = block 3
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %35, %36
%38 = phi %24, %33, %37
%39 = sub %23, %38
%40 = ashr %39, 2:i32
%41 = mul %40, 9:i32
%42:i32 = var
%43 = phi %18, 0:i32, %41, %42
%44 = select %17, 0:i32, %43
%45 = sub %10, %44
%46:i32 = var
%47 = sub %45, %46
%48:i32 = var
%49 = slt %47, %48
pc %49 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = mul %0, 10:i32
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = slt %7, 0:i32
%9 = select %8, 6:i32, %7
%10 = phi %2, %6, %9
%11:i32 = var
%12:i32 = var
%13 = phi %3, %11, %12
%14:i32 = var
%15 = or %14, 32:i32
%16 = phi %2, %13, %15
%17 = eq %16, 102:i32
%18 = block 3
%19:i32 = var
%20:i32 = var
%21 = phi %3, %19, %20
%22:i32 = var
%23 = phi %2, %21, %22
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1:i1
%26:i32 = var
blockpc %24 1 %26 1:i1
%27:i32 = var
%28 = block 3
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %29, %30
%32 = phi %3, %27, %31
%33 = phi %2, %32, %22
%34 = block 3
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %35, %36
%38 = phi %24, %33, %37
%39 = sub %23, %38
%40 = ashr %39, 2:i32
%41 = mul %40, 9:i32
%42:i32 = var
%43 = phi %18, 0:i32, %41, %42
%44 = select %17, 0:i32, %43
%45 = sub %10, %44
%46:i32 = var
%47 = sub %45, %46
%48:i32 = var
%49 = slt %47, %48
pc %49 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = mul %0, 10:i32
%2:i32 = var
%3 = ule %1, %2
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = slt %9, 0:i32
%11 = select %10, 6:i32, %9
%12 = phi %4, %8, %11
%13:i32 = var
%14:i32 = var
%15 = phi %5, %13, %14
%16:i32 = var
%17 = or %16, 32:i32
%18 = phi %4, %15, %17
%19 = eq %18, 102:i32
%20 = block 3
%21:i32 = var
%22:i32 = var
%23 = phi %5, %21, %22
%24:i32 = var
%25 = phi %4, %23, %24
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1:i1
%28:i32 = var
blockpc %26 1 %28 1:i1
%29:i32 = var
%30 = block 3
%31:i32 = var
%32:i32 = var
%33 = phi %30, %31, %31, %32
%34 = phi %5, %29, %33
%35 = phi %4, %34, %24
%36 = block 3
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %37, %38
%40 = phi %26, %35, %39
%41 = sub %25, %40
%42 = ashr %41, 2:i32
%43 = mul %42, 9:i32
%44:i32 = var
%45 = phi %20, 0:i32, %43, %44
%46 = select %19, 0:i32, %45
%47 = sub %12, %46
%48:i32 = var
%49 = sub %47, %48
%50:i32 = var
%51 = slt %49, %50
pc %51 1:i1
infer %3


; start LHS (in $39)
%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = block 2
%7:i32 = var
%8 = add %7, -28:i32 (hasExternalUses)
%9:i32 = var
%10 = phi %6, %8, %9
%11 = slt %10, 0:i32
%12:i32 = var
%13 = sub %12, 7680:i32 (hasExternalUses)
%14 = add %13, 304:i32
%15 = add %13, 7216:i32
%16 = select %11, %14, %15 (hasExternalUses)
%17 = phi %1, %5, %16
%18:i32 = var
%19:i32 = var
%20 = sub %18, %19 (hasExternalUses)
%21 = add %20, 147456:i32 (hasExternalUses)
%22 = sdiv %21, 9:i32 (hasExternalUses)
%23 = add %22, -16384:i32 (hasExternalUses)
%24 = shl %23, 2:i32
%25 = add %17, %24
%26 = add %25, 4:i32 (hasExternalUses)
%27 = block 2
%28:i32 = var
%29 = add %28, -4:i32 (hasExternalUses)
%30 = add %29, 4:i32
%31 = phi %27, %26, %30
%32 = phi %0, %26, %26, %31, %31
%33 = add %32, 4:i32
%34:i32 = var
blockpc %27 0 %34 1:i1
%35:i32 = var
blockpc %27 1 %35 1:i1
%36:i32 = var
pc %36 1:i1
infer %33


; start LHS (in $39)
%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = sub %11, 7680:i32 (hasExternalUses)
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %10, %13, %14 (hasExternalUses)
%16 = phi %1, %5, %15
%17:i32 = var
%18 = add %17, 147456:i32 (hasExternalUses)
%19 = sdiv %18, 9:i32 (hasExternalUses)
%20 = add %19, -16384:i32 (hasExternalUses)
%21 = shl %20, 2:i32
%22 = add %16, %21
%23 = add %22, 4:i32 (hasExternalUses)
%24 = block 2
%25:i32 = var
%26 = add %25, -4:i32 (hasExternalUses)
%27 = add %26, 4:i32
%28 = phi %24, %23, %27
%29 = phi %0, %23, %23, %28, %28
%30 = add %29, 4:i32 (hasExternalUses)
%31 = block 2
%32:i32 = var
%33:i32 = var
%34 = phi %1, %32, %33
%35:i32 = var
%36 = phi %31, %34, %35
%37 = ult %30, %36
%38:i32 = var
blockpc %24 0 %38 1:i1
%39:i32 = var
blockpc %24 1 %39 1:i1
%40:i32 = var
blockpc %31 0 %40 1:i1
%41:i32 = var
blockpc %31 1 %41 1:i1
%42:i32 = var
pc %42 1:i1
infer %37


; start LHS (in $39)
%0 = block 4
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = slt %9, 0:i32
%11:i32 = var
%12 = add %11, 304:i32
%13 = add %11, 7216:i32
%14 = select %10, %12, %13 (hasExternalUses)
%15 = phi %1, %5, %14
%16:i32 = var
%17 = sdiv %16, 9:i32 (hasExternalUses)
%18 = add %17, -16384:i32 (hasExternalUses)
%19 = shl %18, 2:i32
%20 = add %15, %19
%21 = add %20, 4:i32 (hasExternalUses)
%22 = block 2
%23:i32 = var
%24 = add %23, -4:i32 (hasExternalUses)
%25 = add %24, 4:i32
%26 = phi %22, %21, %25
%27 = phi %0, %21, %21, %26, %26
%28 = add %27, 4:i32
%29 = block 2
%30:i32 = var
%31:i32 = var
%32 = phi %1, %30, %31
%33:i32 = var
%34 = phi %29, %32, %33
%35 = ult %28, %34
%36 = select %35, %28, %34
%37:i32 = var
blockpc %22 0 %37 1:i1
%38:i32 = var
blockpc %22 1 %38 1:i1
%39:i32 = var
blockpc %29 0 %39 1:i1
%40:i32 = var
blockpc %29 1 %40 1:i1
%41:i32 = var
pc %41 1:i1
infer %36


; start LHS (in $39)
%0 = block 2
%1 = block 3
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = slt %10, 0:i32
%12:i32 = var
%13 = add %12, 304:i32
%14 = add %12, 7216:i32
%15 = select %11, %13, %14 (hasExternalUses)
%16 = phi %2, %6, %15
%17 = block 2
%18:i32 = var
%19 = block 3
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %20, %21
%23 = phi %3, %18, %22
%24 = phi %2, %23, %15
%25 = block 3
%26:i32 = var
%27:i32 = var
%28:i32 = var
%29 = select %26, %27, %28 (hasExternalUses)
%30:i32 = var
%31 = phi %25, %29, %29, %30
%32 = phi %17, %24, %31
%33 = sub %16, %32
%34 = ashr %33, 2:i32
%35 = mul %34, 9:i32 (hasExternalUses)
%36:i32 = var
%37 = phi %1, 0:i32, %35, %36
%38 = block 4
%39:i32 = var
%40:i32 = var
%41 = phi %38, %37, %37, %39, %40
%42 = phi %0, %37, %41
%43 = sub 0:i32, %42
%44:i32 = var
blockpc %0 0 %44 1:i1
%45:i32 = var
blockpc %0 1 %45 1:i1
%46:i32 = var
blockpc %17 0 %46 1:i1
%47:i32 = var
blockpc %17 1 %47 1:i1
infer %43


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = block 3
%7:i32 = var
%8 = add %7, -4:i32 (hasExternalUses)
%9 = phi %6, %7, %7, %8
%10 = phi %4, %5, %9
%11 = block 2
%12:i32 = var
%13 = add %12, -28:i32 (hasExternalUses)
%14:i32 = var
%15 = phi %11, %13, %14
%16 = slt %15, 0:i32
%17:i32 = var
%18 = sub %17, 7680:i32 (hasExternalUses)
%19 = add %18, 304:i32
%20 = add %18, 7216:i32
%21 = select %16, %19, %20 (hasExternalUses)
%22 = phi %3, %10, %21
%23 = block 3
%24:i32 = var
%25 = ne %24, 0:i32 (hasExternalUses)
%26:i32 = var
%27 = add %26, 4:i32
%28 = select %25, %26, %27 (hasExternalUses)
%29:i32 = var
%30 = ne %29, 0:i32 (hasExternalUses)
%31:i32 = var
%32 = select %30, %26, %31 (hasExternalUses)
%33 = phi %23, %28, %28, %32
%34 = phi %2, %22, %33
%35 = block 4
%36 = block 2
%37 = block 2
%38:i32 = var
%39:i32 = var
%40 = phi %37, %38, %39
%41 = phi %36, %34, %40
%42 = phi %35, %34, %34, %41, %41
%43 = phi %1, %34, %42
%44 = ule %0, %43
%45:i32 = var
blockpc %1 0 %45 1:i1
%46:i32 = var
blockpc %1 1 %46 1:i1
%47:i32 = var
blockpc %2 0 %47 1:i1
%48:i32 = var
blockpc %2 1 %48 1:i1
%49:i32 = var
blockpc %36 0 %49 1:i1
%50:i32 = var
blockpc %36 1 %50 1:i1
%51:i32 = var
blockpc %37 0 %51 1:i1
%52:i32 = var
blockpc %37 1 %52 1:i1
infer %44


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -4:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = or %7, 32:i32 (hasExternalUses)
%9 = phi %2, %6, %8
%10 = phi %0, %1, %9
%11 = ne %10, 103:i32
infer %11


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = slt %7, 0:i32
%9 = select %8, 6:i32, %7 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12 = eq %11, 0:i32
infer %12


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = slt %7, 0:i32
%9 = select %8, 6:i32, %7 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = add %11, %13
infer %14


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = slt %7, 0:i32
%9 = select %8, 6:i32, %7 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = add %11, %13 (hasExternalUses)
%15:i32 = var
%16 = block 2
%17 = block 3
%18:i32 = var
%19:i32 = var
%20 = phi %3, %18, %19
%21:i32 = var
%22:i32 = var
%23:i32 = var
%24 = select %21, %22, %23 (hasExternalUses)
%25 = phi %2, %20, %24
%26 = block 2
%27:i32 = var
%28 = block 3
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %29, %30
%32 = phi %3, %27, %31
%33 = phi %2, %32, %24
%34 = block 3
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %35, %36
%38 = phi %26, %33, %37
%39 = sub %25, %38
%40 = ashr %39, 2:i32
%41 = mul %40, 9:i32 (hasExternalUses)
%42:i32 = var
%43 = phi %17, 0:i32, %41, %42
%44 = block 4
%45:i32 = var
%46:i32 = var
%47 = phi %44, %43, %43, %45, %46
%48 = phi %16, %43, %47
%49 = phi %0, %15, %48
%50 = sle %14, %49
%51:i32 = var
blockpc %16 0 %51 1:i1
%52:i32 = var
blockpc %16 1 %52 1:i1
%53:i32 = var
blockpc %26 0 %53 1:i1
%54:i32 = var
blockpc %26 1 %54 1:i1
infer %50


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10:i32 = var
%11:i32 = var
%12 = select %9, %10, %11 (hasExternalUses)
%13 = phi %4, %8, %12
%14 = block 2
%15:i32 = var
%16 = block 3
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %17, %18
%20 = phi %5, %15, %19
%21 = phi %4, %20, %12
%22 = block 3
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %23, %24
%26 = phi %14, %21, %25
%27 = sub %13, %26
%28 = ashr %27, 2:i32
%29 = mul %28, 9:i32 (hasExternalUses)
%30:i32 = var
%31 = phi %3, 0:i32, %29, %30
%32 = block 4
%33:i32 = var
%34:i32 = var
%35 = phi %32, %31, %31, %33, %34
%36 = phi %2, %31, %35
%37 = phi %0, %1, %36
%38 = slt %37, -4:i32
%39:i32 = var
blockpc %2 0 %39 1:i1
%40:i32 = var
blockpc %2 1 %40 1:i1
%41:i32 = var
blockpc %14 0 %41 1:i1
%42:i32 = var
blockpc %14 1 %42 1:i1
infer %38


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = slt %7, 0:i32
%9 = select %8, 6:i32, %7 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = add %11, %13 (hasExternalUses)
%15 = add %14, -1:i32
infer %15


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = slt %7, 0:i32
%9 = select %8, 6:i32, %7 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = add %11, %13 (hasExternalUses)
%15 = add %14, -1:i32
%16:i32 = var
%17 = block 2
%18 = block 3
%19:i32 = var
%20:i32 = var
%21 = phi %3, %19, %20
%22:i32 = var
%23:i32 = var
%24:i32 = var
%25 = select %22, %23, %24 (hasExternalUses)
%26 = phi %2, %21, %25
%27 = block 2
%28:i32 = var
%29 = block 3
%30:i32 = var
%31:i32 = var
%32 = phi %29, %30, %30, %31
%33 = phi %3, %28, %32
%34 = phi %2, %33, %25
%35 = block 3
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %36, %37
%39 = phi %27, %34, %38
%40 = sub %26, %39
%41 = ashr %40, 2:i32
%42 = mul %41, 9:i32 (hasExternalUses)
%43:i32 = var
%44 = phi %18, 0:i32, %42, %43
%45 = block 4
%46:i32 = var
%47:i32 = var
%48 = phi %45, %44, %44, %46, %47
%49 = phi %17, %44, %48
%50 = phi %0, %16, %49
%51 = sub %15, %50
%52:i32 = var
blockpc %17 0 %52 1:i1
%53:i32 = var
blockpc %17 1 %53 1:i1
%54:i32 = var
blockpc %27 0 %54 1:i1
%55:i32 = var
blockpc %27 1 %55 1:i1
infer %51


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = add %9, -1:i32
infer %10


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 96:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 80:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 104:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 88:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = ashr %0, 31:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = ashr %0, 31:i32 (hasExternalUses)
%2 = add %0, %1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = ashr %0, 31:i32
%2 = add %0, %1
%3 = xor %2, %1
infer %3


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = sub %1, 7680:i32 (hasExternalUses)
%3 = add %2, 256:i32 (hasExternalUses)
%4 = eq %0, %3
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 255:i32
%3:i32 = var
%4 = add %1, 256:i32
%5 = eq %3, %4
pc %5 1:i1
infer %2


; start LHS (in $39)
%0 = block 3
%1:i32 = var
%2 = and %1, 1:i32 (hasExternalUses)
%3 = phi %0, 1:i32, %2, 1:i32
%4 = or %3, 2:i32
infer %4


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = sub %2, 7680:i32 (hasExternalUses)
%4 = add %3, 255:i32 (hasExternalUses)
%5 = phi %0, %1, %4
%6 = add %5, -2:i32
%7 = add %3, 256:i32
%8 = eq %1, %7
blockpc %0 0 %8 1:i1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %0 1 %10 1:i1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 15:i32
infer %1


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = sub %2, 7680:i32 (hasExternalUses)
%4 = add %3, 255:i32 (hasExternalUses)
%5 = phi %0, %1, %4
%6 = add %5, -1:i32
%7 = add %3, 256:i32
%8 = eq %1, %7
blockpc %0 0 %8 1:i1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %0 1 %10 1:i1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 30:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 30:i32
%2 = and %1, 2:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 30:i32
%2 = and %1, 2:i32
%3 = add %2, 43:i32
infer %3


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 8:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 256:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = slt 0:i32, %0
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 32:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 40:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 24:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 3392:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = and %1, 32:i32 (hasExternalUses)
%3 = or %0, %2
infer %3


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 8:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 256:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2:i32 = var
%3 = sub %2, 7680:i32 (hasExternalUses)
%4 = add %3, 256:i32
%5 = sub %1, %4
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2:i32 = var
%3 = sub %2, 7680:i32 (hasExternalUses)
%4 = add %3, 256:i32
%5 = sub %1, %4
%6 = ne %5, 1:i32
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 2:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = sub -258:i32, %1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = sub -258:i32, %1
%3 = block 3
%4:i32 = var
%5 = add %4, 1:i32 (hasExternalUses)
%6 = add %4, 2:i32 (hasExternalUses)
%7 = phi %3, %5, %5, %6
%8 = add %2, %7
infer %8


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = sub %1, 7680:i32 (hasExternalUses)
%3 = sub -258:i32, %2
%4 = block 3
%5:i32 = var
%6 = add %5, 1:i32 (hasExternalUses)
%7 = add %5, 2:i32 (hasExternalUses)
%8 = phi %4, %6, %6, %7
%9 = add %3, %8
%10 = sle %0, %9
infer %10


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = sub %1, 7680:i32 (hasExternalUses)
%3 = add %2, 256:i32 (hasExternalUses)
%4 = add %0, %3
infer %4


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = sub %1, 7680:i32 (hasExternalUses)
%3 = add %2, 256:i32 (hasExternalUses)
%4 = add %0, %3
%5 = add %4, 2:i32
infer %5


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = sub %1, 7680:i32 (hasExternalUses)
%3 = add %2, 256:i32 (hasExternalUses)
%4 = add %0, %3
%5 = add %4, 2:i32
%6 = block 2
%7:i32 = var
%8 = add %2, 255:i32 (hasExternalUses)
%9 = phi %6, %7, %8
%10 = add %9, -2:i32 (hasExternalUses)
%11 = sub %5, %10
%12 = eq %7, %3
blockpc %6 0 %12 1:i1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1:i1
infer %11


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 256:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 256:i32 (hasExternalUses)
%3 = add %1, 256:i32
%4 = sub %2, %3
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 256:i32 (hasExternalUses)
%3 = add %1, 256:i32
%4 = sub %2, %3
%5 = block 2
%6:i32 = var
%7 = add %1, 255:i32 (hasExternalUses)
%8 = phi %5, %6, %7
%9 = add %8, -2:i32 (hasExternalUses)
%10 = sub %4, %9
%11 = eq %6, %2
blockpc %5 0 %11 1:i1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %5 1 %13 1:i1
infer %10


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 256:i32 (hasExternalUses)
%3 = add %1, 256:i32
%4 = sub %2, %3
%5 = block 2
%6:i32 = var
%7 = add %1, 255:i32 (hasExternalUses)
%8 = phi %5, %6, %7
%9 = add %8, -2:i32 (hasExternalUses)
%10 = sub %4, %9
%11 = block 3
%12:i32 = var
%13 = add %12, 1:i32 (hasExternalUses)
%14 = add %12, 2:i32 (hasExternalUses)
%15 = phi %11, %13, %13, %14
%16 = add %10, %15
%17 = eq %6, %2
blockpc %5 0 %17 1:i1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %5 1 %19 1:i1
infer %16


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = sub %2, 7680:i32 (hasExternalUses)
%4 = add %3, 256:i32 (hasExternalUses)
%5 = add %1, %4
%6 = add %5, 2:i32
%7 = block 2
%8:i32 = var
%9 = add %3, 255:i32 (hasExternalUses)
%10 = phi %7, %8, %9
%11 = add %10, -2:i32 (hasExternalUses)
%12 = sub %6, %11 (hasExternalUses)
%13 = add %3, 256:i32
%14 = sub %4, %13
%15 = sub %14, %11
%16 = block 3
%17:i32 = var
%18 = add %17, 1:i32 (hasExternalUses)
%19 = add %17, 2:i32 (hasExternalUses)
%20 = phi %16, %18, %18, %19
%21 = add %15, %20 (hasExternalUses)
%22 = phi %0, %12, %21
%23 = block 3
%24:i32 = var
%25 = and %24, 1:i32 (hasExternalUses)
%26 = phi %23, 1:i32, %25, 1:i32
%27 = or %26, 2:i32 (hasExternalUses)
%28 = add %22, %27
%29 = eq %8, %4
blockpc %7 0 %29 1:i1
%30:i32 = var
blockpc %7 1 %30 1:i1
infer %28


; start LHS (in $39)
%0:i32 = var
%1 = xor %0, 65536:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 256:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 256:i32
infer %2


; start LHS (in $39)
%0 = block 3
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3 = add %1, 2:i32 (hasExternalUses)
%4 = phi %0, %2, %2, %3
%5:i32 = var
%6 = sub %5, 7680:i32 (hasExternalUses)
%7 = add %6, 256:i32
%8 = sub %4, %7
infer %8


; start LHS (in $39)
%0:i32 = var
%1 = sub %0, 7680:i32 (hasExternalUses)
%2 = add %1, 256:i32 (hasExternalUses)
%3 = block 2
%4:i32 = var
%5 = add %1, 255:i32 (hasExternalUses)
%6 = phi %3, %4, %5
%7 = add %6, -2:i32 (hasExternalUses)
%8 = sub %2, %7
%9 = eq %4, %2
blockpc %3 0 %9 1:i1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %3 1 %11 1:i1
infer %8


; start LHS (in $39)
%0 = block 3
%1:i32 = var
%2 = add %1, 1:i32 (hasExternalUses)
%3 = add %1, 2:i32 (hasExternalUses)
%4 = phi %0, %2, %2, %3
%5:i32 = var
%6 = sub %5, 7680:i32 (hasExternalUses)
%7 = add %6, 256:i32
%8 = sub %4, %7 (hasExternalUses)
%9 = add %6, 256:i32 (hasExternalUses)
%10 = block 2
%11:i32 = var
%12 = add %6, 255:i32 (hasExternalUses)
%13 = phi %10, %11, %12
%14 = add %13, -2:i32 (hasExternalUses)
%15 = sub %9, %14 (hasExternalUses)
%16 = add %8, %15
%17 = eq %11, %9
blockpc %10 0 %17 1:i1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %10 1 %19 1:i1
infer %16


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = sub %2, 7680:i32 (hasExternalUses)
%4 = add %3, 256:i32 (hasExternalUses)
%5 = add %1, %4
%6 = add %5, 2:i32
%7 = block 2
%8:i32 = var
%9 = add %3, 255:i32 (hasExternalUses)
%10 = phi %7, %8, %9
%11 = add %10, -2:i32 (hasExternalUses)
%12 = sub %6, %11 (hasExternalUses)
%13 = add %3, 256:i32
%14 = sub %4, %13
%15 = sub %14, %11
%16 = block 3
%17:i32 = var
%18 = add %17, 1:i32 (hasExternalUses)
%19 = add %17, 2:i32 (hasExternalUses)
%20 = phi %16, %18, %18, %19
%21 = add %15, %20 (hasExternalUses)
%22 = phi %0, %12, %21
%23 = add %3, 256:i32
%24 = sub %20, %23 (hasExternalUses)
%25 = sub %4, %11 (hasExternalUses)
%26 = add %24, %25
%27 = sub %22, %26
%28 = eq %8, %4
blockpc %7 0 %28 1:i1
%29:i32 = var
blockpc %7 1 %29 1:i1
infer %27


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = slt %7, 0:i32
%9 = select %8, 6:i32, %7 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = add %11, %13 (hasExternalUses)
%15 = add %14, -1:i32
infer %15


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = add %9, -2:i32
infer %10


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = and %9, 8:i32
infer %10


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = phi %0, %1, 1:i32
%3 = eq %2, 0:i32
infer %3


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -4:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = urem %0, 10:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = mul %0, 10:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = mul %1, 10:i32
%3 = urem %0, %2
infer %3


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = mul %1, 10:i32
%3 = urem %0, %2
%4 = eq %3, 0:i32
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 2
%9:i32 = var
%10 = add %9, -28:i32 (hasExternalUses)
%11:i32 = var
%12 = phi %8, %10, %11
%13 = slt %12, 0:i32
%14:i32 = var
%15 = sub %14, 7680:i32 (hasExternalUses)
%16 = add %15, 304:i32
%17 = add %15, 7216:i32
%18 = select %13, %16, %17 (hasExternalUses)
%19 = phi %3, %7, %18
%20 = phi %1, %2, %19
%21 = sub %0, %20
infer %21


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 2
%9:i32 = var
%10 = add %9, -28:i32 (hasExternalUses)
%11:i32 = var
%12 = phi %8, %10, %11
%13 = slt %12, 0:i32
%14:i32 = var
%15 = sub %14, 7680:i32 (hasExternalUses)
%16 = add %15, 304:i32
%17 = add %15, 7216:i32
%18 = select %13, %16, %17 (hasExternalUses)
%19 = phi %3, %7, %18
%20 = phi %1, %2, %19
%21 = sub %0, %20
%22 = ashr %21, 2:i32
infer %22


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 2
%9:i32 = var
%10 = add %9, -28:i32 (hasExternalUses)
%11:i32 = var
%12 = phi %8, %10, %11
%13 = slt %12, 0:i32
%14:i32 = var
%15 = sub %14, 7680:i32 (hasExternalUses)
%16 = add %15, 304:i32
%17 = add %15, 7216:i32
%18 = select %13, %16, %17 (hasExternalUses)
%19 = phi %3, %7, %18
%20 = phi %1, %2, %19
%21 = sub %0, %20
%22 = ashr %21, 2:i32
%23 = mul %22, 9:i32
infer %23


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = slt %11, 0:i32
%13:i32 = var
%14 = sub %13, 7680:i32 (hasExternalUses)
%15 = add %14, 304:i32
%16 = add %14, 7216:i32
%17 = select %12, %15, %16 (hasExternalUses)
%18 = phi %3, %7, %17
%19 = phi %1, %2, %18
%20 = sub %0, %19
%21 = ashr %20, 2:i32
%22 = mul %21, 9:i32
%23 = add %22, -9:i32
infer %23


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = add %10, -1:i32 (hasExternalUses)
%12 = add %10, -2:i32 (hasExternalUses)
%13 = phi %0, %11, %12
%14 = or %13, 32:i32
infer %14


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = add %10, -1:i32 (hasExternalUses)
%12 = add %10, -2:i32 (hasExternalUses)
%13 = phi %0, %11, %12
%14 = or %13, 32:i32
%15 = eq %14, 102:i32
infer %15


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = slt %11, 0:i32
%13:i32 = var
%14 = add %13, 304:i32
%15 = add %13, 7216:i32
%16 = select %12, %14, %15 (hasExternalUses)
%17 = phi %3, %7, %16
%18 = phi %1, %2, %17
%19 = sub %0, %18
%20 = ashr %19, 2:i32
%21 = mul %20, 9:i32
%22 = add %21, -9:i32 (hasExternalUses)
%23 = block 4
%24:i32 = var
%25 = add %24, 1:i32 (hasExternalUses)
%26 = phi %23, 9:i32, 9:i32, 0:i32, %25
%27 = sub %22, %26
%28 = block 2
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32 = phi %4, %30, %31
%33:i32 = var
%34 = phi %3, %32, %33
%35 = phi %1, %29, %34
%36 = add %35, -1:i32
%37:i32 = var
%38 = phi %28, %36, %37
%39 = or %38, 32:i32
%40 = eq %39, 102:i32
pc %40 1:i1
infer %27


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9:i32 = var
%10:i32 = var
%11 = select %8, %9, %10 (hasExternalUses)
%12 = phi %3, %7, %11
%13 = phi %1, %2, %12
%14 = sub %0, %13
%15 = ashr %14, 2:i32
%16 = mul %15, 9:i32
%17 = add %16, -9:i32 (hasExternalUses)
%18 = block 4
%19:i32 = var
%20 = add %19, 1:i32 (hasExternalUses)
%21 = phi %18, 9:i32, 9:i32, 0:i32, %20
%22 = sub %17, %21 (hasExternalUses)
%23 = slt 0:i32, %22
%24 = block 2
%25:i32 = var
%26:i32 = var
%27:i32 = var
%28 = phi %4, %26, %27
%29:i32 = var
%30 = phi %3, %28, %29
%31 = phi %1, %25, %30
%32 = add %31, -1:i32
%33:i32 = var
%34 = phi %24, %32, %33
%35 = or %34, 32:i32
%36 = eq %35, 102:i32
pc %36 1:i1
infer %23


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = sub %0, %10
%12 = ashr %11, 2:i32
%13 = mul %12, 9:i32
%14 = add %13, -9:i32 (hasExternalUses)
%15 = block 4
%16:i32 = var
%17 = add %16, 1:i32 (hasExternalUses)
%18 = phi %15, 9:i32, 9:i32, 0:i32, %17
%19 = sub %14, %18
%20 = slt 0:i32, %19
%21 = select %20, %19, 0:i32
%22 = block 2
%23:i32 = var
%24:i32 = var
%25:i32 = var
%26 = phi %4, %24, %25
%27:i32 = var
%28 = phi %3, %26, %27
%29 = phi %1, %23, %28
%30 = add %29, -1:i32
%31:i32 = var
%32 = phi %22, %30, %31
%33 = or %32, 32:i32
%34 = eq %33, 102:i32
pc %34 1:i1
infer %21


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = slt %8, 0:i32
%10 = select %9, 6:i32, %8 (hasExternalUses)
%11 = phi %3, %7, %10
%12 = phi %1, %2, %11
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = add %12, %14 (hasExternalUses)
%16 = add %15, -1:i32
%17:i32 = var
%18 = block 2
%19 = block 3
%20:i32 = var
%21:i32 = var
%22 = phi %4, %20, %21
%23:i32 = var
%24 = phi %3, %22, %23
%25 = block 2
%26:i32 = var
%27 = block 3
%28:i32 = var
%29:i32 = var
%30 = phi %27, %28, %28, %29
%31 = phi %4, %26, %30
%32 = phi %3, %31, %23
%33 = block 3
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %34, %35
%37 = phi %25, %32, %36
%38 = sub %24, %37
%39 = ashr %38, 2:i32
%40 = mul %39, 9:i32 (hasExternalUses)
%41:i32 = var
%42 = phi %19, 0:i32, %40, %41
%43 = block 4
%44:i32 = var
%45:i32 = var
%46 = phi %43, %42, %42, %44, %45
%47 = phi %18, %42, %46
%48 = phi %1, %17, %47
%49 = sub %16, %48 (hasExternalUses)
%50:i32 = var
%51 = phi %0, %49, %50
%52:i32 = var
%53 = slt %51, %52
%54:i32 = var
blockpc %18 0 %54 1:i1
%55:i32 = var
blockpc %18 1 %55 1:i1
%56:i32 = var
blockpc %25 0 %56 1:i1
%57:i32 = var
blockpc %25 1 %57 1:i1
%58:i32 = var
pc %58 1:i1
infer %53


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9:i32 = var
%10 = select %8, 6:i32, %9 (hasExternalUses)
%11 = phi %3, %7, %10
%12 = phi %1, %2, %11
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = add %12, %14 (hasExternalUses)
%16 = add %15, -1:i32
%17:i32 = var
%18 = block 2
%19 = block 3
%20:i32 = var
%21 = ashr %20, 2:i32
%22 = mul %21, 9:i32 (hasExternalUses)
%23:i32 = var
%24 = add %23, 1:i32 (hasExternalUses)
%25 = phi %19, 0:i32, %22, %24
%26 = block 4
%27:i32 = var
%28 = ashr %27, 2:i32
%29 = mul %28, 9:i32 (hasExternalUses)
%30:i32 = var
%31 = phi %26, %25, %25, %29, %30
%32 = phi %18, %25, %31
%33 = phi %1, %17, %32
%34 = sub %16, %33 (hasExternalUses)
%35:i32 = var
%36 = phi %0, %34, %35
%37:i32 = var
%38 = slt %36, %37
%39 = select %38, %36, %37
%40:i32 = var
blockpc %18 0 %40 1:i1
%41:i32 = var
blockpc %18 1 %41 1:i1
%42:i32 = var
pc %42 1:i1
infer %39


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = slt %11, 0:i32
%13:i32 = var
%14 = add %13, 304:i32
%15 = add %13, 7216:i32
%16 = select %12, %14, %15 (hasExternalUses)
%17 = phi %3, %7, %16
%18 = phi %1, %2, %17
%19 = sub %0, %18
%20 = ashr %19, 2:i32
%21 = mul %20, 9:i32
%22 = add %21, -9:i32 (hasExternalUses)
%23:i32 = var
%24 = block 2
%25 = block 3
%26 = block 2
%27:i32 = var
%28 = block 3
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %29, %30
%32 = phi %4, %27, %31
%33 = phi %3, %32, %16
%34 = block 3
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %35, %36
%38 = phi %26, %33, %37
%39 = sub %17, %38
%40 = ashr %39, 2:i32
%41 = mul %40, 9:i32 (hasExternalUses)
%42:i32 = var
%43 = phi %25, 0:i32, %41, %42
%44 = block 4
%45:i32 = var
%46:i32 = var
%47 = phi %44, %43, %43, %45, %46
%48 = phi %24, %43, %47
%49 = phi %1, %23, %48
%50 = add %22, %49
%51:i32 = var
blockpc %24 0 %51 1:i1
%52:i32 = var
blockpc %24 1 %52 1:i1
%53:i32 = var
blockpc %26 0 %53 1:i1
%54:i32 = var
blockpc %26 1 %54 1:i1
infer %50


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9:i32 = var
%10:i32 = var
%11 = select %8, %9, %10 (hasExternalUses)
%12 = phi %3, %7, %11
%13 = phi %1, %2, %12
%14 = sub %0, %13
%15 = ashr %14, 2:i32
%16 = mul %15, 9:i32
%17 = add %16, -9:i32 (hasExternalUses)
%18:i32 = var
%19 = block 2
%20 = block 3
%21 = block 2
%22:i32 = var
%23 = block 3
%24:i32 = var
%25:i32 = var
%26 = phi %23, %24, %24, %25
%27 = phi %4, %22, %26
%28 = phi %3, %27, %11
%29 = block 3
%30:i32 = var
%31:i32 = var
%32 = phi %29, %30, %30, %31
%33 = phi %21, %28, %32
%34 = sub %12, %33
%35 = ashr %34, 2:i32
%36 = mul %35, 9:i32 (hasExternalUses)
%37:i32 = var
%38 = phi %20, 0:i32, %36, %37
%39 = block 4
%40:i32 = var
%41:i32 = var
%42 = phi %39, %38, %38, %40, %41
%43 = phi %19, %38, %42
%44 = phi %1, %18, %43
%45 = add %17, %44
%46 = block 4
%47:i32 = var
%48 = phi %46, 9:i32, 9:i32, 0:i32, %47
%49 = sub %45, %48
%50:i32 = var
blockpc %19 0 %50 1:i1
%51:i32 = var
blockpc %19 1 %51 1:i1
%52:i32 = var
blockpc %21 0 %52 1:i1
%53:i32 = var
blockpc %21 1 %53 1:i1
infer %49


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = sub %0, %10
%12 = ashr %11, 2:i32
%13 = mul %12, 9:i32
%14 = add %13, -9:i32 (hasExternalUses)
%15:i32 = var
%16 = block 2
%17 = block 3
%18 = block 2
%19:i32 = var
%20 = block 3
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %21, %22
%24 = phi %4, %19, %23
%25 = phi %3, %24, %8
%26 = block 3
%27:i32 = var
%28:i32 = var
%29 = phi %26, %27, %27, %28
%30 = phi %18, %25, %29
%31 = sub %9, %30
%32 = ashr %31, 2:i32
%33 = mul %32, 9:i32 (hasExternalUses)
%34:i32 = var
%35 = phi %17, 0:i32, %33, %34
%36 = block 4
%37:i32 = var
%38:i32 = var
%39 = phi %36, %35, %35, %37, %38
%40 = phi %16, %35, %39
%41 = phi %1, %15, %40
%42 = add %14, %41
%43 = block 4
%44:i32 = var
%45 = phi %43, 9:i32, 9:i32, 0:i32, %44
%46 = sub %42, %45 (hasExternalUses)
%47 = slt 0:i32, %46
%48:i32 = var
blockpc %16 0 %48 1:i1
%49:i32 = var
blockpc %16 1 %49 1:i1
%50:i32 = var
blockpc %18 0 %50 1:i1
%51:i32 = var
blockpc %18 1 %51 1:i1
infer %47


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = sub %0, %10
%12 = ashr %11, 2:i32
%13 = mul %12, 9:i32
%14 = add %13, -9:i32 (hasExternalUses)
%15:i32 = var
%16 = block 2
%17 = block 3
%18:i32 = var
%19 = ashr %18, 2:i32
%20 = mul %19, 9:i32 (hasExternalUses)
%21:i32 = var
%22 = add %21, 1:i32 (hasExternalUses)
%23 = phi %17, 0:i32, %20, %22
%24 = block 4
%25:i32 = var
%26 = ashr %25, 2:i32
%27 = mul %26, 9:i32 (hasExternalUses)
%28:i32 = var
%29 = add %28, 1:i32 (hasExternalUses)
%30 = phi %24, %23, %23, %27, %29
%31 = phi %16, %23, %30
%32 = phi %1, %15, %31
%33 = add %14, %32
%34 = block 4
%35:i32 = var
%36 = phi %34, 9:i32, 9:i32, 0:i32, %35
%37 = sub %33, %36
%38 = slt 0:i32, %37
%39 = select %38, %37, 0:i32
%40:i32 = var
blockpc %16 0 %40 1:i1
%41:i32 = var
blockpc %16 1 %41 1:i1
infer %39


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = slt %8, 0:i32
%10 = select %9, 6:i32, %8 (hasExternalUses)
%11 = phi %3, %7, %10
%12 = phi %1, %2, %11
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = add %12, %14 (hasExternalUses)
%16 = add %15, -1:i32
%17:i32 = var
%18 = block 2
%19 = block 3
%20:i32 = var
%21:i32 = var
%22 = phi %4, %20, %21
%23:i32 = var
%24 = phi %3, %22, %23
%25 = block 2
%26:i32 = var
%27 = block 3
%28:i32 = var
%29:i32 = var
%30 = phi %27, %28, %28, %29
%31 = phi %4, %26, %30
%32 = phi %3, %31, %23
%33 = block 3
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %34, %35
%37 = phi %25, %32, %36
%38 = sub %24, %37
%39 = ashr %38, 2:i32
%40 = mul %39, 9:i32 (hasExternalUses)
%41:i32 = var
%42 = phi %19, 0:i32, %40, %41
%43 = block 4
%44:i32 = var
%45:i32 = var
%46 = phi %43, %42, %42, %44, %45
%47 = phi %18, %42, %46
%48 = phi %1, %17, %47
%49 = sub %16, %48 (hasExternalUses)
%50:i32 = var
%51 = phi %0, %49, %50
%52:i32 = var
%53 = slt %51, %52
%54:i32 = var
blockpc %18 0 %54 1:i1
%55:i32 = var
blockpc %18 1 %55 1:i1
%56:i32 = var
blockpc %25 0 %56 1:i1
%57:i32 = var
blockpc %25 1 %57 1:i1
infer %53


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9:i32 = var
%10 = select %8, 6:i32, %9 (hasExternalUses)
%11 = phi %3, %7, %10
%12 = phi %1, %2, %11
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = add %12, %14 (hasExternalUses)
%16 = add %15, -1:i32
%17:i32 = var
%18 = block 2
%19 = block 3
%20:i32 = var
%21 = ashr %20, 2:i32
%22 = mul %21, 9:i32 (hasExternalUses)
%23:i32 = var
%24 = add %23, 1:i32 (hasExternalUses)
%25 = phi %19, 0:i32, %22, %24
%26 = block 4
%27:i32 = var
%28 = ashr %27, 2:i32
%29 = mul %28, 9:i32 (hasExternalUses)
%30:i32 = var
%31 = phi %26, %25, %25, %29, %30
%32 = phi %18, %25, %31
%33 = phi %1, %17, %32
%34 = sub %16, %33 (hasExternalUses)
%35:i32 = var
%36 = phi %0, %34, %35
%37:i32 = var
%38 = slt %36, %37
%39 = select %38, %36, %37
%40:i32 = var
blockpc %18 0 %40 1:i1
%41:i32 = var
blockpc %18 1 %41 1:i1
infer %39


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 3
%8:i32 = var
%9 = and %8, 1:i32 (hasExternalUses)
%10 = phi %7, 1:i32, %9, 1:i32
%11 = phi %2, %6, %10
%12 = phi %0, %1, %11
%13 = block 4
%14:i32 = var
%15:i32 = var
%16:i32 = var
%17 = phi %3, %15, %16
%18:i32 = var
%19 = slt %18, 0:i32
%20 = select %19, 6:i32, %18 (hasExternalUses)
%21 = phi %2, %17, %20
%22 = phi %0, %14, %21
%23 = block 2
%24 = eq %22, 0:i32
%25:i32 = zext %24
%26 = add %22, %25 (hasExternalUses)
%27 = add %26, -1:i32
%28:i32 = var
%29 = block 2
%30 = block 3
%31:i32 = var
%32:i32 = var
%33 = phi %30, 0:i32, %31, %32
%34 = block 4
%35:i32 = var
%36:i32 = var
%37 = phi %34, %33, %33, %35, %36
%38 = phi %29, %33, %37
%39 = phi %0, %28, %38
%40 = sub %27, %39 (hasExternalUses)
%41:i32 = var
%42 = phi %23, %40, %41
%43:i32 = var
%44:i32 = var
%45 = phi %13, %22, %42, %43, %44
%46 = add %12, %45
%47:i32 = var
blockpc %29 0 %47 1:i1
%48:i32 = var
blockpc %29 1 %48 1:i1
infer %46


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = lshr %9, 3:i32
infer %10


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = lshr %9, 3:i32
%11 = and %10, 1:i32
infer %11


; start LHS (in $39)
%0 = block 4
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = slt %8, 0:i32
%10 = select %9, 6:i32, %8 (hasExternalUses)
%11 = phi %3, %7, %10
%12 = phi %1, %2, %11
%13 = block 2
%14 = eq %12, 0:i32
%15:i32 = zext %14
%16 = add %12, %15 (hasExternalUses)
%17 = add %16, -1:i32
%18:i32 = var
%19 = block 2
%20 = block 3
%21:i32 = var
%22 = ashr %21, 2:i32
%23 = mul %22, 9:i32 (hasExternalUses)
%24:i32 = var
%25 = add %24, 1:i32 (hasExternalUses)
%26 = phi %20, 0:i32, %23, %25
%27 = block 4
%28:i32 = var
%29 = ashr %28, 2:i32
%30 = mul %29, 9:i32 (hasExternalUses)
%31:i32 = var
%32 = phi %27, %26, %26, %30, %31
%33 = phi %19, %26, %32
%34 = phi %1, %18, %33
%35 = sub %17, %34 (hasExternalUses)
%36:i32 = var
%37 = phi %13, %35, %36
%38:i32 = var
%39:i32 = var
%40 = phi %0, %12, %37, %38, %39
%41 = ne %40, 0:i32
%42:i32 = var
blockpc %19 0 %42 1:i1
%43:i32 = var
blockpc %19 1 %43 1:i1
infer %41


; start LHS (in $39)
%0 = block 4
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = slt %8, 0:i32
%10 = select %9, 6:i32, %8 (hasExternalUses)
%11 = phi %3, %7, %10
%12 = phi %1, %2, %11
%13 = block 2
%14 = eq %12, 0:i32
%15:i32 = zext %14
%16 = add %12, %15 (hasExternalUses)
%17 = add %16, -1:i32
%18:i32 = var
%19 = block 2
%20 = block 3
%21:i32 = var
%22 = mul %21, 9:i32 (hasExternalUses)
%23:i32 = var
%24 = add %23, 1:i32 (hasExternalUses)
%25 = phi %20, 0:i32, %22, %24
%26 = block 4
%27:i32 = var
%28 = mul %27, 9:i32 (hasExternalUses)
%29:i32 = var
%30 = add %29, 1:i32 (hasExternalUses)
%31 = phi %26, %25, %25, %28, %30
%32 = phi %19, %25, %31
%33 = phi %1, %18, %32
%34 = sub %17, %33 (hasExternalUses)
%35:i32 = var
%36 = phi %13, %34, %35
%37:i32 = var
%38:i32 = var
%39 = phi %0, %12, %36, %37, %38
%40 = ne %39, 0:i32
%41:i32 = var
%42 = select %40, 1:i32, %41
%43:i32 = var
blockpc %19 0 %43 1:i1
%44:i32 = var
blockpc %19 1 %44 1:i1
infer %42


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 3
%8:i32 = var
%9 = and %8, 1:i32 (hasExternalUses)
%10 = phi %7, 1:i32, %9, 1:i32
%11 = phi %2, %6, %10
%12 = phi %0, %1, %11
%13 = block 4
%14:i32 = var
%15:i32 = var
%16:i32 = var
%17 = phi %3, %15, %16
%18:i32 = var
%19 = slt %18, 0:i32
%20 = select %19, 6:i32, %18 (hasExternalUses)
%21 = phi %2, %17, %20
%22 = phi %0, %14, %21
%23 = block 2
%24 = eq %22, 0:i32
%25:i32 = zext %24
%26 = add %22, %25 (hasExternalUses)
%27 = add %26, -1:i32
%28:i32 = var
%29 = block 2
%30 = block 3
%31:i32 = var
%32:i32 = var
%33 = phi %30, 0:i32, %31, %32
%34 = block 4
%35:i32 = var
%36:i32 = var
%37 = phi %34, %33, %33, %35, %36
%38 = phi %29, %33, %37
%39 = phi %0, %28, %38
%40 = sub %27, %39 (hasExternalUses)
%41:i32 = var
%42 = phi %23, %40, %41
%43:i32 = var
%44:i32 = var
%45 = phi %13, %22, %42, %43, %44
%46 = add %12, %45
%47:i32 = var
%48 = add %46, %47
%49:i32 = var
blockpc %29 0 %49 1:i1
%50:i32 = var
blockpc %29 1 %50 1:i1
infer %48


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10:i32 = var
%11:i32 = var
%12 = select %9, %10, %11 (hasExternalUses)
%13 = phi %4, %8, %12
%14 = block 2
%15:i32 = var
%16 = block 3
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %17, %18
%20 = phi %5, %15, %19
%21 = phi %4, %20, %12
%22 = block 3
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %23, %24
%26 = phi %14, %21, %25
%27 = sub %13, %26
%28 = ashr %27, 2:i32
%29 = mul %28, 9:i32 (hasExternalUses)
%30:i32 = var
%31 = phi %3, 0:i32, %29, %30
%32 = block 4
%33:i32 = var
%34:i32 = var
%35 = phi %32, %31, %31, %33, %34
%36 = phi %2, %31, %35
%37 = phi %0, %1, %36
%38 = slt 0:i32, %37
%39:i32 = var
blockpc %2 0 %39 1:i1
%40:i32 = var
blockpc %2 1 %40 1:i1
%41:i32 = var
blockpc %14 0 %41 1:i1
%42:i32 = var
blockpc %14 1 %42 1:i1
infer %38


; start LHS (in $39)
%0 = block 4
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = block 2
%12 = add %10, -1:i32 (hasExternalUses)
%13 = add %10, -2:i32 (hasExternalUses)
%14 = phi %11, %12, %13
%15 = phi %0, %10, %14, %14, %14
%16 = or %15, 32:i32
infer %16


; start LHS (in $39)
%0 = block 4
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = block 2
%12 = add %10, -1:i32 (hasExternalUses)
%13 = add %10, -2:i32 (hasExternalUses)
%14 = phi %11, %12, %13
%15 = phi %0, %10, %14, %14, %14
%16 = or %15, 32:i32 (hasExternalUses)
%17 = eq %16, 102:i32
infer %17


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = phi %4, %8, %9
%11 = block 2
%12:i32 = var
%13 = block 3
%14:i32 = var
%15:i32 = var
%16 = phi %13, %14, %14, %15
%17 = phi %5, %12, %16
%18 = phi %4, %17, %9
%19 = block 3
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %20, %21
%23 = phi %11, %18, %22
%24 = sub %10, %23
%25 = ashr %24, 2:i32
%26 = mul %25, 9:i32 (hasExternalUses)
%27:i32 = var
%28 = add %27, 1:i32 (hasExternalUses)
%29 = phi %3, 0:i32, %26, %28
%30 = block 4
%31:i32 = var
%32:i32 = var
%33 = phi %30, %29, %29, %31, %32
%34 = phi %2, %29, %33
%35 = phi %0, %1, %34
%36 = slt 0:i32, %35
%37 = select %36, %35, 0:i32
%38:i32 = var
blockpc %2 0 %38 1:i1
%39:i32 = var
blockpc %2 1 %39 1:i1
%40:i32 = var
blockpc %11 0 %40 1:i1
%41:i32 = var
blockpc %11 1 %41 1:i1
infer %37


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10:i32 = var
%11:i32 = var
%12 = select %9, %10, %11 (hasExternalUses)
%13 = phi %4, %8, %12
%14 = block 2
%15:i32 = var
%16 = block 3
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %17, %18
%20 = phi %5, %15, %19
%21 = phi %4, %20, %12
%22 = block 3
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %23, %24
%26 = phi %14, %21, %25
%27 = sub %13, %26
%28 = ashr %27, 2:i32
%29 = mul %28, 9:i32 (hasExternalUses)
%30:i32 = var
%31 = phi %3, 0:i32, %29, %30
%32 = block 4
%33:i32 = var
%34:i32 = var
%35 = phi %32, %31, %31, %33, %34
%36 = phi %2, %31, %35
%37 = phi %0, %1, %36
%38 = slt %37, 0:i32
%39:i32 = var
blockpc %2 0 %39 1:i1
%40:i32 = var
blockpc %2 1 %40 1:i1
%41:i32 = var
blockpc %14 0 %41 1:i1
%42:i32 = var
blockpc %14 1 %42 1:i1
infer %38


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = phi %4, %8, %9
%11 = block 2
%12:i32 = var
%13 = block 3
%14:i32 = var
%15:i32 = var
%16 = phi %13, %14, %14, %15
%17 = phi %5, %12, %16
%18 = phi %4, %17, %9
%19 = block 3
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %20, %21
%23 = phi %11, %18, %22
%24 = sub %10, %23
%25 = ashr %24, 2:i32
%26 = mul %25, 9:i32 (hasExternalUses)
%27:i32 = var
%28 = add %27, 1:i32 (hasExternalUses)
%29 = phi %3, 0:i32, %26, %28
%30 = block 4
%31:i32 = var
%32:i32 = var
%33 = phi %30, %29, %29, %31, %32
%34 = phi %2, %29, %33
%35 = phi %0, %1, %34
%36 = slt %35, 0:i32
%37:i32 = var
%38:i32 = var
%39 = phi %0, %37, %38
%40 = select %36, %39, %35
%41:i32 = var
blockpc %2 0 %41 1:i1
%42:i32 = var
blockpc %2 1 %42 1:i1
%43:i32 = var
blockpc %11 0 %43 1:i1
%44:i32 = var
blockpc %11 1 %44 1:i1
infer %40


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = sub %7, 7680:i32 (hasExternalUses)
%9 = add %8, 256:i32 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12:i32 = var
%13 = sub %11, %12
infer %13


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = sub %7, 7680:i32 (hasExternalUses)
%9 = add %8, 256:i32 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12:i32 = var
%13 = sub %11, %12
%14 = sle %13, 1:i32
infer %14


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -1:i32
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = sub %9, 7680:i32
%11 = add %10, 256:i32
%12 = phi %4, %8, %11
%13 = phi %2, %3, %12
%14 = sub %13, %0
%15 = sle %14, 1:i32
pc %15 1:i1
infer %1


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = sub %7, 7680:i32 (hasExternalUses)
%9 = add %8, 256:i32 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12:i32 = var
%13 = sub %11, %12
%14:i32 = var
%15 = sub %11, %14
%16 = sle %15, 1:i32
pc %16 1:i1
infer %13


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -1:i32
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = sub %9, 7680:i32
%11 = add %10, 256:i32
%12 = phi %4, %8, %11
%13 = phi %2, %3, %12
%14:i32 = var
%15 = sub %13, %14
%16 = sle %15, 1:i32
pc %16 1:i1
infer %1


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = sub %7, 7680:i32 (hasExternalUses)
%9 = add %8, 256:i32 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12:i32 = var
%13 = sub %11, %12
%14 = slt %13, 2:i32
%15:i32 = var
%16 = sub %11, %15
%17 = sle %16, 1:i32
pc %17 1:i1
infer %14


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2 = add %1, 1:i32
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10:i32 = var
%11 = sub %10, 7680:i32
%12 = add %11, 256:i32
%13 = phi %5, %9, %12
%14 = phi %3, %4, %13
%15:i32 = var
%16 = sub %14, %15
%17 = sle %16, 1:i32
pc %17 1:i1
infer %2


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4 = add %3, 1:i32 (hasExternalUses)
%5 = phi %0, %1, %4
%6 = add %5, -2:i32
%7 = block 2
%8:i32 = var
%9 = block 2
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14:i32 = var
%15 = sub %14, 7680:i32
%16 = add %15, 256:i32
%17 = phi %9, %13, %16
%18 = phi %7, %8, %17
%19 = sub %18, %1
%20 = sle %19, 1:i32
blockpc %0 0 %20 1:i1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1:i1
infer %6


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4 = add %3, 1:i32 (hasExternalUses)
%5 = phi %0, %1, %4
%6 = add %5, -1:i32
%7 = block 2
%8:i32 = var
%9 = block 2
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14:i32 = var
%15 = sub %14, 7680:i32
%16 = add %15, 256:i32
%17 = phi %9, %13, %16
%18 = phi %7, %8, %17
%19 = sub %18, %1
%20 = sle %19, 1:i32
blockpc %0 0 %20 1:i1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1:i1
infer %6


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10:i32 = var
%11:i32 = var
%12 = select %9, %10, %11 (hasExternalUses)
%13 = phi %4, %8, %12
%14 = block 2
%15:i32 = var
%16 = block 3
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %17, %18
%20 = phi %5, %15, %19
%21 = phi %4, %20, %12
%22 = block 3
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %23, %24
%26 = phi %14, %21, %25
%27 = sub %13, %26
%28 = ashr %27, 2:i32
%29 = mul %28, 9:i32 (hasExternalUses)
%30:i32 = var
%31 = phi %3, 0:i32, %29, %30
%32 = block 4
%33:i32 = var
%34:i32 = var
%35 = phi %32, %31, %31, %33, %34
%36 = phi %2, %31, %35
%37 = phi %0, %1, %36
%38 = lshr %37, 30:i32
%39:i32 = var
blockpc %2 0 %39 1:i1
%40:i32 = var
blockpc %2 1 %40 1:i1
%41:i32 = var
blockpc %14 0 %41 1:i1
%42:i32 = var
blockpc %14 1 %42 1:i1
infer %38


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = phi %4, %8, %9
%11 = block 2
%12:i32 = var
%13 = block 3
%14:i32 = var
%15:i32 = var
%16 = phi %13, %14, %14, %15
%17 = phi %5, %12, %16
%18 = phi %4, %17, %9
%19 = block 3
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %20, %21
%23 = phi %11, %18, %22
%24 = sub %10, %23
%25 = ashr %24, 2:i32
%26 = mul %25, 9:i32 (hasExternalUses)
%27:i32 = var
%28 = add %27, 1:i32 (hasExternalUses)
%29 = phi %3, 0:i32, %26, %28
%30 = block 4
%31:i32 = var
%32:i32 = var
%33 = phi %30, %29, %29, %31, %32
%34 = phi %2, %29, %33
%35 = phi %0, %1, %34
%36 = lshr %35, 30:i32
%37 = and %36, 2:i32
%38:i32 = var
blockpc %2 0 %38 1:i1
%39:i32 = var
blockpc %2 1 %39 1:i1
%40:i32 = var
blockpc %11 0 %40 1:i1
%41:i32 = var
blockpc %11 1 %41 1:i1
infer %37


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = phi %4, %8, %9
%11 = block 2
%12:i32 = var
%13 = block 3
%14:i32 = var
%15:i32 = var
%16 = phi %13, %14, %14, %15
%17 = phi %5, %12, %16
%18 = phi %4, %17, %9
%19 = block 3
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %20, %21
%23 = phi %11, %18, %22
%24 = sub %10, %23
%25 = ashr %24, 2:i32
%26 = mul %25, 9:i32 (hasExternalUses)
%27:i32 = var
%28 = add %27, 1:i32 (hasExternalUses)
%29 = phi %3, 0:i32, %26, %28
%30 = block 4
%31:i32 = var
%32:i32 = var
%33 = phi %30, %29, %29, %31, %32
%34 = phi %2, %29, %33
%35 = phi %0, %1, %34
%36 = lshr %35, 30:i32
%37 = and %36, 2:i32
%38 = add %37, 43:i32
%39:i32 = var
blockpc %2 0 %39 1:i1
%40:i32 = var
blockpc %2 1 %40 1:i1
%41:i32 = var
blockpc %11 0 %41 1:i1
%42:i32 = var
blockpc %11 1 %42 1:i1
infer %38


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = sub %7, 7680:i32 (hasExternalUses)
%9 = add %8, 256:i32 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = add %14, -1:i32 (hasExternalUses)
%16 = add %15, 1:i32 (hasExternalUses)
%17 = phi %12, %13, %16
%18 = add %17, -2:i32 (hasExternalUses)
%19 = sub %11, %18
%20 = sub %11, %13
%21 = sle %20, 1:i32
blockpc %12 0 %21 1:i1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %12 1 %23 1:i1
infer %19


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 3
%8:i32 = var
%9 = and %8, 1:i32 (hasExternalUses)
%10 = phi %7, 1:i32, %9, 1:i32
%11 = phi %2, %6, %10
%12 = phi %0, %1, %11
%13 = block 4
%14:i32 = var
%15:i32 = var
%16:i32 = var
%17 = phi %3, %15, %16
%18:i32 = var
%19 = slt %18, 0:i32
%20 = select %19, 6:i32, %18 (hasExternalUses)
%21 = phi %2, %17, %20
%22 = phi %0, %14, %21
%23 = block 2
%24:i32 = var
%25:i32 = zext %24
%26 = add %22, %25 (hasExternalUses)
%27 = add %26, -1:i32
%28:i32 = var
%29 = block 2
%30 = block 3
%31:i32 = var
%32:i32 = var
%33 = phi %30, 0:i32, %31, %32
%34 = block 4
%35:i32 = var
%36:i32 = var
%37 = phi %34, %33, %33, %35, %36
%38 = phi %29, %33, %37
%39 = phi %0, %28, %38
%40 = sub %27, %39 (hasExternalUses)
%41:i32 = var
%42 = phi %23, %40, %41
%43:i32 = var
%44:i32 = var
%45 = phi %13, %22, %42, %43, %44
%46 = add %12, %45
%47:i32 = var
%48 = add %46, %47
%49 = block 2
%50:i32 = var
%51:i32 = var
%52 = phi %49, %50, %51
%53 = add %48, %52
%54:i32 = var
blockpc %29 0 %54 1:i1
%55:i32 = var
blockpc %29 1 %55 1:i1
infer %53


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 3
%8:i32 = var
%9 = and %8, 1:i32 (hasExternalUses)
%10 = phi %7, 1:i32, %9, 1:i32
%11 = phi %2, %6, %10
%12 = phi %0, %1, %11
%13 = block 4
%14:i32 = var
%15:i32 = var
%16:i32 = var
%17 = phi %3, %15, %16
%18:i32 = var
%19 = slt %18, 0:i32
%20 = select %19, 6:i32, %18 (hasExternalUses)
%21 = phi %2, %17, %20
%22 = phi %0, %14, %21
%23 = block 2
%24:i32 = var
%25:i32 = zext %24
%26 = add %22, %25 (hasExternalUses)
%27 = add %26, -1:i32
%28:i32 = var
%29 = block 2
%30 = block 3
%31:i32 = var
%32:i32 = var
%33 = phi %30, 0:i32, %31, %32
%34 = block 4
%35:i32 = var
%36:i32 = var
%37 = phi %34, %33, %33, %35, %36
%38 = phi %29, %33, %37
%39 = phi %0, %28, %38
%40 = sub %27, %39 (hasExternalUses)
%41:i32 = var
%42 = phi %23, %40, %41
%43:i32 = var
%44:i32 = var
%45 = phi %13, %22, %42, %43, %44
%46 = add %12, %45
%47:i32 = var
%48 = add %46, %47
%49 = block 2
%50:i32 = var
%51:i32 = var
%52 = phi %49, %50, %51
%53 = add %48, %52
%54 = add %53, 1:i32
%55:i32 = var
blockpc %29 0 %55 1:i1
%56:i32 = var
blockpc %29 1 %56 1:i1
infer %54


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = xor %9, 65536:i32
infer %10


; start LHS (in $39)
%0 = block 4
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = block 2
%12 = add %10, -1:i32 (hasExternalUses)
%13 = add %10, -2:i32 (hasExternalUses)
%14 = phi %11, %12, %13
%15 = phi %0, %10, %14, %14, %14
%16 = or %15, 32:i32 (hasExternalUses)
%17 = eq %16, 102:i32
infer %17


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = add %8, -28:i32 (hasExternalUses)
%10:i32 = var
%11 = phi %7, %9, %10
%12 = slt %11, 0:i32
%13:i32 = var
%14 = sub %13, 7680:i32 (hasExternalUses)
%15 = add %14, 304:i32
%16 = add %14, 7216:i32
%17 = select %12, %15, %16 (hasExternalUses)
%18 = phi %2, %6, %17
%19 = phi %0, %1, %18
%20:i32 = var
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = block 3
%25:i32 = var
%26 = add %25, -4:i32 (hasExternalUses)
%27 = phi %24, %25, %25, %26
%28 = phi %3, %23, %27
%29 = phi %2, %28, %17
%30 = block 3
%31:i32 = var
%32:i32 = var
%33 = phi %30, %31, %31, %32
%34 = phi %22, %29, %33
%35 = block 4
%36 = block 2
%37 = block 2
%38:i32 = var
%39:i32 = var
%40 = phi %37, %38, %39
%41 = phi %36, %34, %40
%42 = phi %35, %34, %34, %41, %41
%43 = phi %21, %34, %42
%44 = phi %0, %20, %43
%45 = ult %19, %44
%46:i32 = var
blockpc %21 0 %46 1:i1
%47:i32 = var
blockpc %21 1 %47 1:i1
%48:i32 = var
blockpc %22 0 %48 1:i1
%49:i32 = var
blockpc %22 1 %49 1:i1
%50:i32 = var
blockpc %36 0 %50 1:i1
%51:i32 = var
blockpc %36 1 %51 1:i1
%52:i32 = var
blockpc %37 0 %52 1:i1
%53:i32 = var
blockpc %37 1 %53 1:i1
%54:i32 = var
pc %54 1:i1
infer %45


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = add %8, -28:i32 (hasExternalUses)
%10:i32 = var
%11 = phi %7, %9, %10
%12 = slt %11, 0:i32
%13:i32 = var
%14 = sub %13, 7680:i32 (hasExternalUses)
%15 = add %14, 304:i32
%16 = add %14, 7216:i32
%17 = select %12, %15, %16 (hasExternalUses)
%18 = phi %2, %6, %17
%19 = phi %0, %1, %18
%20:i32 = var
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = block 3
%25:i32 = var
%26 = add %25, -4:i32 (hasExternalUses)
%27 = phi %24, %25, %25, %26
%28 = phi %3, %23, %27
%29 = phi %2, %28, %17
%30 = block 3
%31:i32 = var
%32:i32 = var
%33 = phi %30, %31, %31, %32
%34 = phi %22, %29, %33
%35 = block 4
%36 = block 2
%37 = block 2
%38:i32 = var
%39:i32 = var
%40 = phi %37, %38, %39
%41 = phi %36, %34, %40
%42 = phi %35, %34, %34, %41, %41
%43 = phi %21, %34, %42
%44 = phi %0, %20, %43
%45 = ult %19, %44
%46 = select %45, %19, %44
%47:i32 = var
blockpc %21 0 %47 1:i1
%48:i32 = var
blockpc %21 1 %48 1:i1
%49:i32 = var
blockpc %22 0 %49 1:i1
%50:i32 = var
blockpc %22 1 %50 1:i1
%51:i32 = var
blockpc %36 0 %51 1:i1
%52:i32 = var
blockpc %36 1 %52 1:i1
%53:i32 = var
blockpc %37 0 %53 1:i1
%54:i32 = var
blockpc %37 1 %54 1:i1
%55:i32 = var
pc %55 1:i1
infer %46


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = sub %7, 7680:i32 (hasExternalUses)
%9 = phi %2, %6, %8
%10 = phi %0, %1, %9
%11 = add %10, 256:i32
%12 = block 4
%13:i32 = var
%14:i32 = var
%15:i32 = var
%16 = phi %3, %14, %15
%17:i32 = var
%18 = phi %2, %16, %17
%19 = phi %0, %13, %18
%20 = block 2
%21 = add %19, -1:i32
%22 = add %19, -2:i32
%23 = phi %20, %21, %22
%24 = phi %12, %19, %23, %23, %23
%25 = or %24, 32:i32
%26 = eq %25, 102:i32
pc %26 1:i1
infer %11


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = sub %7, 7680:i32 (hasExternalUses)
%9 = phi %2, %6, %8
%10 = phi %0, %1, %9
%11 = add %10, 256:i32
%12 = or %11, 8:i32
%13 = block 4
%14:i32 = var
%15:i32 = var
%16:i32 = var
%17 = phi %3, %15, %16
%18:i32 = var
%19 = phi %2, %17, %18
%20 = phi %0, %14, %19
%21 = block 2
%22 = add %20, -1:i32
%23 = add %20, -2:i32
%24 = phi %21, %22, %23
%25 = phi %13, %20, %24, %24, %24
%26 = or %25, 32:i32
%27 = eq %26, 102:i32
pc %27 1:i1
infer %12


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = sub %7, 7680:i32 (hasExternalUses)
%9 = phi %2, %6, %8
%10 = phi %0, %1, %9
%11 = add %10, 256:i32
%12 = block 4
%13:i32 = var
%14:i32 = var
%15:i32 = var
%16 = phi %3, %14, %15
%17:i32 = var
%18 = phi %2, %16, %17
%19 = phi %0, %13, %18
%20 = block 2
%21 = add %19, -1:i32
%22 = add %19, -2:i32
%23 = phi %20, %21, %22
%24 = phi %12, %19, %23, %23, %23
%25 = or %24, 32:i32
%26 = eq %25, 102:i32
pc %26 1:i1
infer %11


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = sub %7, 7680:i32 (hasExternalUses)
%9 = phi %2, %6, %8
%10 = phi %0, %1, %9
%11 = add %10, 256:i32
%12 = or %11, 9:i32
%13 = block 4
%14:i32 = var
%15:i32 = var
%16:i32 = var
%17 = phi %3, %15, %16
%18:i32 = var
%19 = phi %2, %17, %18
%20 = phi %0, %14, %19
%21 = block 2
%22 = add %20, -1:i32
%23 = add %20, -2:i32
%24 = phi %21, %22, %23
%25 = phi %13, %20, %24, %24, %24
%26 = or %25, 32:i32
%27 = eq %26, 102:i32
pc %27 1:i1
infer %12


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = ne %0, %1
%3 = block 4
%4 = block 2
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11:i32 = var
%12 = phi %6, %10, %11
%13 = phi %4, %5, %12
%14 = block 2
%15 = add %13, -1:i32
%16 = add %13, -2:i32
%17 = phi %14, %15, %16
%18 = phi %3, %13, %17, %17, %17
%19 = or %18, 32:i32
%20 = eq %19, 102:i32
pc %20 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 256:i32
%2:i32 = var
%3:i32 = var
%4 = ne %2, %3
%5 = block 4
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13:i32 = var
%14 = phi %8, %12, %13
%15 = phi %6, %7, %14
%16 = block 2
%17 = add %15, -1:i32
%18 = add %15, -2:i32
%19 = phi %16, %17, %18
%20 = phi %5, %15, %19, %19, %19
%21 = or %20, 32:i32
%22 = eq %21, 102:i32
pc %4 1:i1
pc %22 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = add %1, 256:i32
%3 = ule %0, %2
%4:i32 = var
%5:i32 = var
%6 = ne %4, %5
%7 = block 4
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15:i32 = var
%16 = phi %10, %14, %15
%17 = phi %8, %9, %16
%18 = block 2
%19 = add %17, -1:i32
%20 = add %17, -2:i32
%21 = phi %18, %19, %20
%22 = phi %7, %17, %21, %21, %21
%23 = or %22, 32:i32
%24 = eq %23, 102:i32
pc %6 1:i1
pc %24 1:i1
infer %3


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3:i32 = var
%4 = ne %2, %3
%5 = block 4
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13:i32 = var
%14 = phi %8, %12, %13
%15 = phi %6, %7, %14
%16 = block 2
%17 = add %15, -1:i32
%18 = add %15, -2:i32
%19 = phi %16, %17, %18
%20 = phi %5, %15, %19, %19, %19
%21 = or %20, 32:i32
%22 = eq %21, 102:i32
pc %4 1:i1
pc %22 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 256:i32
%2:i32 = var
%3:i32 = var
%4 = ne %2, %3
%5 = block 4
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13:i32 = var
%14 = phi %8, %12, %13
%15 = phi %6, %7, %14
%16 = block 2
%17 = add %15, -1:i32
%18 = add %15, -2:i32
%19 = phi %16, %17, %18
%20 = phi %5, %15, %19, %19, %19
%21 = or %20, 32:i32
%22 = eq %21, 102:i32
pc %4 1:i1
pc %22 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 256:i32
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4 = ult %1, %3
%5:i32 = var
%6:i32 = var
%7 = ne %5, %6
%8 = block 4
%9 = block 2
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = phi %12, %13, %14
%16:i32 = var
%17 = phi %11, %15, %16
%18 = phi %9, %10, %17
%19 = block 2
%20 = add %18, -1:i32
%21 = add %18, -2:i32
%22 = phi %19, %20, %21
%23 = phi %8, %18, %22, %22, %22
%24 = or %23, 32:i32
%25 = eq %24, 102:i32
pc %7 1:i1
pc %25 1:i1
infer %4


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = ne %0, %1
%3 = block 4
%4 = block 2
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11:i32 = var
%12 = phi %6, %10, %11
%13 = phi %4, %5, %12
%14 = block 2
%15 = add %13, -1:i32
%16 = add %13, -2:i32
%17 = phi %14, %15, %16
%18 = phi %3, %13, %17, %17, %17
%19 = or %18, 32:i32
%20 = eq %19, 102:i32
pc %20 1:i1
infer %2


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4:i32 = var
%5:i32 = var
%6 = add %5, -1:i32 (hasExternalUses)
%7:i32 = var
%8 = phi %0, %4, %6, %4, %7
%9 = sub %3, %8
%10 = block 4
%11 = block 2
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16:i32 = var
%17 = phi %14, %15, %16
%18:i32 = var
%19 = phi %13, %17, %18
%20 = phi %11, %12, %19
%21 = block 2
%22 = add %20, -1:i32
%23 = add %20, -2:i32
%24 = phi %21, %22, %23
%25 = phi %10, %20, %24, %24, %24
%26 = or %25, 32:i32
%27 = eq %26, 102:i32
pc %27 1:i1
infer %9


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4 = add %3, 4:i32
%5 = block 4
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13:i32 = var
%14 = phi %8, %12, %13
%15 = phi %6, %7, %14
%16 = block 2
%17 = add %15, -1:i32
%18 = add %15, -2:i32
%19 = phi %16, %17, %18
%20 = phi %5, %15, %19, %19, %19
%21 = or %20, 32:i32
%22 = eq %21, 102:i32
pc %22 1:i1
infer %4


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4 = add %3, 4:i32 (hasExternalUses)
%5:i32 = var
%6:i32 = var
%7 = phi %0, %5, %6, %5, %5
%8 = ule %4, %7
%9 = block 4
%10 = block 2
%11:i32 = var
%12 = block 2
%13 = block 2
%14:i32 = var
%15:i32 = var
%16 = phi %13, %14, %15
%17:i32 = var
%18 = phi %12, %16, %17
%19 = phi %10, %11, %18
%20 = block 2
%21 = add %19, -1:i32
%22 = add %19, -2:i32
%23 = phi %20, %21, %22
%24 = phi %9, %19, %23, %23, %23
%25 = or %24, 32:i32
%26 = eq %25, 102:i32
pc %26 1:i1
infer %8


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4 = and %3, 8:i32
%5 = block 4
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13:i32 = var
%14 = phi %8, %12, %13
%15 = phi %6, %7, %14
%16 = block 2
%17 = add %15, -1:i32
%18 = add %15, -2:i32
%19 = phi %16, %17, %18
%20 = phi %5, %15, %19, %19, %19
%21 = or %20, 32:i32
%22 = eq %21, 102:i32
pc %22 1:i1
infer %4


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4 = and %3, 8:i32
%5:i32 = var
%6:i32 = var
%7 = phi %0, %5, %6, %5, %5
%8 = or %4, %7
%9 = block 4
%10 = block 2
%11:i32 = var
%12 = block 2
%13 = block 2
%14:i32 = var
%15:i32 = var
%16 = phi %13, %14, %15
%17:i32 = var
%18 = phi %12, %16, %17
%19 = phi %10, %11, %18
%20 = block 2
%21 = add %19, -1:i32
%22 = add %19, -2:i32
%23 = phi %20, %21, %22
%24 = phi %9, %19, %23, %23, %23
%25 = or %24, 32:i32
%26 = eq %25, 102:i32
pc %26 1:i1
infer %8


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4:i32 = var
%5:i32 = var
%6 = phi %0, %4, %5, %4, %4
%7 = add %6, 4:i32 (hasExternalUses)
%8 = ule %3, %7
%9 = block 4
%10 = block 2
%11:i32 = var
%12 = block 2
%13 = block 2
%14:i32 = var
%15:i32 = var
%16 = phi %13, %14, %15
%17:i32 = var
%18 = phi %12, %16, %17
%19 = phi %10, %11, %18
%20 = block 2
%21 = add %19, -1:i32
%22 = add %19, -2:i32
%23 = phi %20, %21, %22
%24 = phi %9, %19, %23, %23, %23
%25 = or %24, 32:i32
%26 = eq %25, 102:i32
pc %26 1:i1
infer %8


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4 = slt %3, 1:i32
%5 = block 4
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13:i32 = var
%14 = phi %8, %12, %13
%15 = phi %6, %7, %14
%16 = block 2
%17 = add %15, -1:i32
%18 = add %15, -2:i32
%19 = phi %16, %17, %18
%20 = phi %5, %15, %19, %19, %19
%21 = or %20, 32:i32
%22 = eq %21, 102:i32
pc %22 1:i1
infer %4


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4 = add %3, 256:i32
%5 = block 4
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13:i32 = var
%14 = phi %8, %12, %13
%15 = phi %6, %7, %14
%16 = block 2
%17 = add %15, -1:i32
%18 = add %15, -2:i32
%19 = phi %16, %17, %18
%20 = phi %5, %15, %19, %19, %19
%21 = or %20, 32:i32
%22 = eq %21, 102:i32
pc %22 1:i1
infer %4


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4 = add %3, 256:i32
%5:i32 = var
%6 = ult %4, %5
%7 = block 4
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15:i32 = var
%16 = phi %10, %14, %15
%17 = phi %8, %9, %16
%18 = block 2
%19 = add %17, -1:i32
%20 = add %17, -2:i32
%21 = phi %18, %19, %20
%22 = phi %7, %17, %21, %21, %21
%23 = or %22, 32:i32
%24 = eq %23, 102:i32
pc %24 1:i1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -1:i32
%2 = block 4
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4, %3, %3
%6 = add %5, 256:i32
%7:i32 = var
%8 = ult %6, %7
%9 = block 4
%10 = block 2
%11:i32 = var
%12 = block 2
%13 = block 2
%14:i32 = var
%15:i32 = var
%16 = phi %13, %14, %15
%17:i32 = var
%18 = phi %12, %16, %17
%19 = phi %10, %11, %18
%20 = block 2
%21 = add %19, -1:i32
%22 = add %19, -2:i32
%23 = phi %20, %21, %22
%24 = phi %9, %19, %23, %23, %23
%25 = or %24, 32:i32
%26 = eq %25, 102:i32
pc %8 1:i1
pc %26 1:i1
infer %1


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4 = add %3, 256:i32
%5 = add %3, 256:i32
%6:i32 = var
%7 = ult %5, %6
%8 = block 4
%9 = block 2
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = phi %12, %13, %14
%16:i32 = var
%17 = phi %11, %15, %16
%18 = phi %9, %10, %17
%19 = block 2
%20 = add %18, -1:i32
%21 = add %18, -2:i32
%22 = phi %19, %20, %21
%23 = phi %8, %18, %22, %22, %22
%24 = or %23, 32:i32
%25 = eq %24, 102:i32
pc %7 1:i1
pc %25 1:i1
infer %4


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4 = add %3, 256:i32
%5:i32 = var
%6 = add %5, -1:i32 (hasExternalUses)
%7 = ult %4, %6
%8 = add %3, 256:i32
%9:i32 = var
%10 = ult %8, %9
%11 = block 4
%12 = block 2
%13:i32 = var
%14 = block 2
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = phi %15, %16, %17
%19:i32 = var
%20 = phi %14, %18, %19
%21 = phi %12, %13, %20
%22 = block 2
%23 = add %21, -1:i32
%24 = add %21, -2:i32
%25 = phi %22, %23, %24
%26 = phi %11, %21, %25, %25, %25
%27 = or %26, 32:i32
%28 = eq %27, 102:i32
pc %10 1:i1
pc %28 1:i1
infer %7


; start LHS (in $39)
%0:i32 = var
%1 = slt %0, 9:i32
%2 = block 4
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10:i32 = var
%11 = phi %5, %9, %10
%12 = phi %3, %4, %11
%13 = block 2
%14 = add %12, -1:i32
%15 = add %12, -2:i32
%16 = phi %13, %14, %15
%17 = phi %2, %12, %16, %16, %16
%18 = or %17, 32:i32
%19 = eq %18, 102:i32
pc %19 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = slt %0, 9:i32
%2 = select %1, %0, 9:i32
%3 = block 4
%4 = block 2
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11:i32 = var
%12 = phi %6, %10, %11
%13 = phi %4, %5, %12
%14 = block 2
%15 = add %13, -1:i32
%16 = add %13, -2:i32
%17 = phi %14, %15, %16
%18 = phi %3, %13, %17, %17, %17
%19 = or %18, 32:i32
%20 = eq %19, 102:i32
pc %20 1:i1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -9:i32
%2 = block 4
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10:i32 = var
%11 = phi %5, %9, %10
%12 = phi %3, %4, %11
%13 = block 2
%14 = add %12, -1:i32
%15 = add %12, -2:i32
%16 = phi %13, %14, %15
%17 = phi %2, %12, %16, %16, %16
%18 = or %17, 32:i32
%19 = eq %18, 102:i32
pc %19 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 4
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10:i32 = var
%11 = phi %5, %9, %10
%12 = phi %3, %4, %11
%13 = block 2
%14 = add %12, -1:i32
%15 = add %12, -2:i32
%16 = phi %13, %14, %15
%17 = phi %2, %12, %16, %16, %16
%18 = or %17, 32:i32
%19 = eq %18, 102:i32
pc %19 1:i1
infer %1


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4:i32 = var
%5 = add %4, 4:i32 (hasExternalUses)
%6 = ule %3, %5
%7 = block 4
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15:i32 = var
%16 = phi %10, %14, %15
%17 = phi %8, %9, %16
%18 = block 2
%19 = add %17, -1:i32
%20 = add %17, -2:i32
%21 = phi %18, %19, %20
%22 = phi %7, %17, %21, %21, %21
%23 = or %22, 32:i32
%24 = eq %23, 102:i32
pc %24 1:i1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = slt 9:i32, %0
%2 = block 4
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10:i32 = var
%11 = phi %5, %9, %10
%12 = phi %3, %4, %11
%13 = block 2
%14 = add %12, -1:i32
%15 = add %12, -2:i32
%16 = phi %13, %14, %15
%17 = phi %2, %12, %16, %16, %16
%18 = or %17, 32:i32
%19 = eq %18, 102:i32
pc %19 1:i1
infer %1


; start LHS (in $39)
%0 = block 4
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = slt %8, 0:i32
%10 = select %9, 6:i32, %8 (hasExternalUses)
%11 = phi %3, %7, %10
%12 = phi %1, %2, %11
%13 = block 2
%14 = eq %12, 0:i32
%15:i32 = zext %14
%16 = add %12, %15 (hasExternalUses)
%17 = add %16, -1:i32
%18:i32 = var
%19 = block 2
%20 = block 3
%21:i32 = var
%22 = ashr %21, 2:i32
%23 = mul %22, 9:i32 (hasExternalUses)
%24:i32 = var
%25 = add %24, 1:i32 (hasExternalUses)
%26 = phi %20, 0:i32, %23, %25
%27 = block 4
%28:i32 = var
%29 = ashr %28, 2:i32
%30 = mul %29, 9:i32 (hasExternalUses)
%31:i32 = var
%32 = phi %27, %26, %26, %30, %31
%33 = phi %19, %26, %32
%34 = phi %1, %18, %33
%35 = sub %17, %34 (hasExternalUses)
%36:i32 = var
%37 = phi %13, %35, %36
%38:i32 = var
%39:i32 = var
%40 = phi %0, %12, %37, %38, %39
%41 = slt %40, 0:i32
%42:i32 = var
blockpc %19 0 %42 1:i1
%43:i32 = var
blockpc %19 1 %43 1:i1
infer %41


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 3
%8:i32 = var
%9 = add %8, -4:i32 (hasExternalUses)
%10 = phi %7, %8, %8, %9
%11 = phi %5, %6, %10
%12 = block 2
%13:i32 = var
%14 = add %13, -28:i32 (hasExternalUses)
%15:i32 = var
%16 = phi %12, %14, %15
%17 = slt %16, 0:i32
%18:i32 = var
%19 = sub %18, 7680:i32 (hasExternalUses)
%20 = add %19, 304:i32
%21 = add %19, 7216:i32
%22 = select %17, %20, %21 (hasExternalUses)
%23 = phi %4, %11, %22
%24 = block 3
%25:i32 = var
%26 = ne %25, 0:i32 (hasExternalUses)
%27:i32 = var
%28 = add %27, 4:i32
%29 = select %26, %27, %28 (hasExternalUses)
%30:i32 = var
%31 = phi %24, %29, %29, %30
%32 = phi %3, %23, %31
%33 = block 4
%34 = block 2
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %37
%39 = phi %34, %32, %38
%40 = phi %33, %32, %32, %39, %39
%41 = phi %2, %32, %40
%42 = phi %0, %1, %41
%43 = add %42, 4:i32
%44:i32 = var
blockpc %2 0 %44 1:i1
%45:i32 = var
blockpc %2 1 %45 1:i1
%46:i32 = var
blockpc %3 0 %46 1:i1
%47:i32 = var
blockpc %3 1 %47 1:i1
%48:i32 = var
blockpc %34 0 %48 1:i1
%49:i32 = var
blockpc %34 1 %49 1:i1
%50:i32 = var
blockpc %35 0 %50 1:i1
%51:i32 = var
blockpc %35 1 %51 1:i1
infer %43


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = phi %0, %1, 1:i32
%3 = ne %2, 0:i32
infer %3


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = phi %0, %1, 1:i32
%3 = ne %2, 0:i32
%4:i32 = var
%5:i32 = var
%6 = block 2
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = block 3
%12:i32 = var
%13 = add %12, -4:i32 (hasExternalUses)
%14 = phi %11, %12, %12, %13
%15 = phi %9, %10, %14
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = slt %19, 0:i32
%21:i32 = var
%22 = sub %21, 7680:i32 (hasExternalUses)
%23 = add %22, 304:i32
%24 = add %22, 7216:i32
%25 = select %20, %23, %24 (hasExternalUses)
%26 = phi %8, %15, %25
%27 = block 3
%28:i32 = var
%29 = ne %28, 0:i32 (hasExternalUses)
%30:i32 = var
%31:i32 = var
%32 = select %29, %30, %31 (hasExternalUses)
%33:i32 = var
%34 = phi %27, %32, %32, %33
%35 = phi %7, %26, %34
%36 = block 4
%37 = block 2
%38 = block 2
%39:i32 = var
%40:i32 = var
%41 = phi %38, %39, %40
%42 = phi %37, %35, %41
%43 = phi %36, %35, %35, %42, %42
%44 = phi %6, %35, %43
%45 = phi %0, %5, %44
%46 = add %45, 4:i32
%47 = select %3, %4, %46
%48:i32 = var
blockpc %6 0 %48 1:i1
%49:i32 = var
blockpc %6 1 %49 1:i1
%50:i32 = var
blockpc %7 0 %50 1:i1
%51:i32 = var
blockpc %7 1 %51 1:i1
%52:i32 = var
blockpc %37 0 %52 1:i1
%53:i32 = var
blockpc %37 1 %53 1:i1
%54:i32 = var
blockpc %38 0 %54 1:i1
%55:i32 = var
blockpc %38 1 %55 1:i1
infer %47


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = and %9, 8:i32
infer %10


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = sub %7, 7680:i32 (hasExternalUses)
%9 = phi %2, %6, %8
%10 = phi %0, %1, %9
%11 = add %10, 256:i32
infer %11


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = sub %7, 7680:i32 (hasExternalUses)
%9 = phi %2, %6, %8
%10 = phi %0, %1, %9
%11 = add %10, 256:i32
%12 = or %11, 8:i32
infer %12


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = sub %7, 7680:i32 (hasExternalUses)
%9 = phi %2, %6, %8
%10 = phi %0, %1, %9
%11 = add %10, 256:i32
infer %11


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = sub %7, 7680:i32 (hasExternalUses)
%9 = phi %2, %6, %8
%10 = phi %0, %1, %9
%11 = add %10, 256:i32
%12 = or %11, 9:i32
infer %12


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = eq %0, %1
infer %2


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = ne %0, %1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 256:i32
%2:i32 = var
%3:i32 = var
%4 = ne %2, %3
pc %4 1:i1
infer %1


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4:i32 = var
%5 = add %4, 256:i32
%6 = ule %3, %5
%7:i32 = var
%8 = eq %1, %7
blockpc %0 0 %8 1:i1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %0 1 %10 1:i1
%11:i32 = var
%12:i32 = var
%13 = ne %11, %12
pc %13 1:i1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3:i32 = var
%4 = ne %2, %3
pc %4 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 256:i32
%2:i32 = var
%3:i32 = var
%4 = ne %2, %3
pc %4 1:i1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 256:i32
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4 = ult %1, %3
%5:i32 = var
%6:i32 = var
%7 = ne %5, %6
pc %7 1:i1
infer %4


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = add %3, 1:i32
%5:i32 = var
%6 = eq %1, %5
blockpc %0 0 %6 1:i1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %0 1 %8 1:i1
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = slt %0, 1:i32
%2:i32 = var
%3 = eq %2, 0:i32
pc %3 1:i1
infer %1


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = add %8, -1:i32 (hasExternalUses)
%10 = add %7, 1:i32 (hasExternalUses)
%11 = phi %0, %7, %9, %10, %10
%12 = sub %3, %11
%13 = eq %5, %1
blockpc %4 0 %13 1:i1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %4 1 %15 1:i1
infer %12


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = add %8, -1:i32 (hasExternalUses)
%10 = add %7, 1:i32 (hasExternalUses)
%11 = phi %0, %7, %9, %10, %10
%12 = sub %3, %11 (hasExternalUses)
%13:i32 = var
%14:i32 = var
%15 = phi %0, %13, %14, %13, %13
%16 = slt %12, %15
%17 = eq %5, %1
blockpc %4 0 %17 1:i1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %4 1 %19 1:i1
infer %16


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = add %8, -1:i32 (hasExternalUses)
%10 = add %7, 1:i32 (hasExternalUses)
%11 = phi %0, %7, %9, %10, %10
%12 = sub %3, %11 (hasExternalUses)
%13:i32 = var
%14:i32 = var
%15 = phi %0, %13, %14, %13, %13
%16 = slt %12, %15
%17 = select %16, %12, %15
%18 = eq %5, %1
blockpc %4 0 %18 1:i1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %4 1 %20 1:i1
infer %17


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4:i32 = var
%5:i32 = var
%6 = phi %0, %4, %5, %4, %4
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11:i32 = var
%12 = add %11, -1:i32 (hasExternalUses)
%13 = add %10, 1:i32 (hasExternalUses)
%14 = phi %0, %10, %12, %13, %13
%15 = sub %6, %14 (hasExternalUses)
%16 = sub %3, %15
%17 = eq %8, %4
blockpc %7 0 %17 1:i1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %7 1 %19 1:i1
infer %16


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4 = add %3, 4:i32
infer %4


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4:i32 = var
%5:i32 = var
%6 = phi %0, %4, %5, %4, %4
%7 = add %6, 4:i32 (hasExternalUses)
%8 = ule %3, %7
infer %8


; start LHS (in $39)
%0 = block 4
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2, %1, %1
%4:i32 = var
%5:i32 = var
%6 = phi %0, %4, %5, %4, %4
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11:i32 = var
%12 = add %11, -1:i32 (hasExternalUses)
%13 = add %10, 1:i32 (hasExternalUses)
%14 = phi %0, %10, %12, %13, %13
%15 = sub %6, %14 (hasExternalUses)
%16 = sub %3, %15 (hasExternalUses)
%17 = slt -1:i32, %16
%18 = eq %8, %4
blockpc %7 0 %18 1:i1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %7 1 %20 1:i1
infer %17


; start LHS (in $39)
%0 = block 3
%1 = block 4
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = slt %9, 0:i32
%11 = select %10, 6:i32, %9 (hasExternalUses)
%12 = phi %4, %8, %11
%13 = phi %2, %3, %12
%14 = block 2
%15 = eq %13, 0:i32
%16:i32 = zext %15
%17 = add %13, %16 (hasExternalUses)
%18 = add %17, -1:i32
%19:i32 = var
%20 = block 2
%21 = block 3
%22:i32 = var
%23 = mul %22, 9:i32 (hasExternalUses)
%24:i32 = var
%25 = add %24, 1:i32 (hasExternalUses)
%26 = phi %21, 0:i32, %23, %25
%27 = block 4
%28:i32 = var
%29 = mul %28, 9:i32 (hasExternalUses)
%30:i32 = var
%31 = phi %27, %26, %26, %29, %30
%32 = phi %20, %26, %31
%33 = phi %2, %19, %32
%34 = sub %18, %33 (hasExternalUses)
%35:i32 = var
%36 = phi %14, %34, %35
%37:i32 = var
%38:i32 = var
%39 = phi %1, %13, %36, %37, %38
%40:i32 = var
%41 = phi %0, %39, %40, %40
%42 = add %41, 18:i32
%43:i32 = var
blockpc %20 0 %43 1:i1
%44:i32 = var
blockpc %20 1 %44 1:i1
infer %42


; start LHS (in $39)
%0 = block 3
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = sub %8, 7680:i32 (hasExternalUses)
%10 = add %9, 256:i32 (hasExternalUses)
%11 = phi %3, %7, %10
%12 = phi %1, %2, %11
%13 = block 4
%14:i32 = var
%15:i32 = var
%16 = phi %13, %14, %15, %14, %14
%17 = phi %0, %12, %16, %16
%18 = block 2
%19:i32 = var
%20 = block 2
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %4, %22, %23
%25 = phi %3, %24, 0:i32
%26:i32 = var
%27:i32 = var
%28 = phi %4, %26, %27
%29:i32 = var
%30 = phi %3, %28, %29
%31 = add %30, 45:i32
%32 = sdiv %31, 9:i32
%33 = add %32, 1:i32 (hasExternalUses)
%34 = phi %21, %25, %33
%35:i32 = var
%36 = phi %20, %34, %35
%37 = phi %1, %19, %36
%38:i32 = var
%39 = phi %18, %37, %38
%40:i32 = var
%41:i32 = var
%42 = phi %13, %40, %41, %40, %40
%43 = phi %0, %39, %42, %42
%44 = sub %17, %43
%45:i32 = var
blockpc %20 0 %45 1:i1
%46:i32 = var
blockpc %20 1 %46 1:i1
%47:i32 = var
blockpc %21 0 %47 1:i1
%48:i32 = var
blockpc %21 1 %48 1:i1
infer %44


; start LHS (in $39)
%0 = block 3
%1:i32 = var
%2 = add %1, -9:i32 (hasExternalUses)
%3 = block 4
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5, %4, %4
%7 = phi %0, %2, %2, %6
%8 = add %7, 9:i32
infer %8


; start LHS (in $39)
%0 = block 3
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = phi %6, %10, %1
%12 = phi %4, %5, %11
%13 = block 4
%14:i32 = var
%15:i32 = var
%16 = phi %13, %14, %15, %14, %14
%17 = phi %3, %12, %16, %16
%18 = block 3
%19:i32 = var
%20 = block 4
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22, %21, %21
%24 = phi %18, %19, %19, %23
%25 = phi %2, %17, %24
%26 = phi %0, %1, %1, %25
%27 = xor %26, 8192:i32
infer %27


; start LHS (in $39)
%0 = block 3
%1:i32 = var
%2 = sub %1, 7680:i32 (hasExternalUses)
%3 = block 2
%4 = block 3
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = phi %7, %11, %2
%13 = phi %5, %6, %12
%14 = block 4
%15:i32 = var
%16:i32 = var
%17 = phi %14, %15, %16, %15, %15
%18 = phi %4, %13, %17, %17
%19 = block 3
%20:i32 = var
%21 = block 4
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23, %22, %22
%25 = phi %19, %20, %20, %24
%26 = phi %3, %18, %25
%27 = phi %0, %2, %2, %26
%28 = add %27, 7680:i32
infer %28


; start LHS (in $39)
%0 = block 3
%1 = block 3
%2:i32 = var
%3 = and %2, 1:i32 (hasExternalUses)
%4 = phi %1, 1:i32, %3, 1:i32
%5 = add %4, 3:i32 (hasExternalUses)
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = sub %8, 7680:i32 (hasExternalUses)
%10 = add %9, 256:i32 (hasExternalUses)
%11 = add %7, %10
%12 = add %11, 2:i32
%13 = block 2
%14:i32 = var
%15 = add %9, 255:i32 (hasExternalUses)
%16 = phi %13, %14, %15
%17 = add %16, -2:i32 (hasExternalUses)
%18 = sub %12, %17 (hasExternalUses)
%19 = add %9, 256:i32
%20 = sub %10, %19
%21 = sub %20, %17
%22 = block 3
%23:i32 = var
%24 = add %23, 1:i32 (hasExternalUses)
%25 = add %23, 2:i32 (hasExternalUses)
%26 = phi %22, %24, %24, %25
%27 = add %21, %26 (hasExternalUses)
%28 = phi %6, %18, %27
%29 = or %4, 2:i32 (hasExternalUses)
%30 = add %28, %29 (hasExternalUses)
%31 = block 2
%32 = block 3
%33:i32 = var
%34 = block 4
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %36, %35, %35
%38 = phi %32, %33, %37, %37
%39 = block 3
%40:i32 = var
%41 = block 4
%42:i32 = var
%43:i32 = var
%44 = phi %41, %42, %43, %42, %42
%45 = phi %39, %40, %40, %44
%46 = phi %31, %38, %45
%47 = phi %0, %5, %30, %46
%48:i32 = var
%49 = block 2
%50:i32 = var
%51 = block 2
%52 = block 2
%53:i32 = var
%54:i32 = var
%55 = phi %52, %53, %54
%56 = phi %51, %55, %48
%57 = phi %49, %50, %56
%58:i32 = var
%59:i32 = var
%60 = phi %34, %58, %59, %58, %58
%61 = phi %32, %57, %60, %60
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65 = phi %41, %63, %64, %63, %63
%66 = phi %39, %62, %62, %65
%67 = phi %31, %61, %66
%68 = phi %0, %48, %48, %67
%69 = slt %47, %68
%70:i32 = var
blockpc %13 0 %70 1:i1
%71:i32 = var
blockpc %13 1 %71 1:i1
infer %69


; start LHS (in $39)
%0 = block 3
%1 = block 3
%2:i32 = var
%3 = and %2, 1:i32 (hasExternalUses)
%4 = phi %1, 1:i32, %3, 1:i32
%5 = add %4, 3:i32 (hasExternalUses)
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = add %8, 256:i32 (hasExternalUses)
%10 = add %7, %9
%11 = add %10, 2:i32
%12 = block 2
%13:i32 = var
%14 = add %8, 255:i32 (hasExternalUses)
%15 = phi %12, %13, %14
%16 = add %15, -2:i32 (hasExternalUses)
%17 = sub %11, %16 (hasExternalUses)
%18 = add %8, 256:i32
%19 = sub %9, %18
%20 = sub %19, %16
%21 = block 3
%22:i32 = var
%23 = add %22, 1:i32 (hasExternalUses)
%24 = add %22, 2:i32 (hasExternalUses)
%25 = phi %21, %23, %23, %24
%26 = add %20, %25 (hasExternalUses)
%27 = phi %6, %17, %26
%28 = or %4, 2:i32 (hasExternalUses)
%29 = add %27, %28 (hasExternalUses)
%30 = block 2
%31 = block 3
%32:i32 = var
%33 = block 4
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %35, %34, %34
%37 = phi %31, %32, %36, %36
%38 = block 3
%39:i32 = var
%40 = block 4
%41:i32 = var
%42:i32 = var
%43 = phi %40, %41, %42, %41, %41
%44 = phi %38, %39, %39, %43
%45 = phi %30, %37, %44
%46 = phi %0, %5, %29, %45
%47:i32 = var
%48 = block 2
%49:i32 = var
%50 = block 2
%51 = block 2
%52:i32 = var
%53:i32 = var
%54 = phi %51, %52, %53
%55 = phi %50, %54, %47
%56 = phi %48, %49, %55
%57:i32 = var
%58:i32 = var
%59 = phi %33, %57, %58, %57, %57
%60 = phi %31, %56, %59, %59
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64 = phi %40, %62, %63, %62, %62
%65 = phi %38, %61, %61, %64
%66 = phi %30, %60, %65
%67 = phi %0, %47, %47, %66
%68 = slt %46, %67
%69 = select %68, %67, %46
%70:i32 = var
blockpc %12 0 %70 1:i1
%71:i32 = var
blockpc %12 1 %71 1:i1
infer %69


; function: $40

; start LHS (in $40)
%0:i32 = var
%1 = ne %0, 0:i32
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = and %0, 3:i32
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = and %0, 3:i32
%2 = eq %1, 0:i32
infer %2


; start LHS (in $40)
%0:i32 = var
%1 = and %0, 255:i32
infer %1


; start LHS (in $40)
%0:i32 = var
%1:i32 = var
%2 = and %1, 255:i32
%3 = eq %0, %2
infer %3


; start LHS (in $40)
%0:i32 = var
%1 = ne %0, 1:i32
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, -1:i32
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = eq %0, 1:i32
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = and %1, 3:i32
infer %2


; start LHS (in $40)
%0 = block 3
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %1, %2
%4 = and %3, 255:i32
infer %4


; start LHS (in $40)
%0:i32 = var
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5 = and %4, 255:i32
%6 = eq %0, %5
infer %6


; start LHS (in $40)
%0 = block 3
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3, %1
%5 = ule 4:i32, %4
infer %5


; start LHS (in $40)
%0 = block 3
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %1, %2
%4 = and %3, 255:i32
%5:i32 = var
%6 = add %5, -1:i32
%7:i32 = var
%8 = phi %0, %6, %7, %5
%9 = ule 4:i32, %8
pc %9 1:i1
infer %4


; start LHS (in $40)
%0 = block 3
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %1, %2
%4 = and %3, 255:i32
%5 = mul %4, 16843009:i32
%6:i32 = var
%7 = add %6, -1:i32
%8:i32 = var
%9 = phi %0, %7, %8, %6
%10 = ule 4:i32, %9
pc %10 1:i1
infer %5


; start LHS (in $40)
%0:i32 = var
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5 = and %4, 255:i32
%6 = mul %5, 16843009:i32
%7 = xor %0, %6
%8:i32 = var
%9 = add %8, -1:i32
%10:i32 = var
%11 = phi %1, %9, %10, %8
%12 = ule 4:i32, %11
pc %12 1:i1
infer %7


; start LHS (in $40)
%0:i32 = var
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5 = and %4, 255:i32
%6 = mul %5, 16843009:i32
%7 = xor %0, %6 (hasExternalUses)
%8 = xor %7, -1:i32
%9:i32 = var
%10 = add %9, -1:i32
%11:i32 = var
%12 = phi %1, %10, %11, %9
%13 = ule 4:i32, %12
pc %13 1:i1
infer %8


; start LHS (in $40)
%0:i32 = var
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5 = and %4, 255:i32
%6 = mul %5, 16843009:i32
%7 = xor %0, %6 (hasExternalUses)
%8 = add %7, -16843009:i32
%9:i32 = var
%10 = add %9, -1:i32
%11:i32 = var
%12 = phi %1, %10, %11, %9
%13 = ule 4:i32, %12
pc %13 1:i1
infer %8


; start LHS (in $40)
%0:i32 = var
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5 = and %4, 255:i32
%6 = mul %5, 16843009:i32
%7 = xor %0, %6
%8 = xor %7, -1:i32
%9 = add %7, -16843009:i32
%10 = and %8, %9
%11:i32 = var
%12 = add %11, -1:i32
%13:i32 = var
%14 = phi %1, %12, %13, %11
%15 = ule 4:i32, %14
pc %15 1:i1
infer %10


; start LHS (in $40)
%0:i32 = var
%1 = block 3
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %2, %3
%5 = and %4, 255:i32
%6 = mul %5, 16843009:i32
%7 = xor %0, %6
%8 = xor %7, -1:i32
%9 = add %7, -16843009:i32
%10 = and %8, %9
%11 = and %10, -2139062144:i32
%12:i32 = var
%13 = add %12, -1:i32
%14:i32 = var
%15 = phi %1, %13, %14, %12
%16 = ule 4:i32, %15
pc %16 1:i1
infer %11


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 3
%3:i32 = var
%4 = add %3, -1:i32
%5:i32 = var
%6 = phi %2, %4, %5, %3
%7 = ule 4:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, -4:i32
%2 = block 3
%3:i32 = var
%4 = add %3, -1:i32
%5:i32 = var
%6 = phi %2, %4, %5, %3
%7 = ule 4:i32, %6
pc %7 1:i1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, -4:i32 (hasExternalUses)
%2 = ult 3:i32, %1
%3 = block 3
%4:i32 = var
%5 = add %4, -1:i32
%6:i32 = var
%7 = phi %3, %5, %6, %4
%8 = ule 4:i32, %7
pc %8 1:i1
infer %2


; start LHS (in $40)
%0 = block 2
%1 = block 3
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %1, %3, %4, %2
%6:i32 = var
%7 = add %6, -4:i32 (hasExternalUses)
%8 = phi %0, %5, %7
%9 = eq %8, 0:i32
%10 = ule 4:i32, %5
blockpc %0 0 %10 1:i1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %0 1 %12 1:i1
infer %9


; start LHS (in $40)
%0 = block 2
%1:i32 = var
%2 = block 3
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %3, %4
%6 = phi %0, %1, %5
%7 = and %6, 255:i32
infer %7


; start LHS (in $40)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 3
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %4, %5
%7 = phi %1, %2, %6
%8 = and %7, 255:i32
%9 = eq %0, %8
infer %9


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, -1:i32
infer %1


; function: $41

; start LHS (in $41)
%0:i64 = var
%1 = eq %0, 0:i64
infer %1


; start LHS (in $41)
%0:i64 = var
%1 = eq %0, 0:i64
%2:i32 = zext %1
%3 = eq %2, 0:i32
infer %3


; start LHS (in $41)
%0:i32 = var
%1 = add %0, -1:i32
%2:i64 = var
%3 = eq %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1:i1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = and %0, 7:i32
%2:i64 = var
%3 = eq %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1:i1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = and %0, 7:i32
%2 = or %1, 48:i32
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1:i1
infer %2


; start LHS (in $41)
%0:i64 = var
%1 = lshr %0, 3:i64
%2:i64 = var
%3 = eq %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1:i1
infer %1


; start LHS (in $41)
%0:i64 = var
%1 = lshr %0, 3:i64 (hasExternalUses)
%2 = ne %1, 0:i64
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1:i1
infer %2


; function: $42

; start LHS (in $42)
%0:i64 = var
%1 = eq %0, 0:i64
infer %1


; start LHS (in $42)
%0:i64 = var
%1 = eq %0, 0:i64
%2:i32 = zext %1
%3 = eq %2, 0:i32
infer %3


; start LHS (in $42)
%0:i32 = var
%1 = add %0, -1:i32
%2:i64 = var
%3 = eq %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1:i1
infer %1


; start LHS (in $42)
%0:i32 = var
%1 = and %0, 15:i32
%2:i64 = var
%3 = eq %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1:i1
infer %1


; start LHS (in $42)
%0:i32 = var
%1 = and %0, 15:i32
%2 = add %1, 3392:i32
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1:i1
infer %2


; start LHS (in $42)
%0:i32 = var
%1:i32 = var
%2 = or %0, %1
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1:i1
infer %2


; start LHS (in $42)
%0:i64 = var
%1 = lshr %0, 4:i64
%2:i64 = var
%3 = eq %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1:i1
infer %1


; start LHS (in $42)
%0:i64 = var
%1 = lshr %0, 4:i64 (hasExternalUses)
%2 = ne %1, 0:i64
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1:i1
infer %2


; function: $43

; start LHS (in $43)
%0:i32 = var
%1 = sub %0, 32:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = slt %0, 2:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = add %0, -48:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = add %0, -48:i32 (hasExternalUses)
%2 = ult 5:i32, %1
infer %2


; start LHS (in $43)
%0:i32 = var
%1 = add %0, -48:i32 (hasExternalUses)
%2 = sub %1, 1:i32
infer %2


; start LHS (in $43)
%0:i32 = var
%1 = urem %0, 120:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = urem %0, 255:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = urem %0, 120:i32
%2 = urem %0, 255:i32
%3 = add %1, %2
infer %3


; start LHS (in $43)
%0:i32 = var
%1 = udiv %0, 15:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = udiv %0, 15:i32
%2 = mul %1, 30:i32
infer %2


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = udiv %1, 15:i32
%3 = mul %2, 30:i32
%4 = sub %0, %3
infer %4


; start LHS (in $43)
%0:i32 = var
%1 = udiv %0, 10:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = udiv %0, 10:i32 (hasExternalUses)
%2 = mul %1, 10:i32
infer %2


; start LHS (in $43)
%0:i32 = var
%1 = udiv %0, 10:i32 (hasExternalUses)
%2 = mul %1, 10:i32 (hasExternalUses)
%3 = sub %0, %2
infer %3


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = udiv %1, 10:i32 (hasExternalUses)
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = sub %0, %3
infer %4


; start LHS (in $43)
%0:i32 = var
%1 = udiv %0, 10:i32 (hasExternalUses)
%2 = mul %1, 20:i32
infer %2


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = udiv %1, 10:i32 (hasExternalUses)
%3 = mul %2, 20:i32
%4 = sub %0, %3
infer %4


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = udiv %1, 15:i32
%3 = mul %2, 30:i32
%4 = sub %0, %3
%5:i32 = var
%6 = add %4, %5
infer %6


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = udiv %1, 15:i32
%3 = mul %2, 30:i32
%4 = sub %0, %3
%5:i32 = var
%6 = add %4, %5
%7 = and %6, 1023:i32
infer %7


; start LHS (in $43)
%0:i32 = var
%1 = and %0, 1023:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = udiv %1, 15:i32
%3 = mul %2, 30:i32
%4 = sub %0, %3
%5:i32 = var
%6 = add %4, %5
%7 = and %6, 1023:i32
%8 = and %5, 1023:i32
%9 = add %7, %8
infer %9


; start LHS (in $43)
%0:i32 = var
%1 = and %0, 1022:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = udiv %1, 15:i32
%3 = mul %2, 30:i32
%4 = sub %0, %3
%5:i32 = var
%6 = add %4, %5
%7 = and %6, 1023:i32
%8 = and %5, 1023:i32
%9 = add %7, %8
%10:i32 = var
%11 = and %10, 1022:i32
%12 = add %9, %11
infer %12


; start LHS (in $43)
%0:i32 = var
%1 = udiv %0, 10:i32 (hasExternalUses)
%2 = mul %1, 10:i32 (hasExternalUses)
%3 = sub %0, %2
%4:i32 = var
%5 = add %3, %4
infer %5


; start LHS (in $43)
%0:i32 = var
%1 = udiv %0, 10:i32 (hasExternalUses)
%2 = mul %1, 10:i32 (hasExternalUses)
%3 = sub %0, %2
%4:i32 = var
%5 = add %3, %4
%6 = and %5, 1023:i32
infer %6


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = udiv %1, 15:i32
%3 = mul %2, 30:i32
%4 = sub %0, %3
%5:i32 = var
%6 = add %4, %5
%7 = and %6, 1023:i32
%8 = and %5, 1023:i32
%9 = add %7, %8
%10:i32 = var
%11 = and %10, 1022:i32
%12 = add %9, %11
%13 = udiv %1, 10:i32 (hasExternalUses)
%14 = mul %13, 10:i32 (hasExternalUses)
%15 = sub %1, %14
%16 = add %15, %5
%17 = and %16, 1023:i32
%18 = add %12, %17
infer %18


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = udiv %1, 10:i32 (hasExternalUses)
%3 = mul %2, 20:i32
%4 = sub %0, %3
%5:i32 = var
%6 = add %4, %5
infer %6


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = udiv %1, 10:i32 (hasExternalUses)
%3 = mul %2, 20:i32
%4 = sub %0, %3
%5:i32 = var
%6 = add %4, %5
%7 = and %6, 1022:i32
infer %7


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = udiv %1, 15:i32
%3 = mul %2, 30:i32
%4 = sub %0, %3
%5:i32 = var
%6 = add %4, %5
%7 = and %6, 1023:i32
%8 = and %5, 1023:i32
%9 = add %7, %8
%10:i32 = var
%11 = and %10, 1022:i32
%12 = add %9, %11
%13 = udiv %1, 10:i32
%14 = mul %13, 10:i32 (hasExternalUses)
%15 = sub %1, %14
%16 = add %15, %5
%17 = and %16, 1023:i32
%18 = add %12, %17
%19:i32 = var
%20 = mul %13, 20:i32
%21 = sub %19, %20
%22 = add %21, %10
%23 = and %22, 1022:i32
%24 = add %18, %23
infer %24


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = udiv %1, 10:i32 (hasExternalUses)
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = sub %0, %3
%5:i32 = var
%6 = add %4, %5
infer %6


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = udiv %1, 10:i32 (hasExternalUses)
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = sub %0, %3
%5:i32 = var
%6 = add %4, %5
%7 = and %6, 1023:i32
infer %7


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = mul %1, 30:i32
%3 = sub %0, %2
%4:i32 = var
%5 = add %3, %4
%6 = and %5, 1023:i32
%7 = and %4, 1023:i32
%8 = add %6, %7
%9:i32 = var
%10 = and %9, 1022:i32
%11 = add %8, %10
%12:i32 = var
%13 = udiv %12, 10:i32
%14 = mul %13, 10:i32
%15 = sub %12, %14
%16 = add %15, %4
%17 = and %16, 1023:i32
%18 = add %11, %17
%19:i32 = var
%20 = mul %13, 20:i32
%21 = sub %19, %20
%22 = add %21, %9
%23 = and %22, 1022:i32
%24 = add %18, %23
%25:i32 = var
%26 = sub %25, %14
%27 = add %26, %4
%28 = and %27, 1023:i32
%29 = add %24, %28
infer %29


; start LHS (in $43)
%0:i32 = var
%1 = and %0, 65535:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = and %0, 65535:i32 (hasExternalUses)
%2 = urem %1, 255:i32
infer %2


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3:i32 = var
%4 = add %2, %3
%5 = and %4, 1023:i32
%6 = and %3, 1023:i32
%7 = add %5, %6
%8:i32 = var
%9 = and %8, 1022:i32
%10 = add %7, %9
%11:i32 = var
%12 = udiv %11, 10:i32
%13 = mul %12, 10:i32
%14 = sub %11, %13
%15 = add %14, %3
%16 = and %15, 1023:i32
%17 = add %10, %16
%18:i32 = var
%19 = mul %12, 20:i32
%20 = sub %18, %19
%21 = add %20, %8
%22 = and %21, 1022:i32
%23 = add %17, %22
%24:i32 = var
%25 = sub %24, %13
%26 = add %25, %3
%27 = and %26, 1023:i32
%28 = add %23, %27
%29 = and %3, 65535:i32 (hasExternalUses)
%30 = urem %29, 255:i32
%31 = add %28, %30
infer %31


; start LHS (in $43)
%0:i32 = var
%1 = and %0, 65535:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = and %0, 65535:i32
%2 = udiv %1, 255:i32
infer %2


; start LHS (in $43)
%0:i32 = var
%1 = and %0, 65535:i32
%2 = udiv %1, 255:i32
%3 = mul %2, 255:i32
infer %3


; start LHS (in $43)
%0:i32 = var
%1 = and %0, 65535:i32
%2 = udiv %1, 255:i32
%3 = mul %2, 255:i32
%4 = sub %0, %3
infer %4


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = and %1, 65535:i32
%3 = udiv %2, 255:i32
%4 = mul %3, 255:i32
%5 = sub %1, %4
%6 = add %0, %5
infer %6


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = and %1, 65535:i32
%3 = udiv %2, 255:i32
%4 = mul %3, 255:i32
%5 = sub %1, %4
%6 = add %0, %5
%7 = and %6, 1023:i32
infer %7


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3 = and %2, 1023:i32
%4 = and %1, 1023:i32
%5 = add %3, %4
%6:i32 = var
%7 = and %6, 1022:i32
%8 = add %5, %7
%9:i32 = var
%10:i32 = var
%11 = mul %10, 10:i32
%12 = sub %9, %11
%13 = add %12, %1
%14 = and %13, 1023:i32
%15 = add %8, %14
%16:i32 = var
%17 = mul %10, 20:i32
%18 = sub %16, %17
%19 = add %18, %6
%20 = and %19, 1022:i32
%21 = add %15, %20
%22:i32 = var
%23 = sub %22, %11
%24 = add %23, %1
%25 = and %24, 1023:i32
%26 = add %21, %25
%27 = and %1, 65535:i32 (hasExternalUses)
%28 = urem %27, 255:i32
%29 = add %26, %28
%30:i32 = var
%31 = add %29, %30
infer %31


; start LHS (in $43)
%0:i32 = var
%1 = and %0, 65535:i32 (hasExternalUses)
%2 = urem %1, 15:i32
infer %2


; start LHS (in $43)
%0:i32 = var
%1 = urem %0, 120:i32
%2 = urem %0, 255:i32
%3 = add %1, %2
%4:i32 = var
%5 = and %4, 65535:i32 (hasExternalUses)
%6 = urem %5, 15:i32
%7 = add %3, %6
infer %7


; start LHS (in $43)
%0:i32 = var
%1 = and %0, 65535:i32 (hasExternalUses)
%2 = urem %1, 120:i32
infer %2


; start LHS (in $43)
%0:i32 = var
%1 = urem %0, 120:i32
%2 = urem %0, 255:i32
%3 = add %1, %2
%4:i32 = var
%5 = and %4, 65535:i32 (hasExternalUses)
%6 = urem %5, 15:i32
%7 = add %3, %6
%8 = urem %5, 120:i32
%9 = add %7, %8
infer %9


; start LHS (in $43)
%0:i32 = var
%1 = urem %0, 120:i32
%2 = urem %0, 255:i32
%3 = add %1, %2
%4:i32 = var
%5 = and %4, 65535:i32 (hasExternalUses)
%6 = urem %5, 15:i32
%7 = add %3, %6
%8 = urem %5, 120:i32
%9 = add %7, %8
%10 = shl %9, 1:i32
infer %10


; start LHS (in $43)
%0:i32 = var
%1 = and %0, 1023:i32
%2:i32 = var
%3 = and %2, 1023:i32
%4 = add %1, %3
%5:i32 = var
%6 = and %5, 1022:i32
%7 = add %4, %6
%8:i32 = var
%9:i32 = var
%10 = sub %8, %9
%11 = add %10, %2
%12 = and %11, 1023:i32
%13 = add %7, %12
%14:i32 = var
%15:i32 = var
%16 = mul %15, 20:i32
%17 = sub %14, %16
%18 = add %17, %5
%19 = and %18, 1022:i32
%20 = add %13, %19
%21:i32 = var
%22 = sub %21, %9
%23 = add %22, %2
%24 = and %23, 1023:i32
%25 = add %20, %24
%26 = and %2, 65535:i32 (hasExternalUses)
%27 = urem %26, 255:i32
%28 = add %25, %27
%29:i32 = var
%30:i32 = var
%31 = add %29, %30
%32 = and %31, 1023:i32
%33 = add %28, %32
%34:i32 = var
%35 = add %33, %34
infer %35


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3:i32 = var
%4 = and %3, 1022:i32
%5 = add %2, %4
%6:i32 = var
%7:i32 = var
%8 = add %6, %7
%9 = and %8, 1023:i32
%10 = add %5, %9
%11:i32 = var
%12:i32 = var
%13 = sub %11, %12
%14 = add %13, %3
%15 = and %14, 1022:i32
%16 = add %10, %15
%17:i32 = var
%18:i32 = var
%19 = mul %18, 10:i32 (hasExternalUses)
%20 = sub %17, %19
%21 = add %20, %7
%22 = and %21, 1023:i32
%23 = add %16, %22
%24 = and %7, 65535:i32 (hasExternalUses)
%25 = urem %24, 255:i32
%26 = add %23, %25
%27:i32 = var
%28:i32 = var
%29 = and %28, 65535:i32
%30 = udiv %29, 255:i32
%31 = mul %30, 255:i32
%32 = sub %28, %31
%33 = add %27, %32
%34 = and %33, 1023:i32
%35 = add %26, %34
%36:i32 = var
%37 = add %35, %36
%38 = srem %37, 100:i32
infer %38


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3:i32 = var
%4 = and %3, 1023:i32
%5 = add %2, %4
%6:i32 = var
%7:i32 = var
%8 = add %6, %7
%9 = and %8, 1022:i32
%10 = add %5, %9
%11:i32 = var
%12:i32 = var
%13 = sub %11, %12
%14:i32 = var
%15 = add %13, %14
%16 = and %15, 1023:i32
%17 = add %10, %16
%18 = and %14, 65535:i32 (hasExternalUses)
%19 = urem %18, 255:i32
%20 = add %17, %19
%21:i32 = var
%22:i32 = var
%23:i32 = var
%24 = udiv %23, 255:i32
%25 = mul %24, 255:i32
%26 = sub %22, %25
%27 = add %21, %26
%28 = and %27, 1023:i32
%29 = add %20, %28
%30:i32 = var
%31 = add %29, %30
%32 = srem %31, 100:i32
%33:i32 = var
%34 = add %32, %33
infer %34


; start LHS (in $43)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3:i32 = var
%4 = and %3, 1022:i32
%5 = add %2, %4
%6:i32 = var
%7:i32 = var
%8 = add %6, %7
%9 = and %8, 1023:i32
%10 = add %5, %9
%11 = and %7, 65535:i32
%12 = urem %11, 255:i32
%13 = add %10, %12
%14:i32 = var
%15:i32 = var
%16:i32 = var
%17 = mul %16, 255:i32
%18 = sub %15, %17
%19 = add %14, %18
%20 = and %19, 1023:i32
%21 = add %13, %20
%22:i32 = var
%23 = urem %22, 120:i32
%24 = urem %22, 255:i32
%25 = add %23, %24
%26 = urem %11, 15:i32
%27 = add %25, %26
%28 = urem %11, 120:i32
%29 = add %27, %28
%30 = shl %29, 1:i32
%31 = add %21, %30
%32 = srem %31, 100:i32
%33:i32 = var
%34 = add %32, %33
%35 = srem %34, 10240:i32
infer %35


; start LHS (in $43)
%0:i32 = var
%1 = add %0, 2:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = ne %1, 50000:i32
infer %2


; start LHS (in $43)
%0:i32 = var
%1 = add %0, 2:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = add %0, 3:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = block 5
%3 = phi %2, 75:i32, 625:i32, 1250:i32, 6250:i32, 12500:i32
%4 = ne %1, %3
infer %4


; start LHS (in $43)
%0:i32 = var
%1 = sub %0, 32:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; start LHS (in $43)
%0:i32 = var
%1 = sub %0, 32:i32 (hasExternalUses)
%2 = add %1, 32:i32
infer %2

