
; function: $0

; start LHS (in $0)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
infer %2


; start LHS (in $0)
%0:i32 = var
%1 = add %0, 15:i32
infer %1


; start LHS (in $0)
%0:i32 = var
%1 = add %0, 15:i32
%2 = and %1, -16:i32
infer %2


; start LHS (in $0)
%0:i32 = var
%1:i32 = var
%2 = sle %0, %1
infer %2


; function: $1

; function: $2

; function: $3

; function: $4

; start LHS (in $4)
%0:i32 = var
%1 = add %0, 48:i32
infer %1


; start LHS (in $4)
%0:i32 = var
%1:i32 = var
%2 = sle %0, %1
infer %2


; start LHS (in $4)
%0:i32 = var
%1 = add %0, 24:i32
infer %1


; start LHS (in $4)
%0:i32 = var
%1 = add %0, 24:i32 (hasExternalUses)
%2 = add %1, 8:i32
infer %2


; start LHS (in $4)
%0 = add 1900:i32, 8:i32
infer %0


; start LHS (in $4)
%0:i32 = var
%1 = add %0, 24:i32 (hasExternalUses)
%2 = add %1, 12:i32
infer %2


; start LHS (in $4)
%0 = add 1900:i32, 12:i32
infer %0


; start LHS (in $4)
%0:i32 = var
%1 = add %0, 8:i32
infer %1


; start LHS (in $4)
%0:i32 = var
%1 = add %0, 16:i32
infer %1


; function: $5

; start LHS (in $5)
%0:i32 = var
%1 = add %0, 32:i32
infer %1


; start LHS (in $5)
%0:i32 = var
%1:i32 = var
%2 = sle %0, %1
infer %2


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 16:i32
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 28:i32
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 20:i32
infer %1


; start LHS (in $5)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
infer %2


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 8:i32
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 12:i32
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 60:i32
infer %1


; start LHS (in $5)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1 (hasExternalUses)
%3:i32 = var
%4 = add %2, %3
infer %4


; start LHS (in $5)
%0:i32 = var
%1 = shl %0, 16:i32
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = shl %0, 16:i32
%2 = ashr %1, 16:i32
infer %2


; start LHS (in $5)
%0:i32 = var
%1 = shl %0, 16:i32
%2 = ashr %1, 16:i32
%3 = eq %2, 0:i32
infer %3


; start LHS (in $5)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, %2, -1:i32
%4 = eq %0, %3
%5:i32 = var
%6 = shl %5, 16:i32
%7 = ashr %6, 16:i32
%8 = eq %7, 0:i32
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
infer %4


; start LHS (in $5)
%0 = block 2
%1:i32 = var
%2 = phi %0, %1, -1:i32
%3 = slt %2, 0:i32
%4:i32 = var
%5 = shl %4, 16:i32
%6 = ashr %5, 16:i32
%7 = eq %6, 0:i32
blockpc %0 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %0 1 %9 1
infer %3


; start LHS (in $5)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, %2, -1:i32
%4 = sub %0, %3
%5:i32 = var
%6 = shl %5, 16:i32
%7 = ashr %6, 16:i32
%8 = eq %7, 0:i32
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
infer %4


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 4:i32
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, %2, -1:i32
%4 = ult %0, %3
%5:i32 = var
%6 = shl %5, 16:i32
%7 = ashr %6, 16:i32
%8 = eq %7, 0:i32
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
infer %4


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 8:i32
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, %2, -1:i32
%4 = ult %0, %3 (hasExternalUses)
%5:i32 = zext %4
%6 = shl %5, 31:i32
%7:i32 = var
%8 = shl %7, 16:i32
%9 = ashr %8, 16:i32
%10 = eq %9, 0:i32
blockpc %1 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %1 1 %12 1
infer %6


; start LHS (in $5)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, %2, -1:i32
%4 = ult %0, %3 (hasExternalUses)
%5:i32 = zext %4
%6 = shl %5, 31:i32
%7 = ashr %6, 31:i32
%8:i32 = var
%9 = shl %8, 16:i32
%10 = ashr %9, 16:i32
%11 = eq %10, 0:i32
blockpc %1 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %1 1 %13 1
infer %7


; start LHS (in $5)
%0:i32 = var
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, -1:i32
%5 = ult %1, %4 (hasExternalUses)
%6:i32 = zext %5
%7 = shl %6, 31:i32
%8 = ashr %7, 31:i32
%9 = add %0, %8
%10:i32 = var
%11 = shl %10, 16:i32
%12 = ashr %11, 16:i32
%13 = eq %12, 0:i32
blockpc %2 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %2 1 %15 1
infer %9


; start LHS (in $5)
%0 = block 2
%1:i32 = var
%2 = phi %0, %1, -1:i32
%3 = block 2
%4:i32 = var
%5 = phi %3, %4, 0:i32
%6 = sub %2, %5
%7:i32 = var
%8 = shl %7, 16:i32
%9 = ashr %8, 16:i32
%10 = eq %9, 0:i32
blockpc %0 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %0 1 %12 1
%13 = ult %4, %2
blockpc %3 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %3 1 %15 1
infer %6


; start LHS (in $5)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, %2, -1:i32
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = sub %3, %6 (hasExternalUses)
%8 = add %0, %7
%9:i32 = var
%10 = shl %9, 16:i32
%11 = ashr %10, 16:i32
%12 = eq %11, 0:i32
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15 = ult %5, %3
blockpc %4 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %4 1 %17 1
infer %8


; start LHS (in $5)
%0 = block 2
%1:i32 = var
%2 = add %1, 8:i32 (hasExternalUses)
%3 = phi %0, %2, %1
%4 = add %3, 4:i32
%5:i32 = var
%6 = block 2
%7:i32 = var
%8 = shl %7, 16:i32
%9 = ashr %8, 16:i32
%10 = eq %9, 0:i32
blockpc %6 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %6 1 %12 1
%13:i32 = var
%14 = phi %6, %13, -1:i32
%15 = ult %5, %14
blockpc %0 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %0 1 %17 1
infer %4


; start LHS (in $5)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, %2, -1:i32
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = sub %3, %6 (hasExternalUses)
%8 = sub %0, %7
%9:i32 = var
%10 = shl %9, 16:i32
%11 = ashr %10, 16:i32
%12 = eq %11, 0:i32
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15 = ult %5, %3
blockpc %4 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %4 1 %17 1
infer %8


; start LHS (in $5)
%0 = block 2
%1 = phi %0, 6:i32, 8:i32
%2 = eq %1, 6:i32
infer %2


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 44:i32
%2 = block 2
%3 = phi %2, 6:i32, 8:i32
%4 = eq %3, 6:i32
pc %4 1
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 48:i32
%2 = block 2
%3 = phi %2, 6:i32, 8:i32
%4 = eq %3, 6:i32
pc %4 1
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 16:i32
%2 = block 2
%3 = phi %2, 6:i32, 8:i32
%4 = eq %3, 6:i32
pc %4 1
infer %1


; start LHS (in $5)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3 = block 2
%4 = phi %3, 6:i32, 8:i32
%5 = eq %4, 6:i32
pc %5 1
infer %2


; start LHS (in $5)
%0 = block 2
%1 = phi %0, 6:i32, 8:i32
%2 = eq %1, 8:i32
%3 = eq %1, 6:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %2


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 16:i32
%2 = block 2
%3 = phi %2, 6:i32, 8:i32
%4 = eq %3, 8:i32
%5 = eq %3, 6:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %4 1
pc %7 1
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = or %0, 32:i32
%2 = block 2
%3 = phi %2, 6:i32, 8:i32
%4 = eq %3, 8:i32
%5 = eq %3, 6:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %4 1
pc %7 1
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = eq %0, 2:i32
%2 = block 2
%3 = phi %2, 6:i32, 8:i32
%4 = eq %3, 8:i32
%5 = eq %3, 6:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %4 1
pc %7 1
infer %1


; start LHS (in $5)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = eq %2, 2:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = phi %6, 6:i32, 8:i32
%8 = eq %7, 8:i32
%9 = eq %7, 6:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %5 1
pc %8 1
pc %11 1
infer %1


; start LHS (in $5)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3:i32 = var
%4 = eq %3, 2:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = block 2
%8 = phi %7, 6:i32, 8:i32
%9 = eq %8, 8:i32
%10 = eq %8, 6:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %6 1
pc %9 1
pc %12 1
infer %2


; function: $6

; function: $7

; function: $8

; function: $9

; start LHS (in $9)
%0:i32 = var
%1 = add %0, -48:i32
infer %1


; start LHS (in $9)
%0:i32 = var
%1 = add %0, -48:i32
%2 = ult %1, 10:i32
infer %2


; start LHS (in $9)
%0:i32 = var
%1 = add %0, -48:i32
%2 = ult %1, 10:i32
%3:i32 = zext %2
%4 = and %3, 1:i32
infer %4


; function: $10

; function: $11

; start LHS (in $11)
%0:i32 = var
%1 = add %0, 560:i32
infer %1


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = sle %0, %1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 32:i32
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 536:i32
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 540:i32
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 540:i32 (hasExternalUses)
%2 = add %1, 12:i32
infer %2


; start LHS (in $11)
%0:i64 = var
%1 = slt %0, 0:i64
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 2048:i32
%2:i64 = var
%3 = slt %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 2048:i32
%2 = eq %1, 0:i32
%3:i64 = var
%4 = slt %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 1:i32
%2:i64 = var
%3 = slt %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 1:i32
%2 = eq %1, 0:i32
%3:i64 = var
%4 = slt %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 2049:i32
%2:i64 = var
%3 = slt %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 2049:i32
%2 = ne %1, 0:i32
%3:i64 = var
%4 = slt %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 2049:i32
%2 = ne %1, 0:i32
%3:i32 = zext %2
%4 = and %3, 1:i32
%5:i64 = var
%6 = slt %5, 0:i64
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %8 1
infer %4


; start LHS (in $11)
%0 = block 2
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %2
%4 = and %3, 9218868437227405312:i64
%5 = slt %2, 0:i64
blockpc %0 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %0 1 %7 1
infer %4


; start LHS (in $11)
%0 = block 2
%1:i64 = var
%2:i64 = var
%3 = phi %0, %1, %2
%4 = and %3, 9218868437227405312:i64
%5 = eq %4, 9218868437227405312:i64
%6 = slt %2, 0:i64
blockpc %0 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %0 1 %8 1
infer %5


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 32:i32
%2 = block 2
%3:i64 = var
%4 = slt %3, 0:i64
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7:i64 = var
%8 = phi %2, %7, %3
%9 = and %8, 9218868437227405312:i64
%10 = eq %9, 9218868437227405312:i64
pc %10 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 32:i32
%2 = ne %1, 0:i32
%3 = block 2
%4:i64 = var
%5 = slt %4, 0:i64
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8:i64 = var
%9 = phi %3, %8, %4
%10 = and %9, 9218868437227405312:i64
%11 = eq %10, 9218868437227405312:i64
pc %11 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = or %0, %1
%3 = block 2
%4:i64 = var
%5 = slt %4, 0:i64
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8:i64 = var
%9 = phi %3, %8, %4
%10 = and %9, 9218868437227405312:i64
%11 = eq %10, 9218868437227405312:i64
pc %11 1
infer %2


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = and %1, 2049:i32
%3 = ne %2, 0:i32
%4:i32 = zext %3
%5 = and %4, 1:i32 (hasExternalUses)
%6 = phi %0, 1:i32, %5
%7 = add %6, 3:i32
%8:i64 = var
%9 = slt %8, 0:i64
blockpc %0 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %0 1 %11 1
%12:i64 = var
%13 = phi %0, %12, %8
%14 = and %13, 9218868437227405312:i64
%15 = eq %14, 9218868437227405312:i64
pc %15 1
infer %7


; start LHS (in $11)
%0:i32 = var
%1 = and %0, -65537:i32
%2 = block 2
%3:i64 = var
%4 = slt %3, 0:i64
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7:i64 = var
%8 = phi %2, %7, %3
%9 = and %8, 9218868437227405312:i64
%10 = eq %9, 9218868437227405312:i64
pc %10 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = xor %0, 8192:i32
%2 = block 2
%3:i64 = var
%4 = slt %3, 0:i64
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7:i64 = var
%8 = phi %2, %7, %3
%9 = and %8, 9218868437227405312:i64
%10 = eq %9, 9218868437227405312:i64
pc %10 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3 = ne %2, 0:i32
%4 = block 2
%5:i64 = var
%6 = slt %5, 0:i64
blockpc %4 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1
%9:i64 = var
%10 = phi %4, %9, %5
%11 = and %10, 9218868437227405312:i64
%12 = eq %11, 9218868437227405312:i64
%13:i32 = zext %12
%14 = eq %13, 0:i32
pc %3 1
pc %14 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = or %0, 32:i32
%2 = block 2
%3:i64 = var
%4 = slt %3, 0:i64
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7:i64 = var
%8 = phi %2, %7, %3
%9 = and %8, 9218868437227405312:i64
%10 = eq %9, 9218868437227405312:i64
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = or %0, 32:i32 (hasExternalUses)
%2 = eq %1, 97:i32
%3 = block 2
%4:i64 = var
%5 = slt %4, 0:i64
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8:i64 = var
%9 = phi %3, %8, %4
%10 = and %9, 9218868437227405312:i64
%11 = eq %10, 9218868437227405312:i64
%12:i32 = zext %11
%13 = eq %12, 0:i32
pc %13 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 32:i32
%2 = or %0, 32:i32
%3 = eq %2, 97:i32
%4 = block 2
%5:i64 = var
%6 = slt %5, 0:i64
blockpc %4 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1
%9:i64 = var
%10 = phi %4, %9, %5
%11 = and %10, 9218868437227405312:i64
%12 = eq %11, 9218868437227405312:i64
%13:i32 = zext %12
%14 = eq %13, 0:i32
pc %3 1
pc %14 1
infer %1


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = phi %2, 1948:i32, 1953:i32
%4 = phi %1, %3, 1950:i32
%5 = phi %0, 1947:i32, %4
%6 = add %5, 9:i32
%7:i64 = var
%8 = slt %7, 0:i64
blockpc %0 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %0 1 %10 1
%11:i32 = var
%12 = and %11, 2048:i32
%13 = eq %12, 0:i32
blockpc %1 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %1 1 %15 1
%16 = and %11, 1:i32
%17 = eq %16, 0:i32
blockpc %2 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %2 1 %19 1
%20:i32 = var
%21 = or %20, 32:i32
%22 = eq %21, 97:i32
%23:i64 = var
%24 = phi %0, %23, %7
%25 = and %24, 9218868437227405312:i64
%26 = eq %25, 9218868437227405312:i64
%27:i32 = zext %26
%28 = eq %27, 0:i32
pc %22 1
pc %28 1
infer %6


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 32:i32 (hasExternalUses)
%2 = eq %1, 0:i32
%3 = or %0, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %2


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = and %1, 2049:i32
%3 = ne %2, 0:i32
%4:i32 = zext %3
%5 = and %4, 1:i32 (hasExternalUses)
%6 = phi %0, 1:i32, %5
%7 = or %6, 2:i32
%8:i64 = var
%9 = slt %8, 0:i64
blockpc %0 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %0 1 %11 1
%12:i32 = var
%13 = or %12, 32:i32
%14 = eq %13, 97:i32
%15:i64 = var
%16 = phi %0, %15, %8
%17 = and %16, 9218868437227405312:i64
%18 = eq %17, 9218868437227405312:i64
%19:i32 = zext %18
%20 = eq %19, 0:i32
pc %14 1
pc %20 1
infer %7


; start LHS (in $11)
%0:i32 = var
%1 = sub 12:i32, %0
%2:i32 = var
%3 = or %2, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = ult 11:i32, %0
%2:i32 = var
%3 = or %2, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = sub 12:i32, %0 (hasExternalUses)
%2 = eq %1, 0:i32
%3:i32 = var
%4 = or %3, 32:i32
%5 = eq %4, 97:i32
%6 = block 2
%7:i64 = var
%8 = slt %7, 0:i64
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11:i64 = var
%12 = phi %6, %11, %7
%13 = and %12, 9218868437227405312:i64
%14 = eq %13, 9218868437227405312:i64
%15:i32 = zext %14
%16 = eq %15, 0:i32
pc %5 1
pc %16 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = ult 11:i32, %0
%2:i32 = zext %1
%3 = sub 12:i32, %0 (hasExternalUses)
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = or %2, %5
%7:i32 = var
%8 = or %7, 32:i32
%9 = eq %8, 97:i32
%10 = block 2
%11:i64 = var
%12 = slt %11, 0:i64
blockpc %10 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %10 1 %14 1
%15:i64 = var
%16 = phi %10, %15, %11
%17 = and %16, 9218868437227405312:i64
%18 = eq %17, 9218868437227405312:i64
%19:i32 = zext %18
%20 = eq %19, 0:i32
pc %9 1
pc %20 1
infer %6


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3 = ult 11:i32, %2
%4:i32 = zext %3
%5 = sub 12:i32, %2
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = or %4, %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = or %10, 32:i32
%12 = eq %11, 97:i32
%13 = block 2
%14:i64 = var
%15 = slt %14, 0:i64
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18:i64 = var
%19 = phi %13, %18, %14
%20 = and %19, 9218868437227405312:i64
%21 = eq %20, 9218868437227405312:i64
%22:i32 = zext %21
%23 = eq %22, 0:i32
pc %9 1
pc %12 1
pc %23 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -1:i32
%2 = eq %1, 0:i32
%3:i32 = var
%4 = ult 11:i32, %3
%5:i32 = zext %4
%6 = sub 12:i32, %3
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = or %5, %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = or %11, 32:i32
%13 = eq %12, 97:i32
%14 = block 2
%15:i64 = var
%16 = slt %15, 0:i64
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19:i64 = var
%20 = phi %14, %19, %15
%21 = and %20, 9218868437227405312:i64
%22 = eq %21, 9218868437227405312:i64
%23:i32 = zext %22
%24 = eq %23, 0:i32
pc %10 1
pc %13 1
pc %24 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = ult 11:i32, %2
%4:i32 = zext %3
%5 = sub 12:i32, %2
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = or %4, %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = or %10, 32:i32
%12 = eq %11, 97:i32
%13 = block 2
%14:i64 = var
%15 = slt %14, 0:i64
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18:i64 = var
%19 = phi %13, %18, %14
%20 = and %19, 9218868437227405312:i64
%21 = eq %20, 9218868437227405312:i64
%22:i32 = zext %21
%23 = eq %22, 0:i32
pc %9 1
pc %12 1
pc %23 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = ult 11:i32, %3
%5:i32 = zext %4
%6 = sub 12:i32, %3
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = or %5, %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = or %11, 32:i32
%13 = eq %12, 97:i32
%14 = block 2
%15:i64 = var
%16 = slt %15, 0:i64
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19:i64 = var
%20 = phi %14, %19, %15
%21 = and %20, 9218868437227405312:i64
%22 = eq %21, 9218868437227405312:i64
%23:i32 = zext %22
%24 = eq %23, 0:i32
pc %10 1
pc %13 1
pc %24 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 45:i32
%4:i32 = var
%5 = ult 11:i32, %4
%6:i32 = zext %5
%7 = sub 12:i32, %4
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = or %6, %9
%11 = eq %10, 0:i32
%12:i32 = var
%13 = or %12, 32:i32
%14 = eq %13, 97:i32
%15 = block 2
%16:i64 = var
%17 = slt %16, 0:i64
blockpc %15 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %15 1 %19 1
%20:i64 = var
%21 = phi %15, %20, %16
%22 = and %21, 9218868437227405312:i64
%23 = eq %22, 9218868437227405312:i64
%24:i32 = zext %23
%25 = eq %24, 0:i32
pc %11 1
pc %14 1
pc %25 1
infer %3


; start LHS (in $11)
%0:i32 = var
%1 = sub 0:i32, %0
%2:i32 = var
%3 = or %2, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = slt %0, 0:i32
%2:i32 = var
%3 = or %2, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = add %1, 540:i32 (hasExternalUses)
%3 = add %2, 12:i32 (hasExternalUses)
%4 = eq %0, %3
%5:i32 = var
%6 = or %5, 32:i32
%7 = eq %6, 97:i32
%8 = block 2
%9:i64 = var
%10 = slt %9, 0:i64
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13:i64 = var
%14 = phi %8, %13, %9
%15 = and %14, 9218868437227405312:i64
%16 = eq %15, 9218868437227405312:i64
%17:i32 = zext %16
%18 = eq %17, 0:i32
pc %7 1
pc %18 1
infer %4


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 540:i32 (hasExternalUses)
%2 = add %1, 11:i32
%3:i32 = var
%4 = add %1, 12:i32
%5 = eq %3, %4
%6:i32 = var
%7 = or %6, 32:i32
%8 = eq %7, 97:i32
%9 = block 2
%10:i64 = var
%11 = slt %10, 0:i64
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14:i64 = var
%15 = phi %9, %14, %10
%16 = and %15, 9218868437227405312:i64
%17 = eq %16, 9218868437227405312:i64
%18:i32 = zext %17
%19 = eq %18, 0:i32
pc %5 1
pc %8 1
pc %19 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = ashr %0, 31:i32
%2:i32 = var
%3 = or %2, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = ashr %0, 31:i32
%2 = and %1, 2:i32
%3:i32 = var
%4 = or %3, 32:i32
%5 = eq %4, 97:i32
%6 = block 2
%7:i64 = var
%8 = slt %7, 0:i64
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11:i64 = var
%12 = phi %6, %11, %7
%13 = and %12, 9218868437227405312:i64
%14 = eq %13, 9218868437227405312:i64
%15:i32 = zext %14
%16 = eq %15, 0:i32
pc %5 1
pc %16 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = ashr %0, 31:i32
%2 = and %1, 2:i32
%3 = add %2, 43:i32
%4:i32 = var
%5 = or %4, 32:i32
%6 = eq %5, 97:i32
%7 = block 2
%8:i64 = var
%9 = slt %8, 0:i64
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12:i64 = var
%13 = phi %7, %12, %8
%14 = and %13, 9218868437227405312:i64
%15 = eq %14, 9218868437227405312:i64
%16:i32 = zext %15
%17 = eq %16, 0:i32
pc %6 1
pc %17 1
infer %3


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = add %1, 540:i32 (hasExternalUses)
%3 = add %2, 11:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %0, %3, %4
%6 = add %5, -1:i32
%7 = add %2, 12:i32
%8 = eq %4, %7
blockpc %0 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %0 1 %10 1
%11:i32 = var
%12 = or %11, 32:i32
%13 = eq %12, 97:i32
%14 = block 2
%15:i64 = var
%16 = slt %15, 0:i64
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19:i64 = var
%20 = phi %14, %19, %15
%21 = and %20, 9218868437227405312:i64
%22 = eq %21, 9218868437227405312:i64
%23:i32 = zext %22
%24 = eq %23, 0:i32
pc %13 1
pc %24 1
infer %6


; start LHS (in $11)
%0:i32 = var
%1 = ashr %0, 31:i32
%2 = and %1, 2:i32
%3 = add %2, 43:i32
%4 = and %3, 255:i32
%5:i32 = var
%6 = or %5, 32:i32
%7 = eq %6, 97:i32
%8 = block 2
%9:i64 = var
%10 = slt %9, 0:i64
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13:i64 = var
%14 = phi %8, %13, %9
%15 = and %14, 9218868437227405312:i64
%16 = eq %15, 9218868437227405312:i64
%17:i32 = zext %16
%18 = eq %17, 0:i32
pc %7 1
pc %18 1
infer %4


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 15:i32
%2 = or %0, 32:i32
%3 = eq %2, 97:i32
%4 = block 2
%5:i64 = var
%6 = slt %5, 0:i64
blockpc %4 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1
%9:i64 = var
%10 = phi %4, %9, %5
%11 = and %10, 9218868437227405312:i64
%12 = eq %11, 9218868437227405312:i64
%13:i32 = zext %12
%14 = eq %13, 0:i32
pc %3 1
pc %14 1
infer %1


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = add %1, 540:i32 (hasExternalUses)
%3 = add %2, 11:i32 (hasExternalUses)
%4:i32 = var
%5 = phi %0, %3, %4
%6 = add %5, -2:i32
%7 = add %2, 12:i32
%8 = eq %4, %7
blockpc %0 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %0 1 %10 1
%11:i32 = var
%12 = or %11, 32:i32
%13 = eq %12, 97:i32
%14 = block 2
%15:i64 = var
%16 = slt %15, 0:i64
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19:i64 = var
%20 = phi %14, %19, %15
%21 = and %20, 9218868437227405312:i64
%22 = eq %21, 9218868437227405312:i64
%23:i32 = zext %22
%24 = eq %23, 0:i32
pc %13 1
pc %24 1
infer %6


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 15:i32
%2 = and %1, 255:i32
%3 = or %0, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = slt %0, 1:i32
%2:i32 = var
%3 = or %2, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 8:i32
%2:i32 = var
%3 = or %2, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 8:i32
%2 = eq %1, 0:i32
%3:i32 = var
%4 = or %3, 32:i32
%5 = eq %4, 97:i32
%6 = block 2
%7:i64 = var
%8 = slt %7, 0:i64
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11:i64 = var
%12 = phi %6, %11, %7
%13 = and %12, 9218868437227405312:i64
%14 = eq %13, 9218868437227405312:i64
%15:i32 = zext %14
%16 = eq %15, 0:i32
pc %5 1
pc %16 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = add 1488:i32, %0
%2:i32 = var
%3 = or %2, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 255:i32
%2:i32 = var
%3 = or %2, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 32:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 255:i32
%4 = or %1, %3
%5 = or %0, 32:i32
%6 = eq %5, 97:i32
%7 = block 2
%8:i64 = var
%9 = slt %8, 0:i64
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12:i64 = var
%13 = phi %7, %12, %8
%14 = and %13, 9218868437227405312:i64
%15 = eq %14, 9218868437227405312:i64
%16:i32 = zext %15
%17 = eq %16, 0:i32
pc %6 1
pc %17 1
infer %4


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = or %2, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 32:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 255:i32
%4 = or %1, %3
%5 = and %4, 255:i32
%6 = or %0, 32:i32
%7 = eq %6, 97:i32
%8 = block 2
%9:i64 = var
%10 = slt %9, 0:i64
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13:i64 = var
%14 = phi %8, %13, %9
%15 = and %14, 9218868437227405312:i64
%16 = eq %15, 9218868437227405312:i64
%17:i32 = zext %16
%18 = eq %17, 0:i32
pc %7 1
pc %18 1
infer %5


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2:i32 = var
%3 = sub %1, %2
%4:i32 = var
%5 = or %4, 32:i32
%6 = eq %5, 97:i32
%7 = block 2
%8:i64 = var
%9 = slt %8, 0:i64
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12:i64 = var
%13 = phi %7, %12, %8
%14 = and %13, 9218868437227405312:i64
%15 = eq %14, 9218868437227405312:i64
%16:i32 = zext %15
%17 = eq %16, 0:i32
pc %6 1
pc %17 1
infer %3


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2:i32 = var
%3 = sub %1, %2
%4 = eq %3, 1:i32
%5:i32 = var
%6 = or %5, 32:i32
%7 = eq %6, 97:i32
%8 = block 2
%9:i64 = var
%10 = slt %9, 0:i64
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13:i64 = var
%14 = phi %8, %13, %9
%15 = and %14, 9218868437227405312:i64
%16 = eq %15, 9218868437227405312:i64
%17:i32 = zext %16
%18 = eq %17, 0:i32
pc %7 1
pc %18 1
infer %4


; start LHS (in $11)
%0:i32 = var
%1 = slt %0, 1:i32
%2:i32 = var
%extd0:i32 = zext %1; Fix width
%3 = and %extd0, %2
%4:i32 = var
%5 = add %4, 1:i32
%6:i32 = var
%7 = sub %5, %6
%8 = eq %7, 1:i32
%9:i32 = var
%10 = or %9, 32:i32
%11 = eq %10, 97:i32
%12 = block 2
%13:i64 = var
%14 = slt %13, 0:i64
blockpc %12 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1
%17:i64 = var
%18 = phi %12, %17, %13
%19 = and %18, 9218868437227405312:i64
%20 = eq %19, 9218868437227405312:i64
%21:i32 = zext %20
%22 = eq %21, 0:i32
pc %8 1
pc %11 1
pc %22 1
infer %3


; start LHS (in $11)
%0:i32 = var
%1 = and %0, 8:i32
%2 = eq %1, 0:i32
%3:i32 = var
%4 = slt %3, 1:i32
%5:i32 = var
%extd0:i32 = zext %4; Fix width
%6 = and %extd0, %5
%extd1:i32 = zext %2; Fix width
%7 = and %extd1, %6
%8:i32 = var
%9 = add %8, 1:i32
%10:i32 = var
%11 = sub %9, %10
%12 = eq %11, 1:i32
%13:i32 = var
%14 = or %13, 32:i32
%15 = eq %14, 97:i32
%16 = block 2
%17:i64 = var
%18 = slt %17, 0:i64
blockpc %16 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %16 1 %20 1
%21:i64 = var
%22 = phi %16, %21, %17
%23 = and %22, 9218868437227405312:i64
%24 = eq %23, 9218868437227405312:i64
%25:i32 = zext %24
%26 = eq %25, 0:i32
pc %12 1
pc %15 1
pc %26 1
infer %7


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = and %2, 8:i32
%4 = eq %3, 0:i32
%5:i32 = var
%6 = slt %5, 1:i32
%7:i32 = var
%extd0:i32 = zext %6; Fix width
%8 = and %extd0, %7
%extd1:i32 = zext %4; Fix width
%9 = and %extd1, %8
%10 = eq %9, 0:i32
%11 = add %0, 1:i32
%12:i32 = var
%13 = sub %11, %12
%14 = eq %13, 1:i32
%15:i32 = var
%16 = or %15, 32:i32
%17 = eq %16, 97:i32
%18 = block 2
%19:i64 = var
%20 = slt %19, 0:i64
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23:i64 = var
%24 = phi %18, %23, %19
%25 = and %24, 9218868437227405312:i64
%26 = eq %25, 9218868437227405312:i64
%27:i32 = zext %26
%28 = eq %27, 0:i32
pc %10 1
pc %14 1
pc %17 1
pc %28 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = or %2, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = sub -2:i32, %0
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = or %6, 32:i32
%8 = eq %7, 97:i32
%9 = block 2
%10:i64 = var
%11 = slt %10, 0:i64
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14:i64 = var
%15 = phi %9, %14, %10
%16 = and %15, 9218868437227405312:i64
%17 = eq %16, 9218868437227405312:i64
%18:i32 = zext %17
%19 = eq %18, 0:i32
pc %5 1
pc %8 1
pc %19 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = sub -2:i32, %0
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = add %4, 1:i32 (hasExternalUses)
%6 = add %4, 2:i32 (hasExternalUses)
%7 = phi %3, %5, %6
%8 = phi %2, %7, %5
%9 = add %1, %8
%10 = sub %5, %0
%11 = eq %10, 1:i32
blockpc %2 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %2 1 %13 1
%14:i32 = var
%15 = and %14, 8:i32
%16 = eq %15, 0:i32
%17:i32 = var
%18 = slt %17, 1:i32
%19:i32 = var
%extd0:i32 = zext %18; Fix width
%20 = and %extd0, %19
%extd1:i32 = zext %16; Fix width
%21 = and %extd1, %20
%22 = ne %21, 0:i32
blockpc %3 0 %22 1
%23 = eq %21, 0:i32
blockpc %3 1 %23 1
%24 = eq %17, 0:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
%28:i32 = var
pc %26 1
pc %27 1
pc %28 1
infer %9


; start LHS (in $11)
%0:i32 = var
%1 = sub -2:i32, %0
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = add %4, 1:i32 (hasExternalUses)
%6 = add %4, 2:i32 (hasExternalUses)
%7 = phi %3, %5, %6
%8 = phi %2, %7, %5
%9 = add %1, %8
%10:i32 = var
%11 = slt %9, %10
%12 = sub %5, %0
%13 = eq %12, 1:i32
blockpc %2 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %2 1 %15 1
%16:i32 = var
%17 = and %16, 8:i32
%18 = eq %17, 0:i32
%19 = slt %10, 1:i32
%20:i32 = var
%extd0:i32 = zext %19; Fix width
%21 = and %extd0, %20
%extd1:i32 = zext %18; Fix width
%22 = and %extd1, %21
%23 = ne %22, 0:i32
blockpc %3 0 %23 1
%24 = eq %22, 0:i32
blockpc %3 1 %24 1
%25 = eq %10, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
%29:i32 = var
pc %27 1
pc %28 1
pc %29 1
infer %11


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = sub -2:i32, %2
%4 = block 2
%5:i32 = var
%6 = add %5, 1:i32
%7 = sub %6, %2
%8 = eq %7, 1:i32
blockpc %4 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %4 1 %10 1
%11 = block 2
%12:i32 = var
%13 = and %12, 8:i32
%14 = eq %13, 0:i32
%15 = slt %0, 1:i32
%16:i32 = var
%extd0:i32 = zext %15; Fix width
%17 = and %extd0, %16
%extd1:i32 = zext %14; Fix width
%18 = and %extd1, %17
%19 = ne %18, 0:i32
blockpc %11 0 %19 1
%20 = eq %18, 0:i32
blockpc %11 1 %20 1
%21 = add %5, 2:i32
%22 = phi %11, %6, %21
%23 = phi %4, %22, %6
%24 = add %3, %23
%25 = slt %24, %0
%26:i32 = var
%27:i32 = var
%28:i32 = var
pc %25 1
pc %26 1
pc %27 1
pc %28 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = add %2, 540:i32 (hasExternalUses)
%4 = add %3, 12:i32 (hasExternalUses)
%5 = add %1, %4
%6 = sub -2:i32, %2
%7 = block 2
%8:i32 = var
%9 = add %8, 1:i32
%10 = sub %9, %2
%11 = eq %10, 1:i32
blockpc %7 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %7 1 %13 1
%14 = block 2
%15:i32 = var
%16 = and %15, 8:i32
%17 = eq %16, 0:i32
%18 = slt %0, 1:i32
%19:i32 = var
%extd0:i32 = zext %18; Fix width
%20 = and %extd0, %19
%extd1:i32 = zext %17; Fix width
%21 = and %extd1, %20
%22 = ne %21, 0:i32
blockpc %14 0 %22 1
%23 = eq %21, 0:i32
blockpc %14 1 %23 1
%24 = add %8, 2:i32
%25 = phi %14, %9, %24
%26 = phi %7, %25, %9
%27 = add %6, %26
%28 = slt %27, %0
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %5


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = add %2, 540:i32
%4 = add %3, 12:i32 (hasExternalUses)
%5 = add %1, %4
%6 = block 2
%7 = add %3, 11:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %6, %7, %8
%10 = add %9, -2:i32 (hasExternalUses)
%11 = sub %5, %10
%12 = eq %8, %4
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15 = sub -2:i32, %2
%16 = block 2
%17:i32 = var
%18 = add %17, 1:i32
%19 = sub %18, %2
%20 = eq %19, 1:i32
blockpc %16 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %16 1 %22 1
%23 = block 2
%24:i32 = var
%25 = and %24, 8:i32
%26 = eq %25, 0:i32
%27:i32 = var
%extd0:i32 = zext %26; Fix width
%28 = and %extd0, %27
%29 = ne %28, 0:i32
blockpc %23 0 %29 1
%30:i32 = var
blockpc %23 1 %30 1
%31:i32 = var
%32 = phi %23, %18, %31
%33 = phi %16, %32, %18
%34 = add %15, %33
%35 = slt %34, %0
%36:i32 = var
%37:i32 = var
%38:i32 = var
pc %35 1
pc %36 1
pc %37 1
pc %38 1
infer %11


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = phi %1, 0:i32, 25:i32
%3 = phi %0, 25:i32, %2
%4 = eq %3, 25:i32
%5:i32 = var
%6 = eq %5, 0:i32
blockpc %0 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %0 1 %8 1
%9:i32 = var
%10 = sub -2:i32, %9
%11 = block 2
%12:i32 = var
%13 = add %12, 1:i32
%14 = sub %13, %9
%15 = eq %14, 1:i32
blockpc %11 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %11 1 %17 1
%18 = block 2
%19:i32 = var
%20 = eq %19, 0:i32
%21:i32 = var
%22:i32 = var
%23 = and %21, %22
%extd0:i32 = zext %20; Fix width
%24 = and %extd0, %23
%25 = ne %24, 0:i32
blockpc %18 0 %25 1
%26:i32 = var
blockpc %18 1 %26 1
%27:i32 = var
%28 = phi %18, %13, %27
%29 = phi %11, %28, %13
%30 = add %10, %29
%31 = slt %30, %5
blockpc %1 0 %31 1
%32:i32 = var
blockpc %1 1 %32 1
%33:i32 = var
%34:i32 = var
pc %33 1
pc %34 1
infer %4


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 540:i32 (hasExternalUses)
%2 = add %1, 12:i32 (hasExternalUses)
%3 = sub %2, %0
%4 = block 2
%5:i32 = var
%6 = eq %5, 0:i32
blockpc %4 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1
%9 = block 2
%10 = sub -2:i32, %0
%11 = block 2
%12:i32 = var
%13 = eq %12, 1:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19:i32 = var
%20 = add %19, 1:i32
%21 = add %19, 2:i32
%22 = phi %16, %20, %21
%23 = phi %11, %22, %20
%24 = add %10, %23
%25 = slt %24, %5
blockpc %9 0 %25 1
%26:i32 = var
blockpc %9 1 %26 1
%27 = phi %9, 0:i32, 25:i32
%28 = phi %4, 25:i32, %27
%29 = eq %28, 25:i32
%30:i32 = var
%31:i32 = var
pc %29 1
pc %30 1
pc %31 1
infer %3


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 540:i32
%2 = add %1, 12:i32 (hasExternalUses)
%3 = sub %2, %0
%4 = block 2
%5 = add %1, 11:i32 (hasExternalUses)
%6:i32 = var
%7 = phi %4, %5, %6
%8 = add %7, -2:i32 (hasExternalUses)
%9 = sub %3, %8
%10 = eq %6, %2
blockpc %4 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %4 1 %12 1
%13 = block 2
%14:i32 = var
%15 = eq %14, 0:i32
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18 = block 2
%19 = sub -2:i32, %0
%20 = block 2
%21:i32 = var
%22 = eq %21, 1:i32
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29:i32 = var
%30 = phi %25, %28, %29
%31 = phi %20, %30, %28
%32 = add %19, %31
%33 = slt %32, %14
blockpc %18 0 %33 1
%34:i32 = var
blockpc %18 1 %34 1
%35 = phi %18, 0:i32, 25:i32
%36 = phi %13, 25:i32, %35
%37 = eq %36, 25:i32
%38:i32 = var
%39:i32 = var
pc %37 1
pc %38 1
pc %39 1
infer %9


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 540:i32
%2 = add %1, 12:i32 (hasExternalUses)
%3 = sub %2, %0
%4 = block 2
%5 = add %1, 11:i32 (hasExternalUses)
%6:i32 = var
%7 = phi %4, %5, %6
%8 = add %7, -2:i32 (hasExternalUses)
%9 = sub %3, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = add %12, 1:i32 (hasExternalUses)
%14 = add %12, 2:i32 (hasExternalUses)
%15 = phi %11, %13, %14
%16 = phi %10, %15, %13
%17 = add %9, %16
%18 = eq %6, %2
blockpc %4 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %4 1 %20 1
%21 = sub %13, %0
%22 = eq %21, 1:i32
blockpc %10 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %10 1 %24 1
%25:i32 = var
%26 = and %25, 8:i32
%27 = eq %26, 0:i32
%28:i32 = var
%extd0:i32 = zext %27; Fix width
%29 = and %extd0, %28
%30 = ne %29, 0:i32
blockpc %11 0 %30 1
%31:i32 = var
blockpc %11 1 %31 1
%32:i32 = var
%33:i32 = var
%34:i32 = var
pc %32 1
pc %33 1
pc %34 1
infer %17


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = add %3, 2:i32
%5:i32 = var
%6 = add %5, 540:i32
%7 = add %6, 12:i32 (hasExternalUses)
%8 = add %4, %7
%9 = block 2
%10 = add %6, 11:i32 (hasExternalUses)
%11:i32 = var
%12 = phi %9, %10, %11
%13 = add %12, -2:i32 (hasExternalUses)
%14 = sub %8, %13 (hasExternalUses)
%15 = phi %2, %14, 0:i32
%16 = phi %1, 0:i32, %15
%17 = sub %7, %5
%18 = sub %17, %13
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = add %21, 1:i32 (hasExternalUses)
%23 = add %21, 2:i32 (hasExternalUses)
%24 = phi %20, %22, %23
%25 = phi %19, %24, %22
%26 = add %18, %25 (hasExternalUses)
%27 = phi %0, %16, %26
%28 = block 2
%29:i32 = var
%30 = and %29, 2049:i32
%31 = ne %30, 0:i32
%32:i32 = zext %31
%33 = and %32, 1:i32 (hasExternalUses)
%34 = phi %28, 1:i32, %33
%35 = or %34, 2:i32 (hasExternalUses)
%36 = add %27, %35
%37:i32 = var
blockpc %0 0 %37 1
%38:i32 = var
blockpc %0 1 %38 1
%39:i32 = var
blockpc %1 0 %39 1
%40:i32 = var
blockpc %1 1 %40 1
%41:i32 = var
blockpc %2 0 %41 1
%42:i32 = var
blockpc %2 1 %42 1
%43:i32 = var
blockpc %9 0 %43 1
%44:i32 = var
blockpc %9 1 %44 1
%45:i32 = var
blockpc %19 0 %45 1
%46:i32 = var
blockpc %19 1 %46 1
%47:i32 = var
blockpc %20 0 %47 1
%48:i32 = var
blockpc %20 1 %48 1
%49:i32 = var
blockpc %28 0 %49 1
%50:i32 = var
blockpc %28 1 %50 1
%51:i32 = var
%52:i32 = var
pc %51 1
pc %52 1
infer %36


; start LHS (in $11)
%0:i32 = var
%1 = xor %0, 65536:i32
%2:i32 = var
%3 = or %2, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %1


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, 1:i32 (hasExternalUses)
%4 = add %2, 2:i32 (hasExternalUses)
%5 = phi %1, %3, %4
%6 = phi %0, %5, %3
%7:i32 = var
%8 = sub %6, %7
%9 = sub %3, %7
%10 = eq %9, 1:i32
blockpc %0 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %0 1 %12 1
%13:i32 = var
%14 = and %13, 8:i32
%15 = eq %14, 0:i32
%16:i32 = var
%17 = slt %16, 1:i32
%18:i32 = var
%extd0:i32 = zext %17; Fix width
%19 = and %extd0, %18
%extd1:i32 = zext %15; Fix width
%20 = and %extd1, %19
%21 = ne %20, 0:i32
blockpc %1 0 %21 1
%22 = eq %20, 0:i32
blockpc %1 1 %22 1
%23:i32 = var
%24 = or %23, 32:i32
%25 = eq %24, 97:i32
%26:i32 = var
pc %25 1
pc %26 1
infer %8


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = add %3, 540:i32
%5 = add %4, 12:i32 (hasExternalUses)
%6 = phi %2, %5, 0:i32
%7 = phi %1, 0:i32, %6
%8 = phi %0, %7, %5
%9 = block 2
%10 = add %4, 11:i32 (hasExternalUses)
%11:i32 = var
%12 = phi %9, %10, %11
%13 = add %12, -2:i32 (hasExternalUses)
%14 = phi %2, %13, 0:i32
%15 = phi %1, 0:i32, %14
%16 = phi %0, %15, %13
%17 = sub %8, %16
%18:i32 = var
%19 = eq %18, 0:i32
blockpc %1 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %1 1 %21 1
%22 = sub -2:i32, %3
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30:i32 = var
%31 = phi %26, %29, %30
%32 = phi %23, %31, %29
%33 = add %22, %32
%34 = slt %33, %18
blockpc %2 0 %34 1
%35:i32 = var
blockpc %2 1 %35 1
%36 = phi %2, 0:i32, 25:i32
%37 = phi %1, 25:i32, %36
%38 = eq %37, 25:i32
blockpc %0 0 %38 1
%39:i32 = var
blockpc %0 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
%43:i32 = var
pc %42 1
pc %43 1
infer %17


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, 1:i32 (hasExternalUses)
%4 = add %2, 2:i32 (hasExternalUses)
%5 = phi %1, %3, %4
%6 = phi %0, %5, %3
%7:i32 = var
%8 = sub %6, %7 (hasExternalUses)
%9 = block 2
%10 = block 2
%11 = block 2
%12 = add %7, 540:i32
%13 = add %12, 12:i32 (hasExternalUses)
%14 = phi %11, %13, 0:i32
%15 = phi %10, 0:i32, %14
%16 = phi %9, %15, %13
%17 = block 2
%18 = add %12, 11:i32 (hasExternalUses)
%19:i32 = var
%20 = phi %17, %18, %19
%21 = add %20, -2:i32 (hasExternalUses)
%22 = phi %11, %21, 0:i32
%23 = phi %10, 0:i32, %22
%24 = phi %9, %23, %21
%25 = sub %16, %24 (hasExternalUses)
%26 = add %8, %25
%27 = sub %3, %7
%28 = eq %27, 1:i32
blockpc %0 0 %28 1
%29:i32 = var
blockpc %0 1 %29 1
%30:i32 = var
blockpc %1 0 %30 1
%31:i32 = var
blockpc %1 1 %31 1
%32:i32 = var
blockpc %9 0 %32 1
%33:i32 = var
blockpc %9 1 %33 1
%34:i32 = var
blockpc %10 0 %34 1
%35:i32 = var
blockpc %10 1 %35 1
%36:i32 = var
blockpc %11 0 %36 1
%37:i32 = var
blockpc %11 1 %37 1
%38:i32 = var
blockpc %17 0 %38 1
%39:i32 = var
blockpc %17 1 %39 1
%40:i32 = var
%41:i32 = var
pc %40 1
pc %41 1
infer %26


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = add %3, 2:i32
%5:i32 = var
%6 = add %5, 540:i32
%7 = add %6, 12:i32 (hasExternalUses)
%8 = add %4, %7
%9 = block 2
%10 = add %6, 11:i32 (hasExternalUses)
%11:i32 = var
%12 = phi %9, %10, %11
%13 = add %12, -2:i32 (hasExternalUses)
%14 = sub %8, %13 (hasExternalUses)
%15 = phi %2, %14, 0:i32
%16 = phi %1, 0:i32, %15
%17 = sub %7, %5
%18 = sub %17, %13
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = add %21, 1:i32 (hasExternalUses)
%23 = add %21, 2:i32 (hasExternalUses)
%24 = phi %20, %22, %23
%25 = phi %19, %24, %22
%26 = add %18, %25 (hasExternalUses)
%27 = phi %0, %16, %26
%28 = sub %25, %5 (hasExternalUses)
%29 = phi %2, %7, 0:i32
%30 = phi %1, 0:i32, %29
%31 = phi %0, %30, %7
%32 = phi %2, %13, 0:i32
%33 = phi %1, 0:i32, %32
%34 = phi %0, %33, %13
%35 = sub %31, %34 (hasExternalUses)
%36 = add %28, %35
%37 = sub %27, %36
%38:i32 = var
blockpc %0 0 %38 1
%39:i32 = var
blockpc %0 1 %39 1
%40:i32 = var
blockpc %1 0 %40 1
%41:i32 = var
blockpc %1 1 %41 1
%42:i32 = var
blockpc %2 0 %42 1
%43:i32 = var
blockpc %2 1 %43 1
%44:i32 = var
blockpc %9 0 %44 1
%45:i32 = var
blockpc %9 1 %45 1
%46:i32 = var
blockpc %19 0 %46 1
%47:i32 = var
blockpc %19 1 %47 1
%48:i32 = var
blockpc %20 0 %48 1
%49:i32 = var
blockpc %20 1 %49 1
%50:i32 = var
%51:i32 = var
pc %50 1
pc %51 1
infer %37


; start LHS (in $11)
%0:i32 = var
%1 = xor %0, 8192:i32
%2:i32 = var
%3 = or %2, 32:i32
%4 = eq %3, 97:i32
%5 = block 2
%6:i64 = var
%7 = slt %6, 0:i64
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i64 = var
%11 = phi %5, %10, %6
%12 = and %11, 9218868437227405312:i64
%13 = eq %12, 9218868437227405312:i64
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %4 1
pc %15 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = slt %0, 0:i32
%2 = block 2
%3:i64 = var
%4 = slt %3, 0:i64
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7:i64 = var
%8 = phi %2, %7, %3
%9 = and %8, 9218868437227405312:i64
%10 = eq %9, 9218868437227405312:i64
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -28:i32
%2:i32 = var
%3 = ne %2, 0:i32
%4 = block 2
%5:i64 = var
%6 = slt %5, 0:i64
blockpc %4 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1
%9:i64 = var
%10 = phi %4, %9, %5
%11 = and %10, 9218868437227405312:i64
%12 = eq %11, 9218868437227405312:i64
%13:i32 = zext %12
%14 = eq %13, 0:i32
pc %3 1
pc %14 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 32:i32 (hasExternalUses)
%2 = add %1, 288:i32
%3 = block 2
%4:i64 = var
%5 = slt %4, 0:i64
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8:i64 = var
%9 = phi %3, %8, %4
%10 = and %9, 9218868437227405312:i64
%11 = eq %10, 9218868437227405312:i64
%12:i32 = zext %11
%13 = eq %12, 0:i32
pc %13 1
infer %2


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = add %1, -28:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = slt %4, 0:i32
%6:i32 = var
%7 = ne %6, 0:i32
blockpc %0 0 %7 1
%8 = eq %6, 0:i32
blockpc %0 1 %8 1
%9 = block 2
%10:i64 = var
%11 = slt %10, 0:i64
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14:i64 = var
%15 = phi %9, %14, %10
%16 = and %15, 9218868437227405312:i64
%17 = eq %16, 9218868437227405312:i64
%18:i32 = zext %17
%19 = eq %18, 0:i32
pc %19 1
infer %5


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3:i64 = var
%4 = slt %3, 0:i64
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7:i64 = var
%8 = phi %2, %7, %3
%9 = and %8, 9218868437227405312:i64
%10 = eq %9, 9218868437227405312:i64
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %1


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = add %1, -28:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = slt 0:i32, %4
%6:i32 = var
%7 = ne %6, 0:i32
blockpc %0 0 %7 1
%8 = eq %6, 0:i32
blockpc %0 1 %8 1
%9 = block 2
%10:i64 = var
%11 = slt %10, 0:i64
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14:i64 = var
%15 = phi %9, %14, %10
%16 = and %15, 9218868437227405312:i64
%17 = eq %16, 9218868437227405312:i64
%18:i32 = zext %17
%19 = eq %18, 0:i32
pc %19 1
infer %5


; start LHS (in $11)
%0:i32 = var
%1 = slt %0, 29:i32
%2 = block 2
%3:i32 = var
%4 = ne %3, 0:i32
blockpc %2 0 %4 1
%5 = eq %3, 0:i32
blockpc %2 1 %5 1
%6:i32 = var
%7 = add %6, -28:i32
%8:i32 = var
%9 = phi %2, %7, %8
%10 = slt 0:i32, %9
%11 = block 2
%12:i64 = var
%13 = slt %12, 0:i64
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16:i64 = var
%17 = phi %11, %16, %12
%18 = and %17, 9218868437227405312:i64
%19 = eq %18, 9218868437227405312:i64
%20:i32 = zext %19
%21 = eq %20, 0:i32
pc %10 1
pc %21 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -4:i32
%2 = block 2
%3:i32 = var
%4 = ne %3, 0:i32
blockpc %2 0 %4 1
%5 = eq %3, 0:i32
blockpc %2 1 %5 1
%6:i32 = var
%7 = add %6, -28:i32
%8:i32 = var
%9 = phi %2, %7, %8
%10 = slt 0:i32, %9
%11 = block 2
%12:i64 = var
%13 = slt %12, 0:i64
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16:i64 = var
%17 = phi %11, %16, %12
%18 = and %17, 9218868437227405312:i64
%19 = eq %18, 9218868437227405312:i64
%20:i32 = zext %19
%21 = eq %20, 0:i32
pc %10 1
pc %21 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -4:i32 (hasExternalUses)
%2:i32 = var
%3 = ult %1, %2
%4 = block 2
%5:i32 = var
%6 = ne %5, 0:i32
blockpc %4 0 %6 1
%7 = eq %5, 0:i32
blockpc %4 1 %7 1
%8:i32 = var
%9 = add %8, -28:i32
%10:i32 = var
%11 = phi %4, %9, %10
%12 = slt 0:i32, %11
%13 = block 2
%14:i64 = var
%15 = slt %14, 0:i64
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18:i64 = var
%19 = phi %13, %18, %14
%20 = and %19, 9218868437227405312:i64
%21 = eq %20, 9218868437227405312:i64
%22:i32 = zext %21
%23 = eq %22, 0:i32
pc %12 1
pc %23 1
infer %3


; start LHS (in $11)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3:i32 = var
%4 = add %3, -4:i32
%5:i32 = var
%6 = ult %4, %5
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9 = block 2
%10:i32 = var
%11 = ne %10, 0:i32
blockpc %9 0 %11 1
%12 = eq %10, 0:i32
blockpc %9 1 %12 1
%13:i32 = var
%14 = add %13, -28:i32
%15:i32 = var
%16 = phi %9, %14, %15
%17 = slt 0:i32, %16
%18 = block 2
%19:i64 = var
%20 = slt %19, 0:i64
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23:i64 = var
%24 = phi %18, %23, %19
%25 = and %24, 9218868437227405312:i64
%26 = eq %25, 9218868437227405312:i64
%27:i32 = zext %26
%28 = eq %27, 0:i32
pc %8 1
pc %17 1
pc %28 1
infer %2


; start LHS (in $11)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3:i64 = var
%4 = add %2, %3
%5:i32 = var
%6 = add %5, -4:i32
%7:i32 = var
%8 = ult %6, %7
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
%20 = block 2
%21:i64 = var
%22 = slt %21, 0:i64
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25:i64 = var
%26 = phi %20, %25, %21
%27 = and %26, 9218868437227405312:i64
%28 = eq %27, 9218868437227405312:i64
%29:i32 = zext %28
%30 = eq %29, 0:i32
pc %10 1
pc %19 1
pc %30 1
infer %4


; start LHS (in $11)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3:i64 = var
%4 = add %2, %3 (hasExternalUses)
%5 = udiv %4, 1000000000:i64
%6:i32 = var
%7 = add %6, -4:i32
%8:i32 = var
%9 = ult %7, %8
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
%21 = block 2
%22:i64 = var
%23 = slt %22, 0:i64
blockpc %21 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %21 1 %25 1
%26:i64 = var
%27 = phi %21, %26, %22
%28 = and %27, 9218868437227405312:i64
%29 = eq %28, 9218868437227405312:i64
%30:i32 = zext %29
%31 = eq %30, 0:i32
pc %11 1
pc %20 1
pc %31 1
infer %5


; start LHS (in $11)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3:i64 = var
%4 = add %2, %3 (hasExternalUses)
%5 = udiv %4, 1000000000:i64 (hasExternalUses)
%6 = mul %5, 1000000000:i64
%7:i32 = var
%8 = add %7, -4:i32
%9:i32 = var
%10 = ult %8, %9
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13 = block 2
%14:i32 = var
%15 = ne %14, 0:i32
blockpc %13 0 %15 1
%16 = eq %14, 0:i32
blockpc %13 1 %16 1
%17:i32 = var
%18 = add %17, -28:i32
%19:i32 = var
%20 = phi %13, %18, %19
%21 = slt 0:i32, %20
%22 = block 2
%23:i64 = var
%24 = slt %23, 0:i64
blockpc %22 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %22 1 %26 1
%27:i64 = var
%28 = phi %22, %27, %23
%29 = and %28, 9218868437227405312:i64
%30 = eq %29, 9218868437227405312:i64
%31:i32 = zext %30
%32 = eq %31, 0:i32
pc %12 1
pc %21 1
pc %32 1
infer %6


; start LHS (in $11)
%0:i64 = var
%1:i64 = var
%2 = shl %0, %1
%3:i64 = var
%4 = add %2, %3
%5 = udiv %4, 1000000000:i64 (hasExternalUses)
%6 = mul %5, 1000000000:i64
%7 = sub %4, %6
%8:i32 = var
%9 = add %8, -4:i32
%10:i32 = var
%11 = ult %9, %10
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = block 2
%15:i32 = var
%16 = ne %15, 0:i32
blockpc %14 0 %16 1
%17 = eq %15, 0:i32
blockpc %14 1 %17 1
%18:i32 = var
%19 = add %18, -28:i32
%20:i32 = var
%21 = phi %14, %19, %20
%22 = slt 0:i32, %21
%23 = block 2
%24:i64 = var
%25 = slt %24, 0:i64
blockpc %23 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %23 1 %27 1
%28:i64 = var
%29 = phi %23, %28, %24
%30 = and %29, 9218868437227405312:i64
%31 = eq %30, 9218868437227405312:i64
%32:i32 = zext %31
%33 = eq %32, 0:i32
pc %13 1
pc %22 1
pc %33 1
infer %7


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -4:i32
%2:i32 = var
%3 = add %2, -4:i32
%4:i32 = var
%5 = ult %3, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = block 2
%9:i32 = var
%10 = ne %9, 0:i32
blockpc %8 0 %10 1
%11 = eq %9, 0:i32
blockpc %8 1 %11 1
%12:i32 = var
%13 = add %12, -28:i32
%14:i32 = var
%15 = phi %8, %13, %14
%16 = slt 0:i32, %15
%17 = block 2
%18:i64 = var
%19 = slt %18, 0:i64
blockpc %17 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %17 1 %21 1
%22:i64 = var
%23 = phi %17, %22, %18
%24 = and %23, 9218868437227405312:i64
%25 = eq %24, 9218868437227405312:i64
%26:i32 = zext %25
%27 = eq %26, 0:i32
pc %7 1
pc %16 1
pc %27 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -4:i32 (hasExternalUses)
%2:i32 = var
%3 = ult %1, %2
%4:i32 = var
%5 = add %4, -4:i32
%6 = ult %5, %2
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9 = block 2
%10:i32 = var
%11 = ne %10, 0:i32
blockpc %9 0 %11 1
%12 = eq %10, 0:i32
blockpc %9 1 %12 1
%13:i32 = var
%14 = add %13, -28:i32
%15:i32 = var
%16 = phi %9, %14, %15
%17 = slt 0:i32, %16
%18 = block 2
%19:i64 = var
%20 = slt %19, 0:i64
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23:i64 = var
%24 = phi %18, %23, %19
%25 = and %24, 9218868437227405312:i64
%26 = eq %25, 9218868437227405312:i64
%27:i32 = zext %26
%28 = eq %27, 0:i32
pc %8 1
pc %17 1
pc %28 1
infer %3


; start LHS (in $11)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = add %2, -4:i32
%4:i32 = var
%5 = ult %3, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = block 2
%9:i32 = var
%10 = ne %9, 0:i32
blockpc %8 0 %10 1
%11 = eq %9, 0:i32
blockpc %8 1 %11 1
%12:i32 = var
%13 = add %12, -28:i32
%14:i32 = var
%15 = phi %8, %13, %14
%16 = slt 0:i32, %15
%17 = block 2
%18:i64 = var
%19 = slt %18, 0:i64
blockpc %17 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %17 1 %21 1
%22:i64 = var
%23 = phi %17, %22, %18
%24 = and %23, 9218868437227405312:i64
%25 = eq %24, 9218868437227405312:i64
%26:i32 = zext %25
%27 = eq %26, 0:i32
pc %7 1
pc %16 1
pc %27 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -4:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = add %6, -4:i32
%8 = ult %7, %0
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
%20 = block 2
%21:i64 = var
%22 = slt %21, 0:i64
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25:i64 = var
%26 = phi %20, %25, %21
%27 = and %26, 9218868437227405312:i64
%28 = eq %27, 9218868437227405312:i64
%29:i32 = zext %28
%30 = eq %29, 0:i32
pc %5 1
pc %10 1
pc %19 1
pc %30 1
infer %1


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = add %1, -4:i32 (hasExternalUses)
%4 = phi %2, %1, %3
%5 = phi %0, %1, %4
%6:i32 = var
%7 = ult %5, %6
%8 = add %6, -4:i32
%9 = ult %8, %1
blockpc %0 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %0 1 %11 1
%12:i32 = var
%13 = eq %12, 0:i32
blockpc %2 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %2 1 %15 1
%16 = block 2
%17:i32 = var
%18 = ne %17, 0:i32
blockpc %16 0 %18 1
%19 = eq %17, 0:i32
blockpc %16 1 %19 1
%20:i32 = var
%21 = add %20, -28:i32
%22:i32 = var
%23 = phi %16, %21, %22
%24 = slt 0:i32, %23
%25:i32 = var
pc %24 1
pc %25 1
infer %7


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -4:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -4:i32
%5:i32 = var
%6 = ult %4, %5
blockpc %2 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %2 1 %8 1
%9 = block 2
%10:i32 = var
%11 = eq %10, 0:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = add %5, -4:i32
%15 = phi %9, %5, %14
%16 = phi %2, %5, %15
%17 = ult %16, %3
%18 = block 2
%19:i32 = var
%20 = ne %19, 0:i32
blockpc %18 0 %20 1
%21 = eq %19, 0:i32
blockpc %18 1 %21 1
%22:i32 = var
%23 = add %22, -28:i32
%24:i32 = var
%25 = phi %18, %23, %24
%26 = slt 0:i32, %25
%27:i32 = var
pc %17 1
pc %26 1
pc %27 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3:i32 = var
%4 = add %3, -4:i32
%5:i32 = var
%6 = ult %4, %5
blockpc %2 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %2 1 %8 1
%9 = block 2
%10:i32 = var
%11 = eq %10, 0:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = add %5, -4:i32
%15 = phi %9, %5, %14
%16 = phi %2, %5, %15
%17 = ult %16, %3
%18 = block 2
%19:i32 = var
%20 = ne %19, 0:i32
blockpc %18 0 %20 1
%21 = eq %19, 0:i32
blockpc %18 1 %21 1
%22:i32 = var
%23 = add %22, -28:i32
%24:i32 = var
%25 = phi %18, %23, %24
%26 = slt 0:i32, %25
%27:i32 = var
pc %17 1
pc %26 1
pc %27 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4 = block 2
%5:i32 = var
%6 = add %5, -4:i32
%7:i32 = var
%8 = ult %6, %7
blockpc %4 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %4 1 %10 1
%11 = block 2
%12:i32 = var
%13 = eq %12, 0:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16 = add %7, -4:i32
%17 = phi %11, %7, %16
%18 = phi %4, %7, %17
%19 = ult %18, %5
%20 = block 2
%21:i32 = var
%22 = ne %21, 0:i32
blockpc %20 0 %22 1
%23 = eq %21, 0:i32
blockpc %20 1 %23 1
%24:i32 = var
%25:i32 = var
%26 = phi %20, %24, %25
%27 = slt 0:i32, %26
%28:i32 = var
pc %19 1
pc %27 1
pc %28 1
infer %3


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = add %1, -4:i32 (hasExternalUses)
%4 = phi %2, %1, %3
%5 = phi %0, %1, %4
%6:i32 = var
%7 = add %6, -4:i32 (hasExternalUses)
%8 = ult %5, %7
%9:i32 = var
%10 = add %9, -4:i32
%11 = ult %10, %1
blockpc %0 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %0 1 %13 1
%14:i32 = var
%15 = eq %14, 0:i32
blockpc %2 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %2 1 %17 1
%18 = ult %5, %9
%19 = block 2
%20:i32 = var
%21 = ne %20, 0:i32
blockpc %19 0 %21 1
%22 = eq %20, 0:i32
blockpc %19 1 %22 1
%23:i32 = var
%24 = add %23, -28:i32
%25:i32 = var
%26 = phi %19, %24, %25
%27 = slt 0:i32, %26
%28:i32 = var
pc %18 1
pc %27 1
pc %28 1
infer %8


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = phi %3, %4, 29:i32
%6 = phi %1, %2, %5
%7 = sub %0, %6
%8 = slt %4, 29:i32
blockpc %3 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %3 1 %10 1
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
%20 = block 2
%21:i64 = var
%22 = slt %21, 0:i64
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25:i64 = var
%26 = phi %20, %25, %21
%27 = and %26, 9218868437227405312:i64
%28 = eq %27, 9218868437227405312:i64
%29:i32 = zext %28
%30 = eq %29, 0:i32
pc %19 1
pc %30 1
infer %7


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = phi %3, %4, 29:i32
%6 = phi %1, %2, %5
%7 = sub %0, %6 (hasExternalUses)
%8 = slt 0:i32, %7
%9 = slt %4, 29:i32
blockpc %3 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %3 1 %11 1
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
%21 = block 2
%22:i64 = var
%23 = slt %22, 0:i64
blockpc %21 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %21 1 %25 1
%26:i64 = var
%27 = phi %21, %26, %22
%28 = and %27, 9218868437227405312:i64
%29 = eq %28, 9218868437227405312:i64
%30:i32 = zext %29
%31 = eq %30, 0:i32
pc %20 1
pc %31 1
infer %8


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 29:i32
%7 = phi %2, %3, %6
%8 = sub %1, %7 (hasExternalUses)
%9 = block 2
%10:i32 = var
%11 = add %10, -28:i32 (hasExternalUses)
%12:i32 = var
%13 = phi %9, %11, %12
%14 = phi %0, %8, %13
%15 = slt %14, 0:i32
%16 = slt 0:i32, %13
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = slt %5, 29:i32
blockpc %4 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %4 1 %21 1
%22:i32 = var
%23 = ne %22, 0:i32
blockpc %9 0 %23 1
%24 = eq %22, 0:i32
blockpc %9 1 %24 1
%25:i32 = var
pc %25 1
infer %15


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = add %8, 25:i32
%10 = block 2
%11:i32 = var
%12 = ne %11, 0:i32
blockpc %10 0 %12 1
%13 = eq %11, 0:i32
blockpc %10 1 %13 1
%14:i32 = var
%15 = add %14, -28:i32
%16:i32 = var
%17 = phi %10, %15, %16
%18 = slt 0:i32, %17
blockpc %0 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %0 1 %20 1
%21 = slt %6, 0:i32
blockpc %5 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %5 1 %23 1
%24:i32 = var
%25:i32 = var
pc %24 1
pc %25 1
infer %9


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = add %8, 25:i32
%10 = sdiv %9, 9:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %0 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %0 1 %21 1
%22 = slt %6, 0:i32
blockpc %5 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %5 1 %24 1
%25:i32 = var
%26:i32 = var
pc %25 1
pc %26 1
infer %10


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = add %8, 25:i32
%10 = sdiv %9, 9:i32
%11 = and %10, -1:i32
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
blockpc %0 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1
%23 = slt %6, 0:i32
blockpc %5 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %5 1 %25 1
%26:i32 = var
%27:i32 = var
pc %26 1
pc %27 1
infer %11


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = add %8, 25:i32
%10 = sdiv %9, 9:i32
%11 = and %10, -1:i32
%12 = add %11, 1:i32
%13 = block 2
%14:i32 = var
%15 = ne %14, 0:i32
blockpc %13 0 %15 1
%16 = eq %14, 0:i32
blockpc %13 1 %16 1
%17:i32 = var
%18 = add %17, -28:i32
%19:i32 = var
%20 = phi %13, %18, %19
%21 = slt 0:i32, %20
blockpc %0 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %0 1 %23 1
%24 = slt %6, 0:i32
blockpc %5 0 %24 1
%25:i32 = var
blockpc %5 1 %25 1
%26:i32 = var
%27:i32 = var
pc %26 1
pc %27 1
infer %12


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = or %5, 32:i32 (hasExternalUses)
%7 = phi %0, %4, %6
%8 = eq %7, 102:i32
%9 = block 2
%10:i32 = var
%11 = ne %10, 0:i32
blockpc %9 0 %11 1
%12 = eq %10, 0:i32
blockpc %9 1 %12 1
%13:i32 = var
%14 = add %13, -28:i32
%15:i32 = var
%16 = phi %9, %14, %15
%17 = slt 0:i32, %16
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20:i32 = var
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = slt %23, 29:i32
blockpc %22 0 %24 1
%25:i32 = var
blockpc %22 1 %25 1
%26 = phi %22, %23, 29:i32
%27 = phi %1, %21, %26
%28 = sub %20, %27
%29 = phi %0, %28, %16
%30 = slt %29, 0:i32
%31:i32 = var
pc %30 1
pc %31 1
infer %8


; start LHS (in $11)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = ne %4, 0:i32
blockpc %3 0 %5 1
%6 = eq %4, 0:i32
blockpc %3 1 %6 1
%7:i32 = var
%8 = add %7, -28:i32
%9:i32 = var
%10 = phi %3, %8, %9
%11 = slt 0:i32, %10
blockpc %2 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %2 1 %13 1
%14:i32 = var
%15 = block 2
%16:i32 = var
%17 = block 2
%18:i32 = var
%19 = slt %18, 29:i32
blockpc %17 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %17 1 %21 1
%22 = phi %17, %18, 29:i32
%23 = phi %15, %16, %22
%24 = sub %14, %23
%25 = phi %2, %24, %10
%26 = slt %25, 0:i32
%27:i32 = var
pc %26 1
pc %27 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = sub 0:i32, %0 (hasExternalUses)
%2 = slt %1, 9:i32
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = ne %5, 0:i32
blockpc %4 0 %6 1
%7 = eq %5, 0:i32
blockpc %4 1 %7 1
%8:i32 = var
%9 = add %8, -28:i32
%10:i32 = var
%11 = phi %4, %9, %10
%12 = slt 0:i32, %11
blockpc %3 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %3 1 %14 1
%15:i32 = var
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = slt %19, 29:i32
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23 = phi %18, %19, 29:i32
%24 = phi %16, %17, %23
%25 = sub %15, %24
%26 = phi %3, %25, %11
%27 = slt %26, 0:i32
%28:i32 = var
pc %27 1
pc %28 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = ne %5, 0:i32
blockpc %4 0 %6 1
%7 = eq %5, 0:i32
blockpc %4 1 %7 1
%8:i32 = var
%9 = add %8, -28:i32
%10:i32 = var
%11 = phi %4, %9, %10
%12 = slt 0:i32, %11
blockpc %3 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %3 1 %14 1
%15:i32 = var
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = slt %19, 29:i32
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23 = phi %18, %19, 29:i32
%24 = phi %16, %17, %23
%25 = sub %15, %24
%26 = phi %3, %25, %11
%27 = slt %26, 0:i32
%28:i32 = var
pc %27 1
pc %28 1
infer %2


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = sub 0:i32, %1 (hasExternalUses)
%3 = phi %0, %2, 9:i32
%4 = shl 1:i32, %3
%5 = slt %2, 9:i32
blockpc %0 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %0 1 %7 1
%8:i32 = var
%9:i32 = var
%10 = ult %8, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
blockpc %11 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %11 1 %22 1
%23:i32 = var
%24 = block 2
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = phi %26, %29, 29:i32
%31 = phi %24, %25, %30
%32 = sub %23, %31
%33 = phi %11, %32, %19
%34 = slt %33, 0:i32
%35:i32 = var
pc %10 1
pc %34 1
pc %35 1
infer %4


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = sub 0:i32, %1 (hasExternalUses)
%3 = phi %0, %2, 9:i32
%4 = shl 1:i32, %3
%5 = add %4, -1:i32
%6 = slt %2, 9:i32
blockpc %0 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %0 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = ult %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = ne %14, 0:i32
blockpc %13 0 %15 1
%16 = eq %14, 0:i32
blockpc %13 1 %16 1
%17:i32 = var
%18 = add %17, -28:i32
%19:i32 = var
%20 = phi %13, %18, %19
%21 = slt 0:i32, %20
blockpc %12 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %12 1 %23 1
%24:i32 = var
%25 = phi %12, %24, %20
%26 = slt %25, 0:i32
%27:i32 = var
pc %11 1
pc %26 1
pc %27 1
infer %5


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = sub 0:i32, %1 (hasExternalUses)
%3 = phi %0, %2, 9:i32
%4 = lshr 1000000000:i32, %3
%5 = slt %2, 9:i32
blockpc %0 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %0 1 %7 1
%8:i32 = var
%9:i32 = var
%10 = ult %8, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
blockpc %11 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %11 1 %22 1
%23:i32 = var
%24 = block 2
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = phi %26, %29, 29:i32
%31 = phi %24, %25, %30
%32 = sub %23, %31
%33 = phi %11, %32, %19
%34 = slt %33, 0:i32
%35:i32 = var
pc %10 1
pc %34 1
pc %35 1
infer %4


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = sub 0:i32, %2 (hasExternalUses)
%4 = phi %1, %3, 9:i32
%5 = lshr %0, %4
%6 = slt %3, 9:i32
blockpc %1 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %1 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = ult %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = ne %14, 0:i32
blockpc %13 0 %15 1
%16 = eq %14, 0:i32
blockpc %13 1 %16 1
%17:i32 = var
%18 = add %17, -28:i32
%19:i32 = var
%20 = phi %13, %18, %19
%21 = slt 0:i32, %20
blockpc %12 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %12 1 %23 1
%24:i32 = var
%25 = phi %12, %24, %20
%26 = slt %25, 0:i32
%27:i32 = var
pc %11 1
pc %26 1
pc %27 1
infer %5


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = sub 0:i32, %2 (hasExternalUses)
%4 = phi %1, %3, 9:i32
%5 = lshr %0, %4
%6:i32 = var
%7 = add %5, %6
%8 = slt %3, 9:i32
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
%11:i32 = var
%12:i32 = var
%13 = ult %11, %12
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = ne %16, 0:i32
blockpc %15 0 %17 1
%18 = eq %16, 0:i32
blockpc %15 1 %18 1
%19:i32 = var
%20 = add %19, -28:i32
%21:i32 = var
%22 = phi %15, %20, %21
%23 = slt 0:i32, %22
blockpc %14 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %14 1 %25 1
%26:i32 = var
%27 = phi %14, %26, %22
%28 = slt %27, 0:i32
%29:i32 = var
pc %13 1
pc %28 1
pc %29 1
infer %7


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = sub 0:i32, %2 (hasExternalUses)
%4 = phi %1, %3, 9:i32
%5 = shl 1:i32, %4
%6 = add %5, -1:i32
%7 = and %0, %6
%8 = slt %3, 9:i32
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
%11:i32 = var
%12:i32 = var
%13 = ult %11, %12
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = ne %16, 0:i32
blockpc %15 0 %17 1
%18 = eq %16, 0:i32
blockpc %15 1 %18 1
%19:i32 = var
%20 = add %19, -28:i32
%21:i32 = var
%22 = phi %15, %20, %21
%23 = slt 0:i32, %22
blockpc %14 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %14 1 %25 1
%26:i32 = var
%27 = phi %14, %26, %22
%28 = slt %27, 0:i32
%29:i32 = var
pc %13 1
pc %28 1
pc %29 1
infer %7


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = sub 0:i32, %2 (hasExternalUses)
%4 = phi %1, %3, 9:i32
%5 = shl 1:i32, %4
%6 = add %5, -1:i32
%7 = and %0, %6
%8 = lshr 1000000000:i32, %4
%9 = mul %7, %8
%10 = slt %3, 9:i32
blockpc %1 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %1 1 %12 1
%13:i32 = var
%14:i32 = var
%15 = ult %13, %14
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = ne %18, 0:i32
blockpc %17 0 %19 1
%20 = eq %18, 0:i32
blockpc %17 1 %20 1
%21:i32 = var
%22 = add %21, -28:i32
%23:i32 = var
%24 = phi %17, %22, %23
%25 = slt 0:i32, %24
blockpc %16 0 %25 1
%26:i32 = var
blockpc %16 1 %26 1
%27:i32 = var
%28 = phi %16, %27, %24
%29 = slt %28, 0:i32
%30:i32 = var
pc %15 1
pc %29 1
pc %30 1
infer %9


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3:i32 = var
%4 = ult %2, %3
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = ne %7, 0:i32
blockpc %6 0 %8 1
%9 = eq %7, 0:i32
blockpc %6 1 %9 1
%10:i32 = var
%11 = add %10, -28:i32
%12:i32 = var
%13 = phi %6, %11, %12
%14 = slt 0:i32, %13
blockpc %5 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %5 1 %16 1
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
%22 = slt %21, 29:i32
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25 = phi %20, %21, 29:i32
%26 = phi %18, %19, %25
%27 = sub %17, %26
%28 = phi %5, %27, %13
%29 = slt %28, 0:i32
%30:i32 = var
pc %4 1
pc %29 1
pc %30 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32 (hasExternalUses)
%2:i32 = var
%3 = ult %1, %2
%4:i32 = var
%5 = ult %4, %2
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = ne %8, 0:i32
blockpc %7 0 %9 1
%10 = eq %8, 0:i32
blockpc %7 1 %10 1
%11:i32 = var
%12 = add %11, -28:i32
%13:i32 = var
%14 = phi %7, %12, %13
%15 = slt 0:i32, %14
blockpc %6 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %6 1 %17 1
%18:i32 = var
%19 = block 2
%20:i32 = var
%21 = block 2
%22:i32 = var
%23 = slt %22, 29:i32
blockpc %21 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %21 1 %25 1
%26 = phi %21, %22, 29:i32
%27 = phi %19, %20, %26
%28 = sub %18, %27
%29 = phi %6, %28, %14
%30 = slt %29, 0:i32
%31:i32 = var
pc %5 1
pc %30 1
pc %31 1
infer %3


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = ult %0, %2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = ne %6, 0:i32
blockpc %5 0 %7 1
%8 = eq %6, 0:i32
blockpc %5 1 %8 1
%9:i32 = var
%10 = add %9, -28:i32
%11:i32 = var
%12 = phi %5, %10, %11
%13 = slt 0:i32, %12
blockpc %4 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %4 1 %15 1
%16:i32 = var
%17 = block 2
%18:i32 = var
%19 = block 2
%20:i32 = var
%21 = slt %20, 29:i32
blockpc %19 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %19 1 %23 1
%24 = phi %19, %20, 29:i32
%25 = phi %17, %18, %24
%26 = sub %16, %25
%27 = phi %4, %26, %12
%28 = slt %27, 0:i32
%29:i32 = var
pc %3 1
pc %28 1
pc %29 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3:i32 = var
%4 = ult %2, %3
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = ne %7, 0:i32
blockpc %6 0 %8 1
%9 = eq %7, 0:i32
blockpc %6 1 %9 1
%10:i32 = var
%11 = add %10, -28:i32
%12:i32 = var
%13 = phi %6, %11, %12
%14 = slt 0:i32, %13
blockpc %5 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %5 1 %16 1
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
%22 = slt %21, 29:i32
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25 = phi %20, %21, 29:i32
%26 = phi %18, %19, %25
%27 = sub %17, %26
%28 = phi %5, %27, %13
%29 = slt %28, 0:i32
%30:i32 = var
pc %4 1
pc %29 1
pc %30 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = sub 0:i32, %2 (hasExternalUses)
%4 = phi %1, %3, 9:i32
%5 = shl 1:i32, %4
%6 = add %5, -1:i32
%7 = and %0, %6
%8 = lshr 1000000000:i32, %4
%9 = mul %7, %8 (hasExternalUses)
%10 = eq %9, 0:i32
%11 = slt %3, 9:i32
blockpc %1 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %1 1 %13 1
%14:i32 = var
%15:i32 = var
%16 = ult %14, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = ne %19, 0:i32
blockpc %18 0 %20 1
%21 = eq %19, 0:i32
blockpc %18 1 %21 1
%22:i32 = var
%23 = add %22, -28:i32
%24:i32 = var
%25 = phi %18, %23, %24
%26 = slt 0:i32, %25
blockpc %17 0 %26 1
%27:i32 = var
blockpc %17 1 %27 1
%28:i32 = var
%29 = phi %17, %28, %25
%30 = slt %29, 0:i32
%31:i32 = var
pc %16 1
pc %30 1
pc %31 1
infer %10


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
blockpc %3 0 %4 1
%5:i32 = var
blockpc %3 1 %5 1
%6:i32 = var
%7 = sub 0:i32, %6
%8 = phi %3, %7, 9:i32
%9 = shl 1:i32, %8
%10 = add %9, -1:i32
%11 = and %2, %10
%12 = lshr 1000000000:i32, %8
%13 = mul %11, %12
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17:i32 = var
%18 = ult %17, %0
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = ne %21, 0:i32
blockpc %20 0 %22 1
%23 = eq %21, 0:i32
blockpc %20 1 %23 1
%24:i32 = var
%25 = add %24, -28:i32
%26:i32 = var
%27 = phi %20, %25, %26
%28 = slt 0:i32, %27
blockpc %19 0 %28 1
%29:i32 = var
blockpc %19 1 %29 1
%30:i32 = var
%31 = phi %19, %30, %27
%32 = slt %31, 0:i32
%33:i32 = var
pc %16 1
pc %18 1
pc %32 1
pc %33 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = ult %0, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = ne %8, 0:i32
blockpc %7 0 %9 1
%10 = eq %8, 0:i32
blockpc %7 1 %10 1
%11:i32 = var
%12 = add %11, -28:i32
%13:i32 = var
%14 = phi %7, %12, %13
%15 = slt 0:i32, %14
blockpc %6 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %6 1 %17 1
%18:i32 = var
%19 = block 2
%20:i32 = var
%21 = block 2
%22:i32 = var
%23 = slt %22, 29:i32
blockpc %21 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %21 1 %25 1
%26 = phi %21, %22, 29:i32
%27 = phi %19, %20, %26
%28 = sub %18, %27
%29 = phi %6, %28, %14
%30 = slt %29, 0:i32
%31:i32 = var
pc %5 1
pc %30 1
pc %31 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3:i32 = var
%4 = ult %2, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = ne %9, 0:i32
blockpc %8 0 %10 1
%11 = eq %9, 0:i32
blockpc %8 1 %11 1
%12:i32 = var
%13 = add %12, -28:i32
%14:i32 = var
%15 = phi %8, %13, %14
%16 = slt 0:i32, %15
blockpc %7 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %7 1 %18 1
%19:i32 = var
%20 = block 2
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = slt %23, 29:i32
blockpc %22 0 %24 1
%25:i32 = var
blockpc %22 1 %25 1
%26 = phi %22, %23, 29:i32
%27 = phi %20, %21, %26
%28 = sub %19, %27
%29 = phi %7, %28, %15
%30 = slt %29, 0:i32
%31:i32 = var
pc %6 1
pc %30 1
pc %31 1
infer %1


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, 4:i32 (hasExternalUses)
%4 = phi %1, %2, %3
%5 = phi %0, %4, %2
%6 = block 2
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13:i32 = var
%14 = add %13, 32:i32 (hasExternalUses)
%15 = add %14, 288:i32 (hasExternalUses)
%16 = phi %12, %14, %15
%17 = phi %7, %11, %16
%18 = block 2
%19:i32 = var
%20 = add %19, 4:i32 (hasExternalUses)
%21 = phi %18, %20, %19
%22 = block 2
%23 = add %19, 4:i32 (hasExternalUses)
%24 = phi %22, %23, %19
%25 = phi %0, %21, %24
%26 = phi %6, %17, %25
%27 = sub %5, %26
%28 = ult %19, %2
blockpc %0 0 %28 1
%29:i32 = var
blockpc %0 1 %29 1
%30:i32 = var
blockpc %1 0 %30 1
%31:i32 = var
blockpc %1 1 %31 1
%32:i32 = var
blockpc %6 0 %32 1
%33:i32 = var
blockpc %6 1 %33 1
%34:i32 = var
blockpc %7 0 %34 1
%35:i32 = var
blockpc %7 1 %35 1
%36:i32 = var
blockpc %12 0 %36 1
%37:i32 = var
blockpc %12 1 %37 1
%38:i32 = var
blockpc %18 0 %38 1
%39:i32 = var
blockpc %18 1 %39 1
%40:i32 = var
blockpc %22 0 %40 1
%41:i32 = var
blockpc %22 1 %41 1
%42:i32 = var
%43:i32 = var
pc %42 1
pc %43 1
infer %27


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, 4:i32 (hasExternalUses)
%4 = phi %1, %2, %3
%5 = phi %0, %4, %2
%6 = block 2
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13:i32 = var
%14 = add %13, 32:i32 (hasExternalUses)
%15 = add %14, 288:i32 (hasExternalUses)
%16 = phi %12, %14, %15
%17 = phi %7, %11, %16
%18 = block 2
%19:i32 = var
%20 = add %19, 4:i32 (hasExternalUses)
%21 = phi %18, %20, %19
%22 = block 2
%23 = add %19, 4:i32 (hasExternalUses)
%24 = phi %22, %23, %19
%25 = phi %0, %21, %24
%26 = phi %6, %17, %25
%27 = sub %5, %26
%28 = ashr %27, 2:i32
%29 = ult %19, %2
blockpc %0 0 %29 1
%30:i32 = var
blockpc %0 1 %30 1
%31:i32 = var
blockpc %1 0 %31 1
%32:i32 = var
blockpc %1 1 %32 1
%33:i32 = var
blockpc %6 0 %33 1
%34:i32 = var
blockpc %6 1 %34 1
%35:i32 = var
blockpc %7 0 %35 1
%36:i32 = var
blockpc %7 1 %36 1
%37:i32 = var
blockpc %12 0 %37 1
%38:i32 = var
blockpc %12 1 %38 1
%39:i32 = var
blockpc %18 0 %39 1
%40:i32 = var
blockpc %18 1 %40 1
%41:i32 = var
blockpc %22 0 %41 1
%42:i32 = var
blockpc %22 1 %42 1
%43:i32 = var
%44:i32 = var
pc %43 1
pc %44 1
infer %28


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = add %8, 25:i32
%10 = sdiv %9, 9:i32
%11 = and %10, -1:i32
%12 = add %11, 1:i32 (hasExternalUses)
%13 = shl %12, 2:i32
%14 = block 2
%15:i32 = var
%16 = ne %15, 0:i32
blockpc %14 0 %16 1
%17 = eq %15, 0:i32
blockpc %14 1 %17 1
%18:i32 = var
%19 = add %18, -28:i32
%20:i32 = var
%21 = phi %14, %19, %20
%22 = slt 0:i32, %21
blockpc %0 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %0 1 %24 1
%25 = slt %6, 0:i32
blockpc %5 0 %25 1
%26:i32 = var
blockpc %5 1 %26 1
%27:i32 = var
%28:i32 = var
pc %27 1
pc %28 1
infer %13


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = block 2
%7:i32 = var
%8 = add %7, 32:i32 (hasExternalUses)
%9 = add %8, 288:i32 (hasExternalUses)
%10 = phi %6, %8, %9
%11 = phi %1, %5, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = add %14, 4:i32 (hasExternalUses)
%16 = phi %13, %15, %14
%17 = block 2
%18 = add %14, 4:i32 (hasExternalUses)
%19 = phi %17, %18, %14
%20 = phi %12, %16, %19
%21 = phi %0, %11, %20
%22:i32 = var
%23:i32 = var
%24 = phi %2, %22, %23
%25 = block 2
%26:i32 = var
%27 = phi %25, 6:i32, %26
%28 = phi %1, %24, %27
%29 = add %28, 25:i32
%30 = sdiv %29, 9:i32
%31 = and %30, -1:i32
%32 = add %31, 1:i32 (hasExternalUses)
%33 = shl %32, 2:i32
%34 = add %21, %33
%35:i32 = var
blockpc %0 0 %35 1
%36:i32 = var
blockpc %0 1 %36 1
%37:i32 = var
blockpc %1 0 %37 1
%38:i32 = var
blockpc %1 1 %38 1
%39:i32 = var
blockpc %6 0 %39 1
%40:i32 = var
blockpc %6 1 %40 1
%41:i32 = var
blockpc %12 0 %41 1
%42:i32 = var
blockpc %12 1 %42 1
%43:i32 = var
blockpc %13 0 %43 1
%44:i32 = var
blockpc %13 1 %44 1
%45:i32 = var
blockpc %17 0 %45 1
%46:i32 = var
blockpc %17 1 %46 1
%47:i32 = var
blockpc %25 0 %47 1
%48:i32 = var
blockpc %25 1 %48 1
%49:i32 = var
%50:i32 = var
pc %49 1
pc %50 1
infer %34


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = add %8, 25:i32
%10 = sdiv %9, 9:i32
%11 = and %10, -1:i32
%12 = add %11, 1:i32 (hasExternalUses)
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = add %15, 4:i32 (hasExternalUses)
%17 = phi %14, %15, %16
%18 = phi %13, %17, %15
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %1, %20, %21
%23 = block 2
%24:i32 = var
%25 = add %24, 32:i32 (hasExternalUses)
%26 = add %25, 288:i32 (hasExternalUses)
%27 = phi %23, %25, %26
%28 = phi %0, %22, %27
%29 = block 2
%30:i32 = var
%31:i32 = var
%32 = phi %29, %30, %31
%33 = block 2
%34:i32 = var
%35 = phi %33, %34, %31
%36 = phi %13, %32, %35
%37 = phi %19, %28, %36
%38 = sub %18, %37
%39 = ashr %38, 2:i32
%40 = slt %12, %39
%41:i32 = var
blockpc %0 0 %41 1
%42:i32 = var
blockpc %0 1 %42 1
%43:i32 = var
blockpc %5 0 %43 1
%44:i32 = var
blockpc %5 1 %44 1
%45:i32 = var
blockpc %13 0 %45 1
%46:i32 = var
blockpc %13 1 %46 1
%47:i32 = var
blockpc %14 0 %47 1
%48:i32 = var
blockpc %14 1 %48 1
%49:i32 = var
blockpc %19 0 %49 1
%50:i32 = var
blockpc %19 1 %50 1
%51:i32 = var
blockpc %23 0 %51 1
%52:i32 = var
blockpc %23 1 %52 1
%53:i32 = var
blockpc %29 0 %53 1
%54:i32 = var
blockpc %29 1 %54 1
%55:i32 = var
blockpc %33 0 %55 1
%56:i32 = var
blockpc %33 1 %56 1
%57:i32 = var
%58:i32 = var
pc %57 1
pc %58 1
infer %40


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = sub 0:i32, %2 (hasExternalUses)
%4 = phi %1, %3, 9:i32
%5 = add %0, %4
%6 = slt %3, 9:i32
blockpc %1 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %1 1 %8 1
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = ne %11, 0:i32
blockpc %10 0 %12 1
%13 = eq %11, 0:i32
blockpc %10 1 %13 1
%14:i32 = var
%15 = add %14, -28:i32
%16:i32 = var
%17 = phi %10, %15, %16
%18 = slt 0:i32, %17
blockpc %9 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %9 1 %20 1
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28 = phi %24, %27, 29:i32
%29 = phi %22, %23, %28
%30 = sub %21, %29
%31 = phi %9, %30, %17
%32 = slt %31, 0:i32
%33:i32 = var
pc %32 1
pc %33 1
infer %5


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = sub 0:i32, %2 (hasExternalUses)
%4 = phi %1, %3, 9:i32
%5 = add %0, %4 (hasExternalUses)
%6 = slt %5, 0:i32
%7 = slt %3, 9:i32
blockpc %1 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %1 1 %9 1
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %10 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %10 1 %21 1
%22:i32 = var
%23 = block 2
%24:i32 = var
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29 = phi %25, %28, 29:i32
%30 = phi %23, %24, %29
%31 = sub %22, %30
%32 = phi %10, %31, %18
%33 = slt %32, 0:i32
%34:i32 = var
pc %33 1
pc %34 1
infer %6


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = add %3, 4:i32 (hasExternalUses)
%5 = phi %2, %4, %3
%6 = block 2
%7 = add %3, 4:i32 (hasExternalUses)
%8 = phi %6, %7, %3
%9 = phi %1, %5, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = block 2
%14:i32 = var
%15 = block 2
%16 = add %14, -4:i32 (hasExternalUses)
%17 = phi %15, %14, %16
%18 = phi %13, %14, %17
%19 = phi %11, %12, %18
%20 = block 2
%21:i32 = var
%22 = add %21, 32:i32 (hasExternalUses)
%23 = add %22, 288:i32 (hasExternalUses)
%24 = phi %20, %22, %23
%25 = phi %10, %19, %24
%26 = phi %0, %9, %25
%27 = block 2
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = phi %11, %29, %30
%32 = phi %10, %31, %24
%33 = phi %28, %32, %9
%34:i32 = var
%35 = add %33, %34 (hasExternalUses)
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = phi %1, %39, %37
%41 = phi %27, %35, %40
%42:i32 = var
%43 = block 2
%44:i32 = var
%45:i32 = var
%46 = phi %43, %44, %45
%47 = phi %11, %42, %46
%48:i32 = var
%49 = phi %10, %47, %48
%50 = phi %0, %41, %49
%51 = ult %26, %50
%52:i32 = var
blockpc %0 0 %52 1
%53:i32 = var
blockpc %0 1 %53 1
%54:i32 = var
blockpc %1 0 %54 1
%55:i32 = var
blockpc %1 1 %55 1
%56:i32 = var
blockpc %2 0 %56 1
%57:i32 = var
blockpc %2 1 %57 1
%58:i32 = var
blockpc %6 0 %58 1
%59:i32 = var
blockpc %6 1 %59 1
%60:i32 = var
blockpc %10 0 %60 1
%61:i32 = var
blockpc %10 1 %61 1
%62:i32 = var
blockpc %13 0 %62 1
%63:i32 = var
blockpc %13 1 %63 1
%64:i32 = var
blockpc %15 0 %64 1
%65:i32 = var
blockpc %15 1 %65 1
%66:i32 = var
blockpc %20 0 %66 1
%67:i32 = var
blockpc %20 1 %67 1
%68:i32 = var
blockpc %27 0 %68 1
%69:i32 = var
blockpc %27 1 %69 1
%70:i32 = var
blockpc %28 0 %70 1
%71:i32 = var
blockpc %28 1 %71 1
%72:i32 = var
blockpc %36 0 %72 1
%73:i32 = var
blockpc %36 1 %73 1
%74:i32 = var
blockpc %43 0 %74 1
%75:i32 = var
blockpc %43 1 %75 1
%76:i32 = var
pc %76 1
infer %51


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 32:i32 (hasExternalUses)
%8 = add %7, 288:i32 (hasExternalUses)
%9 = phi %5, %7, %8
%10 = phi %0, %4, %9
%11 = block 2
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = add %14, 4:i32 (hasExternalUses)
%16 = phi %13, %15, %14
%17 = block 2
%18 = add %14, 4:i32 (hasExternalUses)
%19 = phi %17, %18, %14
%20 = phi %12, %16, %19
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = block 2
%25 = add %23, -4:i32 (hasExternalUses)
%26 = phi %24, %23, %25
%27 = phi %22, %23, %26
%28 = phi %1, %21, %27
%29 = phi %0, %28, %9
%30 = phi %11, %20, %29
%31 = sub %10, %30
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %11 0 %36 1
%37:i32 = var
blockpc %11 1 %37 1
%38:i32 = var
blockpc %12 0 %38 1
%39:i32 = var
blockpc %12 1 %39 1
%40:i32 = var
blockpc %13 0 %40 1
%41:i32 = var
blockpc %13 1 %41 1
%42:i32 = var
blockpc %17 0 %42 1
%43:i32 = var
blockpc %17 1 %43 1
%44:i32 = var
blockpc %22 0 %44 1
%45:i32 = var
blockpc %22 1 %45 1
%46:i32 = var
blockpc %24 0 %46 1
%47:i32 = var
blockpc %24 1 %47 1
%48:i32 = var
%49:i32 = var
pc %48 1
pc %49 1
infer %31


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 32:i32 (hasExternalUses)
%8 = add %7, 288:i32 (hasExternalUses)
%9 = phi %5, %7, %8
%10 = phi %0, %4, %9
%11 = block 2
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = add %14, 4:i32 (hasExternalUses)
%16 = phi %13, %15, %14
%17 = block 2
%18 = add %14, 4:i32 (hasExternalUses)
%19 = phi %17, %18, %14
%20 = phi %12, %16, %19
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = block 2
%25 = add %23, -4:i32 (hasExternalUses)
%26 = phi %24, %23, %25
%27 = phi %22, %23, %26
%28 = phi %1, %21, %27
%29 = phi %0, %28, %9
%30 = phi %11, %20, %29
%31 = sub %10, %30
%32 = ashr %31, 2:i32
%33:i32 = var
blockpc %0 0 %33 1
%34:i32 = var
blockpc %0 1 %34 1
%35:i32 = var
blockpc %5 0 %35 1
%36:i32 = var
blockpc %5 1 %36 1
%37:i32 = var
blockpc %11 0 %37 1
%38:i32 = var
blockpc %11 1 %38 1
%39:i32 = var
blockpc %12 0 %39 1
%40:i32 = var
blockpc %12 1 %40 1
%41:i32 = var
blockpc %13 0 %41 1
%42:i32 = var
blockpc %13 1 %42 1
%43:i32 = var
blockpc %17 0 %43 1
%44:i32 = var
blockpc %17 1 %44 1
%45:i32 = var
blockpc %22 0 %45 1
%46:i32 = var
blockpc %22 1 %46 1
%47:i32 = var
blockpc %24 0 %47 1
%48:i32 = var
blockpc %24 1 %48 1
%49:i32 = var
%50:i32 = var
pc %49 1
pc %50 1
infer %32


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 32:i32 (hasExternalUses)
%8 = add %7, 288:i32 (hasExternalUses)
%9 = phi %5, %7, %8
%10 = phi %0, %4, %9
%11 = block 2
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = add %14, 4:i32 (hasExternalUses)
%16 = phi %13, %15, %14
%17 = block 2
%18 = add %14, 4:i32 (hasExternalUses)
%19 = phi %17, %18, %14
%20 = phi %12, %16, %19
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = block 2
%25 = add %23, -4:i32 (hasExternalUses)
%26 = phi %24, %23, %25
%27 = phi %22, %23, %26
%28 = phi %1, %21, %27
%29 = phi %0, %28, %9
%30 = phi %11, %20, %29
%31 = sub %10, %30
%32 = ashr %31, 2:i32
%33 = mul %32, 9:i32
%34:i32 = var
blockpc %0 0 %34 1
%35:i32 = var
blockpc %0 1 %35 1
%36:i32 = var
blockpc %5 0 %36 1
%37:i32 = var
blockpc %5 1 %37 1
%38:i32 = var
blockpc %11 0 %38 1
%39:i32 = var
blockpc %11 1 %39 1
%40:i32 = var
blockpc %12 0 %40 1
%41:i32 = var
blockpc %12 1 %41 1
%42:i32 = var
blockpc %13 0 %42 1
%43:i32 = var
blockpc %13 1 %43 1
%44:i32 = var
blockpc %17 0 %44 1
%45:i32 = var
blockpc %17 1 %45 1
%46:i32 = var
blockpc %22 0 %46 1
%47:i32 = var
blockpc %22 1 %47 1
%48:i32 = var
blockpc %24 0 %48 1
%49:i32 = var
blockpc %24 1 %49 1
%50:i32 = var
%51:i32 = var
pc %50 1
pc %51 1
infer %33


; start LHS (in $11)
%0:i32 = var
%1 = ult %0, 10:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
blockpc %4 0 %5 1
%6:i32 = var
blockpc %4 1 %6 1
%7:i32 = var
%8 = add %7, -28:i32
%9:i32 = var
%10 = phi %4, %8, %9
%11 = slt 0:i32, %10
blockpc %3 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %3 1 %13 1
%14:i32 = var
%15 = block 2
%16:i32 = var
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21 = phi %17, %20, 29:i32
%22 = phi %15, %16, %21
%23 = sub %14, %22
%24 = phi %3, %23, %10
%25 = slt %24, 0:i32
blockpc %2 0 %25 1
%26:i32 = var
blockpc %2 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34:i32 = var
%35 = phi %30, %33, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40 = phi %36, %39, %34
%41 = phi %27, %35, %40
%42:i32 = var
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46:i32 = var
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50:i32 = var
%51 = phi %47, %46, %50
%52 = phi %43, %46, %51
%53 = phi %15, %42, %52
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57:i32 = var
%58:i32 = var
%59 = phi %54, %57, %58
%60 = phi %3, %53, %59
%61 = phi %2, %41, %60
%62 = block 2
%63:i32 = var
blockpc %62 0 %63 1
%64:i32 = var
blockpc %62 1 %64 1
%65:i32 = var
%66 = block 2
%67:i32 = var
blockpc %66 0 %67 1
%68:i32 = var
blockpc %66 1 %68 1
%69:i32 = var
%70:i32 = var
%71 = phi %66, %69, %70
%72 = phi %27, %71, %69
%73 = phi %62, %65, %72
%74:i32 = var
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78:i32 = var
%79:i32 = var
%80 = phi %75, %78, %79
%81 = phi %15, %74, %80
%82:i32 = var
%83 = phi %3, %81, %82
%84 = phi %2, %73, %83
%85 = ult %61, %84
%86:i32 = var
pc %85 1
pc %86 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = mul %0, 10:i32
%2:i32 = var
%3 = ult %2, 10:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 2
%8 = block 2
%9:i32 = var
blockpc %8 0 %9 1
%10:i32 = var
blockpc %8 1 %10 1
%11:i32 = var
%12 = add %11, -28:i32
%13:i32 = var
%14 = phi %8, %12, %13
%15 = slt 0:i32, %14
blockpc %7 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %7 1 %17 1
%18:i32 = var
%19 = block 2
%20:i32 = var
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25 = phi %21, %24, 29:i32
%26 = phi %19, %20, %25
%27 = sub %18, %26
%28 = phi %7, %27, %14
%29 = slt %28, 0:i32
blockpc %6 0 %29 1
%30:i32 = var
blockpc %6 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37:i32 = var
%38:i32 = var
%39 = phi %34, %37, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44 = phi %40, %43, %38
%45 = phi %31, %39, %44
%46:i32 = var
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50:i32 = var
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54:i32 = var
%55 = phi %51, %50, %54
%56 = phi %47, %50, %55
%57 = phi %19, %46, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %58, %61, %62
%64 = phi %7, %57, %63
%65 = phi %6, %45, %64
%66 = block 2
%67:i32 = var
blockpc %66 0 %67 1
%68:i32 = var
blockpc %66 1 %68 1
%69:i32 = var
%70 = block 2
%71:i32 = var
blockpc %70 0 %71 1
%72:i32 = var
blockpc %70 1 %72 1
%73:i32 = var
%74:i32 = var
%75 = phi %70, %73, %74
%76 = phi %31, %75, %73
%77 = phi %66, %69, %76
%78:i32 = var
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82:i32 = var
%83:i32 = var
%84 = phi %79, %82, %83
%85 = phi %19, %78, %84
%86:i32 = var
%87 = phi %7, %85, %86
%88 = phi %6, %77, %87
%89 = ult %65, %88
%90:i32 = var
pc %5 1
pc %89 1
pc %90 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = ult %2, 10:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 2
%8 = block 2
%9:i32 = var
blockpc %8 0 %9 1
%10:i32 = var
blockpc %8 1 %10 1
%11:i32 = var
%12 = add %11, -28:i32
%13:i32 = var
%14 = phi %8, %12, %13
%15 = slt 0:i32, %14
blockpc %7 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %7 1 %17 1
%18:i32 = var
%19 = block 2
%20:i32 = var
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25 = phi %21, %24, 29:i32
%26 = phi %19, %20, %25
%27 = sub %18, %26
%28 = phi %7, %27, %14
%29 = slt %28, 0:i32
blockpc %6 0 %29 1
%30:i32 = var
blockpc %6 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37:i32 = var
%38:i32 = var
%39 = phi %34, %37, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44 = phi %40, %43, %38
%45 = phi %31, %39, %44
%46:i32 = var
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50:i32 = var
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54:i32 = var
%55 = phi %51, %50, %54
%56 = phi %47, %50, %55
%57 = phi %19, %46, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %58, %61, %62
%64 = phi %7, %57, %63
%65 = phi %6, %45, %64
%66 = block 2
%67:i32 = var
blockpc %66 0 %67 1
%68:i32 = var
blockpc %66 1 %68 1
%69:i32 = var
%70 = block 2
%71:i32 = var
blockpc %70 0 %71 1
%72:i32 = var
blockpc %70 1 %72 1
%73:i32 = var
%74:i32 = var
%75 = phi %70, %73, %74
%76 = phi %31, %75, %73
%77 = phi %66, %69, %76
%78:i32 = var
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82:i32 = var
%83:i32 = var
%84 = phi %79, %82, %83
%85 = phi %19, %78, %84
%86:i32 = var
%87 = phi %7, %85, %86
%88 = phi %6, %77, %87
%89 = ult %65, %88
%90:i32 = var
pc %5 1
pc %89 1
pc %90 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = mul %1, 10:i32
%3 = ult %0, %2
%4 = ult %0, 10:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12:i32 = var
%13 = add %12, -28:i32
%14:i32 = var
%15 = phi %9, %13, %14
%16 = slt 0:i32, %15
blockpc %8 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %8 1 %18 1
%19:i32 = var
%20 = block 2
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26 = phi %22, %25, 29:i32
%27 = phi %20, %21, %26
%28 = sub %19, %27
%29 = phi %8, %28, %15
%30 = slt %29, 0:i32
blockpc %7 0 %30 1
%31:i32 = var
blockpc %7 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38:i32 = var
%39:i32 = var
%40 = phi %35, %38, %39
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44:i32 = var
%45 = phi %41, %44, %39
%46 = phi %32, %40, %45
%47:i32 = var
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51:i32 = var
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56 = phi %52, %51, %55
%57 = phi %48, %51, %56
%58 = phi %20, %47, %57
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62:i32 = var
%63:i32 = var
%64 = phi %59, %62, %63
%65 = phi %8, %58, %64
%66 = phi %7, %46, %65
%67 = block 2
%68:i32 = var
blockpc %67 0 %68 1
%69:i32 = var
blockpc %67 1 %69 1
%70:i32 = var
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74:i32 = var
%75:i32 = var
%76 = phi %71, %74, %75
%77 = phi %32, %76, %74
%78 = phi %67, %70, %77
%79:i32 = var
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84:i32 = var
%85 = phi %80, %83, %84
%86 = phi %20, %79, %85
%87:i32 = var
%88 = phi %8, %86, %87
%89 = phi %7, %78, %88
%90 = ult %66, %89
%91:i32 = var
pc %6 1
pc %90 1
pc %91 1
infer %3


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = or %5, 32:i32 (hasExternalUses)
%7 = phi %0, %4, %6
%8 = eq %7, 102:i32
%9 = block 2
%10:i32 = var
%11 = ne %10, 0:i32
blockpc %9 0 %11 1
%12 = eq %10, 0:i32
blockpc %9 1 %12 1
%13:i32 = var
%14 = add %13, -28:i32
%15:i32 = var
%16 = phi %9, %14, %15
%17 = slt 0:i32, %16
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20 = block 2
%21:i64 = var
%22 = slt %21, 0:i64
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25:i64 = var
%26 = phi %20, %25, %21
%27 = and %26, 9218868437227405312:i64
%28 = eq %27, 9218868437227405312:i64
%29:i32 = zext %28
%30 = eq %29, 0:i32
pc %30 1
infer %8


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = or %5, 32:i32 (hasExternalUses)
%7 = phi %0, %4, %6
%8 = eq %7, 103:i32
%9 = block 2
%10:i32 = var
%11 = ne %10, 0:i32
blockpc %9 0 %11 1
%12 = eq %10, 0:i32
blockpc %9 1 %12 1
%13:i32 = var
%14 = add %13, -28:i32
%15:i32 = var
%16 = phi %9, %14, %15
%17 = slt 0:i32, %16
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20 = block 2
%21:i64 = var
%22 = slt %21, 0:i64
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25:i64 = var
%26 = phi %20, %25, %21
%27 = and %26, 9218868437227405312:i64
%28 = eq %27, 9218868437227405312:i64
%29:i32 = zext %28
%30 = eq %29, 0:i32
pc %30 1
infer %8


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = ne %8, 0:i32
%10 = block 2
%11:i32 = var
%12 = ne %11, 0:i32
blockpc %10 0 %12 1
%13 = eq %11, 0:i32
blockpc %10 1 %13 1
%14:i32 = var
%15 = add %14, -28:i32
%16:i32 = var
%17 = phi %10, %15, %16
%18 = slt 0:i32, %17
blockpc %0 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %0 1 %20 1
%21 = slt %6, 0:i32
blockpc %5 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %5 1 %23 1
%24:i32 = var
pc %24 1
infer %9


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = ne %8, 0:i32 (hasExternalUses)
%10:i32 = zext %9
%11:i32 = var
%12:i32 = var
%13 = phi %1, %11, %12
%14:i32 = var
%15 = or %14, 32:i32 (hasExternalUses)
%16 = phi %0, %13, %15
%17 = eq %16, 103:i32 (hasExternalUses)
%18:i32 = zext %17
%19 = and %10, %18
%20 = block 2
%21:i32 = var
%22 = ne %21, 0:i32
blockpc %20 0 %22 1
%23 = eq %21, 0:i32
blockpc %20 1 %23 1
%24:i32 = var
%25 = add %24, -28:i32
%26:i32 = var
%27 = phi %20, %25, %26
%28 = slt 0:i32, %27
blockpc %0 0 %28 1
%29:i32 = var
blockpc %0 1 %29 1
%30:i32 = var
blockpc %5 0 %30 1
%31:i32 = var
blockpc %5 1 %31 1
%32:i32 = var
pc %32 1
infer %19


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = ne %8, 0:i32 (hasExternalUses)
%10:i32 = zext %9
%11:i32 = var
%12:i32 = var
%13 = phi %1, %11, %12
%14:i32 = var
%15 = or %14, 32:i32 (hasExternalUses)
%16 = phi %0, %13, %15
%17 = eq %16, 103:i32 (hasExternalUses)
%18:i32 = zext %17
%19 = and %10, %18
%20 = shl %19, 31:i32
%21 = block 2
%22:i32 = var
%23 = ne %22, 0:i32
blockpc %21 0 %23 1
%24 = eq %22, 0:i32
blockpc %21 1 %24 1
%25:i32 = var
%26 = add %25, -28:i32
%27:i32 = var
%28 = phi %21, %26, %27
%29 = slt 0:i32, %28
blockpc %0 0 %29 1
%30:i32 = var
blockpc %0 1 %30 1
%31:i32 = var
blockpc %5 0 %31 1
%32:i32 = var
blockpc %5 1 %32 1
%33:i32 = var
pc %33 1
infer %20


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %1, %12, %13
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = phi %15, %16, %17
%19 = phi %0, %14, %18
%20 = block 2
%21 = block 2
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %24
%26 = block 2
%27:i32 = var
%28 = phi %26, %27, %24
%29 = phi %21, %25, %28
%30:i32 = var
%31 = block 2
%32:i32 = var
%33 = block 2
%34:i32 = var
%35 = phi %33, %32, %34
%36 = phi %31, %32, %35
%37 = phi %1, %30, %36
%38 = phi %0, %37, %18
%39 = phi %20, %29, %38
%40 = sub %19, %39
%41 = ashr %40, 2:i32
%42 = mul %41, 9:i32 (hasExternalUses)
%43:i32 = var
%44 = phi %11, %42, %43
%45 = phi %10, %44, 0:i32
%46 = phi %9, 0:i32, %45
%47 = sub %8, %46
%48:i32 = var
blockpc %0 0 %48 1
%49:i32 = var
blockpc %0 1 %49 1
%50:i32 = var
blockpc %5 0 %50 1
%51:i32 = var
blockpc %5 1 %51 1
%52:i32 = var
blockpc %9 0 %52 1
%53:i32 = var
blockpc %9 1 %53 1
%54:i32 = var
blockpc %10 0 %54 1
%55:i32 = var
blockpc %10 1 %55 1
%56:i32 = var
blockpc %11 0 %56 1
%57:i32 = var
blockpc %11 1 %57 1
%58:i32 = var
blockpc %15 0 %58 1
%59:i32 = var
blockpc %15 1 %59 1
%60:i32 = var
blockpc %20 0 %60 1
%61:i32 = var
blockpc %20 1 %61 1
%62:i32 = var
blockpc %21 0 %62 1
%63:i32 = var
blockpc %21 1 %63 1
%64:i32 = var
blockpc %22 0 %64 1
%65:i32 = var
blockpc %22 1 %65 1
%66:i32 = var
blockpc %26 0 %66 1
%67:i32 = var
blockpc %26 1 %67 1
%68:i32 = var
blockpc %31 0 %68 1
%69:i32 = var
blockpc %31 1 %69 1
%70:i32 = var
blockpc %33 0 %70 1
%71:i32 = var
blockpc %33 1 %71 1
%72:i32 = var
pc %72 1
infer %47


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = ne %8, 0:i32 (hasExternalUses)
%10:i32 = zext %9
%11:i32 = var
%12:i32 = var
%13 = phi %1, %11, %12
%14:i32 = var
%15 = or %14, 32:i32 (hasExternalUses)
%16 = phi %0, %13, %15
%17 = eq %16, 103:i32 (hasExternalUses)
%18:i32 = zext %17
%19 = and %10, %18
%20 = shl %19, 31:i32
%21 = ashr %20, 31:i32
%22 = block 2
%23:i32 = var
%24 = ne %23, 0:i32
blockpc %22 0 %24 1
%25 = eq %23, 0:i32
blockpc %22 1 %25 1
%26:i32 = var
%27 = add %26, -28:i32
%28:i32 = var
%29 = phi %22, %27, %28
%30 = slt 0:i32, %29
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %5 0 %32 1
%33:i32 = var
blockpc %5 1 %33 1
%34:i32 = var
pc %34 1
infer %21


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %1, %12, %13
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = phi %15, %16, %17
%19 = phi %0, %14, %18
%20 = block 2
%21 = block 2
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %24
%26 = block 2
%27:i32 = var
%28 = phi %26, %27, %24
%29 = phi %21, %25, %28
%30:i32 = var
%31 = block 2
%32:i32 = var
%33 = block 2
%34:i32 = var
%35 = phi %33, %32, %34
%36 = phi %31, %32, %35
%37 = phi %1, %30, %36
%38 = phi %0, %37, %18
%39 = phi %20, %29, %38
%40 = sub %19, %39
%41 = ashr %40, 2:i32
%42 = mul %41, 9:i32 (hasExternalUses)
%43:i32 = var
%44 = phi %11, %42, %43
%45 = phi %10, %44, 0:i32
%46 = phi %9, 0:i32, %45
%47 = sub %8, %46
%48:i32 = var
%49 = add %47, %48
%50:i32 = var
blockpc %0 0 %50 1
%51:i32 = var
blockpc %0 1 %51 1
%52:i32 = var
blockpc %5 0 %52 1
%53:i32 = var
blockpc %5 1 %53 1
%54:i32 = var
blockpc %9 0 %54 1
%55:i32 = var
blockpc %9 1 %55 1
%56:i32 = var
blockpc %10 0 %56 1
%57:i32 = var
blockpc %10 1 %57 1
%58:i32 = var
blockpc %11 0 %58 1
%59:i32 = var
blockpc %11 1 %59 1
%60:i32 = var
blockpc %15 0 %60 1
%61:i32 = var
blockpc %15 1 %61 1
%62:i32 = var
blockpc %20 0 %62 1
%63:i32 = var
blockpc %20 1 %63 1
%64:i32 = var
blockpc %21 0 %64 1
%65:i32 = var
blockpc %21 1 %65 1
%66:i32 = var
blockpc %22 0 %66 1
%67:i32 = var
blockpc %22 1 %67 1
%68:i32 = var
blockpc %26 0 %68 1
%69:i32 = var
blockpc %26 1 %69 1
%70:i32 = var
blockpc %31 0 %70 1
%71:i32 = var
blockpc %31 1 %71 1
%72:i32 = var
blockpc %33 0 %72 1
%73:i32 = var
blockpc %33 1 %73 1
%74:i32 = var
pc %74 1
infer %49


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 2
%9:i32 = var
%10 = add %9, 32:i32 (hasExternalUses)
%11 = add %10, 288:i32 (hasExternalUses)
%12 = phi %8, %10, %11
%13 = phi %3, %7, %12
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = add %16, 4:i32 (hasExternalUses)
%18 = phi %15, %17, %16
%19 = block 2
%20 = add %16, 4:i32 (hasExternalUses)
%21 = phi %19, %20, %16
%22 = phi %14, %18, %21
%23 = phi %2, %13, %22
%24:i32 = var
%25:i32 = var
%26 = phi %4, %24, %25
%27 = block 2
%28:i32 = var
%29 = phi %27, 6:i32, %28
%30 = phi %3, %26, %29
%31 = add %30, 25:i32
%32 = sdiv %31, 9:i32
%33 = and %32, -1:i32
%34 = add %33, 1:i32 (hasExternalUses)
%35 = shl %34, 2:i32
%36 = add %23, %35 (hasExternalUses)
%37 = block 2
%38:i32 = var
%39:i32 = var
%40 = phi %37, %38, %39
%41 = phi %14, %40, %38
%42 = phi %1, %36, %41
%43:i32 = var
%44 = block 2
%45:i32 = var
%46:i32 = var
%47 = phi %44, %45, %46
%48 = phi %4, %43, %47
%49:i32 = var
%50 = phi %3, %48, %49
%51 = phi %0, %42, %50
%52:i32 = var
%53:i32 = var
%54 = phi %4, %52, %53
%55 = phi %3, %54, %12
%56 = sub %51, %55
%57:i32 = var
blockpc %0 0 %57 1
%58:i32 = var
blockpc %0 1 %58 1
%59:i32 = var
blockpc %1 0 %59 1
%60:i32 = var
blockpc %1 1 %60 1
%61:i32 = var
blockpc %2 0 %61 1
%62:i32 = var
blockpc %2 1 %62 1
%63:i32 = var
blockpc %3 0 %63 1
%64:i32 = var
blockpc %3 1 %64 1
%65:i32 = var
blockpc %8 0 %65 1
%66:i32 = var
blockpc %8 1 %66 1
%67:i32 = var
blockpc %14 0 %67 1
%68:i32 = var
blockpc %14 1 %68 1
%69:i32 = var
blockpc %15 0 %69 1
%70:i32 = var
blockpc %15 1 %70 1
%71:i32 = var
blockpc %19 0 %71 1
%72:i32 = var
blockpc %19 1 %72 1
%73:i32 = var
blockpc %27 0 %73 1
%74:i32 = var
blockpc %27 1 %74 1
%75:i32 = var
blockpc %37 0 %75 1
%76:i32 = var
blockpc %37 1 %76 1
%77:i32 = var
blockpc %44 0 %77 1
%78:i32 = var
blockpc %44 1 %78 1
%79:i32 = var
pc %79 1
infer %56


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 2
%9:i32 = var
%10 = add %9, 32:i32 (hasExternalUses)
%11 = add %10, 288:i32 (hasExternalUses)
%12 = phi %8, %10, %11
%13 = phi %3, %7, %12
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = add %16, 4:i32 (hasExternalUses)
%18 = phi %15, %17, %16
%19 = block 2
%20 = add %16, 4:i32 (hasExternalUses)
%21 = phi %19, %20, %16
%22 = phi %14, %18, %21
%23 = phi %2, %13, %22
%24:i32 = var
%25 = sdiv %24, 9:i32
%26 = and %25, -1:i32
%27 = add %26, 1:i32 (hasExternalUses)
%28 = shl %27, 2:i32
%29 = add %23, %28 (hasExternalUses)
%30 = block 2
%31:i32 = var
%32:i32 = var
%33 = phi %30, %31, %32
%34 = phi %14, %33, %31
%35 = phi %1, %29, %34
%36:i32 = var
%37 = block 2
%38:i32 = var
%39:i32 = var
%40 = phi %37, %38, %39
%41 = phi %4, %36, %40
%42:i32 = var
%43 = phi %3, %41, %42
%44 = phi %0, %35, %43
%45:i32 = var
%46:i32 = var
%47 = phi %4, %45, %46
%48 = phi %3, %47, %12
%49 = sub %44, %48
%50 = ashr %49, 2:i32
%51:i32 = var
blockpc %0 0 %51 1
%52:i32 = var
blockpc %0 1 %52 1
%53:i32 = var
blockpc %1 0 %53 1
%54:i32 = var
blockpc %1 1 %54 1
%55:i32 = var
blockpc %2 0 %55 1
%56:i32 = var
blockpc %2 1 %56 1
%57:i32 = var
blockpc %3 0 %57 1
%58:i32 = var
blockpc %3 1 %58 1
%59:i32 = var
blockpc %8 0 %59 1
%60:i32 = var
blockpc %8 1 %60 1
%61:i32 = var
blockpc %14 0 %61 1
%62:i32 = var
blockpc %14 1 %62 1
%63:i32 = var
blockpc %15 0 %63 1
%64:i32 = var
blockpc %15 1 %64 1
%65:i32 = var
blockpc %19 0 %65 1
%66:i32 = var
blockpc %19 1 %66 1
%67:i32 = var
blockpc %30 0 %67 1
%68:i32 = var
blockpc %30 1 %68 1
%69:i32 = var
blockpc %37 0 %69 1
%70:i32 = var
blockpc %37 1 %70 1
%71:i32 = var
pc %71 1
infer %50


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = phi %3, %7, %11
%13 = block 2
%14 = block 2
%15:i32 = var
%16:i32 = var
%17 = phi %14, %15, %16
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, %16
%21 = phi %13, %17, %20
%22 = phi %2, %12, %21
%23:i32 = var
%24 = and %23, -1:i32
%25 = add %24, 1:i32 (hasExternalUses)
%26 = shl %25, 2:i32
%27 = add %22, %26 (hasExternalUses)
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %30
%32 = phi %13, %31, %29
%33 = phi %1, %27, %32
%34:i32 = var
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %37
%39 = phi %4, %34, %38
%40:i32 = var
%41 = phi %3, %39, %40
%42 = phi %0, %33, %41
%43:i32 = var
%44:i32 = var
%45 = phi %4, %43, %44
%46 = phi %3, %45, %11
%47 = sub %42, %46
%48 = ashr %47, 2:i32
%49 = mul %48, 9:i32
%50:i32 = var
blockpc %0 0 %50 1
%51:i32 = var
blockpc %0 1 %51 1
%52:i32 = var
blockpc %1 0 %52 1
%53:i32 = var
blockpc %1 1 %53 1
%54:i32 = var
blockpc %2 0 %54 1
%55:i32 = var
blockpc %2 1 %55 1
%56:i32 = var
blockpc %3 0 %56 1
%57:i32 = var
blockpc %3 1 %57 1
%58:i32 = var
blockpc %8 0 %58 1
%59:i32 = var
blockpc %8 1 %59 1
%60:i32 = var
blockpc %13 0 %60 1
%61:i32 = var
blockpc %13 1 %61 1
%62:i32 = var
blockpc %14 0 %62 1
%63:i32 = var
blockpc %14 1 %63 1
%64:i32 = var
blockpc %18 0 %64 1
%65:i32 = var
blockpc %18 1 %65 1
%66:i32 = var
blockpc %28 0 %66 1
%67:i32 = var
blockpc %28 1 %67 1
%68:i32 = var
blockpc %35 0 %68 1
%69:i32 = var
blockpc %35 1 %69 1
%70:i32 = var
pc %70 1
infer %49


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = phi %3, %7, %11
%13 = block 2
%14 = block 2
%15:i32 = var
%16:i32 = var
%17 = phi %14, %15, %16
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, %16
%21 = phi %13, %17, %20
%22 = phi %2, %12, %21
%23:i32 = var
%24 = add %23, 1:i32 (hasExternalUses)
%25 = shl %24, 2:i32
%26 = add %22, %25 (hasExternalUses)
%27 = block 2
%28:i32 = var
%29 = add %28, 4:i32 (hasExternalUses)
%30 = phi %27, %28, %29
%31 = phi %13, %30, %28
%32 = phi %1, %26, %31
%33:i32 = var
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %36
%38 = phi %4, %33, %37
%39:i32 = var
%40 = phi %3, %38, %39
%41 = phi %0, %32, %40
%42:i32 = var
%43:i32 = var
%44 = phi %4, %42, %43
%45 = phi %3, %44, %11
%46 = sub %41, %45
%47 = ashr %46, 2:i32
%48 = mul %47, 9:i32
%49 = add %48, -9:i32
%50:i32 = var
blockpc %0 0 %50 1
%51:i32 = var
blockpc %0 1 %51 1
%52:i32 = var
blockpc %1 0 %52 1
%53:i32 = var
blockpc %1 1 %53 1
%54:i32 = var
blockpc %2 0 %54 1
%55:i32 = var
blockpc %2 1 %55 1
%56:i32 = var
blockpc %3 0 %56 1
%57:i32 = var
blockpc %3 1 %57 1
%58:i32 = var
blockpc %8 0 %58 1
%59:i32 = var
blockpc %8 1 %59 1
%60:i32 = var
blockpc %13 0 %60 1
%61:i32 = var
blockpc %13 1 %61 1
%62:i32 = var
blockpc %14 0 %62 1
%63:i32 = var
blockpc %14 1 %63 1
%64:i32 = var
blockpc %18 0 %64 1
%65:i32 = var
blockpc %18 1 %65 1
%66:i32 = var
blockpc %27 0 %66 1
%67:i32 = var
blockpc %27 1 %67 1
%68:i32 = var
blockpc %34 0 %68 1
%69:i32 = var
blockpc %34 1 %69 1
%70:i32 = var
pc %70 1
infer %49


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %1, %12, %13
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = phi %15, %16, %17
%19 = phi %0, %14, %18
%20 = block 2
%21 = block 2
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %24
%26 = block 2
%27:i32 = var
%28 = phi %26, %27, %24
%29 = phi %21, %25, %28
%30:i32 = var
%31 = block 2
%32:i32 = var
%33 = block 2
%34:i32 = var
%35 = phi %33, %32, %34
%36 = phi %31, %32, %35
%37 = phi %1, %30, %36
%38 = phi %0, %37, %18
%39 = phi %20, %29, %38
%40 = sub %19, %39
%41 = ashr %40, 2:i32
%42 = mul %41, 9:i32 (hasExternalUses)
%43:i32 = var
%44 = phi %11, %42, %43
%45 = phi %10, %44, 0:i32
%46 = phi %9, 0:i32, %45
%47 = sub %8, %46
%48:i32 = var
%49 = add %47, %48 (hasExternalUses)
%50:i32 = var
%51 = slt %49, %50
%52:i32 = var
blockpc %0 0 %52 1
%53:i32 = var
blockpc %0 1 %53 1
%54:i32 = var
blockpc %5 0 %54 1
%55:i32 = var
blockpc %5 1 %55 1
%56:i32 = var
blockpc %9 0 %56 1
%57:i32 = var
blockpc %9 1 %57 1
%58:i32 = var
blockpc %10 0 %58 1
%59:i32 = var
blockpc %10 1 %59 1
%60:i32 = var
blockpc %11 0 %60 1
%61:i32 = var
blockpc %11 1 %61 1
%62:i32 = var
blockpc %15 0 %62 1
%63:i32 = var
blockpc %15 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %21 0 %66 1
%67:i32 = var
blockpc %21 1 %67 1
%68:i32 = var
blockpc %22 0 %68 1
%69:i32 = var
blockpc %22 1 %69 1
%70:i32 = var
blockpc %26 0 %70 1
%71:i32 = var
blockpc %26 1 %71 1
%72:i32 = var
blockpc %31 0 %72 1
%73:i32 = var
blockpc %31 1 %73 1
%74:i32 = var
blockpc %33 0 %74 1
%75:i32 = var
blockpc %33 1 %75 1
%76:i32 = var
pc %76 1
infer %51


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %1, %12, %13
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = phi %15, %16, %17
%19 = phi %0, %14, %18
%20 = block 2
%21 = block 2
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %24
%26 = block 2
%27:i32 = var
%28 = phi %26, %27, %24
%29 = phi %21, %25, %28
%30:i32 = var
%31 = block 2
%32:i32 = var
%33 = block 2
%34:i32 = var
%35 = phi %33, %32, %34
%36 = phi %31, %32, %35
%37 = phi %1, %30, %36
%38 = phi %0, %37, %18
%39 = phi %20, %29, %38
%40 = sub %19, %39
%41 = ashr %40, 2:i32
%42 = mul %41, 9:i32 (hasExternalUses)
%43:i32 = var
%44 = phi %11, %42, %43
%45 = phi %10, %44, 0:i32
%46 = phi %9, 0:i32, %45
%47 = sub %8, %46
%48:i32 = var
%49 = add %47, %48 (hasExternalUses)
%50 = add %49, 9216:i32
%51:i32 = var
blockpc %0 0 %51 1
%52:i32 = var
blockpc %0 1 %52 1
%53:i32 = var
blockpc %5 0 %53 1
%54:i32 = var
blockpc %5 1 %54 1
%55:i32 = var
blockpc %9 0 %55 1
%56:i32 = var
blockpc %9 1 %56 1
%57:i32 = var
blockpc %10 0 %57 1
%58:i32 = var
blockpc %10 1 %58 1
%59:i32 = var
blockpc %11 0 %59 1
%60:i32 = var
blockpc %11 1 %60 1
%61:i32 = var
blockpc %15 0 %61 1
%62:i32 = var
blockpc %15 1 %62 1
%63:i32 = var
blockpc %20 0 %63 1
%64:i32 = var
blockpc %20 1 %64 1
%65:i32 = var
blockpc %21 0 %65 1
%66:i32 = var
blockpc %21 1 %66 1
%67:i32 = var
blockpc %22 0 %67 1
%68:i32 = var
blockpc %22 1 %68 1
%69:i32 = var
blockpc %26 0 %69 1
%70:i32 = var
blockpc %26 1 %70 1
%71:i32 = var
blockpc %31 0 %71 1
%72:i32 = var
blockpc %31 1 %72 1
%73:i32 = var
blockpc %33 0 %73 1
%74:i32 = var
blockpc %33 1 %74 1
%75:i32 = var
%76:i32 = var
pc %75 1
pc %76 1
infer %50


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = ashr %12, 2:i32
%14 = mul %13, 9:i32 (hasExternalUses)
%15:i32 = var
%16 = add %15, 1:i32 (hasExternalUses)
%17 = phi %11, %14, %16
%18 = phi %10, %17, 0:i32
%19 = phi %9, 0:i32, %18
%20 = sub %8, %19
%21 = ne %8, 0:i32 (hasExternalUses)
%22:i32 = zext %21
%23:i32 = var
%24:i32 = var
%25 = phi %1, %23, %24
%26:i32 = var
%27 = phi %0, %25, %26
%28 = eq %27, 103:i32 (hasExternalUses)
%29:i32 = zext %28
%30 = and %22, %29
%31 = shl %30, 31:i32
%32 = ashr %31, 31:i32
%33 = add %20, %32 (hasExternalUses)
%34 = add %33, 9216:i32 (hasExternalUses)
%35 = sdiv %34, 9:i32
%36:i32 = var
blockpc %0 0 %36 1
%37:i32 = var
blockpc %0 1 %37 1
%38:i32 = var
blockpc %5 0 %38 1
%39:i32 = var
blockpc %5 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %10 0 %42 1
%43:i32 = var
blockpc %10 1 %43 1
%44:i32 = var
blockpc %11 0 %44 1
%45:i32 = var
blockpc %11 1 %45 1
%46:i32 = var
%47:i32 = var
pc %46 1
pc %47 1
infer %35


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = mul %12, 9:i32 (hasExternalUses)
%14:i32 = var
%15 = add %14, 1:i32 (hasExternalUses)
%16 = phi %11, %13, %15
%17 = phi %10, %16, 0:i32
%18 = phi %9, 0:i32, %17
%19 = sub %8, %18
%20 = ne %8, 0:i32 (hasExternalUses)
%21:i32 = zext %20
%22:i32 = var
%23:i32 = var
%24 = phi %1, %22, %23
%25:i32 = var
%26 = phi %0, %24, %25
%27 = eq %26, 103:i32 (hasExternalUses)
%28:i32 = zext %27
%29 = and %21, %28
%30 = shl %29, 31:i32
%31 = ashr %30, 31:i32
%32 = add %19, %31 (hasExternalUses)
%33 = add %32, 9216:i32 (hasExternalUses)
%34 = sdiv %33, 9:i32
%35 = and %34, -1:i32
%36:i32 = var
blockpc %0 0 %36 1
%37:i32 = var
blockpc %0 1 %37 1
%38:i32 = var
blockpc %5 0 %38 1
%39:i32 = var
blockpc %5 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %10 0 %42 1
%43:i32 = var
blockpc %10 1 %43 1
%44:i32 = var
blockpc %11 0 %44 1
%45:i32 = var
blockpc %11 1 %45 1
%46:i32 = var
%47:i32 = var
pc %46 1
pc %47 1
infer %35


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 32:i32 (hasExternalUses)
%8 = add %7, 288:i32 (hasExternalUses)
%9 = phi %5, %7, %8
%10 = phi %0, %4, %9
%11 = add %10, 4:i32
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
blockpc %0 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1
%23 = slt %19, 0:i32
blockpc %5 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %5 1 %25 1
%26:i32 = var
%27:i32 = var
pc %26 1
pc %27 1
infer %11


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %10, %14, 0:i32
%16 = phi %9, 0:i32, %15
%17 = sub %8, %16
%18:i32 = var
%19 = add %18, 0:i32; Replace bad zext operation
%20:i32 = var
%21 = add %20, 0:i32; Replace bad zext operation
%22 = and %19, %21
%23 = shl %22, 31:i32
%24 = ashr %23, 31:i32
%25 = add %17, %24 (hasExternalUses)
%26 = add %25, 9216:i32 (hasExternalUses)
%27 = sdiv %26, 9:i32
%28 = and %27, -1:i32 (hasExternalUses)
%29 = add %28, -1024:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %5 0 %32 1
%33:i32 = var
blockpc %5 1 %33 1
%34:i32 = var
blockpc %9 0 %34 1
%35:i32 = var
blockpc %9 1 %35 1
%36:i32 = var
blockpc %10 0 %36 1
%37:i32 = var
blockpc %10 1 %37 1
%38:i32 = var
blockpc %11 0 %38 1
%39:i32 = var
blockpc %11 1 %39 1
%40:i32 = var
%41:i32 = var
pc %40 1
pc %41 1
infer %29


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %10, %14, 0:i32
%16 = phi %9, 0:i32, %15
%17 = sub %8, %16
%18:i32 = var
%19 = add %18, 0:i32; Replace bad zext operation
%20:i32 = var
%21 = add %20, 0:i32; Replace bad zext operation
%22 = and %19, %21
%23 = shl %22, 31:i32
%24 = ashr %23, 31:i32
%25 = add %17, %24 (hasExternalUses)
%26 = add %25, 9216:i32 (hasExternalUses)
%27 = sdiv %26, 9:i32
%28 = and %27, -1:i32 (hasExternalUses)
%29 = add %28, -1024:i32
%30 = shl %29, 2:i32
%31:i32 = var
blockpc %0 0 %31 1
%32:i32 = var
blockpc %0 1 %32 1
%33:i32 = var
blockpc %5 0 %33 1
%34:i32 = var
blockpc %5 1 %34 1
%35:i32 = var
blockpc %9 0 %35 1
%36:i32 = var
blockpc %9 1 %36 1
%37:i32 = var
blockpc %10 0 %37 1
%38:i32 = var
blockpc %10 1 %38 1
%39:i32 = var
blockpc %11 0 %39 1
%40:i32 = var
blockpc %11 1 %40 1
%41:i32 = var
%42:i32 = var
pc %41 1
pc %42 1
infer %30


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 32:i32 (hasExternalUses)
%8 = add %7, 288:i32 (hasExternalUses)
%9 = phi %5, %7, %8
%10 = phi %0, %4, %9
%11 = add %10, 4:i32
%12:i32 = var
%13:i32 = var
%14 = phi %1, %12, %13
%15 = block 2
%16:i32 = var
%17 = phi %15, 6:i32, %16
%18 = phi %0, %14, %17
%19 = block 2
%20 = block 2
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = phi %20, %24, 0:i32
%26 = phi %19, 0:i32, %25
%27 = sub %18, %26
%28:i32 = var
%29 = shl %28, 31:i32
%30 = ashr %29, 31:i32
%31 = add %27, %30 (hasExternalUses)
%32 = add %31, 9216:i32 (hasExternalUses)
%33 = sdiv %32, 9:i32
%34 = and %33, -1:i32 (hasExternalUses)
%35 = add %34, -1024:i32
%36 = shl %35, 2:i32
%37 = add %11, %36
%38:i32 = var
blockpc %0 0 %38 1
%39:i32 = var
blockpc %0 1 %39 1
%40:i32 = var
blockpc %5 0 %40 1
%41:i32 = var
blockpc %5 1 %41 1
%42:i32 = var
blockpc %15 0 %42 1
%43:i32 = var
blockpc %15 1 %43 1
%44:i32 = var
blockpc %19 0 %44 1
%45:i32 = var
blockpc %19 1 %45 1
%46:i32 = var
blockpc %20 0 %46 1
%47:i32 = var
blockpc %20 1 %47 1
%48:i32 = var
blockpc %21 0 %48 1
%49:i32 = var
blockpc %21 1 %49 1
%50:i32 = var
%51:i32 = var
pc %50 1
pc %51 1
infer %37


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %10, %14, 0:i32
%16 = phi %9, 0:i32, %15
%17 = sub %8, %16
%18:i32 = var
%19 = add %18, 0:i32; Replace bad zext operation
%20:i32 = var
%21 = add %20, 0:i32; Replace bad zext operation
%22 = and %19, %21
%23 = shl %22, 31:i32
%24 = ashr %23, 31:i32
%25 = add %17, %24 (hasExternalUses)
%26 = add %25, 9216:i32 (hasExternalUses)
%27 = sdiv %26, 9:i32
%28 = and %27, -1:i32 (hasExternalUses)
%29 = mul %28, 9:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %5 0 %32 1
%33:i32 = var
blockpc %5 1 %33 1
%34:i32 = var
blockpc %9 0 %34 1
%35:i32 = var
blockpc %9 1 %35 1
%36:i32 = var
blockpc %10 0 %36 1
%37:i32 = var
blockpc %10 1 %37 1
%38:i32 = var
blockpc %11 0 %38 1
%39:i32 = var
blockpc %11 1 %39 1
%40:i32 = var
%41:i32 = var
pc %40 1
pc %41 1
infer %29


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = ashr %12, 2:i32
%14 = mul %13, 9:i32 (hasExternalUses)
%15:i32 = var
%16 = add %15, 1:i32 (hasExternalUses)
%17 = phi %11, %14, %16
%18 = phi %10, %17, 0:i32
%19 = phi %9, 0:i32, %18
%20 = sub %8, %19
%21 = ne %8, 0:i32 (hasExternalUses)
%22:i32 = zext %21
%23:i32 = var
%24:i32 = var
%25 = phi %1, %23, %24
%26:i32 = var
%27 = phi %0, %25, %26
%28 = eq %27, 103:i32 (hasExternalUses)
%29:i32 = zext %28
%30 = and %22, %29
%31 = shl %30, 31:i32
%32 = ashr %31, 31:i32
%33 = add %20, %32 (hasExternalUses)
%34 = add %33, 9216:i32 (hasExternalUses)
%35:i32 = var
%36 = sub %34, %35
%37:i32 = var
blockpc %0 0 %37 1
%38:i32 = var
blockpc %0 1 %38 1
%39:i32 = var
blockpc %5 0 %39 1
%40:i32 = var
blockpc %5 1 %40 1
%41:i32 = var
blockpc %9 0 %41 1
%42:i32 = var
blockpc %9 1 %42 1
%43:i32 = var
blockpc %10 0 %43 1
%44:i32 = var
blockpc %10 1 %44 1
%45:i32 = var
blockpc %11 0 %45 1
%46:i32 = var
blockpc %11 1 %46 1
%47:i32 = var
%48:i32 = var
pc %47 1
pc %48 1
infer %36


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = phi %5, 6:i32, %6
%8 = phi %0, %4, %7
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = mul %12, 9:i32 (hasExternalUses)
%14:i32 = var
%15 = add %14, 1:i32 (hasExternalUses)
%16 = phi %11, %13, %15
%17 = phi %10, %16, 0:i32
%18 = phi %9, 0:i32, %17
%19 = sub %8, %18
%20 = ne %8, 0:i32 (hasExternalUses)
%21:i32 = zext %20
%22:i32 = var
%23:i32 = var
%24 = phi %1, %22, %23
%25:i32 = var
%26 = phi %0, %24, %25
%27 = eq %26, 103:i32 (hasExternalUses)
%28:i32 = zext %27
%29 = and %21, %28
%30 = shl %29, 31:i32
%31 = ashr %30, 31:i32
%32 = add %19, %31 (hasExternalUses)
%33 = add %32, 9216:i32 (hasExternalUses)
%34:i32 = var
%35 = sub %33, %34 (hasExternalUses)
%36 = slt %35, 8:i32
%37:i32 = var
blockpc %0 0 %37 1
%38:i32 = var
blockpc %0 1 %38 1
%39:i32 = var
blockpc %5 0 %39 1
%40:i32 = var
blockpc %5 1 %40 1
%41:i32 = var
blockpc %9 0 %41 1
%42:i32 = var
blockpc %9 1 %42 1
%43:i32 = var
blockpc %10 0 %43 1
%44:i32 = var
blockpc %10 1 %44 1
%45:i32 = var
blockpc %11 0 %45 1
%46:i32 = var
blockpc %11 1 %46 1
%47:i32 = var
%48:i32 = var
pc %47 1
pc %48 1
infer %36


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 1:i32
%2 = block 2
%3 = block 2
%4:i32 = var
blockpc %3 0 %4 1
%5:i32 = var
blockpc %3 1 %5 1
%6:i32 = var
%7:i32 = var
%8 = phi %3, %6, %7
%9 = slt 0:i32, %8
blockpc %2 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %2 1 %11 1
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = phi %12, %13, %14
%16 = block 2
%17:i32 = var
%18 = slt %17, 0:i32
blockpc %16 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %16 1 %20 1
%21 = phi %16, 6:i32, %17
%22 = phi %2, %15, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %29, %32, %33
%35 = phi %26, %34, 0:i32
%36 = phi %23, 0:i32, %35
%37 = sub %22, %36
%38:i32 = var
%39 = add %37, %38
%40 = add %39, 9216:i32
%41:i32 = var
%42 = sub %40, %41
%43 = slt %42, 8:i32
%44:i32 = var
%45:i32 = var
pc %43 1
pc %44 1
pc %45 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = mul %0, 10:i32
%2 = block 2
%3 = block 2
%4:i32 = var
blockpc %3 0 %4 1
%5:i32 = var
blockpc %3 1 %5 1
%6:i32 = var
%7:i32 = var
%8 = phi %3, %6, %7
%9 = slt 0:i32, %8
blockpc %2 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %2 1 %11 1
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = phi %12, %13, %14
%16 = block 2
%17:i32 = var
%18 = slt %17, 0:i32
blockpc %16 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %16 1 %20 1
%21 = phi %16, 6:i32, %17
%22 = phi %2, %15, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %29, %32, %33
%35 = phi %26, %34, 0:i32
%36 = phi %23, 0:i32, %35
%37 = sub %22, %36
%38:i32 = var
%39 = add %37, %38
%40 = add %39, 9216:i32
%41:i32 = var
%42 = sub %40, %41
%43 = slt %42, 8:i32
%44:i32 = var
%45:i32 = var
pc %43 1
pc %44 1
pc %45 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = slt %0, 7:i32
%2 = block 2
%3 = block 2
%4:i32 = var
blockpc %3 0 %4 1
%5:i32 = var
blockpc %3 1 %5 1
%6:i32 = var
%7:i32 = var
%8 = phi %3, %6, %7
%9 = slt 0:i32, %8
blockpc %2 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %2 1 %11 1
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = phi %12, %13, %14
%16 = block 2
%17:i32 = var
%18 = slt %17, 0:i32
blockpc %16 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %16 1 %20 1
%21 = phi %16, 6:i32, %17
%22 = phi %2, %15, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %29, %32, %33
%35 = phi %26, %34, 0:i32
%36 = phi %23, 0:i32, %35
%37 = sub %22, %36
%38:i32 = var
%39 = add %37, %38
%40 = add %39, 9216:i32
%41:i32 = var
%42 = sub %40, %41
%43 = slt %42, 8:i32
%44:i32 = var
%45:i32 = var
pc %43 1
pc %44 1
pc %45 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, %3, 10:i32
%5 = udiv %0, %4
%6 = block 2
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11:i32 = var
%12 = phi %7, %10, %11
%13 = slt 0:i32, %12
blockpc %6 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %6 1 %15 1
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23:i32 = var
%24 = phi %20, 6:i32, %23
%25 = phi %6, %19, %24
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35:i32 = var
%36:i32 = var
%37 = phi %32, %35, %36
%38 = phi %29, %37, 0:i32
%39 = phi %26, 0:i32, %38
%40 = sub %25, %39
%41:i32 = var
%42 = add %40, %41
%43 = add %42, 9216:i32
%44:i32 = var
%45 = sub %43, %44
%46 = slt %45, 8:i32
blockpc %1 0 %46 1
%47:i32 = var
blockpc %1 1 %47 1
%48:i32 = var
%49:i32 = var
pc %48 1
pc %49 1
infer %5


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, %3, 10:i32
%5 = udiv %0, %4
%6 = and %5, -1:i32
%7 = block 2
%8 = block 2
%9:i32 = var
blockpc %8 0 %9 1
%10:i32 = var
blockpc %8 1 %10 1
%11:i32 = var
%12:i32 = var
%13 = phi %8, %11, %12
%14 = slt 0:i32, %13
blockpc %7 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %7 1 %16 1
%17 = block 2
%18:i32 = var
%19:i32 = var
%20 = phi %17, %18, %19
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25 = phi %21, 6:i32, %24
%26 = phi %7, %20, %25
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36:i32 = var
%37:i32 = var
%38 = phi %33, %36, %37
%39 = phi %30, %38, 0:i32
%40 = phi %27, 0:i32, %39
%41 = sub %26, %40
%42:i32 = var
%43 = add %41, %42
%44 = add %43, 9216:i32
%45:i32 = var
%46 = sub %44, %45
%47 = slt %46, 8:i32
blockpc %1 0 %47 1
%48:i32 = var
blockpc %1 1 %48 1
%49:i32 = var
%50:i32 = var
pc %49 1
pc %50 1
infer %6


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, %3, 10:i32
%5 = udiv %0, %4
%6 = and %5, -1:i32 (hasExternalUses)
%7 = mul %6, %4
%8 = block 2
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12:i32 = var
%13:i32 = var
%14 = phi %9, %12, %13
%15 = slt 0:i32, %14
blockpc %8 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %8 1 %17 1
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26 = phi %22, 6:i32, %25
%27 = phi %8, %21, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37:i32 = var
%38:i32 = var
%39 = phi %34, %37, %38
%40 = phi %31, %39, 0:i32
%41 = phi %28, 0:i32, %40
%42 = sub %27, %41
%43:i32 = var
%44 = add %42, %43
%45 = add %44, 9216:i32
%46:i32 = var
%47 = sub %45, %46
%48 = slt %47, 8:i32
blockpc %1 0 %48 1
%49:i32 = var
blockpc %1 1 %49 1
%50:i32 = var
%51:i32 = var
pc %50 1
pc %51 1
infer %7


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, %3, 10:i32
%5 = udiv %0, %4
%6 = and %5, -1:i32 (hasExternalUses)
%7 = mul %6, %4
%8 = sub %0, %7
%9 = block 2
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14:i32 = var
%15 = phi %10, %13, %14
%16 = slt 0:i32, %15
blockpc %9 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %9 1 %18 1
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26:i32 = var
%27 = phi %23, 6:i32, %26
%28 = phi %9, %22, %27
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38:i32 = var
%39:i32 = var
%40 = phi %35, %38, %39
%41 = phi %32, %40, 0:i32
%42 = phi %29, 0:i32, %41
%43 = sub %28, %42
%44:i32 = var
%45 = add %43, %44
%46 = add %45, 9216:i32
%47:i32 = var
%48 = sub %46, %47
%49 = slt %48, 8:i32
blockpc %1 0 %49 1
%50:i32 = var
blockpc %1 1 %50 1
%51:i32 = var
%52:i32 = var
pc %51 1
pc %52 1
infer %8


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 32:i32 (hasExternalUses)
%8 = add %7, 288:i32 (hasExternalUses)
%9 = phi %5, %7, %8
%10 = phi %0, %4, %9
%11 = add %10, 4:i32
%12:i32 = var
%13:i32 = var
%14 = phi %1, %12, %13
%15 = block 2
%16:i32 = var
%17 = phi %15, 6:i32, %16
%18 = phi %0, %14, %17
%19 = block 2
%20 = block 2
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = phi %20, %24, 0:i32
%26 = phi %19, 0:i32, %25
%27 = sub %18, %26
%28:i32 = var
%29 = ashr %28, 31:i32
%30 = add %27, %29 (hasExternalUses)
%31 = add %30, 9216:i32 (hasExternalUses)
%32 = sdiv %31, 9:i32
%33 = and %32, -1:i32 (hasExternalUses)
%34 = add %33, -1024:i32
%35 = shl %34, 2:i32
%36 = add %11, %35 (hasExternalUses)
%37 = add %36, 4:i32
%38:i32 = var
blockpc %0 0 %38 1
%39:i32 = var
blockpc %0 1 %39 1
%40:i32 = var
blockpc %5 0 %40 1
%41:i32 = var
blockpc %5 1 %41 1
%42:i32 = var
blockpc %15 0 %42 1
%43:i32 = var
blockpc %15 1 %43 1
%44:i32 = var
blockpc %19 0 %44 1
%45:i32 = var
blockpc %19 1 %45 1
%46:i32 = var
blockpc %20 0 %46 1
%47:i32 = var
blockpc %20 1 %47 1
%48:i32 = var
blockpc %21 0 %48 1
%49:i32 = var
blockpc %21 1 %49 1
%50:i32 = var
%51:i32 = var
pc %50 1
pc %51 1
infer %37


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 32:i32 (hasExternalUses)
%8 = add %7, 288:i32 (hasExternalUses)
%9 = phi %5, %7, %8
%10 = phi %0, %4, %9
%11 = add %10, 4:i32
%12:i32 = var
%13:i32 = var
%14 = add %12, %13 (hasExternalUses)
%15 = add %14, 9216:i32 (hasExternalUses)
%16 = sdiv %15, 9:i32
%17 = and %16, -1:i32 (hasExternalUses)
%18 = add %17, -1024:i32
%19 = shl %18, 2:i32
%20 = add %11, %19 (hasExternalUses)
%21 = add %20, 4:i32
%22 = block 2
%23 = block 2
%24 = block 2
%25 = block 2
%26 = block 2
%27:i32 = var
%28 = add %27, 4:i32 (hasExternalUses)
%29 = phi %26, %28, %27
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %25, %29, %32
%34 = phi %24, %10, %33
%35:i32 = var
%36 = add %34, %35 (hasExternalUses)
%37 = block 2
%38:i32 = var
%39:i32 = var
%40 = phi %37, %38, %39
%41 = phi %25, %40, %38
%42 = phi %23, %36, %41
%43:i32 = var
%44 = block 2
%45:i32 = var
%46:i32 = var
%47 = phi %44, %45, %46
%48 = phi %1, %43, %47
%49:i32 = var
%50 = phi %0, %48, %49
%51 = phi %22, %42, %50
%52 = eq %21, %51
%53:i32 = var
blockpc %0 0 %53 1
%54:i32 = var
blockpc %0 1 %54 1
%55:i32 = var
blockpc %5 0 %55 1
%56:i32 = var
blockpc %5 1 %56 1
%57:i32 = var
blockpc %22 0 %57 1
%58:i32 = var
blockpc %22 1 %58 1
%59:i32 = var
blockpc %23 0 %59 1
%60:i32 = var
blockpc %23 1 %60 1
%61:i32 = var
blockpc %24 0 %61 1
%62:i32 = var
blockpc %24 1 %62 1
%63:i32 = var
blockpc %25 0 %63 1
%64:i32 = var
blockpc %25 1 %64 1
%65:i32 = var
blockpc %26 0 %65 1
%66:i32 = var
blockpc %26 1 %66 1
%67:i32 = var
blockpc %30 0 %67 1
%68:i32 = var
blockpc %30 1 %68 1
%69:i32 = var
blockpc %37 0 %69 1
%70:i32 = var
blockpc %37 1 %70 1
%71:i32 = var
blockpc %44 0 %71 1
%72:i32 = var
blockpc %44 1 %72 1
%73:i32 = var
%74:i32 = var
pc %73 1
pc %74 1
infer %52


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, %3, 10:i32
%5 = udiv %0, %4
%6 = and %5, -1:i32 (hasExternalUses)
%7 = mul %6, %4
%8 = sub %0, %7 (hasExternalUses)
%9 = eq %8, 0:i32
%10 = block 2
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14:i32 = var
%15:i32 = var
%16 = phi %11, %14, %15
%17 = slt 0:i32, %16
blockpc %10 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %10 1 %19 1
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28 = phi %24, 6:i32, %27
%29 = phi %10, %23, %28
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40:i32 = var
%41 = phi %36, %39, %40
%42 = phi %33, %41, 0:i32
%43 = phi %30, 0:i32, %42
%44 = sub %29, %43
%45:i32 = var
%46 = add %44, %45
%47 = add %46, 9216:i32
%48:i32 = var
%49 = sub %47, %48
%50 = slt %49, 8:i32
blockpc %1 0 %50 1
%51:i32 = var
blockpc %1 1 %51 1
%52:i32 = var
%53:i32 = var
pc %52 1
pc %53 1
infer %9


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 32:i32 (hasExternalUses)
%8 = add %7, 288:i32 (hasExternalUses)
%9 = phi %5, %7, %8
%10 = phi %0, %4, %9
%11 = add %10, 4:i32
%12:i32 = var
%13 = sdiv %12, 9:i32
%14 = and %13, -1:i32 (hasExternalUses)
%15 = add %14, -1024:i32
%16 = shl %15, 2:i32
%17 = add %11, %16 (hasExternalUses)
%18 = add %17, 4:i32
%19 = block 2
%20 = block 2
%21 = block 2
%22 = block 2
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = phi %23, %24, %25
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %25
%30 = phi %22, %26, %29
%31 = phi %21, %10, %30
%32:i32 = var
%33 = add %31, %32 (hasExternalUses)
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %36
%38 = phi %22, %37, %35
%39 = phi %20, %33, %38
%40:i32 = var
%41 = block 2
%42:i32 = var
%43:i32 = var
%44 = phi %41, %42, %43
%45 = phi %1, %40, %44
%46:i32 = var
%47 = phi %0, %45, %46
%48 = phi %19, %39, %47
%49 = eq %18, %48 (hasExternalUses)
%50:i32 = zext %49
%51:i32 = var
%52 = add %51, 0:i32; Replace bad zext operation
%53 = and %50, %52
%54:i32 = var
blockpc %0 0 %54 1
%55:i32 = var
blockpc %0 1 %55 1
%56:i32 = var
blockpc %5 0 %56 1
%57:i32 = var
blockpc %5 1 %57 1
%58:i32 = var
blockpc %19 0 %58 1
%59:i32 = var
blockpc %19 1 %59 1
%60:i32 = var
blockpc %20 0 %60 1
%61:i32 = var
blockpc %20 1 %61 1
%62:i32 = var
blockpc %21 0 %62 1
%63:i32 = var
blockpc %21 1 %63 1
%64:i32 = var
blockpc %22 0 %64 1
%65:i32 = var
blockpc %22 1 %65 1
%66:i32 = var
blockpc %23 0 %66 1
%67:i32 = var
blockpc %23 1 %67 1
%68:i32 = var
blockpc %27 0 %68 1
%69:i32 = var
blockpc %27 1 %69 1
%70:i32 = var
blockpc %34 0 %70 1
%71:i32 = var
blockpc %34 1 %71 1
%72:i32 = var
blockpc %41 0 %72 1
%73:i32 = var
blockpc %41 1 %73 1
%74:i32 = var
%75:i32 = var
pc %74 1
pc %75 1
infer %53


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, %3, 10:i32
%5 = udiv %0, %4
%6 = and %5, -1:i32 (hasExternalUses)
%7 = and %6, 1:i32
%8 = block 2
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12:i32 = var
%13:i32 = var
%14 = phi %9, %12, %13
%15 = slt 0:i32, %14
blockpc %8 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %8 1 %17 1
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26 = phi %22, 6:i32, %25
%27 = phi %8, %21, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37:i32 = var
%38:i32 = var
%39 = phi %34, %37, %38
%40 = phi %31, %39, 0:i32
%41 = phi %28, 0:i32, %40
%42 = sub %27, %41
%43:i32 = var
%44 = add %42, %43
%45 = add %44, 9216:i32
%46:i32 = var
%47 = sub %45, %46
%48 = slt %47, 8:i32
blockpc %1 0 %48 1
%49:i32 = var
blockpc %1 1 %49 1
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %50 1
pc %51 1
pc %52 1
infer %7


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, %3, 10:i32
%5 = udiv %0, %4
%6 = and %5, -1:i32 (hasExternalUses)
%7 = and %6, 1:i32
%8 = eq %7, 0:i32
%9 = block 2
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14:i32 = var
%15 = phi %10, %13, %14
%16 = slt 0:i32, %15
blockpc %9 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %9 1 %18 1
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26:i32 = var
%27 = phi %23, 6:i32, %26
%28 = phi %9, %22, %27
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38:i32 = var
%39:i32 = var
%40 = phi %35, %38, %39
%41 = phi %32, %40, 0:i32
%42 = phi %29, 0:i32, %41
%43 = sub %28, %42
%44:i32 = var
%45 = add %43, %44
%46 = add %45, 9216:i32
%47:i32 = var
%48 = sub %46, %47
%49 = slt %48, 8:i32
blockpc %1 0 %49 1
%50:i32 = var
blockpc %1 1 %50 1
%51:i32 = var
%52:i32 = var
%53:i32 = var
pc %51 1
pc %52 1
pc %53 1
infer %8


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = mul %1, 10:i32 (hasExternalUses)
%3 = phi %0, %2, 10:i32
%4 = lshr %3, 1:i32
%5 = block 2
%6 = block 2
%7:i32 = var
blockpc %6 0 %7 1
%8:i32 = var
blockpc %6 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = phi %6, %9, %10
%12 = slt 0:i32, %11
blockpc %5 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %5 1 %14 1
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = phi %15, %16, %17
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22:i32 = var
%23 = phi %19, 6:i32, %22
%24 = phi %5, %18, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34:i32 = var
%35:i32 = var
%36 = phi %31, %34, %35
%37 = phi %28, %36, 0:i32
%38 = phi %25, 0:i32, %37
%39 = sub %24, %38
%40:i32 = var
%41 = add %39, %40
%42 = add %41, 9216:i32
%43:i32 = var
%44 = sub %42, %43
%45 = slt %44, 8:i32
blockpc %0 0 %45 1
%46:i32 = var
blockpc %0 1 %46 1
%47:i32 = var
%48:i32 = var
%49:i32 = var
pc %47 1
pc %48 1
pc %49 1
infer %4


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, %3, 10:i32
%5 = udiv %0, %4
%6 = and %5, -1:i32 (hasExternalUses)
%7 = mul %6, %4
%8 = sub %0, %7 (hasExternalUses)
%9 = lshr %4, 1:i32 (hasExternalUses)
%10 = ult %8, %9
%11 = block 2
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15:i32 = var
%16:i32 = var
%17 = phi %12, %15, %16
%18 = slt 0:i32, %17
blockpc %11 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %11 1 %20 1
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29 = phi %25, 6:i32, %28
%30 = phi %11, %24, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40:i32 = var
%41:i32 = var
%42 = phi %37, %40, %41
%43 = phi %34, %42, 0:i32
%44 = phi %31, 0:i32, %43
%45 = sub %30, %44
%46:i32 = var
%47 = add %45, %46
%48 = add %47, 9216:i32
%49:i32 = var
%50 = sub %48, %49
%51 = slt %50, 8:i32
blockpc %1 0 %51 1
%52:i32 = var
blockpc %1 1 %52 1
%53:i32 = var
%54:i32 = var
%55:i32 = var
pc %53 1
pc %54 1
pc %55 1
infer %10


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, %3, 10:i32
%5 = udiv %0, %4
%6 = and %5, -1:i32 (hasExternalUses)
%7 = mul %6, %4
%8 = sub %0, %7 (hasExternalUses)
%9 = lshr %4, 1:i32 (hasExternalUses)
%10 = eq %8, %9
%11 = block 2
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15:i32 = var
%16:i32 = var
%17 = phi %12, %15, %16
%18 = slt 0:i32, %17
blockpc %11 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %11 1 %20 1
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29 = phi %25, 6:i32, %28
%30 = phi %11, %24, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40:i32 = var
%41:i32 = var
%42 = phi %37, %40, %41
%43 = phi %34, %42, 0:i32
%44 = phi %31, 0:i32, %43
%45 = sub %30, %44
%46:i32 = var
%47 = add %45, %46
%48 = add %47, 9216:i32
%49:i32 = var
%50 = sub %48, %49
%51 = slt %50, 8:i32
blockpc %1 0 %51 1
%52:i32 = var
blockpc %1 1 %52 1
%53:i32 = var
%54:i32 = var
%55:i32 = var
pc %53 1
pc %54 1
pc %55 1
infer %10


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 32:i32 (hasExternalUses)
%8 = add %7, 288:i32 (hasExternalUses)
%9 = phi %5, %7, %8
%10 = phi %0, %4, %9
%11 = add %10, 4:i32
%12:i32 = var
%13 = sdiv %12, 9:i32
%14 = and %13, -1:i32 (hasExternalUses)
%15 = add %14, -1024:i32
%16 = shl %15, 2:i32
%17 = add %11, %16 (hasExternalUses)
%18 = add %17, 4:i32
%19 = block 2
%20 = block 2
%21 = block 2
%22 = block 2
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = phi %23, %24, %25
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %25
%30 = phi %22, %26, %29
%31 = phi %21, %10, %30
%32:i32 = var
%33 = add %31, %32 (hasExternalUses)
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %36
%38 = phi %22, %37, %35
%39 = phi %20, %33, %38
%40:i32 = var
%41 = block 2
%42:i32 = var
%43:i32 = var
%44 = phi %41, %42, %43
%45 = phi %1, %40, %44
%46:i32 = var
%47 = phi %0, %45, %46
%48 = phi %19, %39, %47
%49 = eq %18, %48 (hasExternalUses)
%50:i32 = zext %49
%51:i32 = var
%52 = add %51, 0:i32; Replace bad zext operation
%53 = and %50, %52
%54:i32 = var
blockpc %0 0 %54 1
%55:i32 = var
blockpc %0 1 %55 1
%56:i32 = var
blockpc %5 0 %56 1
%57:i32 = var
blockpc %5 1 %57 1
%58:i32 = var
blockpc %19 0 %58 1
%59:i32 = var
blockpc %19 1 %59 1
%60:i32 = var
blockpc %20 0 %60 1
%61:i32 = var
blockpc %20 1 %61 1
%62:i32 = var
blockpc %21 0 %62 1
%63:i32 = var
blockpc %21 1 %63 1
%64:i32 = var
blockpc %22 0 %64 1
%65:i32 = var
blockpc %22 1 %65 1
%66:i32 = var
blockpc %23 0 %66 1
%67:i32 = var
blockpc %23 1 %67 1
%68:i32 = var
blockpc %27 0 %68 1
%69:i32 = var
blockpc %27 1 %69 1
%70:i32 = var
blockpc %34 0 %70 1
%71:i32 = var
blockpc %34 1 %71 1
%72:i32 = var
blockpc %41 0 %72 1
%73:i32 = var
blockpc %41 1 %73 1
%74:i32 = var
%75:i32 = var
%76:i32 = var
pc %74 1
pc %75 1
pc %76 1
infer %53


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = and %6, 2049:i32
%8 = ne %7, 0:i32
%9:i32 = zext %8
%10 = and %9, 1:i32 (hasExternalUses)
%11 = phi %5, 1:i32, %10
%12 = phi %0, %4, %11
%13 = eq %12, 0:i32
%14 = block 2
%15:i32 = var
%16 = ne %15, 0:i32
blockpc %14 0 %16 1
%17 = eq %15, 0:i32
blockpc %14 1 %17 1
%18:i32 = var
%19 = add %18, -28:i32
%20:i32 = var
%21 = phi %14, %19, %20
%22 = slt 0:i32, %21
blockpc %0 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %0 1 %24 1
%25:i64 = var
%26 = slt %25, 0:i64
blockpc %5 0 %26 1
%27:i32 = var
blockpc %5 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
pc %28 1
pc %29 1
pc %30 1
infer %13


; start LHS (in $11)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = ne %4, 0:i32
blockpc %3 0 %5 1
%6 = eq %4, 0:i32
blockpc %3 1 %6 1
%7:i32 = var
%8 = add %7, -28:i32
%9:i32 = var
%10 = phi %3, %8, %9
%11 = slt 0:i32, %10
blockpc %2 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %2 1 %13 1
%14 = block 2
%15:i32 = var
%16:i32 = var
%17 = phi %14, %15, %16
%18 = block 2
%19:i64 = var
%20 = slt %19, 0:i64
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23:i32 = var
%24 = and %23, 2049:i32
%25 = ne %24, 0:i32
%26:i32 = zext %25
%27 = and %26, 1:i32
%28 = phi %18, 1:i32, %27
%29 = phi %2, %17, %28
%30 = eq %29, 0:i32
%31:i32 = zext %30
%32 = eq %31, 0:i32
%33:i32 = var
%34:i32 = var
%35:i32 = var
pc %32 1
pc %33 1
pc %34 1
pc %35 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = ne %5, 0:i32
blockpc %4 0 %6 1
%7 = eq %5, 0:i32
blockpc %4 1 %7 1
%8:i32 = var
%9 = add %8, -28:i32
%10:i32 = var
%11 = phi %4, %9, %10
%12 = slt 0:i32, %11
blockpc %3 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %3 1 %14 1
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = phi %15, %16, %17
%19 = block 2
%20:i64 = var
%21 = slt %20, 0:i64
blockpc %19 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %19 1 %23 1
%24:i32 = var
%25 = phi %19, 1:i32, %24
%26 = phi %3, %18, %25
%27 = eq %26, 0:i32
%28:i32 = zext %27
%29 = eq %28, 0:i32
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 45:i32
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = ne %6, 0:i32
blockpc %5 0 %7 1
%8 = eq %6, 0:i32
blockpc %5 1 %8 1
%9:i32 = var
%10 = add %9, -28:i32
%11:i32 = var
%12 = phi %5, %10, %11
%13 = slt 0:i32, %12
blockpc %4 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %4 1 %15 1
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = block 2
%21:i64 = var
%22 = slt %21, 0:i64
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25:i32 = var
%26 = phi %20, 1:i32, %25
%27 = phi %4, %19, %26
%28 = eq %27, 0:i32
%29:i32 = zext %28
%30 = eq %29, 0:i32
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %3


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, %3, 10:i32
%5 = udiv %0, %4
%6 = and %5, -1:i32 (hasExternalUses)
%7 = mul %6, %4
%8 = sub %0, %7 (hasExternalUses)
%9 = sub %0, %8
%10 = block 2
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14:i32 = var
%15:i32 = var
%16 = phi %11, %14, %15
%17 = slt 0:i32, %16
blockpc %10 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %10 1 %19 1
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28 = phi %24, 6:i32, %27
%29 = phi %10, %23, %28
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40:i32 = var
%41 = phi %36, %39, %40
%42 = phi %33, %41, 0:i32
%43 = phi %30, 0:i32, %42
%44 = sub %29, %43
%45:i32 = var
%46 = add %44, %45
%47 = add %46, 9216:i32
%48:i32 = var
%49 = sub %47, %48
%50 = slt %49, 8:i32
blockpc %1 0 %50 1
%51:i32 = var
blockpc %1 1 %51 1
%52:i32 = var
%53:i32 = var
%54:i32 = var
pc %52 1
pc %53 1
pc %54 1
infer %9


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, %3, 10:i32
%5 = udiv %0, %4
%6 = and %5, -1:i32 (hasExternalUses)
%7 = mul %6, %4
%8 = sub %0, %7 (hasExternalUses)
%9 = sub %0, %8 (hasExternalUses)
%10 = add %9, %4
%11 = block 2
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15:i32 = var
%16:i32 = var
%17 = phi %12, %15, %16
%18 = slt 0:i32, %17
blockpc %11 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %11 1 %20 1
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29 = phi %25, 6:i32, %28
%30 = phi %11, %24, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40:i32 = var
%41:i32 = var
%42 = phi %37, %40, %41
%43 = phi %34, %42, 0:i32
%44 = phi %31, 0:i32, %43
%45 = sub %30, %44
%46:i32 = var
%47 = add %45, %46
%48 = add %47, 9216:i32
%49:i32 = var
%50 = sub %48, %49
%51 = slt %50, 8:i32
blockpc %1 0 %51 1
%52:i32 = var
blockpc %1 1 %52 1
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
pc %53 1
pc %54 1
pc %55 1
pc %56 1
infer %10


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = mul %2, 10:i32 (hasExternalUses)
%4 = phi %1, %3, 10:i32
%5 = udiv %0, %4
%6 = and %5, -1:i32 (hasExternalUses)
%7 = mul %6, %4
%8 = sub %0, %7 (hasExternalUses)
%9 = sub %0, %8 (hasExternalUses)
%10 = add %9, %4 (hasExternalUses)
%11 = ult 999999999:i32, %10
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17:i32 = var
%18 = phi %13, %16, %17
%19 = slt 0:i32, %18
blockpc %12 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %12 1 %21 1
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %24
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = phi %26, 6:i32, %29
%31 = phi %12, %25, %30
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41:i32 = var
%42:i32 = var
%43 = phi %38, %41, %42
%44 = phi %35, %43, 0:i32
%45 = phi %32, 0:i32, %44
%46 = sub %31, %45
%47:i32 = var
%48 = add %46, %47
%49 = add %48, 9216:i32
%50:i32 = var
%51 = sub %49, %50
%52 = slt %51, 8:i32
blockpc %1 0 %52 1
%53:i32 = var
blockpc %1 1 %53 1
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
pc %54 1
pc %55 1
pc %56 1
pc %57 1
infer %11


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -4:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
blockpc %3 0 %4 1
%5:i32 = var
blockpc %3 1 %5 1
%6:i32 = var
%7 = mul %6, 10:i32
%8 = phi %3, %7, 10:i32
%9 = udiv %2, %8
%10 = and %9, -1:i32
%11 = mul %10, %8
%12 = sub %2, %11
%13 = sub %2, %12
%14 = add %13, %8
%15 = ult 999999999:i32, %14
%16:i32 = var
%17 = ne %16, 0:i32
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29:i32 = var
%30 = phi %25, %28, %29
%31 = phi %18, %24, %30
%32 = add %31, 4:i32
%33:i32 = var
%34 = add %32, %33
%35 = add %34, 4:i32
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49:i32 = var
%50:i32 = var
%51 = phi %46, %49, %50
%52 = phi %43, %51, %49
%53 = phi %39, %42, %52
%54:i32 = var
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58:i32 = var
%59:i32 = var
%60 = phi %55, %58, %59
%61 = phi %21, %54, %60
%62:i32 = var
%63 = phi %18, %61, %62
%64 = phi %36, %53, %63
%65 = eq %35, %64
%66:i32 = zext %65
%67:i32 = var
%68 = add %67, 0:i32; Replace bad zext operation
%69 = and %66, %68
%70 = eq %69, 0:i32
%71:i32 = var
%72:i32 = var
pc %15 1
pc %17 1
pc %70 1
pc %71 1
pc %72 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -4:i32 (hasExternalUses)
%2:i32 = var
%3 = ult %1, %2
%4:i32 = var
%5 = block 2
%6:i32 = var
blockpc %5 0 %6 1
%7:i32 = var
blockpc %5 1 %7 1
%8:i32 = var
%9 = mul %8, 10:i32
%10 = phi %5, %9, 10:i32
%11 = udiv %4, %10
%12 = and %11, -1:i32
%13 = mul %12, %10
%14 = sub %4, %13
%15 = sub %4, %14
%16 = add %15, %10
%17 = ult 999999999:i32, %16
%18:i32 = var
%19 = ne %18, 0:i32
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = phi %23, %24, %25
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30:i32 = var
%31:i32 = var
%32 = phi %27, %30, %31
%33 = phi %20, %26, %32
%34 = add %33, 4:i32
%35:i32 = var
%36 = add %34, %35
%37 = add %36, 4:i32
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44:i32 = var
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51:i32 = var
%52:i32 = var
%53 = phi %48, %51, %52
%54 = phi %45, %53, %51
%55 = phi %41, %44, %54
%56:i32 = var
%57 = block 2
%58:i32 = var
blockpc %57 0 %58 1
%59:i32 = var
blockpc %57 1 %59 1
%60:i32 = var
%61:i32 = var
%62 = phi %57, %60, %61
%63 = phi %23, %56, %62
%64:i32 = var
%65 = phi %20, %63, %64
%66 = phi %38, %55, %65
%67 = eq %37, %66
%68:i32 = zext %67
%69:i32 = var
%70 = add %69, 0:i32; Replace bad zext operation
%71 = and %68, %70
%72 = eq %71, 0:i32
%73:i32 = var
%74:i32 = var
pc %17 1
pc %19 1
pc %72 1
pc %73 1
pc %74 1
infer %3


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -4:i32
%2:i32 = var
%3 = add %2, -4:i32
%4 = ult %3, %0
%5:i32 = var
%6 = block 2
%7:i32 = var
blockpc %6 0 %7 1
%8:i32 = var
blockpc %6 1 %8 1
%9:i32 = var
%10 = mul %9, 10:i32
%11 = phi %6, %10, 10:i32
%12 = udiv %5, %11
%13 = and %12, -1:i32
%14 = mul %13, %11
%15 = sub %5, %14
%16 = sub %5, %15
%17 = add %16, %11
%18 = ult 999999999:i32, %17
%19:i32 = var
%20 = ne %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32:i32 = var
%33 = phi %28, %31, %32
%34 = phi %21, %27, %33
%35 = add %34, 4:i32
%36:i32 = var
%37 = add %35, %36
%38 = add %37, 4:i32
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45:i32 = var
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52:i32 = var
%53:i32 = var
%54 = phi %49, %52, %53
%55 = phi %46, %54, %52
%56 = phi %42, %45, %55
%57:i32 = var
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %58, %61, %62
%64 = phi %24, %57, %63
%65:i32 = var
%66 = phi %21, %64, %65
%67 = phi %39, %56, %66
%68 = eq %38, %67
%69:i32 = zext %68
%70:i32 = var
%71 = add %70, 0:i32; Replace bad zext operation
%72 = and %69, %71
%73 = eq %72, 0:i32
%74:i32 = var
%75:i32 = var
pc %4 1
pc %18 1
pc %20 1
pc %73 1
pc %74 1
pc %75 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
blockpc %3 0 %4 1
%5:i32 = var
blockpc %3 1 %5 1
%6:i32 = var
%7 = mul %6, 10:i32
%8 = phi %3, %7, 10:i32
%9 = udiv %2, %8
%10 = and %9, -1:i32
%11 = mul %10, %8
%12 = sub %2, %11
%13 = sub %2, %12
%14 = add %13, %8
%15 = ult 999999999:i32, %14
%16:i32 = var
%17 = ne %16, 0:i32
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29:i32 = var
%30 = phi %25, %28, %29
%31 = phi %18, %24, %30
%32 = add %31, 4:i32
%33:i32 = var
%34 = add %32, %33
%35 = add %34, 4:i32
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49:i32 = var
%50:i32 = var
%51 = phi %46, %49, %50
%52 = phi %43, %51, %49
%53 = phi %39, %42, %52
%54:i32 = var
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58:i32 = var
%59:i32 = var
%60 = phi %55, %58, %59
%61 = phi %21, %54, %60
%62:i32 = var
%63 = phi %18, %61, %62
%64 = phi %36, %53, %63
%65 = eq %35, %64
%66:i32 = zext %65
%67:i32 = var
%68 = add %67, 0:i32; Replace bad zext operation
%69 = and %66, %68
%70 = eq %69, 0:i32
%71:i32 = var
%72:i32 = var
pc %15 1
pc %17 1
pc %70 1
pc %71 1
pc %72 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = ult 999999999:i32, %1
%3:i32 = var
%4 = block 2
%5:i32 = var
blockpc %4 0 %5 1
%6:i32 = var
blockpc %4 1 %6 1
%7:i32 = var
%8 = mul %7, 10:i32
%9 = phi %4, %8, 10:i32
%10 = udiv %3, %9
%11 = and %10, -1:i32
%12 = mul %11, %9
%13 = sub %3, %12
%14 = sub %3, %13
%15 = add %14, %9
%16 = ult 999999999:i32, %15
%17:i32 = var
%18 = ne %17, 0:i32
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %24
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30:i32 = var
%31 = phi %26, %29, %30
%32 = phi %19, %25, %31
%33 = add %32, 4:i32
%34:i32 = var
%35 = add %33, %34
%36 = add %35, 4:i32
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50:i32 = var
%51:i32 = var
%52 = phi %47, %50, %51
%53 = phi %44, %52, %50
%54 = phi %40, %43, %53
%55:i32 = var
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60:i32 = var
%61 = phi %56, %59, %60
%62 = phi %22, %55, %61
%63:i32 = var
%64 = phi %19, %62, %63
%65 = phi %37, %54, %64
%66 = eq %36, %65
%67:i32 = zext %66
%68:i32 = var
%69 = add %68, 0:i32; Replace bad zext operation
%70 = and %67, %69
%71 = eq %70, 0:i32
%72:i32 = var
%73:i32 = var
pc %16 1
pc %18 1
pc %71 1
pc %72 1
pc %73 1
infer %2


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 32:i32 (hasExternalUses)
%8 = add %7, 288:i32 (hasExternalUses)
%9 = phi %5, %7, %8
%10 = phi %0, %4, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = add %13, -4:i32 (hasExternalUses)
%15 = phi %12, %14, %13
%16 = block 2
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = add %19, 4:i32 (hasExternalUses)
%21 = phi %18, %20, %19
%22 = block 2
%23 = add %19, 4:i32 (hasExternalUses)
%24 = phi %22, %23, %19
%25 = phi %17, %21, %24
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = block 2
%30:i32 = var
%31 = phi %29, %28, %30
%32 = phi %27, %28, %31
%33 = phi %1, %26, %32
%34 = phi %0, %33, %9
%35 = phi %16, %25, %34
%36 = phi %11, %15, %35
%37 = sub %10, %36
%38:i32 = var
blockpc %0 0 %38 1
%39:i32 = var
blockpc %0 1 %39 1
%40:i32 = var
blockpc %5 0 %40 1
%41:i32 = var
blockpc %5 1 %41 1
%42:i32 = var
blockpc %11 0 %42 1
%43:i32 = var
blockpc %11 1 %43 1
%44:i32 = var
blockpc %12 0 %44 1
%45:i32 = var
blockpc %12 1 %45 1
%46:i32 = var
blockpc %16 0 %46 1
%47:i32 = var
blockpc %16 1 %47 1
%48:i32 = var
blockpc %17 0 %48 1
%49:i32 = var
blockpc %17 1 %49 1
%50:i32 = var
blockpc %18 0 %50 1
%51:i32 = var
blockpc %18 1 %51 1
%52:i32 = var
blockpc %22 0 %52 1
%53:i32 = var
blockpc %22 1 %53 1
%54:i32 = var
blockpc %27 0 %54 1
%55:i32 = var
blockpc %27 1 %55 1
%56:i32 = var
blockpc %29 0 %56 1
%57:i32 = var
blockpc %29 1 %57 1
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
pc %58 1
pc %59 1
pc %60 1
pc %61 1
infer %37


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 32:i32 (hasExternalUses)
%8 = add %7, 288:i32 (hasExternalUses)
%9 = phi %5, %7, %8
%10 = phi %0, %4, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = add %13, -4:i32 (hasExternalUses)
%15 = phi %12, %14, %13
%16 = block 2
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = add %19, 4:i32 (hasExternalUses)
%21 = phi %18, %20, %19
%22 = block 2
%23 = add %19, 4:i32 (hasExternalUses)
%24 = phi %22, %23, %19
%25 = phi %17, %21, %24
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = block 2
%30:i32 = var
%31 = phi %29, %28, %30
%32 = phi %27, %28, %31
%33 = phi %1, %26, %32
%34 = phi %0, %33, %9
%35 = phi %16, %25, %34
%36 = phi %11, %15, %35
%37 = sub %10, %36
%38 = ashr %37, 2:i32
%39:i32 = var
blockpc %0 0 %39 1
%40:i32 = var
blockpc %0 1 %40 1
%41:i32 = var
blockpc %5 0 %41 1
%42:i32 = var
blockpc %5 1 %42 1
%43:i32 = var
blockpc %11 0 %43 1
%44:i32 = var
blockpc %11 1 %44 1
%45:i32 = var
blockpc %12 0 %45 1
%46:i32 = var
blockpc %12 1 %46 1
%47:i32 = var
blockpc %16 0 %47 1
%48:i32 = var
blockpc %16 1 %48 1
%49:i32 = var
blockpc %17 0 %49 1
%50:i32 = var
blockpc %17 1 %50 1
%51:i32 = var
blockpc %18 0 %51 1
%52:i32 = var
blockpc %18 1 %52 1
%53:i32 = var
blockpc %22 0 %53 1
%54:i32 = var
blockpc %22 1 %54 1
%55:i32 = var
blockpc %27 0 %55 1
%56:i32 = var
blockpc %27 1 %56 1
%57:i32 = var
blockpc %29 0 %57 1
%58:i32 = var
blockpc %29 1 %58 1
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
pc %59 1
pc %60 1
pc %61 1
pc %62 1
infer %38


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6:i32 = var
%7 = add %6, 32:i32 (hasExternalUses)
%8 = add %7, 288:i32 (hasExternalUses)
%9 = phi %5, %7, %8
%10 = phi %0, %4, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = add %13, -4:i32 (hasExternalUses)
%15 = phi %12, %14, %13
%16 = block 2
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = add %19, 4:i32 (hasExternalUses)
%21 = phi %18, %20, %19
%22 = block 2
%23 = add %19, 4:i32 (hasExternalUses)
%24 = phi %22, %23, %19
%25 = phi %17, %21, %24
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = block 2
%30:i32 = var
%31 = phi %29, %28, %30
%32 = phi %27, %28, %31
%33 = phi %1, %26, %32
%34 = phi %0, %33, %9
%35 = phi %16, %25, %34
%36 = phi %11, %15, %35
%37 = sub %10, %36
%38 = ashr %37, 2:i32
%39 = mul %38, 9:i32
%40:i32 = var
blockpc %0 0 %40 1
%41:i32 = var
blockpc %0 1 %41 1
%42:i32 = var
blockpc %5 0 %42 1
%43:i32 = var
blockpc %5 1 %43 1
%44:i32 = var
blockpc %11 0 %44 1
%45:i32 = var
blockpc %11 1 %45 1
%46:i32 = var
blockpc %12 0 %46 1
%47:i32 = var
blockpc %12 1 %47 1
%48:i32 = var
blockpc %16 0 %48 1
%49:i32 = var
blockpc %16 1 %49 1
%50:i32 = var
blockpc %17 0 %50 1
%51:i32 = var
blockpc %17 1 %51 1
%52:i32 = var
blockpc %18 0 %52 1
%53:i32 = var
blockpc %18 1 %53 1
%54:i32 = var
blockpc %22 0 %54 1
%55:i32 = var
blockpc %22 1 %55 1
%56:i32 = var
blockpc %27 0 %56 1
%57:i32 = var
blockpc %27 1 %57 1
%58:i32 = var
blockpc %29 0 %58 1
%59:i32 = var
blockpc %29 1 %59 1
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
pc %60 1
pc %61 1
pc %62 1
pc %63 1
infer %39


; start LHS (in $11)
%0:i32 = var
%1 = ult %0, 10:i32
%2:i32 = var
%3 = ne %2, 0:i32
%4 = block 2
%5:i32 = var
blockpc %4 0 %5 1
%6:i32 = var
blockpc %4 1 %6 1
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14:i32 = var
%15:i32 = var
%16 = phi %11, %14, %15
%17 = phi %4, %10, %16
%18 = add %17, 4:i32
%19:i32 = var
%20 = and %19, -1:i32
%21 = add %20, -1024:i32
%22 = shl %21, 2:i32
%23 = add %18, %22
%24 = add %23, 4:i32
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38:i32 = var
%39:i32 = var
%40 = phi %35, %38, %39
%41 = phi %32, %40, %38
%42 = phi %28, %31, %41
%43:i32 = var
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47:i32 = var
%48:i32 = var
%49 = phi %44, %47, %48
%50 = phi %7, %43, %49
%51:i32 = var
%52 = phi %4, %50, %51
%53 = phi %25, %42, %52
%54 = eq %24, %53
%55:i32 = zext %54
%56:i32 = var
%57 = add %56, 0:i32; Replace bad zext operation
%58 = and %55, %57
%59 = eq %58, 0:i32
%60:i32 = var
%61:i32 = var
pc %3 1
pc %59 1
pc %60 1
pc %61 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = mul %0, 10:i32
%2:i32 = var
%3 = ult %2, 10:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ne %6, 0:i32
%8 = block 2
%9:i32 = var
blockpc %8 0 %9 1
%10:i32 = var
blockpc %8 1 %10 1
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19:i32 = var
%20 = phi %15, %18, %19
%21 = phi %8, %14, %20
%22 = add %21, 4:i32
%23:i32 = var
%24 = and %23, -1:i32
%25 = add %24, -1024:i32
%26 = shl %25, 2:i32
%27 = add %22, %26
%28 = add %27, 4:i32
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35:i32 = var
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43:i32 = var
%44 = phi %39, %42, %43
%45 = phi %36, %44, %42
%46 = phi %32, %35, %45
%47:i32 = var
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51:i32 = var
%52:i32 = var
%53 = phi %48, %51, %52
%54 = phi %11, %47, %53
%55:i32 = var
%56 = phi %8, %54, %55
%57 = phi %29, %46, %56
%58 = eq %28, %57
%59:i32 = zext %58
%60:i32 = var
%61 = add %60, 0:i32; Replace bad zext operation
%62 = and %59, %61
%63 = eq %62, 0:i32
%64:i32 = var
%65:i32 = var
pc %5 1
pc %7 1
pc %63 1
pc %64 1
pc %65 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = ult %2, 10:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ne %6, 0:i32
%8 = block 2
%9:i32 = var
blockpc %8 0 %9 1
%10:i32 = var
blockpc %8 1 %10 1
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19:i32 = var
%20 = phi %15, %18, %19
%21 = phi %8, %14, %20
%22 = add %21, 4:i32
%23:i32 = var
%24 = and %23, -1:i32
%25 = add %24, -1024:i32
%26 = shl %25, 2:i32
%27 = add %22, %26
%28 = add %27, 4:i32
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35:i32 = var
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43:i32 = var
%44 = phi %39, %42, %43
%45 = phi %36, %44, %42
%46 = phi %32, %35, %45
%47:i32 = var
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51:i32 = var
%52:i32 = var
%53 = phi %48, %51, %52
%54 = phi %11, %47, %53
%55:i32 = var
%56 = phi %8, %54, %55
%57 = phi %29, %46, %56
%58 = eq %28, %57
%59:i32 = zext %58
%60:i32 = var
%61 = add %60, 0:i32; Replace bad zext operation
%62 = and %59, %61
%63 = eq %62, 0:i32
%64:i32 = var
%65:i32 = var
pc %5 1
pc %7 1
pc %63 1
pc %64 1
pc %65 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = mul %1, 10:i32
%3 = ult %0, %2
%4 = ult %0, 10:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = ne %7, 0:i32
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = phi %12, %13, %14
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19:i32 = var
%20:i32 = var
%21 = phi %16, %19, %20
%22 = phi %9, %15, %21
%23 = add %22, 4:i32
%24:i32 = var
%25 = and %24, -1:i32
%26 = add %25, -1024:i32
%27 = shl %26, 2:i32
%28 = add %23, %27
%29 = add %28, 4:i32
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36:i32 = var
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44:i32 = var
%45 = phi %40, %43, %44
%46 = phi %37, %45, %43
%47 = phi %33, %36, %46
%48:i32 = var
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52:i32 = var
%53:i32 = var
%54 = phi %49, %52, %53
%55 = phi %12, %48, %54
%56:i32 = var
%57 = phi %9, %55, %56
%58 = phi %30, %47, %57
%59 = eq %29, %58
%60:i32 = zext %59
%61:i32 = var
%62 = add %61, 0:i32; Replace bad zext operation
%63 = and %60, %62
%64 = eq %63, 0:i32
%65:i32 = var
%66:i32 = var
pc %6 1
pc %8 1
pc %64 1
pc %65 1
pc %66 1
infer %3


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = block 2
%7:i32 = var
%8 = add %7, 32:i32 (hasExternalUses)
%9 = add %8, 288:i32 (hasExternalUses)
%10 = phi %6, %8, %9
%11 = phi %1, %5, %10
%12 = add %11, 4:i32
%13:i32 = var
%14:i32 = var
%15 = add %13, %14 (hasExternalUses)
%16 = add %15, 9216:i32 (hasExternalUses)
%17 = sdiv %16, 9:i32
%18 = and %17, -1:i32 (hasExternalUses)
%19 = add %18, -1024:i32
%20 = shl %19, 2:i32
%21 = add %12, %20 (hasExternalUses)
%22 = block 2
%23 = block 2
%24:i32 = var
%25 = add %24, -4:i32 (hasExternalUses)
%26 = phi %23, %25, %21
%27 = phi %22, %26, %21
%28 = phi %0, %21, %27
%29 = add %28, 4:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %6 0 %34 1
%35:i32 = var
blockpc %6 1 %35 1
%36:i32 = var
blockpc %22 0 %36 1
%37:i32 = var
blockpc %22 1 %37 1
%38:i32 = var
blockpc %23 0 %38 1
%39:i32 = var
blockpc %23 1 %39 1
%40:i32 = var
%41:i32 = var
pc %40 1
pc %41 1
infer %29


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = block 2
%7:i32 = var
%8 = add %7, 32:i32 (hasExternalUses)
%9 = add %8, 288:i32 (hasExternalUses)
%10 = phi %6, %8, %9
%11 = phi %1, %5, %10
%12 = add %11, 4:i32
%13:i32 = var
%14 = add %13, 9216:i32 (hasExternalUses)
%15 = sdiv %14, 9:i32
%16 = and %15, -1:i32 (hasExternalUses)
%17 = add %16, -1024:i32
%18 = shl %17, 2:i32
%19 = add %12, %18 (hasExternalUses)
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = add %22, -4:i32 (hasExternalUses)
%24 = phi %21, %23, %19
%25 = phi %20, %24, %19
%26 = phi %0, %19, %25
%27 = add %26, 4:i32 (hasExternalUses)
%28 = block 2
%29 = block 2
%30:i32 = var
%31 = block 2
%32 = block 2
%33:i32 = var
%34:i32 = var
%35 = phi %32, %33, %34
%36 = phi %31, %35, %33
%37 = phi %29, %30, %36
%38:i32 = var
%39 = block 2
%40:i32 = var
%41:i32 = var
%42 = phi %39, %40, %41
%43 = phi %2, %38, %42
%44:i32 = var
%45 = phi %1, %43, %44
%46 = phi %28, %37, %45
%47 = ult %27, %46
%48:i32 = var
blockpc %0 0 %48 1
%49:i32 = var
blockpc %0 1 %49 1
%50:i32 = var
blockpc %1 0 %50 1
%51:i32 = var
blockpc %1 1 %51 1
%52:i32 = var
blockpc %6 0 %52 1
%53:i32 = var
blockpc %6 1 %53 1
%54:i32 = var
blockpc %20 0 %54 1
%55:i32 = var
blockpc %20 1 %55 1
%56:i32 = var
blockpc %21 0 %56 1
%57:i32 = var
blockpc %21 1 %57 1
%58:i32 = var
blockpc %28 0 %58 1
%59:i32 = var
blockpc %28 1 %59 1
%60:i32 = var
blockpc %29 0 %60 1
%61:i32 = var
blockpc %29 1 %61 1
%62:i32 = var
blockpc %31 0 %62 1
%63:i32 = var
blockpc %31 1 %63 1
%64:i32 = var
blockpc %32 0 %64 1
%65:i32 = var
blockpc %32 1 %65 1
%66:i32 = var
blockpc %39 0 %66 1
%67:i32 = var
blockpc %39 1 %67 1
%68:i32 = var
%69:i32 = var
pc %68 1
pc %69 1
infer %47


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %4, %8, %12
%14 = block 2
%15 = block 2
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, %18
%23 = phi %15, %19, %22
%24:i32 = var
%25 = block 2
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = phi %27, %26, %28
%30 = phi %25, %26, %29
%31 = phi %5, %24, %30
%32 = phi %4, %31, %12
%33 = phi %14, %23, %32
%34 = sub %13, %33
%35 = ashr %34, 2:i32
%36 = mul %35, 9:i32 (hasExternalUses)
%37:i32 = var
%38 = phi %3, %36, %37
%39 = phi %2, %38, 0:i32
%40 = block 2
%41 = block 2
%42:i32 = var
%43:i32 = var
%44 = phi %41, %42, %43
%45 = phi %40, %44, %39
%46 = phi %1, %39, %45
%47 = phi %0, %46, %39
%48 = sub 0:i32, %47
%49:i32 = var
blockpc %0 0 %49 1
%50:i32 = var
blockpc %0 1 %50 1
%51:i32 = var
blockpc %1 0 %51 1
%52:i32 = var
blockpc %1 1 %52 1
%53:i32 = var
blockpc %2 0 %53 1
%54:i32 = var
blockpc %2 1 %54 1
%55:i32 = var
blockpc %3 0 %55 1
%56:i32 = var
blockpc %3 1 %56 1
%57:i32 = var
blockpc %4 0 %57 1
%58:i32 = var
blockpc %4 1 %58 1
%59:i32 = var
blockpc %9 0 %59 1
%60:i32 = var
blockpc %9 1 %60 1
%61:i32 = var
blockpc %14 0 %61 1
%62:i32 = var
blockpc %14 1 %62 1
%63:i32 = var
blockpc %15 0 %63 1
%64:i32 = var
blockpc %15 1 %64 1
%65:i32 = var
blockpc %16 0 %65 1
%66:i32 = var
blockpc %16 1 %66 1
%67:i32 = var
blockpc %20 0 %67 1
%68:i32 = var
blockpc %20 1 %68 1
%69:i32 = var
blockpc %25 0 %69 1
%70:i32 = var
blockpc %25 1 %70 1
%71:i32 = var
blockpc %27 0 %71 1
%72:i32 = var
blockpc %27 1 %72 1
%73:i32 = var
blockpc %40 0 %73 1
%74:i32 = var
blockpc %40 1 %74 1
%75:i32 = var
blockpc %41 0 %75 1
%76:i32 = var
blockpc %41 1 %76 1
%77:i32 = var
pc %77 1
infer %48


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = add %5, 4:i32 (hasExternalUses)
%7 = phi %4, %6, %5
%8 = block 2
%9 = add %5, 4:i32 (hasExternalUses)
%10 = phi %8, %9, %5
%11 = phi %3, %7, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = block 2
%16:i32 = var
%17 = block 2
%18 = add %16, -4:i32 (hasExternalUses)
%19 = phi %17, %16, %18
%20 = phi %15, %16, %19
%21 = phi %13, %14, %20
%22 = block 2
%23:i32 = var
%24 = add %23, 32:i32 (hasExternalUses)
%25 = add %24, 288:i32 (hasExternalUses)
%26 = phi %22, %24, %25
%27 = phi %12, %21, %26
%28 = phi %2, %11, %27
%29 = block 2
%30 = block 2
%31 = block 2
%32:i32 = var
%33:i32 = var
%34 = phi %31, %32, %33
%35 = phi %30, %34, %28
%36 = phi %29, %35, %28
%37 = phi %1, %28, %36
%38 = phi %0, %37, %28
%39 = block 2
%40:i32 = var
%41 = block 2
%42:i32 = var
%43 = block 2
%44:i32 = var
%45:i32 = var
%46 = phi %43, %44, %45
%47 = phi %3, %46, %44
%48 = phi %41, %42, %47
%49:i32 = var
%50 = block 2
%51:i32 = var
%52:i32 = var
%53 = phi %50, %51, %52
%54 = phi %13, %49, %53
%55:i32 = var
%56 = phi %12, %54, %55
%57 = phi %2, %48, %56
%58 = phi %39, %40, %57
%59 = phi %0, %58, %57
%60 = ult %38, %59
%61:i32 = var
blockpc %0 0 %61 1
%62:i32 = var
blockpc %0 1 %62 1
%63:i32 = var
blockpc %1 0 %63 1
%64:i32 = var
blockpc %1 1 %64 1
%65:i32 = var
blockpc %2 0 %65 1
%66:i32 = var
blockpc %2 1 %66 1
%67:i32 = var
blockpc %3 0 %67 1
%68:i32 = var
blockpc %3 1 %68 1
%69:i32 = var
blockpc %4 0 %69 1
%70:i32 = var
blockpc %4 1 %70 1
%71:i32 = var
blockpc %8 0 %71 1
%72:i32 = var
blockpc %8 1 %72 1
%73:i32 = var
blockpc %12 0 %73 1
%74:i32 = var
blockpc %12 1 %74 1
%75:i32 = var
blockpc %15 0 %75 1
%76:i32 = var
blockpc %15 1 %76 1
%77:i32 = var
blockpc %17 0 %77 1
%78:i32 = var
blockpc %17 1 %78 1
%79:i32 = var
blockpc %22 0 %79 1
%80:i32 = var
blockpc %22 1 %80 1
%81:i32 = var
blockpc %29 0 %81 1
%82:i32 = var
blockpc %29 1 %82 1
%83:i32 = var
blockpc %30 0 %83 1
%84:i32 = var
blockpc %30 1 %84 1
%85:i32 = var
blockpc %31 0 %85 1
%86:i32 = var
blockpc %31 1 %86 1
%87:i32 = var
blockpc %39 0 %87 1
%88:i32 = var
blockpc %39 1 %88 1
%89:i32 = var
blockpc %41 0 %89 1
%90:i32 = var
blockpc %41 1 %90 1
%91:i32 = var
blockpc %43 0 %91 1
%92:i32 = var
blockpc %43 1 %92 1
%93:i32 = var
blockpc %50 0 %93 1
%94:i32 = var
blockpc %50 1 %94 1
%95:i32 = var
pc %95 1
infer %60


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -4:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
blockpc %4 0 %5 1
%6:i32 = var
blockpc %4 1 %6 1
%7:i32 = var
%8:i32 = var
%9 = phi %4, %7, %8
%10 = slt 0:i32, %9
blockpc %3 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %3 1 %12 1
%13 = block 2
%14:i32 = var
%15:i32 = var
%16 = phi %13, %14, %15
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21 = phi %17, 6:i32, %20
%22 = phi %3, %16, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %29, %32, %33
%35 = phi %26, %34, 0:i32
%36 = phi %23, 0:i32, %35
%37 = sub %22, %36
%38:i32 = var
%39 = add %37, %38
%40:i32 = var
%41 = slt %39, %40
blockpc %2 0 %41 1
%42:i32 = var
blockpc %2 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56:i32 = var
%57 = phi %52, %55, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62 = phi %58, %61, %56
%63 = phi %49, %57, %62
%64:i32 = var
%65 = block 2
%66:i32 = var
blockpc %65 0 %66 1
%67:i32 = var
blockpc %65 1 %67 1
%68:i32 = var
%69 = block 2
%70:i32 = var
blockpc %69 0 %70 1
%71:i32 = var
blockpc %69 1 %71 1
%72:i32 = var
%73 = phi %69, %68, %72
%74 = phi %65, %68, %73
%75 = phi %13, %64, %74
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79:i32 = var
%80:i32 = var
%81 = phi %76, %79, %80
%82 = phi %3, %75, %81
%83 = phi %46, %63, %82
%84 = block 2
%85:i32 = var
blockpc %84 0 %85 1
%86:i32 = var
blockpc %84 1 %86 1
%87 = block 2
%88:i32 = var
blockpc %87 0 %88 1
%89:i32 = var
blockpc %87 1 %89 1
%90 = block 2
%91:i32 = var
blockpc %90 0 %91 1
%92:i32 = var
blockpc %90 1 %92 1
%93:i32 = var
%94:i32 = var
%95 = phi %90, %93, %94
%96 = phi %87, %95, %83
%97 = phi %84, %96, %83
%98 = phi %43, %83, %97
%99 = phi %2, %98, %83
%100 = block 2
%101:i32 = var
blockpc %100 0 %101 1
%102:i32 = var
blockpc %100 1 %102 1
%103:i32 = var
%104 = block 2
%105:i32 = var
blockpc %104 0 %105 1
%106:i32 = var
blockpc %104 1 %106 1
%107:i32 = var
%108 = block 2
%109:i32 = var
blockpc %108 0 %109 1
%110:i32 = var
blockpc %108 1 %110 1
%111:i32 = var
%112:i32 = var
%113 = phi %108, %111, %112
%114 = phi %49, %113, %111
%115 = phi %104, %107, %114
%116:i32 = var
%117 = block 2
%118:i32 = var
blockpc %117 0 %118 1
%119:i32 = var
blockpc %117 1 %119 1
%120:i32 = var
%121:i32 = var
%122 = phi %117, %120, %121
%123 = phi %13, %116, %122
%124:i32 = var
%125 = phi %3, %123, %124
%126 = phi %46, %115, %125
%127 = phi %100, %103, %126
%128 = phi %2, %127, %126
%129 = ult %99, %128
%130:i32 = var
pc %129 1
pc %130 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
blockpc %4 0 %5 1
%6:i32 = var
blockpc %4 1 %6 1
%7:i32 = var
%8:i32 = var
%9 = phi %4, %7, %8
%10 = slt 0:i32, %9
blockpc %3 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %3 1 %12 1
%13 = block 2
%14:i32 = var
%15:i32 = var
%16 = phi %13, %14, %15
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21 = phi %17, 6:i32, %20
%22 = phi %3, %16, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %29, %32, %33
%35 = phi %26, %34, 0:i32
%36 = phi %23, 0:i32, %35
%37 = sub %22, %36
%38:i32 = var
%39 = add %37, %38
%40:i32 = var
%41 = slt %39, %40
blockpc %2 0 %41 1
%42:i32 = var
blockpc %2 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56:i32 = var
%57 = phi %52, %55, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62 = phi %58, %61, %56
%63 = phi %49, %57, %62
%64:i32 = var
%65 = block 2
%66:i32 = var
blockpc %65 0 %66 1
%67:i32 = var
blockpc %65 1 %67 1
%68:i32 = var
%69 = block 2
%70:i32 = var
blockpc %69 0 %70 1
%71:i32 = var
blockpc %69 1 %71 1
%72:i32 = var
%73 = phi %69, %68, %72
%74 = phi %65, %68, %73
%75 = phi %13, %64, %74
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79:i32 = var
%80:i32 = var
%81 = phi %76, %79, %80
%82 = phi %3, %75, %81
%83 = phi %46, %63, %82
%84 = block 2
%85:i32 = var
blockpc %84 0 %85 1
%86:i32 = var
blockpc %84 1 %86 1
%87 = block 2
%88:i32 = var
blockpc %87 0 %88 1
%89:i32 = var
blockpc %87 1 %89 1
%90 = block 2
%91:i32 = var
blockpc %90 0 %91 1
%92:i32 = var
blockpc %90 1 %92 1
%93:i32 = var
%94:i32 = var
%95 = phi %90, %93, %94
%96 = phi %87, %95, %83
%97 = phi %84, %96, %83
%98 = phi %43, %83, %97
%99 = phi %2, %98, %83
%100 = block 2
%101:i32 = var
blockpc %100 0 %101 1
%102:i32 = var
blockpc %100 1 %102 1
%103:i32 = var
%104 = block 2
%105:i32 = var
blockpc %104 0 %105 1
%106:i32 = var
blockpc %104 1 %106 1
%107:i32 = var
%108 = block 2
%109:i32 = var
blockpc %108 0 %109 1
%110:i32 = var
blockpc %108 1 %110 1
%111:i32 = var
%112:i32 = var
%113 = phi %108, %111, %112
%114 = phi %49, %113, %111
%115 = phi %104, %107, %114
%116:i32 = var
%117 = block 2
%118:i32 = var
blockpc %117 0 %118 1
%119:i32 = var
blockpc %117 1 %119 1
%120:i32 = var
%121:i32 = var
%122 = phi %117, %120, %121
%123 = phi %13, %116, %122
%124:i32 = var
%125 = phi %3, %123, %124
%126 = phi %46, %115, %125
%127 = phi %100, %103, %126
%128 = phi %2, %127, %126
%129 = ult %99, %128
%130:i32 = var
pc %129 1
pc %130 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4 = block 2
%5 = block 2
%6 = block 2
%7:i32 = var
blockpc %6 0 %7 1
%8:i32 = var
blockpc %6 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = phi %6, %9, %10
%12 = slt 0:i32, %11
blockpc %5 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %5 1 %14 1
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = phi %15, %16, %17
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22:i32 = var
%23 = phi %19, 6:i32, %22
%24 = phi %5, %18, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34:i32 = var
%35:i32 = var
%36 = phi %31, %34, %35
%37 = phi %28, %36, 0:i32
%38 = phi %25, 0:i32, %37
%39 = sub %24, %38
%40:i32 = var
%41 = add %39, %40
%42:i32 = var
%43 = slt %41, %42
blockpc %4 0 %43 1
%44:i32 = var
blockpc %4 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57:i32 = var
%58:i32 = var
%59 = phi %54, %57, %58
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63:i32 = var
%64 = phi %60, %63, %58
%65 = phi %51, %59, %64
%66:i32 = var
%67 = block 2
%68:i32 = var
blockpc %67 0 %68 1
%69:i32 = var
blockpc %67 1 %69 1
%70:i32 = var
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74:i32 = var
%75 = phi %71, %70, %74
%76 = phi %67, %70, %75
%77 = phi %15, %66, %76
%78 = block 2
%79:i32 = var
blockpc %78 0 %79 1
%80:i32 = var
blockpc %78 1 %80 1
%81:i32 = var
%82:i32 = var
%83 = phi %78, %81, %82
%84 = phi %5, %77, %83
%85 = phi %48, %65, %84
%86 = block 2
%87:i32 = var
blockpc %86 0 %87 1
%88:i32 = var
blockpc %86 1 %88 1
%89 = block 2
%90:i32 = var
blockpc %89 0 %90 1
%91:i32 = var
blockpc %89 1 %91 1
%92 = block 2
%93:i32 = var
blockpc %92 0 %93 1
%94:i32 = var
blockpc %92 1 %94 1
%95:i32 = var
%96:i32 = var
%97 = phi %92, %95, %96
%98 = phi %89, %97, %85
%99 = phi %86, %98, %85
%100 = phi %45, %85, %99
%101 = phi %4, %100, %85
%102 = block 2
%103:i32 = var
blockpc %102 0 %103 1
%104:i32 = var
blockpc %102 1 %104 1
%105:i32 = var
%106 = block 2
%107:i32 = var
blockpc %106 0 %107 1
%108:i32 = var
blockpc %106 1 %108 1
%109:i32 = var
%110 = block 2
%111:i32 = var
blockpc %110 0 %111 1
%112:i32 = var
blockpc %110 1 %112 1
%113:i32 = var
%114:i32 = var
%115 = phi %110, %113, %114
%116 = phi %51, %115, %113
%117 = phi %106, %109, %116
%118:i32 = var
%119 = block 2
%120:i32 = var
blockpc %119 0 %120 1
%121:i32 = var
blockpc %119 1 %121 1
%122:i32 = var
%123:i32 = var
%124 = phi %119, %122, %123
%125 = phi %15, %118, %124
%126:i32 = var
%127 = phi %5, %125, %126
%128 = phi %48, %117, %127
%129 = phi %102, %105, %128
%130 = phi %4, %129, %128
%131 = ult %101, %130
%132:i32 = var
pc %131 1
pc %132 1
infer %3


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = add %5, 4:i32 (hasExternalUses)
%7 = phi %4, %6, %5
%8 = block 2
%9 = add %5, 4:i32 (hasExternalUses)
%10 = phi %8, %9, %5
%11 = phi %3, %7, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = block 2
%16:i32 = var
%17 = block 2
%18 = add %16, -4:i32 (hasExternalUses)
%19 = phi %17, %16, %18
%20 = phi %15, %16, %19
%21 = phi %13, %14, %20
%22 = block 2
%23:i32 = var
%24 = add %23, 32:i32 (hasExternalUses)
%25 = add %24, 288:i32 (hasExternalUses)
%26 = phi %22, %24, %25
%27 = phi %12, %21, %26
%28 = phi %2, %11, %27
%29 = block 2
%30 = block 2
%31 = block 2
%32:i32 = var
%33:i32 = var
%34 = phi %31, %32, %33
%35 = phi %30, %34, %28
%36 = phi %29, %35, %28
%37 = phi %1, %28, %36
%38 = phi %0, %37, %28
%39:i32 = var
%40 = ult %38, %39
%41:i32 = var
blockpc %0 0 %41 1
%42:i32 = var
blockpc %0 1 %42 1
%43:i32 = var
blockpc %1 0 %43 1
%44:i32 = var
blockpc %1 1 %44 1
%45:i32 = var
blockpc %2 0 %45 1
%46:i32 = var
blockpc %2 1 %46 1
%47:i32 = var
blockpc %3 0 %47 1
%48:i32 = var
blockpc %3 1 %48 1
%49:i32 = var
blockpc %4 0 %49 1
%50:i32 = var
blockpc %4 1 %50 1
%51:i32 = var
blockpc %8 0 %51 1
%52:i32 = var
blockpc %8 1 %52 1
%53:i32 = var
blockpc %12 0 %53 1
%54:i32 = var
blockpc %12 1 %54 1
%55:i32 = var
blockpc %15 0 %55 1
%56:i32 = var
blockpc %15 1 %56 1
%57:i32 = var
blockpc %17 0 %57 1
%58:i32 = var
blockpc %17 1 %58 1
%59:i32 = var
blockpc %22 0 %59 1
%60:i32 = var
blockpc %22 1 %60 1
%61:i32 = var
blockpc %29 0 %61 1
%62:i32 = var
blockpc %29 1 %62 1
%63:i32 = var
blockpc %30 0 %63 1
%64:i32 = var
blockpc %30 1 %64 1
%65:i32 = var
blockpc %31 0 %65 1
%66:i32 = var
blockpc %31 1 %66 1
%67:i32 = var
%68:i32 = var
pc %67 1
pc %68 1
infer %40


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = phi %7, 6:i32, %8
%10 = phi %2, %6, %9
%11 = ne %10, 0:i32 (hasExternalUses)
%12:i32 = zext %11
%13 = phi %0, %1, %12
%14 = xor %13, 1:i32
%15 = block 2
%16:i32 = var
%17 = ne %16, 0:i32
blockpc %15 0 %17 1
%18 = eq %16, 0:i32
blockpc %15 1 %18 1
%19:i32 = var
%20 = add %19, -28:i32
%21:i32 = var
%22 = phi %15, %20, %21
%23 = slt 0:i32, %22
blockpc %2 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %2 1 %25 1
%26:i32 = var
blockpc %7 0 %26 1
%27:i32 = var
blockpc %7 1 %27 1
%28:i32 = var
%29:i32 = var
pc %28 1
pc %29 1
infer %14


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = phi %7, 6:i32, %8
%10 = phi %2, %6, %9
%11 = ne %10, 0:i32 (hasExternalUses)
%12:i32 = zext %11
%13 = phi %0, %1, %12
%14 = xor %13, 1:i32
%15 = and %14, 1:i32
%16 = block 2
%17:i32 = var
%18 = ne %17, 0:i32
blockpc %16 0 %18 1
%19 = eq %17, 0:i32
blockpc %16 1 %19 1
%20:i32 = var
%21 = add %20, -28:i32
%22:i32 = var
%23 = phi %16, %21, %22
%24 = slt 0:i32, %23
blockpc %2 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %2 1 %26 1
%27:i32 = var
blockpc %7 0 %27 1
%28:i32 = var
blockpc %7 1 %28 1
%29:i32 = var
%30:i32 = var
pc %29 1
pc %30 1
infer %15


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = phi %7, 6:i32, %8
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12:i32 = var
%13 = ne %10, 0:i32 (hasExternalUses)
%14:i32 = zext %13
%15 = phi %0, %12, %14
%16 = xor %15, 1:i32
%17 = and %16, 1:i32
%18 = add %11, %17
%19 = block 2
%20:i32 = var
%21 = ne %20, 0:i32
blockpc %19 0 %21 1
%22 = eq %20, 0:i32
blockpc %19 1 %22 1
%23:i32 = var
%24 = add %23, -28:i32
%25:i32 = var
%26 = phi %19, %24, %25
%27 = slt 0:i32, %26
blockpc %2 0 %27 1
%28:i32 = var
blockpc %2 1 %28 1
%29:i32 = var
blockpc %7 0 %29 1
%30:i32 = var
blockpc %7 1 %30 1
%31:i32 = var
%32:i32 = var
pc %31 1
pc %32 1
infer %18


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %6, %10, %14
%16 = block 2
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %20
%25 = phi %17, %21, %24
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = block 2
%30:i32 = var
%31 = phi %29, %28, %30
%32 = phi %27, %28, %31
%33 = phi %7, %26, %32
%34 = phi %6, %33, %14
%35 = phi %16, %25, %34
%36 = sub %15, %35
%37 = ashr %36, 2:i32
%38 = mul %37, 9:i32 (hasExternalUses)
%39:i32 = var
%40 = phi %5, %38, %39
%41 = phi %4, %40, 0:i32
%42 = block 2
%43 = block 2
%44:i32 = var
%45:i32 = var
%46 = phi %43, %44, %45
%47 = phi %42, %46, %41
%48 = phi %3, %41, %47
%49 = phi %2, %48, %41
%50 = phi %0, %1, %49
%51:i32 = var
%52 = slt %50, %51
%53:i32 = var
blockpc %2 0 %53 1
%54:i32 = var
blockpc %2 1 %54 1
%55:i32 = var
blockpc %3 0 %55 1
%56:i32 = var
blockpc %3 1 %56 1
%57:i32 = var
blockpc %4 0 %57 1
%58:i32 = var
blockpc %4 1 %58 1
%59:i32 = var
blockpc %5 0 %59 1
%60:i32 = var
blockpc %5 1 %60 1
%61:i32 = var
blockpc %6 0 %61 1
%62:i32 = var
blockpc %6 1 %62 1
%63:i32 = var
blockpc %11 0 %63 1
%64:i32 = var
blockpc %11 1 %64 1
%65:i32 = var
blockpc %16 0 %65 1
%66:i32 = var
blockpc %16 1 %66 1
%67:i32 = var
blockpc %17 0 %67 1
%68:i32 = var
blockpc %17 1 %68 1
%69:i32 = var
blockpc %18 0 %69 1
%70:i32 = var
blockpc %18 1 %70 1
%71:i32 = var
blockpc %22 0 %71 1
%72:i32 = var
blockpc %22 1 %72 1
%73:i32 = var
blockpc %27 0 %73 1
%74:i32 = var
blockpc %27 1 %74 1
%75:i32 = var
blockpc %29 0 %75 1
%76:i32 = var
blockpc %29 1 %76 1
%77:i32 = var
blockpc %42 0 %77 1
%78:i32 = var
blockpc %42 1 %78 1
%79:i32 = var
blockpc %43 0 %79 1
%80:i32 = var
blockpc %43 1 %80 1
%81:i32 = var
%82:i32 = var
pc %81 1
pc %82 1
infer %52


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %6, %10, %14
%16 = block 2
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %20
%25 = phi %17, %21, %24
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = block 2
%30:i32 = var
%31 = phi %29, %28, %30
%32 = phi %27, %28, %31
%33 = phi %7, %26, %32
%34 = phi %6, %33, %14
%35 = phi %16, %25, %34
%36 = sub %15, %35
%37 = ashr %36, 2:i32
%38 = mul %37, 9:i32 (hasExternalUses)
%39:i32 = var
%40 = phi %5, %38, %39
%41 = phi %4, %40, 0:i32
%42 = block 2
%43 = block 2
%44:i32 = var
%45:i32 = var
%46 = phi %43, %44, %45
%47 = phi %42, %46, %41
%48 = phi %3, %41, %47
%49 = phi %2, %48, %41
%50 = phi %0, %1, %49
%51 = slt -5:i32, %50
%52:i32 = var
blockpc %2 0 %52 1
%53:i32 = var
blockpc %2 1 %53 1
%54:i32 = var
blockpc %3 0 %54 1
%55:i32 = var
blockpc %3 1 %55 1
%56:i32 = var
blockpc %4 0 %56 1
%57:i32 = var
blockpc %4 1 %57 1
%58:i32 = var
blockpc %5 0 %58 1
%59:i32 = var
blockpc %5 1 %59 1
%60:i32 = var
blockpc %6 0 %60 1
%61:i32 = var
blockpc %6 1 %61 1
%62:i32 = var
blockpc %11 0 %62 1
%63:i32 = var
blockpc %11 1 %63 1
%64:i32 = var
blockpc %16 0 %64 1
%65:i32 = var
blockpc %16 1 %65 1
%66:i32 = var
blockpc %17 0 %66 1
%67:i32 = var
blockpc %17 1 %67 1
%68:i32 = var
blockpc %18 0 %68 1
%69:i32 = var
blockpc %18 1 %69 1
%70:i32 = var
blockpc %22 0 %70 1
%71:i32 = var
blockpc %22 1 %71 1
%72:i32 = var
blockpc %27 0 %72 1
%73:i32 = var
blockpc %27 1 %73 1
%74:i32 = var
blockpc %29 0 %74 1
%75:i32 = var
blockpc %29 1 %75 1
%76:i32 = var
blockpc %42 0 %76 1
%77:i32 = var
blockpc %42 1 %77 1
%78:i32 = var
blockpc %43 0 %78 1
%79:i32 = var
blockpc %43 1 %79 1
%80:i32 = var
%81:i32 = var
pc %80 1
pc %81 1
infer %51


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = mul %6, 9:i32 (hasExternalUses)
%8:i32 = var
%9 = add %8, 1:i32 (hasExternalUses)
%10 = phi %5, %7, %9
%11 = phi %4, %10, 0:i32
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = mul %14, 9:i32 (hasExternalUses)
%16:i32 = var
%17 = add %16, 1:i32 (hasExternalUses)
%18 = phi %13, %15, %17
%19 = phi %12, %18, %11
%20 = phi %3, %11, %19
%21 = phi %2, %20, %11
%22 = phi %0, %1, %21
%23:i32 = var
%24 = block 2
%25 = block 2
%26:i32 = var
%27:i32 = var
%28 = phi %25, %26, %27
%29 = block 2
%30:i32 = var
%31 = phi %29, 6:i32, %30
%32 = phi %24, %28, %31
%33 = phi %0, %23, %32
%34:i32 = var
%35 = add %33, %34 (hasExternalUses)
%36 = slt %22, %35
%37:i32 = zext %36
%38:i32 = var
%39 = add %38, 0:i32; Replace bad zext operation
%40 = and %37, %39
%41:i32 = var
blockpc %2 0 %41 1
%42:i32 = var
blockpc %2 1 %42 1
%43:i32 = var
blockpc %3 0 %43 1
%44:i32 = var
blockpc %3 1 %44 1
%45:i32 = var
blockpc %4 0 %45 1
%46:i32 = var
blockpc %4 1 %46 1
%47:i32 = var
blockpc %5 0 %47 1
%48:i32 = var
blockpc %5 1 %48 1
%49:i32 = var
blockpc %12 0 %49 1
%50:i32 = var
blockpc %12 1 %50 1
%51:i32 = var
blockpc %13 0 %51 1
%52:i32 = var
blockpc %13 1 %52 1
%53:i32 = var
blockpc %24 0 %53 1
%54:i32 = var
blockpc %24 1 %54 1
%55:i32 = var
blockpc %29 0 %55 1
%56:i32 = var
blockpc %29 1 %56 1
%57:i32 = var
%58:i32 = var
pc %57 1
pc %58 1
infer %40


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = phi %7, 6:i32, %8
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12:i32 = var
%13 = ne %10, 0:i32 (hasExternalUses)
%14:i32 = zext %13
%15 = phi %0, %12, %14
%16 = xor %15, 1:i32
%17 = and %16, 1:i32
%18 = add %11, %17 (hasExternalUses)
%19 = add %18, -1:i32
%20 = block 2
%21:i32 = var
%22 = ne %21, 0:i32
blockpc %20 0 %22 1
%23 = eq %21, 0:i32
blockpc %20 1 %23 1
%24:i32 = var
%25 = add %24, -28:i32
%26:i32 = var
%27 = phi %20, %25, %26
%28 = slt 0:i32, %27
blockpc %2 0 %28 1
%29:i32 = var
blockpc %2 1 %29 1
%30:i32 = var
blockpc %7 0 %30 1
%31:i32 = var
blockpc %7 1 %31 1
%32:i32 = var
%33:i32 = var
%34:i32 = var
pc %32 1
pc %33 1
pc %34 1
infer %19


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = phi %7, 6:i32, %8
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12:i32 = var
%13 = ne %10, 0:i32 (hasExternalUses)
%14:i32 = zext %13
%15 = phi %0, %12, %14
%16 = xor %15, 1:i32
%17 = and %16, 1:i32
%18 = add %11, %17 (hasExternalUses)
%19 = add %18, -1:i32
%20:i32 = var
%21 = block 2
%22 = block 2
%23 = block 2
%24 = block 2
%25:i32 = var
%26:i32 = var
%27 = phi %3, %25, %26
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %30
%32 = phi %2, %27, %31
%33 = block 2
%34 = block 2
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %37
%39 = block 2
%40:i32 = var
%41 = phi %39, %40, %37
%42 = phi %34, %38, %41
%43:i32 = var
%44 = block 2
%45:i32 = var
%46 = block 2
%47:i32 = var
%48 = phi %46, %45, %47
%49 = phi %44, %45, %48
%50 = phi %3, %43, %49
%51 = phi %2, %50, %31
%52 = phi %33, %42, %51
%53 = sub %32, %52
%54 = ashr %53, 2:i32
%55 = mul %54, 9:i32 (hasExternalUses)
%56:i32 = var
%57 = phi %24, %55, %56
%58 = phi %23, %57, 0:i32
%59 = block 2
%60 = block 2
%61:i32 = var
%62:i32 = var
%63 = phi %60, %61, %62
%64 = phi %59, %63, %58
%65 = phi %22, %58, %64
%66 = phi %21, %65, %58
%67 = phi %0, %20, %66
%68 = sub %19, %67
%69:i32 = var
blockpc %2 0 %69 1
%70:i32 = var
blockpc %2 1 %70 1
%71:i32 = var
blockpc %7 0 %71 1
%72:i32 = var
blockpc %7 1 %72 1
%73:i32 = var
blockpc %21 0 %73 1
%74:i32 = var
blockpc %21 1 %74 1
%75:i32 = var
blockpc %22 0 %75 1
%76:i32 = var
blockpc %22 1 %76 1
%77:i32 = var
blockpc %23 0 %77 1
%78:i32 = var
blockpc %23 1 %78 1
%79:i32 = var
blockpc %24 0 %79 1
%80:i32 = var
blockpc %24 1 %80 1
%81:i32 = var
blockpc %28 0 %81 1
%82:i32 = var
blockpc %28 1 %82 1
%83:i32 = var
blockpc %33 0 %83 1
%84:i32 = var
blockpc %33 1 %84 1
%85:i32 = var
blockpc %34 0 %85 1
%86:i32 = var
blockpc %34 1 %86 1
%87:i32 = var
blockpc %35 0 %87 1
%88:i32 = var
blockpc %35 1 %88 1
%89:i32 = var
blockpc %39 0 %89 1
%90:i32 = var
blockpc %39 1 %90 1
%91:i32 = var
blockpc %44 0 %91 1
%92:i32 = var
blockpc %44 1 %92 1
%93:i32 = var
blockpc %46 0 %93 1
%94:i32 = var
blockpc %46 1 %94 1
%95:i32 = var
blockpc %59 0 %95 1
%96:i32 = var
blockpc %59 1 %96 1
%97:i32 = var
blockpc %60 0 %97 1
%98:i32 = var
blockpc %60 1 %98 1
%99:i32 = var
%100:i32 = var
%101:i32 = var
pc %99 1
pc %100 1
pc %101 1
infer %68


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = add %9, -1:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22:i32 = var
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = add %24, %25
%27:i32 = var
%28 = slt %26, %27
blockpc %23 0 %28 1
%29:i32 = var
blockpc %23 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40:i32 = var
%41 = phi %36, %39, %40
%42 = phi %33, %41, 0:i32
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49:i32 = var
%50:i32 = var
%51 = phi %46, %49, %50
%52 = phi %43, %51, %42
%53 = phi %30, %42, %52
%54 = phi %23, %53, %42
%55 = phi %0, %22, %54
%56:i32 = var
%57 = slt %55, %56
%58:i32 = zext %57
%59:i32 = var
%60 = add %59, 0:i32; Replace bad zext operation
%61 = and %58, %60
%62 = ne %61, 0:i32
%63:i32 = var
%64:i32 = var
pc %62 1
pc %63 1
pc %64 1
infer %10


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = phi %7, 6:i32, %8
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12:i32 = var
%13 = ne %10, 0:i32 (hasExternalUses)
%14:i32 = zext %13
%15 = phi %0, %12, %14
%16 = xor %15, 1:i32
%17 = and %16, 1:i32
%18 = add %11, %17 (hasExternalUses)
%19 = add %18, -1:i32
%20 = block 2
%21:i32 = var
%22 = ne %21, 0:i32
blockpc %20 0 %22 1
%23 = eq %21, 0:i32
blockpc %20 1 %23 1
%24:i32 = var
%25 = add %24, -28:i32
%26:i32 = var
%27 = phi %20, %25, %26
%28 = slt 0:i32, %27
blockpc %2 0 %28 1
%29:i32 = var
blockpc %2 1 %29 1
%30:i32 = var
blockpc %7 0 %30 1
%31:i32 = var
blockpc %7 1 %31 1
%32:i32 = var
%33:i32 = var
%34:i32 = var
pc %32 1
pc %33 1
pc %34 1
infer %19


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = add %9, -2:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22:i32 = var
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = add %24, %25
%27:i32 = var
%28 = slt %26, %27
blockpc %23 0 %28 1
%29:i32 = var
blockpc %23 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40:i32 = var
%41 = phi %36, %39, %40
%42 = phi %33, %41, 0:i32
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49:i32 = var
%50:i32 = var
%51 = phi %46, %49, %50
%52 = phi %43, %51, %42
%53 = phi %30, %42, %52
%54 = phi %23, %53, %42
%55 = phi %0, %22, %54
%56:i32 = var
%57 = slt %55, %56
%58:i32 = zext %57
%59:i32 = var
%60 = add %59, 0:i32; Replace bad zext operation
%61 = and %58, %60
%62 = eq %61, 0:i32
%63:i32 = var
%64:i32 = var
pc %62 1
pc %63 1
pc %64 1
infer %10


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = and %9, 8:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22:i32 = var
%23:i32 = var
%24:i32 = var
%25 = phi %3, %23, %24
%26:i32 = var
%27 = phi %2, %25, %26
%28 = eq %27, 103:i32
%29:i32 = zext %28
%30 = phi %0, %22, %29
%31 = ne %30, 0:i32
%32:i32 = var
pc %31 1
pc %32 1
infer %10


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = and %9, 8:i32
%11 = eq %10, 0:i32
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
blockpc %2 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %2 1 %22 1
%23:i32 = var
%24:i32 = var
%25:i32 = var
%26 = phi %3, %24, %25
%27:i32 = var
%28 = phi %2, %26, %27
%29 = eq %28, 103:i32
%30:i32 = zext %29
%31 = phi %0, %23, %30
%32 = ne %31, 0:i32
%33:i32 = var
pc %32 1
pc %33 1
infer %11


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = add %1, -4:i32 (hasExternalUses)
%4 = block 2
%5 = block 2
%6 = block 2
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = phi %12, %13, %14
%16 = phi %7, %11, %15
%17 = add %16, 4:i32
%18:i32 = var
%19 = shl %18, 2:i32
%20 = add %17, %19 (hasExternalUses)
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %20
%25 = phi %21, %24, %20
%26 = phi %6, %20, %25
%27 = add %26, 4:i32 (hasExternalUses)
%28 = block 2
%29 = block 2
%30:i32 = var
%31 = block 2
%32 = block 2
%33:i32 = var
%34:i32 = var
%35 = phi %32, %33, %34
%36 = phi %31, %35, %33
%37 = phi %29, %30, %36
%38:i32 = var
%39 = block 2
%40:i32 = var
%41:i32 = var
%42 = phi %39, %40, %41
%43 = phi %8, %38, %42
%44:i32 = var
%45 = phi %7, %43, %44
%46 = phi %28, %37, %45
%47 = phi %5, %27, %46
%48 = phi %4, %47, %46
%49 = phi %2, %3, %48
%50 = phi %0, %1, %49
%51 = add %50, -4:i32
%52:i32 = var
blockpc %2 0 %52 1
%53:i32 = var
blockpc %2 1 %53 1
%54:i32 = var
blockpc %4 0 %54 1
%55:i32 = var
blockpc %4 1 %55 1
%56:i32 = var
blockpc %5 0 %56 1
%57:i32 = var
blockpc %5 1 %57 1
%58:i32 = var
blockpc %6 0 %58 1
%59:i32 = var
blockpc %6 1 %59 1
%60:i32 = var
blockpc %7 0 %60 1
%61:i32 = var
blockpc %7 1 %61 1
%62:i32 = var
blockpc %12 0 %62 1
%63:i32 = var
blockpc %12 1 %63 1
%64:i32 = var
blockpc %21 0 %64 1
%65:i32 = var
blockpc %21 1 %65 1
%66:i32 = var
blockpc %22 0 %66 1
%67:i32 = var
blockpc %22 1 %67 1
%68:i32 = var
blockpc %28 0 %68 1
%69:i32 = var
blockpc %28 1 %69 1
%70:i32 = var
blockpc %29 0 %70 1
%71:i32 = var
blockpc %29 1 %71 1
%72:i32 = var
blockpc %31 0 %72 1
%73:i32 = var
blockpc %31 1 %73 1
%74:i32 = var
blockpc %32 0 %74 1
%75:i32 = var
blockpc %32 1 %75 1
%76:i32 = var
blockpc %39 0 %76 1
%77:i32 = var
blockpc %39 1 %77 1
%78:i32 = var
%79:i32 = var
%80:i32 = var
%81:i32 = var
pc %78 1
pc %79 1
pc %80 1
pc %81 1
infer %51


; start LHS (in $11)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3 = phi %2, 1:i32, 0:i32
%4 = ne %3, 0:i32
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = ne %8, 0:i32
blockpc %7 0 %9 1
%10 = eq %8, 0:i32
blockpc %7 1 %10 1
%11:i32 = var
%12 = add %11, -28:i32
%13:i32 = var
%14 = phi %7, %12, %13
%15 = slt 0:i32, %14
blockpc %6 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %6 1 %17 1
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22:i32 = var
%23 = phi %6, %21, %22
%24 = phi %2, %5, %23
%25 = and %24, 8:i32
%26 = eq %25, 0:i32
%27:i32 = var
%28:i32 = var
pc %4 1
pc %26 1
pc %27 1
pc %28 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = urem %0, 10:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5 = block 2
%6 = phi %5, 1:i32, 0:i32
%7 = ne %6, 0:i32
%8:i32 = var
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = ne %11, 0:i32
blockpc %10 0 %12 1
%13 = eq %11, 0:i32
blockpc %10 1 %13 1
%14:i32 = var
%15 = add %14, -28:i32
%16:i32 = var
%17 = phi %10, %15, %16
%18 = slt 0:i32, %17
blockpc %9 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %9 1 %20 1
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25:i32 = var
%26 = phi %9, %24, %25
%27 = phi %5, %8, %26
%28 = and %27, 8:i32
%29 = eq %28, 0:i32
%30:i32 = var
%31:i32 = var
pc %4 1
pc %7 1
pc %29 1
pc %30 1
pc %31 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = urem %0, 10:i32
%2 = and %1, -1:i32
%3 = eq %0, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = phi %6, 1:i32, 0:i32
%8 = ne %7, 0:i32
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %10 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %10 1 %21 1
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %24
%26:i32 = var
%27 = phi %10, %25, %26
%28 = phi %6, %9, %27
%29 = and %28, 8:i32
%30 = eq %29, 0:i32
%31:i32 = var
%32:i32 = var
pc %5 1
pc %8 1
pc %30 1
pc %31 1
pc %32 1
infer %2


; start LHS (in $11)
%0:i32 = var
%1 = urem %0, 10:i32
%2 = and %1, -1:i32
%3 = eq %2, 0:i32
%4 = eq %0, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = block 2
%8 = phi %7, 1:i32, 0:i32
%9 = ne %8, 0:i32
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
blockpc %11 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %11 1 %22 1
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = phi %23, %24, %25
%27:i32 = var
%28 = phi %11, %26, %27
%29 = phi %7, %10, %28
%30 = and %29, 8:i32
%31 = eq %30, 0:i32
%32:i32 = var
%33:i32 = var
pc %6 1
pc %9 1
pc %31 1
pc %32 1
pc %33 1
infer %3


; start LHS (in $11)
%0:i32 = var
%1 = mul %0, 10:i32
%2:i32 = var
%3 = urem %2, 10:i32
%4 = and %3, -1:i32
%5 = eq %4, 0:i32
%6 = eq %2, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9 = block 2
%10 = phi %9, 1:i32, 0:i32
%11 = ne %10, 0:i32
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = ne %15, 0:i32
blockpc %14 0 %16 1
%17 = eq %15, 0:i32
blockpc %14 1 %17 1
%18:i32 = var
%19 = add %18, -28:i32
%20:i32 = var
%21 = phi %14, %19, %20
%22 = slt 0:i32, %21
blockpc %13 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %13 1 %24 1
%25 = block 2
%26:i32 = var
%27:i32 = var
%28 = phi %25, %26, %27
%29:i32 = var
%30 = phi %13, %28, %29
%31 = phi %9, %12, %30
%32 = and %31, 8:i32
%33 = eq %32, 0:i32
%34:i32 = var
%35:i32 = var
pc %5 1
pc %8 1
pc %11 1
pc %33 1
pc %34 1
pc %35 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = urem %2, 10:i32
%4 = and %3, -1:i32
%5 = eq %4, 0:i32
%6 = eq %2, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9 = block 2
%10 = phi %9, 1:i32, 0:i32
%11 = ne %10, 0:i32
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = ne %15, 0:i32
blockpc %14 0 %16 1
%17 = eq %15, 0:i32
blockpc %14 1 %17 1
%18:i32 = var
%19 = add %18, -28:i32
%20:i32 = var
%21 = phi %14, %19, %20
%22 = slt 0:i32, %21
blockpc %13 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %13 1 %24 1
%25 = block 2
%26:i32 = var
%27:i32 = var
%28 = phi %25, %26, %27
%29:i32 = var
%30 = phi %13, %28, %29
%31 = phi %9, %12, %30
%32 = and %31, 8:i32
%33 = eq %32, 0:i32
%34:i32 = var
%35:i32 = var
pc %5 1
pc %8 1
pc %11 1
pc %33 1
pc %34 1
pc %35 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = mul %1, 10:i32
%3 = urem %0, %2
%4 = urem %0, 10:i32
%5 = and %4, -1:i32
%6 = eq %5, 0:i32
%7 = eq %0, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = block 2
%11 = phi %10, 1:i32, 0:i32
%12 = ne %11, 0:i32
%13:i32 = var
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = ne %16, 0:i32
blockpc %15 0 %17 1
%18 = eq %16, 0:i32
blockpc %15 1 %18 1
%19:i32 = var
%20 = add %19, -28:i32
%21:i32 = var
%22 = phi %15, %20, %21
%23 = slt 0:i32, %22
blockpc %14 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %14 1 %25 1
%26 = block 2
%27:i32 = var
%28:i32 = var
%29 = phi %26, %27, %28
%30:i32 = var
%31 = phi %14, %29, %30
%32 = phi %10, %13, %31
%33 = and %32, 8:i32
%34 = eq %33, 0:i32
%35:i32 = var
%36:i32 = var
pc %6 1
pc %9 1
pc %12 1
pc %34 1
pc %35 1
pc %36 1
infer %3


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = mul %1, 10:i32
%3 = urem %0, %2
%4 = and %3, -1:i32
%5 = urem %0, 10:i32
%6 = and %5, -1:i32
%7 = eq %6, 0:i32
%8 = eq %0, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = block 2
%12 = phi %11, 1:i32, 0:i32
%13 = ne %12, 0:i32
%14:i32 = var
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = ne %17, 0:i32
blockpc %16 0 %18 1
%19 = eq %17, 0:i32
blockpc %16 1 %19 1
%20:i32 = var
%21 = add %20, -28:i32
%22:i32 = var
%23 = phi %16, %21, %22
%24 = slt 0:i32, %23
blockpc %15 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %15 1 %26 1
%27 = block 2
%28:i32 = var
%29:i32 = var
%30 = phi %27, %28, %29
%31:i32 = var
%32 = phi %15, %30, %31
%33 = phi %11, %14, %32
%34 = and %33, 8:i32
%35 = eq %34, 0:i32
%36:i32 = var
%37:i32 = var
pc %7 1
pc %10 1
pc %13 1
pc %35 1
pc %36 1
pc %37 1
infer %4


; start LHS (in $11)
%0:i32 = var
%1:i32 = var
%2 = mul %1, 10:i32
%3 = urem %0, %2
%4 = and %3, -1:i32
%5 = eq %4, 0:i32
%6 = urem %0, 10:i32
%7 = and %6, -1:i32
%8 = eq %7, 0:i32
%9 = eq %0, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12 = block 2
%13 = phi %12, 1:i32, 0:i32
%14 = ne %13, 0:i32
%15:i32 = var
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = ne %18, 0:i32
blockpc %17 0 %19 1
%20 = eq %18, 0:i32
blockpc %17 1 %20 1
%21:i32 = var
%22 = add %21, -28:i32
%23:i32 = var
%24 = phi %17, %22, %23
%25 = slt 0:i32, %24
blockpc %16 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %16 1 %27 1
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %30
%32:i32 = var
%33 = phi %16, %31, %32
%34 = phi %12, %15, %33
%35 = and %34, 8:i32
%36 = eq %35, 0:i32
%37:i32 = var
%38:i32 = var
pc %8 1
pc %11 1
pc %14 1
pc %36 1
pc %37 1
pc %38 1
infer %5


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = add %10, -1:i32 (hasExternalUses)
%12 = add %10, -2:i32 (hasExternalUses)
%13 = phi %0, %11, %12
%14 = or %13, 32:i32
%15:i32 = var
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = slt %17, %18
blockpc %16 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %16 1 %21 1
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32:i32 = var
%33 = phi %28, %31, %32
%34 = phi %25, %33, 0:i32
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41:i32 = var
%42:i32 = var
%43 = phi %38, %41, %42
%44 = phi %35, %43, %34
%45 = phi %22, %34, %44
%46 = phi %16, %45, %34
%47 = phi %1, %15, %46
%48:i32 = var
%49 = slt %47, %48
%50:i32 = zext %49
%51:i32 = var
%52 = add %51, 0:i32; Replace bad zext operation
%53 = and %50, %52
%54 = ne %53, 0:i32
blockpc %0 0 %54 1
%55:i32 = var
blockpc %0 1 %55 1
%56:i32 = var
blockpc %3 0 %56 1
%57:i32 = var
blockpc %3 1 %57 1
%58:i32 = var
%59:i32 = var
%60:i32 = var
pc %58 1
pc %59 1
pc %60 1
infer %14


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = add %1, -4:i32 (hasExternalUses)
%4 = block 2
%5 = block 2
%6 = block 2
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = phi %12, %13, %14
%16 = phi %7, %11, %15
%17 = add %16, 4:i32
%18:i32 = var
%19 = shl %18, 2:i32
%20 = add %17, %19 (hasExternalUses)
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %20
%25 = phi %21, %24, %20
%26 = phi %6, %20, %25
%27 = add %26, 4:i32 (hasExternalUses)
%28 = block 2
%29 = block 2
%30:i32 = var
%31 = block 2
%32 = block 2
%33:i32 = var
%34:i32 = var
%35 = phi %32, %33, %34
%36 = phi %31, %35, %33
%37 = phi %29, %30, %36
%38:i32 = var
%39 = block 2
%40:i32 = var
%41:i32 = var
%42 = phi %39, %40, %41
%43 = phi %8, %38, %42
%44:i32 = var
%45 = phi %7, %43, %44
%46 = phi %28, %37, %45
%47 = phi %5, %27, %46
%48 = phi %4, %47, %46
%49 = phi %2, %3, %48
%50 = phi %0, %1, %49
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %8, %52, %53
%55 = phi %7, %54, %15
%56 = phi %0, %51, %55
%57 = sub %50, %56
%58:i32 = var
blockpc %2 0 %58 1
%59:i32 = var
blockpc %2 1 %59 1
%60:i32 = var
blockpc %4 0 %60 1
%61:i32 = var
blockpc %4 1 %61 1
%62:i32 = var
blockpc %5 0 %62 1
%63:i32 = var
blockpc %5 1 %63 1
%64:i32 = var
blockpc %6 0 %64 1
%65:i32 = var
blockpc %6 1 %65 1
%66:i32 = var
blockpc %7 0 %66 1
%67:i32 = var
blockpc %7 1 %67 1
%68:i32 = var
blockpc %12 0 %68 1
%69:i32 = var
blockpc %12 1 %69 1
%70:i32 = var
blockpc %21 0 %70 1
%71:i32 = var
blockpc %21 1 %71 1
%72:i32 = var
blockpc %22 0 %72 1
%73:i32 = var
blockpc %22 1 %73 1
%74:i32 = var
blockpc %28 0 %74 1
%75:i32 = var
blockpc %28 1 %75 1
%76:i32 = var
blockpc %29 0 %76 1
%77:i32 = var
blockpc %29 1 %77 1
%78:i32 = var
blockpc %31 0 %78 1
%79:i32 = var
blockpc %31 1 %79 1
%80:i32 = var
blockpc %32 0 %80 1
%81:i32 = var
blockpc %32 1 %81 1
%82:i32 = var
blockpc %39 0 %82 1
%83:i32 = var
blockpc %39 1 %83 1
%84:i32 = var
%85:i32 = var
%86:i32 = var
pc %84 1
pc %85 1
pc %86 1
infer %57


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = add %1, -4:i32 (hasExternalUses)
%4 = block 2
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = add %7, %8 (hasExternalUses)
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, %12, %9
%14 = phi %10, %13, %9
%15 = phi %6, %9, %14
%16 = add %15, 4:i32 (hasExternalUses)
%17 = block 2
%18 = block 2
%19 = block 2
%20 = block 2
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = block 2
%26:i32 = var
%27:i32 = var
%28 = phi %25, %26, %27
%29 = phi %20, %24, %28
%30 = block 2
%31 = block 2
%32:i32 = var
%33:i32 = var
%34 = phi %31, %32, %33
%35 = block 2
%36:i32 = var
%37 = phi %35, %36, %33
%38 = phi %30, %34, %37
%39 = phi %19, %29, %38
%40:i32 = var
%41 = add %39, %40 (hasExternalUses)
%42 = block 2
%43:i32 = var
%44:i32 = var
%45 = phi %42, %43, %44
%46 = phi %30, %45, %43
%47 = phi %18, %41, %46
%48:i32 = var
%49 = block 2
%50:i32 = var
%51:i32 = var
%52 = phi %49, %50, %51
%53 = phi %21, %48, %52
%54:i32 = var
%55 = phi %20, %53, %54
%56 = phi %17, %47, %55
%57 = phi %5, %16, %56
%58 = phi %4, %57, %56
%59 = phi %2, %3, %58
%60 = phi %0, %1, %59
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64 = phi %21, %62, %63
%65 = phi %20, %64, %28
%66 = phi %0, %61, %65
%67 = sub %60, %66
%68 = ashr %67, 2:i32
%69:i32 = var
blockpc %2 0 %69 1
%70:i32 = var
blockpc %2 1 %70 1
%71:i32 = var
blockpc %4 0 %71 1
%72:i32 = var
blockpc %4 1 %72 1
%73:i32 = var
blockpc %5 0 %73 1
%74:i32 = var
blockpc %5 1 %74 1
%75:i32 = var
blockpc %6 0 %75 1
%76:i32 = var
blockpc %6 1 %76 1
%77:i32 = var
blockpc %10 0 %77 1
%78:i32 = var
blockpc %10 1 %78 1
%79:i32 = var
blockpc %11 0 %79 1
%80:i32 = var
blockpc %11 1 %80 1
%81:i32 = var
blockpc %17 0 %81 1
%82:i32 = var
blockpc %17 1 %82 1
%83:i32 = var
blockpc %18 0 %83 1
%84:i32 = var
blockpc %18 1 %84 1
%85:i32 = var
blockpc %19 0 %85 1
%86:i32 = var
blockpc %19 1 %86 1
%87:i32 = var
blockpc %20 0 %87 1
%88:i32 = var
blockpc %20 1 %88 1
%89:i32 = var
blockpc %25 0 %89 1
%90:i32 = var
blockpc %25 1 %90 1
%91:i32 = var
blockpc %30 0 %91 1
%92:i32 = var
blockpc %30 1 %92 1
%93:i32 = var
blockpc %31 0 %93 1
%94:i32 = var
blockpc %31 1 %94 1
%95:i32 = var
blockpc %35 0 %95 1
%96:i32 = var
blockpc %35 1 %96 1
%97:i32 = var
blockpc %42 0 %97 1
%98:i32 = var
blockpc %42 1 %98 1
%99:i32 = var
blockpc %49 0 %99 1
%100:i32 = var
blockpc %49 1 %100 1
%101:i32 = var
%102:i32 = var
%103:i32 = var
pc %101 1
pc %102 1
pc %103 1
infer %68


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = add %1, -4:i32 (hasExternalUses)
%4 = block 2
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, %7
%12 = phi %8, %11, %7
%13 = phi %6, %7, %12
%14 = add %13, 4:i32 (hasExternalUses)
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = phi %18, %22, %20
%24 = phi %16, %17, %23
%25 = block 2
%26 = block 2
%27:i32 = var
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %30
%32 = phi %26, %27, %31
%33:i32 = var
%34 = phi %25, %32, %33
%35 = phi %15, %24, %34
%36 = phi %5, %14, %35
%37 = phi %4, %36, %35
%38 = phi %2, %3, %37
%39 = phi %0, %1, %38
%40:i32 = var
%41:i32 = var
%42:i32 = var
%43 = phi %26, %41, %42
%44 = block 2
%45:i32 = var
%46:i32 = var
%47 = phi %44, %45, %46
%48 = phi %25, %43, %47
%49 = phi %0, %40, %48
%50 = sub %39, %49
%51 = ashr %50, 2:i32
%52 = mul %51, 9:i32
%53:i32 = var
blockpc %2 0 %53 1
%54:i32 = var
blockpc %2 1 %54 1
%55:i32 = var
blockpc %4 0 %55 1
%56:i32 = var
blockpc %4 1 %56 1
%57:i32 = var
blockpc %5 0 %57 1
%58:i32 = var
blockpc %5 1 %58 1
%59:i32 = var
blockpc %6 0 %59 1
%60:i32 = var
blockpc %6 1 %60 1
%61:i32 = var
blockpc %8 0 %61 1
%62:i32 = var
blockpc %8 1 %62 1
%63:i32 = var
blockpc %9 0 %63 1
%64:i32 = var
blockpc %9 1 %64 1
%65:i32 = var
blockpc %15 0 %65 1
%66:i32 = var
blockpc %15 1 %66 1
%67:i32 = var
blockpc %16 0 %67 1
%68:i32 = var
blockpc %16 1 %68 1
%69:i32 = var
blockpc %18 0 %69 1
%70:i32 = var
blockpc %18 1 %70 1
%71:i32 = var
blockpc %19 0 %71 1
%72:i32 = var
blockpc %19 1 %72 1
%73:i32 = var
blockpc %25 0 %73 1
%74:i32 = var
blockpc %25 1 %74 1
%75:i32 = var
blockpc %28 0 %75 1
%76:i32 = var
blockpc %28 1 %76 1
%77:i32 = var
blockpc %44 0 %77 1
%78:i32 = var
blockpc %44 1 %78 1
%79:i32 = var
%80:i32 = var
%81:i32 = var
pc %79 1
pc %80 1
pc %81 1
infer %52


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = add %1, -4:i32 (hasExternalUses)
%4 = block 2
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, %7
%12 = phi %8, %11, %7
%13 = phi %6, %7, %12
%14 = add %13, 4:i32 (hasExternalUses)
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = phi %18, %22, %20
%24 = phi %16, %17, %23
%25 = block 2
%26 = block 2
%27:i32 = var
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %30
%32 = phi %26, %27, %31
%33:i32 = var
%34 = phi %25, %32, %33
%35 = phi %15, %24, %34
%36 = phi %5, %14, %35
%37 = phi %4, %36, %35
%38 = phi %2, %3, %37
%39 = phi %0, %1, %38
%40:i32 = var
%41:i32 = var
%42:i32 = var
%43 = phi %26, %41, %42
%44 = block 2
%45:i32 = var
%46:i32 = var
%47 = phi %44, %45, %46
%48 = phi %25, %43, %47
%49 = phi %0, %40, %48
%50 = sub %39, %49
%51 = ashr %50, 2:i32
%52 = mul %51, 9:i32
%53 = add %52, -9:i32
%54:i32 = var
blockpc %2 0 %54 1
%55:i32 = var
blockpc %2 1 %55 1
%56:i32 = var
blockpc %4 0 %56 1
%57:i32 = var
blockpc %4 1 %57 1
%58:i32 = var
blockpc %5 0 %58 1
%59:i32 = var
blockpc %5 1 %59 1
%60:i32 = var
blockpc %6 0 %60 1
%61:i32 = var
blockpc %6 1 %61 1
%62:i32 = var
blockpc %8 0 %62 1
%63:i32 = var
blockpc %8 1 %63 1
%64:i32 = var
blockpc %9 0 %64 1
%65:i32 = var
blockpc %9 1 %65 1
%66:i32 = var
blockpc %15 0 %66 1
%67:i32 = var
blockpc %15 1 %67 1
%68:i32 = var
blockpc %16 0 %68 1
%69:i32 = var
blockpc %16 1 %69 1
%70:i32 = var
blockpc %18 0 %70 1
%71:i32 = var
blockpc %18 1 %71 1
%72:i32 = var
blockpc %19 0 %72 1
%73:i32 = var
blockpc %19 1 %73 1
%74:i32 = var
blockpc %25 0 %74 1
%75:i32 = var
blockpc %25 1 %75 1
%76:i32 = var
blockpc %28 0 %76 1
%77:i32 = var
blockpc %28 1 %77 1
%78:i32 = var
blockpc %44 0 %78 1
%79:i32 = var
blockpc %44 1 %79 1
%80:i32 = var
%81:i32 = var
%82:i32 = var
pc %80 1
pc %81 1
pc %82 1
infer %53


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = add %10, -1:i32 (hasExternalUses)
%12 = add %10, -2:i32 (hasExternalUses)
%13 = phi %0, %11, %12
%14 = or %13, 32:i32
%15 = eq %14, 102:i32
%16:i32 = var
%17 = block 2
%18:i32 = var
%19:i32 = var
%20 = slt %18, %19
blockpc %17 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %17 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %29, %32, %33
%35 = phi %26, %34, 0:i32
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43:i32 = var
%44 = phi %39, %42, %43
%45 = phi %36, %44, %35
%46 = phi %23, %35, %45
%47 = phi %17, %46, %35
%48 = phi %1, %16, %47
%49:i32 = var
%50 = slt %48, %49
%51:i32 = zext %50
%52:i32 = var
%53 = add %52, 0:i32; Replace bad zext operation
%54 = and %51, %53
%55 = ne %54, 0:i32
blockpc %0 0 %55 1
%56:i32 = var
blockpc %0 1 %56 1
%57:i32 = var
blockpc %3 0 %57 1
%58:i32 = var
blockpc %3 1 %58 1
%59:i32 = var
%60:i32 = var
%61:i32 = var
pc %59 1
pc %60 1
pc %61 1
infer %15


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = add %1, -4:i32 (hasExternalUses)
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %10, %14, %12
%16 = phi %8, %9, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = phi %18, %19, %23
%25:i32 = var
%26 = phi %17, %24, %25
%27 = phi %7, %16, %26
%28 = phi %5, %6, %27
%29 = phi %4, %28, %27
%30 = phi %2, %3, %29
%31 = phi %0, %1, %30
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35 = phi %18, %33, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = phi %17, %35, %39
%41 = phi %0, %32, %40
%42 = sub %31, %41
%43 = ashr %42, 2:i32
%44 = mul %43, 9:i32
%45 = add %44, -9:i32 (hasExternalUses)
%46 = block 2
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %49, 0:i32
%51 = phi %47, 9:i32, %50
%52 = phi %46, %51, 9:i32
%53 = sub %45, %52
%54:i32 = var
blockpc %2 0 %54 1
%55:i32 = var
blockpc %2 1 %55 1
%56:i32 = var
blockpc %4 0 %56 1
%57:i32 = var
blockpc %4 1 %57 1
%58:i32 = var
blockpc %5 0 %58 1
%59:i32 = var
blockpc %5 1 %59 1
%60:i32 = var
blockpc %7 0 %60 1
%61:i32 = var
blockpc %7 1 %61 1
%62:i32 = var
blockpc %8 0 %62 1
%63:i32 = var
blockpc %8 1 %63 1
%64:i32 = var
blockpc %10 0 %64 1
%65:i32 = var
blockpc %10 1 %65 1
%66:i32 = var
blockpc %11 0 %66 1
%67:i32 = var
blockpc %11 1 %67 1
%68:i32 = var
blockpc %17 0 %68 1
%69:i32 = var
blockpc %17 1 %69 1
%70:i32 = var
blockpc %20 0 %70 1
%71:i32 = var
blockpc %20 1 %71 1
%72:i32 = var
blockpc %36 0 %72 1
%73:i32 = var
blockpc %36 1 %73 1
%74:i32 = var
blockpc %46 0 %74 1
%75:i32 = var
blockpc %46 1 %75 1
%76:i32 = var
blockpc %47 0 %76 1
%77:i32 = var
blockpc %47 1 %77 1
%78:i32 = var
blockpc %48 0 %78 1
%79:i32 = var
blockpc %48 1 %79 1
%80:i32 = var
%81:i32 = var
%82:i32 = var
%83:i32 = var
pc %80 1
pc %81 1
pc %82 1
pc %83 1
infer %53


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = add %1, -4:i32 (hasExternalUses)
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %10, %14, %12
%16 = phi %8, %9, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = phi %18, %19, %23
%25:i32 = var
%26 = phi %17, %24, %25
%27 = phi %7, %16, %26
%28 = phi %5, %6, %27
%29 = phi %4, %28, %27
%30 = phi %2, %3, %29
%31 = phi %0, %1, %30
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35 = phi %18, %33, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = phi %17, %35, %39
%41 = phi %0, %32, %40
%42 = sub %31, %41
%43 = ashr %42, 2:i32
%44 = mul %43, 9:i32
%45 = add %44, -9:i32 (hasExternalUses)
%46 = block 2
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %49, 0:i32
%51 = phi %47, 9:i32, %50
%52 = phi %46, %51, 9:i32
%53 = sub %45, %52 (hasExternalUses)
%54 = slt 0:i32, %53
%55:i32 = var
blockpc %2 0 %55 1
%56:i32 = var
blockpc %2 1 %56 1
%57:i32 = var
blockpc %4 0 %57 1
%58:i32 = var
blockpc %4 1 %58 1
%59:i32 = var
blockpc %5 0 %59 1
%60:i32 = var
blockpc %5 1 %60 1
%61:i32 = var
blockpc %7 0 %61 1
%62:i32 = var
blockpc %7 1 %62 1
%63:i32 = var
blockpc %8 0 %63 1
%64:i32 = var
blockpc %8 1 %64 1
%65:i32 = var
blockpc %10 0 %65 1
%66:i32 = var
blockpc %10 1 %66 1
%67:i32 = var
blockpc %11 0 %67 1
%68:i32 = var
blockpc %11 1 %68 1
%69:i32 = var
blockpc %17 0 %69 1
%70:i32 = var
blockpc %17 1 %70 1
%71:i32 = var
blockpc %20 0 %71 1
%72:i32 = var
blockpc %20 1 %72 1
%73:i32 = var
blockpc %36 0 %73 1
%74:i32 = var
blockpc %36 1 %74 1
%75:i32 = var
blockpc %46 0 %75 1
%76:i32 = var
blockpc %46 1 %76 1
%77:i32 = var
blockpc %47 0 %77 1
%78:i32 = var
blockpc %47 1 %78 1
%79:i32 = var
blockpc %48 0 %79 1
%80:i32 = var
blockpc %48 1 %80 1
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84:i32 = var
pc %81 1
pc %82 1
pc %83 1
pc %84 1
infer %54


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 2
%9:i32 = var
%10 = phi %8, 6:i32, %9
%11 = phi %3, %7, %10
%12 = phi %1, %2, %11
%13:i32 = var
%14:i32 = var
%15 = add %14, 0:i32; Replace bad zext operation
%16 = phi %1, %13, %15
%17 = xor %16, 1:i32
%18 = and %17, 1:i32
%19 = add %12, %18 (hasExternalUses)
%20 = add %19, -1:i32
%21:i32 = var
%22 = block 2
%23 = block 2
%24 = block 2
%25 = block 2
%26:i32 = var
%27 = mul %26, 9:i32 (hasExternalUses)
%28:i32 = var
%29 = add %28, 1:i32 (hasExternalUses)
%30 = phi %25, %27, %29
%31 = phi %24, %30, 0:i32
%32 = block 2
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %35
%37 = phi %32, %36, %31
%38 = phi %23, %31, %37
%39 = phi %22, %38, %31
%40 = phi %1, %21, %39
%41 = sub %20, %40 (hasExternalUses)
%42:i32 = var
%43 = phi %0, %41, %42
%44 = block 2
%45:i32 = var
%46 = phi %44, %45, 0:i32
%47 = slt %43, %46
%48:i32 = var
blockpc %0 0 %48 1
%49:i32 = var
blockpc %0 1 %49 1
%50:i32 = var
blockpc %3 0 %50 1
%51:i32 = var
blockpc %3 1 %51 1
%52:i32 = var
blockpc %8 0 %52 1
%53:i32 = var
blockpc %8 1 %53 1
%54:i32 = var
blockpc %22 0 %54 1
%55:i32 = var
blockpc %22 1 %55 1
%56:i32 = var
blockpc %23 0 %56 1
%57:i32 = var
blockpc %23 1 %57 1
%58:i32 = var
blockpc %24 0 %58 1
%59:i32 = var
blockpc %24 1 %59 1
%60:i32 = var
blockpc %25 0 %60 1
%61:i32 = var
blockpc %25 1 %61 1
%62:i32 = var
blockpc %32 0 %62 1
%63:i32 = var
blockpc %32 1 %63 1
%64:i32 = var
blockpc %33 0 %64 1
%65:i32 = var
blockpc %33 1 %65 1
%66:i32 = var
blockpc %44 0 %66 1
%67:i32 = var
blockpc %44 1 %67 1
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71:i32 = var
pc %68 1
pc %69 1
pc %70 1
pc %71 1
infer %47


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = add %1, -4:i32 (hasExternalUses)
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %10, %14, %12
%16 = phi %8, %9, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = phi %18, %19, %23
%25:i32 = var
%26 = phi %17, %24, %25
%27 = phi %7, %16, %26
%28 = phi %5, %6, %27
%29 = phi %4, %28, %27
%30 = phi %2, %3, %29
%31 = phi %0, %1, %30
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35 = phi %18, %33, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = phi %17, %35, %39
%41 = phi %0, %32, %40
%42 = sub %31, %41
%43 = ashr %42, 2:i32
%44 = mul %43, 9:i32
%45 = add %44, -9:i32 (hasExternalUses)
%46:i32 = var
%47 = block 2
%48 = block 2
%49 = block 2
%50:i32 = var
%51:i32 = var
%52 = phi %49, %50, %51
%53 = phi %48, %52, 0:i32
%54 = block 2
%55 = block 2
%56:i32 = var
%57:i32 = var
%58 = phi %55, %56, %57
%59 = phi %54, %58, %53
%60 = phi %47, %53, %59
%61 = phi %4, %60, %53
%62 = phi %0, %46, %61
%63 = add %45, %62
%64:i32 = var
blockpc %2 0 %64 1
%65:i32 = var
blockpc %2 1 %65 1
%66:i32 = var
blockpc %4 0 %66 1
%67:i32 = var
blockpc %4 1 %67 1
%68:i32 = var
blockpc %5 0 %68 1
%69:i32 = var
blockpc %5 1 %69 1
%70:i32 = var
blockpc %7 0 %70 1
%71:i32 = var
blockpc %7 1 %71 1
%72:i32 = var
blockpc %8 0 %72 1
%73:i32 = var
blockpc %8 1 %73 1
%74:i32 = var
blockpc %10 0 %74 1
%75:i32 = var
blockpc %10 1 %75 1
%76:i32 = var
blockpc %11 0 %76 1
%77:i32 = var
blockpc %11 1 %77 1
%78:i32 = var
blockpc %17 0 %78 1
%79:i32 = var
blockpc %17 1 %79 1
%80:i32 = var
blockpc %20 0 %80 1
%81:i32 = var
blockpc %20 1 %81 1
%82:i32 = var
blockpc %36 0 %82 1
%83:i32 = var
blockpc %36 1 %83 1
%84:i32 = var
blockpc %47 0 %84 1
%85:i32 = var
blockpc %47 1 %85 1
%86:i32 = var
blockpc %48 0 %86 1
%87:i32 = var
blockpc %48 1 %87 1
%88:i32 = var
blockpc %49 0 %88 1
%89:i32 = var
blockpc %49 1 %89 1
%90:i32 = var
blockpc %54 0 %90 1
%91:i32 = var
blockpc %54 1 %91 1
%92:i32 = var
blockpc %55 0 %92 1
%93:i32 = var
blockpc %55 1 %93 1
%94:i32 = var
%95:i32 = var
%96:i32 = var
%97:i32 = var
pc %94 1
pc %95 1
pc %96 1
pc %97 1
infer %63


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = add %1, -4:i32 (hasExternalUses)
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %10, %14, %12
%16 = phi %8, %9, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = phi %18, %19, %23
%25:i32 = var
%26 = phi %17, %24, %25
%27 = phi %7, %16, %26
%28 = phi %5, %6, %27
%29 = phi %4, %28, %27
%30 = phi %2, %3, %29
%31 = phi %0, %1, %30
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35 = phi %18, %33, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = phi %17, %35, %39
%41 = phi %0, %32, %40
%42 = sub %31, %41
%43 = ashr %42, 2:i32
%44 = mul %43, 9:i32
%45 = add %44, -9:i32 (hasExternalUses)
%46:i32 = var
%47 = block 2
%48 = block 2
%49 = block 2
%50:i32 = var
%51:i32 = var
%52 = phi %49, %50, %51
%53 = phi %48, %52, 0:i32
%54 = block 2
%55 = block 2
%56:i32 = var
%57:i32 = var
%58 = phi %55, %56, %57
%59 = phi %54, %58, %53
%60 = phi %47, %53, %59
%61 = phi %4, %60, %53
%62 = phi %0, %46, %61
%63 = add %45, %62
%64 = block 2
%65 = block 2
%66 = block 2
%67:i32 = var
%68 = phi %66, %67, 0:i32
%69 = phi %65, 9:i32, %68
%70 = phi %64, %69, 9:i32
%71 = sub %63, %70
%72:i32 = var
blockpc %2 0 %72 1
%73:i32 = var
blockpc %2 1 %73 1
%74:i32 = var
blockpc %4 0 %74 1
%75:i32 = var
blockpc %4 1 %75 1
%76:i32 = var
blockpc %5 0 %76 1
%77:i32 = var
blockpc %5 1 %77 1
%78:i32 = var
blockpc %7 0 %78 1
%79:i32 = var
blockpc %7 1 %79 1
%80:i32 = var
blockpc %8 0 %80 1
%81:i32 = var
blockpc %8 1 %81 1
%82:i32 = var
blockpc %10 0 %82 1
%83:i32 = var
blockpc %10 1 %83 1
%84:i32 = var
blockpc %11 0 %84 1
%85:i32 = var
blockpc %11 1 %85 1
%86:i32 = var
blockpc %17 0 %86 1
%87:i32 = var
blockpc %17 1 %87 1
%88:i32 = var
blockpc %20 0 %88 1
%89:i32 = var
blockpc %20 1 %89 1
%90:i32 = var
blockpc %36 0 %90 1
%91:i32 = var
blockpc %36 1 %91 1
%92:i32 = var
blockpc %47 0 %92 1
%93:i32 = var
blockpc %47 1 %93 1
%94:i32 = var
blockpc %48 0 %94 1
%95:i32 = var
blockpc %48 1 %95 1
%96:i32 = var
blockpc %49 0 %96 1
%97:i32 = var
blockpc %49 1 %97 1
%98:i32 = var
blockpc %54 0 %98 1
%99:i32 = var
blockpc %54 1 %99 1
%100:i32 = var
blockpc %55 0 %100 1
%101:i32 = var
blockpc %55 1 %101 1
%102:i32 = var
blockpc %64 0 %102 1
%103:i32 = var
blockpc %64 1 %103 1
%104:i32 = var
blockpc %65 0 %104 1
%105:i32 = var
blockpc %65 1 %105 1
%106:i32 = var
blockpc %66 0 %106 1
%107:i32 = var
blockpc %66 1 %107 1
%108:i32 = var
%109:i32 = var
%110:i32 = var
%111:i32 = var
pc %108 1
pc %109 1
pc %110 1
pc %111 1
infer %71


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %10, %14, %12
%16 = phi %8, %9, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = phi %18, %19, %23
%25:i32 = var
%26 = phi %17, %24, %25
%27 = phi %7, %16, %26
%28 = phi %5, %6, %27
%29 = phi %4, %28, %27
%30 = phi %2, %3, %29
%31 = phi %0, %1, %30
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35 = phi %18, %33, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = phi %17, %35, %39
%41 = phi %0, %32, %40
%42 = sub %31, %41
%43 = ashr %42, 2:i32
%44 = mul %43, 9:i32
%45 = add %44, -9:i32 (hasExternalUses)
%46:i32 = var
%47 = block 2
%48 = block 2
%49 = block 2
%50:i32 = var
%51:i32 = var
%52 = phi %49, %50, %51
%53 = phi %48, %52, 0:i32
%54 = block 2
%55 = block 2
%56:i32 = var
%57:i32 = var
%58 = phi %55, %56, %57
%59 = phi %54, %58, %53
%60 = phi %47, %53, %59
%61 = phi %4, %60, %53
%62 = phi %0, %46, %61
%63 = add %45, %62
%64 = block 2
%65 = block 2
%66 = block 2
%67:i32 = var
%68 = phi %66, %67, 0:i32
%69 = phi %65, 9:i32, %68
%70 = phi %64, %69, 9:i32
%71 = sub %63, %70 (hasExternalUses)
%72 = slt 0:i32, %71
%73:i32 = var
blockpc %2 0 %73 1
%74:i32 = var
blockpc %2 1 %74 1
%75:i32 = var
blockpc %4 0 %75 1
%76:i32 = var
blockpc %4 1 %76 1
%77:i32 = var
blockpc %5 0 %77 1
%78:i32 = var
blockpc %5 1 %78 1
%79:i32 = var
blockpc %7 0 %79 1
%80:i32 = var
blockpc %7 1 %80 1
%81:i32 = var
blockpc %8 0 %81 1
%82:i32 = var
blockpc %8 1 %82 1
%83:i32 = var
blockpc %10 0 %83 1
%84:i32 = var
blockpc %10 1 %84 1
%85:i32 = var
blockpc %11 0 %85 1
%86:i32 = var
blockpc %11 1 %86 1
%87:i32 = var
blockpc %17 0 %87 1
%88:i32 = var
blockpc %17 1 %88 1
%89:i32 = var
blockpc %20 0 %89 1
%90:i32 = var
blockpc %20 1 %90 1
%91:i32 = var
blockpc %36 0 %91 1
%92:i32 = var
blockpc %36 1 %92 1
%93:i32 = var
blockpc %47 0 %93 1
%94:i32 = var
blockpc %47 1 %94 1
%95:i32 = var
blockpc %48 0 %95 1
%96:i32 = var
blockpc %48 1 %96 1
%97:i32 = var
blockpc %49 0 %97 1
%98:i32 = var
blockpc %49 1 %98 1
%99:i32 = var
blockpc %54 0 %99 1
%100:i32 = var
blockpc %54 1 %100 1
%101:i32 = var
blockpc %55 0 %101 1
%102:i32 = var
blockpc %55 1 %102 1
%103:i32 = var
blockpc %64 0 %103 1
%104:i32 = var
blockpc %64 1 %104 1
%105:i32 = var
blockpc %65 0 %105 1
%106:i32 = var
blockpc %65 1 %106 1
%107:i32 = var
blockpc %66 0 %107 1
%108:i32 = var
blockpc %66 1 %108 1
%109:i32 = var
%110:i32 = var
%111:i32 = var
%112:i32 = var
pc %109 1
pc %110 1
pc %111 1
pc %112 1
infer %72


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 2
%9:i32 = var
%10 = phi %8, 6:i32, %9
%11 = phi %3, %7, %10
%12 = phi %1, %2, %11
%13:i32 = var
%14:i32 = var
%15 = add %14, 0:i32; Replace bad zext operation
%16 = phi %1, %13, %15
%17 = xor %16, 1:i32
%18 = and %17, 1:i32
%19 = add %12, %18 (hasExternalUses)
%20 = add %19, -1:i32
%21:i32 = var
%22 = block 2
%23 = block 2
%24 = block 2
%25 = block 2
%26:i32 = var
%27 = mul %26, 9:i32 (hasExternalUses)
%28:i32 = var
%29 = add %28, 1:i32 (hasExternalUses)
%30 = phi %25, %27, %29
%31 = phi %24, %30, 0:i32
%32 = block 2
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %35
%37 = phi %32, %36, %31
%38 = phi %23, %31, %37
%39 = phi %22, %38, %31
%40 = phi %1, %21, %39
%41 = sub %20, %40 (hasExternalUses)
%42:i32 = var
%43 = phi %0, %41, %42
%44 = block 2
%45:i32 = var
%46 = phi %44, %45, 0:i32
%47 = slt %43, %46
%48:i32 = var
blockpc %0 0 %48 1
%49:i32 = var
blockpc %0 1 %49 1
%50:i32 = var
blockpc %3 0 %50 1
%51:i32 = var
blockpc %3 1 %51 1
%52:i32 = var
blockpc %8 0 %52 1
%53:i32 = var
blockpc %8 1 %53 1
%54:i32 = var
blockpc %22 0 %54 1
%55:i32 = var
blockpc %22 1 %55 1
%56:i32 = var
blockpc %23 0 %56 1
%57:i32 = var
blockpc %23 1 %57 1
%58:i32 = var
blockpc %24 0 %58 1
%59:i32 = var
blockpc %24 1 %59 1
%60:i32 = var
blockpc %25 0 %60 1
%61:i32 = var
blockpc %25 1 %61 1
%62:i32 = var
blockpc %32 0 %62 1
%63:i32 = var
blockpc %32 1 %63 1
%64:i32 = var
blockpc %33 0 %64 1
%65:i32 = var
blockpc %33 1 %65 1
%66:i32 = var
blockpc %44 0 %66 1
%67:i32 = var
blockpc %44 1 %67 1
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71:i32 = var
pc %68 1
pc %69 1
pc %70 1
pc %71 1
infer %47


; start LHS (in $11)
%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11:i32 = var
%12 = phi %10, 6:i32, %11
%13 = phi %5, %9, %12
%14 = phi %3, %4, %13
%15:i32 = var
%16:i32 = var
%17 = add %16, 0:i32; Replace bad zext operation
%18 = phi %3, %15, %17
%19 = xor %18, 1:i32
%20 = and %19, 1:i32
%21 = add %14, %20 (hasExternalUses)
%22 = add %21, -1:i32
%23:i32 = var
%24 = block 2
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29:i32 = var
%30 = phi %27, %28, %29
%31 = phi %26, %30, 0:i32
%32 = block 2
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %35
%37 = phi %32, %36, %31
%38 = phi %25, %31, %37
%39 = phi %24, %38, %31
%40 = phi %3, %23, %39
%41 = sub %22, %40 (hasExternalUses)
%42:i32 = var
%43 = phi %2, %41, %42
%44 = block 2
%45:i32 = var
%46 = phi %44, %45, 0:i32
%47 = phi %1, %43, %46
%48 = block 2
%49 = block 2
%50:i32 = var
%51 = phi %49, %50, 0:i32
%52 = phi %48, %43, %51
%53 = block 2
%54 = phi %53, %43, %14
%55 = phi %0, %47, %52, %54
%56 = ne %55, 0:i32
%57:i32 = var
blockpc %1 0 %57 1
%58:i32 = var
blockpc %1 1 %58 1
%59:i32 = var
blockpc %2 0 %59 1
%60:i32 = var
blockpc %2 1 %60 1
%61:i32 = var
blockpc %5 0 %61 1
%62:i32 = var
blockpc %5 1 %62 1
%63:i32 = var
blockpc %10 0 %63 1
%64:i32 = var
blockpc %10 1 %64 1
%65:i32 = var
blockpc %24 0 %65 1
%66:i32 = var
blockpc %24 1 %66 1
%67:i32 = var
blockpc %25 0 %67 1
%68:i32 = var
blockpc %25 1 %68 1
%69:i32 = var
blockpc %26 0 %69 1
%70:i32 = var
blockpc %26 1 %70 1
%71:i32 = var
blockpc %27 0 %71 1
%72:i32 = var
blockpc %27 1 %72 1
%73:i32 = var
blockpc %32 0 %73 1
%74:i32 = var
blockpc %32 1 %74 1
%75:i32 = var
blockpc %33 0 %75 1
%76:i32 = var
blockpc %33 1 %76 1
%77:i32 = var
blockpc %44 0 %77 1
%78:i32 = var
blockpc %44 1 %78 1
%79:i32 = var
blockpc %48 0 %79 1
%80:i32 = var
blockpc %48 1 %80 1
%81:i32 = var
blockpc %49 0 %81 1
%82:i32 = var
blockpc %49 1 %82 1
%83:i32 = var
blockpc %53 0 %83 1
%84:i32 = var
blockpc %53 1 %84 1
%85:i32 = var
pc %85 1
infer %56


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = lshr %9, 3:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22 = block 2
%23:i64 = var
%24 = slt %23, 0:i64
blockpc %22 0 %24 1
%25:i32 = var
blockpc %22 1 %25 1
%26:i64 = var
%27 = phi %22, %26, %23
%28 = and %27, 9218868437227405312:i64
%29 = eq %28, 9218868437227405312:i64
%30:i32 = zext %29
%31 = eq %30, 0:i32
pc %31 1
infer %10


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = lshr %9, 3:i32
%11 = and %10, 1:i32
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
blockpc %2 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %2 1 %22 1
%23 = block 2
%24:i64 = var
%25 = slt %24, 0:i64
blockpc %23 0 %25 1
%26:i32 = var
blockpc %23 1 %26 1
%27:i64 = var
%28 = phi %23, %27, %24
%29 = and %28, 9218868437227405312:i64
%30 = eq %29, 9218868437227405312:i64
%31:i32 = zext %30
%32 = eq %31, 0:i32
pc %32 1
infer %11


; start LHS (in $11)
%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = phi %4, %8, %9
%11 = phi %2, %3, %10
%12 = add %11, -1:i32 (hasExternalUses)
%13 = add %11, -2:i32 (hasExternalUses)
%14 = phi %1, %12, %13
%15 = block 2
%16 = phi %15, %14, %11
%17 = phi %0, %14, %14, %16
%18 = or %17, 32:i32
%19:i32 = var
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = slt %21, %22
blockpc %20 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %20 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35:i32 = var
%36:i32 = var
%37 = phi %32, %35, %36
%38 = phi %29, %37, 0:i32
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45:i32 = var
%46:i32 = var
%47 = phi %42, %45, %46
%48 = phi %39, %47, %38
%49 = phi %26, %38, %48
%50 = phi %20, %49, %38
%51 = phi %2, %19, %50
%52:i32 = var
%53 = slt %51, %52
%54:i32 = zext %53
%55:i32 = var
%56 = add %55, 0:i32; Replace bad zext operation
%57 = and %54, %56
%58 = ne %57, 0:i32
blockpc %1 0 %58 1
%59:i32 = var
blockpc %1 1 %59 1
%60:i32 = var
blockpc %4 0 %60 1
%61:i32 = var
blockpc %4 1 %61 1
%62:i32 = var
blockpc %15 0 %62 1
%63:i32 = var
blockpc %15 1 %63 1
%64:i32 = var
pc %64 1
infer %18


; start LHS (in $11)
%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = phi %4, %8, %9
%11 = phi %2, %3, %10
%12 = add %11, -1:i32 (hasExternalUses)
%13 = add %11, -2:i32 (hasExternalUses)
%14 = phi %1, %12, %13
%15 = block 2
%16 = phi %15, %14, %11
%17 = phi %0, %14, %14, %16
%18 = or %17, 32:i32
%19 = eq %18, 102:i32
%20:i32 = var
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = slt %22, %23
blockpc %21 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %21 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36:i32 = var
%37:i32 = var
%38 = phi %33, %36, %37
%39 = phi %30, %38, 0:i32
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46:i32 = var
%47:i32 = var
%48 = phi %43, %46, %47
%49 = phi %40, %48, %39
%50 = phi %27, %39, %49
%51 = phi %21, %50, %39
%52 = phi %2, %20, %51
%53:i32 = var
%54 = slt %52, %53
%55:i32 = zext %54
%56:i32 = var
%57 = add %56, 0:i32; Replace bad zext operation
%58 = and %55, %57
%59 = ne %58, 0:i32
blockpc %1 0 %59 1
%60:i32 = var
blockpc %1 1 %60 1
%61:i32 = var
blockpc %4 0 %61 1
%62:i32 = var
blockpc %4 1 %62 1
%63:i32 = var
blockpc %15 0 %63 1
%64:i32 = var
blockpc %15 1 %64 1
%65:i32 = var
pc %65 1
infer %19


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %6, %10, %14
%16 = block 2
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %20
%25 = phi %17, %21, %24
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = block 2
%30:i32 = var
%31 = phi %29, %28, %30
%32 = phi %27, %28, %31
%33 = phi %7, %26, %32
%34 = phi %6, %33, %14
%35 = phi %16, %25, %34
%36 = sub %15, %35
%37 = ashr %36, 2:i32
%38 = mul %37, 9:i32 (hasExternalUses)
%39:i32 = var
%40 = phi %5, %38, %39
%41 = phi %4, %40, 0:i32
%42 = block 2
%43 = block 2
%44:i32 = var
%45:i32 = var
%46 = phi %43, %44, %45
%47 = phi %42, %46, %41
%48 = phi %3, %41, %47
%49 = phi %2, %48, %41
%50 = phi %0, %1, %49
%51 = slt 0:i32, %50
%52:i32 = var
blockpc %2 0 %52 1
%53:i32 = var
blockpc %2 1 %53 1
%54:i32 = var
blockpc %3 0 %54 1
%55:i32 = var
blockpc %3 1 %55 1
%56:i32 = var
blockpc %4 0 %56 1
%57:i32 = var
blockpc %4 1 %57 1
%58:i32 = var
blockpc %5 0 %58 1
%59:i32 = var
blockpc %5 1 %59 1
%60:i32 = var
blockpc %6 0 %60 1
%61:i32 = var
blockpc %6 1 %61 1
%62:i32 = var
blockpc %11 0 %62 1
%63:i32 = var
blockpc %11 1 %63 1
%64:i32 = var
blockpc %16 0 %64 1
%65:i32 = var
blockpc %16 1 %65 1
%66:i32 = var
blockpc %17 0 %66 1
%67:i32 = var
blockpc %17 1 %67 1
%68:i32 = var
blockpc %18 0 %68 1
%69:i32 = var
blockpc %18 1 %69 1
%70:i32 = var
blockpc %22 0 %70 1
%71:i32 = var
blockpc %22 1 %71 1
%72:i32 = var
blockpc %27 0 %72 1
%73:i32 = var
blockpc %27 1 %73 1
%74:i32 = var
blockpc %29 0 %74 1
%75:i32 = var
blockpc %29 1 %75 1
%76:i32 = var
blockpc %42 0 %76 1
%77:i32 = var
blockpc %42 1 %77 1
%78:i32 = var
blockpc %43 0 %78 1
%79:i32 = var
blockpc %43 1 %79 1
%80:i32 = var
%81:i32 = var
pc %80 1
pc %81 1
infer %51


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %6, %10, %14
%16 = block 2
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %20
%25 = phi %17, %21, %24
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = block 2
%30:i32 = var
%31 = phi %29, %28, %30
%32 = phi %27, %28, %31
%33 = phi %7, %26, %32
%34 = phi %6, %33, %14
%35 = phi %16, %25, %34
%36 = sub %15, %35
%37 = ashr %36, 2:i32
%38 = mul %37, 9:i32 (hasExternalUses)
%39:i32 = var
%40 = phi %5, %38, %39
%41 = phi %4, %40, 0:i32
%42 = block 2
%43 = block 2
%44:i32 = var
%45:i32 = var
%46 = phi %43, %44, %45
%47 = phi %42, %46, %41
%48 = phi %3, %41, %47
%49 = phi %2, %48, %41
%50 = phi %0, %1, %49
%51 = slt %50, 0:i32
%52:i32 = var
blockpc %2 0 %52 1
%53:i32 = var
blockpc %2 1 %53 1
%54:i32 = var
blockpc %3 0 %54 1
%55:i32 = var
blockpc %3 1 %55 1
%56:i32 = var
blockpc %4 0 %56 1
%57:i32 = var
blockpc %4 1 %57 1
%58:i32 = var
blockpc %5 0 %58 1
%59:i32 = var
blockpc %5 1 %59 1
%60:i32 = var
blockpc %6 0 %60 1
%61:i32 = var
blockpc %6 1 %61 1
%62:i32 = var
blockpc %11 0 %62 1
%63:i32 = var
blockpc %11 1 %63 1
%64:i32 = var
blockpc %16 0 %64 1
%65:i32 = var
blockpc %16 1 %65 1
%66:i32 = var
blockpc %17 0 %66 1
%67:i32 = var
blockpc %17 1 %67 1
%68:i32 = var
blockpc %18 0 %68 1
%69:i32 = var
blockpc %18 1 %69 1
%70:i32 = var
blockpc %22 0 %70 1
%71:i32 = var
blockpc %22 1 %71 1
%72:i32 = var
blockpc %27 0 %72 1
%73:i32 = var
blockpc %27 1 %73 1
%74:i32 = var
blockpc %29 0 %74 1
%75:i32 = var
blockpc %29 1 %75 1
%76:i32 = var
blockpc %42 0 %76 1
%77:i32 = var
blockpc %42 1 %77 1
%78:i32 = var
blockpc %43 0 %78 1
%79:i32 = var
blockpc %43 1 %79 1
%80:i32 = var
%81:i32 = var
pc %80 1
pc %81 1
infer %51


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = add %7, 540:i32 (hasExternalUses)
%9 = add %8, 12:i32 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12:i32 = var
%13 = sub %11, %12
%14 = block 2
%15:i32 = var
%16 = ne %15, 0:i32
blockpc %14 0 %16 1
%17 = eq %15, 0:i32
blockpc %14 1 %17 1
%18:i32 = var
%19 = add %18, -28:i32
%20:i32 = var
%21 = phi %14, %19, %20
%22 = slt 0:i32, %21
blockpc %2 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %2 1 %24 1
%25 = block 3
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30:i32 = var
%31 = phi %26, %29, %30
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35:i32 = var
%36:i32 = var
%37:i32 = var
%38 = phi %3, %36, %37
%39:i32 = var
%40 = phi %2, %38, %39
%41 = phi %0, %35, %40
%42 = phi %32, %31, %41
%43 = phi %25, %31, %31, %42
%44 = or %43, 32:i32
%45 = eq %44, 102:i32
%46:i32 = zext %45
%47 = eq %46, 0:i32
%48:i32 = var
pc %47 1
pc %48 1
infer %13


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = add %7, 540:i32 (hasExternalUses)
%9 = add %8, 12:i32 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12:i32 = var
%13 = sub %11, %12
%14 = slt %13, 2:i32
%15 = block 2
%16:i32 = var
%17 = ne %16, 0:i32
blockpc %15 0 %17 1
%18 = eq %16, 0:i32
blockpc %15 1 %18 1
%19:i32 = var
%20 = add %19, -28:i32
%21:i32 = var
%22 = phi %15, %20, %21
%23 = slt 0:i32, %22
blockpc %2 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %2 1 %25 1
%26:i32 = var
%27:i32 = var
pc %26 1
pc %27 1
infer %14


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -1:i32
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = ne %6, 0:i32
blockpc %5 0 %7 1
%8 = eq %6, 0:i32
blockpc %5 1 %8 1
%9:i32 = var
%10 = add %9, -28:i32
%11:i32 = var
%12 = phi %5, %10, %11
%13 = slt 0:i32, %12
blockpc %4 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %4 1 %15 1
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20:i32 = var
%21 = add %20, 540:i32
%22 = add %21, 12:i32
%23 = phi %4, %19, %22
%24 = phi %2, %3, %23
%25:i32 = var
%26 = sub %24, %25
%27 = slt %26, 2:i32
%28:i32 = var
%29:i32 = var
pc %27 1
pc %28 1
pc %29 1
infer %1


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = add %7, 540:i32 (hasExternalUses)
%9 = add %8, 12:i32 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12:i32 = var
%13 = add %12, -1:i32 (hasExternalUses)
%14 = sub %11, %13
%15 = block 2
%16:i32 = var
%17 = ne %16, 0:i32
blockpc %15 0 %17 1
%18 = eq %16, 0:i32
blockpc %15 1 %18 1
%19:i32 = var
%20 = add %19, -28:i32
%21:i32 = var
%22 = phi %15, %20, %21
%23 = slt 0:i32, %22
blockpc %2 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %2 1 %25 1
%26:i32 = var
%27:i32 = var
%28:i32 = var
pc %26 1
pc %27 1
pc %28 1
infer %14


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = add %7, 540:i32 (hasExternalUses)
%9 = add %8, 12:i32 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12:i32 = var
%13 = add %12, -1:i32 (hasExternalUses)
%14 = sub %11, %13
%15 = slt %14, 2:i32
%16 = block 2
%17:i32 = var
%18 = ne %17, 0:i32
blockpc %16 0 %18 1
%19 = eq %17, 0:i32
blockpc %16 1 %19 1
%20:i32 = var
%21 = add %20, -28:i32
%22:i32 = var
%23 = phi %16, %21, %22
%24 = slt 0:i32, %23
blockpc %2 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %2 1 %26 1
%27:i32 = var
%28:i32 = var
%29:i32 = var
pc %27 1
pc %28 1
pc %29 1
infer %15


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %6, %10, %14
%16 = block 2
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %20
%25 = phi %17, %21, %24
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = block 2
%30:i32 = var
%31 = phi %29, %28, %30
%32 = phi %27, %28, %31
%33 = phi %7, %26, %32
%34 = phi %6, %33, %14
%35 = phi %16, %25, %34
%36 = sub %15, %35
%37 = ashr %36, 2:i32
%38 = mul %37, 9:i32 (hasExternalUses)
%39:i32 = var
%40 = phi %5, %38, %39
%41 = phi %4, %40, 0:i32
%42 = block 2
%43 = block 2
%44:i32 = var
%45:i32 = var
%46 = phi %43, %44, %45
%47 = phi %42, %46, %41
%48 = phi %3, %41, %47
%49 = phi %2, %48, %41
%50 = phi %0, %1, %49
%51 = ashr %50, 31:i32
%52:i32 = var
blockpc %2 0 %52 1
%53:i32 = var
blockpc %2 1 %53 1
%54:i32 = var
blockpc %3 0 %54 1
%55:i32 = var
blockpc %3 1 %55 1
%56:i32 = var
blockpc %4 0 %56 1
%57:i32 = var
blockpc %4 1 %57 1
%58:i32 = var
blockpc %5 0 %58 1
%59:i32 = var
blockpc %5 1 %59 1
%60:i32 = var
blockpc %6 0 %60 1
%61:i32 = var
blockpc %6 1 %61 1
%62:i32 = var
blockpc %11 0 %62 1
%63:i32 = var
blockpc %11 1 %63 1
%64:i32 = var
blockpc %16 0 %64 1
%65:i32 = var
blockpc %16 1 %65 1
%66:i32 = var
blockpc %17 0 %66 1
%67:i32 = var
blockpc %17 1 %67 1
%68:i32 = var
blockpc %18 0 %68 1
%69:i32 = var
blockpc %18 1 %69 1
%70:i32 = var
blockpc %22 0 %70 1
%71:i32 = var
blockpc %22 1 %71 1
%72:i32 = var
blockpc %27 0 %72 1
%73:i32 = var
blockpc %27 1 %73 1
%74:i32 = var
blockpc %29 0 %74 1
%75:i32 = var
blockpc %29 1 %75 1
%76:i32 = var
blockpc %42 0 %76 1
%77:i32 = var
blockpc %42 1 %77 1
%78:i32 = var
blockpc %43 0 %78 1
%79:i32 = var
blockpc %43 1 %79 1
%80:i32 = var
%81:i32 = var
pc %80 1
pc %81 1
infer %51


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = ashr %6, 2:i32
%8 = mul %7, 9:i32 (hasExternalUses)
%9:i32 = var
%10 = add %9, 1:i32 (hasExternalUses)
%11 = phi %5, %8, %10
%12 = phi %4, %11, 0:i32
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = ashr %15, 2:i32
%17 = mul %16, 9:i32 (hasExternalUses)
%18:i32 = var
%19 = add %18, 1:i32 (hasExternalUses)
%20 = phi %14, %17, %19
%21 = phi %13, %20, %12
%22 = phi %3, %12, %21
%23 = phi %2, %22, %12
%24 = phi %0, %1, %23
%25 = ashr %24, 31:i32
%26 = and %25, 2:i32
%27 = block 2
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32:i32 = var
%33 = phi %28, %31, %32
%34 = slt 0:i32, %33
blockpc %27 0 %34 1
%35:i32 = var
blockpc %27 1 %35 1
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44 = phi %40, 6:i32, %43
%45 = phi %27, %39, %44
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = phi %46, 0:i32, %12
%50 = sub %45, %49
%51:i32 = var
%52 = add %50, %51
%53:i32 = var
%54 = slt %52, %53
blockpc %2 0 %54 1
%55:i32 = var
blockpc %2 1 %55 1
%56:i32 = var
blockpc %3 0 %56 1
%57:i32 = var
blockpc %3 1 %57 1
%58:i32 = var
blockpc %4 0 %58 1
%59:i32 = var
blockpc %4 1 %59 1
%60:i32 = var
blockpc %5 0 %60 1
%61:i32 = var
blockpc %5 1 %61 1
%62:i32 = var
blockpc %13 0 %62 1
%63:i32 = var
blockpc %13 1 %63 1
%64:i32 = var
blockpc %14 0 %64 1
%65:i32 = var
blockpc %14 1 %65 1
%66:i32 = var
%67:i32 = var
pc %66 1
pc %67 1
infer %26


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = mul %6, 9:i32 (hasExternalUses)
%8:i32 = var
%9 = add %8, 1:i32 (hasExternalUses)
%10 = phi %5, %7, %9
%11 = phi %4, %10, 0:i32
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = mul %14, 9:i32 (hasExternalUses)
%16:i32 = var
%17 = add %16, 1:i32 (hasExternalUses)
%18 = phi %13, %15, %17
%19 = phi %12, %18, %11
%20 = phi %3, %11, %19
%21 = phi %2, %20, %11
%22 = phi %0, %1, %21
%23 = ashr %22, 31:i32
%24 = and %23, 2:i32
%25 = add %24, 43:i32
%26 = block 2
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30:i32 = var
%31:i32 = var
%32 = phi %27, %30, %31
%33 = slt 0:i32, %32
blockpc %26 0 %33 1
%34:i32 = var
blockpc %26 1 %34 1
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %37
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43 = phi %39, 6:i32, %42
%44 = phi %26, %38, %43
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = phi %45, 0:i32, %11
%49 = sub %44, %48
%50:i32 = var
%51 = add %49, %50
%52:i32 = var
%53 = slt %51, %52
blockpc %2 0 %53 1
%54:i32 = var
blockpc %2 1 %54 1
%55:i32 = var
blockpc %3 0 %55 1
%56:i32 = var
blockpc %3 1 %56 1
%57:i32 = var
blockpc %4 0 %57 1
%58:i32 = var
blockpc %4 1 %58 1
%59:i32 = var
blockpc %5 0 %59 1
%60:i32 = var
blockpc %5 1 %60 1
%61:i32 = var
blockpc %12 0 %61 1
%62:i32 = var
blockpc %12 1 %62 1
%63:i32 = var
blockpc %13 0 %63 1
%64:i32 = var
blockpc %13 1 %64 1
%65:i32 = var
%66:i32 = var
pc %65 1
pc %66 1
infer %25


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -1:i32
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12:i32 = var
%13 = add %12, -28:i32
%14:i32 = var
%15 = phi %9, %13, %14
%16 = slt 0:i32, %15
blockpc %8 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %8 1 %18 1
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23:i32 = var
%24 = add %23, 540:i32
%25 = add %24, 12:i32
%26 = phi %8, %22, %25
%27 = phi %6, %7, %26
%28 = sub %27, %3
%29 = slt %28, 2:i32
blockpc %0 0 %29 1
%30:i32 = var
blockpc %0 1 %30 1
%31:i32 = var
%32:i32 = var
pc %31 1
pc %32 1
infer %5


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9 = phi %4, %8, 0:i32
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %10, %14, %9
%16 = phi %3, %9, %15
%17 = phi %2, %16, %9
%18 = phi %0, %1, %17
%19 = ashr %18, 31:i32
%20 = and %19, 2:i32
%21 = add %20, 43:i32
%22 = and %21, 255:i32
%23 = block 2
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28 = add %27, -28:i32
%29:i32 = var
%30 = phi %24, %28, %29
%31 = slt 0:i32, %30
blockpc %23 0 %31 1
%32:i32 = var
blockpc %23 1 %32 1
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %35
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40:i32 = var
%41 = phi %37, 6:i32, %40
%42 = phi %23, %36, %41
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, 0:i32, %9
%47 = sub %42, %46
%48:i32 = var
%49 = add %47, %48
%50:i32 = var
%51 = slt %49, %50
blockpc %2 0 %51 1
%52:i32 = var
blockpc %2 1 %52 1
%53:i32 = var
blockpc %3 0 %53 1
%54:i32 = var
blockpc %3 1 %54 1
%55:i32 = var
blockpc %4 0 %55 1
%56:i32 = var
blockpc %4 1 %56 1
%57:i32 = var
blockpc %5 0 %57 1
%58:i32 = var
blockpc %5 1 %58 1
%59:i32 = var
blockpc %10 0 %59 1
%60:i32 = var
blockpc %10 1 %60 1
%61:i32 = var
blockpc %11 0 %61 1
%62:i32 = var
blockpc %11 1 %62 1
%63:i32 = var
%64:i32 = var
pc %63 1
pc %64 1
infer %22


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = phi %0, %2, %3
%5 = add %4, -2:i32
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12:i32 = var
%13 = add %12, -28:i32
%14:i32 = var
%15 = phi %9, %13, %14
%16 = slt 0:i32, %15
blockpc %8 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %8 1 %18 1
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23:i32 = var
%24 = add %23, 540:i32
%25 = add %24, 12:i32
%26 = phi %8, %22, %25
%27 = phi %6, %7, %26
%28 = sub %27, %3
%29 = slt %28, 2:i32
blockpc %0 0 %29 1
%30:i32 = var
blockpc %0 1 %30 1
%31:i32 = var
%32:i32 = var
pc %31 1
pc %32 1
infer %5


; start LHS (in $11)
%0 = block 3
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = phi %4, %8, %9
%11 = phi %2, %3, %10
%12 = add %11, -1:i32 (hasExternalUses)
%13 = add %11, -2:i32 (hasExternalUses)
%14 = phi %1, %12, %13
%15 = block 2
%16 = phi %15, %14, %11
%17 = phi %0, %14, %14, %16
%18 = and %17, 255:i32
%19:i32 = var
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = slt %21, %22
blockpc %20 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %20 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35:i32 = var
%36:i32 = var
%37 = phi %32, %35, %36
%38 = phi %29, %37, 0:i32
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45:i32 = var
%46:i32 = var
%47 = phi %42, %45, %46
%48 = phi %39, %47, %38
%49 = phi %26, %38, %48
%50 = phi %20, %49, %38
%51 = phi %2, %19, %50
%52:i32 = var
%53 = slt %51, %52
%54:i32 = zext %53
%55:i32 = var
%56 = add %55, 0:i32; Replace bad zext operation
%57 = and %54, %56
%58 = ne %57, 0:i32
blockpc %1 0 %58 1
%59:i32 = var
blockpc %1 1 %59 1
%60:i32 = var
blockpc %4 0 %60 1
%61:i32 = var
blockpc %4 1 %61 1
%62:i32 = var
blockpc %15 0 %62 1
%63:i32 = var
blockpc %15 1 %63 1
%64:i32 = var
%65:i32 = var
pc %64 1
pc %65 1
infer %18


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = add %7, 540:i32 (hasExternalUses)
%9 = add %8, 12:i32 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12 = block 2
%13:i32 = var
%14 = add %13, -1:i32 (hasExternalUses)
%15:i32 = var
%16 = phi %12, %14, %15
%17 = add %16, -2:i32 (hasExternalUses)
%18 = sub %11, %17
%19 = block 2
%20:i32 = var
%21 = ne %20, 0:i32
blockpc %19 0 %21 1
%22 = eq %20, 0:i32
blockpc %19 1 %22 1
%23:i32 = var
%24 = add %23, -28:i32
%25:i32 = var
%26 = phi %19, %24, %25
%27 = slt 0:i32, %26
blockpc %2 0 %27 1
%28:i32 = var
blockpc %2 1 %28 1
%29:i32 = var
blockpc %12 0 %29 1
%30:i32 = var
blockpc %12 1 %30 1
%31:i32 = var
%32:i32 = var
pc %31 1
pc %32 1
infer %18


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = and %8, 2049:i32
%10 = ne %9, 0:i32
%11:i32 = zext %10
%12 = and %11, 1:i32 (hasExternalUses)
%13 = phi %7, 1:i32, %12
%14 = phi %2, %6, %13
%15 = phi %0, %1, %14
%16 = add %15, 1:i32
%17 = block 2
%18:i32 = var
%19 = ne %18, 0:i32
blockpc %17 0 %19 1
%20 = eq %18, 0:i32
blockpc %17 1 %20 1
%21:i32 = var
%22 = add %21, -28:i32
%23:i32 = var
%24 = phi %17, %22, %23
%25 = slt 0:i32, %24
blockpc %2 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %2 1 %27 1
%28:i32 = var
blockpc %7 0 %28 1
%29:i32 = var
blockpc %7 1 %29 1
%30:i32 = var
pc %30 1
infer %16


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = and %8, 2049:i32
%10 = ne %9, 0:i32
%11:i32 = zext %10
%12 = and %11, 1:i32 (hasExternalUses)
%13 = phi %7, 1:i32, %12
%14 = phi %2, %6, %13
%15 = phi %0, %1, %14
%16 = add %15, 1:i32
%17 = block 3
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22:i32 = var
%23 = phi %3, %21, %22
%24 = block 2
%25:i32 = var
%26 = phi %24, 6:i32, %25
%27 = phi %2, %23, %26
%28 = phi %0, %20, %27
%29:i32 = var
%30:i32 = var
%31 = add %30, 0:i32; Replace bad zext operation
%32 = phi %0, %29, %31
%33 = xor %32, 1:i32
%34 = and %33, 1:i32
%35 = add %28, %34 (hasExternalUses)
%36 = add %35, -1:i32
%37:i32 = var
%38 = block 2
%39 = block 2
%40 = block 2
%41 = block 2
%42:i32 = var
%43:i32 = var
%44 = phi %41, %42, %43
%45 = phi %40, %44, 0:i32
%46 = block 2
%47 = block 2
%48:i32 = var
%49:i32 = var
%50 = phi %47, %48, %49
%51 = phi %46, %50, %45
%52 = phi %39, %45, %51
%53 = phi %38, %52, %45
%54 = phi %0, %37, %53
%55 = sub %36, %54 (hasExternalUses)
%56:i32 = var
%57 = phi %19, %55, %56
%58 = block 2
%59:i32 = var
%60 = phi %58, %59, 0:i32
%61 = phi %18, %57, %60
%62 = block 2
%63 = block 2
%64:i32 = var
%65 = phi %63, %64, 0:i32
%66 = phi %62, %57, %65
%67 = block 2
%68 = phi %67, %57, %28
%69 = phi %17, %61, %66, %68
%70 = add %16, %69
%71:i32 = var
blockpc %2 0 %71 1
%72:i32 = var
blockpc %2 1 %72 1
%73:i32 = var
blockpc %7 0 %73 1
%74:i32 = var
blockpc %7 1 %74 1
%75:i32 = var
blockpc %18 0 %75 1
%76:i32 = var
blockpc %18 1 %76 1
%77:i32 = var
blockpc %19 0 %77 1
%78:i32 = var
blockpc %19 1 %78 1
%79:i32 = var
blockpc %24 0 %79 1
%80:i32 = var
blockpc %24 1 %80 1
%81:i32 = var
blockpc %38 0 %81 1
%82:i32 = var
blockpc %38 1 %82 1
%83:i32 = var
blockpc %39 0 %83 1
%84:i32 = var
blockpc %39 1 %84 1
%85:i32 = var
blockpc %40 0 %85 1
%86:i32 = var
blockpc %40 1 %86 1
%87:i32 = var
blockpc %41 0 %87 1
%88:i32 = var
blockpc %41 1 %88 1
%89:i32 = var
blockpc %46 0 %89 1
%90:i32 = var
blockpc %46 1 %90 1
%91:i32 = var
blockpc %47 0 %91 1
%92:i32 = var
blockpc %47 1 %92 1
%93:i32 = var
blockpc %58 0 %93 1
%94:i32 = var
blockpc %58 1 %94 1
%95:i32 = var
blockpc %62 0 %95 1
%96:i32 = var
blockpc %62 1 %96 1
%97:i32 = var
blockpc %63 0 %97 1
%98:i32 = var
blockpc %63 1 %98 1
%99:i32 = var
blockpc %67 0 %99 1
%100:i32 = var
blockpc %67 1 %100 1
%101:i32 = var
pc %101 1
infer %70


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = ne %8, 0:i32
%10:i32 = zext %9
%11 = and %10, 1:i32 (hasExternalUses)
%12 = phi %7, 1:i32, %11
%13 = phi %2, %6, %12
%14 = phi %0, %1, %13
%15 = add %14, 1:i32
%16 = block 3
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21:i32 = var
%22 = phi %3, %20, %21
%23 = block 2
%24:i32 = var
%25 = phi %23, 6:i32, %24
%26 = phi %2, %22, %25
%27 = phi %0, %19, %26
%28:i32 = var
%29 = and %28, 1:i32
%30 = add %27, %29 (hasExternalUses)
%31 = add %30, -1:i32
%32:i32 = var
%33 = block 2
%34 = block 2
%35 = block 2
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = phi %35, %39, 0:i32
%41 = block 2
%42 = block 2
%43:i32 = var
%44:i32 = var
%45 = phi %42, %43, %44
%46 = phi %41, %45, %40
%47 = phi %34, %40, %46
%48 = phi %33, %47, %40
%49 = phi %0, %32, %48
%50 = sub %31, %49 (hasExternalUses)
%51:i32 = var
%52 = phi %18, %50, %51
%53 = block 2
%54:i32 = var
%55 = phi %53, %54, 0:i32
%56 = phi %17, %52, %55
%57 = block 2
%58 = block 2
%59:i32 = var
%60 = phi %58, %59, 0:i32
%61 = phi %57, %52, %60
%62 = block 2
%63 = phi %62, %52, %27
%64 = phi %16, %56, %61, %63
%65 = add %15, %64
%66 = block 2
%67:i32 = var
%68 = phi %66, 1:i32, %67
%69 = add %65, %68
%70:i32 = var
blockpc %2 0 %70 1
%71:i32 = var
blockpc %2 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %17 0 %74 1
%75:i32 = var
blockpc %17 1 %75 1
%76:i32 = var
blockpc %18 0 %76 1
%77:i32 = var
blockpc %18 1 %77 1
%78:i32 = var
blockpc %23 0 %78 1
%79:i32 = var
blockpc %23 1 %79 1
%80:i32 = var
blockpc %33 0 %80 1
%81:i32 = var
blockpc %33 1 %81 1
%82:i32 = var
blockpc %34 0 %82 1
%83:i32 = var
blockpc %34 1 %83 1
%84:i32 = var
blockpc %35 0 %84 1
%85:i32 = var
blockpc %35 1 %85 1
%86:i32 = var
blockpc %36 0 %86 1
%87:i32 = var
blockpc %36 1 %87 1
%88:i32 = var
blockpc %41 0 %88 1
%89:i32 = var
blockpc %41 1 %89 1
%90:i32 = var
blockpc %42 0 %90 1
%91:i32 = var
blockpc %42 1 %91 1
%92:i32 = var
blockpc %53 0 %92 1
%93:i32 = var
blockpc %53 1 %93 1
%94:i32 = var
blockpc %57 0 %94 1
%95:i32 = var
blockpc %57 1 %95 1
%96:i32 = var
blockpc %58 0 %96 1
%97:i32 = var
blockpc %58 1 %97 1
%98:i32 = var
blockpc %62 0 %98 1
%99:i32 = var
blockpc %62 1 %99 1
%100:i32 = var
blockpc %66 0 %100 1
%101:i32 = var
blockpc %66 1 %101 1
%102:i32 = var
pc %102 1
infer %69


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = add %8, 0:i32; Replace bad zext operation
%10 = and %9, 1:i32 (hasExternalUses)
%11 = phi %7, 1:i32, %10
%12 = phi %2, %6, %11
%13 = phi %0, %1, %12
%14 = add %13, 1:i32
%15 = block 3
%16 = block 2
%17 = block 2
%18:i32 = var
%19:i32 = var
%20:i32 = var
%21 = phi %3, %19, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, 6:i32, %23
%25 = phi %2, %21, %24
%26 = phi %0, %18, %25
%27:i32 = var
%28 = add %26, %27 (hasExternalUses)
%29 = add %28, -1:i32
%30:i32 = var
%31 = block 2
%32 = block 2
%33 = block 2
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %36
%38 = phi %33, %37, 0:i32
%39 = block 2
%40 = block 2
%41:i32 = var
%42:i32 = var
%43 = phi %40, %41, %42
%44 = phi %39, %43, %38
%45 = phi %32, %38, %44
%46 = phi %31, %45, %38
%47 = phi %0, %30, %46
%48 = sub %29, %47 (hasExternalUses)
%49:i32 = var
%50 = phi %17, %48, %49
%51 = block 2
%52:i32 = var
%53 = phi %51, %52, 0:i32
%54 = phi %16, %50, %53
%55 = block 2
%56 = block 2
%57:i32 = var
%58 = phi %56, %57, 0:i32
%59 = phi %55, %50, %58
%60 = block 2
%61 = phi %60, %50, %26
%62 = phi %15, %54, %59, %61
%63 = add %14, %62
%64 = block 2
%65:i32 = var
%66 = phi %64, 1:i32, %65
%67 = add %63, %66
%68 = block 2
%69 = block 2
%70 = phi %69, %47, 0:i32
%71:i32 = var
%72 = phi %68, %70, %71
%73 = add %67, %72
%74:i32 = var
blockpc %2 0 %74 1
%75:i32 = var
blockpc %2 1 %75 1
%76:i32 = var
blockpc %7 0 %76 1
%77:i32 = var
blockpc %7 1 %77 1
%78:i32 = var
blockpc %16 0 %78 1
%79:i32 = var
blockpc %16 1 %79 1
%80:i32 = var
blockpc %17 0 %80 1
%81:i32 = var
blockpc %17 1 %81 1
%82:i32 = var
blockpc %22 0 %82 1
%83:i32 = var
blockpc %22 1 %83 1
%84:i32 = var
blockpc %31 0 %84 1
%85:i32 = var
blockpc %31 1 %85 1
%86:i32 = var
blockpc %32 0 %86 1
%87:i32 = var
blockpc %32 1 %87 1
%88:i32 = var
blockpc %33 0 %88 1
%89:i32 = var
blockpc %33 1 %89 1
%90:i32 = var
blockpc %34 0 %90 1
%91:i32 = var
blockpc %34 1 %91 1
%92:i32 = var
blockpc %39 0 %92 1
%93:i32 = var
blockpc %39 1 %93 1
%94:i32 = var
blockpc %40 0 %94 1
%95:i32 = var
blockpc %40 1 %95 1
%96:i32 = var
blockpc %51 0 %96 1
%97:i32 = var
blockpc %51 1 %97 1
%98:i32 = var
blockpc %55 0 %98 1
%99:i32 = var
blockpc %55 1 %99 1
%100:i32 = var
blockpc %56 0 %100 1
%101:i32 = var
blockpc %56 1 %101 1
%102:i32 = var
blockpc %60 0 %102 1
%103:i32 = var
blockpc %60 1 %103 1
%104:i32 = var
blockpc %64 0 %104 1
%105:i32 = var
blockpc %64 1 %105 1
%106:i32 = var
blockpc %68 0 %106 1
%107:i32 = var
blockpc %68 1 %107 1
%108:i32 = var
blockpc %69 0 %108 1
%109:i32 = var
blockpc %69 1 %109 1
%110:i32 = var
pc %110 1
infer %73


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = xor %9, 65536:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22 = block 2
%23:i64 = var
%24 = slt %23, 0:i64
blockpc %22 0 %24 1
%25:i32 = var
blockpc %22 1 %25 1
%26:i64 = var
%27 = phi %22, %26, %23
%28 = and %27, 9218868437227405312:i64
%29 = eq %28, 9218868437227405312:i64
%30:i32 = zext %29
%31 = eq %30, 0:i32
pc %31 1
infer %10


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = add %8, 32:i32 (hasExternalUses)
%10 = add %9, 288:i32 (hasExternalUses)
%11 = phi %7, %9, %10
%12 = phi %2, %6, %11
%13 = phi %0, %1, %12
%14:i32 = var
%15 = block 2
%16 = block 2
%17 = block 2
%18 = block 2
%19 = block 2
%20:i32 = var
%21 = add %20, 4:i32 (hasExternalUses)
%22 = phi %19, %21, %20
%23 = block 2
%24 = add %20, 4:i32 (hasExternalUses)
%25 = phi %23, %24, %20
%26 = phi %18, %22, %25
%27:i32 = var
%28 = block 2
%29:i32 = var
%30 = block 2
%31:i32 = var
%32 = phi %30, %29, %31
%33 = phi %28, %29, %32
%34 = phi %3, %27, %33
%35 = phi %2, %34, %11
%36 = phi %17, %26, %35
%37 = block 2
%38 = block 2
%39 = block 2
%40:i32 = var
%41:i32 = var
%42 = phi %39, %40, %41
%43 = phi %38, %42, %36
%44 = phi %37, %43, %36
%45 = phi %16, %36, %44
%46 = phi %15, %45, %36
%47 = phi %0, %14, %46
%48 = ult %13, %47
%49:i32 = var
blockpc %2 0 %49 1
%50:i32 = var
blockpc %2 1 %50 1
%51:i32 = var
blockpc %7 0 %51 1
%52:i32 = var
blockpc %7 1 %52 1
%53:i32 = var
blockpc %15 0 %53 1
%54:i32 = var
blockpc %15 1 %54 1
%55:i32 = var
blockpc %16 0 %55 1
%56:i32 = var
blockpc %16 1 %56 1
%57:i32 = var
blockpc %17 0 %57 1
%58:i32 = var
blockpc %17 1 %58 1
%59:i32 = var
blockpc %18 0 %59 1
%60:i32 = var
blockpc %18 1 %60 1
%61:i32 = var
blockpc %19 0 %61 1
%62:i32 = var
blockpc %19 1 %62 1
%63:i32 = var
blockpc %23 0 %63 1
%64:i32 = var
blockpc %23 1 %64 1
%65:i32 = var
blockpc %28 0 %65 1
%66:i32 = var
blockpc %28 1 %66 1
%67:i32 = var
blockpc %30 0 %67 1
%68:i32 = var
blockpc %30 1 %68 1
%69:i32 = var
blockpc %37 0 %69 1
%70:i32 = var
blockpc %37 1 %70 1
%71:i32 = var
blockpc %38 0 %71 1
%72:i32 = var
blockpc %38 1 %72 1
%73:i32 = var
blockpc %39 0 %73 1
%74:i32 = var
blockpc %39 1 %74 1
%75:i32 = var
%76:i32 = var
pc %75 1
pc %76 1
infer %48


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = add %9, 9:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22 = block 3
%23 = block 2
%24:i32 = var
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37:i32 = var
%38:i32 = var
%39 = phi %34, %37, %38
%40 = phi %31, %39, 0:i32
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47:i32 = var
%48:i32 = var
%49 = phi %44, %47, %48
%50 = phi %41, %49, %40
%51 = phi %28, %40, %50
%52 = phi %25, %51, %40
%53 = phi %0, %24, %52
%54:i32 = var
%55 = slt %53, %54
%56:i32 = zext %55
%57:i32 = var
%58 = add %57, 0:i32; Replace bad zext operation
%59 = and %56, %58
%60 = ne %59, 0:i32
blockpc %23 0 %60 1
%61:i32 = var
blockpc %23 1 %61 1
%62:i32 = var
%63:i32 = var
%64 = phi %23, %62, %63
%65 = block 2
%66:i32 = var
blockpc %65 0 %66 1
%67:i32 = var
blockpc %65 1 %67 1
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %3, %69, %70
%72:i32 = var
%73 = phi %2, %71, %72
%74 = phi %0, %68, %73
%75 = phi %65, %64, %74
%76 = phi %22, %64, %64, %75
%77 = or %76, 32:i32
%78 = eq %77, 102:i32
%79:i32 = var
pc %78 1
pc %79 1
infer %10


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = add %9, 8:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22 = block 3
%23 = block 2
%24:i32 = var
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37:i32 = var
%38:i32 = var
%39 = phi %34, %37, %38
%40 = phi %31, %39, 0:i32
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47:i32 = var
%48:i32 = var
%49 = phi %44, %47, %48
%50 = phi %41, %49, %40
%51 = phi %28, %40, %50
%52 = phi %25, %51, %40
%53 = phi %0, %24, %52
%54:i32 = var
%55 = slt %53, %54
%56:i32 = zext %55
%57:i32 = var
%58 = add %57, 0:i32; Replace bad zext operation
%59 = and %56, %58
%60 = ne %59, 0:i32
blockpc %23 0 %60 1
%61:i32 = var
blockpc %23 1 %61 1
%62:i32 = var
%63:i32 = var
%64 = phi %23, %62, %63
%65 = block 2
%66:i32 = var
blockpc %65 0 %66 1
%67:i32 = var
blockpc %65 1 %67 1
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %3, %69, %70
%72:i32 = var
%73 = phi %2, %71, %72
%74 = phi %0, %68, %73
%75 = phi %65, %64, %74
%76 = phi %22, %64, %64, %75
%77 = or %76, 32:i32
%78 = eq %77, 102:i32
%79:i32 = var
pc %78 1
pc %79 1
infer %10


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9 = block 2
%10:i32 = var
%11 = add %10, 32:i32 (hasExternalUses)
%12 = add %11, 288:i32 (hasExternalUses)
%13 = phi %9, %11, %12
%14 = phi %4, %8, %13
%15 = phi %2, %3, %14
%16:i32 = var
%17 = block 2
%18 = block 2
%19 = block 2
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = add %22, 4:i32 (hasExternalUses)
%24 = phi %21, %23, %22
%25 = block 2
%26 = add %22, 4:i32 (hasExternalUses)
%27 = phi %25, %26, %22
%28 = phi %20, %24, %27
%29:i32 = var
%30 = block 2
%31:i32 = var
%32 = block 2
%33:i32 = var
%34 = phi %32, %31, %33
%35 = phi %30, %31, %34
%36 = phi %5, %29, %35
%37 = phi %4, %36, %13
%38 = phi %19, %28, %37
%39 = block 2
%40 = block 2
%41 = block 2
%42:i32 = var
%43:i32 = var
%44 = phi %41, %42, %43
%45 = phi %40, %44, %38
%46 = phi %39, %45, %38
%47 = phi %18, %38, %46
%48 = phi %17, %47, %38
%49 = phi %2, %16, %48
%50 = phi %1, %15, %49
%51 = eq %0, %50
%52:i32 = var
blockpc %1 0 %52 1
%53:i32 = var
blockpc %1 1 %53 1
%54:i32 = var
blockpc %4 0 %54 1
%55:i32 = var
blockpc %4 1 %55 1
%56:i32 = var
blockpc %9 0 %56 1
%57:i32 = var
blockpc %9 1 %57 1
%58:i32 = var
blockpc %17 0 %58 1
%59:i32 = var
blockpc %17 1 %59 1
%60:i32 = var
blockpc %18 0 %60 1
%61:i32 = var
blockpc %18 1 %61 1
%62:i32 = var
blockpc %19 0 %62 1
%63:i32 = var
blockpc %19 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %21 0 %66 1
%67:i32 = var
blockpc %21 1 %67 1
%68:i32 = var
blockpc %25 0 %68 1
%69:i32 = var
blockpc %25 1 %69 1
%70:i32 = var
blockpc %30 0 %70 1
%71:i32 = var
blockpc %30 1 %71 1
%72:i32 = var
blockpc %32 0 %72 1
%73:i32 = var
blockpc %32 1 %73 1
%74:i32 = var
blockpc %39 0 %74 1
%75:i32 = var
blockpc %39 1 %75 1
%76:i32 = var
blockpc %40 0 %76 1
%77:i32 = var
blockpc %40 1 %77 1
%78:i32 = var
blockpc %41 0 %78 1
%79:i32 = var
blockpc %41 1 %79 1
%80:i32 = var
%81:i32 = var
pc %80 1
pc %81 1
infer %51


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = add %10, 9:i32 (hasExternalUses)
%12 = eq %0, %11
%13 = block 2
%14:i32 = var
%15 = ne %14, 0:i32
blockpc %13 0 %15 1
%16 = eq %14, 0:i32
blockpc %13 1 %16 1
%17:i32 = var
%18 = add %17, -28:i32
%19:i32 = var
%20 = phi %13, %18, %19
%21 = slt 0:i32, %20
blockpc %3 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %3 1 %23 1
%24:i32 = var
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31 = phi %4, %29, %30
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35:i32 = var
%36:i32 = var
%37 = phi %32, %35, %36
%38 = phi %3, %31, %37
%39 = phi %1, %28, %38
%40:i32 = var
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56:i32 = var
%57:i32 = var
%58 = phi %53, %56, %57
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62:i32 = var
%63 = phi %59, %62, %57
%64 = phi %50, %58, %63
%65:i32 = var
%66 = block 2
%67:i32 = var
blockpc %66 0 %67 1
%68:i32 = var
blockpc %66 1 %68 1
%69:i32 = var
%70 = block 2
%71:i32 = var
blockpc %70 0 %71 1
%72:i32 = var
blockpc %70 1 %72 1
%73:i32 = var
%74 = phi %70, %69, %73
%75 = phi %66, %69, %74
%76 = phi %4, %65, %75
%77 = phi %3, %76, %37
%78 = phi %47, %64, %77
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82 = block 2
%83:i32 = var
blockpc %82 0 %83 1
%84:i32 = var
blockpc %82 1 %84 1
%85 = block 2
%86:i32 = var
blockpc %85 0 %86 1
%87:i32 = var
blockpc %85 1 %87 1
%88:i32 = var
%89:i32 = var
%90 = phi %85, %88, %89
%91 = phi %82, %90, %78
%92 = phi %79, %91, %78
%93 = phi %44, %78, %92
%94 = phi %41, %93, %78
%95 = phi %1, %40, %94
%96 = phi %25, %39, %95
%97 = eq %24, %96
%98:i32 = var
%99:i32 = var
pc %97 1
pc %98 1
pc %99 1
infer %12


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10:i32 = var
%11 = ult %9, %10
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
blockpc %2 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %2 1 %22 1
%23:i32 = var
%24 = block 2
%25:i32 = var
%26:i32 = var
%27:i32 = var
%28 = phi %3, %26, %27
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %29, %32, %33
%35 = phi %2, %28, %34
%36 = phi %0, %25, %35
%37:i32 = var
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54:i32 = var
%55 = phi %50, %53, %54
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %59, %54
%61 = phi %47, %55, %60
%62:i32 = var
%63 = block 2
%64:i32 = var
blockpc %63 0 %64 1
%65:i32 = var
blockpc %63 1 %65 1
%66:i32 = var
%67 = block 2
%68:i32 = var
blockpc %67 0 %68 1
%69:i32 = var
blockpc %67 1 %69 1
%70:i32 = var
%71 = phi %67, %66, %70
%72 = phi %63, %66, %71
%73 = phi %3, %62, %72
%74 = phi %2, %73, %34
%75 = phi %44, %61, %74
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82 = block 2
%83:i32 = var
blockpc %82 0 %83 1
%84:i32 = var
blockpc %82 1 %84 1
%85:i32 = var
%86:i32 = var
%87 = phi %82, %85, %86
%88 = phi %79, %87, %75
%89 = phi %76, %88, %75
%90 = phi %41, %75, %89
%91 = phi %38, %90, %75
%92 = phi %0, %37, %91
%93 = ult %36, %92
blockpc %24 0 %93 1
%94:i32 = var
blockpc %24 1 %94 1
%95 = phi %24, %36, %92
%96 = eq %23, %95
%97:i32 = zext %96
%98 = eq %97, 0:i32
%99:i32 = var
%100:i32 = var
pc %98 1
pc %99 1
pc %100 1
infer %11


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = sub %0, %10
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
blockpc %3 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %3 1 %22 1
%23:i32 = var
%24:i32 = var
%25:i32 = var
%26 = phi %4, %24, %25
%27 = phi %3, %26, %8
%28 = phi %1, %23, %27
%29 = ult %28, %0
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %11


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -1:i32
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = ne %6, 0:i32
blockpc %5 0 %7 1
%8 = eq %6, 0:i32
blockpc %5 1 %8 1
%9:i32 = var
%10 = add %9, -28:i32
%11:i32 = var
%12 = phi %5, %10, %11
%13 = slt 0:i32, %12
blockpc %4 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %4 1 %15 1
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20:i32 = var
%21 = phi %4, %19, %20
%22 = phi %2, %3, %21
%23:i32 = var
%24 = ult %22, %23
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32 = phi %16, %30, %31
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36:i32 = var
%37:i32 = var
%38 = phi %33, %36, %37
%39 = phi %4, %32, %38
%40 = phi %2, %29, %39
%41:i32 = var
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57:i32 = var
%58:i32 = var
%59 = phi %54, %57, %58
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63:i32 = var
%64 = phi %60, %63, %58
%65 = phi %51, %59, %64
%66:i32 = var
%67 = block 2
%68:i32 = var
blockpc %67 0 %68 1
%69:i32 = var
blockpc %67 1 %69 1
%70:i32 = var
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74:i32 = var
%75 = phi %71, %70, %74
%76 = phi %67, %70, %75
%77 = phi %16, %66, %76
%78 = phi %4, %77, %38
%79 = phi %48, %65, %78
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83 = block 2
%84:i32 = var
blockpc %83 0 %84 1
%85:i32 = var
blockpc %83 1 %85 1
%86 = block 2
%87:i32 = var
blockpc %86 0 %87 1
%88:i32 = var
blockpc %86 1 %88 1
%89:i32 = var
%90:i32 = var
%91 = phi %86, %89, %90
%92 = phi %83, %91, %79
%93 = phi %80, %92, %79
%94 = phi %45, %79, %93
%95 = phi %42, %94, %79
%96 = phi %2, %41, %95
%97 = phi %26, %40, %96
%98 = eq %25, %97
%99:i32 = zext %98
%100 = eq %99, 0:i32
%101:i32 = var
%102:i32 = var
pc %24 1
pc %100 1
pc %101 1
pc %102 1
infer %1


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10:i32 = var
%11 = add %10, -1:i32 (hasExternalUses)
%12 = ult %9, %11
%13 = block 2
%14:i32 = var
%15 = ne %14, 0:i32
blockpc %13 0 %15 1
%16 = eq %14, 0:i32
blockpc %13 1 %16 1
%17:i32 = var
%18 = add %17, -28:i32
%19:i32 = var
%20 = phi %13, %18, %19
%21 = slt 0:i32, %20
blockpc %2 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %2 1 %23 1
%24:i32 = var
%25 = ult %9, %24
%26:i32 = var
%27:i32 = var
%28:i32 = var
pc %25 1
pc %26 1
pc %27 1
pc %28 1
infer %12


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = add %9, 9:i32 (hasExternalUses)
%11 = block 2
%12 = block 2
%13 = add %9, 8:i32 (hasExternalUses)
%14:i32 = var
%15 = phi %12, %13, %14
%16 = block 2
%17:i32 = var
%18 = add %17, -1:i32 (hasExternalUses)
%19 = phi %16, %18, %14
%20 = phi %11, %15, %19
%21 = sub %10, %20
%22 = block 2
%23:i32 = var
%24 = ne %23, 0:i32
blockpc %22 0 %24 1
%25 = eq %23, 0:i32
blockpc %22 1 %25 1
%26:i32 = var
%27 = add %26, -28:i32
%28:i32 = var
%29 = phi %22, %27, %28
%30 = slt 0:i32, %29
blockpc %2 0 %30 1
%31:i32 = var
blockpc %2 1 %31 1
%32:i32 = var
blockpc %11 0 %32 1
%33:i32 = var
blockpc %11 1 %33 1
%34:i32 = var
blockpc %12 0 %34 1
%35:i32 = var
blockpc %12 1 %35 1
%36:i32 = var
blockpc %16 0 %36 1
%37:i32 = var
blockpc %16 1 %37 1
%38:i32 = var
%39:i32 = var
pc %38 1
pc %39 1
infer %21


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 3
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = block 2
%7:i32 = var
blockpc %6 0 %7 1
%8:i32 = var
blockpc %6 1 %8 1
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19:i32 = var
%20 = phi %15, %18, %19
%21 = phi %12, %20, 0:i32
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29:i32 = var
%30 = phi %25, %28, %29
%31 = phi %22, %30, %21
%32 = phi %9, %21, %31
%33 = phi %6, %32, %21
%34 = phi %4, %5, %33
%35:i32 = var
%36 = slt %34, %35
%37:i32 = zext %36
%38:i32 = var
%39 = add %38, 0:i32; Replace bad zext operation
%40 = and %37, %39
%41 = ne %40, 0:i32
blockpc %3 0 %41 1
%42:i32 = var
blockpc %3 1 %42 1
%43:i32 = var
%44:i32 = var
%45 = phi %3, %43, %44
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49:i32 = var
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
%55:i32 = var
%56 = phi %53, %54, %55
%57:i32 = var
%58 = phi %50, %56, %57
%59 = phi %4, %49, %58
%60 = phi %46, %45, %59
%61 = phi %2, %45, %45, %60
%62 = or %61, 32:i32
%63 = eq %62, 102:i32
%64:i32 = var
pc %63 1
pc %64 1
infer %1


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = add %8, 32:i32 (hasExternalUses)
%10 = add %9, 288:i32 (hasExternalUses)
%11 = phi %7, %9, %10
%12 = phi %2, %6, %11
%13 = phi %0, %1, %12
%14:i32 = var
%15 = add %14, 4:i32 (hasExternalUses)
%16 = ult %13, %15
%17 = block 2
%18:i32 = var
%19 = ne %18, 0:i32
blockpc %17 0 %19 1
%20 = eq %18, 0:i32
blockpc %17 1 %20 1
%21:i32 = var
%22 = add %21, -28:i32
%23:i32 = var
%24 = phi %17, %22, %23
%25 = slt 0:i32, %24
blockpc %2 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %2 1 %27 1
%28:i32 = var
blockpc %7 0 %28 1
%29:i32 = var
blockpc %7 1 %29 1
%30:i32 = var
%31:i32 = var
pc %30 1
pc %31 1
infer %16


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = and %9, 8:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22 = block 3
%23 = block 2
%24:i32 = var
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37:i32 = var
%38:i32 = var
%39 = phi %34, %37, %38
%40 = phi %31, %39, 0:i32
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47:i32 = var
%48:i32 = var
%49 = phi %44, %47, %48
%50 = phi %41, %49, %40
%51 = phi %28, %40, %50
%52 = phi %25, %51, %40
%53 = phi %0, %24, %52
%54:i32 = var
%55 = slt %53, %54
%56:i32 = zext %55
%57:i32 = var
%58 = add %57, 0:i32; Replace bad zext operation
%59 = and %56, %58
%60 = ne %59, 0:i32
blockpc %23 0 %60 1
%61:i32 = var
blockpc %23 1 %61 1
%62:i32 = var
%63:i32 = var
%64 = phi %23, %62, %63
%65 = block 2
%66:i32 = var
blockpc %65 0 %66 1
%67:i32 = var
blockpc %65 1 %67 1
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %3, %69, %70
%72:i32 = var
%73 = phi %2, %71, %72
%74 = phi %0, %68, %73
%75 = phi %65, %64, %74
%76 = phi %22, %64, %64, %75
%77 = or %76, 32:i32
%78 = eq %77, 102:i32
%79:i32 = var
pc %78 1
pc %79 1
infer %10


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = and %9, 8:i32
%11 = eq %10, 0:i32
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
blockpc %2 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %2 1 %22 1
%23 = block 3
%24 = block 2
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38:i32 = var
%39:i32 = var
%40 = phi %35, %38, %39
%41 = phi %32, %40, 0:i32
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48:i32 = var
%49:i32 = var
%50 = phi %45, %48, %49
%51 = phi %42, %50, %41
%52 = phi %29, %41, %51
%53 = phi %26, %52, %41
%54 = phi %0, %25, %53
%55:i32 = var
%56 = slt %54, %55
%57:i32 = zext %56
%58:i32 = var
%59 = add %58, 0:i32; Replace bad zext operation
%60 = and %57, %59
%61 = ne %60, 0:i32
blockpc %24 0 %61 1
%62:i32 = var
blockpc %24 1 %62 1
%63:i32 = var
%64:i32 = var
%65 = phi %24, %63, %64
%66 = block 2
%67:i32 = var
blockpc %66 0 %67 1
%68:i32 = var
blockpc %66 1 %68 1
%69:i32 = var
%70:i32 = var
%71:i32 = var
%72 = phi %3, %70, %71
%73:i32 = var
%74 = phi %2, %72, %73
%75 = phi %0, %69, %74
%76 = phi %66, %65, %75
%77 = phi %23, %65, %65, %76
%78 = or %77, 32:i32
%79 = eq %78, 102:i32
%80:i32 = var
pc %79 1
pc %80 1
infer %11


; start LHS (in $11)
%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11:i32 = var
%12 = phi %10, 6:i32, %11
%13 = phi %5, %9, %12
%14 = phi %3, %4, %13
%15:i32 = var
%16 = add %14, %15 (hasExternalUses)
%17 = add %16, -1:i32
%18:i32 = var
%19 = block 2
%20 = block 2
%21 = block 2
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %24
%26 = phi %21, %25, 0:i32
%27 = block 2
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %30
%32 = phi %27, %31, %26
%33 = phi %20, %26, %32
%34 = phi %19, %33, %26
%35 = phi %3, %18, %34
%36 = sub %17, %35 (hasExternalUses)
%37:i32 = var
%38 = phi %2, %36, %37
%39 = block 2
%40:i32 = var
%41 = phi %39, %40, 0:i32
%42 = phi %1, %38, %41
%43 = block 2
%44 = block 2
%45:i32 = var
%46 = phi %44, %45, 0:i32
%47 = phi %43, %38, %46
%48 = block 2
%49 = phi %48, %38, %14
%50 = phi %0, %42, %47, %49
%51 = ne %50, 0:i32 (hasExternalUses)
%52:i32 = zext %51
%53 = xor %52, 1:i32
%54:i32 = var
blockpc %1 0 %54 1
%55:i32 = var
blockpc %1 1 %55 1
%56:i32 = var
blockpc %2 0 %56 1
%57:i32 = var
blockpc %2 1 %57 1
%58:i32 = var
blockpc %5 0 %58 1
%59:i32 = var
blockpc %5 1 %59 1
%60:i32 = var
blockpc %10 0 %60 1
%61:i32 = var
blockpc %10 1 %61 1
%62:i32 = var
blockpc %19 0 %62 1
%63:i32 = var
blockpc %19 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %21 0 %66 1
%67:i32 = var
blockpc %21 1 %67 1
%68:i32 = var
blockpc %22 0 %68 1
%69:i32 = var
blockpc %22 1 %69 1
%70:i32 = var
blockpc %27 0 %70 1
%71:i32 = var
blockpc %27 1 %71 1
%72:i32 = var
blockpc %28 0 %72 1
%73:i32 = var
blockpc %28 1 %73 1
%74:i32 = var
blockpc %39 0 %74 1
%75:i32 = var
blockpc %39 1 %75 1
%76:i32 = var
blockpc %43 0 %76 1
%77:i32 = var
blockpc %43 1 %77 1
%78:i32 = var
blockpc %44 0 %78 1
%79:i32 = var
blockpc %44 1 %79 1
%80:i32 = var
blockpc %48 0 %80 1
%81:i32 = var
blockpc %48 1 %81 1
%82:i32 = var
%83:i32 = var
pc %82 1
pc %83 1
infer %53


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = and %9, 8:i32
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = block 3
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = add %16, -1:i32
%18:i32 = var
%19 = block 2
%20 = block 2
%21 = block 2
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %24
%26 = phi %21, %25, 0:i32
%27 = block 2
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %30
%32 = phi %27, %31, %26
%33 = phi %20, %26, %32
%34 = phi %19, %33, %26
%35 = phi %0, %18, %34
%36 = sub %17, %35 (hasExternalUses)
%37:i32 = var
%38 = phi %15, %36, %37
%39 = block 2
%40:i32 = var
%41 = phi %39, %40, 0:i32
%42 = phi %14, %38, %41
%43 = block 2
%44 = block 2
%45:i32 = var
%46 = phi %44, %45, 0:i32
%47 = phi %43, %38, %46
%48 = block 2
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52 = phi %3, %50, %51
%53 = block 2
%54:i32 = var
%55 = phi %53, 6:i32, %54
%56 = phi %2, %52, %55
%57 = phi %0, %49, %56
%58 = phi %48, %38, %57
%59 = phi %13, %42, %47, %58
%60 = ne %59, 0:i32 (hasExternalUses)
%61:i32 = zext %60
%62 = xor %61, 1:i32
%63 = and %12, %62
%64:i32 = var
blockpc %2 0 %64 1
%65:i32 = var
blockpc %2 1 %65 1
%66:i32 = var
blockpc %14 0 %66 1
%67:i32 = var
blockpc %14 1 %67 1
%68:i32 = var
blockpc %15 0 %68 1
%69:i32 = var
blockpc %15 1 %69 1
%70:i32 = var
blockpc %19 0 %70 1
%71:i32 = var
blockpc %19 1 %71 1
%72:i32 = var
blockpc %20 0 %72 1
%73:i32 = var
blockpc %20 1 %73 1
%74:i32 = var
blockpc %21 0 %74 1
%75:i32 = var
blockpc %21 1 %75 1
%76:i32 = var
blockpc %22 0 %76 1
%77:i32 = var
blockpc %22 1 %77 1
%78:i32 = var
blockpc %27 0 %78 1
%79:i32 = var
blockpc %27 1 %79 1
%80:i32 = var
blockpc %28 0 %80 1
%81:i32 = var
blockpc %28 1 %81 1
%82:i32 = var
blockpc %39 0 %82 1
%83:i32 = var
blockpc %39 1 %83 1
%84:i32 = var
blockpc %43 0 %84 1
%85:i32 = var
blockpc %43 1 %85 1
%86:i32 = var
blockpc %44 0 %86 1
%87:i32 = var
blockpc %44 1 %87 1
%88:i32 = var
blockpc %48 0 %88 1
%89:i32 = var
blockpc %48 1 %89 1
%90:i32 = var
blockpc %53 0 %90 1
%91:i32 = var
blockpc %53 1 %91 1
%92:i32 = var
%93:i32 = var
pc %92 1
pc %93 1
infer %63


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = and %9, 8:i32
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = block 3
%14 = block 2
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = block 2
%19 = block 2
%20 = block 2
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = phi %20, %24, 0:i32
%26 = block 2
%27 = block 2
%28:i32 = var
%29:i32 = var
%30 = phi %27, %28, %29
%31 = phi %26, %30, %25
%32 = phi %19, %25, %31
%33 = phi %18, %32, %25
%34 = phi %0, %17, %33
%35 = sub %16, %34 (hasExternalUses)
%36:i32 = var
%37 = phi %15, %35, %36
%38 = block 2
%39:i32 = var
%40 = phi %38, %39, 0:i32
%41 = phi %14, %37, %40
%42 = block 2
%43 = block 2
%44:i32 = var
%45 = phi %43, %44, 0:i32
%46 = phi %42, %37, %45
%47 = block 2
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51 = phi %3, %49, %50
%52 = block 2
%53:i32 = var
%54 = phi %52, 6:i32, %53
%55 = phi %2, %51, %54
%56 = phi %0, %48, %55
%57 = phi %47, %37, %56
%58 = phi %13, %41, %46, %57
%59 = ne %58, 0:i32 (hasExternalUses)
%60:i32 = zext %59
%61 = xor %60, 1:i32
%62 = and %12, %61
%63 = eq %62, 0:i32
%64:i32 = var
blockpc %2 0 %64 1
%65:i32 = var
blockpc %2 1 %65 1
%66:i32 = var
blockpc %14 0 %66 1
%67:i32 = var
blockpc %14 1 %67 1
%68:i32 = var
blockpc %15 0 %68 1
%69:i32 = var
blockpc %15 1 %69 1
%70:i32 = var
blockpc %18 0 %70 1
%71:i32 = var
blockpc %18 1 %71 1
%72:i32 = var
blockpc %19 0 %72 1
%73:i32 = var
blockpc %19 1 %73 1
%74:i32 = var
blockpc %20 0 %74 1
%75:i32 = var
blockpc %20 1 %75 1
%76:i32 = var
blockpc %21 0 %76 1
%77:i32 = var
blockpc %21 1 %77 1
%78:i32 = var
blockpc %26 0 %78 1
%79:i32 = var
blockpc %26 1 %79 1
%80:i32 = var
blockpc %27 0 %80 1
%81:i32 = var
blockpc %27 1 %81 1
%82:i32 = var
blockpc %38 0 %82 1
%83:i32 = var
blockpc %38 1 %83 1
%84:i32 = var
blockpc %42 0 %84 1
%85:i32 = var
blockpc %42 1 %85 1
%86:i32 = var
blockpc %43 0 %86 1
%87:i32 = var
blockpc %43 1 %87 1
%88:i32 = var
blockpc %47 0 %88 1
%89:i32 = var
blockpc %47 1 %89 1
%90:i32 = var
blockpc %52 0 %90 1
%91:i32 = var
blockpc %52 1 %91 1
%92:i32 = var
%93:i32 = var
pc %92 1
pc %93 1
infer %63


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32 (hasExternalUses)
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = add %3, -4:i32 (hasExternalUses)
%6 = block 2
%7 = block 2
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14 = block 2
%15:i32 = var
%16:i32 = var
%17 = phi %14, %15, %16
%18 = phi %9, %13, %17
%19 = add %18, 4:i32
%20:i32 = var
%21 = shl %20, 2:i32
%22 = add %19, %21 (hasExternalUses)
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, %22
%27 = phi %23, %26, %22
%28 = phi %8, %22, %27
%29 = add %28, 4:i32 (hasExternalUses)
%30 = block 2
%31 = block 2
%32:i32 = var
%33 = block 2
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %36
%38 = phi %33, %37, %35
%39 = phi %31, %32, %38
%40:i32 = var
%41 = block 2
%42:i32 = var
%43:i32 = var
%44 = phi %41, %42, %43
%45 = phi %10, %40, %44
%46:i32 = var
%47 = phi %9, %45, %46
%48 = phi %30, %39, %47
%49 = phi %7, %29, %48
%50 = phi %6, %49, %48
%51 = phi %4, %5, %50
%52 = phi %2, %3, %51
%53 = ult %1, %52
%54:i32 = var
blockpc %4 0 %54 1
%55:i32 = var
blockpc %4 1 %55 1
%56:i32 = var
blockpc %6 0 %56 1
%57:i32 = var
blockpc %6 1 %57 1
%58:i32 = var
blockpc %7 0 %58 1
%59:i32 = var
blockpc %7 1 %59 1
%60:i32 = var
blockpc %8 0 %60 1
%61:i32 = var
blockpc %8 1 %61 1
%62:i32 = var
blockpc %9 0 %62 1
%63:i32 = var
blockpc %9 1 %63 1
%64:i32 = var
blockpc %14 0 %64 1
%65:i32 = var
blockpc %14 1 %65 1
%66:i32 = var
blockpc %23 0 %66 1
%67:i32 = var
blockpc %23 1 %67 1
%68:i32 = var
blockpc %24 0 %68 1
%69:i32 = var
blockpc %24 1 %69 1
%70:i32 = var
blockpc %30 0 %70 1
%71:i32 = var
blockpc %30 1 %71 1
%72:i32 = var
blockpc %31 0 %72 1
%73:i32 = var
blockpc %31 1 %73 1
%74:i32 = var
blockpc %33 0 %74 1
%75:i32 = var
blockpc %33 1 %75 1
%76:i32 = var
blockpc %34 0 %76 1
%77:i32 = var
blockpc %34 1 %77 1
%78:i32 = var
blockpc %41 0 %78 1
%79:i32 = var
blockpc %41 1 %79 1
%80:i32 = var
%81:i32 = var
pc %80 1
pc %81 1
infer %53


; start LHS (in $11)
%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11:i32 = var
%12 = phi %10, 6:i32, %11
%13 = phi %5, %9, %12
%14 = phi %3, %4, %13
%15:i32 = var
%16:i32 = var
%17 = add %16, 0:i32; Replace bad zext operation
%18 = phi %3, %15, %17
%19 = xor %18, 1:i32
%20 = and %19, 1:i32
%21 = add %14, %20 (hasExternalUses)
%22 = add %21, -1:i32
%23:i32 = var
%24 = block 2
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29:i32 = var
%30 = phi %27, %28, %29
%31 = phi %26, %30, 0:i32
%32 = block 2
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %35
%37 = phi %32, %36, %31
%38 = phi %25, %31, %37
%39 = phi %24, %38, %31
%40 = phi %3, %23, %39
%41 = sub %22, %40 (hasExternalUses)
%42:i32 = var
%43 = phi %2, %41, %42
%44 = block 2
%45:i32 = var
%46 = phi %44, %45, 0:i32
%47 = phi %1, %43, %46
%48 = block 2
%49 = block 2
%50:i32 = var
%51 = phi %49, %50, 0:i32
%52 = phi %48, %43, %51
%53 = block 2
%54 = phi %53, %43, %14
%55 = phi %0, %47, %52, %54
%56 = slt 0:i32, %55
%57:i32 = var
blockpc %1 0 %57 1
%58:i32 = var
blockpc %1 1 %58 1
%59:i32 = var
blockpc %2 0 %59 1
%60:i32 = var
blockpc %2 1 %60 1
%61:i32 = var
blockpc %5 0 %61 1
%62:i32 = var
blockpc %5 1 %62 1
%63:i32 = var
blockpc %10 0 %63 1
%64:i32 = var
blockpc %10 1 %64 1
%65:i32 = var
blockpc %24 0 %65 1
%66:i32 = var
blockpc %24 1 %66 1
%67:i32 = var
blockpc %25 0 %67 1
%68:i32 = var
blockpc %25 1 %68 1
%69:i32 = var
blockpc %26 0 %69 1
%70:i32 = var
blockpc %26 1 %70 1
%71:i32 = var
blockpc %27 0 %71 1
%72:i32 = var
blockpc %27 1 %72 1
%73:i32 = var
blockpc %32 0 %73 1
%74:i32 = var
blockpc %32 1 %74 1
%75:i32 = var
blockpc %33 0 %75 1
%76:i32 = var
blockpc %33 1 %76 1
%77:i32 = var
blockpc %44 0 %77 1
%78:i32 = var
blockpc %44 1 %78 1
%79:i32 = var
blockpc %48 0 %79 1
%80:i32 = var
blockpc %48 1 %80 1
%81:i32 = var
blockpc %49 0 %81 1
%82:i32 = var
blockpc %49 1 %82 1
%83:i32 = var
blockpc %53 0 %83 1
%84:i32 = var
blockpc %53 1 %84 1
%85:i32 = var
%86:i32 = var
pc %85 1
pc %86 1
infer %56


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32 (hasExternalUses)
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = add %3, -4:i32 (hasExternalUses)
%6 = block 2
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, %12, %9
%14 = phi %10, %13, %9
%15 = phi %8, %9, %14
%16 = add %15, 4:i32 (hasExternalUses)
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = phi %20, %24, %22
%26 = phi %18, %19, %25
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = block 2
%31:i32 = var
%32:i32 = var
%33 = phi %30, %31, %32
%34 = phi %28, %29, %33
%35:i32 = var
%36 = phi %27, %34, %35
%37 = phi %17, %26, %36
%38 = phi %7, %16, %37
%39 = phi %6, %38, %37
%40 = phi %4, %5, %39
%41 = phi %2, %3, %40
%42 = ult %1, %41
%43:i32 = zext %42
%44:i32 = var
%45 = add %44, 0:i32; Replace bad zext operation
%46 = and %43, %45
%47:i32 = var
blockpc %4 0 %47 1
%48:i32 = var
blockpc %4 1 %48 1
%49:i32 = var
blockpc %6 0 %49 1
%50:i32 = var
blockpc %6 1 %50 1
%51:i32 = var
blockpc %7 0 %51 1
%52:i32 = var
blockpc %7 1 %52 1
%53:i32 = var
blockpc %8 0 %53 1
%54:i32 = var
blockpc %8 1 %54 1
%55:i32 = var
blockpc %10 0 %55 1
%56:i32 = var
blockpc %10 1 %56 1
%57:i32 = var
blockpc %11 0 %57 1
%58:i32 = var
blockpc %11 1 %58 1
%59:i32 = var
blockpc %17 0 %59 1
%60:i32 = var
blockpc %17 1 %60 1
%61:i32 = var
blockpc %18 0 %61 1
%62:i32 = var
blockpc %18 1 %62 1
%63:i32 = var
blockpc %20 0 %63 1
%64:i32 = var
blockpc %20 1 %64 1
%65:i32 = var
blockpc %21 0 %65 1
%66:i32 = var
blockpc %21 1 %66 1
%67:i32 = var
blockpc %27 0 %67 1
%68:i32 = var
blockpc %27 1 %68 1
%69:i32 = var
blockpc %30 0 %69 1
%70:i32 = var
blockpc %30 1 %70 1
%71:i32 = var
%72:i32 = var
pc %71 1
pc %72 1
infer %46


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10:i32 = var
%11 = ult %9, %10
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
blockpc %2 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %2 1 %22 1
%23:i32 = var
%24 = add %23, 4:i32
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36:i32 = var
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50:i32 = var
%51:i32 = var
%52 = phi %47, %50, %51
%53 = phi %44, %52, %50
%54 = phi %40, %43, %53
%55:i32 = var
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60:i32 = var
%61 = phi %56, %59, %60
%62 = phi %3, %55, %61
%63:i32 = var
%64 = phi %2, %62, %63
%65 = phi %37, %54, %64
%66 = phi %33, %36, %65
%67 = phi %30, %66, %65
%68 = phi %26, %29, %67
%69 = phi %0, %25, %68
%70 = ult %24, %69
%71:i32 = zext %70
%72:i32 = var
%73 = add %72, 0:i32; Replace bad zext operation
%74 = and %71, %73
%75 = ne %74, 0:i32
%76:i32 = var
%77:i32 = var
pc %75 1
pc %76 1
pc %77 1
infer %11


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = sub %0, %10
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
blockpc %3 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %3 1 %22 1
%23:i32 = var
%24:i32 = var
%25:i32 = var
%26 = phi %4, %24, %25
%27 = phi %3, %26, %8
%28 = phi %1, %23, %27
%29 = ult %28, %0
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %11


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -1:i32
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = ne %6, 0:i32
blockpc %5 0 %7 1
%8 = eq %6, 0:i32
blockpc %5 1 %8 1
%9:i32 = var
%10 = add %9, -28:i32
%11:i32 = var
%12 = phi %5, %10, %11
%13 = slt 0:i32, %12
blockpc %4 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %4 1 %15 1
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20:i32 = var
%21 = phi %4, %19, %20
%22 = phi %2, %3, %21
%23:i32 = var
%24 = ult %22, %23
%25:i32 = var
%26 = add %25, 4:i32
%27:i32 = var
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38:i32 = var
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45:i32 = var
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52:i32 = var
%53:i32 = var
%54 = phi %49, %52, %53
%55 = phi %46, %54, %52
%56 = phi %42, %45, %55
%57:i32 = var
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %58, %61, %62
%64 = phi %16, %57, %63
%65:i32 = var
%66 = phi %4, %64, %65
%67 = phi %39, %56, %66
%68 = phi %35, %38, %67
%69 = phi %32, %68, %67
%70 = phi %28, %31, %69
%71 = phi %2, %27, %70
%72 = ult %26, %71
%73:i32 = zext %72
%74:i32 = var
%75 = add %74, 0:i32; Replace bad zext operation
%76 = and %73, %75
%77 = ne %76, 0:i32
%78:i32 = var
%79:i32 = var
pc %24 1
pc %77 1
pc %78 1
pc %79 1
infer %1


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10:i32 = var
%11 = add %10, -1:i32 (hasExternalUses)
%12 = ult %9, %11
%13 = block 2
%14:i32 = var
%15 = ne %14, 0:i32
blockpc %13 0 %15 1
%16 = eq %14, 0:i32
blockpc %13 1 %16 1
%17:i32 = var
%18 = add %17, -28:i32
%19:i32 = var
%20 = phi %13, %18, %19
%21 = slt 0:i32, %20
blockpc %2 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %2 1 %23 1
%24:i32 = var
%25 = ult %9, %24
%26:i32 = var
%27:i32 = var
%28:i32 = var
pc %25 1
pc %26 1
pc %27 1
pc %28 1
infer %12


; start LHS (in $11)
%0:i32 = var
%1 = slt %0, 9:i32
%2:i32 = var
%3 = add %2, 4:i32
%4 = block 2
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22:i32 = var
%23:i32 = var
%24 = phi %19, %22, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29 = phi %25, %28, %23
%30 = phi %16, %24, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44 = phi %40, %39, %43
%45 = phi %36, %39, %44
%46 = phi %34, %35, %45
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50:i32 = var
%51:i32 = var
%52 = phi %47, %50, %51
%53 = phi %31, %46, %52
%54 = phi %13, %30, %53
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61 = block 2
%62:i32 = var
blockpc %61 0 %62 1
%63:i32 = var
blockpc %61 1 %63 1
%64:i32 = var
%65:i32 = var
%66 = phi %61, %64, %65
%67 = phi %58, %66, %54
%68 = phi %55, %67, %54
%69 = phi %10, %54, %68
%70 = phi %7, %69, %54
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74:i32 = var
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78:i32 = var
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82:i32 = var
%83:i32 = var
%84 = phi %79, %82, %83
%85 = phi %16, %84, %82
%86 = phi %75, %78, %85
%87:i32 = var
%88 = block 2
%89:i32 = var
blockpc %88 0 %89 1
%90:i32 = var
blockpc %88 1 %90 1
%91:i32 = var
%92:i32 = var
%93 = phi %88, %91, %92
%94 = phi %34, %87, %93
%95:i32 = var
%96 = phi %31, %94, %95
%97 = phi %13, %86, %96
%98 = phi %71, %74, %97
%99 = phi %7, %98, %97
%100 = ult %70, %99
blockpc %6 0 %100 1
%101:i32 = var
blockpc %6 1 %101 1
%102:i32 = var
%103 = phi %6, %102, %99
%104 = phi %4, %5, %103
%105 = ult %3, %104
%106:i32 = zext %105
%107:i32 = var
%108 = add %107, 0:i32; Replace bad zext operation
%109 = and %106, %108
%110 = ne %109, 0:i32
%111:i32 = var
%112:i32 = var
pc %110 1
pc %111 1
pc %112 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = add %2, 4:i32
%4 = block 2
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22:i32 = var
%23:i32 = var
%24 = phi %19, %22, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29 = phi %25, %28, %23
%30 = phi %16, %24, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44 = phi %40, %39, %43
%45 = phi %36, %39, %44
%46 = phi %34, %35, %45
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50:i32 = var
%51:i32 = var
%52 = phi %47, %50, %51
%53 = phi %31, %46, %52
%54 = phi %13, %30, %53
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61 = block 2
%62:i32 = var
blockpc %61 0 %62 1
%63:i32 = var
blockpc %61 1 %63 1
%64:i32 = var
%65:i32 = var
%66 = phi %61, %64, %65
%67 = phi %58, %66, %54
%68 = phi %55, %67, %54
%69 = phi %10, %54, %68
%70 = phi %7, %69, %54
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74:i32 = var
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78:i32 = var
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82:i32 = var
%83:i32 = var
%84 = phi %79, %82, %83
%85 = phi %16, %84, %82
%86 = phi %75, %78, %85
%87:i32 = var
%88 = block 2
%89:i32 = var
blockpc %88 0 %89 1
%90:i32 = var
blockpc %88 1 %90 1
%91:i32 = var
%92:i32 = var
%93 = phi %88, %91, %92
%94 = phi %34, %87, %93
%95:i32 = var
%96 = phi %31, %94, %95
%97 = phi %13, %86, %96
%98 = phi %71, %74, %97
%99 = phi %7, %98, %97
%100 = ult %70, %99
blockpc %6 0 %100 1
%101:i32 = var
blockpc %6 1 %101 1
%102:i32 = var
%103 = phi %6, %102, %99
%104 = phi %4, %5, %103
%105 = ult %3, %104
%106:i32 = zext %105
%107:i32 = var
%108 = add %107, 0:i32; Replace bad zext operation
%109 = and %106, %108
%110 = ne %109, 0:i32
%111:i32 = var
%112:i32 = var
pc %110 1
pc %111 1
pc %112 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -9:i32
%2:i32 = var
%3 = add %2, 4:i32
%4 = block 2
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22:i32 = var
%23:i32 = var
%24 = phi %19, %22, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29 = phi %25, %28, %23
%30 = phi %16, %24, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44 = phi %40, %39, %43
%45 = phi %36, %39, %44
%46 = phi %34, %35, %45
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50:i32 = var
%51:i32 = var
%52 = phi %47, %50, %51
%53 = phi %31, %46, %52
%54 = phi %13, %30, %53
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61 = block 2
%62:i32 = var
blockpc %61 0 %62 1
%63:i32 = var
blockpc %61 1 %63 1
%64:i32 = var
%65:i32 = var
%66 = phi %61, %64, %65
%67 = phi %58, %66, %54
%68 = phi %55, %67, %54
%69 = phi %10, %54, %68
%70 = phi %7, %69, %54
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74:i32 = var
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78:i32 = var
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82:i32 = var
%83:i32 = var
%84 = phi %79, %82, %83
%85 = phi %16, %84, %82
%86 = phi %75, %78, %85
%87:i32 = var
%88 = block 2
%89:i32 = var
blockpc %88 0 %89 1
%90:i32 = var
blockpc %88 1 %90 1
%91:i32 = var
%92:i32 = var
%93 = phi %88, %91, %92
%94 = phi %34, %87, %93
%95:i32 = var
%96 = phi %31, %94, %95
%97 = phi %13, %86, %96
%98 = phi %71, %74, %97
%99 = phi %7, %98, %97
%100 = ult %70, %99
blockpc %6 0 %100 1
%101:i32 = var
blockpc %6 1 %101 1
%102:i32 = var
%103 = phi %6, %102, %99
%104 = phi %4, %5, %103
%105 = ult %3, %104
%106:i32 = zext %105
%107:i32 = var
%108 = add %107, 0:i32; Replace bad zext operation
%109 = and %106, %108
%110 = ne %109, 0:i32
%111:i32 = var
%112:i32 = var
pc %110 1
pc %111 1
pc %112 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32 (hasExternalUses)
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = add %3, -4:i32 (hasExternalUses)
%6 = block 2
%7 = block 2
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14 = block 2
%15:i32 = var
%16:i32 = var
%17 = phi %14, %15, %16
%18 = phi %9, %13, %17
%19 = add %18, 4:i32
%20:i32 = var
%21 = shl %20, 2:i32
%22 = add %19, %21 (hasExternalUses)
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, %22
%27 = phi %23, %26, %22
%28 = phi %8, %22, %27
%29 = add %28, 4:i32 (hasExternalUses)
%30 = block 2
%31 = block 2
%32:i32 = var
%33 = block 2
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %36
%38 = phi %33, %37, %35
%39 = phi %31, %32, %38
%40:i32 = var
%41 = block 2
%42:i32 = var
%43:i32 = var
%44 = phi %41, %42, %43
%45 = phi %10, %40, %44
%46:i32 = var
%47 = phi %9, %45, %46
%48 = phi %30, %39, %47
%49 = phi %7, %29, %48
%50 = phi %6, %49, %48
%51 = phi %4, %5, %50
%52 = phi %2, %3, %51
%53 = ult %1, %52
%54:i32 = var
blockpc %4 0 %54 1
%55:i32 = var
blockpc %4 1 %55 1
%56:i32 = var
blockpc %6 0 %56 1
%57:i32 = var
blockpc %6 1 %57 1
%58:i32 = var
blockpc %7 0 %58 1
%59:i32 = var
blockpc %7 1 %59 1
%60:i32 = var
blockpc %8 0 %60 1
%61:i32 = var
blockpc %8 1 %61 1
%62:i32 = var
blockpc %9 0 %62 1
%63:i32 = var
blockpc %9 1 %63 1
%64:i32 = var
blockpc %14 0 %64 1
%65:i32 = var
blockpc %14 1 %65 1
%66:i32 = var
blockpc %23 0 %66 1
%67:i32 = var
blockpc %23 1 %67 1
%68:i32 = var
blockpc %24 0 %68 1
%69:i32 = var
blockpc %24 1 %69 1
%70:i32 = var
blockpc %30 0 %70 1
%71:i32 = var
blockpc %30 1 %71 1
%72:i32 = var
blockpc %31 0 %72 1
%73:i32 = var
blockpc %31 1 %73 1
%74:i32 = var
blockpc %33 0 %74 1
%75:i32 = var
blockpc %33 1 %75 1
%76:i32 = var
blockpc %34 0 %76 1
%77:i32 = var
blockpc %34 1 %77 1
%78:i32 = var
blockpc %41 0 %78 1
%79:i32 = var
blockpc %41 1 %79 1
%80:i32 = var
%81:i32 = var
%82:i32 = var
pc %80 1
pc %81 1
pc %82 1
infer %53


; start LHS (in $11)
%0:i32 = var
%1 = slt 9:i32, %0
%2:i32 = var
%3 = add %2, 4:i32
%4 = block 2
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22:i32 = var
%23:i32 = var
%24 = phi %19, %22, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29 = phi %25, %28, %23
%30 = phi %16, %24, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44 = phi %40, %39, %43
%45 = phi %36, %39, %44
%46 = phi %34, %35, %45
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50:i32 = var
%51:i32 = var
%52 = phi %47, %50, %51
%53 = phi %31, %46, %52
%54 = phi %13, %30, %53
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61 = block 2
%62:i32 = var
blockpc %61 0 %62 1
%63:i32 = var
blockpc %61 1 %63 1
%64:i32 = var
%65:i32 = var
%66 = phi %61, %64, %65
%67 = phi %58, %66, %54
%68 = phi %55, %67, %54
%69 = phi %10, %54, %68
%70 = phi %7, %69, %54
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74:i32 = var
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78:i32 = var
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82:i32 = var
%83:i32 = var
%84 = phi %79, %82, %83
%85 = phi %16, %84, %82
%86 = phi %75, %78, %85
%87:i32 = var
%88 = block 2
%89:i32 = var
blockpc %88 0 %89 1
%90:i32 = var
blockpc %88 1 %90 1
%91:i32 = var
%92:i32 = var
%93 = phi %88, %91, %92
%94 = phi %34, %87, %93
%95:i32 = var
%96 = phi %31, %94, %95
%97 = phi %13, %86, %96
%98 = phi %71, %74, %97
%99 = phi %7, %98, %97
%100 = ult %70, %99
blockpc %6 0 %100 1
%101:i32 = var
blockpc %6 1 %101 1
%102:i32 = var
%103 = phi %6, %102, %99
%104 = phi %4, %5, %103
%105 = ult %3, %104
%106:i32 = zext %105
%107:i32 = var
%108 = add %107, 0:i32; Replace bad zext operation
%109 = and %106, %108
%110 = ne %109, 0:i32
%111:i32 = var
%112:i32 = var
pc %110 1
pc %111 1
pc %112 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32 (hasExternalUses)
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = add %3, -4:i32 (hasExternalUses)
%6 = block 2
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, %12, %9
%14 = phi %10, %13, %9
%15 = phi %8, %9, %14
%16 = add %15, 4:i32 (hasExternalUses)
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = phi %20, %24, %22
%26 = phi %18, %19, %25
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = block 2
%31:i32 = var
%32:i32 = var
%33 = phi %30, %31, %32
%34 = phi %28, %29, %33
%35:i32 = var
%36 = phi %27, %34, %35
%37 = phi %17, %26, %36
%38 = phi %7, %16, %37
%39 = phi %6, %38, %37
%40 = phi %4, %5, %39
%41 = phi %2, %3, %40
%42 = ult %1, %41
%43:i32 = zext %42
%44:i32 = var
%45 = add %44, 0:i32; Replace bad zext operation
%46 = and %43, %45
%47:i32 = var
blockpc %4 0 %47 1
%48:i32 = var
blockpc %4 1 %48 1
%49:i32 = var
blockpc %6 0 %49 1
%50:i32 = var
blockpc %6 1 %50 1
%51:i32 = var
blockpc %7 0 %51 1
%52:i32 = var
blockpc %7 1 %52 1
%53:i32 = var
blockpc %8 0 %53 1
%54:i32 = var
blockpc %8 1 %54 1
%55:i32 = var
blockpc %10 0 %55 1
%56:i32 = var
blockpc %10 1 %56 1
%57:i32 = var
blockpc %11 0 %57 1
%58:i32 = var
blockpc %11 1 %58 1
%59:i32 = var
blockpc %17 0 %59 1
%60:i32 = var
blockpc %17 1 %60 1
%61:i32 = var
blockpc %18 0 %61 1
%62:i32 = var
blockpc %18 1 %62 1
%63:i32 = var
blockpc %20 0 %63 1
%64:i32 = var
blockpc %20 1 %64 1
%65:i32 = var
blockpc %21 0 %65 1
%66:i32 = var
blockpc %21 1 %66 1
%67:i32 = var
blockpc %27 0 %67 1
%68:i32 = var
blockpc %27 1 %68 1
%69:i32 = var
blockpc %30 0 %69 1
%70:i32 = var
blockpc %30 1 %70 1
%71:i32 = var
%72:i32 = var
%73:i32 = var
pc %71 1
pc %72 1
pc %73 1
infer %46


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = add %1, -9:i32 (hasExternalUses)
%3 = block 3
%4 = block 2
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = block 2
%14:i32 = var
%15 = phi %13, 6:i32, %14
%16 = phi %8, %12, %15
%17 = phi %6, %7, %16
%18:i32 = var
%19 = and %18, 1:i32
%20 = add %17, %19 (hasExternalUses)
%21 = add %20, -1:i32
%22:i32 = var
%23 = block 2
%24 = block 2
%25 = block 2
%26 = block 2
%27:i32 = var
%28:i32 = var
%29 = phi %26, %27, %28
%30 = phi %25, %29, 0:i32
%31 = block 2
%32 = block 2
%33:i32 = var
%34:i32 = var
%35 = phi %32, %33, %34
%36 = phi %31, %35, %30
%37 = phi %24, %30, %36
%38 = phi %23, %37, %30
%39 = phi %6, %22, %38
%40 = sub %21, %39 (hasExternalUses)
%41:i32 = var
%42 = phi %5, %40, %41
%43 = block 2
%44:i32 = var
%45 = phi %43, %44, 0:i32
%46 = phi %4, %42, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %49, 0:i32
%51 = phi %47, %42, %50
%52 = block 2
%53 = phi %52, %42, %17
%54 = phi %3, %46, %51, %53
%55 = phi %0, %2, %54
%56 = add %55, 9:i32
%57:i32 = var
blockpc %0 0 %57 1
%58:i32 = var
blockpc %0 1 %58 1
%59:i32 = var
blockpc %4 0 %59 1
%60:i32 = var
blockpc %4 1 %60 1
%61:i32 = var
blockpc %5 0 %61 1
%62:i32 = var
blockpc %5 1 %62 1
%63:i32 = var
blockpc %8 0 %63 1
%64:i32 = var
blockpc %8 1 %64 1
%65:i32 = var
blockpc %13 0 %65 1
%66:i32 = var
blockpc %13 1 %66 1
%67:i32 = var
blockpc %23 0 %67 1
%68:i32 = var
blockpc %23 1 %68 1
%69:i32 = var
blockpc %24 0 %69 1
%70:i32 = var
blockpc %24 1 %70 1
%71:i32 = var
blockpc %25 0 %71 1
%72:i32 = var
blockpc %25 1 %72 1
%73:i32 = var
blockpc %26 0 %73 1
%74:i32 = var
blockpc %26 1 %74 1
%75:i32 = var
blockpc %31 0 %75 1
%76:i32 = var
blockpc %31 1 %76 1
%77:i32 = var
blockpc %32 0 %77 1
%78:i32 = var
blockpc %32 1 %78 1
%79:i32 = var
blockpc %43 0 %79 1
%80:i32 = var
blockpc %43 1 %80 1
%81:i32 = var
blockpc %47 0 %81 1
%82:i32 = var
blockpc %47 1 %82 1
%83:i32 = var
blockpc %48 0 %83 1
%84:i32 = var
blockpc %48 1 %84 1
%85:i32 = var
blockpc %52 0 %85 1
%86:i32 = var
blockpc %52 1 %86 1
%87:i32 = var
%88:i32 = var
pc %87 1
pc %88 1
infer %56


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = add %7, 4:i32 (hasExternalUses)
%9 = phi %6, %8, %7
%10 = block 2
%11 = add %7, 4:i32 (hasExternalUses)
%12 = phi %10, %11, %7
%13 = phi %5, %9, %12
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = block 2
%18:i32 = var
%19 = block 2
%20:i32 = var
%21 = phi %19, %18, %20
%22 = phi %17, %18, %21
%23 = phi %15, %16, %22
%24 = block 2
%25:i32 = var
%26 = add %25, 32:i32 (hasExternalUses)
%27 = add %26, 288:i32 (hasExternalUses)
%28 = phi %24, %26, %27
%29 = phi %14, %23, %28
%30 = phi %4, %13, %29
%31 = block 2
%32 = block 2
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %35
%37 = phi %32, %36, %30
%38 = phi %31, %37, %30
%39 = phi %3, %30, %38
%40 = phi %2, %39, %30
%41 = phi %0, %1, %40
%42 = add %41, 4:i32
%43:i32 = var
blockpc %2 0 %43 1
%44:i32 = var
blockpc %2 1 %44 1
%45:i32 = var
blockpc %3 0 %45 1
%46:i32 = var
blockpc %3 1 %46 1
%47:i32 = var
blockpc %4 0 %47 1
%48:i32 = var
blockpc %4 1 %48 1
%49:i32 = var
blockpc %5 0 %49 1
%50:i32 = var
blockpc %5 1 %50 1
%51:i32 = var
blockpc %6 0 %51 1
%52:i32 = var
blockpc %6 1 %52 1
%53:i32 = var
blockpc %10 0 %53 1
%54:i32 = var
blockpc %10 1 %54 1
%55:i32 = var
blockpc %14 0 %55 1
%56:i32 = var
blockpc %14 1 %56 1
%57:i32 = var
blockpc %17 0 %57 1
%58:i32 = var
blockpc %17 1 %58 1
%59:i32 = var
blockpc %19 0 %59 1
%60:i32 = var
blockpc %19 1 %60 1
%61:i32 = var
blockpc %24 0 %61 1
%62:i32 = var
blockpc %24 1 %62 1
%63:i32 = var
blockpc %31 0 %63 1
%64:i32 = var
blockpc %31 1 %64 1
%65:i32 = var
blockpc %32 0 %65 1
%66:i32 = var
blockpc %32 1 %66 1
%67:i32 = var
blockpc %33 0 %67 1
%68:i32 = var
blockpc %33 1 %68 1
%69:i32 = var
%70:i32 = var
pc %69 1
pc %70 1
infer %42


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = add %7, 4:i32 (hasExternalUses)
%9 = phi %6, %8, %7
%10 = block 2
%11 = add %7, 4:i32 (hasExternalUses)
%12 = phi %10, %11, %7
%13 = phi %5, %9, %12
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = block 2
%18:i32 = var
%19 = block 2
%20:i32 = var
%21 = phi %19, %18, %20
%22 = phi %17, %18, %21
%23 = phi %15, %16, %22
%24 = block 2
%25:i32 = var
%26 = add %25, 32:i32 (hasExternalUses)
%27 = add %26, 288:i32 (hasExternalUses)
%28 = phi %24, %26, %27
%29 = phi %14, %23, %28
%30 = phi %4, %13, %29
%31 = block 2
%32 = block 2
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %35
%37 = phi %32, %36, %30
%38 = phi %31, %37, %30
%39 = phi %3, %30, %38
%40 = phi %2, %39, %30
%41 = phi %0, %1, %40
%42 = block 2
%43:i32 = var
%44 = block 2
%45:i32 = var
%46 = block 2
%47:i32 = var
%48 = block 2
%49:i32 = var
%50 = block 2
%51:i32 = var
%52:i32 = var
%53 = phi %50, %51, %52
%54 = phi %5, %53, %51
%55 = phi %48, %49, %54
%56:i32 = var
%57 = block 2
%58:i32 = var
%59:i32 = var
%60 = phi %57, %58, %59
%61 = phi %15, %56, %60
%62:i32 = var
%63 = phi %14, %61, %62
%64 = phi %4, %55, %63
%65 = phi %46, %47, %64
%66 = phi %2, %65, %64
%67 = phi %44, %45, %66
%68 = phi %0, %43, %67
%69:i32 = var
%70 = phi %42, %68, %69
%71 = ult %41, %70
%72:i32 = var
blockpc %2 0 %72 1
%73:i32 = var
blockpc %2 1 %73 1
%74:i32 = var
blockpc %3 0 %74 1
%75:i32 = var
blockpc %3 1 %75 1
%76:i32 = var
blockpc %4 0 %76 1
%77:i32 = var
blockpc %4 1 %77 1
%78:i32 = var
blockpc %5 0 %78 1
%79:i32 = var
blockpc %5 1 %79 1
%80:i32 = var
blockpc %6 0 %80 1
%81:i32 = var
blockpc %6 1 %81 1
%82:i32 = var
blockpc %10 0 %82 1
%83:i32 = var
blockpc %10 1 %83 1
%84:i32 = var
blockpc %14 0 %84 1
%85:i32 = var
blockpc %14 1 %85 1
%86:i32 = var
blockpc %17 0 %86 1
%87:i32 = var
blockpc %17 1 %87 1
%88:i32 = var
blockpc %19 0 %88 1
%89:i32 = var
blockpc %19 1 %89 1
%90:i32 = var
blockpc %24 0 %90 1
%91:i32 = var
blockpc %24 1 %91 1
%92:i32 = var
blockpc %31 0 %92 1
%93:i32 = var
blockpc %31 1 %93 1
%94:i32 = var
blockpc %32 0 %94 1
%95:i32 = var
blockpc %32 1 %95 1
%96:i32 = var
blockpc %33 0 %96 1
%97:i32 = var
blockpc %33 1 %97 1
%98:i32 = var
blockpc %42 0 %98 1
%99:i32 = var
blockpc %42 1 %99 1
%100:i32 = var
blockpc %44 0 %100 1
%101:i32 = var
blockpc %44 1 %101 1
%102:i32 = var
blockpc %46 0 %102 1
%103:i32 = var
blockpc %46 1 %103 1
%104:i32 = var
blockpc %48 0 %104 1
%105:i32 = var
blockpc %48 1 %105 1
%106:i32 = var
blockpc %50 0 %106 1
%107:i32 = var
blockpc %50 1 %107 1
%108:i32 = var
blockpc %57 0 %108 1
%109:i32 = var
blockpc %57 1 %109 1
%110:i32 = var
%111:i32 = var
pc %110 1
pc %111 1
infer %71


; start LHS (in $11)
%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11:i32 = var
%12 = phi %10, 6:i32, %11
%13 = phi %5, %9, %12
%14 = phi %3, %4, %13
%15:i32 = var
%16:i32 = var
%17 = add %16, 0:i32; Replace bad zext operation
%18 = phi %3, %15, %17
%19 = xor %18, 1:i32
%20 = and %19, 1:i32
%21 = add %14, %20 (hasExternalUses)
%22 = add %21, -1:i32
%23:i32 = var
%24 = block 2
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29:i32 = var
%30 = phi %27, %28, %29
%31 = phi %26, %30, 0:i32
%32 = block 2
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %35
%37 = phi %32, %36, %31
%38 = phi %25, %31, %37
%39 = phi %24, %38, %31
%40 = phi %3, %23, %39
%41 = sub %22, %40 (hasExternalUses)
%42:i32 = var
%43 = phi %2, %41, %42
%44 = block 2
%45:i32 = var
%46 = phi %44, %45, 0:i32
%47 = phi %1, %43, %46
%48 = block 2
%49 = block 2
%50:i32 = var
%51 = phi %49, %50, 0:i32
%52 = phi %48, %43, %51
%53 = block 2
%54 = phi %53, %43, %14
%55 = phi %0, %47, %52, %54
%56 = slt -1:i32, %55
%57:i32 = var
blockpc %1 0 %57 1
%58:i32 = var
blockpc %1 1 %58 1
%59:i32 = var
blockpc %2 0 %59 1
%60:i32 = var
blockpc %2 1 %60 1
%61:i32 = var
blockpc %5 0 %61 1
%62:i32 = var
blockpc %5 1 %62 1
%63:i32 = var
blockpc %10 0 %63 1
%64:i32 = var
blockpc %10 1 %64 1
%65:i32 = var
blockpc %24 0 %65 1
%66:i32 = var
blockpc %24 1 %66 1
%67:i32 = var
blockpc %25 0 %67 1
%68:i32 = var
blockpc %25 1 %68 1
%69:i32 = var
blockpc %26 0 %69 1
%70:i32 = var
blockpc %26 1 %70 1
%71:i32 = var
blockpc %27 0 %71 1
%72:i32 = var
blockpc %27 1 %72 1
%73:i32 = var
blockpc %32 0 %73 1
%74:i32 = var
blockpc %32 1 %74 1
%75:i32 = var
blockpc %33 0 %75 1
%76:i32 = var
blockpc %33 1 %76 1
%77:i32 = var
blockpc %44 0 %77 1
%78:i32 = var
blockpc %44 1 %78 1
%79:i32 = var
blockpc %48 0 %79 1
%80:i32 = var
blockpc %48 1 %80 1
%81:i32 = var
blockpc %49 0 %81 1
%82:i32 = var
blockpc %49 1 %82 1
%83:i32 = var
blockpc %53 0 %83 1
%84:i32 = var
blockpc %53 1 %84 1
%85:i32 = var
%86:i32 = var
pc %85 1
pc %86 1
infer %56


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, %8
%13 = phi %5, %9, %12
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = block 2
%18:i32 = var
%19 = block 2
%20:i32 = var
%21 = phi %19, %18, %20
%22 = phi %17, %18, %21
%23 = phi %15, %16, %22
%24 = block 2
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %26
%28 = phi %14, %23, %27
%29 = phi %4, %13, %28
%30 = block 2
%31 = block 2
%32 = block 2
%33:i32 = var
%34:i32 = var
%35 = phi %32, %33, %34
%36 = phi %31, %35, %29
%37 = phi %30, %36, %29
%38 = phi %3, %29, %37
%39 = phi %2, %38, %29
%40 = phi %0, %1, %39
%41 = block 2
%42:i32 = var
%43 = block 2
%44:i32 = var
%45 = block 2
%46:i32 = var
%47 = block 2
%48:i32 = var
%49 = block 2
%50:i32 = var
%51:i32 = var
%52 = phi %49, %50, %51
%53 = phi %5, %52, %50
%54 = phi %47, %48, %53
%55:i32 = var
%56 = block 2
%57:i32 = var
%58:i32 = var
%59 = phi %56, %57, %58
%60 = phi %15, %55, %59
%61:i32 = var
%62 = phi %14, %60, %61
%63 = phi %4, %54, %62
%64 = phi %45, %46, %63
%65 = phi %2, %64, %63
%66 = phi %43, %44, %65
%67 = phi %0, %42, %66
%68:i32 = var
%69 = phi %41, %67, %68
%70 = ult %40, %69
%71:i32 = zext %70
%72:i32 = var
%73 = add %72, 0:i32; Replace bad zext operation
%74 = and %71, %73
%75:i32 = var
blockpc %2 0 %75 1
%76:i32 = var
blockpc %2 1 %76 1
%77:i32 = var
blockpc %3 0 %77 1
%78:i32 = var
blockpc %3 1 %78 1
%79:i32 = var
blockpc %4 0 %79 1
%80:i32 = var
blockpc %4 1 %80 1
%81:i32 = var
blockpc %5 0 %81 1
%82:i32 = var
blockpc %5 1 %82 1
%83:i32 = var
blockpc %6 0 %83 1
%84:i32 = var
blockpc %6 1 %84 1
%85:i32 = var
blockpc %10 0 %85 1
%86:i32 = var
blockpc %10 1 %86 1
%87:i32 = var
blockpc %14 0 %87 1
%88:i32 = var
blockpc %14 1 %88 1
%89:i32 = var
blockpc %17 0 %89 1
%90:i32 = var
blockpc %17 1 %90 1
%91:i32 = var
blockpc %19 0 %91 1
%92:i32 = var
blockpc %19 1 %92 1
%93:i32 = var
blockpc %24 0 %93 1
%94:i32 = var
blockpc %24 1 %94 1
%95:i32 = var
blockpc %30 0 %95 1
%96:i32 = var
blockpc %30 1 %96 1
%97:i32 = var
blockpc %31 0 %97 1
%98:i32 = var
blockpc %31 1 %98 1
%99:i32 = var
blockpc %32 0 %99 1
%100:i32 = var
blockpc %32 1 %100 1
%101:i32 = var
blockpc %41 0 %101 1
%102:i32 = var
blockpc %41 1 %102 1
%103:i32 = var
blockpc %43 0 %103 1
%104:i32 = var
blockpc %43 1 %104 1
%105:i32 = var
blockpc %45 0 %105 1
%106:i32 = var
blockpc %45 1 %106 1
%107:i32 = var
blockpc %47 0 %107 1
%108:i32 = var
blockpc %47 1 %108 1
%109:i32 = var
blockpc %49 0 %109 1
%110:i32 = var
blockpc %49 1 %110 1
%111:i32 = var
blockpc %56 0 %111 1
%112:i32 = var
blockpc %56 1 %112 1
%113:i32 = var
%114:i32 = var
pc %113 1
pc %114 1
infer %74


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = add %9, 9:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22:i32 = var
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = add %24, %25
%27:i32 = var
%28 = slt %26, %27
blockpc %23 0 %28 1
%29:i32 = var
blockpc %23 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43:i32 = var
%44 = phi %39, %42, %43
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48:i32 = var
%49 = phi %45, %48, %43
%50 = phi %36, %44, %49
%51:i32 = var
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %55, %59
%61 = phi %52, %55, %60
%62 = phi %3, %51, %61
%63 = block 2
%64:i32 = var
blockpc %63 0 %64 1
%65:i32 = var
blockpc %63 1 %65 1
%66:i32 = var
%67:i32 = var
%68 = phi %63, %66, %67
%69 = phi %2, %62, %68
%70 = phi %33, %50, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80:i32 = var
%81:i32 = var
%82 = phi %77, %80, %81
%83 = phi %74, %82, %70
%84 = phi %71, %83, %70
%85 = phi %30, %70, %84
%86 = phi %23, %85, %70
%87 = phi %0, %22, %86
%88 = block 2
%89:i32 = var
blockpc %88 0 %89 1
%90:i32 = var
blockpc %88 1 %90 1
%91:i32 = var
%92 = block 2
%93:i32 = var
blockpc %92 0 %93 1
%94:i32 = var
blockpc %92 1 %94 1
%95:i32 = var
%96 = block 2
%97:i32 = var
blockpc %96 0 %97 1
%98:i32 = var
blockpc %96 1 %98 1
%99:i32 = var
%100 = block 2
%101:i32 = var
blockpc %100 0 %101 1
%102:i32 = var
blockpc %100 1 %102 1
%103:i32 = var
%104 = block 2
%105:i32 = var
blockpc %104 0 %105 1
%106:i32 = var
blockpc %104 1 %106 1
%107:i32 = var
%108:i32 = var
%109 = phi %104, %107, %108
%110 = phi %36, %109, %107
%111 = phi %100, %103, %110
%112:i32 = var
%113 = block 2
%114:i32 = var
blockpc %113 0 %114 1
%115:i32 = var
blockpc %113 1 %115 1
%116:i32 = var
%117:i32 = var
%118 = phi %113, %116, %117
%119 = phi %3, %112, %118
%120:i32 = var
%121 = phi %2, %119, %120
%122 = phi %33, %111, %121
%123 = phi %96, %99, %122
%124 = phi %23, %123, %122
%125 = phi %92, %95, %124
%126 = phi %0, %91, %125
%127:i32 = var
%128 = phi %88, %126, %127
%129 = ult %87, %128
%130:i32 = zext %129
%131:i32 = var
%132 = add %131, 0:i32; Replace bad zext operation
%133 = and %130, %132
%134 = ne %133, 0:i32
%135:i32 = var
%136:i32 = var
pc %134 1
pc %135 1
pc %136 1
infer %10


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = and %9, 8:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22:i32 = var
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = add %24, %25
%27:i32 = var
%28 = slt %26, %27
blockpc %23 0 %28 1
%29:i32 = var
blockpc %23 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43:i32 = var
%44 = phi %39, %42, %43
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48:i32 = var
%49 = phi %45, %48, %43
%50 = phi %36, %44, %49
%51:i32 = var
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %55, %59
%61 = phi %52, %55, %60
%62 = phi %3, %51, %61
%63 = block 2
%64:i32 = var
blockpc %63 0 %64 1
%65:i32 = var
blockpc %63 1 %65 1
%66:i32 = var
%67:i32 = var
%68 = phi %63, %66, %67
%69 = phi %2, %62, %68
%70 = phi %33, %50, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80:i32 = var
%81:i32 = var
%82 = phi %77, %80, %81
%83 = phi %74, %82, %70
%84 = phi %71, %83, %70
%85 = phi %30, %70, %84
%86 = phi %23, %85, %70
%87 = phi %0, %22, %86
%88 = block 2
%89:i32 = var
blockpc %88 0 %89 1
%90:i32 = var
blockpc %88 1 %90 1
%91:i32 = var
%92 = block 2
%93:i32 = var
blockpc %92 0 %93 1
%94:i32 = var
blockpc %92 1 %94 1
%95:i32 = var
%96 = block 2
%97:i32 = var
blockpc %96 0 %97 1
%98:i32 = var
blockpc %96 1 %98 1
%99:i32 = var
%100 = block 2
%101:i32 = var
blockpc %100 0 %101 1
%102:i32 = var
blockpc %100 1 %102 1
%103:i32 = var
%104 = block 2
%105:i32 = var
blockpc %104 0 %105 1
%106:i32 = var
blockpc %104 1 %106 1
%107:i32 = var
%108:i32 = var
%109 = phi %104, %107, %108
%110 = phi %36, %109, %107
%111 = phi %100, %103, %110
%112:i32 = var
%113 = block 2
%114:i32 = var
blockpc %113 0 %114 1
%115:i32 = var
blockpc %113 1 %115 1
%116:i32 = var
%117:i32 = var
%118 = phi %113, %116, %117
%119 = phi %3, %112, %118
%120:i32 = var
%121 = phi %2, %119, %120
%122 = phi %33, %111, %121
%123 = phi %96, %99, %122
%124 = phi %23, %123, %122
%125 = phi %92, %95, %124
%126 = phi %0, %91, %125
%127:i32 = var
%128 = phi %88, %126, %127
%129 = ult %87, %128
%130:i32 = zext %129
%131:i32 = var
%132 = add %131, 0:i32; Replace bad zext operation
%133 = and %130, %132
%134 = ne %133, 0:i32
%135:i32 = var
%136:i32 = var
pc %134 1
pc %135 1
pc %136 1
infer %10


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = and %9, 8:i32
%11 = eq %10, 0:i32
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = add %16, -28:i32
%18:i32 = var
%19 = phi %12, %17, %18
%20 = slt 0:i32, %19
blockpc %2 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %2 1 %22 1
%23:i32 = var
%24 = block 2
%25:i32 = var
%26:i32 = var
%27 = add %25, %26
%28:i32 = var
%29 = slt %27, %28
blockpc %24 0 %29 1
%30:i32 = var
blockpc %24 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44:i32 = var
%45 = phi %40, %43, %44
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49:i32 = var
%50 = phi %46, %49, %44
%51 = phi %37, %45, %50
%52:i32 = var
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56:i32 = var
%57 = block 2
%58:i32 = var
blockpc %57 0 %58 1
%59:i32 = var
blockpc %57 1 %59 1
%60:i32 = var
%61 = phi %57, %56, %60
%62 = phi %53, %56, %61
%63 = phi %3, %52, %62
%64 = block 2
%65:i32 = var
blockpc %64 0 %65 1
%66:i32 = var
blockpc %64 1 %66 1
%67:i32 = var
%68:i32 = var
%69 = phi %64, %67, %68
%70 = phi %2, %63, %69
%71 = phi %34, %51, %70
%72 = block 2
%73:i32 = var
blockpc %72 0 %73 1
%74:i32 = var
blockpc %72 1 %74 1
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78 = block 2
%79:i32 = var
blockpc %78 0 %79 1
%80:i32 = var
blockpc %78 1 %80 1
%81:i32 = var
%82:i32 = var
%83 = phi %78, %81, %82
%84 = phi %75, %83, %71
%85 = phi %72, %84, %71
%86 = phi %31, %71, %85
%87 = phi %24, %86, %71
%88 = phi %0, %23, %87
%89 = block 2
%90:i32 = var
blockpc %89 0 %90 1
%91:i32 = var
blockpc %89 1 %91 1
%92:i32 = var
%93 = block 2
%94:i32 = var
blockpc %93 0 %94 1
%95:i32 = var
blockpc %93 1 %95 1
%96:i32 = var
%97 = block 2
%98:i32 = var
blockpc %97 0 %98 1
%99:i32 = var
blockpc %97 1 %99 1
%100:i32 = var
%101 = block 2
%102:i32 = var
blockpc %101 0 %102 1
%103:i32 = var
blockpc %101 1 %103 1
%104:i32 = var
%105 = block 2
%106:i32 = var
blockpc %105 0 %106 1
%107:i32 = var
blockpc %105 1 %107 1
%108:i32 = var
%109:i32 = var
%110 = phi %105, %108, %109
%111 = phi %37, %110, %108
%112 = phi %101, %104, %111
%113:i32 = var
%114 = block 2
%115:i32 = var
blockpc %114 0 %115 1
%116:i32 = var
blockpc %114 1 %116 1
%117:i32 = var
%118:i32 = var
%119 = phi %114, %117, %118
%120 = phi %3, %113, %119
%121:i32 = var
%122 = phi %2, %120, %121
%123 = phi %34, %112, %122
%124 = phi %97, %100, %123
%125 = phi %24, %124, %123
%126 = phi %93, %96, %125
%127 = phi %0, %92, %126
%128:i32 = var
%129 = phi %89, %127, %128
%130 = ult %88, %129
%131:i32 = zext %130
%132:i32 = var
%133 = add %132, 0:i32; Replace bad zext operation
%134 = and %131, %133
%135 = ne %134, 0:i32
%136:i32 = var
%137:i32 = var
pc %135 1
pc %136 1
pc %137 1
infer %11


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = sub 0:i32, %9
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22:i32 = var
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = add %24, %25
%27:i32 = var
%28 = slt %26, %27
blockpc %23 0 %28 1
%29:i32 = var
blockpc %23 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43:i32 = var
%44 = phi %39, %42, %43
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48:i32 = var
%49 = phi %45, %48, %43
%50 = phi %36, %44, %49
%51:i32 = var
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %55, %59
%61 = phi %52, %55, %60
%62 = phi %3, %51, %61
%63 = block 2
%64:i32 = var
blockpc %63 0 %64 1
%65:i32 = var
blockpc %63 1 %65 1
%66:i32 = var
%67:i32 = var
%68 = phi %63, %66, %67
%69 = phi %2, %62, %68
%70 = phi %33, %50, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80:i32 = var
%81:i32 = var
%82 = phi %77, %80, %81
%83 = phi %74, %82, %70
%84 = phi %71, %83, %70
%85 = phi %30, %70, %84
%86 = phi %23, %85, %70
%87 = phi %0, %22, %86
%88 = block 2
%89:i32 = var
blockpc %88 0 %89 1
%90:i32 = var
blockpc %88 1 %90 1
%91:i32 = var
%92 = block 2
%93:i32 = var
blockpc %92 0 %93 1
%94:i32 = var
blockpc %92 1 %94 1
%95:i32 = var
%96 = block 2
%97:i32 = var
blockpc %96 0 %97 1
%98:i32 = var
blockpc %96 1 %98 1
%99:i32 = var
%100 = block 2
%101:i32 = var
blockpc %100 0 %101 1
%102:i32 = var
blockpc %100 1 %102 1
%103:i32 = var
%104 = block 2
%105:i32 = var
blockpc %104 0 %105 1
%106:i32 = var
blockpc %104 1 %106 1
%107:i32 = var
%108:i32 = var
%109 = phi %104, %107, %108
%110 = phi %36, %109, %107
%111 = phi %100, %103, %110
%112:i32 = var
%113 = block 2
%114:i32 = var
blockpc %113 0 %114 1
%115:i32 = var
blockpc %113 1 %115 1
%116:i32 = var
%117:i32 = var
%118 = phi %113, %116, %117
%119 = phi %3, %112, %118
%120:i32 = var
%121 = phi %2, %119, %120
%122 = phi %33, %111, %121
%123 = phi %96, %99, %122
%124 = phi %23, %123, %122
%125 = phi %92, %95, %124
%126 = phi %0, %91, %125
%127:i32 = var
%128 = phi %88, %126, %127
%129 = ult %87, %128
%130:i32 = zext %129
%131:i32 = var
%132 = add %131, 0:i32; Replace bad zext operation
%133 = and %130, %132
%134 = ne %133, 0:i32
%135:i32 = var
%136:i32 = var
pc %134 1
pc %135 1
pc %136 1
infer %10


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = add %9, 8:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22:i32 = var
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = add %24, %25
%27:i32 = var
%28 = slt %26, %27
blockpc %23 0 %28 1
%29:i32 = var
blockpc %23 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43:i32 = var
%44 = phi %39, %42, %43
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48:i32 = var
%49 = phi %45, %48, %43
%50 = phi %36, %44, %49
%51:i32 = var
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %55, %59
%61 = phi %52, %55, %60
%62 = phi %3, %51, %61
%63 = block 2
%64:i32 = var
blockpc %63 0 %64 1
%65:i32 = var
blockpc %63 1 %65 1
%66:i32 = var
%67:i32 = var
%68 = phi %63, %66, %67
%69 = phi %2, %62, %68
%70 = phi %33, %50, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80:i32 = var
%81:i32 = var
%82 = phi %77, %80, %81
%83 = phi %74, %82, %70
%84 = phi %71, %83, %70
%85 = phi %30, %70, %84
%86 = phi %23, %85, %70
%87 = phi %0, %22, %86
%88 = block 2
%89:i32 = var
blockpc %88 0 %89 1
%90:i32 = var
blockpc %88 1 %90 1
%91:i32 = var
%92 = block 2
%93:i32 = var
blockpc %92 0 %93 1
%94:i32 = var
blockpc %92 1 %94 1
%95:i32 = var
%96 = block 2
%97:i32 = var
blockpc %96 0 %97 1
%98:i32 = var
blockpc %96 1 %98 1
%99:i32 = var
%100 = block 2
%101:i32 = var
blockpc %100 0 %101 1
%102:i32 = var
blockpc %100 1 %102 1
%103:i32 = var
%104 = block 2
%105:i32 = var
blockpc %104 0 %105 1
%106:i32 = var
blockpc %104 1 %106 1
%107:i32 = var
%108:i32 = var
%109 = phi %104, %107, %108
%110 = phi %36, %109, %107
%111 = phi %100, %103, %110
%112:i32 = var
%113 = block 2
%114:i32 = var
blockpc %113 0 %114 1
%115:i32 = var
blockpc %113 1 %115 1
%116:i32 = var
%117:i32 = var
%118 = phi %113, %116, %117
%119 = phi %3, %112, %118
%120:i32 = var
%121 = phi %2, %119, %120
%122 = phi %33, %111, %121
%123 = phi %96, %99, %122
%124 = phi %23, %123, %122
%125 = phi %92, %95, %124
%126 = phi %0, %91, %125
%127:i32 = var
%128 = phi %88, %126, %127
%129 = ult %87, %128
%130:i32 = zext %129
%131:i32 = var
%132 = add %131, 0:i32; Replace bad zext operation
%133 = and %130, %132
%134 = ne %133, 0:i32
%135:i32 = var
%136:i32 = var
pc %134 1
pc %135 1
pc %136 1
infer %10


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = add %10, 9:i32 (hasExternalUses)
%12 = eq %0, %11
%13 = block 2
%14:i32 = var
%15 = ne %14, 0:i32
blockpc %13 0 %15 1
%16 = eq %14, 0:i32
blockpc %13 1 %16 1
%17:i32 = var
%18 = add %17, -28:i32
%19:i32 = var
%20 = phi %13, %18, %19
%21 = slt 0:i32, %20
blockpc %3 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %3 1 %23 1
%24:i32 = var
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40:i32 = var
%41:i32 = var
%42 = phi %37, %40, %41
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46:i32 = var
%47 = phi %43, %46, %41
%48 = phi %34, %42, %47
%49:i32 = var
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57:i32 = var
%58 = phi %54, %53, %57
%59 = phi %50, %53, %58
%60 = phi %4, %49, %59
%61 = block 2
%62:i32 = var
blockpc %61 0 %62 1
%63:i32 = var
blockpc %61 1 %63 1
%64:i32 = var
%65:i32 = var
%66 = phi %61, %64, %65
%67 = phi %3, %60, %66
%68 = phi %31, %48, %67
%69 = block 2
%70:i32 = var
blockpc %69 0 %70 1
%71:i32 = var
blockpc %69 1 %71 1
%72 = block 2
%73:i32 = var
blockpc %72 0 %73 1
%74:i32 = var
blockpc %72 1 %74 1
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78:i32 = var
%79:i32 = var
%80 = phi %75, %78, %79
%81 = phi %72, %80, %68
%82 = phi %69, %81, %68
%83 = phi %28, %68, %82
%84 = phi %25, %83, %68
%85 = phi %1, %24, %84
%86 = block 2
%87:i32 = var
blockpc %86 0 %87 1
%88:i32 = var
blockpc %86 1 %88 1
%89:i32 = var
%90 = block 2
%91:i32 = var
blockpc %90 0 %91 1
%92:i32 = var
blockpc %90 1 %92 1
%93:i32 = var
%94 = block 2
%95:i32 = var
blockpc %94 0 %95 1
%96:i32 = var
blockpc %94 1 %96 1
%97:i32 = var
%98 = block 2
%99:i32 = var
blockpc %98 0 %99 1
%100:i32 = var
blockpc %98 1 %100 1
%101:i32 = var
%102 = block 2
%103:i32 = var
blockpc %102 0 %103 1
%104:i32 = var
blockpc %102 1 %104 1
%105:i32 = var
%106:i32 = var
%107 = phi %102, %105, %106
%108 = phi %34, %107, %105
%109 = phi %98, %101, %108
%110:i32 = var
%111 = block 2
%112:i32 = var
blockpc %111 0 %112 1
%113:i32 = var
blockpc %111 1 %113 1
%114:i32 = var
%115:i32 = var
%116 = phi %111, %114, %115
%117 = phi %4, %110, %116
%118:i32 = var
%119 = phi %3, %117, %118
%120 = phi %31, %109, %119
%121 = phi %94, %97, %120
%122 = phi %25, %121, %120
%123 = phi %90, %93, %122
%124 = phi %1, %89, %123
%125:i32 = var
%126 = phi %86, %124, %125
%127 = ult %85, %126
%128:i32 = zext %127
%129:i32 = var
%130 = add %129, 0:i32; Replace bad zext operation
%131 = and %128, %130
%132 = ne %131, 0:i32
%133:i32 = var
%134:i32 = var
pc %132 1
pc %133 1
pc %134 1
infer %12


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5 = block 2
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = add %8, 4:i32 (hasExternalUses)
%10 = phi %7, %9, %8
%11 = block 2
%12 = add %8, 4:i32 (hasExternalUses)
%13 = phi %11, %12, %8
%14 = phi %6, %10, %13
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
%22 = phi %20, %19, %21
%23 = phi %18, %19, %22
%24 = phi %16, %17, %23
%25 = block 2
%26:i32 = var
%27 = add %26, 32:i32 (hasExternalUses)
%28 = add %27, 288:i32 (hasExternalUses)
%29 = phi %25, %27, %28
%30 = phi %15, %24, %29
%31 = phi %5, %14, %30
%32 = block 2
%33 = block 2
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %36
%38 = phi %33, %37, %31
%39 = phi %32, %38, %31
%40 = phi %4, %31, %39
%41 = phi %3, %40, %31
%42 = phi %1, %2, %41
%43 = eq %0, %42
%44:i32 = var
blockpc %3 0 %44 1
%45:i32 = var
blockpc %3 1 %45 1
%46:i32 = var
blockpc %4 0 %46 1
%47:i32 = var
blockpc %4 1 %47 1
%48:i32 = var
blockpc %5 0 %48 1
%49:i32 = var
blockpc %5 1 %49 1
%50:i32 = var
blockpc %6 0 %50 1
%51:i32 = var
blockpc %6 1 %51 1
%52:i32 = var
blockpc %7 0 %52 1
%53:i32 = var
blockpc %7 1 %53 1
%54:i32 = var
blockpc %11 0 %54 1
%55:i32 = var
blockpc %11 1 %55 1
%56:i32 = var
blockpc %15 0 %56 1
%57:i32 = var
blockpc %15 1 %57 1
%58:i32 = var
blockpc %18 0 %58 1
%59:i32 = var
blockpc %18 1 %59 1
%60:i32 = var
blockpc %20 0 %60 1
%61:i32 = var
blockpc %20 1 %61 1
%62:i32 = var
blockpc %25 0 %62 1
%63:i32 = var
blockpc %25 1 %63 1
%64:i32 = var
blockpc %32 0 %64 1
%65:i32 = var
blockpc %32 1 %65 1
%66:i32 = var
blockpc %33 0 %66 1
%67:i32 = var
blockpc %33 1 %67 1
%68:i32 = var
blockpc %34 0 %68 1
%69:i32 = var
blockpc %34 1 %69 1
%70:i32 = var
%71:i32 = var
%72:i32 = var
pc %70 1
pc %71 1
pc %72 1
infer %43


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = add %10, 8:i32 (hasExternalUses)
%12:i32 = var
%13 = phi %0, %11, %12
%14 = add %13, 1:i32
%15 = add %10, 9:i32
%16 = eq %12, %15
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = block 2
%20:i32 = var
%21 = ne %20, 0:i32
blockpc %19 0 %21 1
%22 = eq %20, 0:i32
blockpc %19 1 %22 1
%23:i32 = var
%24 = add %23, -28:i32
%25:i32 = var
%26 = phi %19, %24, %25
%27 = slt 0:i32, %26
blockpc %3 0 %27 1
%28:i32 = var
blockpc %3 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %14


; start LHS (in $11)
%0:i32 = var
%1 = slt %0, 1:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
blockpc %6 0 %7 1
%8:i32 = var
blockpc %6 1 %8 1
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 6:i32, %16
%18 = phi %6, %12, %17
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29:i32 = var
%30 = phi %25, %28, %29
%31 = phi %22, %30, 0:i32
%32 = phi %19, 0:i32, %31
%33 = sub %18, %32
%34:i32 = var
%35 = add %33, %34
%36:i32 = var
%37 = slt %35, %36
blockpc %5 0 %37 1
%38:i32 = var
blockpc %5 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51:i32 = var
%52:i32 = var
%53 = phi %48, %51, %52
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57:i32 = var
%58 = phi %54, %57, %52
%59 = phi %45, %53, %58
%60:i32 = var
%61 = block 2
%62:i32 = var
blockpc %61 0 %62 1
%63:i32 = var
blockpc %61 1 %63 1
%64:i32 = var
%65 = block 2
%66:i32 = var
blockpc %65 0 %66 1
%67:i32 = var
blockpc %65 1 %67 1
%68:i32 = var
%69 = phi %65, %64, %68
%70 = phi %61, %64, %69
%71 = phi %9, %60, %70
%72 = block 2
%73:i32 = var
blockpc %72 0 %73 1
%74:i32 = var
blockpc %72 1 %74 1
%75:i32 = var
%76:i32 = var
%77 = phi %72, %75, %76
%78 = phi %6, %71, %77
%79 = phi %42, %59, %78
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83 = block 2
%84:i32 = var
blockpc %83 0 %84 1
%85:i32 = var
blockpc %83 1 %85 1
%86 = block 2
%87:i32 = var
blockpc %86 0 %87 1
%88:i32 = var
blockpc %86 1 %88 1
%89:i32 = var
%90:i32 = var
%91 = phi %86, %89, %90
%92 = phi %83, %91, %79
%93 = phi %80, %92, %79
%94 = phi %39, %79, %93
%95 = phi %5, %94, %79
%96 = phi %3, %4, %95
%97 = eq %2, %96
%98:i32 = var
%99:i32 = var
%100:i32 = var
pc %97 1
pc %98 1
pc %99 1
pc %100 1
infer %1


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = and %9, 8:i32
%11 = eq %10, 0:i32
%12:i32 = var
%13 = slt %12, 1:i32
%14:i32 = zext %13
%extd0:i32 = zext %11; Fix width
%15 = and %extd0, %14
%16 = block 2
%17:i32 = var
%18 = ne %17, 0:i32
blockpc %16 0 %18 1
%19 = eq %17, 0:i32
blockpc %16 1 %19 1
%20:i32 = var
%21 = add %20, -28:i32
%22:i32 = var
%23 = phi %16, %21, %22
%24 = slt 0:i32, %23
blockpc %2 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %2 1 %26 1
%27:i32 = var
%28:i32 = var
%29:i32 = var
%30:i32 = var
pc %27 1
pc %28 1
pc %29 1
pc %30 1
infer %15


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = block 2
%11 = add %9, 8:i32 (hasExternalUses)
%12:i32 = var
%13 = phi %10, %11, %12
%14 = ult %9, %13
%15 = block 2
%16:i32 = var
%17 = ne %16, 0:i32
blockpc %15 0 %17 1
%18 = eq %16, 0:i32
blockpc %15 1 %18 1
%19:i32 = var
%20 = add %19, -28:i32
%21:i32 = var
%22 = phi %15, %20, %21
%23 = slt 0:i32, %22
blockpc %2 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %2 1 %25 1
%26:i32 = var
blockpc %10 0 %26 1
%27:i32 = var
blockpc %10 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %14


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = block 2
%11 = add %9, 8:i32 (hasExternalUses)
%12:i32 = var
%13 = phi %10, %11, %12
%14 = ult %9, %13
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17 = block 2
%18:i32 = var
%19 = ne %18, 0:i32
blockpc %17 0 %19 1
%20 = eq %18, 0:i32
blockpc %17 1 %20 1
%21:i32 = var
%22 = add %21, -28:i32
%23:i32 = var
%24 = phi %17, %22, %23
%25 = slt 0:i32, %24
blockpc %2 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %2 1 %27 1
%28:i32 = var
blockpc %10 0 %28 1
%29:i32 = var
blockpc %10 1 %29 1
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %16


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = add %10, 8:i32 (hasExternalUses)
%12:i32 = var
%13 = phi %0, %11, %12
%14:i32 = var
%15:i32 = var
%16:i32 = var
%17 = phi %4, %15, %16
%18 = phi %3, %17, %8
%19 = phi %1, %14, %18
%20 = sub 0:i32, %19
%21 = add %13, %20
%22 = add %10, 9:i32
%23 = eq %12, %22
blockpc %0 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %0 1 %25 1
%26 = block 2
%27:i32 = var
%28 = ne %27, 0:i32
blockpc %26 0 %28 1
%29:i32 = var
blockpc %26 1 %29 1
%30:i32 = var
%31:i32 = var
%32 = phi %26, %30, %31
%33 = slt 0:i32, %32
blockpc %3 0 %33 1
%34:i32 = var
blockpc %3 1 %34 1
%35:i32 = var
%36:i32 = var
%37:i32 = var
%38:i32 = var
pc %35 1
pc %36 1
pc %37 1
pc %38 1
infer %21


; start LHS (in $11)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
blockpc %6 0 %7 1
%8:i32 = var
blockpc %6 1 %8 1
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 6:i32, %16
%18 = phi %6, %12, %17
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29:i32 = var
%30 = phi %25, %28, %29
%31 = phi %22, %30, 0:i32
%32 = phi %19, 0:i32, %31
%33 = sub %18, %32
%34:i32 = var
%35 = add %33, %34
%36:i32 = var
%37 = slt %35, %36
blockpc %5 0 %37 1
%38:i32 = var
blockpc %5 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51:i32 = var
%52:i32 = var
%53 = phi %48, %51, %52
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57:i32 = var
%58 = phi %54, %57, %52
%59 = phi %45, %53, %58
%60:i32 = var
%61 = block 2
%62:i32 = var
blockpc %61 0 %62 1
%63:i32 = var
blockpc %61 1 %63 1
%64:i32 = var
%65 = block 2
%66:i32 = var
blockpc %65 0 %66 1
%67:i32 = var
blockpc %65 1 %67 1
%68:i32 = var
%69 = phi %65, %64, %68
%70 = phi %61, %64, %69
%71 = phi %9, %60, %70
%72 = block 2
%73:i32 = var
blockpc %72 0 %73 1
%74:i32 = var
blockpc %72 1 %74 1
%75:i32 = var
%76:i32 = var
%77 = phi %72, %75, %76
%78 = phi %6, %71, %77
%79 = phi %42, %59, %78
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83 = block 2
%84:i32 = var
blockpc %83 0 %84 1
%85:i32 = var
blockpc %83 1 %85 1
%86 = block 2
%87:i32 = var
blockpc %86 0 %87 1
%88:i32 = var
blockpc %86 1 %88 1
%89:i32 = var
%90:i32 = var
%91 = phi %86, %89, %90
%92 = phi %83, %91, %79
%93 = phi %80, %92, %79
%94 = phi %39, %79, %93
%95 = phi %5, %94, %79
%96 = phi %3, %4, %95
%97 = eq %2, %96
%98:i32 = zext %97
%99 = eq %98, 0:i32
%100:i32 = var
%101:i32 = var
%102:i32 = var
pc %99 1
pc %100 1
pc %101 1
pc %102 1
infer %1


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10:i32 = var
%11 = add %10, -1:i32 (hasExternalUses)
%12 = ult %9, %11
%13 = block 2
%14:i32 = var
%15 = ne %14, 0:i32
blockpc %13 0 %15 1
%16 = eq %14, 0:i32
blockpc %13 1 %16 1
%17:i32 = var
%18 = add %17, -28:i32
%19:i32 = var
%20 = phi %13, %18, %19
%21 = slt 0:i32, %20
blockpc %2 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %2 1 %23 1
%24:i32 = var
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41:i32 = var
%42:i32 = var
%43 = phi %38, %41, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47:i32 = var
%48 = phi %44, %47, %42
%49 = phi %35, %43, %48
%50:i32 = var
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54:i32 = var
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58:i32 = var
%59 = phi %55, %54, %58
%60 = phi %51, %54, %59
%61 = phi %3, %50, %60
%62 = block 2
%63:i32 = var
blockpc %62 0 %63 1
%64:i32 = var
blockpc %62 1 %64 1
%65:i32 = var
%66:i32 = var
%67 = phi %62, %65, %66
%68 = phi %2, %61, %67
%69 = phi %32, %49, %68
%70 = block 2
%71:i32 = var
blockpc %70 0 %71 1
%72:i32 = var
blockpc %70 1 %72 1
%73 = block 2
%74:i32 = var
blockpc %73 0 %74 1
%75:i32 = var
blockpc %73 1 %75 1
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79:i32 = var
%80:i32 = var
%81 = phi %76, %79, %80
%82 = phi %73, %81, %69
%83 = phi %70, %82, %69
%84 = phi %29, %69, %83
%85 = phi %26, %84, %69
%86 = phi %0, %25, %85
%87 = eq %24, %86
%88:i32 = zext %87
%89 = eq %88, 0:i32
%90:i32 = var
%91:i32 = var
%92:i32 = var
pc %89 1
pc %90 1
pc %91 1
pc %92 1
infer %12


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = add %9, 9:i32 (hasExternalUses)
%11 = block 3
%12 = block 2
%13 = add %9, 8:i32 (hasExternalUses)
%14:i32 = var
%15 = phi %12, %13, %14
%16 = add %15, 1:i32 (hasExternalUses)
%17 = block 2
%18:i32 = var
%19 = add %18, -1:i32 (hasExternalUses)
%20 = phi %17, %16, %19
%21 = phi %11, %16, %15, %20
%22 = sub %10, %21
%23 = block 2
%24:i32 = var
%25 = ne %24, 0:i32
blockpc %23 0 %25 1
%26 = eq %24, 0:i32
blockpc %23 1 %26 1
%27:i32 = var
%28 = add %27, -28:i32
%29:i32 = var
%30 = phi %23, %28, %29
%31 = slt 0:i32, %30
blockpc %2 0 %31 1
%32:i32 = var
blockpc %2 1 %32 1
%33:i32 = var
blockpc %12 0 %33 1
%34:i32 = var
blockpc %12 1 %34 1
%35:i32 = var
blockpc %17 0 %35 1
%36:i32 = var
blockpc %17 1 %36 1
%37:i32 = var
%38:i32 = var
%39:i32 = var
pc %37 1
pc %38 1
pc %39 1
infer %22


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = add %9, 9:i32 (hasExternalUses)
%11 = block 3
%12 = block 2
%13 = add %9, 8:i32 (hasExternalUses)
%14:i32 = var
%15 = phi %12, %13, %14
%16 = add %15, 1:i32 (hasExternalUses)
%17 = block 2
%18:i32 = var
%19 = add %18, -1:i32 (hasExternalUses)
%20 = phi %17, %16, %19
%21 = phi %11, %16, %15, %20
%22 = sub %10, %21 (hasExternalUses)
%23:i32 = var
%24 = slt %22, %23
%25 = block 2
%26:i32 = var
%27 = ne %26, 0:i32
blockpc %25 0 %27 1
%28 = eq %26, 0:i32
blockpc %25 1 %28 1
%29:i32 = var
%30:i32 = var
%31 = phi %25, %29, %30
%32 = slt 0:i32, %31
blockpc %2 0 %32 1
%33:i32 = var
blockpc %2 1 %33 1
%34:i32 = var
blockpc %12 0 %34 1
%35:i32 = var
blockpc %12 1 %35 1
%36:i32 = var
blockpc %17 0 %36 1
%37:i32 = var
blockpc %17 1 %37 1
%38:i32 = var
%39:i32 = var
%40:i32 = var
pc %38 1
pc %39 1
pc %40 1
infer %24


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = add %10, 9:i32 (hasExternalUses)
%12 = block 3
%13 = block 2
%14 = add %10, 8:i32 (hasExternalUses)
%15:i32 = var
%16 = phi %13, %14, %15
%17 = add %16, 1:i32 (hasExternalUses)
%18 = block 2
%19:i32 = var
%20 = add %19, -1:i32 (hasExternalUses)
%21 = phi %18, %17, %20
%22 = phi %12, %17, %16, %21
%23 = sub %11, %22 (hasExternalUses)
%24 = sub %0, %23
%25 = block 2
%26:i32 = var
%27 = ne %26, 0:i32
blockpc %25 0 %27 1
%28 = eq %26, 0:i32
blockpc %25 1 %28 1
%29:i32 = var
%30:i32 = var
%31 = phi %25, %29, %30
%32 = slt 0:i32, %31
blockpc %3 0 %32 1
%33:i32 = var
blockpc %3 1 %33 1
%34:i32 = var
blockpc %13 0 %34 1
%35:i32 = var
blockpc %13 1 %35 1
%36:i32 = var
blockpc %18 0 %36 1
%37:i32 = var
blockpc %18 1 %37 1
%38:i32 = var
%39:i32 = var
%40:i32 = var
pc %38 1
pc %39 1
pc %40 1
infer %24


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3:i32 = var
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %5, %6
%8:i32 = var
%9 = add %8, -9:i32
%10 = slt %7, %9
blockpc %4 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %4 1 %12 1
%13 = block 2
%14:i32 = var
%15 = ne %14, 0:i32
blockpc %13 0 %15 1
%16 = eq %14, 0:i32
blockpc %13 1 %16 1
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %23, %26, %27
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33 = phi %29, %32, %27
%34 = phi %20, %28, %33
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47:i32 = var
%48 = phi %44, %43, %47
%49 = phi %40, %43, %48
%50 = phi %38, %39, %49
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54:i32 = var
%55:i32 = var
%56 = phi %51, %54, %55
%57 = phi %35, %50, %56
%58 = phi %17, %34, %57
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62 = block 2
%63:i32 = var
blockpc %62 0 %63 1
%64:i32 = var
blockpc %62 1 %64 1
%65 = block 2
%66:i32 = var
blockpc %65 0 %66 1
%67:i32 = var
blockpc %65 1 %67 1
%68:i32 = var
%69:i32 = var
%70 = phi %65, %68, %69
%71 = phi %62, %70, %58
%72 = phi %59, %71, %58
%73 = phi %13, %58, %72
%74 = phi %4, %73, %58
%75 = phi %2, %3, %74
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79:i32 = var
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84 = block 2
%85:i32 = var
blockpc %84 0 %85 1
%86:i32 = var
blockpc %84 1 %86 1
%87:i32 = var
%88 = block 2
%89:i32 = var
blockpc %88 0 %89 1
%90:i32 = var
blockpc %88 1 %90 1
%91:i32 = var
%92 = block 2
%93:i32 = var
blockpc %92 0 %93 1
%94:i32 = var
blockpc %92 1 %94 1
%95:i32 = var
%96:i32 = var
%97 = phi %92, %95, %96
%98 = phi %20, %97, %95
%99 = phi %88, %91, %98
%100:i32 = var
%101 = block 2
%102:i32 = var
blockpc %101 0 %102 1
%103:i32 = var
blockpc %101 1 %103 1
%104:i32 = var
%105:i32 = var
%106 = phi %101, %104, %105
%107 = phi %38, %100, %106
%108:i32 = var
%109 = phi %35, %107, %108
%110 = phi %17, %99, %109
%111 = phi %84, %87, %110
%112 = phi %4, %111, %110
%113 = phi %80, %83, %112
%114 = phi %2, %79, %113
%115:i32 = var
%116 = phi %76, %114, %115
%117 = ult %75, %116
%118:i32 = zext %117
%119:i32 = var
%120 = add %119, 0:i32; Replace bad zext operation
%121 = and %118, %120
%122 = ne %121, 0:i32
%123:i32 = var
%124:i32 = var
pc %122 1
pc %123 1
pc %124 1
infer %1


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32 (hasExternalUses)
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = add %4, -4:i32 (hasExternalUses)
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = add %10, %11 (hasExternalUses)
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = phi %14, %15, %12
%17 = phi %13, %16, %12
%18 = phi %9, %12, %17
%19 = add %18, 4:i32 (hasExternalUses)
%20 = block 2
%21 = block 2
%22 = block 2
%23 = block 2
%24 = block 2
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %26
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %30
%32 = phi %23, %27, %31
%33 = block 2
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %36
%38 = block 2
%39:i32 = var
%40 = phi %38, %39, %36
%41 = phi %33, %37, %40
%42 = phi %22, %32, %41
%43:i32 = var
%44 = add %42, %43 (hasExternalUses)
%45 = block 2
%46:i32 = var
%47:i32 = var
%48 = phi %45, %46, %47
%49 = phi %33, %48, %46
%50 = phi %21, %44, %49
%51:i32 = var
%52 = block 2
%53:i32 = var
%54:i32 = var
%55 = phi %52, %53, %54
%56 = phi %24, %51, %55
%57:i32 = var
%58 = phi %23, %56, %57
%59 = phi %20, %50, %58
%60 = phi %8, %19, %59
%61 = phi %7, %60, %59
%62 = phi %5, %6, %61
%63 = phi %3, %4, %62
%64:i32 = var
%65 = phi %2, %63, %64
%66 = ult %1, %65
%67:i32 = var
blockpc %2 0 %67 1
%68:i32 = var
blockpc %2 1 %68 1
%69:i32 = var
blockpc %5 0 %69 1
%70:i32 = var
blockpc %5 1 %70 1
%71:i32 = var
blockpc %7 0 %71 1
%72:i32 = var
blockpc %7 1 %72 1
%73:i32 = var
blockpc %8 0 %73 1
%74:i32 = var
blockpc %8 1 %74 1
%75:i32 = var
blockpc %9 0 %75 1
%76:i32 = var
blockpc %9 1 %76 1
%77:i32 = var
blockpc %13 0 %77 1
%78:i32 = var
blockpc %13 1 %78 1
%79:i32 = var
blockpc %14 0 %79 1
%80:i32 = var
blockpc %14 1 %80 1
%81:i32 = var
blockpc %20 0 %81 1
%82:i32 = var
blockpc %20 1 %82 1
%83:i32 = var
blockpc %21 0 %83 1
%84:i32 = var
blockpc %21 1 %84 1
%85:i32 = var
blockpc %22 0 %85 1
%86:i32 = var
blockpc %22 1 %86 1
%87:i32 = var
blockpc %23 0 %87 1
%88:i32 = var
blockpc %23 1 %88 1
%89:i32 = var
blockpc %28 0 %89 1
%90:i32 = var
blockpc %28 1 %90 1
%91:i32 = var
blockpc %33 0 %91 1
%92:i32 = var
blockpc %33 1 %92 1
%93:i32 = var
blockpc %34 0 %93 1
%94:i32 = var
blockpc %34 1 %94 1
%95:i32 = var
blockpc %38 0 %95 1
%96:i32 = var
blockpc %38 1 %96 1
%97:i32 = var
blockpc %45 0 %97 1
%98:i32 = var
blockpc %45 1 %98 1
%99:i32 = var
blockpc %52 0 %99 1
%100:i32 = var
blockpc %52 1 %100 1
%101:i32 = var
%102:i32 = var
%103:i32 = var
pc %101 1
pc %102 1
pc %103 1
infer %66


; start LHS (in $11)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8:i32 = var
%9 = phi %3, %7, %8
%10 = phi %1, %2, %9
%11 = add %10, 9:i32 (hasExternalUses)
%12 = block 3
%13 = block 2
%14 = add %10, 8:i32 (hasExternalUses)
%15:i32 = var
%16 = phi %13, %14, %15
%17 = add %16, 1:i32 (hasExternalUses)
%18 = block 2
%19:i32 = var
%20 = add %19, -1:i32 (hasExternalUses)
%21 = phi %18, %17, %20
%22 = phi %12, %17, %16, %21
%23 = sub %11, %22 (hasExternalUses)
%24 = sub %0, %23 (hasExternalUses)
%25 = slt -1:i32, %24
%26 = block 2
%27:i32 = var
%28 = ne %27, 0:i32
blockpc %26 0 %28 1
%29:i32 = var
blockpc %26 1 %29 1
%30:i32 = var
%31:i32 = var
%32 = phi %26, %30, %31
%33 = slt 0:i32, %32
blockpc %3 0 %33 1
%34:i32 = var
blockpc %3 1 %34 1
%35:i32 = var
blockpc %13 0 %35 1
%36:i32 = var
blockpc %13 1 %36 1
%37:i32 = var
blockpc %18 0 %37 1
%38:i32 = var
blockpc %18 1 %38 1
%39:i32 = var
%40:i32 = var
%41:i32 = var
pc %39 1
pc %40 1
pc %41 1
infer %25


; start LHS (in $11)
%0:i32 = var
%1 = add %0, 4:i32 (hasExternalUses)
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = add %4, -4:i32 (hasExternalUses)
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, %10
%15 = phi %11, %14, %10
%16 = phi %9, %10, %15
%17 = add %16, 4:i32 (hasExternalUses)
%18 = block 2
%19 = block 2
%20:i32 = var
%21 = block 2
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %24
%26 = phi %21, %25, %23
%27 = phi %19, %20, %26
%28 = block 2
%29 = block 2
%30:i32 = var
%31 = block 2
%32:i32 = var
%33:i32 = var
%34 = phi %31, %32, %33
%35 = phi %29, %30, %34
%36:i32 = var
%37 = phi %28, %35, %36
%38 = phi %18, %27, %37
%39 = phi %8, %17, %38
%40 = phi %7, %39, %38
%41 = phi %5, %6, %40
%42 = phi %3, %4, %41
%43:i32 = var
%44 = phi %2, %42, %43
%45 = ult %1, %44
%46:i32 = zext %45
%47:i32 = var
%48 = add %47, 0:i32; Replace bad zext operation
%49 = and %46, %48
%50:i32 = var
blockpc %2 0 %50 1
%51:i32 = var
blockpc %2 1 %51 1
%52:i32 = var
blockpc %5 0 %52 1
%53:i32 = var
blockpc %5 1 %53 1
%54:i32 = var
blockpc %7 0 %54 1
%55:i32 = var
blockpc %7 1 %55 1
%56:i32 = var
blockpc %8 0 %56 1
%57:i32 = var
blockpc %8 1 %57 1
%58:i32 = var
blockpc %9 0 %58 1
%59:i32 = var
blockpc %9 1 %59 1
%60:i32 = var
blockpc %11 0 %60 1
%61:i32 = var
blockpc %11 1 %61 1
%62:i32 = var
blockpc %12 0 %62 1
%63:i32 = var
blockpc %12 1 %63 1
%64:i32 = var
blockpc %18 0 %64 1
%65:i32 = var
blockpc %18 1 %65 1
%66:i32 = var
blockpc %19 0 %66 1
%67:i32 = var
blockpc %19 1 %67 1
%68:i32 = var
blockpc %21 0 %68 1
%69:i32 = var
blockpc %21 1 %69 1
%70:i32 = var
blockpc %22 0 %70 1
%71:i32 = var
blockpc %22 1 %71 1
%72:i32 = var
blockpc %28 0 %72 1
%73:i32 = var
blockpc %28 1 %73 1
%74:i32 = var
blockpc %31 0 %74 1
%75:i32 = var
blockpc %31 1 %75 1
%76:i32 = var
%77:i32 = var
%78:i32 = var
pc %76 1
pc %77 1
pc %78 1
infer %49


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9:i32 = var
%10 = phi %4, %8, %9
%11 = phi %2, %3, %10
%12 = add %11, 9:i32 (hasExternalUses)
%13 = block 3
%14 = block 2
%15 = add %11, 8:i32 (hasExternalUses)
%16:i32 = var
%17 = phi %14, %15, %16
%18 = add %17, 1:i32 (hasExternalUses)
%19 = block 2
%20:i32 = var
%21 = add %20, -1:i32 (hasExternalUses)
%22 = phi %19, %18, %21
%23 = phi %13, %18, %17, %22
%24 = sub %12, %23 (hasExternalUses)
%25 = sub %1, %24 (hasExternalUses)
%26 = block 3
%27 = block 2
%28 = block 2
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32 = phi %5, %30, %31
%33 = block 2
%34:i32 = var
%35 = phi %33, 6:i32, %34
%36 = phi %4, %32, %35
%37 = phi %2, %29, %36
%38:i32 = var
%39 = add %37, %38 (hasExternalUses)
%40 = add %39, -1:i32
%41:i32 = var
%42 = block 2
%43 = block 2
%44 = block 2
%45 = block 2
%46:i32 = var
%47:i32 = var
%48 = phi %45, %46, %47
%49 = phi %44, %48, 0:i32
%50 = block 2
%51 = block 2
%52:i32 = var
%53:i32 = var
%54 = phi %51, %52, %53
%55 = phi %50, %54, %49
%56 = phi %43, %49, %55
%57 = phi %42, %56, %49
%58 = phi %2, %41, %57
%59 = sub %40, %58 (hasExternalUses)
%60:i32 = var
%61 = phi %28, %59, %60
%62 = block 2
%63:i32 = var
%64 = phi %62, %63, 0:i32
%65 = phi %27, %61, %64
%66 = block 2
%67 = block 2
%68:i32 = var
%69 = phi %67, %68, 0:i32
%70 = phi %66, %61, %69
%71 = block 2
%72 = phi %71, %61, %37
%73 = phi %26, %65, %70, %72
%74 = phi %0, %25, %73
%75 = add %74, 18:i32
%76:i32 = var
blockpc %0 0 %76 1
%77:i32 = var
blockpc %0 1 %77 1
%78:i32 = var
blockpc %4 0 %78 1
%79:i32 = var
blockpc %4 1 %79 1
%80:i32 = var
blockpc %14 0 %80 1
%81:i32 = var
blockpc %14 1 %81 1
%82:i32 = var
blockpc %19 0 %82 1
%83:i32 = var
blockpc %19 1 %83 1
%84:i32 = var
blockpc %27 0 %84 1
%85:i32 = var
blockpc %27 1 %85 1
%86:i32 = var
blockpc %28 0 %86 1
%87:i32 = var
blockpc %28 1 %87 1
%88:i32 = var
blockpc %33 0 %88 1
%89:i32 = var
blockpc %33 1 %89 1
%90:i32 = var
blockpc %42 0 %90 1
%91:i32 = var
blockpc %42 1 %91 1
%92:i32 = var
blockpc %43 0 %92 1
%93:i32 = var
blockpc %43 1 %93 1
%94:i32 = var
blockpc %44 0 %94 1
%95:i32 = var
blockpc %44 1 %95 1
%96:i32 = var
blockpc %45 0 %96 1
%97:i32 = var
blockpc %45 1 %97 1
%98:i32 = var
blockpc %50 0 %98 1
%99:i32 = var
blockpc %50 1 %99 1
%100:i32 = var
blockpc %51 0 %100 1
%101:i32 = var
blockpc %51 1 %101 1
%102:i32 = var
blockpc %62 0 %102 1
%103:i32 = var
blockpc %62 1 %103 1
%104:i32 = var
blockpc %66 0 %104 1
%105:i32 = var
blockpc %66 1 %105 1
%106:i32 = var
blockpc %67 0 %106 1
%107:i32 = var
blockpc %67 1 %107 1
%108:i32 = var
blockpc %71 0 %108 1
%109:i32 = var
blockpc %71 1 %109 1
%110:i32 = var
%111:i32 = var
pc %110 1
pc %111 1
infer %75


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = add %7, 540:i32 (hasExternalUses)
%9 = add %8, 12:i32 (hasExternalUses)
%10 = phi %2, %6, %9
%11 = phi %0, %1, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = add %14, -1:i32 (hasExternalUses)
%16:i32 = var
%17 = phi %13, %15, %16
%18 = add %17, -2:i32 (hasExternalUses)
%19 = phi %12, 0:i32, %18
%20 = sub %11, %19
%21 = block 2
%22:i32 = var
%23 = ne %22, 0:i32
blockpc %21 0 %23 1
%24 = eq %22, 0:i32
blockpc %21 1 %24 1
%25:i32 = var
%26 = add %25, -28:i32
%27:i32 = var
%28 = phi %21, %26, %27
%29 = slt 0:i32, %28
blockpc %2 0 %29 1
%30:i32 = var
blockpc %2 1 %30 1
%31:i32 = var
blockpc %12 0 %31 1
%32:i32 = var
blockpc %12 1 %32 1
%33:i32 = var
blockpc %13 0 %33 1
%34:i32 = var
blockpc %13 1 %34 1
%35:i32 = var
%36:i32 = var
pc %35 1
pc %36 1
infer %20


; start LHS (in $11)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10 = xor %9, 8192:i32
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = add %15, -28:i32
%17:i32 = var
%18 = phi %11, %16, %17
%19 = slt 0:i32, %18
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22 = block 2
%23:i64 = var
%24 = slt %23, 0:i64
blockpc %22 0 %24 1
%25:i32 = var
blockpc %22 1 %25 1
%26:i64 = var
%27 = phi %22, %26, %23
%28 = and %27, 9218868437227405312:i64
%29 = eq %28, 9218868437227405312:i64
%30:i32 = zext %29
%31 = eq %30, 0:i32
pc %31 1
infer %10


; start LHS (in $11)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = add %4, 2:i32
%6:i32 = var
%7 = add %6, 12:i32 (hasExternalUses)
%8 = add %5, %7
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = add %12, -2:i32 (hasExternalUses)
%14 = sub %8, %13 (hasExternalUses)
%15 = phi %3, %14, 0:i32
%16 = phi %2, 0:i32, %15
%17:i32 = var
%18 = sub %7, %17
%19 = sub %18, %13
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = add %22, 1:i32 (hasExternalUses)
%24 = add %22, 2:i32 (hasExternalUses)
%25 = phi %21, %23, %24
%26 = phi %20, %25, %23
%27 = add %19, %26 (hasExternalUses)
%28 = phi %1, %16, %27
%29 = block 2
%30:i32 = var
%31 = phi %29, 1:i32, %30
%32 = or %31, 2:i32 (hasExternalUses)
%33 = add %28, %32 (hasExternalUses)
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %36
%38 = phi %0, %33, %37
%39:i32 = var
%40 = block 2
%41:i32 = var
%42 = block 2
%43 = block 2
%44:i32 = var
%45:i32 = var
%46 = phi %43, %44, %45
%47 = phi %42, %46, %39
%48 = phi %40, %41, %47
%49 = phi %34, %39, %48
%50 = phi %0, %39, %49
%51 = slt %38, %50
%52:i32 = var
blockpc %1 0 %52 1
%53:i32 = var
blockpc %1 1 %53 1
%54:i32 = var
blockpc %2 0 %54 1
%55:i32 = var
blockpc %2 1 %55 1
%56:i32 = var
blockpc %3 0 %56 1
%57:i32 = var
blockpc %3 1 %57 1
%58:i32 = var
blockpc %9 0 %58 1
%59:i32 = var
blockpc %9 1 %59 1
%60:i32 = var
blockpc %20 0 %60 1
%61:i32 = var
blockpc %20 1 %61 1
%62:i32 = var
blockpc %21 0 %62 1
%63:i32 = var
blockpc %21 1 %63 1
%64:i32 = var
blockpc %29 0 %64 1
%65:i32 = var
blockpc %29 1 %65 1
%66:i32 = var
blockpc %34 0 %66 1
%67:i32 = var
blockpc %34 1 %67 1
%68:i32 = var
blockpc %42 0 %68 1
%69:i32 = var
blockpc %42 1 %69 1
infer %51


; function: $12

; start LHS (in $12)
%0 = add 0:i32, 8:i32
infer %0


; start LHS (in $12)
%0 = add 0:i32, 8:i32
%1 = sub %0, 1:i32
infer %1


; start LHS (in $12)
%0 = add 0:i32, 8:i32
infer %0


; start LHS (in $12)
%0 = add 0:i32, 8:i32
%1 = sub %0, 1:i32
infer %1


; start LHS (in $12)
%0:i32 = var
%1 = add 0:i32, 8:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
infer %3


; start LHS (in $12)
%0 = add 0:i32, 8:i32
%1 = sub %0, 1:i32
%2 = xor %1, -1:i32
infer %2


; start LHS (in $12)
%0:i32 = var
%1 = add 0:i32, 8:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 8:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6
infer %7


; start LHS (in $12)
%0:i32 = var
%1 = add 0:i32, 8:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 8:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6 (hasExternalUses)
%8 = add %7, 8:i32
infer %8


; function: $13

; start LHS (in $13)
%0:i32 = var
%1 = add %0, 224:i32
infer %1


; start LHS (in $13)
%0:i32 = var
%1:i32 = var
%2 = sle %0, %1
infer %2


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 208:i32
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 160:i32
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 80:i32
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 160:i32 (hasExternalUses)
%2 = add %1, 8:i32
infer %2


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 160:i32 (hasExternalUses)
%2 = add %1, 16:i32
infer %2


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 160:i32 (hasExternalUses)
%2 = add %1, 24:i32
infer %2


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 160:i32 (hasExternalUses)
%2 = add %1, 32:i32
infer %2


; start LHS (in $13)
%0:i32 = var
%1 = slt %0, 0:i32
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 76:i32
%2:i32 = var
%3 = slt %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = slt -1:i32, %0
%2:i32 = var
%3 = slt %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = and %0, 32:i32
%2:i32 = var
%3 = slt %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 74:i32
%2:i32 = var
%3 = slt %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = slt %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = slt %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $13)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = slt %2, 1:i32
%4:i32 = var
%5 = slt %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $13)
%0:i32 = var
%1 = and %0, -33:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = slt %4, 1:i32
%6:i32 = var
%7 = slt %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
pc %5 1
pc %9 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 48:i32
%2:i32 = var
%3 = slt %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = slt %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 44:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = slt %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %3 1
pc %7 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 28:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = slt %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %3 1
pc %7 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = slt %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %3 1
pc %7 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = slt %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %3 1
pc %7 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 80:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = slt %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %3 1
pc %7 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = slt %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %3 1
pc %7 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = add %0, 36:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = var
%9 = slt %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %5 1
pc %7 1
pc %11 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = and %0, 3:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = var
%9 = slt %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %5 1
pc %7 1
pc %11 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = and %0, 3:i32
%2 = add %1, 10:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = var
%10 = slt %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %6 1
pc %8 1
pc %12 1
infer %2


; start LHS (in $13)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = var
%9 = slt %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %5 1
pc %7 1
pc %11 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = and %0, 32:i32
%2:i32 = var
%3 = slt %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $13)
%0:i32 = var
%1 = and %0, 32:i32
%2 = eq %1, 0:i32
%3:i32 = var
%4 = slt %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $13)
%0:i32 = var
%1:i32 = var
%2 = and %1, 32:i32
%3 = or %0, %2
%4:i32 = var
%5 = slt %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $13)
%0 = block 2
%1:i32 = var
%2 = phi %0, %1, 0:i32
%3 = eq %2, 0:i32
%4:i32 = var
%5 = slt -1:i32, %4
blockpc %0 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %0 1 %7 1
%8:i32 = var
%9 = slt %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %11 1
infer %3


; start LHS (in $13)
%0 = block 2
%1:i32 = var
%2 = phi %0, %1, 0:i32
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = slt -1:i32, %6
blockpc %0 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %0 1 %9 1
%10:i32 = var
%11 = slt %10, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
pc %13 1
infer %5


; function: $14

; start LHS (in $14)
%0:i32 = var
%1 = add %0, 64:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1:i32 = var
%2 = sle %0, %1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 56:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 40:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 48:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 60:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = ne %0, 0:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 40:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 39:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 48:i32 (hasExternalUses)
%2 = add %1, 4:i32
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = slt -1:i32, %0
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = sub 2147483647:i32, %0
%2 = slt -1:i32, %0
pc %2 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = sub 2147483647:i32, %0
%2:i32 = var
%3 = slt %1, %2
%4 = slt -1:i32, %0
pc %4 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3 = sub 2147483647:i32, %1
%4 = slt %3, %0
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = slt -1:i32, %1
pc %6 1
pc %7 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 0:i32
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = sub %2, 0:i32
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2 = phi %0, 10:i32, %1
%3 = eq %2, 10:i32
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 1:i32
%2 = block 2
%3:i32 = var
%4 = phi %2, 10:i32, %3
%5 = eq %4, 10:i32
pc %5 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = block 2
%3:i32 = var
%4 = phi %2, 10:i32, %3
%5 = eq %4, 10:i32
pc %5 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = block 2
%4:i32 = var
%5 = phi %3, 10:i32, %4
%6 = eq %5, 10:i32
pc %6 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 37:i32
%4 = block 2
%5:i32 = var
%6 = phi %4, 10:i32, %5
%7 = eq %6, 10:i32
pc %7 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 37:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = phi %6, 10:i32, %7
%9 = eq %8, 10:i32
pc %9 1
infer %5


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 1:i32
%2 = block 2
%3:i32 = var
%4 = phi %2, 10:i32, %3
%5 = eq %4, 10:i32
pc %5 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 2:i32
%2 = block 2
%3:i32 = var
%4 = phi %2, 10:i32, %3
%5 = eq %4, 10:i32
pc %5 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = block 2
%3:i32 = var
%4 = phi %2, 10:i32, %3
%5 = eq %4, 10:i32
pc %5 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = block 2
%4:i32 = var
%5 = phi %3, 10:i32, %4
%6 = eq %5, 10:i32
pc %6 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 37:i32
%4 = block 2
%5:i32 = var
%6 = phi %4, 10:i32, %5
%7 = eq %6, 10:i32
pc %7 1
infer %3


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = add %1, 1:i32
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10:i32 = var
%11:i32 = var
%12 = phi %0, %10, %11
%13 = sub %9, %12
%14:i32 = var
%15 = phi %3, 10:i32, %14
%16 = eq %15, 10:i32
blockpc %2 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %2 1 %18 1
infer %13


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = add %1, 1:i32
%8 = phi %2, %6, %7
%9 = phi %0, %1, %8
%10:i32 = var
%11:i32 = var
%12 = phi %0, %10, %11
%13 = sub %9, %12 (hasExternalUses)
%14 = eq %13, 0:i32
%15:i32 = var
%16 = phi %3, 10:i32, %15
%17 = eq %16, 10:i32
blockpc %2 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %2 1 %19 1
infer %14


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 36:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 36:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
pc %5 1
pc %9 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 36:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
pc %5 1
pc %9 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = eq %5, 36:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
pc %6 1
pc %10 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -48:i32
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = eq %6, 36:i32
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %7 1
pc %11 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = phi %2, 3:i32, 1:i32
%4 = phi %1, 1:i32, %3
%5 = add %0, %4
%6:i32 = var
%7 = eq %6, 0:i32
blockpc %1 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %1 1 %9 1
%10:i32 = var
%11 = shl %10, 24:i32
%12 = ashr %11, 24:i32
%13 = eq %12, 36:i32
blockpc %2 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %2 1 %15 1
infer %5


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -32:i32
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -32:i32 (hasExternalUses)
%4 = shl 1:i32, %3
infer %4


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -32:i32 (hasExternalUses)
%4 = shl 1:i32, %3
%5 = and %4, 75913:i32
infer %5


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -32:i32 (hasExternalUses)
%4 = ult 31:i32, %3
infer %4


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -32:i32 (hasExternalUses)
%4 = shl 1:i32, %3
%5 = and %4, 75913:i32
%6 = eq %5, 0:i32
infer %6


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -32:i32 (hasExternalUses)
%4 = ult 31:i32, %3
%5:i32 = zext %4
%6 = shl 1:i32, %3
%7 = and %6, 75913:i32
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = or %5, %9
infer %10


; start LHS (in $14)
%0:i32 = var
%1 = shl 1:i32, %0
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = add %4, -32:i32
%6 = ult 31:i32, %5
%7:i32 = zext %6
%8 = shl 1:i32, %5
%9 = and %8, 75913:i32
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = or %7, %11
%13 = eq %12, 0:i32
pc %13 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl 1:i32, %0
%2:i32 = var
%3 = or %1, %2
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = add %6, -32:i32
%8 = ult 31:i32, %7
%9:i32 = zext %8
%10 = shl 1:i32, %7
%11 = and %10, 75913:i32
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = or %9, %13
%15 = eq %14, 0:i32
pc %15 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = add %4, -32:i32
%6 = ult 31:i32, %5
%7:i32 = zext %6
%8 = shl 1:i32, %5
%9 = and %8, 75913:i32
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = or %7, %11
%13 = eq %12, 0:i32
pc %13 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = add %4, -32:i32
%6 = ult 31:i32, %5
%7:i32 = zext %6
%8 = shl 1:i32, %5
%9 = and %8, 75913:i32
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = or %7, %11
%13 = eq %12, 0:i32
pc %13 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = add %5, -32:i32
%7 = ult 31:i32, %6
%8:i32 = zext %7
%9 = shl 1:i32, %6
%10 = and %9, 75913:i32
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = or %8, %12
%14 = eq %13, 0:i32
pc %14 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -32:i32
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = add %6, -32:i32
%8 = ult 31:i32, %7
%9:i32 = zext %8
%10 = shl 1:i32, %7
%11 = and %10, 75913:i32
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = or %9, %13
%15 = eq %14, 0:i32
pc %15 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -32:i32 (hasExternalUses)
%4 = shl 1:i32, %3
%5:i32 = var
%6 = shl %5, 24:i32
%7 = ashr %6, 24:i32
%8 = add %7, -32:i32
%9 = ult 31:i32, %8
%10:i32 = zext %9
%11 = shl 1:i32, %8
%12 = and %11, 75913:i32
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = or %10, %14
%16 = eq %15, 0:i32
pc %16 1
infer %4


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -32:i32 (hasExternalUses)
%4 = shl 1:i32, %3
%5 = and %4, 75913:i32
%6:i32 = var
%7 = shl %6, 24:i32
%8 = ashr %7, 24:i32
%9 = add %8, -32:i32
%10 = ult 31:i32, %9
%11:i32 = zext %10
%12 = shl 1:i32, %9
%13 = and %12, 75913:i32
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = or %11, %15
%17 = eq %16, 0:i32
pc %17 1
infer %5


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -32:i32 (hasExternalUses)
%4 = ult 31:i32, %3
%5:i32 = var
%6 = shl %5, 24:i32
%7 = ashr %6, 24:i32
%8 = add %7, -32:i32
%9 = ult 31:i32, %8
%10:i32 = zext %9
%11 = shl 1:i32, %8
%12 = and %11, 75913:i32
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = or %10, %14
%16 = eq %15, 0:i32
pc %16 1
infer %4


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -32:i32 (hasExternalUses)
%4 = shl 1:i32, %3
%5 = and %4, 75913:i32
%6 = eq %5, 0:i32
%7:i32 = var
%8 = shl %7, 24:i32
%9 = ashr %8, 24:i32
%10 = add %9, -32:i32
%11 = ult 31:i32, %10
%12:i32 = zext %11
%13 = shl 1:i32, %10
%14 = and %13, 75913:i32
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = or %12, %16
%18 = eq %17, 0:i32
pc %18 1
infer %6


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -32:i32 (hasExternalUses)
%4 = ult 31:i32, %3
%5:i32 = zext %4
%6 = shl 1:i32, %3
%7 = and %6, 75913:i32
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = or %5, %9
%11:i32 = var
%12 = shl %11, 24:i32
%13 = ashr %12, 24:i32
%14 = add %13, -32:i32
%15 = ult 31:i32, %14
%16:i32 = zext %15
%17 = shl 1:i32, %14
%18 = and %17, 75913:i32
%19 = eq %18, 0:i32
%20:i32 = zext %19
%21 = or %16, %20
%22 = eq %21, 0:i32
pc %22 1
infer %10


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = shl %3, 24:i32
%5 = shl %1, 24:i32
%6 = ashr %5, 24:i32
%7 = add %6, -32:i32
%8 = ult 31:i32, %7
%9:i32 = zext %8
%10 = shl 1:i32, %7
%11 = and %10, 75913:i32
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = or %9, %13
%15 = ne %14, 0:i32
blockpc %0 0 %15 1
%16 = eq %14, 0:i32
blockpc %0 1 %16 1
infer %4


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = shl %1, 24:i32
%7 = ashr %6, 24:i32
%8 = add %7, -32:i32
%9 = ult 31:i32, %8
%10:i32 = zext %9
%11 = shl 1:i32, %8
%12 = and %11, 75913:i32
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = or %10, %14
%16 = ne %15, 0:i32
blockpc %0 0 %16 1
%17 = eq %15, 0:i32
blockpc %0 1 %17 1
infer %5


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = eq %5, 42:i32
%7 = shl %1, 24:i32
%8 = ashr %7, 24:i32
%9 = add %8, -32:i32
%10 = ult 31:i32, %9
%11:i32 = zext %10
%12 = shl 1:i32, %9
%13 = and %12, 75913:i32
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = or %11, %15
%17 = ne %16, 0:i32
blockpc %0 0 %17 1
%18 = eq %16, 0:i32
blockpc %0 1 %18 1
infer %6


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = phi %3, 3:i32, 1:i32
%5 = phi %2, 1:i32, %4
%6 = add %1, %5 (hasExternalUses)
%7:i32 = var
%8 = add %7, 1:i32 (hasExternalUses)
%9 = phi %0, %6, %8
%10 = add %9, 1:i32
%11:i32 = var
%12 = shl %11, 24:i32
%13 = ashr %12, 24:i32
%14 = add %13, -32:i32
%15 = ult 31:i32, %14
%16:i32 = zext %15
%17 = shl 1:i32, %14
%18 = and %17, 75913:i32
%19 = eq %18, 0:i32
%20:i32 = zext %19
%21 = or %16, %20
%22 = ne %21, 0:i32
blockpc %0 0 %22 1
%23 = eq %21, 0:i32
blockpc %0 1 %23 1
%24:i32 = var
%25 = eq %24, 0:i32
blockpc %2 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %2 1 %27 1
%28:i32 = var
blockpc %3 0 %28 1
%29:i32 = var
blockpc %3 1 %29 1
%30:i32 = var
pc %30 1
infer %10


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = block 2
%3:i32 = var
%4 = ult 31:i32, %3
%5:i32 = zext %4
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = or %5, %8
%10 = ne %9, 0:i32
blockpc %2 0 %10 1
%11 = eq %9, 0:i32
blockpc %2 1 %11 1
%12:i32 = var
%13:i32 = var
%14 = phi %2, %12, %13
%15 = shl %14, 24:i32
%16 = ashr %15, 24:i32
%17 = eq %16, 42:i32
pc %17 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = block 2
%4:i32 = var
%5 = ult 31:i32, %4
%6:i32 = zext %5
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = or %6, %9
%11 = ne %10, 0:i32
blockpc %3 0 %11 1
%12 = eq %10, 0:i32
blockpc %3 1 %12 1
%13:i32 = var
%14:i32 = var
%15 = phi %3, %13, %14
%16 = shl %15, 24:i32
%17 = ashr %16, 24:i32
%18 = eq %17, 42:i32
pc %18 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3:i32 = var
%4 = ult 31:i32, %3
%5:i32 = zext %4
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = or %5, %8
%10 = ne %9, 0:i32
blockpc %2 0 %10 1
%11 = eq %9, 0:i32
blockpc %2 1 %11 1
%12:i32 = var
%13:i32 = var
%14 = phi %2, %12, %13
%15 = shl %14, 24:i32
%16 = ashr %15, 24:i32
%17 = eq %16, 42:i32
pc %17 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = ult 31:i32, %7
%9:i32 = zext %8
%10:i32 = var
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = or %9, %12
%14 = ne %13, 0:i32
blockpc %6 0 %14 1
%15 = eq %13, 0:i32
blockpc %6 1 %15 1
%16:i32 = var
%17:i32 = var
%18 = phi %6, %16, %17
%19 = shl %18, 24:i32
%20 = ashr %19, 24:i32
%21 = eq %20, 42:i32
pc %5 1
pc %21 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = ult 31:i32, %7
%9:i32 = zext %8
%10:i32 = var
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = or %9, %12
%14 = ne %13, 0:i32
blockpc %6 0 %14 1
%15 = eq %13, 0:i32
blockpc %6 1 %15 1
%16:i32 = var
%17:i32 = var
%18 = phi %6, %16, %17
%19 = shl %18, 24:i32
%20 = ashr %19, 24:i32
%21 = eq %20, 42:i32
pc %5 1
pc %21 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = ult 31:i32, %8
%10:i32 = zext %9
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = or %10, %13
%15 = ne %14, 0:i32
blockpc %7 0 %15 1
%16 = eq %14, 0:i32
blockpc %7 1 %16 1
%17:i32 = var
%18:i32 = var
%19 = phi %7, %17, %18
%20 = shl %19, 24:i32
%21 = ashr %20, 24:i32
%22 = eq %21, 42:i32
pc %6 1
pc %22 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 36:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = block 2
%9:i32 = var
%10 = ult 31:i32, %9
%11:i32 = zext %10
%12:i32 = var
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = or %11, %14
%16 = ne %15, 0:i32
blockpc %8 0 %16 1
%17 = eq %15, 0:i32
blockpc %8 1 %17 1
%18:i32 = var
%19:i32 = var
%20 = phi %8, %18, %19
%21 = shl %20, 24:i32
%22 = ashr %21, 24:i32
%23 = eq %22, 42:i32
pc %7 1
pc %23 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 36:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = block 2
%11:i32 = var
%12 = ult 31:i32, %11
%13:i32 = zext %12
%14:i32 = var
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = or %13, %16
%18 = ne %17, 0:i32
blockpc %10 0 %18 1
%19 = eq %17, 0:i32
blockpc %10 1 %19 1
%20:i32 = var
%21:i32 = var
%22 = phi %10, %20, %21
%23 = shl %22, 24:i32
%24 = ashr %23, 24:i32
%25 = eq %24, 42:i32
pc %5 1
pc %9 1
pc %25 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 36:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = block 2
%11:i32 = var
%12 = ult 31:i32, %11
%13:i32 = zext %12
%14:i32 = var
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = or %13, %16
%18 = ne %17, 0:i32
blockpc %10 0 %18 1
%19 = eq %17, 0:i32
blockpc %10 1 %19 1
%20:i32 = var
%21:i32 = var
%22 = phi %10, %20, %21
%23 = shl %22, 24:i32
%24 = ashr %23, 24:i32
%25 = eq %24, 42:i32
pc %5 1
pc %9 1
pc %25 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = eq %5, 36:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = block 2
%12:i32 = var
%13 = ult 31:i32, %12
%14:i32 = zext %13
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = or %14, %17
%19 = ne %18, 0:i32
blockpc %11 0 %19 1
%20 = eq %18, 0:i32
blockpc %11 1 %20 1
%21:i32 = var
%22:i32 = var
%23 = phi %11, %21, %22
%24 = shl %23, 24:i32
%25 = ashr %24, 24:i32
%26 = eq %25, 42:i32
pc %6 1
pc %10 1
pc %26 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -48:i32
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = eq %6, 36:i32
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12 = block 2
%13:i32 = var
%14 = ult 31:i32, %13
%15:i32 = zext %14
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = or %15, %18
%20 = ne %19, 0:i32
blockpc %12 0 %20 1
%21 = eq %19, 0:i32
blockpc %12 1 %21 1
%22:i32 = var
%23:i32 = var
%24 = phi %12, %22, %23
%25 = shl %24, 24:i32
%26 = ashr %25, 24:i32
%27 = eq %26, 42:i32
pc %7 1
pc %11 1
pc %27 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -48:i32
%4 = shl %3, 2:i32
%5:i32 = var
%6 = shl %5, 24:i32
%7 = ashr %6, 24:i32
%8 = eq %7, 36:i32
%9:i32 = var
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13 = block 2
%14:i32 = var
%15 = ult 31:i32, %14
%16:i32 = zext %15
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = or %16, %19
%21 = ne %20, 0:i32
blockpc %13 0 %21 1
%22 = eq %20, 0:i32
blockpc %13 1 %22 1
%23:i32 = var
%24:i32 = var
%25 = phi %13, %23, %24
%26 = shl %25, 24:i32
%27 = ashr %26, 24:i32
%28 = eq %27, 42:i32
pc %8 1
pc %12 1
pc %28 1
infer %4


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = add %6, -48:i32
%8 = shl %7, 2:i32
%9 = add %3, %8
%10:i32 = var
%11 = shl %10, 24:i32
%12 = ashr %11, 24:i32
%13 = eq %12, 36:i32
%14:i32 = var
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18 = block 2
%19:i32 = var
%20 = ult 31:i32, %19
%21:i32 = zext %20
%22:i32 = var
%23 = eq %22, 0:i32
%24:i32 = zext %23
%25 = or %21, %24
%26 = ne %25, 0:i32
blockpc %18 0 %26 1
%27 = eq %25, 0:i32
blockpc %18 1 %27 1
%28:i32 = var
%29:i32 = var
%30 = phi %18, %28, %29
%31 = shl %30, 24:i32
%32 = ashr %31, 24:i32
%33 = eq %32, 42:i32
pc %13 1
pc %17 1
pc %33 1
infer %9


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 36:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = block 2
%11:i32 = var
%12 = ult 31:i32, %11
%13:i32 = zext %12
%14:i32 = var
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = or %13, %16
%18 = ne %17, 0:i32
blockpc %10 0 %18 1
%19 = eq %17, 0:i32
blockpc %10 1 %19 1
%20:i32 = var
%21:i32 = var
%22 = phi %10, %20, %21
%23 = shl %22, 24:i32
%24 = ashr %23, 24:i32
%25 = eq %24, 42:i32
pc %5 1
pc %9 1
pc %25 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = eq %5, 36:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = block 2
%12:i32 = var
%13 = ult 31:i32, %12
%14:i32 = zext %13
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = or %14, %17
%19 = ne %18, 0:i32
blockpc %11 0 %19 1
%20 = eq %18, 0:i32
blockpc %11 1 %20 1
%21:i32 = var
%22:i32 = var
%23 = phi %11, %21, %22
%24 = shl %23, 24:i32
%25 = ashr %24, 24:i32
%26 = eq %25, 42:i32
pc %6 1
pc %10 1
pc %26 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -48:i32
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = eq %6, 36:i32
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12 = block 2
%13:i32 = var
%14 = ult 31:i32, %13
%15:i32 = zext %14
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = or %15, %18
%20 = ne %19, 0:i32
blockpc %12 0 %20 1
%21 = eq %19, 0:i32
blockpc %12 1 %21 1
%22:i32 = var
%23:i32 = var
%24 = phi %12, %22, %23
%25 = shl %24, 24:i32
%26 = ashr %25, 24:i32
%27 = eq %26, 42:i32
pc %7 1
pc %11 1
pc %27 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -48:i32
%4 = shl %3, 3:i32
%5:i32 = var
%6 = shl %5, 24:i32
%7 = ashr %6, 24:i32
%8 = eq %7, 36:i32
%9:i32 = var
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13 = block 2
%14:i32 = var
%15 = ult 31:i32, %14
%16:i32 = zext %15
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = or %16, %19
%21 = ne %20, 0:i32
blockpc %13 0 %21 1
%22 = eq %20, 0:i32
blockpc %13 1 %22 1
%23:i32 = var
%24:i32 = var
%25 = phi %13, %23, %24
%26 = shl %25, 24:i32
%27 = ashr %26, 24:i32
%28 = eq %27, 42:i32
pc %8 1
pc %12 1
pc %28 1
infer %4


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = add %6, -48:i32
%8 = shl %7, 3:i32
%9 = add %3, %8
%10:i32 = var
%11 = shl %10, 24:i32
%12 = ashr %11, 24:i32
%13 = eq %12, 36:i32
%14:i32 = var
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18 = block 2
%19:i32 = var
%20 = ult 31:i32, %19
%21:i32 = zext %20
%22:i32 = var
%23 = eq %22, 0:i32
%24:i32 = zext %23
%25 = or %21, %24
%26 = ne %25, 0:i32
blockpc %18 0 %26 1
%27 = eq %25, 0:i32
blockpc %18 1 %27 1
%28:i32 = var
%29:i32 = var
%30 = phi %18, %28, %29
%31 = shl %30, 24:i32
%32 = ashr %31, 24:i32
%33 = eq %32, 42:i32
pc %13 1
pc %17 1
pc %33 1
infer %9


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 3:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 36:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = block 2
%11:i32 = var
%12 = ult 31:i32, %11
%13:i32 = zext %12
%14:i32 = var
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = or %13, %16
%18 = ne %17, 0:i32
blockpc %10 0 %18 1
%19 = eq %17, 0:i32
blockpc %10 1 %19 1
%20:i32 = var
%21:i32 = var
%22 = phi %10, %20, %21
%23 = shl %22, 24:i32
%24 = ashr %23, 24:i32
%25 = eq %24, 42:i32
pc %5 1
pc %9 1
pc %25 1
infer %1


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = phi %5, 10:i32, %6
%8 = phi %4, %7, 0:i32
%9 = phi %2, %3, %8
%10 = phi %1, %9, 27:i32
%11 = phi %0, 27:i32, %10
%12 = eq %11, 27:i32
%13:i32 = var
%14 = eq %13, 0:i32
blockpc %0 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %0 1 %16 1
%17:i32 = var
%18 = shl %17, 24:i32
%19 = ashr %18, 24:i32
%20 = eq %19, 36:i32
blockpc %1 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %1 1 %22 1
%23 = eq %7, 10:i32
blockpc %4 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %4 1 %25 1
%26:i32 = var
pc %26 1
infer %12


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6 = phi %5, 1:i32, %4
%7 = phi %0, %4, %6
%8 = eq %7, 0:i32
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %0 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %0 1 %12 1
%13:i32 = var
%14 = shl %13, 24:i32
%15 = ashr %14, 24:i32
%16 = eq %15, 36:i32
blockpc %5 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %5 1 %18 1
%19 = block 2
%20:i32 = var
%21 = eq %20, 0:i32
blockpc %19 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %19 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
%33 = phi %31, 10:i32, %32
%34 = phi %28, %33, 0:i32
%35 = phi %1, %27, %34
%36 = phi %24, %35, 27:i32
%37 = phi %19, 27:i32, %36
%38 = eq %37, 27:i32
%39:i32 = var
pc %38 1
pc %39 1
infer %8


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6 = phi %5, 1:i32, %4
%7 = phi %0, %4, %6
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = eq %11, 0:i32
blockpc %0 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %0 1 %14 1
%15:i32 = var
%16 = shl %15, 24:i32
%17 = ashr %16, 24:i32
%18 = eq %17, 36:i32
blockpc %5 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %5 1 %20 1
%21 = block 2
%22:i32 = var
%23 = eq %22, 0:i32
blockpc %21 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %21 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
%35 = phi %33, 10:i32, %34
%36 = phi %30, %35, 0:i32
%37 = phi %1, %29, %36
%38 = phi %26, %37, 27:i32
%39 = phi %21, 27:i32, %38
%40 = eq %39, 27:i32
%41:i32 = var
pc %40 1
pc %41 1
infer %10


; start LHS (in $14)
%0 = add 0:i32, 4:i32
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = ne %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = eq %7, 0:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = block 2
%12:i32 = var
%13 = shl %12, 24:i32
%14 = ashr %13, 24:i32
%15 = eq %14, 36:i32
blockpc %11 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %11 1 %17 1
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, 10:i32, %21
%23 = eq %22, 10:i32
blockpc %19 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %19 1 %25 1
%26 = phi %19, %22, 0:i32
%27 = phi %1, %18, %26
%28 = phi %11, %27, 27:i32
%29 = phi %6, 27:i32, %28
%30 = eq %29, 27:i32
%31:i32 = var
pc %5 1
pc %30 1
pc %31 1
infer %0


; start LHS (in $14)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = ne %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = eq %8, 0:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = block 2
%13:i32 = var
%14 = shl %13, 24:i32
%15 = ashr %14, 24:i32
%16 = eq %15, 36:i32
blockpc %12 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %12 1 %18 1
%19:i32 = var
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = phi %21, 10:i32, %22
%24 = eq %23, 10:i32
blockpc %20 0 %24 1
%25:i32 = var
blockpc %20 1 %25 1
%26 = phi %20, %23, 0:i32
%27 = phi %2, %19, %26
%28 = phi %12, %27, 27:i32
%29 = phi %7, 27:i32, %28
%30 = eq %29, 27:i32
%31:i32 = var
pc %6 1
pc %30 1
pc %31 1
infer %1


; start LHS (in $14)
%0 = add 0:i32, 4:i32
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = ne %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = eq %7, 0:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = block 2
%12:i32 = var
%13 = shl %12, 24:i32
%14 = ashr %13, 24:i32
%15 = eq %14, 36:i32
blockpc %11 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %11 1 %17 1
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, 10:i32, %21
%23 = eq %22, 10:i32
blockpc %19 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %19 1 %25 1
%26 = phi %19, %22, 0:i32
%27 = phi %1, %18, %26
%28 = phi %11, %27, 27:i32
%29 = phi %6, 27:i32, %28
%30 = eq %29, 27:i32
%31:i32 = var
pc %5 1
pc %30 1
pc %31 1
infer %0


; start LHS (in $14)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = ne %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = eq %8, 0:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = block 2
%13:i32 = var
%14 = shl %13, 24:i32
%15 = ashr %14, 24:i32
%16 = eq %15, 36:i32
blockpc %12 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %12 1 %18 1
%19:i32 = var
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = phi %21, 10:i32, %22
%24 = eq %23, 10:i32
blockpc %20 0 %24 1
%25:i32 = var
blockpc %20 1 %25 1
%26 = phi %20, %23, 0:i32
%27 = phi %2, %19, %26
%28 = phi %12, %27, 27:i32
%29 = phi %7, 27:i32, %28
%30 = eq %29, 27:i32
%31:i32 = var
pc %6 1
pc %30 1
pc %31 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = ne %7, 0:i32
%9 = block 2
%10:i32 = var
%11 = eq %10, 0:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = block 2
%15:i32 = var
%16 = shl %15, 24:i32
%17 = ashr %16, 24:i32
%18 = eq %17, 36:i32
blockpc %14 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %14 1 %20 1
%21:i32 = var
%22 = block 2
%23 = block 2
%24:i32 = var
%25 = phi %23, 10:i32, %24
%26 = eq %25, 10:i32
blockpc %22 0 %26 1
%27:i32 = var
blockpc %22 1 %27 1
%28 = phi %22, %25, 0:i32
%29 = phi %4, %21, %28
%30 = phi %14, %29, 27:i32
%31 = phi %9, 27:i32, %30
%32 = eq %31, 27:i32
%33:i32 = var
pc %8 1
pc %32 1
pc %33 1
infer %3


; start LHS (in $14)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2 = xor %1, -1:i32
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = ne %6, 0:i32
%8 = block 2
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13 = block 2
%14:i32 = var
%15 = shl %14, 24:i32
%16 = ashr %15, 24:i32
%17 = eq %16, 36:i32
blockpc %13 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %13 1 %19 1
%20:i32 = var
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = phi %22, 10:i32, %23
%25 = eq %24, 10:i32
blockpc %21 0 %25 1
%26:i32 = var
blockpc %21 1 %26 1
%27 = phi %21, %24, 0:i32
%28 = phi %3, %20, %27
%29 = phi %13, %28, 27:i32
%30 = phi %8, 27:i32, %29
%31 = eq %30, 27:i32
%32:i32 = var
pc %7 1
pc %31 1
pc %32 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = ne %11, 0:i32
%13 = block 2
%14:i32 = var
%15 = eq %14, 0:i32
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18 = block 2
%19:i32 = var
%20 = shl %19, 24:i32
%21 = ashr %20, 24:i32
%22 = eq %21, 36:i32
blockpc %18 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %18 1 %24 1
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
%31 = phi %29, 10:i32, %30
%32 = phi %26, %31, 0:i32
%33 = phi %8, %25, %32
%34 = phi %18, %33, 27:i32
%35 = phi %13, 27:i32, %34
%36 = eq %35, 27:i32
%37:i32 = var
pc %12 1
pc %36 1
pc %37 1
infer %7


; start LHS (in $14)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6 (hasExternalUses)
%8 = add %7, 4:i32
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = ne %12, 0:i32
%14 = block 2
%15:i32 = var
%16 = eq %15, 0:i32
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19 = block 2
%20:i32 = var
%21 = shl %20, 24:i32
%22 = ashr %21, 24:i32
%23 = eq %22, 36:i32
blockpc %19 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %19 1 %25 1
%26:i32 = var
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
%32 = phi %30, 10:i32, %31
%33 = phi %27, %32, 0:i32
%34 = phi %9, %26, %33
%35 = phi %19, %34, 27:i32
%36 = phi %14, 27:i32, %35
%37 = eq %36, 27:i32
%38:i32 = var
pc %13 1
pc %37 1
pc %38 1
infer %8


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 1:i32
%2 = block 2
%3:i32 = var
%4 = eq %3, 0:i32
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7 = block 2
%8:i32 = var
%9 = shl %8, 24:i32
%10 = ashr %9, 24:i32
%11 = eq %10, 36:i32
blockpc %7 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %7 1 %13 1
%14 = block 2
%15:i32 = var
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = phi %17, 10:i32, %18
%20 = eq %19, 10:i32
blockpc %16 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %16 1 %22 1
%23 = phi %16, %19, 0:i32
%24 = phi %14, %15, %23
%25 = phi %7, %24, 27:i32
%26 = phi %2, 27:i32, %25
%27 = eq %26, 27:i32
%28:i32 = var
pc %27 1
pc %28 1
infer %1


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = block 2
%7:i32 = var
%8 = phi %6, %7, %5
%9 = phi %1, %5, %8
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = phi %0, %9, %12
%14 = slt %13, 0:i32
%15:i32 = var
%16 = eq %15, 0:i32
blockpc %1 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %1 1 %18 1
%19:i32 = var
%20 = shl %19, 24:i32
%21 = ashr %20, 24:i32
%22 = eq %21, 36:i32
blockpc %6 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %6 1 %24 1
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
%31 = phi %29, 10:i32, %30
%32 = phi %26, %31, 0:i32
%33 = phi %2, %25, %32
%34 = phi %6, %33, 27:i32
%35 = phi %1, 27:i32, %34
%36 = eq %35, 27:i32
blockpc %0 0 %36 1
%37:i32 = var
blockpc %0 1 %37 1
%38:i32 = var
blockpc %10 0 %38 1
%39:i32 = var
blockpc %10 1 %39 1
%40:i32 = var
pc %40 1
infer %14


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2 = shl 1:i32, %1
%3:i32 = var
%4 = or %2, %3 (hasExternalUses)
%5 = phi %0, 0:i32, %4
%6 = or %5, 8192:i32
%7:i32 = var
%8 = shl %7, 24:i32
%9 = ashr %8, 24:i32
%10 = add %9, -32:i32
%11 = ult 31:i32, %10
%12:i32 = zext %11
%13 = shl 1:i32, %10
%14 = and %13, 75913:i32
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = or %12, %16
%18 = ne %17, 0:i32
blockpc %0 0 %18 1
%19 = eq %17, 0:i32
blockpc %0 1 %19 1
%20:i32 = var
%21 = phi %0, %7, %20
%22 = shl %21, 24:i32
%23 = ashr %22, 24:i32
%24 = eq %23, 42:i32
pc %24 1
infer %6


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = block 2
%7:i32 = var
%8 = phi %6, %7, %5
%9 = phi %1, %5, %8
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = phi %0, %9, %12
%14 = sub 0:i32, %13
%15:i32 = var
%16 = eq %15, 0:i32
blockpc %1 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %1 1 %18 1
%19:i32 = var
%20 = shl %19, 24:i32
%21 = ashr %20, 24:i32
%22 = eq %21, 36:i32
blockpc %6 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %6 1 %24 1
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
%31 = phi %29, 10:i32, %30
%32 = phi %26, %31, 0:i32
%33 = phi %2, %25, %32
%34 = phi %6, %33, 27:i32
%35 = phi %1, 27:i32, %34
%36 = eq %35, 27:i32
blockpc %0 0 %36 1
%37:i32 = var
blockpc %0 1 %37 1
%38:i32 = var
blockpc %10 0 %38 1
%39:i32 = var
blockpc %10 1 %39 1
%40:i32 = var
pc %40 1
infer %14


; start LHS (in $14)
%0:i32 = var
%1 = slt %0, 0:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 0:i32; Replace bad zext operation
%5:i32 = var
%6 = add %5, 0:i32; Replace bad zext operation
%7 = or %4, %6
%8 = ne %7, 0:i32
blockpc %2 0 %8 1
%9 = eq %7, 0:i32
blockpc %2 1 %9 1
%10:i32 = var
%11:i32 = var
%12 = phi %2, %10, %11
%13 = shl %12, 24:i32
%14 = ashr %13, 24:i32
%15 = eq %14, 42:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
pc %17 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 46:i32
infer %3


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = add %8, 3:i32 (hasExternalUses)
%10 = phi %7, %9, %6
%11 = phi %2, %6, %10
%12:i32 = var
%13 = add %12, 1:i32 (hasExternalUses)
%14 = phi %1, %11, %13
%15:i32 = var
%16 = phi %0, %14, %15
%17 = add %16, 1:i32
%18 = block 2
%19:i32 = var
%20 = add %19, 0:i32; Replace bad zext operation
%21:i32 = var
%22 = add %21, 0:i32; Replace bad zext operation
%23 = or %20, %22
%24 = ne %23, 0:i32
blockpc %18 0 %24 1
%25 = eq %23, 0:i32
blockpc %18 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %18, %26, %27
%29 = shl %28, 24:i32
%30 = ashr %29, 24:i32
%31 = eq %30, 42:i32
blockpc %0 0 %31 1
%32:i32 = var
blockpc %0 1 %32 1
%33:i32 = var
blockpc %1 0 %33 1
%34:i32 = var
blockpc %1 1 %34 1
%35:i32 = var
blockpc %2 0 %35 1
%36:i32 = var
blockpc %2 1 %36 1
%37:i32 = var
blockpc %7 0 %37 1
%38:i32 = var
blockpc %7 1 %38 1
%39:i32 = var
pc %39 1
infer %17


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 46:i32
pc %5 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = eq %5, 46:i32
pc %6 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 42:i32
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = eq %6, 46:i32
pc %7 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 42:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = shl %6, 24:i32
%8 = ashr %7, 24:i32
%9 = eq %8, 46:i32
pc %9 1
infer %5


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8:i32 = var
%9 = add %8, 3:i32 (hasExternalUses)
%10 = phi %7, %9, %6
%11 = phi %2, %6, %10
%12:i32 = var
%13 = add %12, 1:i32 (hasExternalUses)
%14 = phi %1, %11, %13
%15:i32 = var
%16 = phi %0, %14, %15
%17 = add %16, 2:i32
%18 = block 2
%19:i32 = var
%20 = add %19, 0:i32; Replace bad zext operation
%21:i32 = var
%22 = add %21, 0:i32; Replace bad zext operation
%23 = or %20, %22
%24 = ne %23, 0:i32
blockpc %18 0 %24 1
%25 = eq %23, 0:i32
blockpc %18 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %18, %26, %27
%29 = shl %28, 24:i32
%30 = ashr %29, 24:i32
%31 = eq %30, 42:i32
blockpc %0 0 %31 1
%32:i32 = var
blockpc %0 1 %32 1
%33:i32 = var
blockpc %1 0 %33 1
%34:i32 = var
blockpc %1 1 %34 1
%35:i32 = var
blockpc %2 0 %35 1
%36:i32 = var
blockpc %2 1 %36 1
%37:i32 = var
blockpc %7 0 %37 1
%38:i32 = var
blockpc %7 1 %38 1
%39:i32 = var
pc %39 1
infer %17


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 46:i32
pc %5 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = eq %5, 46:i32
pc %6 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 46:i32
pc %5 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = eq %6, 46:i32
pc %7 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 3:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = shl %6, 24:i32
%8 = ashr %7, 24:i32
%9 = eq %8, 46:i32
pc %5 1
pc %9 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = shl %6, 24:i32
%8 = ashr %7, 24:i32
%9 = eq %8, 46:i32
pc %5 1
pc %9 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = shl %7, 24:i32
%9 = ashr %8, 24:i32
%10 = eq %9, 46:i32
pc %6 1
pc %10 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 36:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = shl %8, 24:i32
%10 = ashr %9, 24:i32
%11 = eq %10, 46:i32
pc %7 1
pc %11 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 36:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = shl %10, 24:i32
%12 = ashr %11, 24:i32
%13 = eq %12, 46:i32
pc %5 1
pc %9 1
pc %13 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 36:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = shl %10, 24:i32
%12 = ashr %11, 24:i32
%13 = eq %12, 46:i32
pc %5 1
pc %9 1
pc %13 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = eq %5, 36:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = shl %11, 24:i32
%13 = ashr %12, 24:i32
%14 = eq %13, 46:i32
pc %6 1
pc %10 1
pc %14 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -48:i32
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = eq %6, 36:i32
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13 = shl %12, 24:i32
%14 = ashr %13, 24:i32
%15 = eq %14, 46:i32
pc %7 1
pc %11 1
pc %15 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -48:i32
%4 = shl %3, 2:i32
%5:i32 = var
%6 = shl %5, 24:i32
%7 = ashr %6, 24:i32
%8 = eq %7, 36:i32
%9:i32 = var
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13:i32 = var
%14 = shl %13, 24:i32
%15 = ashr %14, 24:i32
%16 = eq %15, 46:i32
pc %8 1
pc %12 1
pc %16 1
infer %4


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = add %6, -48:i32
%8 = shl %7, 2:i32
%9 = add %3, %8
%10:i32 = var
%11 = shl %10, 24:i32
%12 = ashr %11, 24:i32
%13 = eq %12, 36:i32
%14:i32 = var
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18:i32 = var
%19 = shl %18, 24:i32
%20 = ashr %19, 24:i32
%21 = eq %20, 46:i32
pc %13 1
pc %17 1
pc %21 1
infer %9


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 36:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = shl %10, 24:i32
%12 = ashr %11, 24:i32
%13 = eq %12, 46:i32
pc %5 1
pc %9 1
pc %13 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = eq %5, 36:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = shl %11, 24:i32
%13 = ashr %12, 24:i32
%14 = eq %13, 46:i32
pc %6 1
pc %10 1
pc %14 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -48:i32
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = eq %6, 36:i32
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13 = shl %12, 24:i32
%14 = ashr %13, 24:i32
%15 = eq %14, 46:i32
pc %7 1
pc %11 1
pc %15 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -48:i32
%4 = shl %3, 3:i32
%5:i32 = var
%6 = shl %5, 24:i32
%7 = ashr %6, 24:i32
%8 = eq %7, 36:i32
%9:i32 = var
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13:i32 = var
%14 = shl %13, 24:i32
%15 = ashr %14, 24:i32
%16 = eq %15, 46:i32
pc %8 1
pc %12 1
pc %16 1
infer %4


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = add %6, -48:i32
%8 = shl %7, 3:i32
%9 = add %3, %8
%10:i32 = var
%11 = shl %10, 24:i32
%12 = ashr %11, 24:i32
%13 = eq %12, 36:i32
%14:i32 = var
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18:i32 = var
%19 = shl %18, 24:i32
%20 = ashr %19, 24:i32
%21 = eq %20, 46:i32
pc %13 1
pc %17 1
pc %21 1
infer %9


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 36:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = shl %10, 24:i32
%12 = ashr %11, 24:i32
%13 = eq %12, 46:i32
pc %5 1
pc %9 1
pc %13 1
infer %1


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8 = phi %7, 1:i32, %6
%9 = phi %2, %6, %8
%10 = phi %1, %9, 0:i32
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %3, %12, %13
%15 = block 2
%16 = phi %15, 1:i32, %14
%17 = phi %11, %14, %16
%18 = phi %0, %10, %17
%19 = eq %18, 0:i32
%20 = block 2
%21:i32 = var
%22 = add %21, 0:i32; Replace bad zext operation
%23:i32 = var
%24 = add %23, 0:i32; Replace bad zext operation
%25 = or %22, %24
%26 = ne %25, 0:i32
blockpc %20 0 %26 1
%27 = eq %25, 0:i32
blockpc %20 1 %27 1
%28:i32 = var
%29:i32 = var
%30 = phi %20, %28, %29
%31 = shl %30, 24:i32
%32 = ashr %31, 24:i32
%33 = eq %32, 42:i32
blockpc %0 0 %33 1
%34:i32 = var
blockpc %0 1 %34 1
%35:i32 = var
blockpc %1 0 %35 1
%36:i32 = var
blockpc %1 1 %36 1
%37:i32 = var
blockpc %2 0 %37 1
%38:i32 = var
blockpc %2 1 %38 1
%39:i32 = var
blockpc %7 0 %39 1
%40:i32 = var
blockpc %7 1 %40 1
%41:i32 = var
blockpc %11 0 %41 1
%42:i32 = var
blockpc %11 1 %42 1
%43:i32 = var
blockpc %15 0 %43 1
%44:i32 = var
blockpc %15 1 %44 1
%45:i32 = var
pc %45 1
infer %19


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8 = phi %7, 1:i32, %6
%9 = phi %2, %6, %8
%10 = phi %1, %9, 0:i32
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %3, %12, %13
%15 = block 2
%16 = phi %15, 1:i32, %14
%17 = phi %11, %14, %16
%18 = phi %0, %10, %17
%19 = eq %18, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = block 2
%23:i32 = var
%24 = add %23, 0:i32; Replace bad zext operation
%25:i32 = var
%26 = add %25, 0:i32; Replace bad zext operation
%27 = or %24, %26
%28 = ne %27, 0:i32
blockpc %22 0 %28 1
%29:i32 = var
blockpc %22 1 %29 1
%30:i32 = var
%31:i32 = var
%32 = phi %22, %30, %31
%33 = shl %32, 24:i32
%34 = ashr %33, 24:i32
%35 = eq %34, 42:i32
blockpc %0 0 %35 1
%36:i32 = var
blockpc %0 1 %36 1
%37:i32 = var
blockpc %1 0 %37 1
%38:i32 = var
blockpc %1 1 %38 1
%39:i32 = var
blockpc %2 0 %39 1
%40:i32 = var
blockpc %2 1 %40 1
%41:i32 = var
blockpc %7 0 %41 1
%42:i32 = var
blockpc %7 1 %42 1
%43:i32 = var
blockpc %11 0 %43 1
%44:i32 = var
blockpc %11 1 %44 1
%45:i32 = var
blockpc %15 0 %45 1
%46:i32 = var
blockpc %15 1 %46 1
%47:i32 = var
pc %47 1
infer %21


; start LHS (in $14)
%0 = add 0:i32, 4:i32
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = ne %4, 0:i32
%6:i32 = var
%7 = shl %6, 24:i32
%8 = ashr %7, 24:i32
%9 = eq %8, 46:i32
pc %5 1
pc %9 1
infer %0


; start LHS (in $14)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = ne %5, 0:i32
%7:i32 = var
%8 = shl %7, 24:i32
%9 = ashr %8, 24:i32
%10 = eq %9, 46:i32
pc %6 1
pc %10 1
infer %1


; start LHS (in $14)
%0 = add 0:i32, 4:i32
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = ne %4, 0:i32
%6:i32 = var
%7 = shl %6, 24:i32
%8 = ashr %7, 24:i32
%9 = eq %8, 46:i32
pc %5 1
pc %9 1
infer %0


; start LHS (in $14)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = ne %5, 0:i32
%7:i32 = var
%8 = shl %7, 24:i32
%9 = ashr %8, 24:i32
%10 = eq %9, 46:i32
pc %6 1
pc %10 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = ne %7, 0:i32
%9:i32 = var
%10 = shl %9, 24:i32
%11 = ashr %10, 24:i32
%12 = eq %11, 46:i32
pc %8 1
pc %12 1
infer %3


; start LHS (in $14)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2 = xor %1, -1:i32
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = ne %6, 0:i32
%8:i32 = var
%9 = shl %8, 24:i32
%10 = ashr %9, 24:i32
%11 = eq %10, 46:i32
pc %7 1
pc %11 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = ne %11, 0:i32
%13:i32 = var
%14 = shl %13, 24:i32
%15 = ashr %14, 24:i32
%16 = eq %15, 46:i32
pc %12 1
pc %16 1
infer %7


; start LHS (in $14)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6 (hasExternalUses)
%8 = add %7, 4:i32
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = ne %12, 0:i32
%14:i32 = var
%15 = shl %14, 24:i32
%16 = ashr %15, 24:i32
%17 = eq %16, 46:i32
pc %13 1
pc %17 1
infer %8


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = eq %4, 46:i32
pc %5 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -65:i32
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -65:i32
%4 = ult 57:i32, %3
infer %4


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = mul %0, 58:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = mul %0, 58:i32
%2 = add 1024:i32, %1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, -65:i32
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = mul %0, 58:i32
%2 = add 1024:i32, %1
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = add %5, -65:i32
%7 = add %2, %6
infer %7


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 255:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 255:i32 (hasExternalUses)
%2 = add %1, -1:i32
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 255:i32 (hasExternalUses)
%2 = add %1, -1:i32
%3 = ult %2, 8:i32
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 0:i32
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
infer %2


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = add %4, -48:i32 (hasExternalUses)
%6 = phi %1, %5, -1:i32
%7 = phi %0, -1:i32, %6
%8 = slt -1:i32, %7
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %0 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %0 1 %12 1
%13:i32 = var
%14 = shl %13, 24:i32
%15 = ashr %14, 24:i32
%16 = eq %15, 36:i32
blockpc %1 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %1 1 %18 1
infer %8


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 19:i32
infer %3


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = add %4, -48:i32 (hasExternalUses)
%6 = phi %1, %5, -1:i32
%7 = phi %0, -1:i32, %6
%8 = shl %7, 2:i32
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %0 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %0 1 %12 1
%13:i32 = var
%14 = shl %13, 24:i32
%15 = ashr %14, 24:i32
%16 = eq %15, 36:i32
blockpc %1 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %1 1 %18 1
%19 = slt -1:i32, %7
%20:i32 = var
%21 = shl %20, 24:i32
%22 = ashr %21, 24:i32
%23 = eq %22, 19:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
pc %19 1
pc %25 1
infer %8


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = shl %6, 24:i32
%8 = ashr %7, 24:i32
%9 = add %8, -48:i32 (hasExternalUses)
%10 = phi %5, %9, -1:i32
%11 = phi %4, -1:i32, %10
%12 = shl %11, 2:i32
%13 = add %3, %12
%14:i32 = var
%15 = eq %14, 0:i32
blockpc %4 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %4 1 %17 1
%18:i32 = var
%19 = shl %18, 24:i32
%20 = ashr %19, 24:i32
%21 = eq %20, 36:i32
blockpc %5 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %5 1 %23 1
%24 = slt -1:i32, %11
%25:i32 = var
%26 = shl %25, 24:i32
%27 = ashr %26, 24:i32
%28 = eq %27, 19:i32
%29:i32 = zext %28
%30 = eq %29, 0:i32
pc %24 1
pc %30 1
infer %13


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = add %4, -48:i32 (hasExternalUses)
%6 = phi %1, %5, -1:i32
%7 = phi %0, -1:i32, %6
%8 = shl %7, 3:i32
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %0 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %0 1 %12 1
%13:i32 = var
%14 = shl %13, 24:i32
%15 = ashr %14, 24:i32
%16 = eq %15, 36:i32
blockpc %1 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %1 1 %18 1
%19 = slt -1:i32, %7
%20:i32 = var
%21 = shl %20, 24:i32
%22 = ashr %21, 24:i32
%23 = eq %22, 19:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
pc %19 1
pc %25 1
infer %8


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = shl %6, 24:i32
%8 = ashr %7, 24:i32
%9 = add %8, -48:i32 (hasExternalUses)
%10 = phi %5, %9, -1:i32
%11 = phi %4, -1:i32, %10
%12 = shl %11, 3:i32
%13 = add %3, %12
%14:i32 = var
%15 = eq %14, 0:i32
blockpc %4 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %4 1 %17 1
%18:i32 = var
%19 = shl %18, 24:i32
%20 = ashr %19, 24:i32
%21 = eq %20, 36:i32
blockpc %5 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %5 1 %23 1
%24 = slt -1:i32, %11
%25:i32 = var
%26 = shl %25, 24:i32
%27 = ashr %26, 24:i32
%28 = eq %27, 19:i32
%29:i32 = zext %28
%30 = eq %29, 0:i32
pc %24 1
pc %30 1
infer %13


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = shl %5, 24:i32
%7 = ashr %6, 24:i32
%8 = eq %7, 19:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
pc %10 1
infer %4


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = phi %1, 54:i32, 55:i32
%3 = phi %0, 54:i32, %2
%4 = eq %3, 54:i32
%5:i32 = var
%6 = shl %5, 24:i32
%7 = ashr %6, 24:i32
%8 = eq %7, 19:i32
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
infer %4


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = phi %2, 54:i32, 55:i32
%4 = phi %1, 54:i32, %3
%5 = block 2
%6 = phi %5, 55:i32, 0:i32
%7 = phi %0, %4, %6
%8 = eq %7, 55:i32
%9 = eq %4, 54:i32
blockpc %0 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %0 1 %11 1
%12:i32 = var
%13 = shl %12, 24:i32
%14 = ashr %13, 24:i32
%15 = eq %14, 19:i32
blockpc %2 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %2 1 %17 1
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = ne %21, 0:i32
blockpc %5 0 %22 1
%23 = eq %21, 0:i32
blockpc %5 1 %23 1
infer %8


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = block 2
%7:i32 = var
%8 = phi %6, %5, %7
%9 = phi %1, %5, %8
%10 = block 2
%11:i32 = var
%12 = add %11, 1:i32 (hasExternalUses)
%13 = phi %10, %12, %9
%14 = phi %0, %9, %13
%15 = add %14, -1:i32
%16:i32 = var
%17 = shl %16, 24:i32
%18 = ashr %17, 24:i32
%19 = eq %18, 19:i32
blockpc %6 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %6 1 %21 1
%22 = phi %6, 54:i32, 55:i32
%23 = phi %1, 54:i32, %22
%24 = eq %23, 54:i32
blockpc %0 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %0 1 %26 1
%27:i32 = var
blockpc %10 0 %27 1
%28:i32 = var
blockpc %10 1 %28 1
%29:i32 = var
pc %29 1
infer %15


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = ashr %5, 24:i32
%7 = eq %6, 19:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = phi %4, 54:i32, 55:i32
%11 = phi %3, 54:i32, %10
%12 = eq %11, 54:i32
blockpc %2 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %2 1 %14 1
%15 = block 2
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = ne %19, 0:i32
blockpc %15 0 %20 1
%21 = eq %19, 0:i32
blockpc %15 1 %21 1
%22 = phi %15, 55:i32, 0:i32
%23 = phi %2, %11, %22
%24 = eq %23, 55:i32
pc %24 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = ashr %6, 24:i32
%8 = eq %7, 19:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = phi %5, 54:i32, 55:i32
%12 = phi %4, 54:i32, %11
%13 = eq %12, 54:i32
blockpc %3 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %3 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
%19:i32 = var
%20 = phi %17, %18, %19
%21 = ne %20, 0:i32
blockpc %16 0 %21 1
%22 = eq %20, 0:i32
blockpc %16 1 %22 1
%23 = phi %16, 55:i32, 0:i32
%24 = phi %3, %12, %23
%25 = eq %24, 55:i32
pc %25 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32 (hasExternalUses)
%3 = and %2, 15:i32
%4 = block 2
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = ashr %7, 24:i32
%9 = eq %8, 19:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = phi %6, 54:i32, 55:i32
%13 = phi %5, 54:i32, %12
%14 = eq %13, 54:i32
blockpc %4 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %4 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = ne %21, 0:i32
blockpc %17 0 %22 1
%23 = eq %21, 0:i32
blockpc %17 1 %23 1
%24 = phi %17, 55:i32, 0:i32
%25 = phi %4, %13, %24
%26 = eq %25, 55:i32
pc %26 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = ne %0, 0:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = ashr %5, 24:i32
%7 = eq %6, 19:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = phi %4, 54:i32, 55:i32
%11 = phi %3, 54:i32, %10
%12 = eq %11, 54:i32
blockpc %2 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %2 1 %14 1
%15 = block 2
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = ne %19, 0:i32
blockpc %15 0 %20 1
%21 = eq %19, 0:i32
blockpc %15 1 %21 1
%22 = phi %15, 55:i32, 0:i32
%23 = phi %2, %11, %22
%24 = eq %23, 55:i32
pc %24 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32 (hasExternalUses)
%3 = and %2, 15:i32
%4 = eq %3, 3:i32
%5 = block 2
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = ashr %8, 24:i32
%10 = eq %9, 19:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13 = phi %7, 54:i32, 55:i32
%14 = phi %6, 54:i32, %13
%15 = eq %14, 54:i32
blockpc %5 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %5 1 %17 1
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = ne %22, 0:i32
blockpc %18 0 %23 1
%24 = eq %22, 0:i32
blockpc %18 1 %24 1
%25 = phi %18, 55:i32, 0:i32
%26 = phi %5, %14, %25
%27 = eq %26, 55:i32
pc %27 1
infer %4


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32 (hasExternalUses)
%3 = and %2, -33:i32
%4 = block 2
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = ashr %7, 24:i32
%9 = eq %8, 19:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = phi %6, 54:i32, 55:i32
%13 = phi %5, 54:i32, %12
%14 = eq %13, 54:i32
blockpc %4 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %4 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = ne %21, 0:i32
blockpc %17 0 %22 1
%23 = eq %21, 0:i32
blockpc %17 1 %23 1
%24 = phi %17, 55:i32, 0:i32
%25 = phi %4, %13, %24
%26 = eq %25, 55:i32
pc %26 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = ne %0, 0:i32
%2:i32 = zext %1
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32 (hasExternalUses)
%6 = and %5, 15:i32
%7 = eq %6, 3:i32
%8:i32 = zext %7
%9 = and %2, %8
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = ashr %13, 24:i32
%15 = eq %14, 19:i32
blockpc %12 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %12 1 %17 1
%18 = phi %12, 54:i32, 55:i32
%19 = phi %11, 54:i32, %18
%20 = eq %19, 54:i32
blockpc %10 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %10 1 %22 1
%23 = block 2
%24 = block 2
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %26
%28 = ne %27, 0:i32
blockpc %23 0 %28 1
%29:i32 = var
blockpc %23 1 %29 1
%30 = phi %23, 55:i32, 0:i32
%31 = phi %10, %19, %30
%32 = eq %31, 55:i32
pc %32 1
infer %9


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = shl 1:i32, %3
%5:i32 = var
%6 = or %4, %5 (hasExternalUses)
%7 = phi %2, 0:i32, %6
%8 = or %7, 8192:i32 (hasExternalUses)
%9 = phi %1, %8, %7
%10 = phi %0, %9, %7
%11 = and %10, 8192:i32
%12:i32 = var
%13 = add %12, 0:i32; Replace bad zext operation
%14:i32 = var
%15 = add %14, 0:i32; Replace bad zext operation
%16 = or %13, %15
%17 = ne %16, 0:i32
blockpc %2 0 %17 1
%18 = eq %16, 0:i32
blockpc %2 1 %18 1
%19:i32 = var
%20:i32 = var
%21 = phi %2, %19, %20
%22 = shl %21, 24:i32
%23 = ashr %22, 24:i32
%24 = eq %23, 42:i32
blockpc %0 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %0 1 %26 1
%27:i32 = var
blockpc %1 0 %27 1
%28:i32 = var
blockpc %1 1 %28 1
%29:i32 = var
pc %29 1
infer %11


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = shl 1:i32, %3
%5:i32 = var
%6 = or %4, %5 (hasExternalUses)
%7 = phi %2, 0:i32, %6
%8 = or %7, 8192:i32 (hasExternalUses)
%9 = phi %1, %8, %7
%10 = phi %0, %9, %7
%11 = and %10, -65537:i32
%12:i32 = var
%13 = add %12, 0:i32; Replace bad zext operation
%14:i32 = var
%15 = add %14, 0:i32; Replace bad zext operation
%16 = or %13, %15
%17 = ne %16, 0:i32
blockpc %2 0 %17 1
%18 = eq %16, 0:i32
blockpc %2 1 %18 1
%19:i32 = var
%20:i32 = var
%21 = phi %2, %19, %20
%22 = shl %21, 24:i32
%23 = ashr %22, 24:i32
%24 = eq %23, 42:i32
blockpc %0 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %0 1 %26 1
%27:i32 = var
blockpc %1 0 %27 1
%28:i32 = var
blockpc %1 1 %28 1
%29:i32 = var
pc %29 1
infer %11


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = shl 1:i32, %3
%5:i32 = var
%6 = or %4, %5 (hasExternalUses)
%7 = phi %2, 0:i32, %6
%8 = or %7, 8192:i32 (hasExternalUses)
%9 = phi %1, %8, %7
%10 = phi %0, %9, %7
%11 = and %10, 8192:i32
%12 = eq %11, 0:i32
%13:i32 = var
%14 = add %13, 0:i32; Replace bad zext operation
%15:i32 = var
%16 = add %15, 0:i32; Replace bad zext operation
%17 = or %14, %16
%18 = ne %17, 0:i32
blockpc %2 0 %18 1
%19 = eq %17, 0:i32
blockpc %2 1 %19 1
%20:i32 = var
%21:i32 = var
%22 = phi %2, %20, %21
%23 = shl %22, 24:i32
%24 = ashr %23, 24:i32
%25 = eq %24, 42:i32
blockpc %0 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %0 1 %27 1
%28:i32 = var
blockpc %1 0 %28 1
%29:i32 = var
blockpc %1 1 %29 1
%30:i32 = var
pc %30 1
infer %12


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2 = shl %1, 24:i32
%3 = ashr %2, 24:i32 (hasExternalUses)
%4 = and %3, -33:i32 (hasExternalUses)
%5 = phi %0, %4, %3
%6 = sub %5, 65:i32
%7:i32 = var
%8 = ne %7, 0:i32
%9:i32 = zext %8
%10 = and %3, 15:i32
%11 = eq %10, 3:i32
%12:i32 = zext %11
%13 = and %9, %12
%14 = ne %13, 0:i32
blockpc %0 0 %14 1
%15 = eq %13, 0:i32
blockpc %0 1 %15 1
%16 = block 2
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = ashr %19, 24:i32
%21 = eq %20, 19:i32
blockpc %18 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %18 1 %23 1
%24 = phi %18, 54:i32, 55:i32
%25 = phi %17, 54:i32, %24
%26 = eq %25, 54:i32
blockpc %16 0 %26 1
%27:i32 = var
blockpc %16 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = phi %28, 55:i32, 0:i32
%32 = phi %16, %25, %31
%33 = eq %32, 55:i32
pc %33 1
infer %6


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 255:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = ashr %5, 24:i32
%7 = eq %6, 19:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = phi %4, 54:i32, 55:i32
%11 = phi %3, 54:i32, %10
%12 = eq %11, 54:i32
blockpc %2 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %2 1 %14 1
%15 = block 2
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = ne %19, 0:i32
blockpc %15 0 %20 1
%21 = eq %19, 0:i32
blockpc %15 1 %21 1
%22 = phi %15, 55:i32, 0:i32
%23 = phi %2, %11, %22
%24 = eq %23, 55:i32
pc %24 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 255:i32
%2 = shl %1, 24:i32
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = ashr %6, 24:i32
%8 = eq %7, 19:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = phi %5, 54:i32, 55:i32
%12 = phi %4, 54:i32, %11
%13 = eq %12, 54:i32
blockpc %3 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %3 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
%19:i32 = var
%20 = phi %17, %18, %19
%21 = ne %20, 0:i32
blockpc %16 0 %21 1
%22 = eq %20, 0:i32
blockpc %16 1 %22 1
%23 = phi %16, 55:i32, 0:i32
%24 = phi %3, %12, %23
%25 = eq %24, 55:i32
pc %25 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 255:i32
%2 = shl %1, 24:i32
%3 = ashr %2, 24:i32
%4 = block 2
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = ashr %7, 24:i32
%9 = eq %8, 19:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = phi %6, 54:i32, 55:i32
%13 = phi %5, 54:i32, %12
%14 = eq %13, 54:i32
blockpc %4 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %4 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = ne %21, 0:i32
blockpc %17 0 %22 1
%23 = eq %21, 0:i32
blockpc %17 1 %23 1
%24 = phi %17, 55:i32, 0:i32
%25 = phi %4, %13, %24
%26 = eq %25, 55:i32
pc %26 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 255:i32
%2 = shl %1, 24:i32
%3 = ashr %2, 24:i32
%4 = sub %3, 0:i32
%5 = block 2
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = ashr %8, 24:i32
%10 = eq %9, 19:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13 = phi %7, 54:i32, 55:i32
%14 = phi %6, 54:i32, %13
%15 = eq %14, 54:i32
blockpc %5 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %5 1 %17 1
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = ne %22, 0:i32
blockpc %18 0 %23 1
%24 = eq %22, 0:i32
blockpc %18 1 %24 1
%25 = phi %18, 55:i32, 0:i32
%26 = phi %5, %14, %25
%27 = eq %26, 55:i32
pc %27 1
infer %4


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2 = block 3
%3:i32 = var
%4:i32 = var
%5 = add %3, %4 (hasExternalUses)
%6 = phi %2, -1:i32, %5, %4
%7 = phi %0, %1, %6
%8 = and %7, 65535:i32
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = ashr %12, 24:i32
%14 = eq %13, 19:i32
blockpc %11 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %11 1 %16 1
%17 = phi %11, 54:i32, 55:i32
%18 = phi %10, 54:i32, %17
%19 = eq %18, 54:i32
blockpc %9 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %9 1 %21 1
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %0, %23, %24
%26 = ne %25, 0:i32
blockpc %22 0 %26 1
%27:i32 = var
blockpc %22 1 %27 1
%28 = phi %22, 55:i32, 0:i32
%29 = phi %9, %18, %28
%30 = eq %29, 55:i32
pc %30 1
infer %8


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2 = block 3
%3:i32 = var
%4:i32 = var
%5 = add %3, %4 (hasExternalUses)
%6 = phi %2, -1:i32, %5, %4
%7 = phi %0, %1, %6
%8 = and %7, 255:i32
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = ashr %12, 24:i32
%14 = eq %13, 19:i32
blockpc %11 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %11 1 %16 1
%17 = phi %11, 54:i32, 55:i32
%18 = phi %10, 54:i32, %17
%19 = eq %18, 54:i32
blockpc %9 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %9 1 %21 1
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %0, %23, %24
%26 = ne %25, 0:i32
blockpc %22 0 %26 1
%27:i32 = var
blockpc %22 1 %27 1
%28 = phi %22, 55:i32, 0:i32
%29 = phi %9, %18, %28
%30 = eq %29, 55:i32
pc %30 1
infer %8


; start LHS (in $14)
%0 = block 3
%1:i32 = var
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = phi %3, %6, -1:i32
%8 = phi %0, %1, %2, %7
%9 = ult 8:i32, %8
%10:i32 = var
%11 = shl %10, 24:i32
%12 = ashr %11, 24:i32
%13 = eq %12, 46:i32
blockpc %3 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %3 1 %15 1
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = ne %19, 0:i32
blockpc %4 0 %20 1
%21 = eq %19, 0:i32
blockpc %4 1 %21 1
%22 = block 2
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = ashr %25, 24:i32
%27 = eq %26, 19:i32
blockpc %24 0 %27 1
%28:i32 = var
blockpc %24 1 %28 1
%29 = phi %24, 54:i32, 55:i32
%30 = phi %23, 54:i32, %29
%31 = eq %30, 54:i32
blockpc %22 0 %31 1
%32:i32 = var
blockpc %22 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 55:i32, 0:i32
%37 = phi %22, %30, %36
%38 = eq %37, 55:i32
pc %38 1
infer %9


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = shl 1:i32, %4
%6:i32 = var
%7 = or %5, %6 (hasExternalUses)
%8 = phi %3, 0:i32, %7
%9 = or %8, 8192:i32 (hasExternalUses)
%10 = phi %2, %9, %8
%11 = phi %1, %10, %8
%12 = and %11, -65537:i32 (hasExternalUses)
%13 = phi %0, %11, %12
%14 = or %13, 8:i32
%15 = and %11, 8192:i32
%16 = eq %15, 0:i32
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19:i32 = var
%20 = add %19, 0:i32; Replace bad zext operation
%21:i32 = var
%22 = add %21, 0:i32; Replace bad zext operation
%23 = or %20, %22
%24 = ne %23, 0:i32
blockpc %3 0 %24 1
%25 = eq %23, 0:i32
blockpc %3 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %3, %26, %27
%29 = shl %28, 24:i32
%30 = ashr %29, 24:i32
%31 = eq %30, 42:i32
blockpc %1 0 %31 1
%32:i32 = var
blockpc %1 1 %32 1
%33:i32 = var
blockpc %2 0 %33 1
%34:i32 = var
blockpc %2 1 %34 1
%35:i32 = var
pc %35 1
infer %14


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = shl 1:i32, %4
%6:i32 = var
%7 = or %5, %6 (hasExternalUses)
%8 = phi %3, 0:i32, %7
%9 = or %8, 8192:i32 (hasExternalUses)
%10 = phi %2, %9, %8
%11 = phi %1, %10, %8
%12 = and %11, -65537:i32 (hasExternalUses)
%13 = phi %0, %11, %12
%14 = and %13, 8:i32
%15 = and %11, 8192:i32
%16 = eq %15, 0:i32
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19:i32 = var
%20 = add %19, 0:i32; Replace bad zext operation
%21:i32 = var
%22 = add %21, 0:i32; Replace bad zext operation
%23 = or %20, %22
%24 = ne %23, 0:i32
blockpc %3 0 %24 1
%25 = eq %23, 0:i32
blockpc %3 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %3, %26, %27
%29 = shl %28, 24:i32
%30 = ashr %29, 24:i32
%31 = eq %30, 42:i32
blockpc %1 0 %31 1
%32:i32 = var
blockpc %1 1 %32 1
%33:i32 = var
blockpc %2 0 %33 1
%34:i32 = var
blockpc %2 1 %34 1
%35:i32 = var
pc %35 1
infer %14


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4:i32 = var
%5 = sub %3, %4
%6 = block 2
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = ashr %9, 24:i32
%11 = eq %10, 19:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14 = phi %8, 54:i32, 55:i32
%15 = phi %7, 54:i32, %14
%16 = eq %15, 54:i32
blockpc %6 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %6 1 %18 1
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %0, %20, %21
%23 = ne %22, 0:i32
blockpc %19 0 %23 1
%24 = eq %22, 0:i32
blockpc %19 1 %24 1
%25 = phi %19, 55:i32, 0:i32
%26 = phi %6, %15, %25
%27 = eq %26, 55:i32
pc %27 1
infer %5


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4:i32 = var
%5 = sub %3, %4 (hasExternalUses)
%6 = add %5, 1:i32
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = ashr %10, 24:i32
%12 = eq %11, 19:i32
blockpc %9 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %9 1 %14 1
%15 = phi %9, 54:i32, 55:i32
%16 = phi %8, 54:i32, %15
%17 = eq %16, 54:i32
blockpc %7 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %7 1 %19 1
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %0, %21, %22
%24 = ne %23, 0:i32
blockpc %20 0 %24 1
%25:i32 = var
blockpc %20 1 %25 1
%26 = phi %20, 55:i32, 0:i32
%27 = phi %7, %16, %26
%28 = eq %27, 55:i32
pc %28 1
infer %6


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = shl 1:i32, %4
%6:i32 = var
%7 = or %5, %6 (hasExternalUses)
%8 = phi %3, 0:i32, %7
%9 = or %8, 8192:i32 (hasExternalUses)
%10 = phi %2, %9, %8
%11 = phi %1, %10, %8
%12 = and %11, -65537:i32 (hasExternalUses)
%13 = phi %0, %11, %12
%14 = and %13, 8:i32
%15 = eq %14, 0:i32
%16 = and %11, 8192:i32
%17 = eq %16, 0:i32
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20:i32 = var
%21 = add %20, 0:i32; Replace bad zext operation
%22:i32 = var
%23 = add %22, 0:i32; Replace bad zext operation
%24 = or %21, %23
%25 = ne %24, 0:i32
blockpc %3 0 %25 1
%26 = eq %24, 0:i32
blockpc %3 1 %26 1
%27:i32 = var
%28:i32 = var
%29 = phi %3, %27, %28
%30 = shl %29, 24:i32
%31 = ashr %30, 24:i32
%32 = eq %31, 42:i32
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %2 0 %34 1
%35:i32 = var
blockpc %2 1 %35 1
%36:i32 = var
pc %36 1
infer %15


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4:i32 = var
%5 = sub %3, %4 (hasExternalUses)
%6 = block 3
%7:i32 = var
%8:i32 = var
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = phi %9, %12, -1:i32
%14 = phi %6, %7, %8, %13
%15 = slt %5, %14
%16:i32 = var
%17 = shl %16, 24:i32
%18 = ashr %17, 24:i32
%19 = eq %18, 46:i32
blockpc %9 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %9 1 %21 1
%22:i32 = var
%23:i32 = var
%24 = phi %0, %22, %23
%25 = ne %24, 0:i32
blockpc %10 0 %25 1
%26 = eq %24, 0:i32
blockpc %10 1 %26 1
%27:i32 = var
pc %27 1
infer %15


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 0:i32, %4
%6 = or %5, 8192:i32 (hasExternalUses)
%7 = phi %2, %6, %5
%8 = phi %1, %7, %5
%9 = and %8, -65537:i32 (hasExternalUses)
%10 = phi %0, %8, %9
%11 = and %10, 8:i32
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = block 2
%15:i32 = var
%16:i32 = var
%17 = phi %14, %15, %16
%18:i32 = var
%19 = sub %17, %18 (hasExternalUses)
%20 = block 3
%21:i32 = var
%22:i32 = var
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, 0:i32
%27 = phi %23, %26, -1:i32
%28 = phi %20, %21, %22, %27
%29 = slt %19, %28
%30:i32 = zext %29
%31 = or %13, %30
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %1 0 %34 1
%35:i32 = var
blockpc %1 1 %35 1
%36:i32 = var
blockpc %2 0 %36 1
%37:i32 = var
blockpc %2 1 %37 1
%38:i32 = var
blockpc %3 0 %38 1
%39:i32 = var
blockpc %3 1 %39 1
%40:i32 = var
blockpc %23 0 %40 1
%41:i32 = var
blockpc %23 1 %41 1
%42:i32 = var
blockpc %24 0 %42 1
%43:i32 = var
blockpc %24 1 %43 1
%44:i32 = var
pc %44 1
infer %31


; start LHS (in $14)
%0:i64 = var
%1 = slt %0, 0:i64
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = ashr %5, 24:i32
%7 = eq %6, 19:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = phi %4, 54:i32, 55:i32
%11 = phi %3, 54:i32, %10
%12 = eq %11, 54:i32
blockpc %2 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %2 1 %14 1
%15 = block 2
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = ne %19, 0:i32
blockpc %15 0 %20 1
%21 = eq %19, 0:i32
blockpc %15 1 %21 1
%22 = phi %15, 55:i32, 0:i32
%23 = phi %2, %11, %22
%24 = eq %23, 55:i32
pc %24 1
infer %1


; start LHS (in $14)
%0:i64 = var
%1 = sub 0:i64, %0
%2 = slt %0, 0:i64
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = ashr %6, 24:i32
%8 = eq %7, 19:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = phi %5, 54:i32, 55:i32
%12 = phi %4, 54:i32, %11
%13 = eq %12, 54:i32
blockpc %3 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %3 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
%19:i32 = var
%20 = phi %17, %18, %19
%21 = ne %20, 0:i32
blockpc %16 0 %21 1
%22 = eq %20, 0:i32
blockpc %16 1 %22 1
%23 = phi %16, 55:i32, 0:i32
%24 = phi %3, %12, %23
%25 = eq %24, 55:i32
pc %2 1
pc %25 1
infer %1


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = shl 1:i32, %4
%6:i32 = var
%7 = or %5, %6 (hasExternalUses)
%8 = phi %3, 0:i32, %7
%9 = or %8, 8192:i32 (hasExternalUses)
%10 = phi %2, %9, %8
%11 = phi %1, %10, %8
%12 = and %11, -65537:i32 (hasExternalUses)
%13 = phi %0, %11, %12
%14 = and %13, 2048:i32
%15 = and %11, 8192:i32
%16 = eq %15, 0:i32
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19:i32 = var
%20 = add %19, 0:i32; Replace bad zext operation
%21:i32 = var
%22 = add %21, 0:i32; Replace bad zext operation
%23 = or %20, %22
%24 = ne %23, 0:i32
blockpc %3 0 %24 1
%25 = eq %23, 0:i32
blockpc %3 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %3, %26, %27
%29 = shl %28, 24:i32
%30 = ashr %29, 24:i32
%31 = eq %30, 42:i32
blockpc %1 0 %31 1
%32:i32 = var
blockpc %1 1 %32 1
%33:i32 = var
blockpc %2 0 %33 1
%34:i32 = var
blockpc %2 1 %34 1
%35:i32 = var
%36:i32 = var
pc %35 1
pc %36 1
infer %14


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = shl 1:i32, %4
%6:i32 = var
%7 = or %5, %6 (hasExternalUses)
%8 = phi %3, 0:i32, %7
%9 = or %8, 8192:i32 (hasExternalUses)
%10 = phi %2, %9, %8
%11 = phi %1, %10, %8
%12 = and %11, -65537:i32 (hasExternalUses)
%13 = phi %0, %11, %12
%14 = and %13, 2048:i32
%15 = eq %14, 0:i32
%16 = and %11, 8192:i32
%17 = eq %16, 0:i32
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20:i32 = var
%21 = add %20, 0:i32; Replace bad zext operation
%22:i32 = var
%23 = add %22, 0:i32; Replace bad zext operation
%24 = or %21, %23
%25 = ne %24, 0:i32
blockpc %3 0 %25 1
%26 = eq %24, 0:i32
blockpc %3 1 %26 1
%27:i32 = var
%28:i32 = var
%29 = phi %3, %27, %28
%30 = shl %29, 24:i32
%31 = ashr %30, 24:i32
%32 = eq %31, 42:i32
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %2 0 %34 1
%35:i32 = var
blockpc %2 1 %35 1
%36:i32 = var
%37:i32 = var
pc %36 1
pc %37 1
infer %15


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = shl 1:i32, %4
%6:i32 = var
%7 = or %5, %6 (hasExternalUses)
%8 = phi %3, 0:i32, %7
%9 = or %8, 8192:i32 (hasExternalUses)
%10 = phi %2, %9, %8
%11 = phi %1, %10, %8
%12 = and %11, -65537:i32 (hasExternalUses)
%13 = phi %0, %11, %12
%14 = and %13, 1:i32
%15 = and %11, 8192:i32
%16 = eq %15, 0:i32
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19:i32 = var
%20 = add %19, 0:i32; Replace bad zext operation
%21:i32 = var
%22 = add %21, 0:i32; Replace bad zext operation
%23 = or %20, %22
%24 = ne %23, 0:i32
blockpc %3 0 %24 1
%25 = eq %23, 0:i32
blockpc %3 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %3, %26, %27
%29 = shl %28, 24:i32
%30 = ashr %29, 24:i32
%31 = eq %30, 42:i32
blockpc %1 0 %31 1
%32:i32 = var
blockpc %1 1 %32 1
%33:i32 = var
blockpc %2 0 %33 1
%34:i32 = var
blockpc %2 1 %34 1
%35:i32 = var
%36:i32 = var
pc %35 1
pc %36 1
infer %14


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = shl 1:i32, %4
%6:i32 = var
%7 = or %5, %6 (hasExternalUses)
%8 = phi %3, 0:i32, %7
%9 = or %8, 8192:i32 (hasExternalUses)
%10 = phi %2, %9, %8
%11 = phi %1, %10, %8
%12 = and %11, -65537:i32 (hasExternalUses)
%13 = phi %0, %11, %12
%14 = and %13, 1:i32
%15 = eq %14, 0:i32
%16 = and %11, 8192:i32
%17 = eq %16, 0:i32
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20:i32 = var
%21 = add %20, 0:i32; Replace bad zext operation
%22:i32 = var
%23 = add %22, 0:i32; Replace bad zext operation
%24 = or %21, %23
%25 = ne %24, 0:i32
blockpc %3 0 %25 1
%26 = eq %24, 0:i32
blockpc %3 1 %26 1
%27:i32 = var
%28:i32 = var
%29 = phi %3, %27, %28
%30 = shl %29, 24:i32
%31 = ashr %30, 24:i32
%32 = eq %31, 42:i32
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %2 0 %34 1
%35:i32 = var
blockpc %2 1 %35 1
%36:i32 = var
%37:i32 = var
pc %36 1
pc %37 1
infer %15


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = shl 1:i32, %4
%6:i32 = var
%7 = or %5, %6 (hasExternalUses)
%8 = phi %3, 0:i32, %7
%9 = or %8, 8192:i32 (hasExternalUses)
%10 = phi %2, %9, %8
%11 = phi %1, %10, %8
%12 = and %11, -65537:i32 (hasExternalUses)
%13 = phi %0, %11, %12
%14 = and %13, 2049:i32
%15 = and %11, 8192:i32
%16 = eq %15, 0:i32
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19:i32 = var
%20 = add %19, 0:i32; Replace bad zext operation
%21:i32 = var
%22 = add %21, 0:i32; Replace bad zext operation
%23 = or %20, %22
%24 = ne %23, 0:i32
blockpc %3 0 %24 1
%25 = eq %23, 0:i32
blockpc %3 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %3, %26, %27
%29 = shl %28, 24:i32
%30 = ashr %29, 24:i32
%31 = eq %30, 42:i32
blockpc %1 0 %31 1
%32:i32 = var
blockpc %1 1 %32 1
%33:i32 = var
blockpc %2 0 %33 1
%34:i32 = var
blockpc %2 1 %34 1
%35:i32 = var
%36:i32 = var
pc %35 1
pc %36 1
infer %14


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = shl 1:i32, %4
%6:i32 = var
%7 = or %5, %6 (hasExternalUses)
%8 = phi %3, 0:i32, %7
%9 = or %8, 8192:i32 (hasExternalUses)
%10 = phi %2, %9, %8
%11 = phi %1, %10, %8
%12 = and %11, -65537:i32 (hasExternalUses)
%13 = phi %0, %11, %12
%14 = and %13, 2049:i32
%15 = ne %14, 0:i32
%16 = and %11, 8192:i32
%17 = eq %16, 0:i32
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20:i32 = var
%21 = add %20, 0:i32; Replace bad zext operation
%22:i32 = var
%23 = add %22, 0:i32; Replace bad zext operation
%24 = or %21, %23
%25 = ne %24, 0:i32
blockpc %3 0 %25 1
%26 = eq %24, 0:i32
blockpc %3 1 %26 1
%27:i32 = var
%28:i32 = var
%29 = phi %3, %27, %28
%30 = shl %29, 24:i32
%31 = ashr %30, 24:i32
%32 = eq %31, 42:i32
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %2 0 %34 1
%35:i32 = var
blockpc %2 1 %35 1
%36:i32 = var
%37:i32 = var
pc %36 1
pc %37 1
infer %15


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 0:i32, %4
%6 = or %5, 8192:i32 (hasExternalUses)
%7 = phi %2, %6, %5
%8 = phi %1, %7, %5
%9 = and %8, -65537:i32 (hasExternalUses)
%10 = phi %0, %8, %9
%11 = and %10, 2049:i32
%12 = ne %11, 0:i32
%13:i32 = zext %12
%14 = and %13, 1:i32
%15 = and %8, 8192:i32
%16 = eq %15, 0:i32
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19:i32 = var
%20 = add %19, 0:i32; Replace bad zext operation
%21:i32 = var
%22 = add %21, 0:i32; Replace bad zext operation
%23 = or %20, %22
%24 = ne %23, 0:i32
blockpc %3 0 %24 1
%25 = eq %23, 0:i32
blockpc %3 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %3, %26, %27
%29 = shl %28, 24:i32
%30 = ashr %29, 24:i32
%31 = eq %30, 42:i32
blockpc %1 0 %31 1
%32:i32 = var
blockpc %1 1 %32 1
%33:i32 = var
blockpc %2 0 %33 1
%34:i32 = var
blockpc %2 1 %34 1
%35:i32 = var
%36:i32 = var
pc %35 1
pc %36 1
infer %14


; start LHS (in $14)
%0:i32 = var
%1 = and %0, 255:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = ashr %5, 24:i32
%7 = eq %6, 19:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = phi %4, 54:i32, 55:i32
%11 = phi %3, 54:i32, %10
%12 = eq %11, 54:i32
blockpc %2 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %2 1 %14 1
%15 = block 2
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = ne %19, 0:i32
blockpc %15 0 %20 1
%21 = eq %19, 0:i32
blockpc %15 1 %21 1
%22 = phi %15, 55:i32, 0:i32
%23 = phi %2, %11, %22
%24 = eq %23, 55:i32
pc %24 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = ashr %5, 24:i32
%7 = eq %6, 19:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = phi %4, 54:i32, 55:i32
%11 = phi %3, 54:i32, %10
%12 = eq %11, 54:i32
blockpc %2 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %2 1 %14 1
%15 = block 2
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = ne %19, 0:i32
blockpc %15 0 %20 1
%21 = eq %19, 0:i32
blockpc %15 1 %21 1
%22 = phi %15, 55:i32, 0:i32
%23 = phi %2, %11, %22
%24 = eq %23, 55:i32
pc %24 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = ashr %5, 24:i32
%7 = eq %6, 19:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = phi %4, 54:i32, 55:i32
%11 = phi %3, 54:i32, %10
%12 = eq %11, 54:i32
blockpc %2 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %2 1 %14 1
%15 = block 2
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = ne %19, 0:i32
blockpc %15 0 %20 1
%21 = eq %19, 0:i32
blockpc %15 1 %21 1
%22 = phi %15, 55:i32, 0:i32
%23 = phi %2, %11, %22
%24 = eq %23, 55:i32
pc %24 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, 1940:i32, %2
%4 = sub %0, %3
%5 = eq %2, 0:i32
blockpc %1 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %1 1 %7 1
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = ashr %11, 24:i32
%13 = eq %12, 19:i32
blockpc %10 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %10 1 %15 1
%16 = phi %10, 54:i32, 55:i32
%17 = phi %9, 54:i32, %16
%18 = eq %17, 54:i32
blockpc %8 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %8 1 %20 1
%21 = block 2
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %24
%26 = ne %25, 0:i32
blockpc %21 0 %26 1
%27:i32 = var
blockpc %21 1 %27 1
%28 = phi %21, 55:i32, 0:i32
%29 = phi %8, %17, %28
%30 = eq %29, 55:i32
pc %30 1
infer %4


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2 = phi %0, 1940:i32, %1
%3 = block 3
%4:i32 = var
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = phi %7, %8, 0:i32
%10 = phi %6, %9, -1:i32
%11 = phi %3, %4, %5, %10
%12 = add %2, %11
%13 = eq %1, 0:i32
blockpc %0 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %0 1 %15 1
%16:i32 = var
%17 = shl %16, 24:i32
%18 = ashr %17, 24:i32
%19 = eq %18, 46:i32
blockpc %6 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %6 1 %21 1
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %24
%26 = ne %25, 0:i32
blockpc %7 0 %26 1
%27:i32 = var
blockpc %7 1 %27 1
%28:i32 = var
pc %28 1
infer %12


; start LHS (in $14)
%0 = block 3
%1:i32 = var
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = phi %3, %6, -1:i32
%8 = phi %0, %1, %2, %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = shl %10, 24:i32
%12 = ashr %11, 24:i32
%13 = eq %12, 46:i32
blockpc %3 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %3 1 %15 1
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = ne %19, 0:i32
blockpc %4 0 %20 1
%21 = eq %19, 0:i32
blockpc %4 1 %21 1
%22 = block 2
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = ashr %25, 24:i32
%27 = eq %26, 19:i32
blockpc %24 0 %27 1
%28:i32 = var
blockpc %24 1 %28 1
%29 = phi %24, 54:i32, 55:i32
%30 = phi %23, 54:i32, %29
%31 = eq %30, 54:i32
blockpc %22 0 %31 1
%32:i32 = var
blockpc %22 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 55:i32, 0:i32
%37 = phi %22, %30, %36
%38 = eq %37, 55:i32
pc %38 1
infer %9


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = and %3, 7:i32
%5 = block 2
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = ashr %8, 24:i32
%10 = eq %9, 19:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13 = phi %7, 54:i32, 55:i32
%14 = phi %6, 54:i32, %13
%15 = eq %14, 54:i32
blockpc %5 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %5 1 %17 1
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %0, %19, %20
%22 = ne %21, 0:i32
blockpc %18 0 %22 1
%23 = eq %21, 0:i32
blockpc %18 1 %23 1
%24 = phi %18, 55:i32, 0:i32
%25 = phi %5, %14, %24
%26 = eq %25, 55:i32
pc %26 1
infer %4


; start LHS (in $14)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = and %3, 7:i32
%5 = add %4, 2:i32
%6 = block 2
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = ashr %9, 24:i32
%11 = eq %10, 19:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14 = phi %8, 54:i32, 55:i32
%15 = phi %7, 54:i32, %14
%16 = eq %15, 54:i32
blockpc %6 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %6 1 %18 1
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %0, %20, %21
%23 = ne %22, 0:i32
blockpc %19 0 %23 1
%24 = eq %22, 0:i32
blockpc %19 1 %24 1
%25 = phi %19, 55:i32, 0:i32
%26 = phi %6, %15, %25
%27 = eq %26, 55:i32
pc %27 1
infer %5


; start LHS (in $14)
%0 = block 3
%1 = block 9
%2 = block 2
%3 = phi %2, 89:i32, 79:i32
%4 = phi %1, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %3, 0:i32
%5 = phi %0, 72:i32, 72:i32, %4
%6 = eq %5, 67:i32
%7 = block 3
%8:i32 = var
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = shl %11, 24:i32
%13 = ashr %12, 24:i32
%14 = eq %13, 46:i32
blockpc %10 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %10 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = ne %21, 0:i32
blockpc %17 0 %22 1
%23 = eq %21, 0:i32
blockpc %17 1 %23 1
%24:i32 = var
%25 = phi %17, %24, 0:i32
%26 = phi %10, %25, -1:i32
%27 = phi %7, %8, %9, %26
%28 = eq %27, 0:i32
blockpc %2 0 %28 1
%29:i32 = var
blockpc %2 1 %29 1
%30:i32 = var
pc %30 1
infer %6


; start LHS (in $14)
%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 9
%6 = block 2
%7:i32 = var
%8 = shl %7, 24:i32
%9 = ashr %8, 24:i32 (hasExternalUses)
%10 = and %9, -33:i32 (hasExternalUses)
%11 = phi %6, %10, %9
%12 = phi %5, 120:i32, %11, %4, %4, %4, %4, %4, %4, %4
%13 = phi %0, %4, %4, %12
%14 = and %13, 32:i32
%15:i32 = var
%16 = ne %15, 0:i32
%17:i32 = zext %16
%18 = and %9, 15:i32
%19 = eq %18, 3:i32
%20:i32 = zext %19
%21 = and %17, %20
%22 = ne %21, 0:i32
blockpc %6 0 %22 1
%23 = eq %21, 0:i32
blockpc %6 1 %23 1
%24 = block 2
%25 = block 3
%26:i32 = var
%27:i32 = var
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34:i32 = var
%35 = phi %31, %34, 0:i32
%36 = phi %28, %35, -1:i32
%37 = phi %25, %26, %27, %36
%38 = eq %37, 0:i32
blockpc %24 0 %38 1
%39:i32 = var
blockpc %24 1 %39 1
%40 = phi %24, 89:i32, 79:i32
%41 = phi %5, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %40, 0:i32
%42 = phi %0, 72:i32, 72:i32, %41
%43 = eq %42, 67:i32
%44:i32 = var
pc %43 1
pc %44 1
infer %14


; start LHS (in $14)
%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 9
%6 = block 2
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, 0:i32, %10
%12 = or %11, 8192:i32 (hasExternalUses)
%13 = phi %8, %12, %11
%14 = phi %7, %13, %11
%15 = and %14, -65537:i32 (hasExternalUses)
%16 = phi %6, %14, %15
%17 = or %16, 8:i32 (hasExternalUses)
%18 = phi %5, %17, %16, %4, %4, %4, %4, %4, %4, %4
%19 = phi %0, %4, %4, %18
%20 = and %19, 8:i32
%21 = and %14, 8192:i32
%22 = eq %21, 0:i32
blockpc %6 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %6 1 %24 1
%25:i32 = var
%26 = add %25, 0:i32; Replace bad zext operation
%27:i32 = var
%28 = add %27, 0:i32; Replace bad zext operation
%29 = or %26, %28
%30 = ne %29, 0:i32
blockpc %9 0 %30 1
%31:i32 = var
blockpc %9 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %9, %32, %33
%35 = shl %34, 24:i32
%36 = ashr %35, 24:i32
%37 = eq %36, 42:i32
blockpc %7 0 %37 1
%38:i32 = var
blockpc %7 1 %38 1
%39:i32 = var
blockpc %8 0 %39 1
%40:i32 = var
blockpc %8 1 %40 1
%41:i32 = var
%42:i32 = var
pc %41 1
pc %42 1
infer %20


; start LHS (in $14)
%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 9
%6 = block 2
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, 0:i32, %10
%12 = or %11, 8192:i32 (hasExternalUses)
%13 = phi %8, %12, %11
%14 = phi %7, %13, %11
%15 = and %14, -65537:i32 (hasExternalUses)
%16 = phi %6, %14, %15
%17 = or %16, 8:i32 (hasExternalUses)
%18 = phi %5, %17, %16, %4, %4, %4, %4, %4, %4, %4
%19 = phi %0, %4, %4, %18
%20 = and %19, 8:i32
%21 = eq %20, 0:i32
%22 = and %14, 8192:i32
%23 = eq %22, 0:i32
blockpc %6 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %6 1 %25 1
%26:i32 = var
%27 = add %26, 0:i32; Replace bad zext operation
%28:i32 = var
%29 = add %28, 0:i32; Replace bad zext operation
%30 = or %27, %29
%31 = ne %30, 0:i32
blockpc %9 0 %31 1
%32:i32 = var
blockpc %9 1 %32 1
%33:i32 = var
%34:i32 = var
%35 = phi %9, %33, %34
%36 = shl %35, 24:i32
%37 = ashr %36, 24:i32
%38 = eq %37, 42:i32
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %8 0 %40 1
%41:i32 = var
blockpc %8 1 %41 1
%42:i32 = var
%43:i32 = var
pc %42 1
pc %43 1
infer %21


; start LHS (in $14)
%0:i64 = var
%1 = eq %0, 0:i64
%2 = block 3
%3 = block 9
%4 = block 2
%5 = block 3
%6:i32 = var
%7:i32 = var
%8 = block 2
%9:i32 = var
blockpc %8 0 %9 1
%10:i32 = var
blockpc %8 1 %10 1
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14:i32 = var
%15 = phi %11, %14, 0:i32
%16 = phi %8, %15, -1:i32
%17 = phi %5, %6, %7, %16
%18 = eq %17, 0:i32
blockpc %4 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %4 1 %20 1
%21 = phi %4, 89:i32, 79:i32
%22 = phi %3, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %21, 0:i32
%23 = phi %2, 72:i32, 72:i32, %22
%24 = eq %23, 67:i32
%25:i32 = var
pc %24 1
pc %25 1
infer %1


; start LHS (in $14)
%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 9
%6 = block 2
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = phi %10, 0:i32, %11
%13 = phi %8, %9, %12
%14 = phi %7, %13, %12
%15 = and %14, -65537:i32 (hasExternalUses)
%16 = phi %6, %14, %15
%17 = or %16, 8:i32 (hasExternalUses)
%18 = phi %5, %17, %16, %4, %4, %4, %4, %4, %4, %4
%19 = phi %0, %4, %4, %18
%20 = and %19, 8:i32
%21 = eq %20, 0:i32
%22:i32 = zext %21
%23:i64 = var
%24 = eq %23, 0:i64
%25:i32 = zext %24
%26 = or %22, %25
%27 = and %14, 8192:i32
%28 = eq %27, 0:i32
blockpc %6 0 %28 1
%29:i32 = var
blockpc %6 1 %29 1
%30:i32 = var
blockpc %7 0 %30 1
%31:i32 = var
blockpc %7 1 %31 1
%32:i32 = var
blockpc %8 0 %32 1
%33:i32 = var
blockpc %8 1 %33 1
%34:i32 = var
blockpc %10 0 %34 1
%35:i32 = var
blockpc %10 1 %35 1
%36:i32 = var
%37:i32 = var
pc %36 1
pc %37 1
infer %26


; start LHS (in $14)
%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 9
%6 = block 2
%7:i32 = var
%8 = shl %7, 24:i32
%9 = ashr %8, 24:i32 (hasExternalUses)
%10 = and %9, -33:i32 (hasExternalUses)
%11 = phi %6, %10, %9
%12 = phi %5, 120:i32, %11, %4, %4, %4, %4, %4, %4, %4
%13 = phi %0, %4, %4, %12
%14 = lshr %13, 4:i32
%15:i32 = var
%16 = ne %15, 0:i32
%17:i32 = zext %16
%18 = and %9, 15:i32
%19 = eq %18, 3:i32
%20:i32 = zext %19
%21 = and %17, %20
%22 = ne %21, 0:i32
blockpc %6 0 %22 1
%23 = eq %21, 0:i32
blockpc %6 1 %23 1
%24 = block 2
%25 = block 3
%26:i32 = var
%27:i32 = var
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34:i32 = var
%35 = phi %31, %34, 0:i32
%36 = phi %28, %35, -1:i32
%37 = phi %25, %26, %27, %36
%38 = eq %37, 0:i32
blockpc %24 0 %38 1
%39:i32 = var
blockpc %24 1 %39 1
%40 = phi %24, 89:i32, 79:i32
%41 = phi %5, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %40, 0:i32
%42 = phi %0, 72:i32, 72:i32, %41
%43 = eq %42, 67:i32
%44:i32 = var
pc %43 1
pc %44 1
infer %14


; start LHS (in $14)
%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 9
%6 = block 2
%7:i32 = var
%8 = shl %7, 24:i32
%9 = ashr %8, 24:i32 (hasExternalUses)
%10 = and %9, -33:i32 (hasExternalUses)
%11 = phi %6, %10, %9
%12 = phi %5, 120:i32, %11, %4, %4, %4, %4, %4, %4, %4
%13 = phi %0, %4, %4, %12
%14 = lshr %13, 4:i32
%15 = add 1930:i32, %14
%16:i32 = var
%17 = ne %16, 0:i32
%18:i32 = zext %17
%19 = and %9, 15:i32
%20 = eq %19, 3:i32
%21:i32 = zext %20
%22 = and %18, %21
%23 = ne %22, 0:i32
blockpc %6 0 %23 1
%24 = eq %22, 0:i32
blockpc %6 1 %24 1
%25 = block 2
%26 = block 3
%27:i32 = var
%28:i32 = var
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35:i32 = var
%36 = phi %32, %35, 0:i32
%37 = phi %29, %36, -1:i32
%38 = phi %26, %27, %28, %37
%39 = eq %38, 0:i32
blockpc %25 0 %39 1
%40:i32 = var
blockpc %25 1 %40 1
%41 = phi %25, 89:i32, 79:i32
%42 = phi %5, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %41, 0:i32
%43 = phi %0, 72:i32, 72:i32, %42
%44 = eq %43, 67:i32
%45:i32 = var
pc %44 1
pc %45 1
infer %15


; start LHS (in $14)
%0 = block 3
%1 = block 9
%2 = block 2
%3 = phi %2, 89:i32, 79:i32
%4 = phi %1, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %3, 0:i32
%5 = phi %0, 72:i32, 72:i32, %4
%6 = eq %5, 72:i32
%7 = block 3
%8:i32 = var
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = shl %11, 24:i32
%13 = ashr %12, 24:i32
%14 = eq %13, 46:i32
blockpc %10 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %10 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = ne %21, 0:i32
blockpc %17 0 %22 1
%23 = eq %21, 0:i32
blockpc %17 1 %23 1
%24:i32 = var
%25 = phi %17, %24, 0:i32
%26 = phi %10, %25, -1:i32
%27 = phi %7, %8, %9, %26
%28 = eq %27, 0:i32
blockpc %2 0 %28 1
%29:i32 = var
blockpc %2 1 %29 1
%30:i32 = var
%31:i32 = var
pc %30 1
pc %31 1
infer %6


; start LHS (in $14)
%0 = block 3
%1 = block 9
%2 = block 2
%3 = phi %2, 89:i32, 79:i32
%4 = phi %1, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %3, 0:i32
%5 = phi %0, 72:i32, 72:i32, %4
%6 = eq %5, 79:i32
%7 = block 3
%8:i32 = var
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = shl %11, 24:i32
%13 = ashr %12, 24:i32
%14 = eq %13, 46:i32
blockpc %10 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %10 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = ne %21, 0:i32
blockpc %17 0 %22 1
%23 = eq %21, 0:i32
blockpc %17 1 %23 1
%24:i32 = var
%25 = phi %17, %24, 0:i32
%26 = phi %10, %25, -1:i32
%27 = phi %7, %8, %9, %26
%28 = eq %27, 0:i32
blockpc %2 0 %28 1
%29:i32 = var
blockpc %2 1 %29 1
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %30 1
pc %31 1
pc %32 1
infer %6


; start LHS (in $14)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 3
%3 = block 9
%4 = block 2
%5 = block 3
%6:i32 = var
%7:i32 = var
%8 = block 2
%9:i32 = var
blockpc %8 0 %9 1
%10:i32 = var
blockpc %8 1 %10 1
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14:i32 = var
%15 = phi %11, %14, 0:i32
%16 = phi %8, %15, -1:i32
%17 = phi %5, %6, %7, %16
%18 = eq %17, 0:i32
blockpc %4 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %4 1 %20 1
%21 = phi %4, 89:i32, 79:i32
%22 = phi %3, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %21, 0:i32
%23 = phi %2, 72:i32, 72:i32, %22
%24 = eq %23, 79:i32
%25:i32 = var
%26:i32 = var
%27:i32 = var
pc %24 1
pc %25 1
pc %26 1
pc %27 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = slt %0, 0:i32
%2 = block 3
%3 = block 9
%4 = block 2
%5 = block 3
%6:i32 = var
%7:i32 = var
%8 = block 2
%9:i32 = var
blockpc %8 0 %9 1
%10:i32 = var
blockpc %8 1 %10 1
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14:i32 = var
%15 = phi %11, %14, 0:i32
%16 = phi %8, %15, -1:i32
%17 = phi %5, %6, %7, %16
%18 = eq %17, 0:i32
blockpc %4 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %4 1 %20 1
%21 = phi %4, 89:i32, 79:i32
%22 = phi %3, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %21, 0:i32
%23 = phi %2, 72:i32, 72:i32, %22
%24 = eq %23, 79:i32
%25:i32 = var
%26:i32 = var
%27:i32 = var
pc %24 1
pc %25 1
pc %26 1
pc %27 1
infer %1


; start LHS (in $14)
%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 9
%6 = block 2
%7 = block 3
%8:i32 = var
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, %12, 0:i32
%14 = phi %10, %13, -1:i32
%15 = phi %7, %8, %9, %14
%16 = phi %6, %4, %15
%17 = phi %5, %4, %4, %4, %4, %4, %4, -1:i32, %16, %4
%18 = phi %0, %4, %4, %17
%19:i32 = var
%20 = sub %18, %19
%21 = eq %15, 0:i32
blockpc %6 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %6 1 %23 1
%24:i32 = var
%25 = shl %24, 24:i32
%26 = ashr %25, 24:i32
%27 = eq %26, 46:i32
blockpc %10 0 %27 1
%28:i32 = var
blockpc %10 1 %28 1
%29:i32 = var
blockpc %11 0 %29 1
%30:i32 = var
blockpc %11 1 %30 1
%31:i32 = var
%32:i32 = var
%33:i32 = var
%34:i32 = var
pc %31 1
pc %32 1
pc %33 1
pc %34 1
infer %20


; start LHS (in $14)
%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 9
%6 = block 2
%7 = block 3
%8:i32 = var
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, %12, 0:i32
%14 = phi %10, %13, -1:i32
%15 = phi %7, %8, %9, %14
%16 = phi %6, %4, %15
%17 = phi %5, %4, %4, %4, %4, %4, %4, -1:i32, %16, %4
%18 = phi %0, %4, %4, %17
%19:i32 = var
%20 = sub %18, %19
%21:i32 = var
%22 = ult %20, %21
%23 = eq %15, 0:i32
blockpc %6 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %6 1 %25 1
%26:i32 = var
%27 = shl %26, 24:i32
%28 = ashr %27, 24:i32
%29 = eq %28, 46:i32
blockpc %10 0 %29 1
%30:i32 = var
blockpc %10 1 %30 1
%31:i32 = var
blockpc %11 0 %31 1
%32:i32 = var
blockpc %11 1 %32 1
%33:i32 = var
%34:i32 = var
%35:i32 = var
%36:i32 = var
pc %33 1
pc %34 1
pc %35 1
pc %36 1
infer %22


; start LHS (in $14)
%0:i32 = var
%1 = slt %0, 0:i32 (hasExternalUses)
%2:i32 = zext %1
%3 = block 3
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 9
%9 = block 2
%10 = block 3
%11:i32 = var
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = phi %14, %15, 0:i32
%17 = phi %13, %16, -1:i32
%18 = phi %10, %11, %12, %17
%19 = phi %9, %7, %18
%20 = phi %8, %7, %7, %7, %7, %7, %7, -1:i32, %19, %7
%21 = phi %3, %7, %7, %20
%22:i32 = var
%23 = sub %21, %22
%24 = ult %23, %0
%25:i32 = zext %24
%26 = or %2, %25
%27 = eq %18, 0:i32
blockpc %9 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %9 1 %29 1
%30:i32 = var
blockpc %13 0 %30 1
%31:i32 = var
blockpc %13 1 %31 1
%32:i32 = var
blockpc %14 0 %32 1
%33:i32 = var
blockpc %14 1 %33 1
%34:i32 = var
%35:i32 = var
%36:i32 = var
%37:i32 = var
pc %34 1
pc %35 1
pc %36 1
pc %37 1
infer %26


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 3
%3 = block 9
%4 = block 2
%5 = block 3
%6:i32 = var
%7:i32 = var
%8 = block 2
%9:i32 = var
blockpc %8 0 %9 1
%10:i32 = var
blockpc %8 1 %10 1
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14:i32 = var
%15 = phi %11, %14, 0:i32
%16 = phi %8, %15, -1:i32
%17 = phi %5, %6, %7, %16
%18 = eq %17, 0:i32
blockpc %4 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %4 1 %20 1
%21 = phi %4, 89:i32, 79:i32
%22 = phi %3, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %21, 0:i32
%23 = phi %2, 72:i32, 72:i32, %22
%24 = eq %23, 79:i32
%25:i32 = var
%26:i32 = var
%27:i32 = var
pc %24 1
pc %25 1
pc %26 1
pc %27 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3 = block 3
%4 = block 9
%5 = block 2
%6 = block 3
%7:i32 = var
%8:i32 = var
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15:i32 = var
%16 = phi %12, %15, 0:i32
%17 = phi %9, %16, -1:i32
%18 = phi %6, %7, %8, %17
%19 = eq %18, 0:i32
blockpc %5 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %5 1 %21 1
%22 = phi %5, 89:i32, 79:i32
%23 = phi %4, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %22, 0:i32
%24 = phi %3, 72:i32, 72:i32, %23
%25 = eq %24, 79:i32
%26:i32 = var
%27:i32 = var
%28:i32 = var
pc %25 1
pc %26 1
pc %27 1
pc %28 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = block 3
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 9
%9 = block 2
%10 = block 3
%11:i32 = var
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = phi %14, %15, 0:i32
%17 = phi %13, %16, -1:i32
%18 = phi %10, %11, %12, %17
%19 = phi %9, %7, %18
%20 = phi %8, %7, %7, %7, %7, %7, %7, -1:i32, %19, %7
%21 = phi %3, %7, %7, %20
%22 = ult %2, %21
%23 = eq %18, 0:i32
blockpc %9 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %9 1 %25 1
%26:i32 = var
%27 = shl %26, 24:i32
%28 = ashr %27, 24:i32
%29 = eq %28, 46:i32
blockpc %13 0 %29 1
%30:i32 = var
blockpc %13 1 %30 1
%31:i32 = var
blockpc %14 0 %31 1
%32:i32 = var
blockpc %14 1 %32 1
%33:i32 = var
%34:i32 = var
%35:i32 = var
%36:i32 = var
pc %33 1
pc %34 1
pc %35 1
pc %36 1
infer %22


; start LHS (in $14)
%0 = block 3
%1 = phi %0, 0:i32, 83:i32, 0:i32
%2 = eq %1, 83:i32
%3 = block 3
%4 = block 9
%5 = block 2
%6 = block 3
%7:i32 = var
%8:i32 = var
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15:i32 = var
%16 = phi %12, %15, 0:i32
%17 = phi %9, %16, -1:i32
%18 = phi %6, %7, %8, %17
%19 = eq %18, 0:i32
blockpc %5 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %5 1 %21 1
%22 = phi %5, 89:i32, 79:i32
%23 = phi %4, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %22, 0:i32
%24 = phi %3, 72:i32, 72:i32, %23
%25 = eq %24, 79:i32
%26:i32 = var
%27:i32 = var
%28:i32 = var
pc %25 1
pc %26 1
pc %27 1
pc %28 1
infer %2


; start LHS (in $14)
%0 = block 2
%1 = block 3
%2:i32 = var
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = add %7, %2 (hasExternalUses)
%9 = phi %1, %2, %6, %8
%10 = phi %0, %9, %2
%11 = eq %10, 0:i32
%12 = phi %1, 0:i32, 83:i32, 0:i32
%13 = eq %12, 83:i32
blockpc %0 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %0 1 %15 1
%16 = block 3
%17 = block 9
%18 = block 2
%19 = block 3
%20:i32 = var
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29 = phi %25, %28, 0:i32
%30 = phi %22, %29, -1:i32
%31 = phi %19, %20, %21, %30
%32 = eq %31, 0:i32
blockpc %18 0 %32 1
%33:i32 = var
blockpc %18 1 %33 1
%34 = phi %18, 89:i32, 79:i32
%35 = phi %17, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %34, 0:i32
%36 = phi %16, 72:i32, 72:i32, %35
%37 = eq %36, 79:i32
%38:i32 = var
%39:i32 = var
%40:i32 = var
pc %37 1
pc %38 1
pc %39 1
pc %40 1
infer %11


; start LHS (in $14)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3 = block 3
%4 = phi %3, 0:i32, 83:i32, 0:i32
%5 = eq %4, 83:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13:i32 = var
%14 = add %13, %8
%15 = phi %3, %8, %12, %14
%16 = phi %2, %15, %8
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = block 3
%21 = block 9
%22 = block 2
%23 = block 3
%24:i32 = var
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33 = phi %29, %32, 0:i32
%34 = phi %26, %33, -1:i32
%35 = phi %23, %24, %25, %34
%36 = eq %35, 0:i32
blockpc %22 0 %36 1
%37:i32 = var
blockpc %22 1 %37 1
%38 = phi %22, 89:i32, 79:i32
%39 = phi %21, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %38, 0:i32
%40 = phi %20, 72:i32, 72:i32, %39
%41 = eq %40, 79:i32
%42:i32 = var
%43:i32 = var
%44:i32 = var
pc %19 1
pc %41 1
pc %42 1
pc %43 1
pc %44 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3 = block 2
%4 = block 3
%5 = phi %4, 0:i32, 83:i32, 0:i32
%6 = eq %5, 83:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14:i32 = var
%15 = add %14, %9
%16 = phi %4, %9, %13, %15
%17 = phi %3, %16, %9
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21 = block 3
%22 = block 9
%23 = block 2
%24 = block 3
%25:i32 = var
%26:i32 = var
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34 = phi %30, %33, 0:i32
%35 = phi %27, %34, -1:i32
%36 = phi %24, %25, %26, %35
%37 = eq %36, 0:i32
blockpc %23 0 %37 1
%38:i32 = var
blockpc %23 1 %38 1
%39 = phi %23, 89:i32, 79:i32
%40 = phi %22, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %39, 0:i32
%41 = phi %21, 72:i32, 72:i32, %40
%42 = eq %41, 79:i32
%43:i32 = var
%44:i32 = var
%45:i32 = var
pc %20 1
pc %42 1
pc %43 1
pc %44 1
pc %45 1
infer %2


; start LHS (in $14)
%0 = block 2
%1 = block 3
%2:i32 = var
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = add %7, %2 (hasExternalUses)
%9 = phi %1, %2, %6, %8
%10 = phi %0, %9, %2
%11:i32 = var
%12:i32 = var
%13 = add %11, %12 (hasExternalUses)
%14 = slt %10, %13
%15 = phi %1, 0:i32, 83:i32, 0:i32
%16 = eq %15, 83:i32
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = eq %10, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = block 3
%23 = block 9
%24 = block 2
%25 = block 3
%26:i32 = var
%27:i32 = var
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34:i32 = var
%35 = phi %31, %34, 0:i32
%36 = phi %28, %35, -1:i32
%37 = phi %25, %26, %27, %36
%38 = eq %37, 0:i32
blockpc %24 0 %38 1
%39:i32 = var
blockpc %24 1 %39 1
%40 = phi %24, 89:i32, 79:i32
%41 = phi %23, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %40, 0:i32
%42 = phi %22, 72:i32, 72:i32, %41
%43 = eq %42, 79:i32
%44:i32 = var
%45:i32 = var
%46:i32 = var
pc %21 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
infer %14


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3 = block 3
%4 = phi %3, 0:i32, 83:i32, 0:i32
%5 = eq %4, 83:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13:i32 = var
%14 = add %13, %8
%15 = phi %3, %8, %12, %14
%16 = phi %2, %15, %8
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = block 3
%21 = block 9
%22 = block 2
%23 = block 3
%24:i32 = var
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33 = phi %29, %32, 0:i32
%34 = phi %26, %33, -1:i32
%35 = phi %23, %24, %25, %34
%36 = eq %35, 0:i32
blockpc %22 0 %36 1
%37:i32 = var
blockpc %22 1 %37 1
%38 = phi %22, 89:i32, 79:i32
%39 = phi %21, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %38, 0:i32
%40 = phi %20, 72:i32, 72:i32, %39
%41 = eq %40, 79:i32
%42:i32 = var
%43:i32 = var
%44:i32 = var
pc %19 1
pc %41 1
pc %42 1
pc %43 1
pc %44 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = block 2
%4 = block 3
%5:i32 = var
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10:i32 = var
%11 = add %10, %5 (hasExternalUses)
%12 = phi %4, %5, %9, %11
%13 = phi %3, %12, %5
%14 = ult %2, %13
%15 = phi %4, 0:i32, 83:i32, 0:i32
%16 = eq %15, 83:i32
blockpc %3 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %3 1 %18 1
%19 = eq %13, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = block 3
%23 = block 9
%24 = block 2
%25 = block 3
%26:i32 = var
%27:i32 = var
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34:i32 = var
%35 = phi %31, %34, 0:i32
%36 = phi %28, %35, -1:i32
%37 = phi %25, %26, %27, %36
%38 = eq %37, 0:i32
blockpc %24 0 %38 1
%39:i32 = var
blockpc %24 1 %39 1
%40 = phi %24, 89:i32, 79:i32
%41 = phi %23, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %40, 0:i32
%42 = phi %22, 72:i32, 72:i32, %41
%43 = eq %42, 79:i32
%44:i32 = var
%45:i32 = var
%46:i32 = var
pc %21 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
infer %14


; start LHS (in $14)
%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 3
%5 = block 9
%6 = block 2
%7 = phi %6, 89:i32, 79:i32
%8 = phi %5, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %7, 0:i32
%9 = phi %4, 72:i32, 72:i32, %8
%10 = phi %3, %9, 89:i32
%11 = phi %2, 73:i32, %10
%12 = phi %1, 73:i32, %11
%13 = phi %0, 89:i32, 89:i32, %12
%14 = eq %13, 73:i32
%15 = eq %9, 67:i32
blockpc %1 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %1 1 %17 1
%18 = eq %9, 72:i32
blockpc %2 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %2 1 %20 1
%21 = eq %9, 79:i32
blockpc %3 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %3 1 %23 1
%24:i32 = var
blockpc %6 0 %24 1
%25:i32 = var
blockpc %6 1 %25 1
%26:i32 = var
pc %26 1
infer %14


; start LHS (in $14)
%0 = block 3
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 9
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = block 2
%14:i32 = var
%15 = phi %13, 0:i32, %14
%16 = phi %11, %12, %15
%17 = phi %10, %16, %15
%18 = and %17, -65537:i32 (hasExternalUses)
%19 = phi %9, %17, %18
%20 = or %19, 8:i32 (hasExternalUses)
%21 = phi %8, %20, %19, %7, %7, %7, %7, %7, %7, %7
%22 = phi %3, %7, %7, %21
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = phi %4, %24, %25
%27 = phi %8, %26, %26, %19, %26, %26, %26, %26, %26, %26
%28 = phi %3, %26, %26, %27
%29 = phi %23, %19, %28
%30 = phi %2, %22, %29
%31 = phi %0, %1, %1, %30
%32 = and %31, -65537:i32
%33:i32 = var
blockpc %2 0 %33 1
%34:i32 = var
blockpc %2 1 %34 1
%35:i32 = var
blockpc %9 0 %35 1
%36:i32 = var
blockpc %9 1 %36 1
%37:i32 = var
blockpc %10 0 %37 1
%38:i32 = var
blockpc %10 1 %38 1
%39:i32 = var
blockpc %11 0 %39 1
%40:i32 = var
blockpc %11 1 %40 1
%41:i32 = var
blockpc %13 0 %41 1
%42:i32 = var
blockpc %13 1 %42 1
%43:i32 = var
blockpc %23 0 %43 1
%44:i32 = var
blockpc %23 1 %44 1
%45:i32 = var
%46:i32 = var
pc %45 1
pc %46 1
infer %32


; start LHS (in $14)
%0 = block 3
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 9
%9 = block 2
%10 = block 3
%11:i32 = var
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = phi %14, %15, 0:i32
%17 = phi %13, %16, -1:i32
%18 = phi %10, %11, %12, %17
%19 = phi %9, %18, 8:i32
%20 = phi %8, %19, %18, %7, %7, %7, %7, %7, %7, %7
%21 = phi %3, %7, %7, %20
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %4, %23, %24
%26 = block 2
%27:i32 = var
%28:i32 = var
%29 = phi %4, %27, %28
%30:i32 = var
%31 = sub %29, %30 (hasExternalUses)
%32 = add %31, 1:i32 (hasExternalUses)
%33 = phi %26, %18, %32
%34 = phi %8, %25, %25, %33, %25, %25, %25, %25, %25, %25
%35 = phi %3, %25, %25, %34
%36 = phi %22, %18, %35
%37 = phi %2, %21, %36
%38 = phi %0, %1, %1, %37
%39 = slt -1:i32, %38
%40:i32 = var
blockpc %2 0 %40 1
%41:i32 = var
blockpc %2 1 %41 1
%42:i32 = var
blockpc %9 0 %42 1
%43:i32 = var
blockpc %9 1 %43 1
%44:i32 = var
blockpc %13 0 %44 1
%45:i32 = var
blockpc %13 1 %45 1
%46:i32 = var
blockpc %14 0 %46 1
%47:i32 = var
blockpc %14 1 %47 1
%48:i32 = var
blockpc %22 0 %48 1
%49:i32 = var
blockpc %22 1 %49 1
%50:i32 = var
blockpc %26 0 %50 1
%51:i32 = var
blockpc %26 1 %51 1
%52:i32 = var
%53:i32 = var
pc %52 1
pc %53 1
infer %39


; start LHS (in $14)
%0:i64 = var
%1 = ne %0, 0:i64
%2 = block 3
%3 = block 2
%4 = block 3
%5 = block 9
%6 = block 2
%7:i32 = var
blockpc %6 0 %7 1
%8:i32 = var
blockpc %6 1 %8 1
%9 = phi %6, 89:i32, 79:i32
%10 = phi %5, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %9, 0:i32
%11 = phi %4, 72:i32, 72:i32, %10
%12 = eq %11, 67:i32
blockpc %3 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %3 1 %14 1
%15 = block 2
%16 = eq %11, 72:i32
blockpc %15 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %15 1 %18 1
%19 = block 2
%20 = eq %11, 79:i32
blockpc %19 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %19 1 %22 1
%23 = phi %19, %11, 89:i32
%24 = phi %15, 73:i32, %23
%25 = phi %3, 73:i32, %24
%26 = phi %2, 89:i32, 89:i32, %25
%27 = eq %26, 73:i32
%28:i32 = var
pc %27 1
pc %28 1
infer %1


; start LHS (in $14)
%0 = block 3
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 9
%9 = block 2
%10 = block 3
%11:i32 = var
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = phi %14, %15, 0:i32
%17 = phi %13, %16, -1:i32
%18 = phi %10, %11, %12, %17
%19 = phi %9, %18, 8:i32
%20 = phi %8, %19, %18, %7, %7, %7, %7, %7, %7, %7
%21 = phi %3, %7, %7, %20
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %4, %23, %24
%26 = block 2
%27:i32 = var
%28:i32 = var
%29 = phi %4, %27, %28
%30:i32 = var
%31 = sub %29, %30 (hasExternalUses)
%32 = add %31, 1:i32 (hasExternalUses)
%33 = phi %26, %18, %32
%34 = phi %8, %25, %25, %33, %25, %25, %25, %25, %25, %25
%35 = phi %3, %25, %25, %34
%36 = phi %22, %18, %35
%37 = phi %2, %21, %36
%38 = phi %0, %1, %1, %37
%39 = ne %38, 0:i32
%40:i32 = var
blockpc %2 0 %40 1
%41:i32 = var
blockpc %2 1 %41 1
%42:i32 = var
blockpc %9 0 %42 1
%43:i32 = var
blockpc %9 1 %43 1
%44:i32 = var
blockpc %13 0 %44 1
%45:i32 = var
blockpc %13 1 %45 1
%46:i32 = var
blockpc %14 0 %46 1
%47:i32 = var
blockpc %14 1 %47 1
%48:i32 = var
blockpc %22 0 %48 1
%49:i32 = var
blockpc %22 1 %49 1
%50:i32 = var
blockpc %26 0 %50 1
%51:i32 = var
blockpc %26 1 %51 1
%52:i32 = var
%53:i32 = var
pc %52 1
pc %53 1
infer %39


; start LHS (in $14)
%0 = block 3
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 9
%9 = block 2
%10 = block 3
%11:i32 = var
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = phi %14, %15, 0:i32
%17 = phi %13, %16, -1:i32
%18 = phi %10, %11, %12, %17
%19 = phi %9, %18, 8:i32
%20 = phi %8, %19, %18, %7, %7, %7, %7, %7, %7, %7
%21 = phi %3, %7, %7, %20
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %4, %23, %24
%26 = block 2
%27:i32 = var
%28 = phi %26, %18, %27
%29 = phi %8, %25, %25, %28, %25, %25, %25, %25, %25, %25
%30 = phi %3, %25, %25, %29
%31 = phi %22, %18, %30
%32 = phi %2, %21, %31
%33 = phi %0, %1, %1, %32
%34 = ne %33, 0:i32
%35:i32 = zext %34
%36:i32 = var
%37 = add %36, 0:i32; Replace bad zext operation
%38 = or %35, %37
%39:i32 = var
blockpc %2 0 %39 1
%40:i32 = var
blockpc %2 1 %40 1
%41:i32 = var
blockpc %9 0 %41 1
%42:i32 = var
blockpc %9 1 %42 1
%43:i32 = var
blockpc %13 0 %43 1
%44:i32 = var
blockpc %13 1 %44 1
%45:i32 = var
blockpc %14 0 %45 1
%46:i32 = var
blockpc %14 1 %46 1
%47:i32 = var
blockpc %22 0 %47 1
%48:i32 = var
blockpc %22 1 %48 1
%49:i32 = var
blockpc %26 0 %49 1
%50:i32 = var
blockpc %26 1 %50 1
%51:i32 = var
%52:i32 = var
pc %51 1
pc %52 1
infer %38


; start LHS (in $14)
%0:i64 = var
%1 = ne %0, 0:i64 (hasExternalUses)
%2:i32 = zext %1
%3 = xor %2, 1:i32
%4 = block 3
%5 = block 2
%6 = block 3
%7 = block 9
%8 = block 2
%9:i32 = var
blockpc %8 0 %9 1
%10:i32 = var
blockpc %8 1 %10 1
%11 = phi %8, 89:i32, 79:i32
%12 = phi %7, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %11, 0:i32
%13 = phi %6, 72:i32, 72:i32, %12
%14 = eq %13, 67:i32
blockpc %5 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %5 1 %16 1
%17 = block 2
%18 = eq %13, 72:i32
blockpc %17 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %17 1 %20 1
%21 = block 2
%22 = eq %13, 79:i32
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = phi %21, %13, 89:i32
%25 = phi %17, 73:i32, %24
%26 = phi %5, 73:i32, %25
%27 = phi %4, 89:i32, 89:i32, %26
%28 = eq %27, 73:i32
%29:i32 = var
pc %28 1
pc %29 1
infer %3


; start LHS (in $14)
%0 = block 3
%1:i32 = var
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = phi %0, %1, %1, %5
%7:i32 = var
%8 = block 2
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = block 3
%13:i32 = var
%14:i32 = var
%15 = phi %2, %13, %14
%16 = block 9
%17:i32 = var
%18 = phi %16, %15, %15, %17, %15, %15, %15, %15, %15, %15
%19 = phi %12, %15, %15, %18
%20 = phi %10, %11, %19
%21 = phi %8, %9, %20
%22 = phi %0, %7, %7, %21
%23 = sub %6, %22
%24 = block 2
%25 = block 3
%26:i32 = var
%27:i32 = var
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34:i32 = var
%35 = phi %31, %34, 0:i32
%36 = phi %28, %35, -1:i32
%37 = phi %25, %26, %27, %36
%38 = eq %37, 0:i32
blockpc %24 0 %38 1
%39:i32 = var
blockpc %24 1 %39 1
%40 = phi %24, 89:i32, 79:i32
%41 = phi %16, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %40, 0:i32
%42 = phi %12, 72:i32, 72:i32, %41
%43 = eq %42, 67:i32
blockpc %8 0 %43 1
%44:i32 = var
blockpc %8 1 %44 1
%45:i32 = var
blockpc %10 0 %45 1
%46:i32 = var
blockpc %10 1 %46 1
%47:i32 = var
%48:i32 = var
pc %47 1
pc %48 1
infer %23


; start LHS (in $14)
%0:i64 = var
%1 = ne %0, 0:i64 (hasExternalUses)
%2:i32 = zext %1
%3 = xor %2, 1:i32
%4 = and %3, 1:i32
%5 = block 3
%6 = block 2
%7 = block 3
%8 = block 9
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12 = phi %9, 89:i32, 79:i32
%13 = phi %8, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %12, 0:i32
%14 = phi %7, 72:i32, 72:i32, %13
%15 = eq %14, 67:i32
blockpc %6 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %6 1 %17 1
%18 = block 2
%19 = eq %14, 72:i32
blockpc %18 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %18 1 %21 1
%22 = block 2
%23 = eq %14, 79:i32
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = phi %22, %14, 89:i32
%26 = phi %18, 73:i32, %25
%27 = phi %6, 73:i32, %26
%28 = phi %5, 89:i32, 89:i32, %27
%29 = eq %28, 73:i32
%30:i32 = var
pc %29 1
pc %30 1
infer %4


; start LHS (in $14)
%0 = block 3
%1:i32 = var
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = phi %0, %1, %1, %5
%7:i32 = var
%8 = block 2
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = block 3
%13:i32 = var
%14:i32 = var
%15 = phi %2, %13, %14
%16 = block 9
%17:i32 = var
%18 = phi %16, %15, %15, %17, %15, %15, %15, %15, %15, %15
%19 = phi %12, %15, %15, %18
%20 = phi %10, %11, %19
%21 = phi %8, %9, %20
%22 = phi %0, %7, %7, %21
%23 = sub %6, %22
%24:i64 = var
%25 = ne %24, 0:i64 (hasExternalUses)
%26:i32 = zext %25
%27 = xor %26, 1:i32
%28 = and %27, 1:i32
%29 = add %23, %28
%30:i32 = var
blockpc %8 0 %30 1
%31:i32 = var
blockpc %8 1 %31 1
%32:i32 = var
blockpc %10 0 %32 1
%33:i32 = var
blockpc %10 1 %33 1
%34:i32 = var
%35:i32 = var
pc %34 1
pc %35 1
infer %29


; start LHS (in $14)
%0 = block 3
%1:i32 = var
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = phi %0, %1, %1, %5
%7:i32 = var
%8 = block 2
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = block 3
%13:i32 = var
%14:i32 = var
%15 = phi %2, %13, %14
%16 = block 9
%17:i32 = var
%18 = phi %16, %15, %15, %17, %15, %15, %15, %15, %15, %15
%19 = phi %12, %15, %15, %18
%20 = phi %10, %11, %19
%21 = phi %8, %9, %20
%22 = phi %0, %7, %7, %21
%23 = sub %6, %22
%24:i64 = var
%25 = ne %24, 0:i64 (hasExternalUses)
%26:i32 = zext %25
%27 = xor %26, 1:i32
%28 = and %27, 1:i32
%29 = add %23, %28 (hasExternalUses)
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33 = phi %2, %31, %32
%34 = block 2
%35 = block 3
%36:i32 = var
%37:i32 = var
%38 = block 2
%39 = block 2
%40:i32 = var
%41 = phi %39, %40, 0:i32
%42 = phi %38, %41, -1:i32
%43 = phi %35, %36, %37, %42
%44 = phi %34, %43, 8:i32
%45 = phi %16, %44, %43, %33, %33, %33, %33, %33, %33, %33
%46 = phi %12, %33, %33, %45
%47:i32 = var
%48:i32 = var
%49 = phi %2, %47, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, %43, %51
%53 = phi %16, %49, %49, %52, %49, %49, %49, %49, %49, %49
%54 = phi %12, %49, %49, %53
%55 = phi %10, %43, %54
%56 = phi %8, %46, %55
%57 = phi %0, %30, %30, %56
%58 = slt %29, %57
%59:i32 = var
blockpc %8 0 %59 1
%60:i32 = var
blockpc %8 1 %60 1
%61:i32 = var
blockpc %10 0 %61 1
%62:i32 = var
blockpc %10 1 %62 1
%63:i32 = var
blockpc %34 0 %63 1
%64:i32 = var
blockpc %34 1 %64 1
%65:i32 = var
blockpc %38 0 %65 1
%66:i32 = var
blockpc %38 1 %66 1
%67:i32 = var
blockpc %39 0 %67 1
%68:i32 = var
blockpc %39 1 %68 1
%69:i32 = var
blockpc %50 0 %69 1
%70:i32 = var
blockpc %50 1 %70 1
%71:i32 = var
%72:i32 = var
pc %71 1
pc %72 1
infer %58


; start LHS (in $14)
%0 = block 3
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 3
%5 = block 9
%6 = block 2
%7 = phi %6, 89:i32, 79:i32
%8 = phi %5, 67:i32, 67:i32, 73:i32, 72:i32, 0:i32, 0:i32, 79:i32, %7, 0:i32
%9 = phi %4, 72:i32, 72:i32, %8
%10 = phi %3, %9, 89:i32
%11 = phi %2, 73:i32, %10
%12 = phi %1, 73:i32, %11
%13 = phi %0, 89:i32, 89:i32, %12
%14 = eq %13, 89:i32
%15 = eq %9, 67:i32
blockpc %1 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %1 1 %17 1
%18 = eq %9, 72:i32
blockpc %2 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %2 1 %20 1
%21 = eq %9, 79:i32
blockpc %3 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %3 1 %23 1
%24:i32 = var
blockpc %6 0 %24 1
%25:i32 = var
blockpc %6 1 %25 1
%26:i32 = var
%27:i32 = var
pc %26 1
pc %27 1
infer %14


; start LHS (in $14)
%0 = block 3
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = shl 1:i32, %6
%8:i32 = var
%9 = or %7, %8 (hasExternalUses)
%10 = phi %5, 0:i32, %9
%11 = or %10, 8192:i32 (hasExternalUses)
%12 = phi %4, %11, %10
%13 = phi %3, %12, %10
%14 = and %13, -65537:i32 (hasExternalUses)
%15 = phi %2, %13, %14
%16 = phi %0, %1, %1, %15
%17 = xor %16, 8192:i32
%18 = and %13, 8192:i32
%19 = eq %18, 0:i32
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22:i32 = var
%23 = add %22, 0:i32; Replace bad zext operation
%24:i32 = var
%25 = add %24, 0:i32; Replace bad zext operation
%26 = or %23, %25
%27 = ne %26, 0:i32
blockpc %5 0 %27 1
%28:i32 = var
blockpc %5 1 %28 1
%29:i32 = var
%30:i32 = var
%31 = phi %5, %29, %30
%32 = shl %31, 24:i32
%33 = ashr %32, 24:i32
%34 = eq %33, 42:i32
blockpc %3 0 %34 1
%35:i32 = var
blockpc %3 1 %35 1
%36:i32 = var
blockpc %4 0 %36 1
%37:i32 = var
blockpc %4 1 %37 1
%38:i32 = var
%39:i32 = var
%40:i32 = var
pc %38 1
pc %39 1
pc %40 1
infer %17


; start LHS (in $14)
%0 = block 3
%1:i32 = var
%2 = block 2
%3 = block 3
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = block 9
%9 = block 2
%10 = phi %9, 0:i32, %7
%11 = phi %8, %7, %7, %7, %7, %7, %7, %7, %10, %7
%12 = phi %3, %7, %7, %11
%13 = block 2
%14 = block 2
%15 = block 2
%16 = block 2
%17 = block 3
%18:i32 = var
%19:i32 = var
%20:i32 = var
%21 = phi %4, %19, %20
%22:i32 = var
%23 = add %22, %18 (hasExternalUses)
%24 = phi %17, %18, %21, %23
%25 = phi %16, %24, %18
%26 = phi %15, 0:i32, %25
%27 = phi %14, %12, %26
%28 = phi %13, %12, %27
%29 = phi %2, %12, %28
%30 = phi %0, %1, %1, %29
%31:i32 = var
%32 = block 2
%33 = block 2
%34:i32 = var
%35 = block 2
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %4, %37, %38
%40 = block 2
%41:i32 = var
%42 = phi %40, %41, %39
%43 = phi %36, %39, %42
%44 = block 2
%45:i32 = var
%46 = phi %44, %45, 0:i32
%47 = phi %35, %43, %46
%48 = phi %33, %34, %47
%49:i32 = var
%50 = phi %32, %48, %49
%51 = phi %0, %31, %31, %50
%52 = slt %30, %51
%53:i32 = var
blockpc %2 0 %53 1
%54:i32 = var
blockpc %2 1 %54 1
%55:i32 = var
blockpc %9 0 %55 1
%56:i32 = var
blockpc %9 1 %56 1
%57:i32 = var
blockpc %13 0 %57 1
%58:i32 = var
blockpc %13 1 %58 1
%59:i32 = var
blockpc %14 0 %59 1
%60:i32 = var
blockpc %14 1 %60 1
%61:i32 = var
blockpc %15 0 %61 1
%62:i32 = var
blockpc %15 1 %62 1
%63:i32 = var
blockpc %16 0 %63 1
%64:i32 = var
blockpc %16 1 %64 1
%65:i32 = var
blockpc %32 0 %65 1
%66:i32 = var
blockpc %32 1 %66 1
%67:i32 = var
blockpc %33 0 %67 1
%68:i32 = var
blockpc %33 1 %68 1
%69:i32 = var
blockpc %35 0 %69 1
%70:i32 = var
blockpc %35 1 %70 1
%71:i32 = var
blockpc %36 0 %71 1
%72:i32 = var
blockpc %36 1 %72 1
%73:i32 = var
blockpc %40 0 %73 1
%74:i32 = var
blockpc %40 1 %74 1
%75:i32 = var
blockpc %44 0 %75 1
%76:i32 = var
blockpc %44 1 %76 1
%77:i32 = var
%78:i32 = var
%79:i32 = var
pc %77 1
pc %78 1
pc %79 1
infer %52


; start LHS (in $14)
%0 = block 2
%1 = block 3
%2:i32 = var
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = phi %1, %2, %2, %6
%8:i32 = var
%9 = block 3
%10:i32 = var
%11:i32 = var
%12 = phi %3, %10, %11
%13 = block 9
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = phi %15, 1940:i32, %16
%18 = block 3
%19:i32 = var
%20:i32 = var
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, 0:i32
%25 = phi %21, %24, -1:i32
%26 = phi %18, %19, %20, %25
%27 = add %17, %26
%28:i32 = var
%29 = phi %14, %27, %28
%30 = phi %13, %12, %12, %12, %12, %6, %29, %12, %12, %6
%31 = phi %9, %12, %12, %30
%32 = phi %1, %8, %8, %31
%33 = phi %0, %7, %32
%34 = block 2
%35:i32 = var
%36 = block 2
%37:i32 = var
%38 = block 2
%39:i32 = var
%40:i32 = var
%41:i32 = var
%42 = phi %3, %40, %41
%43:i32 = var
%44 = phi %13, %42, %42, %43, %42, %42, %42, %42, %42, %42
%45 = phi %9, %42, %42, %44
%46 = phi %38, %39, %45
%47 = phi %36, %37, %46
%48 = phi %1, %35, %35, %47
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52 = phi %3, %50, %51
%53 = phi %1, %49, %49, %52
%54 = phi %34, %48, %53
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58 = phi %3, %56, %57
%59:i32 = var
%60:i32 = var
%61 = phi %3, %59, %60
%62:i32 = var
%63:i32 = var
%64 = phi %3, %62, %63
%65 = phi %13, %58, %58, %58, %58, %61, %17, %58, %58, %64
%66 = phi %9, %58, %58, %65
%67 = phi %1, %55, %55, %66
%68 = phi %0, %54, %67
%69 = sub %33, %68
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %14 0 %72 1
%73:i32 = var
blockpc %14 1 %73 1
%74:i32 = var
blockpc %15 0 %74 1
%75:i32 = var
blockpc %15 1 %75 1
%76:i32 = var
blockpc %21 0 %76 1
%77:i32 = var
blockpc %21 1 %77 1
%78:i32 = var
blockpc %22 0 %78 1
%79:i32 = var
blockpc %22 1 %79 1
%80:i32 = var
blockpc %34 0 %80 1
%81:i32 = var
blockpc %34 1 %81 1
%82:i32 = var
blockpc %36 0 %82 1
%83:i32 = var
blockpc %36 1 %83 1
%84:i32 = var
blockpc %38 0 %84 1
%85:i32 = var
blockpc %38 1 %85 1
%86:i32 = var
pc %86 1
infer %69


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 3
%4:i32 = var
%5 = block 2
%6 = block 3
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 9
%12 = block 2
%13 = block 3
%14:i32 = var
%15:i32 = var
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = phi %17, %18, 0:i32
%20 = phi %16, %19, -1:i32
%21 = phi %13, %14, %15, %20
%22 = phi %12, %21, 8:i32
%23 = phi %11, %22, %21, %10, %10, %10, %10, %10, %10, %10
%24 = phi %6, %10, %10, %23
%25 = block 2
%26:i32 = var
%27:i32 = var
%28 = phi %7, %26, %27
%29 = block 2
%30:i32 = var
%31 = phi %29, %21, %30
%32 = phi %11, %28, %28, %31, %28, %28, %28, %28, %28, %28
%33 = phi %6, %28, %28, %32
%34 = phi %25, %21, %33
%35 = phi %5, %24, %34
%36 = phi %3, %4, %4, %35
%37:i32 = var
%38 = phi %2, %36, %37
%39 = phi %1, %38, 0:i32
%40:i32 = var
%41:i32 = var
%42:i32 = var
%43 = phi %7, %41, %42
%44 = block 2
%45:i32 = var
%46 = phi %44, %21, %45
%47 = phi %11, %43, %43, %43, %43, 1:i32, %46, %43, %43, %21
%48 = phi %6, %43, %43, %47
%49 = phi %3, %40, %40, %48
%50 = phi %0, %39, %49
%51:i32 = var
%52 = slt %50, %51
%53:i32 = var
blockpc %0 0 %53 1
%54:i32 = var
blockpc %0 1 %54 1
%55:i32 = var
blockpc %1 0 %55 1
%56:i32 = var
blockpc %1 1 %56 1
%57:i32 = var
blockpc %2 0 %57 1
%58:i32 = var
blockpc %2 1 %58 1
%59:i32 = var
blockpc %5 0 %59 1
%60:i32 = var
blockpc %5 1 %60 1
%61:i32 = var
blockpc %12 0 %61 1
%62:i32 = var
blockpc %12 1 %62 1
%63:i32 = var
blockpc %16 0 %63 1
%64:i32 = var
blockpc %16 1 %64 1
%65:i32 = var
blockpc %17 0 %65 1
%66:i32 = var
blockpc %17 1 %66 1
%67:i32 = var
blockpc %25 0 %67 1
%68:i32 = var
blockpc %25 1 %68 1
%69:i32 = var
blockpc %29 0 %69 1
%70:i32 = var
blockpc %29 1 %70 1
%71:i32 = var
blockpc %44 0 %71 1
%72:i32 = var
blockpc %44 1 %72 1
%73:i32 = var
pc %73 1
infer %52


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = var
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = phi %4, %5, %6
%8 = phi %2, %3, %3, %7
%9:i32 = var
%10 = block 3
%11:i32 = var
%12:i32 = var
%13 = phi %4, %11, %12
%14 = block 9
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = phi %16, 1940:i32, %17
%19 = block 3
%20:i32 = var
%21:i32 = var
%22 = block 2
%23 = block 2
%24:i32 = var
%25 = phi %23, %24, 0:i32
%26 = phi %22, %25, -1:i32
%27 = phi %19, %20, %21, %26
%28 = add %18, %27
%29:i32 = var
%30 = phi %15, %28, %29
%31 = phi %14, %13, %13, %13, %13, %7, %30, %13, %13, %7
%32 = phi %10, %13, %13, %31
%33 = phi %2, %9, %9, %32
%34 = phi %1, %8, %33
%35 = block 2
%36:i32 = var
%37 = block 2
%38:i32 = var
%39 = block 2
%40:i32 = var
%41:i32 = var
%42:i32 = var
%43 = phi %4, %41, %42
%44:i32 = var
%45 = phi %14, %43, %43, %44, %43, %43, %43, %43, %43, %43
%46 = phi %10, %43, %43, %45
%47 = phi %39, %40, %46
%48 = phi %37, %38, %47
%49 = phi %2, %36, %36, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53 = phi %4, %51, %52
%54 = phi %2, %50, %50, %53
%55 = phi %35, %49, %54
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59 = phi %4, %57, %58
%60:i32 = var
%61:i32 = var
%62 = phi %4, %60, %61
%63:i32 = var
%64:i32 = var
%65 = phi %4, %63, %64
%66 = phi %14, %59, %59, %59, %59, %62, %18, %59, %59, %65
%67 = phi %10, %59, %59, %66
%68 = phi %2, %56, %56, %67
%69 = phi %1, %55, %68
%70 = sub %34, %69 (hasExternalUses)
%71 = block 2
%72 = block 2
%73:i32 = var
%74:i32 = var
%75:i32 = var
%76 = phi %4, %74, %75
%77 = block 2
%78 = phi %77, %27, 8:i32
%79 = phi %14, %78, %27, %76, %76, %76, %76, %76, %76, %76
%80 = phi %10, %76, %76, %79
%81:i32 = var
%82:i32 = var
%83 = phi %4, %81, %82
%84 = block 2
%85:i32 = var
%86 = phi %84, %27, %85
%87 = phi %14, %83, %83, %86, %83, %83, %83, %83, %83, %83
%88 = phi %10, %83, %83, %87
%89 = phi %39, %27, %88
%90 = phi %37, %80, %89
%91 = phi %2, %73, %73, %90
%92:i32 = var
%93 = phi %72, %91, %92
%94 = phi %71, %93, 0:i32
%95:i32 = var
%96:i32 = var
%97:i32 = var
%98 = phi %4, %96, %97
%99 = block 2
%100:i32 = var
%101 = phi %99, %27, %100
%102 = phi %14, %98, %98, %98, %98, 1:i32, %101, %98, %98, %27
%103 = phi %10, %98, %98, %102
%104 = phi %2, %95, %95, %103
%105 = phi %1, %94, %104
%106 = phi %0, %70, %105
%107:i32 = var
%108 = block 2
%109 = phi %108, 0:i32, 2:i32
%110:i32 = var
%111:i32 = var
%112:i32 = var
%113 = phi %4, %111, %112
%114 = phi %14, %113, %113, %113, 0:i32, %113, %113, %113, %113, %113
%115 = phi %10, 1:i32, %110, %114
%116:i32 = var
%117:i32 = var
%118 = phi %4, %116, %117
%119 = phi %14, %118, %118, 0:i32, %118, %118, %118, %118, %118, %118
%120 = phi %10, %118, %118, %119
%121 = phi %39, %115, %120
%122 = phi %37, %109, %121
%123 = phi %2, %107, %107, %122
%124:i32 = var
%125:i32 = var
%126:i32 = var
%127 = phi %4, %125, %126
%128 = phi %14, %127, %127, %127, %127, 0:i32, 0:i32, %127, %127, 0:i32
%129 = phi %10, %127, %127, %128
%130 = phi %2, %124, %124, %129
%131 = phi %1, %123, %130
%132 = add %106, %131
%133:i32 = var
blockpc %0 0 %133 1
%134:i32 = var
blockpc %0 1 %134 1
%135:i32 = var
blockpc %1 0 %135 1
%136:i32 = var
blockpc %1 1 %136 1
%137:i32 = var
blockpc %15 0 %137 1
%138:i32 = var
blockpc %15 1 %138 1
%139:i32 = var
blockpc %16 0 %139 1
%140:i32 = var
blockpc %16 1 %140 1
%141:i32 = var
blockpc %22 0 %141 1
%142:i32 = var
blockpc %22 1 %142 1
%143:i32 = var
blockpc %23 0 %143 1
%144:i32 = var
blockpc %23 1 %144 1
%145:i32 = var
blockpc %35 0 %145 1
%146:i32 = var
blockpc %35 1 %146 1
%147:i32 = var
blockpc %37 0 %147 1
%148:i32 = var
blockpc %37 1 %148 1
%149:i32 = var
blockpc %39 0 %149 1
%150:i32 = var
blockpc %39 1 %150 1
%151:i32 = var
blockpc %71 0 %151 1
%152:i32 = var
blockpc %71 1 %152 1
%153:i32 = var
blockpc %72 0 %153 1
%154:i32 = var
blockpc %72 1 %154 1
%155:i32 = var
blockpc %77 0 %155 1
%156:i32 = var
blockpc %77 1 %156 1
%157:i32 = var
blockpc %84 0 %157 1
%158:i32 = var
blockpc %84 1 %158 1
blockpc %99 0 %137 1
%159:i32 = var
blockpc %99 1 %159 1
%160:i32 = var
blockpc %108 0 %160 1
%161:i32 = var
blockpc %108 1 %161 1
%162:i32 = var
pc %162 1
infer %132


; start LHS (in $14)
%0 = block 3
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, %9
%13 = phi %5, %9, %12
%14 = block 2
%15:i32 = var
%16 = phi %14, %15, 0:i32
%17 = phi %4, %13, %16
%18 = sub 0:i32, %17 (hasExternalUses)
%19 = phi %3, %18, %17
%20:i32 = var
%21 = phi %2, %19, %20
%22 = phi %0, %1, %1, %21
%23 = block 2
%24 = block 2
%25:i32 = var
%26:i32 = var
%27:i32 = var
%28 = phi %6, %26, %27
%29 = phi %0, %25, %25, %28
%30:i32 = var
%31 = block 3
%32:i32 = var
%33:i32 = var
%34 = phi %6, %32, %33
%35 = block 9
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = phi %35, %34, %34, %34, %34, %28, %39, %34, %34, %28
%41 = phi %31, %34, %34, %40
%42 = phi %0, %30, %30, %41
%43 = phi %24, %29, %42
%44 = block 2
%45:i32 = var
%46 = block 2
%47:i32 = var
%48 = block 2
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52 = phi %6, %50, %51
%53:i32 = var
%54 = phi %35, %52, %52, %53, %52, %52, %52, %52, %52, %52
%55 = phi %31, %52, %52, %54
%56 = phi %48, %49, %55
%57 = phi %46, %47, %56
%58 = phi %0, %45, %45, %57
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62 = phi %6, %60, %61
%63 = phi %0, %59, %59, %62
%64 = phi %44, %58, %63
%65:i32 = var
%66:i32 = var
%67:i32 = var
%68 = phi %6, %66, %67
%69:i32 = var
%70:i32 = var
%71 = phi %6, %69, %70
%72 = block 2
%73:i32 = var
%74 = phi %72, 1940:i32, %73
%75:i32 = var
%76:i32 = var
%77 = phi %6, %75, %76
%78 = phi %35, %68, %68, %68, %68, %71, %74, %68, %68, %77
%79 = phi %31, %68, %68, %78
%80 = phi %0, %65, %65, %79
%81 = phi %24, %64, %80
%82 = sub %43, %81 (hasExternalUses)
%83 = block 2
%84 = block 2
%85:i32 = var
%86:i32 = var
%87:i32 = var
%88 = phi %6, %86, %87
%89 = block 2
%90 = block 3
%91:i32 = var
%92:i32 = var
%93 = block 2
%94 = block 2
%95:i32 = var
%96 = phi %94, %95, 0:i32
%97 = phi %93, %96, -1:i32
%98 = phi %90, %91, %92, %97
%99 = phi %89, %98, 8:i32
%100 = phi %35, %99, %98, %88, %88, %88, %88, %88, %88, %88
%101 = phi %31, %88, %88, %100
%102:i32 = var
%103:i32 = var
%104 = phi %6, %102, %103
%105 = block 2
%106:i32 = var
%107 = phi %105, %98, %106
%108 = phi %35, %104, %104, %107, %104, %104, %104, %104, %104, %104
%109 = phi %31, %104, %104, %108
%110 = phi %48, %98, %109
%111 = phi %46, %101, %110
%112 = phi %0, %85, %85, %111
%113:i32 = var
%114 = phi %84, %112, %113
%115 = phi %83, %114, 0:i32
%116:i32 = var
%117:i32 = var
%118:i32 = var
%119 = phi %6, %117, %118
%120 = block 2
%121:i32 = var
%122 = phi %120, %98, %121
%123 = phi %35, %119, %119, %119, %119, 1:i32, %122, %119, %119, %98
%124 = phi %31, %119, %119, %123
%125 = phi %0, %116, %116, %124
%126 = phi %24, %115, %125
%127 = phi %23, %82, %126
%128:i32 = var
%129 = block 2
%130 = phi %129, 0:i32, 2:i32
%131:i32 = var
%132:i32 = var
%133:i32 = var
%134 = phi %6, %132, %133
%135 = phi %35, %134, %134, %134, 0:i32, %134, %134, %134, %134, %134
%136 = phi %31, 1:i32, %131, %135
%137:i32 = var
%138:i32 = var
%139 = phi %6, %137, %138
%140 = phi %35, %139, %139, 0:i32, %139, %139, %139, %139, %139, %139
%141 = phi %31, %139, %139, %140
%142 = phi %48, %136, %141
%143 = phi %46, %130, %142
%144 = phi %0, %128, %128, %143
%145:i32 = var
%146:i32 = var
%147:i32 = var
%148 = phi %6, %146, %147
%149 = phi %35, %148, %148, %148, %148, 0:i32, 0:i32, %148, %148, 0:i32
%150 = phi %31, %148, %148, %149
%151 = phi %0, %145, %145, %150
%152 = phi %24, %144, %151
%153 = add %127, %152 (hasExternalUses)
%154 = slt %22, %153
%155:i32 = var
blockpc %2 0 %155 1
%156:i32 = var
blockpc %2 1 %156 1
%157:i32 = var
blockpc %3 0 %157 1
%158:i32 = var
blockpc %3 1 %158 1
%159:i32 = var
blockpc %4 0 %159 1
%160:i32 = var
blockpc %4 1 %160 1
%161:i32 = var
blockpc %5 0 %161 1
%162:i32 = var
blockpc %5 1 %162 1
%163:i32 = var
blockpc %10 0 %163 1
%164:i32 = var
blockpc %10 1 %164 1
%165:i32 = var
blockpc %14 0 %165 1
%166:i32 = var
blockpc %14 1 %166 1
%167:i32 = var
blockpc %23 0 %167 1
%168:i32 = var
blockpc %23 1 %168 1
%169:i32 = var
blockpc %24 0 %169 1
%170:i32 = var
blockpc %24 1 %170 1
%171:i32 = var
blockpc %36 0 %171 1
%172:i32 = var
blockpc %36 1 %172 1
%173:i32 = var
blockpc %44 0 %173 1
%174:i32 = var
blockpc %44 1 %174 1
%175:i32 = var
blockpc %46 0 %175 1
%176:i32 = var
blockpc %46 1 %176 1
%177:i32 = var
blockpc %48 0 %177 1
%178:i32 = var
blockpc %48 1 %178 1
%179:i32 = var
blockpc %72 0 %179 1
%180:i32 = var
blockpc %72 1 %180 1
%181:i32 = var
blockpc %83 0 %181 1
%182:i32 = var
blockpc %83 1 %182 1
%183:i32 = var
blockpc %84 0 %183 1
%184:i32 = var
blockpc %84 1 %184 1
%185:i32 = var
blockpc %89 0 %185 1
%186:i32 = var
blockpc %89 1 %186 1
%187:i32 = var
blockpc %93 0 %187 1
%188:i32 = var
blockpc %93 1 %188 1
%189:i32 = var
blockpc %94 0 %189 1
%190:i32 = var
blockpc %94 1 %190 1
%191:i32 = var
blockpc %105 0 %191 1
%192:i32 = var
blockpc %105 1 %192 1
blockpc %120 0 %171 1
%193:i32 = var
blockpc %120 1 %193 1
%194:i32 = var
blockpc %129 0 %194 1
%195:i32 = var
blockpc %129 1 %195 1
%196:i32 = var
pc %196 1
infer %154


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = var
%4 = block 2
%5 = block 3
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 9
%11 = block 2
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = block 2
%16:i32 = var
%17 = phi %15, 0:i32, %16
%18 = phi %13, %14, %17
%19 = phi %12, %18, %17
%20:i32 = var
%21 = phi %11, %19, %20
%22 = or %21, 8:i32 (hasExternalUses)
%23 = phi %10, %22, %21, %9, %9, %9, %9, %9, %9, %9
%24 = phi %5, %9, %9, %23
%25 = block 2
%26:i32 = var
%27:i32 = var
%28 = phi %6, %26, %27
%29 = phi %10, %28, %28, %21, %28, %28, %28, %28, %28, %28
%30 = phi %5, %28, %28, %29
%31 = phi %25, %21, %30
%32 = phi %4, %24, %31
%33 = phi %2, %3, %3, %32
%34 = and %33, -65537:i32 (hasExternalUses)
%35 = phi %1, %34, %33
%36:i32 = var
%37:i32 = var
%38:i32 = var
%39 = phi %6, %37, %38
%40 = phi %10, %39, %39, %39, %39, %20, %20, %39, %39, %21
%41 = phi %5, %39, %39, %40
%42 = phi %2, %36, %36, %41
%43 = phi %0, %35, %42
%44 = xor %43, 65536:i32
%45:i32 = var
blockpc %0 0 %45 1
%46:i32 = var
blockpc %0 1 %46 1
%47:i32 = var
blockpc %1 0 %47 1
%48:i32 = var
blockpc %1 1 %48 1
%49:i32 = var
blockpc %4 0 %49 1
%50:i32 = var
blockpc %4 1 %50 1
%51:i32 = var
blockpc %11 0 %51 1
%52:i32 = var
blockpc %11 1 %52 1
%53:i32 = var
blockpc %12 0 %53 1
%54:i32 = var
blockpc %12 1 %54 1
%55:i32 = var
blockpc %13 0 %55 1
%56:i32 = var
blockpc %13 1 %56 1
%57:i32 = var
blockpc %15 0 %57 1
%58:i32 = var
blockpc %15 1 %58 1
%59:i32 = var
blockpc %25 0 %59 1
%60:i32 = var
blockpc %25 1 %60 1
%61:i32 = var
pc %61 1
infer %44


; start LHS (in $14)
%0 = block 2
%1 = block 2
%2 = block 3
%3:i32 = var
%4 = block 2
%5 = block 3
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 9
%11 = block 2
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = block 2
%16:i32 = var
%17 = phi %15, 0:i32, %16
%18 = phi %13, %14, %17
%19 = phi %12, %18, %17
%20:i32 = var
%21 = phi %11, %19, %20
%22 = or %21, 8:i32 (hasExternalUses)
%23 = phi %10, %22, %21, %9, %9, %9, %9, %9, %9, %9
%24 = phi %5, %9, %9, %23
%25 = block 2
%26:i32 = var
%27:i32 = var
%28 = phi %6, %26, %27
%29 = phi %10, %28, %28, %21, %28, %28, %28, %28, %28, %28
%30 = phi %5, %28, %28, %29
%31 = phi %25, %21, %30
%32 = phi %4, %24, %31
%33 = phi %2, %3, %3, %32
%34 = and %33, -65537:i32 (hasExternalUses)
%35 = phi %1, %34, %33
%36:i32 = var
%37:i32 = var
%38:i32 = var
%39 = phi %6, %37, %38
%40 = phi %10, %39, %39, %39, %39, %20, %20, %39, %39, %21
%41 = phi %5, %39, %39, %40
%42 = phi %2, %36, %36, %41
%43 = phi %0, %35, %42
%44 = xor %43, 8192:i32
%45:i32 = var
blockpc %0 0 %45 1
%46:i32 = var
blockpc %0 1 %46 1
%47:i32 = var
blockpc %1 0 %47 1
%48:i32 = var
blockpc %1 1 %48 1
%49:i32 = var
blockpc %4 0 %49 1
%50:i32 = var
blockpc %4 1 %50 1
%51:i32 = var
blockpc %11 0 %51 1
%52:i32 = var
blockpc %11 1 %52 1
%53:i32 = var
blockpc %12 0 %53 1
%54:i32 = var
blockpc %12 1 %54 1
%55:i32 = var
blockpc %13 0 %55 1
%56:i32 = var
blockpc %13 1 %56 1
%57:i32 = var
blockpc %15 0 %57 1
%58:i32 = var
blockpc %15 1 %58 1
%59:i32 = var
blockpc %25 0 %59 1
%60:i32 = var
blockpc %25 1 %60 1
%61:i32 = var
pc %61 1
infer %44


; start LHS (in $14)
%0 = block 9
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, 10:i32, %5
%7 = phi %3, %6, 0:i32
%8 = phi %1, %2, %7
%9 = block 2
%10 = block 2
%11 = block 2
%12 = block 2
%13 = phi %12, %8, 27:i32
%14 = phi %11, 27:i32, %13
%15 = phi %10, %14, 0:i32
%16 = phi %9, %15, %8
%17:i32 = var
%18 = phi %0, 92:i32, 0:i32, %8, %16, %17, %16, %16, %16, 0:i32
%19 = eq %18, 92:i32
%20 = eq %6, 10:i32
blockpc %3 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %3 1 %22 1
%23 = block 2
%24:i32 = var
%25 = add %24, 0:i32; Replace bad zext operation
%26:i32 = var
%27 = add %26, 0:i32; Replace bad zext operation
%28 = or %25, %27
%29 = ne %28, 0:i32
blockpc %23 0 %29 1
%30:i32 = var
blockpc %23 1 %30 1
%31:i32 = var
%32:i32 = var
%33 = phi %23, %31, %32
%34 = shl %33, 24:i32
%35 = ashr %34, 24:i32
%36 = eq %35, 42:i32
blockpc %9 0 %36 1
%37:i32 = var
blockpc %9 1 %37 1
%38:i32 = var
blockpc %10 0 %38 1
%39:i32 = var
blockpc %10 1 %39 1
%40:i32 = var
blockpc %11 0 %40 1
%41:i32 = var
blockpc %11 1 %41 1
%42:i32 = var
blockpc %12 0 %42 1
%43:i32 = var
blockpc %12 1 %43 1
infer %19


; start LHS (in $14)
%0 = block 9
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, %1
%5:i32 = var
%6 = phi %0, %1, %4, %4, %4, %5, %4, %4, %4, %4
%7 = eq %6, 0:i32
%8:i32 = var
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, 10:i32, %11
%13 = eq %12, 10:i32
blockpc %9 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %9 1 %15 1
%16 = phi %9, %12, 0:i32
%17 = phi %2, %8, %16
%18 = block 2
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22:i32 = var
%23:i32 = var
%24 = phi %19, %22, %23
%25 = shl %24, 24:i32
%26 = ashr %25, 24:i32
%27 = eq %26, 42:i32
blockpc %18 0 %27 1
%28:i32 = var
blockpc %18 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = phi %35, %17, 27:i32
%39 = phi %32, 27:i32, %38
%40 = phi %29, %39, 0:i32
%41 = phi %18, %40, %17
%42:i32 = var
%43 = phi %0, 92:i32, 0:i32, %17, %41, %42, %41, %41, %41, 0:i32
%44 = eq %43, 92:i32
pc %44 1
infer %7


; start LHS (in $14)
%0 = block 9
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, %1
%5:i32 = var
%6 = phi %0, %1, %4, %4, %4, %5, %4, %4, %4, %4
%7 = eq %6, 0:i32
%8:i32 = var
%9:i32 = var
%10 = phi %2, %9, %8
%11:i32 = var
%12 = phi %0, %8, %10, %10, %10, %11, %10, %10, %10, %10
%13 = eq %12, 0:i32
%14:i32 = var
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = phi %16, 10:i32, %17
%19 = eq %18, 10:i32
blockpc %15 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %15 1 %21 1
%22 = phi %15, %18, 0:i32
%23 = phi %2, %14, %22
%24 = block 2
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29:i32 = var
%30 = phi %25, %28, %29
%31 = shl %30, 24:i32
%32 = ashr %31, 24:i32
%33 = eq %32, 42:i32
blockpc %24 0 %33 1
%34:i32 = var
blockpc %24 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = phi %41, %23, 27:i32
%45 = phi %38, 27:i32, %44
%46 = phi %35, %45, 0:i32
%47 = phi %24, %46, %23
%48:i32 = var
%49 = phi %0, 92:i32, 0:i32, %23, %47, %48, %47, %47, %47, 0:i32
%50 = eq %49, 92:i32
pc %13 1
pc %50 1
infer %7


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 2:i32
%2 = block 9
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, %3
%7:i32 = var
%8 = phi %2, %3, %6, %6, %6, %7, %6, %6, %6, %6
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13:i32 = var
%14 = phi %4, %13, %12
%15:i32 = var
%16 = phi %2, %12, %14, %14, %14, %15, %14, %14, %14, %14
%17 = eq %16, 0:i32
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, 10:i32, %21
%23 = eq %22, 10:i32
blockpc %19 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %19 1 %25 1
%26 = phi %19, %22, 0:i32
%27 = phi %4, %18, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %27, 27:i32
%41 = phi %34, 27:i32, %40
%42 = phi %31, %41, 0:i32
%43 = phi %28, %42, %27
%44:i32 = var
%45 = phi %2, 92:i32, 0:i32, %27, %43, %44, %43, %43, %43, 0:i32
%46 = eq %45, 92:i32
pc %11 1
pc %17 1
pc %46 1
infer %1


; start LHS (in $14)
%0 = block 9
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, %1
%5:i32 = var
%6 = phi %0, %1, %4, %4, %4, %5, %4, %4, %4, %4
%7:i32 = var
%8 = shl %7, 2:i32
%9 = add %6, %8
%10:i32 = var
%11:i32 = var
%12 = phi %2, %11, %10
%13:i32 = var
%14 = phi %0, %10, %12, %12, %12, %13, %12, %12, %12, %12
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18:i32 = var
%19:i32 = var
%20 = phi %2, %19, %18
%21:i32 = var
%22 = phi %0, %18, %20, %20, %20, %21, %20, %20, %20, %20
%23 = eq %22, 0:i32
%24:i32 = var
%25 = block 2
%26 = block 2
%27:i32 = var
%28 = phi %26, 10:i32, %27
%29 = eq %28, 10:i32
blockpc %25 0 %29 1
%30:i32 = var
blockpc %25 1 %30 1
%31 = phi %25, %28, 0:i32
%32 = phi %2, %24, %31
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = phi %42, %32, 27:i32
%46 = phi %39, 27:i32, %45
%47 = phi %36, %46, 0:i32
%48 = phi %33, %47, %32
%49:i32 = var
%50 = phi %0, 92:i32, 0:i32, %32, %48, %49, %48, %48, %48, 0:i32
%51 = eq %50, 92:i32
pc %17 1
pc %23 1
pc %51 1
infer %9


; start LHS (in $14)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 9
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, %3
%7:i32 = var
%8 = phi %2, %3, %6, %6, %6, %7, %6, %6, %6, %6
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13:i32 = var
%14 = phi %4, %13, %12
%15:i32 = var
%16 = phi %2, %12, %14, %14, %14, %15, %14, %14, %14, %14
%17 = eq %16, 0:i32
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, 10:i32, %21
%23 = eq %22, 10:i32
blockpc %19 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %19 1 %25 1
%26 = phi %19, %22, 0:i32
%27 = phi %4, %18, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %27, 27:i32
%41 = phi %34, 27:i32, %40
%42 = phi %31, %41, 0:i32
%43 = phi %28, %42, %27
%44:i32 = var
%45 = phi %2, 92:i32, 0:i32, %27, %43, %44, %43, %43, %43, 0:i32
%46 = eq %45, 92:i32
pc %11 1
pc %17 1
pc %46 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 3:i32
%2 = block 9
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, %3
%7:i32 = var
%8 = phi %2, %3, %6, %6, %6, %7, %6, %6, %6, %6
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13:i32 = var
%14 = phi %4, %13, %12
%15:i32 = var
%16 = phi %2, %12, %14, %14, %14, %15, %14, %14, %14, %14
%17 = eq %16, 0:i32
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, 10:i32, %21
%23 = eq %22, 10:i32
blockpc %19 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %19 1 %25 1
%26 = phi %19, %22, 0:i32
%27 = phi %4, %18, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %27, 27:i32
%41 = phi %34, 27:i32, %40
%42 = phi %31, %41, 0:i32
%43 = phi %28, %42, %27
%44:i32 = var
%45 = phi %2, 92:i32, 0:i32, %27, %43, %44, %43, %43, %43, 0:i32
%46 = eq %45, 92:i32
pc %11 1
pc %17 1
pc %46 1
infer %1


; start LHS (in $14)
%0 = block 9
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, %1
%5:i32 = var
%6 = phi %0, %1, %4, %4, %4, %5, %4, %4, %4, %4
%7:i32 = var
%8 = shl %7, 3:i32
%9 = add %6, %8
%10:i32 = var
%11:i32 = var
%12 = phi %2, %11, %10
%13:i32 = var
%14 = phi %0, %10, %12, %12, %12, %13, %12, %12, %12, %12
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18:i32 = var
%19:i32 = var
%20 = phi %2, %19, %18
%21:i32 = var
%22 = phi %0, %18, %20, %20, %20, %21, %20, %20, %20, %20
%23 = eq %22, 0:i32
%24:i32 = var
%25 = block 2
%26 = block 2
%27:i32 = var
%28 = phi %26, 10:i32, %27
%29 = eq %28, 10:i32
blockpc %25 0 %29 1
%30:i32 = var
blockpc %25 1 %30 1
%31 = phi %25, %28, 0:i32
%32 = phi %2, %24, %31
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = phi %42, %32, 27:i32
%46 = phi %39, 27:i32, %45
%47 = phi %36, %46, 0:i32
%48 = phi %33, %47, %32
%49:i32 = var
%50 = phi %0, 92:i32, 0:i32, %32, %48, %49, %48, %48, %48, 0:i32
%51 = eq %50, 92:i32
pc %17 1
pc %23 1
pc %51 1
infer %9


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 1:i32
%2 = block 9
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, %3
%7:i32 = var
%8 = phi %2, %3, %6, %6, %6, %7, %6, %6, %6, %6
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13:i32 = var
%14 = phi %4, %13, %12
%15:i32 = var
%16 = phi %2, %12, %14, %14, %14, %15, %14, %14, %14, %14
%17 = eq %16, 0:i32
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, 10:i32, %21
%23 = eq %22, 10:i32
blockpc %19 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %19 1 %25 1
%26 = phi %19, %22, 0:i32
%27 = phi %4, %18, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %27, 27:i32
%41 = phi %34, 27:i32, %40
%42 = phi %31, %41, 0:i32
%43 = phi %28, %42, %27
%44:i32 = var
%45 = phi %2, 92:i32, 0:i32, %27, %43, %44, %43, %43, %43, 0:i32
%46 = eq %45, 92:i32
pc %11 1
pc %17 1
pc %46 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = ult %1, 10:i32
%3 = block 9
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, %4
%8:i32 = var
%9 = phi %3, %4, %7, %7, %7, %8, %7, %7, %7, %7
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13:i32 = var
%14:i32 = var
%15 = phi %5, %14, %13
%16:i32 = var
%17 = phi %3, %13, %15, %15, %15, %16, %15, %15, %15, %15
%18 = eq %17, 0:i32
%19:i32 = var
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = phi %21, 10:i32, %22
%24 = eq %23, 10:i32
blockpc %20 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %20 1 %26 1
%27 = phi %20, %23, 0:i32
%28 = phi %5, %19, %27
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = phi %38, %28, 27:i32
%42 = phi %35, 27:i32, %41
%43 = phi %32, %42, 0:i32
%44 = phi %29, %43, %28
%45:i32 = var
%46 = phi %3, 92:i32, 0:i32, %28, %44, %45, %44, %44, %44, 0:i32
%47 = eq %46, 92:i32
pc %12 1
pc %18 1
pc %47 1
infer %2


; start LHS (in $14)
%0:i32 = var
%1 = shl %0, 2:i32
%2 = block 9
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, %3
%7:i32 = var
%8 = phi %2, %3, %6, %6, %6, %7, %6, %6, %6, %6
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13:i32 = var
%14 = phi %4, %13, %12
%15:i32 = var
%16 = phi %2, %12, %14, %14, %14, %15, %14, %14, %14, %14
%17 = eq %16, 0:i32
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, 10:i32, %21
%23 = eq %22, 10:i32
blockpc %19 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %19 1 %25 1
%26 = phi %19, %22, 0:i32
%27 = phi %4, %18, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %27, 27:i32
%41 = phi %34, 27:i32, %40
%42 = phi %31, %41, 0:i32
%43 = phi %28, %42, %27
%44:i32 = var
%45 = phi %2, 92:i32, 0:i32, %27, %43, %44, %43, %43, %43, 0:i32
%46 = eq %45, 92:i32
pc %11 1
pc %17 1
pc %46 1
infer %1


; start LHS (in $14)
%0 = block 9
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, %1
%5:i32 = var
%6 = phi %0, %1, %4, %4, %4, %5, %4, %4, %4, %4
%7:i32 = var
%8 = shl %7, 2:i32
%9 = add %6, %8
%10:i32 = var
%11:i32 = var
%12 = phi %2, %11, %10
%13:i32 = var
%14 = phi %0, %10, %12, %12, %12, %13, %12, %12, %12, %12
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18:i32 = var
%19:i32 = var
%20 = phi %2, %19, %18
%21:i32 = var
%22 = phi %0, %18, %20, %20, %20, %21, %20, %20, %20, %20
%23 = eq %22, 0:i32
%24:i32 = var
%25 = block 2
%26 = block 2
%27:i32 = var
%28 = phi %26, 10:i32, %27
%29 = eq %28, 10:i32
blockpc %25 0 %29 1
%30:i32 = var
blockpc %25 1 %30 1
%31 = phi %25, %28, 0:i32
%32 = phi %2, %24, %31
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = phi %42, %32, 27:i32
%46 = phi %39, 27:i32, %45
%47 = phi %36, %46, 0:i32
%48 = phi %33, %47, %32
%49:i32 = var
%50 = phi %0, 92:i32, 0:i32, %32, %48, %49, %48, %48, %48, 0:i32
%51 = eq %50, 92:i32
pc %17 1
pc %23 1
pc %51 1
infer %9


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 1:i32
%2 = block 9
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, %3
%7:i32 = var
%8 = phi %2, %3, %6, %6, %6, %7, %6, %6, %6, %6
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13:i32 = var
%14 = phi %4, %13, %12
%15:i32 = var
%16 = phi %2, %12, %14, %14, %14, %15, %14, %14, %14, %14
%17 = eq %16, 0:i32
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, 10:i32, %21
%23 = eq %22, 10:i32
blockpc %19 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %19 1 %25 1
%26 = phi %19, %22, 0:i32
%27 = phi %4, %18, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %27, 27:i32
%41 = phi %34, 27:i32, %40
%42 = phi %31, %41, 0:i32
%43 = phi %28, %42, %27
%44:i32 = var
%45 = phi %2, 92:i32, 0:i32, %27, %43, %44, %43, %43, %43, 0:i32
%46 = eq %45, 92:i32
pc %11 1
pc %17 1
pc %46 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 9
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, %3
%7:i32 = var
%8 = phi %2, %3, %6, %6, %6, %7, %6, %6, %6, %6
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13:i32 = var
%14 = phi %4, %13, %12
%15:i32 = var
%16 = phi %2, %12, %14, %14, %14, %15, %14, %14, %14, %14
%17 = eq %16, 0:i32
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, 10:i32, %21
%23 = eq %22, 10:i32
blockpc %19 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %19 1 %25 1
%26 = phi %19, %22, 0:i32
%27 = phi %4, %18, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %27, 27:i32
%41 = phi %34, 27:i32, %40
%42 = phi %31, %41, 0:i32
%43 = phi %28, %42, %27
%44:i32 = var
%45 = phi %2, 92:i32, 0:i32, %27, %43, %44, %43, %43, %43, 0:i32
%46 = eq %45, 92:i32
pc %11 1
pc %17 1
pc %46 1
infer %1


; start LHS (in $14)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4 = block 9
%5:i32 = var
%6 = block 2
%7:i32 = var
%8 = phi %6, %7, %5
%9:i32 = var
%10 = phi %4, %5, %8, %8, %8, %9, %8, %8, %8, %8
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14:i32 = var
%15:i32 = var
%16 = phi %6, %15, %14
%17:i32 = var
%18 = phi %4, %14, %16, %16, %16, %17, %16, %16, %16, %16
%19 = eq %18, 0:i32
%20:i32 = var
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = phi %22, 10:i32, %23
%25 = eq %24, 10:i32
blockpc %21 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %21 1 %27 1
%28 = phi %21, %24, 0:i32
%29 = phi %6, %20, %28
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = phi %39, %29, 27:i32
%43 = phi %36, 27:i32, %42
%44 = phi %33, %43, 0:i32
%45 = phi %30, %44, %29
%46:i32 = var
%47 = phi %4, 92:i32, 0:i32, %29, %45, %46, %45, %45, %45, 0:i32
%48 = eq %47, 92:i32
pc %13 1
pc %19 1
pc %48 1
infer %3


; start LHS (in $14)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = ult %1, 10:i32
%3 = block 9
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, %4
%8:i32 = var
%9 = phi %3, %4, %7, %7, %7, %8, %7, %7, %7, %7
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13:i32 = var
%14:i32 = var
%15 = phi %5, %14, %13
%16:i32 = var
%17 = phi %3, %13, %15, %15, %15, %16, %15, %15, %15, %15
%18 = eq %17, 0:i32
%19:i32 = var
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = phi %21, 10:i32, %22
%24 = eq %23, 10:i32
blockpc %20 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %20 1 %26 1
%27 = phi %20, %23, 0:i32
%28 = phi %5, %19, %27
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = phi %38, %28, 27:i32
%42 = phi %35, 27:i32, %41
%43 = phi %32, %42, 0:i32
%44 = phi %29, %43, %28
%45:i32 = var
%46 = phi %3, 92:i32, 0:i32, %28, %44, %45, %44, %44, %44, 0:i32
%47 = eq %46, 92:i32
pc %12 1
pc %18 1
pc %47 1
infer %2


; function: $15

; function: $16

; function: $17

; start LHS (in $17)
%0:i32 = var
%1 = and %0, 32:i32
infer %1


; start LHS (in $17)
%0:i32 = var
%1 = and %0, 32:i32
%2 = eq %1, 0:i32
infer %2


; function: $18

; start LHS (in $18)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = mul %0, 10:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = mul %0, 10:i32
%2 = add %1, -48:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = mul %0, 10:i32
%2 = add %1, -48:i32
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = add %2, %5
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
pc %10 1
infer %6


; start LHS (in $18)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $18)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $18)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; function: $19

; start LHS (in $19)
%0:i32 = var
%1 = ult 20:i32, %0
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = ult 20:i32, %0
%2:i32 = zext %1
%3 = eq %2, 0:i32
infer %3


; start LHS (in $19)
%0:i32 = var
%1 = sub %0, 9:i32
%2 = ult 20:i32, %0
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4:i32 = var
%5 = ult 20:i32, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2 = xor %1, -1:i32
%3:i32 = var
%4 = ult 20:i32, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6
%8:i32 = var
%9 = ult 20:i32, %8
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %11 1
infer %7


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6 (hasExternalUses)
%8 = add %7, 4:i32
%9:i32 = var
%10 = ult 20:i32, %9
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %8


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4:i32 = var
%5 = ult 20:i32, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2 = xor %1, -1:i32
%3:i32 = var
%4 = ult 20:i32, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6
%8:i32 = var
%9 = ult 20:i32, %8
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %11 1
infer %7


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6 (hasExternalUses)
%8 = add %7, 4:i32
%9:i32 = var
%10 = ult 20:i32, %9
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %8


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4:i32 = var
%5 = ult 20:i32, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2 = xor %1, -1:i32
%3:i32 = var
%4 = ult 20:i32, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6
%8:i32 = var
%9 = ult 20:i32, %8
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %11 1
infer %7


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6 (hasExternalUses)
%8 = add %7, 4:i32
%9:i32 = var
%10 = ult 20:i32, %9
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %8


; start LHS (in $19)
%0 = add 0:i32, 8:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 8:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0 = add 0:i32, 8:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 8:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 8:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4:i32 = var
%5 = ult 20:i32, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $19)
%0 = add 0:i32, 8:i32
%1 = sub %0, 1:i32
%2 = xor %1, -1:i32
%3:i32 = var
%4 = ult 20:i32, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 8:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 8:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6
%8:i32 = var
%9 = ult 20:i32, %8
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %11 1
infer %7


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 8:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 8:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6 (hasExternalUses)
%8 = add %7, 8:i32
%9:i32 = var
%10 = ult 20:i32, %9
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %8


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4:i32 = var
%5 = ult 20:i32, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2 = xor %1, -1:i32
%3:i32 = var
%4 = ult 20:i32, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6
%8:i32 = var
%9 = ult 20:i32, %8
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %11 1
infer %7


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6 (hasExternalUses)
%8 = add %7, 4:i32
%9:i32 = var
%10 = ult 20:i32, %9
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %8


; start LHS (in $19)
%0:i32 = var
%1 = and %0, 65535:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = and %0, 65535:i32
%2 = shl %1, 16:i32
%3:i32 = var
%4 = ult 20:i32, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $19)
%0:i32 = var
%1 = and %0, 65535:i32
%2 = shl %1, 16:i32
%3 = ashr %2, 16:i32
%4:i32 = var
%5 = ult 20:i32, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4:i32 = var
%5 = ult 20:i32, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2 = xor %1, -1:i32
%3:i32 = var
%4 = ult 20:i32, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6
%8:i32 = var
%9 = ult 20:i32, %8
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %11 1
infer %7


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6 (hasExternalUses)
%8 = add %7, 4:i32
%9:i32 = var
%10 = ult 20:i32, %9
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %8


; start LHS (in $19)
%0:i32 = var
%1 = and %0, 65535:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4:i32 = var
%5 = ult 20:i32, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2 = xor %1, -1:i32
%3:i32 = var
%4 = ult 20:i32, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6
%8:i32 = var
%9 = ult 20:i32, %8
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %11 1
infer %7


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6 (hasExternalUses)
%8 = add %7, 4:i32
%9:i32 = var
%10 = ult 20:i32, %9
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %8


; start LHS (in $19)
%0:i32 = var
%1 = and %0, 255:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = and %0, 255:i32
%2 = shl %1, 24:i32
%3:i32 = var
%4 = ult 20:i32, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $19)
%0:i32 = var
%1 = and %0, 255:i32
%2 = shl %1, 24:i32
%3 = ashr %2, 24:i32
%4:i32 = var
%5 = ult 20:i32, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4:i32 = var
%5 = ult 20:i32, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $19)
%0 = add 0:i32, 4:i32
%1 = sub %0, 1:i32
%2 = xor %1, -1:i32
%3:i32 = var
%4 = ult 20:i32, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6
%8:i32 = var
%9 = ult 20:i32, %8
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %11 1
infer %7


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 4:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 4:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6 (hasExternalUses)
%8 = add %7, 4:i32
%9:i32 = var
%10 = ult 20:i32, %9
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %8


; start LHS (in $19)
%0:i32 = var
%1 = and %0, 255:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0 = add 0:i32, 8:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 8:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0 = add 0:i32, 8:i32
%1:i32 = var
%2 = ult 20:i32, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %0


; start LHS (in $19)
%0 = add 0:i32, 8:i32
%1 = sub %0, 1:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 8:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4:i32 = var
%5 = ult 20:i32, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $19)
%0 = add 0:i32, 8:i32
%1 = sub %0, 1:i32
%2 = xor %1, -1:i32
%3:i32 = var
%4 = ult 20:i32, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 8:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 8:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6
%8:i32 = var
%9 = ult 20:i32, %8
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %11 1
infer %7


; start LHS (in $19)
%0:i32 = var
%1 = add 0:i32, 8:i32
%2 = sub %1, 1:i32
%3 = add %0, %2
%4 = add 0:i32, 8:i32
%5 = sub %4, 1:i32
%6 = xor %5, -1:i32
%7 = and %3, %6 (hasExternalUses)
%8 = add %7, 8:i32
%9:i32 = var
%10 = ult 20:i32, %9
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %8


; start LHS (in $19)
%0:i32 = var
%1 = and %0, 7:i32
%2:i32 = var
%3 = ult 20:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $19)
%0:i32 = var
%1 = and %0, 7:i32
%2 = add %1, 18:i32
%3:i32 = var
%4 = ult 20:i32, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; function: $20

; start LHS (in $20)
%0:i64 = var
%1 = eq %0, 0:i64
infer %1


; start LHS (in $20)
%0:i32 = var
%1 = and %0, 15:i32
%2:i64 = var
%3 = eq %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $20)
%0:i32 = var
%1 = and %0, 15:i32
%2 = add 1488:i32, %1
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $20)
%0:i32 = var
%1 = and %0, 255:i32
%2:i64 = var
%3 = eq %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $20)
%0:i32 = var
%1 = and %0, 255:i32
%2:i32 = var
%3 = or %1, %2
%4:i64 = var
%5 = eq %4, 0:i64
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $20)
%0:i32 = var
%1 = add %0, -1:i32
%2:i64 = var
%3 = eq %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $20)
%0:i32 = var
%1 = and %0, 255:i32
%2:i32 = var
%3 = or %1, %2
%4 = and %3, 255:i32
%5:i64 = var
%6 = eq %5, 0:i64
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %8 1
infer %4


; start LHS (in $20)
%0:i64 = var
%1 = lshr %0, 4:i64
%2:i64 = var
%3 = eq %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $20)
%0:i64 = var
%1 = lshr %0, 4:i64 (hasExternalUses)
%2 = eq %1, 0:i64
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; function: $21

; start LHS (in $21)
%0:i64 = var
%1 = eq %0, 0:i64
infer %1


; start LHS (in $21)
%0:i32 = var
%1 = and %0, 255:i32
%2:i64 = var
%3 = eq %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $21)
%0:i32 = var
%1 = and %0, 255:i32
%2 = and %1, 7:i32
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $21)
%0:i32 = var
%1 = add %0, -1:i32
%2:i64 = var
%3 = eq %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $21)
%0:i32 = var
%1 = and %0, 255:i32
%2 = and %1, 7:i32
%3 = or %2, 48:i32
%4:i64 = var
%5 = eq %4, 0:i64
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $21)
%0:i64 = var
%1 = lshr %0, 3:i64
%2:i64 = var
%3 = eq %2, 0:i64
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $21)
%0:i64 = var
%1 = lshr %0, 3:i64 (hasExternalUses)
%2 = eq %1, 0:i64
%3:i64 = var
%4 = eq %3, 0:i64
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; function: $22

; start LHS (in $22)
%0:i64 = var
%1 = ult 4294967295:i64, %0
infer %1


; start LHS (in $22)
%0:i64 = var
%1 = udiv %0, 10:i64
%2:i64 = var
%3 = ult 4294967295:i64, %2
pc %3 1
infer %1


; start LHS (in $22)
%0:i64 = var
%1 = udiv %0, 10:i64 (hasExternalUses)
%2 = mul %1, 10:i64
%3:i64 = var
%4 = ult 4294967295:i64, %3
pc %4 1
infer %2


; start LHS (in $22)
%0:i64 = var
%1 = udiv %0, 10:i64 (hasExternalUses)
%2 = mul %1, 10:i64
%3 = sub %0, %2
%4:i64 = var
%5 = ult 4294967295:i64, %4
pc %5 1
infer %3


; start LHS (in $22)
%0:i32 = var
%1 = and %0, 255:i32
%2:i64 = var
%3 = ult 4294967295:i64, %2
pc %3 1
infer %1


; start LHS (in $22)
%0:i32 = var
%1 = add %0, -1:i32
%2:i64 = var
%3 = ult 4294967295:i64, %2
pc %3 1
infer %1


; start LHS (in $22)
%0:i32 = var
%1 = and %0, 255:i32
%2 = or %1, 48:i32
%3:i64 = var
%4 = ult 4294967295:i64, %3
pc %4 1
infer %2


; start LHS (in $22)
%0:i64 = var
%1 = ult 42949672959:i64, %0
%2:i64 = var
%3 = ult 4294967295:i64, %2
pc %3 1
infer %1


; start LHS (in $22)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = eq %3, 0:i32
%5:i64 = var
%6 = ult 4294967295:i64, %5
blockpc %0 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %0 1 %8 1
infer %4


; start LHS (in $22)
%0:i32 = var
%1 = udiv %0, 10:i32
%2 = block 2
%3:i64 = var
%4 = ult 4294967295:i64, %3
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7:i32 = var
%8:i32 = var
%9 = phi %2, %7, %8
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %1


; start LHS (in $22)
%0:i32 = var
%1 = udiv %0, 10:i32
%2 = and %1, -1:i32
%3 = block 2
%4:i64 = var
%5 = ult 4294967295:i64, %4
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8:i32 = var
%9:i32 = var
%10 = phi %3, %8, %9
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
pc %13 1
infer %2


; start LHS (in $22)
%0:i32 = var
%1 = udiv %0, 10:i32
%2 = and %1, -1:i32 (hasExternalUses)
%3 = mul %2, 10:i32
%4 = block 2
%5:i64 = var
%6 = ult 4294967295:i64, %5
blockpc %4 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = phi %4, %9, %10
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
pc %14 1
infer %3


; start LHS (in $22)
%0:i32 = var
%1 = udiv %0, 10:i32
%2 = and %1, -1:i32 (hasExternalUses)
%3 = mul %2, 10:i32
%4 = sub %0, %3
%5 = block 2
%6:i64 = var
%7 = ult 4294967295:i64, %6
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i32 = var
%11:i32 = var
%12 = phi %5, %10, %11
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %15 1
infer %4


; start LHS (in $22)
%0:i32 = var
%1 = udiv %0, 10:i32
%2 = and %1, -1:i32 (hasExternalUses)
%3 = mul %2, 10:i32
%4 = sub %0, %3
%5 = or %4, 48:i32
%6 = block 2
%7:i64 = var
%8 = ult 4294967295:i64, %7
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11:i32 = var
%12:i32 = var
%13 = phi %6, %11, %12
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
pc %16 1
infer %5


; start LHS (in $22)
%0:i32 = var
%1 = add %0, -1:i32
%2 = block 2
%3:i64 = var
%4 = ult 4294967295:i64, %3
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7:i32 = var
%8:i32 = var
%9 = phi %2, %7, %8
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %1


; start LHS (in $22)
%0:i32 = var
%1 = udiv %0, 10:i32
%2 = and %1, -1:i32 (hasExternalUses)
%3 = mul %2, 10:i32
%4 = sub %0, %3
%5 = or %4, 48:i32
%6 = and %5, 255:i32
%7 = block 2
%8:i64 = var
%9 = ult 4294967295:i64, %8
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12:i32 = var
%13:i32 = var
%14 = phi %7, %12, %13
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
pc %17 1
infer %6


; start LHS (in $22)
%0:i32 = var
%1 = ult %0, 10:i32
%2 = block 2
%3:i64 = var
%4 = ult 4294967295:i64, %3
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7:i32 = var
%8:i32 = var
%9 = phi %2, %7, %8
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %12 1
infer %1


; function: $23

; start LHS (in $23)
%0:i32 = var
%1 = and %0, 255:i32
infer %1


; start LHS (in $23)
%0:i32 = var
%1 = and %0, 3:i32
infer %1


; start LHS (in $23)
%0:i32 = var
%1 = ne %0, 0:i32
infer %1


; start LHS (in $23)
%0:i32 = var
%1 = and %0, 3:i32
%2 = ne %1, 0:i32
infer %2


; start LHS (in $23)
%0:i32 = var
%1 = ne %0, 0:i32 (hasExternalUses)
%2:i32 = zext %1
%3:i32 = var
%4 = and %3, 3:i32
%5 = ne %4, 0:i32
%6:i32 = zext %5
%7 = and %2, %6
infer %7


; start LHS (in $23)
%0:i32 = var
%1 = and %0, 255:i32
%2:i32 = var
%3 = ne %2, 0:i32
%4:i32 = zext %3
%5:i32 = var
%6 = and %5, 3:i32
%7 = ne %6, 0:i32
%8:i32 = zext %7
%9 = and %4, %8
%10 = ne %9, 0:i32
pc %10 1
infer %1


; start LHS (in $23)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = ne %2, 0:i32
%4:i32 = zext %3
%5:i32 = var
%6 = and %5, 3:i32
%7 = ne %6, 0:i32
%8:i32 = zext %7
%9 = and %4, %8
%10 = ne %9, 0:i32
pc %10 1
infer %1


; start LHS (in $23)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = ne %3, 0:i32
%5:i32 = zext %4
%6:i32 = var
%7 = and %6, 3:i32
%8 = ne %7, 0:i32
%9:i32 = zext %8
%10 = and %5, %9
%11 = ne %10, 0:i32
pc %11 1
infer %2


; start LHS (in $23)
%0:i32 = var
%1 = and %0, 255:i32
%2 = shl %1, 24:i32
%3:i32 = var
%4 = ne %3, 0:i32
%5:i32 = zext %4
%6:i32 = var
%7 = and %6, 3:i32
%8 = ne %7, 0:i32
%9:i32 = zext %8
%10 = and %5, %9
%11 = ne %10, 0:i32
pc %11 1
infer %2


; start LHS (in $23)
%0:i32 = var
%1 = and %0, 255:i32
%2 = shl %1, 24:i32
%3 = ashr %2, 24:i32
%4:i32 = var
%5 = ne %4, 0:i32
%6:i32 = zext %5
%7:i32 = var
%8 = and %7, 3:i32
%9 = ne %8, 0:i32
%10:i32 = zext %9
%11 = and %6, %10
%12 = ne %11, 0:i32
pc %12 1
infer %3


; start LHS (in $23)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = and %3, 255:i32
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = eq %2, %6
%8:i32 = var
%9 = ne %8, 0:i32
%10:i32 = zext %9
%11:i32 = var
%12 = and %11, 3:i32
%13 = ne %12, 0:i32
%14:i32 = zext %13
%15 = and %10, %14
%16 = ne %15, 0:i32
pc %16 1
infer %7


; start LHS (in $23)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = ne %2, 0:i32
%4:i32 = zext %3
%5:i32 = var
%6 = and %5, 3:i32
%7 = ne %6, 0:i32
%8:i32 = zext %7
%9 = and %4, %8
%10 = ne %9, 0:i32
pc %10 1
infer %1


; start LHS (in $23)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3 = ne %2, 0:i32
%4:i32 = zext %3
%5:i32 = var
%6 = and %5, 3:i32
%7 = ne %6, 0:i32
%8:i32 = zext %7
%9 = and %4, %8
%10 = ne %9, 0:i32
pc %10 1
infer %1


; start LHS (in $23)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = and %1, 3:i32
%3:i32 = var
%4 = ne %3, 0:i32
%5:i32 = zext %4
%6:i32 = var
%7 = and %6, 3:i32
%8 = ne %7, 0:i32
%9:i32 = zext %8
%10 = and %5, %9
%11 = ne %10, 0:i32
pc %11 1
infer %2


; start LHS (in $23)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2 = ne %1, 0:i32
%3:i32 = var
%4 = ne %3, 0:i32
%5:i32 = zext %4
%6:i32 = var
%7 = and %6, 3:i32
%8 = ne %7, 0:i32
%9:i32 = zext %8
%10 = and %5, %9
%11 = ne %10, 0:i32
pc %11 1
infer %2


; start LHS (in $23)
%0:i32 = var
%1 = add %0, 1:i32 (hasExternalUses)
%2 = and %1, 3:i32
%3 = ne %2, 0:i32
%4:i32 = var
%5 = ne %4, 0:i32
%6:i32 = zext %5
%7:i32 = var
%8 = and %7, 3:i32
%9 = ne %8, 0:i32
%10:i32 = zext %9
%11 = and %6, %10
%12 = ne %11, 0:i32
pc %12 1
infer %3


; start LHS (in $23)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2 = ne %1, 0:i32 (hasExternalUses)
%3:i32 = zext %2
%4:i32 = var
%5 = add %4, 1:i32 (hasExternalUses)
%6 = and %5, 3:i32
%7 = ne %6, 0:i32
%8:i32 = zext %7
%9 = and %3, %8
%10:i32 = var
%11 = ne %10, 0:i32
%12:i32 = zext %11
%13:i32 = var
%14 = and %13, 3:i32
%15 = ne %14, 0:i32
%16:i32 = zext %15
%17 = and %12, %16
%18 = ne %17, 0:i32
pc %18 1
infer %9


; start LHS (in $23)
%0 = block 2
%1 = phi %0, 6:i32, 5:i32
%2 = eq %1, 5:i32
infer %2


; start LHS (in $23)
%0 = block 2
%1 = block 2
%2 = phi %1, 6:i32, 5:i32
%3 = block 2
%4 = phi %3, 6:i32, 16:i32
%5 = phi %0, %2, %4
%6 = eq %5, 6:i32
%7 = eq %2, 5:i32
blockpc %0 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %0 1 %9 1
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
%14:i32 = zext %13
%15:i32 = var
%16 = ne %15, 0:i32
%17:i32 = zext %16
%18 = and %14, %17
%19 = ne %18, 0:i32
blockpc %11 0 %19 1
%20 = eq %18, 0:i32
blockpc %11 1 %20 1
%21:i32 = var
%22 = add %21, -1:i32
%23 = ne %22, 0:i32
%24:i32 = zext %23
%25:i32 = zext %13
%26 = phi %11, %24, %25
%27 = phi %1, %10, %26
%28 = ne %27, 0:i32
blockpc %3 0 %28 1
%29:i32 = var
blockpc %3 1 %29 1
infer %6


; start LHS (in $23)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = and %3, 255:i32
%5 = block 2
%6 = phi %0, 6:i32, 5:i32
%7 = eq %6, 5:i32
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10 = block 2
%11:i32 = var
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = ne %16, 0:i32
%18:i32 = zext %17
%19:i32 = var
%20 = ne %19, 0:i32
%21:i32 = zext %20
%22 = phi %12, %18, %21
%23 = phi %0, %11, %22
%24 = ne %23, 0:i32
blockpc %10 0 %24 1
%25:i32 = var
blockpc %10 1 %25 1
%26 = phi %10, 6:i32, 16:i32
%27 = phi %5, %6, %26
%28 = eq %27, 6:i32
pc %28 1
infer %4


; start LHS (in $23)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = block 2
%3 = block 2
%4 = phi %3, 6:i32, 5:i32
%5 = eq %4, 5:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8 = block 2
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = ne %11, 0:i32
blockpc %10 0 %12 1
%13 = eq %11, 0:i32
blockpc %10 1 %13 1
%14:i32 = var
%15 = ne %14, 0:i32
%16:i32 = zext %15
%17:i32 = var
%18 = ne %17, 0:i32
%19:i32 = zext %18
%20 = phi %10, %16, %19
%21 = phi %3, %9, %20
%22 = ne %21, 0:i32
blockpc %8 0 %22 1
%23 = eq %21, 0:i32
blockpc %8 1 %23 1
%24 = phi %8, 6:i32, 16:i32
%25 = phi %2, %4, %24
%26 = eq %25, 6:i32
pc %26 1
infer %1


; start LHS (in $23)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = block 2
%4 = block 2
%5 = phi %4, 6:i32, 5:i32
%6 = eq %5, 5:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = ne %15, 0:i32
%17:i32 = zext %16
%18:i32 = var
%19 = ne %18, 0:i32
%20:i32 = zext %19
%21 = phi %11, %17, %20
%22 = phi %4, %10, %21
%23 = ne %22, 0:i32
blockpc %9 0 %23 1
%24 = eq %22, 0:i32
blockpc %9 1 %24 1
%25 = phi %9, 6:i32, 16:i32
%26 = phi %3, %5, %25
%27 = eq %26, 6:i32
pc %27 1
infer %2


; start LHS (in $23)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = and %3, 255:i32 (hasExternalUses)
%5 = shl %4, 24:i32
%6 = block 2
%7 = phi %0, 6:i32, 5:i32
%8 = eq %7, 5:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = block 2
%12:i32 = var
%13 = block 2
%14:i32 = var
%15 = ne %14, 0:i32
blockpc %13 0 %15 1
%16 = eq %14, 0:i32
blockpc %13 1 %16 1
%17:i32 = var
%18 = ne %17, 0:i32
%19:i32 = zext %18
%20:i32 = var
%21 = ne %20, 0:i32
%22:i32 = zext %21
%23 = phi %13, %19, %22
%24 = phi %0, %12, %23
%25 = ne %24, 0:i32
blockpc %11 0 %25 1
%26:i32 = var
blockpc %11 1 %26 1
%27 = phi %11, 6:i32, 16:i32
%28 = phi %6, %7, %27
%29 = eq %28, 6:i32
pc %29 1
infer %5


; start LHS (in $23)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = and %3, 255:i32 (hasExternalUses)
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = block 2
%8 = phi %0, 6:i32, 5:i32
%9 = eq %8, 5:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
%16 = ne %15, 0:i32
blockpc %14 0 %16 1
%17 = eq %15, 0:i32
blockpc %14 1 %17 1
%18:i32 = var
%19 = ne %18, 0:i32
%20:i32 = zext %19
%21:i32 = var
%22 = ne %21, 0:i32
%23:i32 = zext %22
%24 = phi %14, %20, %23
%25 = phi %0, %13, %24
%26 = ne %25, 0:i32
blockpc %12 0 %26 1
%27:i32 = var
blockpc %12 1 %27 1
%28 = phi %12, 6:i32, 16:i32
%29 = phi %7, %8, %28
%30 = eq %29, 6:i32
pc %30 1
infer %6


; start LHS (in $23)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = and %6, 255:i32 (hasExternalUses)
%8 = shl %7, 24:i32
%9 = ashr %8, 24:i32
%10 = eq %2, %9
%11 = block 2
%12 = phi %3, 6:i32, 5:i32
%13 = eq %12, 5:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = ne %19, 0:i32
blockpc %18 0 %20 1
%21 = eq %19, 0:i32
blockpc %18 1 %21 1
%22:i32 = var
%23 = ne %22, 0:i32
%24:i32 = zext %23
%25:i32 = var
%26 = ne %25, 0:i32
%27:i32 = zext %26
%28 = phi %18, %24, %27
%29 = phi %3, %17, %28
%30 = ne %29, 0:i32
blockpc %16 0 %30 1
%31:i32 = var
blockpc %16 1 %31 1
%32 = phi %16, 6:i32, 16:i32
%33 = phi %11, %12, %32
%34 = eq %33, 6:i32
pc %34 1
infer %10


; start LHS (in $23)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = phi %1, %2, 0:i32
%4 = block 2
%5:i32 = var
%6 = block 2
%7 = add %2, -1:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %6, %7, %8
%10 = phi %1, %5, %9
%11 = phi %4, %10, %3
%12 = phi %0, %3, %11
%13 = eq %12, 0:i32
%14 = phi %1, 6:i32, 5:i32
%15 = eq %14, 5:i32
blockpc %0 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %0 1 %17 1
%18:i32 = var
%19 = ne %8, 0:i32
%20:i32 = zext %19
%21:i32 = var
%22 = ne %21, 0:i32
%23:i32 = zext %22
%24 = and %20, %23
%25 = ne %24, 0:i32
blockpc %6 0 %25 1
%26 = eq %24, 0:i32
blockpc %6 1 %26 1
%27:i32 = var
%28 = add %27, 0:i32; Replace bad zext operation
%29:i32 = zext %19
%30 = phi %6, %28, %29
%31 = phi %1, %18, %30
%32 = ne %31, 0:i32
blockpc %4 0 %32 1
%33:i32 = var
blockpc %4 1 %33 1
%34:i32 = var
%35:i32 = var
pc %34 1
pc %35 1
infer %13


; start LHS (in $23)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = and %2, 255:i32
%4 = phi %0, %1, %3
%5 = mul %4, 16843009:i32
%6 = block 2
%7 = phi %0, 6:i32, 5:i32
%8 = eq %7, 5:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = block 2
%12:i32 = var
%13 = block 2
%14:i32 = var
%15 = ne %14, 0:i32
blockpc %13 0 %15 1
%16 = eq %14, 0:i32
blockpc %13 1 %16 1
%17:i32 = var
%18 = ne %17, 0:i32
%19:i32 = zext %18
%20:i32 = var
%21 = ne %20, 0:i32
%22:i32 = zext %21
%23 = phi %13, %19, %22
%24 = phi %0, %12, %23
%25 = ne %24, 0:i32
blockpc %11 0 %25 1
%26:i32 = var
blockpc %11 1 %26 1
%27 = phi %11, 6:i32, 16:i32
%28 = phi %6, %7, %27
%29 = eq %28, 6:i32
pc %29 1
infer %5


; start LHS (in $23)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = phi %1, %2, 0:i32
%4 = block 2
%5:i32 = var
%6 = block 2
%7 = add %2, -1:i32 (hasExternalUses)
%8:i32 = var
%9 = phi %6, %7, %8
%10 = phi %1, %5, %9
%11 = phi %4, %10, %3
%12 = phi %0, %3, %11
%13 = ult 3:i32, %12
%14 = phi %1, 6:i32, 5:i32
%15 = eq %14, 5:i32
blockpc %0 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %0 1 %17 1
%18:i32 = var
%19 = ne %8, 0:i32
%20:i32 = zext %19
%21:i32 = var
%22 = ne %21, 0:i32
%23:i32 = zext %22
%24 = and %20, %23
%25 = ne %24, 0:i32
blockpc %6 0 %25 1
%26 = eq %24, 0:i32
blockpc %6 1 %26 1
%27:i32 = var
%28 = add %27, 0:i32; Replace bad zext operation
%29:i32 = zext %19
%30 = phi %6, %28, %29
%31 = phi %1, %18, %30
%32 = ne %31, 0:i32
blockpc %4 0 %32 1
%33:i32 = var
blockpc %4 1 %33 1
%34:i32 = var
pc %34 1
infer %13


; start LHS (in $23)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = and %3, 255:i32
%5 = phi %1, %2, %4
%6 = mul %5, 16843009:i32
%7 = xor %0, %6
%8 = block 2
%9 = phi %1, 6:i32, 5:i32
%10 = eq %9, 5:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13:i32 = var
%14 = phi %1, %13, 0:i32
%15 = block 2
%16:i32 = var
%17 = block 2
%18:i32 = var
%19 = ne %18, 0:i32
blockpc %17 0 %19 1
%20 = eq %18, 0:i32
blockpc %17 1 %20 1
%21:i32 = var
%22 = ne %21, 0:i32
%23:i32 = zext %22
%24:i32 = var
%25 = ne %24, 0:i32
%26:i32 = zext %25
%27 = phi %17, %23, %26
%28 = phi %1, %16, %27
%29 = ne %28, 0:i32
blockpc %15 0 %29 1
%30:i32 = var
blockpc %15 1 %30 1
%31:i32 = var
%32 = phi %17, %21, %24
%33 = phi %1, %31, %32
%34 = phi %15, %33, %14
%35 = phi %8, %14, %34
%36 = ult 3:i32, %35
%37:i32 = var
pc %36 1
pc %37 1
infer %7


; start LHS (in $23)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = and %3, 255:i32
%5 = phi %1, %2, %4
%6 = mul %5, 16843009:i32
%7 = xor %0, %6 (hasExternalUses)
%8 = and %7, -2139062144:i32
%9 = block 2
%10 = phi %1, 6:i32, 5:i32
%11 = eq %10, 5:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14:i32 = var
%15 = phi %1, %14, 0:i32
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = ne %19, 0:i32
blockpc %18 0 %20 1
%21 = eq %19, 0:i32
blockpc %18 1 %21 1
%22:i32 = var
%23 = ne %22, 0:i32
%24:i32 = zext %23
%25:i32 = var
%26 = ne %25, 0:i32
%27:i32 = zext %26
%28 = phi %18, %24, %27
%29 = phi %1, %17, %28
%30 = ne %29, 0:i32
blockpc %16 0 %30 1
%31:i32 = var
blockpc %16 1 %31 1
%32:i32 = var
%33 = phi %18, %22, %25
%34 = phi %1, %32, %33
%35 = phi %16, %34, %15
%36 = phi %9, %15, %35
%37 = ult 3:i32, %36
%38:i32 = var
pc %37 1
pc %38 1
infer %8


; start LHS (in $23)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = and %3, 255:i32
%5 = phi %1, %2, %4
%6 = mul %5, 16843009:i32
%7 = xor %0, %6 (hasExternalUses)
%8 = and %7, -2139062144:i32
%9 = xor %8, -2139062144:i32
%10 = block 2
%11 = phi %1, 6:i32, 5:i32
%12 = eq %11, 5:i32
blockpc %10 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %10 1 %14 1
%15:i32 = var
%16 = phi %1, %15, 0:i32
%17 = block 2
%18:i32 = var
%19 = block 2
%20:i32 = var
%21 = ne %20, 0:i32
blockpc %19 0 %21 1
%22 = eq %20, 0:i32
blockpc %19 1 %22 1
%23:i32 = var
%24 = ne %23, 0:i32
%25:i32 = zext %24
%26:i32 = var
%27 = add %26, 0:i32; Replace bad zext operation
%28 = phi %19, %25, %27
%29 = phi %1, %18, %28
%30 = ne %29, 0:i32
blockpc %17 0 %30 1
%31:i32 = var
blockpc %17 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %19, %23, %33
%35 = phi %1, %32, %34
%36 = phi %17, %35, %16
%37 = phi %10, %16, %36
%38 = ult 3:i32, %37
%39:i32 = var
pc %38 1
pc %39 1
infer %9


; start LHS (in $23)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = and %3, 255:i32
%5 = phi %1, %2, %4
%6 = mul %5, 16843009:i32
%7 = xor %0, %6 (hasExternalUses)
%8 = add %7, -16843009:i32
%9 = block 2
%10 = phi %1, 6:i32, 5:i32
%11 = eq %10, 5:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14:i32 = var
%15 = phi %1, %14, 0:i32
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = ne %19, 0:i32
blockpc %18 0 %20 1
%21 = eq %19, 0:i32
blockpc %18 1 %21 1
%22:i32 = var
%23 = ne %22, 0:i32
%24:i32 = zext %23
%25:i32 = var
%26 = ne %25, 0:i32
%27:i32 = zext %26
%28 = phi %18, %24, %27
%29 = phi %1, %17, %28
%30 = ne %29, 0:i32
blockpc %16 0 %30 1
%31:i32 = var
blockpc %16 1 %31 1
%32:i32 = var
%33 = phi %18, %22, %25
%34 = phi %1, %32, %33
%35 = phi %16, %34, %15
%36 = phi %9, %15, %35
%37 = ult 3:i32, %36
%38:i32 = var
pc %37 1
pc %38 1
infer %8


; start LHS (in $23)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = and %3, 255:i32
%5 = phi %1, %2, %4
%6 = mul %5, 16843009:i32
%7 = xor %0, %6
%8 = and %7, -2139062144:i32
%9 = xor %8, -2139062144:i32
%10 = add %7, -16843009:i32
%11 = and %9, %10
%12 = block 2
%13 = phi %1, 6:i32, 5:i32
%14 = eq %13, 5:i32
blockpc %12 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1
%17:i32 = var
%18 = phi %1, %17, 0:i32
%19 = block 2
%20:i32 = var
%21 = block 2
%22:i32 = var
%23 = ne %22, 0:i32
blockpc %21 0 %23 1
%24 = eq %22, 0:i32
blockpc %21 1 %24 1
%25:i32 = var
%26 = ne %25, 0:i32
%27:i32 = zext %26
%28:i32 = var
%29 = add %28, 0:i32; Replace bad zext operation
%30 = phi %21, %27, %29
%31 = phi %1, %20, %30
%32 = ne %31, 0:i32
blockpc %19 0 %32 1
%33:i32 = var
blockpc %19 1 %33 1
%34:i32 = var
%35:i32 = var
%36 = phi %21, %25, %35
%37 = phi %1, %34, %36
%38 = phi %19, %37, %18
%39 = phi %12, %18, %38
%40 = ult 3:i32, %39
%41:i32 = var
pc %40 1
pc %41 1
infer %11


; start LHS (in $23)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = and %3, 255:i32
%5 = phi %1, %2, %4
%6 = mul %5, 16843009:i32
%7 = xor %0, %6
%8 = and %7, -2139062144:i32
%9 = xor %8, -2139062144:i32
%10 = add %7, -16843009:i32
%11 = and %9, %10
%12 = eq %11, 0:i32
%13 = block 2
%14 = phi %1, 6:i32, 5:i32
%15 = eq %14, 5:i32
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18:i32 = var
%19 = phi %1, %18, 0:i32
%20 = block 2
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = ne %23, 0:i32
blockpc %22 0 %24 1
%25 = eq %23, 0:i32
blockpc %22 1 %25 1
%26:i32 = var
%27 = add %26, 0:i32; Replace bad zext operation
%28:i32 = var
%29 = add %28, 0:i32; Replace bad zext operation
%30 = phi %22, %27, %29
%31 = phi %1, %21, %30
%32 = ne %31, 0:i32
blockpc %20 0 %32 1
%33:i32 = var
blockpc %20 1 %33 1
%34:i32 = var
%35:i32 = var
%36:i32 = var
%37 = phi %22, %35, %36
%38 = phi %1, %34, %37
%39 = phi %20, %38, %19
%40 = phi %13, %19, %39
%41 = ult 3:i32, %40
%42:i32 = var
pc %41 1
pc %42 1
infer %12


; start LHS (in $23)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = mul %4, 16843009:i32
%6 = xor %0, %5
%7 = and %6, -2139062144:i32
%8 = xor %7, -2139062144:i32
%9 = add %6, -16843009:i32
%10 = and %8, %9
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = block 2
%15 = phi %1, 6:i32, 5:i32
%16 = eq %15, 5:i32
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19:i32 = var
%20 = phi %1, %19, 0:i32
%21 = block 2
%22:i32 = var
%23 = block 2
%24:i32 = var
%25 = ne %24, 0:i32
blockpc %23 0 %25 1
%26 = eq %24, 0:i32
blockpc %23 1 %26 1
%27:i32 = var
%28 = add %27, 0:i32; Replace bad zext operation
%29:i32 = var
%30 = add %29, 0:i32; Replace bad zext operation
%31 = phi %23, %28, %30
%32 = phi %1, %22, %31
%33 = ne %32, 0:i32
blockpc %21 0 %33 1
%34:i32 = var
blockpc %21 1 %34 1
%35:i32 = var
%36:i32 = var
%37:i32 = var
%38 = phi %23, %36, %37
%39 = phi %1, %35, %38
%40 = phi %21, %39, %20
%41 = phi %14, %20, %40
%42 = ult 3:i32, %41
%43:i32 = var
pc %42 1
pc %43 1
infer %13


; start LHS (in $23)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3 = block 2
%4 = phi %3, 6:i32, 5:i32
%5 = eq %4, 5:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8:i32 = var
%9 = phi %3, %8, 0:i32
%10 = block 2
%11:i32 = var
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = ne %16, 0:i32
%18:i32 = zext %17
%19:i32 = var
%20 = ne %19, 0:i32
%21:i32 = zext %20
%22 = phi %12, %18, %21
%23 = phi %3, %11, %22
%24 = ne %23, 0:i32
blockpc %10 0 %24 1
%25:i32 = var
blockpc %10 1 %25 1
%26:i32 = var
%27 = phi %12, %16, %19
%28 = phi %3, %26, %27
%29 = phi %10, %28, %9
%30 = phi %2, %9, %29
%31 = ult 3:i32, %30
%32:i32 = var
pc %31 1
pc %32 1
infer %1


; start LHS (in $23)
%0:i32 = var
%1 = add %0, -4:i32
%2 = block 2
%3 = block 2
%4 = phi %3, 6:i32, 5:i32
%5 = eq %4, 5:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8:i32 = var
%9 = phi %3, %8, 0:i32
%10 = block 2
%11:i32 = var
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = ne %16, 0:i32
%18:i32 = zext %17
%19:i32 = var
%20 = ne %19, 0:i32
%21:i32 = zext %20
%22 = phi %12, %18, %21
%23 = phi %3, %11, %22
%24 = ne %23, 0:i32
blockpc %10 0 %24 1
%25:i32 = var
blockpc %10 1 %25 1
%26:i32 = var
%27 = phi %12, %16, %19
%28 = phi %3, %26, %27
%29 = phi %10, %28, %9
%30 = phi %2, %9, %29
%31 = ult 3:i32, %30
%32:i32 = var
pc %31 1
pc %32 1
infer %1


; start LHS (in $23)
%0:i32 = var
%1 = add %0, -4:i32 (hasExternalUses)
%2 = ult 3:i32, %1
%3 = block 2
%4 = block 2
%5 = phi %4, 6:i32, 5:i32
%6 = eq %5, 5:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10 = phi %4, %9, 0:i32
%11 = block 2
%12:i32 = var
%13 = block 2
%14:i32 = var
%15 = ne %14, 0:i32
blockpc %13 0 %15 1
%16 = eq %14, 0:i32
blockpc %13 1 %16 1
%17:i32 = var
%18 = ne %17, 0:i32
%19:i32 = zext %18
%20:i32 = var
%21 = ne %20, 0:i32
%22:i32 = zext %21
%23 = phi %13, %19, %22
%24 = phi %4, %12, %23
%25 = ne %24, 0:i32
blockpc %11 0 %25 1
%26:i32 = var
blockpc %11 1 %26 1
%27:i32 = var
%28 = phi %13, %17, %20
%29 = phi %4, %27, %28
%30 = phi %11, %29, %10
%31 = phi %3, %10, %30
%32 = ult 3:i32, %31
%33:i32 = var
pc %32 1
pc %33 1
infer %2


; start LHS (in $23)
%0 = block 2
%1:i32 = var
%2 = phi %0, %1, 11:i32
%3 = eq %2, 11:i32
%4 = block 2
%5 = block 2
%6 = phi %5, 6:i32, 5:i32
%7 = eq %6, 5:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = block 2
%11:i32 = var
%12 = block 2
%13:i32 = var
%14 = ne %13, 0:i32
blockpc %12 0 %14 1
%15 = eq %13, 0:i32
blockpc %12 1 %15 1
%16:i32 = var
%17 = ne %16, 0:i32
%18:i32 = zext %17
%19:i32 = var
%20 = ne %19, 0:i32
%21:i32 = zext %20
%22 = phi %12, %18, %21
%23 = phi %5, %11, %22
%24 = ne %23, 0:i32
blockpc %10 0 %24 1
%25:i32 = var
blockpc %10 1 %25 1
%26 = phi %10, 6:i32, 16:i32
%27 = phi %4, %6, %26
%28 = eq %27, 6:i32
pc %28 1
infer %3


; start LHS (in $23)
%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = add %3, -4:i32 (hasExternalUses)
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = phi %6, %7, 0:i32
%9 = block 2
%10:i32 = var
%11 = block 2
%12 = add %7, -1:i32 (hasExternalUses)
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %6, %10, %14
%16 = phi %9, %15, %8
%17 = phi %5, %8, %16
%18 = phi %2, %4, %17
%19 = phi %0, %1, %18
%20 = eq %19, 0:i32
%21 = ult 3:i32, %17
blockpc %2 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %2 1 %23 1
%24 = phi %6, 6:i32, 5:i32
%25 = eq %24, 5:i32
blockpc %5 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %5 1 %27 1
%28:i32 = var
blockpc %9 0 %28 1
%29:i32 = var
blockpc %9 1 %29 1
%30:i32 = var
blockpc %11 0 %30 1
%31:i32 = var
blockpc %11 1 %31 1
%32:i32 = var
%33:i32 = var
pc %32 1
pc %33 1
infer %20


; start LHS (in $23)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = block 2
%3 = block 2
%4 = phi %3, 6:i32, 5:i32
%5 = eq %4, 5:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8 = block 2
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = ne %11, 0:i32
blockpc %10 0 %12 1
%13 = eq %11, 0:i32
blockpc %10 1 %13 1
%14:i32 = var
%15 = ne %14, 0:i32
%16:i32 = zext %15
%17:i32 = var
%18 = ne %17, 0:i32
%19:i32 = zext %18
%20 = phi %10, %16, %19
%21 = phi %3, %9, %20
%22 = ne %21, 0:i32
blockpc %8 0 %22 1
%23 = eq %21, 0:i32
blockpc %8 1 %23 1
%24 = phi %8, 6:i32, 16:i32
%25 = phi %2, %4, %24
%26 = eq %25, 6:i32
pc %26 1
infer %1


; start LHS (in $23)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = block 2
%4 = block 2
%5 = phi %4, 6:i32, 5:i32
%6 = eq %5, 5:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = ne %15, 0:i32
%17:i32 = zext %16
%18:i32 = var
%19 = ne %18, 0:i32
%20:i32 = zext %19
%21 = phi %11, %17, %20
%22 = phi %4, %10, %21
%23 = ne %22, 0:i32
blockpc %9 0 %23 1
%24 = eq %22, 0:i32
blockpc %9 1 %24 1
%25 = phi %9, 6:i32, 16:i32
%26 = phi %3, %5, %25
%27 = eq %26, 6:i32
pc %27 1
infer %2


; start LHS (in $23)
%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = and %5, 255:i32 (hasExternalUses)
%7 = phi %0, %1, %6
%8 = shl %7, 24:i32
%9 = block 2
%10 = phi %2, 6:i32, 5:i32
%11 = eq %10, 5:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = block 2
%15:i32 = var
%16 = block 2
%17:i32 = var
%18 = ne %17, 0:i32
blockpc %16 0 %18 1
%19 = eq %17, 0:i32
blockpc %16 1 %19 1
%20:i32 = var
%21 = ne %20, 0:i32
%22:i32 = zext %21
%23:i32 = var
%24 = ne %23, 0:i32
%25:i32 = zext %24
%26 = phi %16, %22, %25
%27 = phi %2, %15, %26
%28 = ne %27, 0:i32
blockpc %14 0 %28 1
%29:i32 = var
blockpc %14 1 %29 1
%30 = phi %14, 6:i32, 16:i32
%31 = phi %9, %10, %30
%32 = eq %31, 6:i32
pc %32 1
infer %8


; start LHS (in $23)
%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = and %5, 255:i32 (hasExternalUses)
%7 = phi %0, %1, %6
%8 = shl %7, 24:i32
%9 = ashr %8, 24:i32
%10 = block 2
%11 = phi %2, 6:i32, 5:i32
%12 = eq %11, 5:i32
blockpc %10 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %10 1 %14 1
%15 = block 2
%16:i32 = var
%17 = block 2
%18:i32 = var
%19 = ne %18, 0:i32
blockpc %17 0 %19 1
%20 = eq %18, 0:i32
blockpc %17 1 %20 1
%21:i32 = var
%22 = ne %21, 0:i32
%23:i32 = zext %22
%24:i32 = var
%25 = ne %24, 0:i32
%26:i32 = zext %25
%27 = phi %17, %23, %26
%28 = phi %2, %16, %27
%29 = ne %28, 0:i32
blockpc %15 0 %29 1
%30:i32 = var
blockpc %15 1 %30 1
%31 = phi %15, 6:i32, 16:i32
%32 = phi %10, %11, %31
%33 = eq %32, 6:i32
pc %33 1
infer %9


; start LHS (in $23)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = block 2
%4:i32 = var
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9 = and %8, 255:i32 (hasExternalUses)
%10 = phi %3, %4, %9
%11 = shl %10, 24:i32
%12 = ashr %11, 24:i32
%13 = eq %2, %12
%14 = block 2
%15 = phi %5, 6:i32, 5:i32
%16 = eq %15, 5:i32
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19 = block 2
%20:i32 = var
%21 = block 2
%22:i32 = var
%23 = ne %22, 0:i32
blockpc %21 0 %23 1
%24 = eq %22, 0:i32
blockpc %21 1 %24 1
%25:i32 = var
%26 = ne %25, 0:i32
%27:i32 = zext %26
%28:i32 = var
%29 = add %28, 0:i32; Replace bad zext operation
%30 = phi %21, %27, %29
%31 = phi %5, %20, %30
%32 = ne %31, 0:i32
blockpc %19 0 %32 1
%33:i32 = var
blockpc %19 1 %33 1
%34 = phi %19, 6:i32, 16:i32
%35 = phi %14, %15, %34
%36 = eq %35, 6:i32
pc %36 1
infer %13


; start LHS (in $23)
%0:i32 = var
%1 = add %0, 1:i32
%2 = block 2
%3 = block 2
%4 = phi %3, 6:i32, 5:i32
%5 = eq %4, 5:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8 = block 2
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = ne %11, 0:i32
blockpc %10 0 %12 1
%13 = eq %11, 0:i32
blockpc %10 1 %13 1
%14:i32 = var
%15 = ne %14, 0:i32
%16:i32 = zext %15
%17:i32 = var
%18 = ne %17, 0:i32
%19:i32 = zext %18
%20 = phi %10, %16, %19
%21 = phi %3, %9, %20
%22 = ne %21, 0:i32
blockpc %8 0 %22 1
%23 = eq %21, 0:i32
blockpc %8 1 %23 1
%24 = phi %8, 6:i32, 16:i32
%25 = phi %2, %4, %24
%26 = eq %25, 6:i32
pc %26 1
infer %1


; start LHS (in $23)
%0:i32 = var
%1 = add %0, -1:i32
%2 = block 2
%3 = block 2
%4 = phi %3, 6:i32, 5:i32
%5 = eq %4, 5:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8 = block 2
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = ne %11, 0:i32
blockpc %10 0 %12 1
%13 = eq %11, 0:i32
blockpc %10 1 %13 1
%14:i32 = var
%15 = ne %14, 0:i32
%16:i32 = zext %15
%17:i32 = var
%18 = ne %17, 0:i32
%19:i32 = zext %18
%20 = phi %10, %16, %19
%21 = phi %3, %9, %20
%22 = ne %21, 0:i32
blockpc %8 0 %22 1
%23 = eq %21, 0:i32
blockpc %8 1 %23 1
%24 = phi %8, 6:i32, 16:i32
%25 = phi %2, %4, %24
%26 = eq %25, 6:i32
pc %26 1
infer %1


; start LHS (in $23)
%0:i32 = var
%1 = add %0, -1:i32
%2 = eq %1, 0:i32
%3 = block 2
%4 = block 2
%5 = phi %4, 6:i32, 5:i32
%6 = eq %5, 5:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = ne %12, 0:i32
blockpc %11 0 %13 1
%14 = eq %12, 0:i32
blockpc %11 1 %14 1
%15:i32 = var
%16 = ne %15, 0:i32
%17:i32 = zext %16
%18:i32 = var
%19 = ne %18, 0:i32
%20:i32 = zext %19
%21 = phi %11, %17, %20
%22 = phi %4, %10, %21
%23 = ne %22, 0:i32
blockpc %9 0 %23 1
%24 = eq %22, 0:i32
blockpc %9 1 %24 1
%25 = phi %9, 6:i32, 16:i32
%26 = phi %3, %5, %25
%27 = eq %26, 6:i32
pc %27 1
infer %2


; start LHS (in $23)
%0 = block 5
%1 = block 2
%2 = block 2
%3 = phi %2, 6:i32, 5:i32
%4 = block 2
%5 = phi %4, 6:i32, 16:i32
%6 = phi %1, %3, %5
%7:i32 = var
%8 = block 2
%9 = phi %8, %6, 16:i32
%10 = phi %0, 16:i32, %6, 16:i32, %7, %9
%11 = eq %10, 16:i32
%12 = eq %3, 5:i32
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15:i32 = var
%16 = block 2
%17:i32 = var
%18 = ne %17, 0:i32
%19:i32 = zext %18
%20:i32 = var
%21 = ne %20, 0:i32
%22:i32 = zext %21
%23 = and %19, %22
%24 = ne %23, 0:i32
blockpc %16 0 %24 1
%25 = eq %23, 0:i32
blockpc %16 1 %25 1
%26:i32 = var
%27 = add %26, 0:i32; Replace bad zext operation
%28:i32 = zext %18
%29 = phi %16, %27, %28
%30 = phi %2, %15, %29
%31 = ne %30, 0:i32
blockpc %4 0 %31 1
%32:i32 = var
blockpc %4 1 %32 1
%33:i32 = var
blockpc %8 0 %33 1
%34:i32 = var
blockpc %8 1 %34 1
infer %11


; function: $24

; start LHS (in $24)
%0:i32 = var
%1 = add %0, 256:i32
infer %1


; start LHS (in $24)
%0:i32 = var
%1:i32 = var
%2 = sle %0, %1
infer %2


; start LHS (in $24)
%0:i32 = var
%1 = and %0, 73728:i32
infer %1


; start LHS (in $24)
%0:i32 = var
%1:i32 = var
%2 = slt %0, %1
infer %2


; start LHS (in $24)
%0:i32 = var
%1 = and %0, 73728:i32
%2 = eq %1, 0:i32
infer %2


; start LHS (in $24)
%0:i32 = var
%1:i32 = var
%2 = slt %0, %1
%3:i32 = zext %2
%4:i32 = var
%5 = and %4, 73728:i32
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = and %3, %7
infer %8


; start LHS (in $24)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3 = slt %1, %0
%4:i32 = zext %3
%5:i32 = var
%6 = and %5, 73728:i32
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = and %4, %8
%10 = ne %9, 0:i32
pc %10 1
infer %2


; start LHS (in $24)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3:i32 = var
%4 = slt %2, %3
%5:i32 = zext %4
%6:i32 = var
%7 = and %6, 73728:i32
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = and %5, %9
%11 = ne %10, 0:i32
pc %11 1
infer %1


; start LHS (in $24)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4:i32 = var
%5 = slt %3, %4
%6:i32 = zext %5
%7:i32 = var
%8 = and %7, 73728:i32
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = and %6, %10
%12 = ne %11, 0:i32
pc %12 1
infer %2


; start LHS (in $24)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1 (hasExternalUses)
%3 = ult %2, 256:i32
%4 = slt %1, %0
%5:i32 = zext %4
%6:i32 = var
%7 = and %6, 73728:i32
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = and %5, %9
%11 = ne %10, 0:i32
pc %11 1
infer %3


; start LHS (in $24)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1 (hasExternalUses)
%3 = ult 255:i32, %2
%4 = slt %1, %0
%5:i32 = zext %4
%6:i32 = var
%7 = and %6, 73728:i32
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = and %5, %9
%11 = ne %10, 0:i32
pc %11 1
infer %3


; start LHS (in $24)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3 = sub %0, %1
%4 = ult 255:i32, %3
%5 = slt %1, %0
%6:i32 = zext %5
%7:i32 = var
%8 = and %7, 73728:i32
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = and %6, %10
%12 = ne %11, 0:i32
pc %4 1
pc %12 1
infer %2


; start LHS (in $24)
%0:i32 = var
%1 = add %0, -256:i32
%2:i32 = var
%3:i32 = var
%4 = sub %2, %3
%5 = ult 255:i32, %4
%6 = slt %3, %2
%7:i32 = zext %6
%8:i32 = var
%9 = and %8, 73728:i32
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = and %7, %11
%13 = ne %12, 0:i32
pc %5 1
pc %13 1
infer %1


; start LHS (in $24)
%0:i32 = var
%1 = add %0, -256:i32
%2 = ult 255:i32, %1
%3:i32 = var
%4:i32 = var
%5 = sub %3, %4
%6 = ult 255:i32, %5
%7 = slt %4, %3
%8:i32 = zext %7
%9:i32 = var
%10 = and %9, 73728:i32
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = and %8, %12
%14 = ne %13, 0:i32
pc %6 1
pc %14 1
infer %2


; start LHS (in $24)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3 = and %2, 255:i32
%4 = sub %0, %1
%5 = ult 255:i32, %4
%6 = slt %1, %0
%7:i32 = zext %6
%8:i32 = var
%9 = and %8, 73728:i32
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = and %7, %11
%13 = ne %12, 0:i32
pc %5 1
pc %13 1
infer %3


; function: $25

; start LHS (in $25)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; function: $26

; start LHS (in $26)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = ult %0, 128:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = and %0, 255:i32
%2 = ult %0, 128:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %2 1
pc %6 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = add %0, 188:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = and %0, -128:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %3 1
pc %7 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = and %0, -128:i32
%2 = eq %1, 57216:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %4 1
pc %8 1
infer %2


; start LHS (in $26)
%0:i32 = var
%1 = and %0, 255:i32
%2 = and %0, -128:i32
%3 = eq %2, 57216:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
pc %3 1
pc %5 1
pc %9 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = ult %0, 2048:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = ult %0, 2048:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %2 1
pc %6 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = or %1, 192:i32
%3 = ult %0, 2048:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %3 1
pc %7 1
infer %2


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = or %1, 192:i32
%3 = and %2, 255:i32
%4 = ult %0, 2048:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %4 1
pc %8 1
infer %3


; start LHS (in $26)
%0:i32 = var
%1 = and %0, 63:i32
%2 = ult %0, 2048:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %2 1
pc %6 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = and %0, 63:i32
%2 = or %1, 128:i32
%3 = ult %0, 2048:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %3 1
pc %7 1
infer %2


; start LHS (in $26)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = ult %2, 2048:i32
%4 = eq %0, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %3 1
pc %6 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = and %0, 63:i32
%2 = or %1, 128:i32
%3 = and %2, 255:i32
%4 = ult %0, 2048:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %4 1
pc %8 1
infer %3


; start LHS (in $26)
%0:i32 = var
%1 = and %0, -8192:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = ult %0, 55296:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = and %0, -8192:i32
%2 = eq %1, 57344:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $26)
%0:i32 = var
%1 = ult %0, 55296:i32
%2:i32 = zext %1
%3 = and %0, -8192:i32
%4 = eq %3, 57344:i32
%5:i32 = zext %4
%6 = or %2, %5
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
pc %10 1
infer %6


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 12:i32
%2 = ult %0, 55296:i32
%3:i32 = zext %2
%4 = and %0, -8192:i32
%5 = eq %4, 57344:i32
%6:i32 = zext %5
%7 = or %3, %6
%8 = ne %7, 0:i32
%9:i32 = var
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %8 1
pc %12 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 12:i32
%2 = or %1, 224:i32
%3 = ult %0, 55296:i32
%4:i32 = zext %3
%5 = and %0, -8192:i32
%6 = eq %5, 57344:i32
%7:i32 = zext %6
%8 = or %4, %7
%9 = ne %8, 0:i32
%10:i32 = var
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
pc %9 1
pc %13 1
infer %2


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 12:i32
%2 = or %1, 224:i32
%3 = and %2, 255:i32
%4 = ult %0, 55296:i32
%5:i32 = zext %4
%6 = and %0, -8192:i32
%7 = eq %6, 57344:i32
%8:i32 = zext %7
%9 = or %5, %8
%10 = ne %9, 0:i32
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
pc %10 1
pc %14 1
infer %3


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = ult %0, 55296:i32
%3:i32 = zext %2
%4 = and %0, -8192:i32
%5 = eq %4, 57344:i32
%6:i32 = zext %5
%7 = or %3, %6
%8 = ne %7, 0:i32
%9:i32 = var
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %8 1
pc %12 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = and %1, 63:i32
%3 = ult %0, 55296:i32
%4:i32 = zext %3
%5 = and %0, -8192:i32
%6 = eq %5, 57344:i32
%7:i32 = zext %6
%8 = or %4, %7
%9 = ne %8, 0:i32
%10:i32 = var
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
pc %9 1
pc %13 1
infer %2


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = and %1, 63:i32
%3 = or %2, 128:i32
%4 = ult %0, 55296:i32
%5:i32 = zext %4
%6 = and %0, -8192:i32
%7 = eq %6, 57344:i32
%8:i32 = zext %7
%9 = or %5, %8
%10 = ne %9, 0:i32
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
pc %10 1
pc %14 1
infer %3


; start LHS (in $26)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = ult %2, 55296:i32
%4:i32 = zext %3
%5 = and %2, -8192:i32
%6 = eq %5, 57344:i32
%7:i32 = zext %6
%8 = or %4, %7
%9 = ne %8, 0:i32
%10 = eq %0, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %9 1
pc %12 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = and %1, 63:i32
%3 = or %2, 128:i32
%4 = and %3, 255:i32
%5 = ult %0, 55296:i32
%6:i32 = zext %5
%7 = and %0, -8192:i32
%8 = eq %7, 57344:i32
%9:i32 = zext %8
%10 = or %6, %9
%11 = ne %10, 0:i32
%12:i32 = var
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
pc %11 1
pc %15 1
infer %4


; start LHS (in $26)
%0:i32 = var
%1 = and %0, 63:i32
%2 = ult %0, 55296:i32
%3:i32 = zext %2
%4 = and %0, -8192:i32
%5 = eq %4, 57344:i32
%6:i32 = zext %5
%7 = or %3, %6
%8 = ne %7, 0:i32
%9:i32 = var
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %8 1
pc %12 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = and %0, 63:i32
%2 = or %1, 128:i32
%3 = ult %0, 55296:i32
%4:i32 = zext %3
%5 = and %0, -8192:i32
%6 = eq %5, 57344:i32
%7:i32 = zext %6
%8 = or %4, %7
%9 = ne %8, 0:i32
%10:i32 = var
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
pc %9 1
pc %13 1
infer %2


; start LHS (in $26)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = ult %2, 55296:i32
%4:i32 = zext %3
%5 = and %2, -8192:i32
%6 = eq %5, 57344:i32
%7:i32 = zext %6
%8 = or %4, %7
%9 = ne %8, 0:i32
%10 = eq %0, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %9 1
pc %12 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = and %0, 63:i32
%2 = or %1, 128:i32
%3 = and %2, 255:i32
%4 = ult %0, 55296:i32
%5:i32 = zext %4
%6 = and %0, -8192:i32
%7 = eq %6, 57344:i32
%8:i32 = zext %7
%9 = or %5, %8
%10 = ne %9, 0:i32
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
pc %10 1
pc %14 1
infer %3


; start LHS (in $26)
%0:i32 = var
%1 = add %0, -65536:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = add %0, -65536:i32
%2 = ult %1, 1048576:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
pc %6 1
infer %2


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 18:i32
%2 = add %0, -65536:i32
%3 = ult %2, 1048576:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %3 1
pc %7 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 18:i32
%2 = or %1, 240:i32
%3 = add %0, -65536:i32
%4 = ult %3, 1048576:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %4 1
pc %8 1
infer %2


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 18:i32
%2 = or %1, 240:i32
%3 = and %2, 255:i32
%4 = add %0, -65536:i32
%5 = ult %4, 1048576:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
pc %5 1
pc %9 1
infer %3


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 12:i32
%2 = add %0, -65536:i32
%3 = ult %2, 1048576:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %3 1
pc %7 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 12:i32
%2 = and %1, 63:i32
%3 = add %0, -65536:i32
%4 = ult %3, 1048576:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %4 1
pc %8 1
infer %2


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 12:i32
%2 = and %1, 63:i32
%3 = or %2, 128:i32
%4 = add %0, -65536:i32
%5 = ult %4, 1048576:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
pc %5 1
pc %9 1
infer %3


; start LHS (in $26)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = add %2, -65536:i32
%4 = ult %3, 1048576:i32
%5 = eq %0, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %4 1
pc %7 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 12:i32
%2 = and %1, 63:i32
%3 = or %2, 128:i32
%4 = and %3, 255:i32
%5 = add %0, -65536:i32
%6 = ult %5, 1048576:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
pc %6 1
pc %10 1
infer %4


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = add %0, -65536:i32
%3 = ult %2, 1048576:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %3 1
pc %7 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = and %1, 63:i32
%3 = add %0, -65536:i32
%4 = ult %3, 1048576:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %4 1
pc %8 1
infer %2


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = and %1, 63:i32
%3 = or %2, 128:i32
%4 = add %0, -65536:i32
%5 = ult %4, 1048576:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
pc %5 1
pc %9 1
infer %3


; start LHS (in $26)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = add %2, -65536:i32
%4 = ult %3, 1048576:i32
%5 = eq %0, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %4 1
pc %7 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = lshr %0, 6:i32
%2 = and %1, 63:i32
%3 = or %2, 128:i32
%4 = and %3, 255:i32
%5 = add %0, -65536:i32
%6 = ult %5, 1048576:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
pc %6 1
pc %10 1
infer %4


; start LHS (in $26)
%0:i32 = var
%1 = and %0, 63:i32
%2 = add %0, -65536:i32
%3 = ult %2, 1048576:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %3 1
pc %7 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = and %0, 63:i32
%2 = or %1, 128:i32
%3 = add %0, -65536:i32
%4 = ult %3, 1048576:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %4 1
pc %8 1
infer %2


; start LHS (in $26)
%0:i32 = var
%1 = add %0, 3:i32
%2:i32 = var
%3 = add %2, -65536:i32
%4 = ult %3, 1048576:i32
%5 = eq %0, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %4 1
pc %7 1
infer %1


; start LHS (in $26)
%0:i32 = var
%1 = and %0, 63:i32
%2 = or %1, 128:i32
%3 = and %2, 255:i32
%4 = add %0, -65536:i32
%5 = ult %4, 1048576:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
pc %5 1
pc %9 1
infer %3


; function: $27

; function: $28

; function: $29

; start LHS (in $29)
%0:i32 = var
%1 = add %0, 16:i32
infer %1


; start LHS (in $29)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $29)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
pc %3 1
infer %1


; start LHS (in $29)
%0 = block 2
%1 = block 2
%2 = phi %1, 5:i32, 0:i32
%3 = phi %0, %2, 5:i32
%4 = eq %3, 5:i32
%5:i32 = var
%6 = eq %5, 0:i32
blockpc %0 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %0 1 %8 1
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %1 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %1 1 %12 1
infer %4


; start LHS (in $29)
%0:i32 = var
%1 = add %0, 20:i32
%2 = block 2
%3:i32 = var
%4 = eq %3, 0:i32
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7 = block 2
%8:i32 = var
%9 = eq %8, 0:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = phi %7, 5:i32, 0:i32
%13 = phi %2, %12, 5:i32
%14 = eq %13, 5:i32
pc %14 1
infer %1


; start LHS (in $29)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = phi %1, %2, 0:i32
%4:i32 = var
%5 = phi %0, %3, %4
%6:i32 = var
%7 = sub %5, %6
%8 = eq %4, 0:i32
blockpc %0 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %0 1 %10 1
%11:i32 = var
%12 = eq %11, 0:i32
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15 = phi %1, 5:i32, 0:i32
%16 = phi %0, %15, 5:i32
%17 = eq %16, 5:i32
pc %17 1
infer %7


; start LHS (in $29)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = phi %1, %2, 0:i32
%4:i32 = var
%5 = phi %0, %3, %4
%6:i32 = var
%7 = sub %5, %6
%8:i32 = var
%9 = ult %7, %8
%10 = eq %4, 0:i32
blockpc %0 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %0 1 %12 1
%13:i32 = var
%14 = eq %13, 0:i32
blockpc %1 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %1 1 %16 1
%17 = phi %1, 5:i32, 0:i32
%18 = phi %0, %17, 5:i32
%19 = eq %18, 5:i32
pc %19 1
infer %9


; start LHS (in $29)
%0:i32 = var
%1 = add %0, 36:i32
%2 = block 2
%3:i32 = var
%4 = eq %3, 0:i32
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7 = block 2
%8:i32 = var
%9 = eq %8, 0:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12:i32 = var
%13 = phi %7, %12, 0:i32
%14 = phi %2, %13, %3
%15:i32 = var
%16 = sub %14, %15
%17:i32 = var
%18 = ult %16, %17
%19 = phi %7, 5:i32, 0:i32
%20 = phi %2, %19, 5:i32
%21 = eq %20, 5:i32
pc %18 1
pc %21 1
infer %1


; start LHS (in $29)
%0:i32 = var
%1 = and %0, 3:i32
%2 = block 2
%3:i32 = var
%4 = eq %3, 0:i32
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7 = block 2
%8:i32 = var
%9 = eq %8, 0:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12:i32 = var
%13 = phi %7, %12, 0:i32
%14 = phi %2, %13, %3
%15:i32 = var
%16 = sub %14, %15
%17:i32 = var
%18 = ult %16, %17
%19 = phi %7, 5:i32, 0:i32
%20 = phi %2, %19, 5:i32
%21 = eq %20, 5:i32
pc %18 1
pc %21 1
infer %1


; start LHS (in $29)
%0:i32 = var
%1 = and %0, 3:i32
%2 = add %1, 10:i32
%3 = block 2
%4:i32 = var
%5 = eq %4, 0:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8 = block 2
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13:i32 = var
%14 = phi %8, %13, 0:i32
%15 = phi %3, %14, %4
%16:i32 = var
%17 = sub %15, %16
%18:i32 = var
%19 = ult %17, %18
%20 = phi %8, 5:i32, 0:i32
%21 = phi %3, %20, 5:i32
%22 = eq %21, 5:i32
pc %19 1
pc %22 1
infer %2


; start LHS (in $29)
%0:i32 = var
%1 = add %0, 75:i32
%2 = block 2
%3:i32 = var
%4 = eq %3, 0:i32
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7 = block 2
%8:i32 = var
%9 = eq %8, 0:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = phi %7, 5:i32, 0:i32
%13 = phi %2, %12, 5:i32
%14 = eq %13, 5:i32
pc %14 1
infer %1


; start LHS (in $29)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = block 2
%3:i32 = var
%4 = eq %3, 0:i32
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7 = block 2
%8:i32 = var
%9 = eq %8, 0:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = phi %7, 5:i32, 0:i32
%13 = phi %2, %12, 5:i32
%14 = eq %13, 5:i32
pc %14 1
infer %1


; start LHS (in $29)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = block 2
%4:i32 = var
%5 = eq %4, 0:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8 = block 2
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13 = phi %8, 5:i32, 0:i32
%14 = phi %3, %13, 5:i32
%15 = eq %14, 5:i32
pc %15 1
infer %2


; start LHS (in $29)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = slt %2, 0:i32
%4 = block 2
%5:i32 = var
%6 = eq %5, 0:i32
blockpc %4 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1
%9 = block 2
%10:i32 = var
%11 = eq %10, 0:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = phi %9, 5:i32, 0:i32
%15 = phi %4, %14, 5:i32
%16 = eq %15, 5:i32
pc %16 1
infer %3


; start LHS (in $29)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3:i32 = var
%4 = eq %3, 0:i32
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7 = block 2
%8:i32 = var
%9 = eq %8, 0:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = phi %7, 5:i32, 0:i32
%13 = phi %2, %12, 5:i32
%14 = eq %13, 5:i32
pc %14 1
infer %1


; start LHS (in $29)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = slt %2, 0:i32
%4:i32 = zext %3
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = or %4, %7
%9 = block 2
%10:i32 = var
%11 = eq %10, 0:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = block 2
%15:i32 = var
%16 = eq %15, 0:i32
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19 = phi %14, 5:i32, 0:i32
%20 = phi %9, %19, 5:i32
%21 = eq %20, 5:i32
pc %21 1
infer %8


; start LHS (in $29)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = slt %4, 0:i32
%6:i32 = zext %5
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = or %6, %9
%11 = eq %10, 0:i32
%12 = block 2
%13:i32 = var
%14 = eq %13, 0:i32
blockpc %12 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1
%17 = block 2
%18:i32 = var
%19 = eq %18, 0:i32
blockpc %17 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %17 1 %21 1
%22 = phi %17, 5:i32, 0:i32
%23 = phi %12, %22, 5:i32
%24 = eq %23, 5:i32
pc %11 1
pc %24 1
infer %1


; start LHS (in $29)
%0:i32 = var
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3 = add %0, %2
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = slt %6, 0:i32
%8:i32 = zext %7
%9:i32 = var
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = or %8, %11
%13 = eq %12, 0:i32
%14 = block 2
%15:i32 = var
%16 = eq %15, 0:i32
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19 = block 2
%20:i32 = var
%21 = eq %20, 0:i32
blockpc %19 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %19 1 %23 1
%24 = phi %19, 5:i32, 0:i32
%25 = phi %14, %24, 5:i32
%26 = eq %25, 5:i32
pc %13 1
pc %26 1
infer %3


; start LHS (in $29)
%0:i32 = var
%1 = shl %0, 24:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = slt %4, 0:i32
%6:i32 = zext %5
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = or %6, %9
%11 = eq %10, 0:i32
%12 = block 2
%13:i32 = var
%14 = eq %13, 0:i32
blockpc %12 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1
%17 = block 2
%18:i32 = var
%19 = eq %18, 0:i32
blockpc %17 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %17 1 %21 1
%22 = phi %17, 5:i32, 0:i32
%23 = phi %12, %22, 5:i32
%24 = eq %23, 5:i32
pc %11 1
pc %24 1
infer %1


; start LHS (in $29)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = slt %5, 0:i32
%7:i32 = zext %6
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = or %7, %10
%12 = eq %11, 0:i32
%13 = block 2
%14:i32 = var
%15 = eq %14, 0:i32
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18 = block 2
%19:i32 = var
%20 = eq %19, 0:i32
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23 = phi %18, 5:i32, 0:i32
%24 = phi %13, %23, 5:i32
%25 = eq %24, 5:i32
pc %12 1
pc %25 1
infer %2


; start LHS (in $29)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = eq %2, 10:i32
%4:i32 = var
%5 = shl %4, 24:i32
%6 = ashr %5, 24:i32
%7 = slt %6, 0:i32
%8:i32 = zext %7
%9:i32 = var
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = or %8, %11
%13 = eq %12, 0:i32
%14 = block 2
%15:i32 = var
%16 = eq %15, 0:i32
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19 = block 2
%20:i32 = var
%21 = eq %20, 0:i32
blockpc %19 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %19 1 %23 1
%24 = phi %19, 5:i32, 0:i32
%25 = phi %14, %24, 5:i32
%26 = eq %25, 5:i32
pc %13 1
pc %26 1
infer %3


; start LHS (in $29)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2 = eq %1, 0:i32
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = slt %5, 0:i32
%7:i32 = zext %6
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = or %7, %10
%12 = eq %11, 0:i32
%13 = block 2
%14:i32 = var
%15 = eq %14, 0:i32
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18 = block 2
%19:i32 = var
%20 = eq %19, 0:i32
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23 = phi %18, 5:i32, 0:i32
%24 = phi %13, %23, 5:i32
%25 = eq %24, 5:i32
pc %12 1
pc %25 1
infer %2


; start LHS (in $29)
%0:i32 = var
%1 = add %0, 36:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = slt %4, 0:i32
%6:i32 = zext %5
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = or %6, %9
%11 = eq %10, 0:i32
%12 = block 2
%13:i32 = var
%14 = eq %13, 0:i32
blockpc %12 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1
%17 = block 2
%18:i32 = var
%19 = eq %18, 0:i32
blockpc %17 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %17 1 %21 1
%22 = phi %17, 5:i32, 0:i32
%23 = phi %12, %22, 5:i32
%24 = eq %23, 5:i32
pc %11 1
pc %24 1
infer %1


; start LHS (in $29)
%0:i32 = var
%1 = and %0, 3:i32
%2:i32 = var
%3 = shl %2, 24:i32
%4 = ashr %3, 24:i32
%5 = slt %4, 0:i32
%6:i32 = zext %5
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = or %6, %9
%11 = eq %10, 0:i32
%12 = block 2
%13:i32 = var
%14 = eq %13, 0:i32
blockpc %12 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1
%17 = block 2
%18:i32 = var
%19 = eq %18, 0:i32
blockpc %17 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %17 1 %21 1
%22 = phi %17, 5:i32, 0:i32
%23 = phi %12, %22, 5:i32
%24 = eq %23, 5:i32
pc %11 1
pc %24 1
infer %1


; start LHS (in $29)
%0:i32 = var
%1 = and %0, 3:i32
%2 = add %1, 10:i32
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = slt %5, 0:i32
%7:i32 = zext %6
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = or %7, %10
%12 = eq %11, 0:i32
%13 = block 2
%14:i32 = var
%15 = eq %14, 0:i32
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18 = block 2
%19:i32 = var
%20 = eq %19, 0:i32
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23 = phi %18, 5:i32, 0:i32
%24 = phi %13, %23, 5:i32
%25 = eq %24, 5:i32
pc %12 1
pc %25 1
infer %2


; start LHS (in $29)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = slt %5, 0:i32
%7:i32 = zext %6
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = or %7, %10
%12 = eq %11, 0:i32
%13 = block 2
%14:i32 = var
%15 = eq %14, 0:i32
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18 = block 2
%19:i32 = var
%20 = eq %19, 0:i32
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23 = phi %18, 5:i32, 0:i32
%24 = phi %13, %23, 5:i32
%25 = eq %24, 5:i32
pc %12 1
pc %25 1
infer %2


; start LHS (in $29)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = slt %5, 0:i32
%7:i32 = zext %6
%8 = eq %0, 0:i32
%9:i32 = zext %8
%10 = or %7, %9
%11 = eq %10, 0:i32
%12 = block 2
%13:i32 = var
%14 = eq %13, 0:i32
blockpc %12 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1
%17 = block 2
%18:i32 = var
%19 = eq %18, 0:i32
blockpc %17 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %17 1 %21 1
%22 = phi %17, 5:i32, 0:i32
%23 = phi %12, %22, 5:i32
%24 = eq %23, 5:i32
pc %11 1
pc %24 1
infer %2


; start LHS (in $29)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3:i32 = var
%4 = shl %3, 24:i32
%5 = ashr %4, 24:i32
%6 = slt %5, 0:i32
%7:i32 = zext %6
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = or %7, %10
%12 = eq %11, 0:i32
%13 = block 2
%14:i32 = var
%15 = eq %14, 0:i32
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18 = block 2
%19:i32 = var
%20 = eq %19, 0:i32
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23 = phi %18, 5:i32, 0:i32
%24 = phi %13, %23, 5:i32
%25 = eq %24, 5:i32
pc %12 1
pc %25 1
infer %2


; start LHS (in $29)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = sub %4, %5 (hasExternalUses)
%7 = phi %3, %4, %6
%8 = phi %1, %2, %7
%9 = add %0, %8
%10:i32 = var
%11 = shl %10, 24:i32
%12 = ashr %11, 24:i32
%13 = slt %12, 0:i32
%14:i32 = zext %13
%15 = eq %4, 0:i32
%16:i32 = zext %15
%17 = or %14, %16
%18 = ne %17, 0:i32
blockpc %3 0 %18 1
%19 = eq %17, 0:i32
blockpc %3 1 %19 1
%20 = block 2
%21:i32 = var
%22 = eq %21, 0:i32
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = phi %25, 5:i32, 0:i32
%29 = phi %20, %28, 5:i32
%30 = eq %29, 5:i32
pc %30 1
infer %9


; start LHS (in $29)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = phi %1, 0:i32, %2
%4 = phi %0, 0:i32, %3
%5:i32 = var
%6:i32 = var
%7 = sub %6, %2 (hasExternalUses)
%8 = phi %1, %6, %7
%9 = phi %0, %5, %8
%10 = add %4, %9
%11:i32 = var
%12 = shl %11, 24:i32
%13 = ashr %12, 24:i32
%14 = slt %13, 0:i32
%15:i32 = zext %14
%16 = eq %6, 0:i32
%17:i32 = zext %16
%18 = or %15, %17
%19 = ne %18, 0:i32
blockpc %1 0 %19 1
%20 = eq %18, 0:i32
blockpc %1 1 %20 1
%21 = block 2
%22:i32 = var
%23 = eq %22, 0:i32
blockpc %21 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %21 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = phi %26, 5:i32, 0:i32
%30 = phi %21, %29, 5:i32
%31 = eq %30, 5:i32
pc %31 1
infer %10


; function: $30

; start LHS (in $30)
%0:i32 = var
%1 = add %0, 74:i32
infer %1


; start LHS (in $30)
%0:i32 = var
%1 = shl %0, 24:i32
infer %1


; start LHS (in $30)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
infer %2


; start LHS (in $30)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32 (hasExternalUses)
%3 = add %2, 255:i32
infer %3


; start LHS (in $30)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, 255:i32
%4 = or %3, %2
infer %4


; start LHS (in $30)
%0:i32 = var
%1 = shl %0, 24:i32
%2 = ashr %1, 24:i32
%3 = add %2, 255:i32
%4 = or %3, %2
%5 = and %4, 255:i32
infer %5


; start LHS (in $30)
%0:i32 = var
%1 = and %0, 8:i32
infer %1


; start LHS (in $30)
%0:i32 = var
%1 = and %0, 8:i32
%2 = eq %1, 0:i32
infer %2


; start LHS (in $30)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = and %2, 8:i32
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $30)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = and %2, 8:i32
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $30)
%0:i32 = var
%1 = add %0, 44:i32
%2:i32 = var
%3 = and %2, 8:i32
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $30)
%0:i32 = var
%1 = add %0, 28:i32
%2:i32 = var
%3 = and %2, 8:i32
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $30)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = and %2, 8:i32
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $30)
%0:i32 = var
%1 = add %0, 48:i32
%2:i32 = var
%3 = and %2, 8:i32
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $30)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = and %2, 8:i32
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $30)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3:i32 = var
%4 = and %3, 8:i32
%5 = eq %4, 0:i32
pc %5 1
infer %2


; start LHS (in $30)
%0:i32 = var
%1 = or %0, 32:i32
%2 = and %0, 8:i32
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; function: $31

; function: $32

; start LHS (in $32)
%0:i64 = var
%1 = lshr %0, 52:i64
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = and %0, 65535:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = and %0, 65535:i32
%2 = and %1, 2047:i32
infer %2


; start LHS (in $32)
%0:i32 = var
%1 = and %0, 65535:i32
%2 = and %1, 2047:i32
%3 = shl %2, 16:i32
infer %3


; start LHS (in $32)
%0:i32 = var
%1 = and %0, 65535:i32
%2 = and %1, 2047:i32
%3 = shl %2, 16:i32
%4 = ashr %3, 16:i32
infer %4


; start LHS (in $32)
%0:i32 = var
%1 = and %0, 65535:i32
%2 = and %1, 2047:i32
%3 = shl %2, 16:i32
%4 = ashr %3, 16:i32
%5 = sub %4, 0:i32
infer %5


; start LHS (in $32)
%0:i32 = var
%1 = add %0, -64:i32
%2:i32 = var
%3 = ne %2, 0:i32
pc %3 1
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = and %0, 2047:i32
infer %1


; start LHS (in $32)
%0:i32 = var
%1 = and %0, 2047:i32
%2 = add %1, -1022:i32
infer %2


; start LHS (in $32)
%0:i64 = var
%1 = and %0, -9218868437227405313:i64
infer %1


; start LHS (in $32)
%0:i64 = var
%1 = and %0, -9218868437227405313:i64
%2 = or %1, 4602678819172646912:i64
infer %2


; function: $33

; function: $34

; function: $35

; start LHS (in $35)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
pc %3 1
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
pc %3 1
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = add %0, 76:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
pc %5 1
pc %7 1
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = slt -1:i32, %0
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
pc %5 1
pc %7 1
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
pc %5 1
pc %7 1
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = add %0, 28:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
pc %5 1
pc %7 1
infer %1


; start LHS (in $35)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = eq %7, 0:i32
pc %6 1
pc %8 1
infer %2


; start LHS (in $35)
%0:i32 = var
%1:i32 = var
%2 = or %0, %1
%3:i32 = var
%4:i32 = var
%5 = ult %3, %4
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = eq %10, 0:i32
pc %5 1
pc %9 1
pc %11 1
infer %2


; start LHS (in $35)
%0 = block 2
%1:i32 = var
%2 = phi %0, %1, 0:i32
%3 = eq %2, 0:i32
%4:i32 = var
%5 = slt -1:i32, %4
blockpc %0 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %0 1 %7 1
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13 = eq %12, 0:i32
pc %11 1
pc %13 1
infer %3


; start LHS (in $35)
%0 = block 2
%1:i32 = var
%2 = phi %0, %1, 0:i32
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = slt -1:i32, %6
blockpc %0 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %0 1 %9 1
%10:i32 = var
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14:i32 = var
%15 = eq %14, 0:i32
pc %13 1
pc %15 1
infer %5


; start LHS (in $35)
%0:i32 = var
%1 = add %0, 56:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
pc %5 1
pc %7 1
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
pc %5 1
pc %7 1
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = add %0, 76:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = slt -1:i32, %0
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $35)
%0:i32 = var
%1 = slt -1:i32, %0
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %7 1
infer %3


; start LHS (in $35)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; function: $36

; start LHS (in $36)
%0:i32 = var
%1 = add %0, 20:i32
infer %1


; start LHS (in $36)
%0:i32 = var
%1 = add %0, 28:i32
infer %1


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
infer %2


; start LHS (in $36)
%0:i32 = var
%1 = add %0, 36:i32
%2:i32 = var
%3:i32 = var
%4 = ult %2, %3
pc %4 1
infer %1


; start LHS (in $36)
%0:i32 = var
%1 = and %0, 3:i32
%2:i32 = var
%3:i32 = var
%4 = ult %2, %3
pc %4 1
infer %1


; start LHS (in $36)
%0:i32 = var
%1 = and %0, 3:i32
%2 = add %1, 10:i32
%3:i32 = var
%4:i32 = var
%5 = ult %3, %4
pc %5 1
infer %2


; start LHS (in $36)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3:i32 = var
%4 = ult %2, %3
pc %4 1
infer %1


; start LHS (in $36)
%0 = block 2
%1 = block 2
%2 = phi %1, 0:i32, 3:i32
%3 = phi %0, %2, 3:i32
%4 = eq %3, 3:i32
%5:i32 = var
%6:i32 = var
%7 = ult %5, %6
blockpc %0 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %0 1 %9 1
%10:i32 = var
%11 = eq %10, 0:i32
blockpc %1 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %1 1 %13 1
infer %4


; start LHS (in $36)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = ult %3, %4
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8 = block 2
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13 = phi %8, 0:i32, 3:i32
%14 = phi %2, %13, 3:i32
%15 = eq %14, 3:i32
pc %15 1
infer %1


; start LHS (in $36)
%0:i32 = var
%1 = add %0, 8:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = ult %3, %4
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8 = block 2
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13 = phi %8, 0:i32, 3:i32
%14 = phi %2, %13, 3:i32
%15 = eq %14, 3:i32
pc %15 1
infer %1


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = ult %4, %5
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10:i32 = var
%11 = eq %10, 0:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = phi %9, 0:i32, 3:i32
%15 = phi %3, %14, 3:i32
%16 = eq %15, 3:i32
pc %16 1
infer %2


; start LHS (in $36)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3 = ult %0, %1
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = ult %5, %6
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = block 2
%11:i32 = var
%12 = eq %11, 0:i32
blockpc %10 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %10 1 %14 1
%15 = phi %10, 0:i32, 3:i32
%16 = phi %4, %15, 3:i32
%17 = eq %16, 3:i32
pc %3 1
pc %17 1
infer %2


; start LHS (in $36)
%0:i32 = var
%1 = add %0, 40:i32
%2:i32 = var
%3:i32 = var
%4 = ult %2, %3
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = ult %6, %7
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = block 2
%12:i32 = var
%13 = eq %12, 0:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16 = phi %11, 0:i32, 3:i32
%17 = phi %5, %16, 3:i32
%18 = eq %17, 3:i32
pc %4 1
pc %18 1
infer %1


; start LHS (in $36)
%0:i32 = var
%1 = and %0, 3:i32
%2:i32 = var
%3:i32 = var
%4 = ult %2, %3
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = ult %6, %7
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = block 2
%12:i32 = var
%13 = eq %12, 0:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16 = phi %11, 0:i32, 3:i32
%17 = phi %5, %16, 3:i32
%18 = eq %17, 3:i32
pc %4 1
pc %18 1
infer %1


; start LHS (in $36)
%0:i32 = var
%1 = and %0, 3:i32
%2 = add %1, 14:i32
%3:i32 = var
%4:i32 = var
%5 = ult %3, %4
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = ult %7, %8
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13:i32 = var
%14 = eq %13, 0:i32
blockpc %12 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1
%17 = phi %12, 0:i32, 3:i32
%18 = phi %6, %17, 3:i32
%19 = eq %18, 3:i32
pc %5 1
pc %19 1
infer %2


; start LHS (in $36)
%0:i32 = var
%1 = add %0, 16:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = ult %3, %4
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8 = block 2
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13 = phi %8, 0:i32, 3:i32
%14 = phi %2, %13, 3:i32
%15 = eq %14, 3:i32
pc %15 1
infer %1


; function: $37

; start LHS (in $37)
%0:i32 = var
%1 = add %0, 16:i32
infer %1


; start LHS (in $37)
%0:i32 = var
%1:i32 = var
%2 = sle %0, %1
infer %2


; function: $38

; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = sle %0, %1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = ult %0, 245:i32
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32
%2 = ult %0, 245:i32
pc %2 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32
%2 = and %1, -8:i32
%3 = ult %0, 245:i32
pc %3 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = ult %0, 11:i32
%2 = ult %0, 245:i32
pc %2 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = add %1, 11:i32
%3 = and %2, -8:i32 (hasExternalUses)
%4 = phi %0, 16:i32, %3
%5 = lshr %4, 3:i32
%6 = ult %1, 11:i32
blockpc %0 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %0 1 %8 1
%9 = ult %1, 245:i32
pc %9 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6
%8 = ult %2, 11:i32
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
%11 = ult %2, 245:i32
pc %11 1
infer %7


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = and %7, 3:i32
%9 = ult %2, 11:i32
blockpc %1 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %1 1 %11 1
%12 = ult %2, 245:i32
pc %12 1
infer %8


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = and %7, 3:i32
%9 = eq %8, 0:i32
%10 = ult %2, 11:i32
blockpc %1 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %1 1 %12 1
%13 = ult %2, 245:i32
pc %13 1
infer %9


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = and %7, 3:i32
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12 = ult %2, 11:i32
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15 = ult %2, 245:i32
pc %15 1
infer %11


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = and %7, 1:i32
%9 = ult %2, 11:i32
blockpc %1 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %1 1 %11 1
%12 = and %7, 3:i32
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16 = ult %2, 245:i32
pc %15 1
pc %16 1
infer %8


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = and %7, 1:i32
%9 = xor %8, 1:i32
%10 = ult %2, 11:i32
blockpc %1 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %1 1 %12 1
%13 = and %7, 3:i32
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17 = ult %2, 245:i32
pc %16 1
pc %17 1
infer %9


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = and %7, 1:i32
%9 = xor %8, 1:i32
%10 = add %9, %6
%11 = ult %2, 11:i32
blockpc %1 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %1 1 %13 1
%14 = and %7, 3:i32
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18 = ult %2, 245:i32
pc %17 1
pc %18 1
infer %10


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = and %7, 1:i32
%9 = xor %8, 1:i32
%10 = add %9, %6 (hasExternalUses)
%11 = shl %10, 1:i32
%12 = ult %2, 11:i32
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15 = and %7, 3:i32
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19 = ult %2, 245:i32
pc %18 1
pc %19 1
infer %11


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = phi %1, 16:i32, %3
%5 = lshr %4, 3:i32 (hasExternalUses)
%6 = lshr %0, %5 (hasExternalUses)
%7 = and %6, 1:i32
%8 = xor %7, 1:i32
%9 = add %8, %5 (hasExternalUses)
%10 = shl %9, 1:i32
%11 = shl %10, 2:i32
%12:i32 = var
%13 = ult %12, 11:i32
blockpc %1 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %1 1 %15 1
%16 = and %6, 3:i32
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = ult %12, 245:i32
pc %19 1
pc %20 1
infer %11


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, 16:i32, %2
%4 = lshr %3, 3:i32 (hasExternalUses)
%5 = lshr %0, %4 (hasExternalUses)
%6 = and %5, 1:i32
%7 = xor %6, 1:i32
%8 = add %7, %4 (hasExternalUses)
%9 = shl %8, 1:i32
%10 = shl %9, 2:i32
%11 = add 3144:i32, %10
%12:i32 = var
%13 = ult %12, 11:i32
blockpc %1 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %1 1 %15 1
%16 = and %5, 3:i32
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = ult %12, 245:i32
pc %19 1
pc %20 1
infer %11


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, 16:i32, %2
%4 = lshr %3, 3:i32 (hasExternalUses)
%5 = lshr %0, %4 (hasExternalUses)
%6 = and %5, 1:i32
%7 = xor %6, 1:i32
%8 = add %7, %4 (hasExternalUses)
%9 = shl %8, 1:i32
%10 = shl %9, 2:i32
%11 = add 3144:i32, %10 (hasExternalUses)
%12 = add %11, 8:i32
%13:i32 = var
%14 = ult %13, 11:i32
blockpc %1 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %1 1 %16 1
%17 = and %5, 3:i32
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21 = ult %13, 245:i32
pc %20 1
pc %21 1
infer %12


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = ult %4, 11:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8 = add %4, 11:i32
%9 = and %8, -8:i32
%10 = phi %3, 16:i32, %9
%11 = lshr %10, 3:i32
%12 = lshr %2, %11
%13 = and %12, 3:i32
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17 = ult %4, 245:i32
pc %16 1
pc %17 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = phi %2, 16:i32, %3
%5 = lshr %4, 3:i32 (hasExternalUses)
%6 = lshr %1, %5 (hasExternalUses)
%7 = and %6, 1:i32
%8 = xor %7, 1:i32
%9 = add %8, %5 (hasExternalUses)
%10 = shl %9, 1:i32
%11 = shl %10, 2:i32
%12 = add 3144:i32, %11 (hasExternalUses)
%13 = eq %0, %12
%14:i32 = var
%15 = ult %14, 11:i32
blockpc %2 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %2 1 %17 1
%18 = and %6, 3:i32
%19 = eq %18, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = ult %14, 245:i32
pc %21 1
pc %22 1
infer %13


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = and %7, 1:i32
%9 = xor %8, 1:i32
%10 = add %9, %6 (hasExternalUses)
%11 = shl 1:i32, %10
%12 = ult %2, 11:i32
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15:i32 = var
%16 = shl %10, 1:i32
%17 = shl %16, 2:i32
%18 = add 3144:i32, %17
%19 = eq %15, %18
%20 = and %7, 3:i32
%21 = eq %20, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24 = ult %2, 245:i32
pc %19 1
pc %23 1
pc %24 1
infer %11


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = phi %1, 16:i32, %3
%5 = lshr %4, 3:i32 (hasExternalUses)
%6 = lshr %0, %5 (hasExternalUses)
%7 = and %6, 1:i32
%8 = xor %7, 1:i32
%9 = add %8, %5 (hasExternalUses)
%10 = shl 1:i32, %9
%11 = xor %10, -1:i32
%12:i32 = var
%13 = ult %12, 11:i32
blockpc %1 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %1 1 %15 1
%16:i32 = var
%17 = shl %9, 1:i32
%18 = shl %17, 2:i32
%19 = add 3144:i32, %18
%20 = eq %16, %19
%21 = and %6, 3:i32
%22 = eq %21, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = ult %12, 245:i32
pc %20 1
pc %24 1
pc %25 1
infer %11


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, 16:i32, %2
%4 = lshr %3, 3:i32 (hasExternalUses)
%5 = lshr %0, %4 (hasExternalUses)
%6 = and %5, 1:i32
%7 = xor %6, 1:i32
%8 = add %7, %4 (hasExternalUses)
%9 = shl 1:i32, %8
%10 = xor %9, -1:i32
%11 = and %0, %10
%12:i32 = var
%13 = ult %12, 11:i32
blockpc %1 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %1 1 %15 1
%16:i32 = var
%17 = shl %8, 1:i32
%18 = shl %17, 2:i32
%19 = add 3144:i32, %18
%20 = eq %16, %19
%21 = and %5, 3:i32
%22 = eq %21, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = ult %12, 245:i32
pc %20 1
pc %24 1
pc %25 1
infer %11


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = and %2, 1:i32
%4 = xor %3, 1:i32
%5 = block 2
%6:i32 = var
blockpc %5 0 %6 1
%7:i32 = var
blockpc %5 1 %7 1
%8:i32 = var
%9 = phi %5, 16:i32, %8
%10 = lshr %9, 3:i32
%11 = add %4, %10
%12 = shl %11, 1:i32
%13 = shl %12, 2:i32
%14 = add 3144:i32, %13
%15 = eq %0, %14
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18 = and %2, 3:i32
%19 = eq %18, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22:i32 = var
%23 = ult %22, 245:i32
pc %17 1
pc %21 1
pc %23 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = and %7, 1:i32
%9 = xor %8, 1:i32
%10 = add %9, %6 (hasExternalUses)
%11 = shl %10, 3:i32
%12 = ult %2, 11:i32
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15 = and %7, 3:i32
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19 = ult %2, 245:i32
pc %18 1
pc %19 1
infer %11


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = ult %4, 11:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8 = add %4, 11:i32
%9 = and %8, -8:i32
%10 = phi %3, 16:i32, %9
%11 = lshr %10, 3:i32
%12 = lshr %2, %11
%13 = and %12, 3:i32
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17 = ult %4, 245:i32
pc %16 1
pc %17 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = phi %1, 16:i32, %3
%5 = lshr %4, 3:i32 (hasExternalUses)
%6 = lshr %0, %5 (hasExternalUses)
%7 = and %6, 1:i32
%8 = xor %7, 1:i32
%9 = add %8, %5 (hasExternalUses)
%10 = shl %9, 3:i32 (hasExternalUses)
%11 = or %10, 3:i32
%12:i32 = var
%13 = ult %12, 11:i32
blockpc %1 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %1 1 %15 1
%16 = and %6, 3:i32
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = ult %12, 245:i32
pc %19 1
pc %20 1
infer %11


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %2, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %1, %6 (hasExternalUses)
%8 = and %7, 1:i32
%9 = xor %8, 1:i32
%10 = add %9, %6 (hasExternalUses)
%11 = shl %10, 3:i32 (hasExternalUses)
%12 = add %0, %11
%13:i32 = var
%14 = ult %13, 11:i32
blockpc %2 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %2 1 %16 1
%17 = and %7, 3:i32
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21 = ult %13, 245:i32
pc %20 1
pc %21 1
infer %12


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = phi %2, 16:i32, %3
%5 = lshr %4, 3:i32 (hasExternalUses)
%6 = lshr %1, %5 (hasExternalUses)
%7 = and %6, 1:i32
%8 = xor %7, 1:i32
%9 = add %8, %5 (hasExternalUses)
%10 = shl %9, 3:i32 (hasExternalUses)
%11 = add %0, %10
%12 = add %11, 4:i32
%13:i32 = var
%14 = ult %13, 11:i32
blockpc %2 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %2 1 %16 1
%17 = and %6, 3:i32
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21 = ult %13, 245:i32
pc %20 1
pc %21 1
infer %12


; start LHS (in $38)
%0:i32 = var
%1 = or %0, 1:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = ult %4, 11:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8 = add %4, 11:i32
%9 = and %8, -8:i32
%10 = phi %3, 16:i32, %9
%11 = lshr %10, 3:i32
%12 = lshr %2, %11
%13 = and %12, 3:i32
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17 = ult %4, 245:i32
pc %16 1
pc %17 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = ult %0, %5
%7 = ult %2, 11:i32
blockpc %1 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %1 1 %9 1
%10 = ult %2, 245:i32
pc %10 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = eq %7, 0:i32
%9 = ult %2, 11:i32
blockpc %1 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %1 1 %11 1
%12:i32 = var
%13 = ult %12, %5
%14 = ult %2, 245:i32
pc %13 1
pc %14 1
infer %8


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = ult %2, 11:i32
blockpc %1 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %1 1 %13 1
%14:i32 = var
%15 = ult %14, %5
%16 = ult %2, 245:i32
pc %15 1
pc %16 1
infer %10


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = add %1, 11:i32
%3 = and %2, -8:i32 (hasExternalUses)
%4 = phi %0, 16:i32, %3
%5 = lshr %4, 3:i32 (hasExternalUses)
%6 = shl 2:i32, %5
%7 = ult %1, 11:i32
blockpc %0 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %0 1 %9 1
%10:i32 = var
%11 = lshr %10, %5
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = ult %15, %4
%17 = ult %1, 245:i32
pc %14 1
pc %16 1
pc %17 1
infer %6


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = add %1, 11:i32
%3 = and %2, -8:i32 (hasExternalUses)
%4 = phi %0, 16:i32, %3
%5 = lshr %4, 3:i32 (hasExternalUses)
%6 = shl 2:i32, %5 (hasExternalUses)
%7 = sub 0:i32, %6
%8 = ult %1, 11:i32
blockpc %0 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %0 1 %10 1
%11:i32 = var
%12 = lshr %11, %5
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16:i32 = var
%17 = ult %16, %4
%18 = ult %1, 245:i32
pc %15 1
pc %17 1
pc %18 1
infer %7


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = shl %7, %6
%9 = ult %2, 11:i32
blockpc %1 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %1 1 %11 1
%12 = eq %7, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = ult %15, %5
%17 = ult %2, 245:i32
pc %14 1
pc %16 1
pc %17 1
infer %8


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = add %1, 11:i32
%3 = and %2, -8:i32 (hasExternalUses)
%4 = phi %0, 16:i32, %3
%5 = lshr %4, 3:i32 (hasExternalUses)
%6 = shl 2:i32, %5
%7 = sub 0:i32, %6
%8 = or %6, %7
%9 = ult %1, 11:i32
blockpc %0 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %0 1 %11 1
%12:i32 = var
%13 = lshr %12, %5
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17:i32 = var
%18 = ult %17, %4
%19 = ult %1, 245:i32
pc %16 1
pc %18 1
pc %19 1
infer %8


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = shl %7, %6
%9 = shl 2:i32, %6
%10 = sub 0:i32, %9
%11 = or %9, %10
%12 = and %8, %11
%13 = ult %2, 11:i32
blockpc %1 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %1 1 %15 1
%16 = eq %7, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = ult %19, %5
%21 = ult %2, 245:i32
pc %18 1
pc %20 1
pc %21 1
infer %12


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = shl %7, %6
%9 = shl 2:i32, %6
%10 = sub 0:i32, %9
%11 = or %9, %10
%12 = and %8, %11 (hasExternalUses)
%13 = sub 0:i32, %12
%14 = ult %2, 11:i32
blockpc %1 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %1 1 %16 1
%17 = eq %7, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = ult %20, %5
%22 = ult %2, 245:i32
pc %19 1
pc %21 1
pc %22 1
infer %13


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = shl %7, %6
%9 = shl 2:i32, %6
%10 = sub 0:i32, %9
%11 = or %9, %10
%12 = and %8, %11
%13 = sub 0:i32, %12
%14 = and %12, %13
%15 = ult %2, 11:i32
blockpc %1 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %1 1 %17 1
%18 = eq %7, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = ult %21, %5
%23 = ult %2, 245:i32
pc %20 1
pc %22 1
pc %23 1
infer %14


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = lshr %5, 3:i32 (hasExternalUses)
%7 = lshr %0, %6 (hasExternalUses)
%8 = shl %7, %6
%9 = shl 2:i32, %6
%10 = sub 0:i32, %9
%11 = or %9, %10
%12 = and %8, %11
%13 = sub 0:i32, %12
%14 = and %12, %13
%15 = add %14, -1:i32
%16 = ult %2, 11:i32
blockpc %1 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %1 1 %18 1
%19 = eq %7, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22:i32 = var
%23 = ult %22, %5
%24 = ult %2, 245:i32
pc %21 1
pc %23 1
pc %24 1
infer %15


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = phi %1, 16:i32, %3
%5 = lshr %4, 3:i32 (hasExternalUses)
%6 = lshr %0, %5 (hasExternalUses)
%7 = shl %6, %5
%8 = shl 2:i32, %5
%9 = sub 0:i32, %8
%10 = or %8, %9
%11 = and %7, %10
%12 = sub 0:i32, %11
%13 = and %11, %12
%14 = add %13, -1:i32 (hasExternalUses)
%15 = lshr %14, 12:i32
%16:i32 = var
%17 = ult %16, 11:i32
blockpc %1 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %1 1 %19 1
%20 = eq %6, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = ult %23, %4
%25 = ult %16, 245:i32
pc %22 1
pc %24 1
pc %25 1
infer %15


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, 16:i32, %2
%4 = lshr %3, 3:i32 (hasExternalUses)
%5 = lshr %0, %4 (hasExternalUses)
%6 = shl %5, %4
%7 = shl 2:i32, %4
%8 = sub 0:i32, %7
%9 = or %7, %8
%10 = and %6, %9
%11 = sub 0:i32, %10
%12 = and %10, %11
%13 = add %12, -1:i32 (hasExternalUses)
%14 = lshr %13, 12:i32
%15 = and %14, 16:i32
%16:i32 = var
%17 = ult %16, 11:i32
blockpc %1 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %1 1 %19 1
%20 = eq %5, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = ult %23, %3
%25 = ult %16, 245:i32
pc %22 1
pc %24 1
pc %25 1
infer %15


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = phi %1, 16:i32, %3
%5 = lshr %4, 3:i32 (hasExternalUses)
%6 = lshr %0, %5 (hasExternalUses)
%7 = shl %6, %5
%8 = shl 2:i32, %5
%9 = sub 0:i32, %8
%10 = or %8, %9
%11 = and %7, %10
%12 = sub 0:i32, %11
%13 = and %11, %12
%14 = add %13, -1:i32
%15 = lshr %14, 12:i32
%16 = and %15, 16:i32 (hasExternalUses)
%17 = lshr %14, %16
%18:i32 = var
%19 = ult %18, 11:i32
blockpc %1 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %1 1 %21 1
%22 = eq %6, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25:i32 = var
%26 = ult %25, %4
%27 = ult %18, 245:i32
pc %24 1
pc %26 1
pc %27 1
infer %17


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, 16:i32, %2
%4 = lshr %3, 3:i32 (hasExternalUses)
%5 = lshr %0, %4 (hasExternalUses)
%6 = shl %5, %4
%7 = shl 2:i32, %4
%8 = sub 0:i32, %7
%9 = or %7, %8
%10 = and %6, %9
%11 = sub 0:i32, %10
%12 = and %10, %11
%13 = add %12, -1:i32
%14 = lshr %13, 12:i32
%15 = and %14, 16:i32 (hasExternalUses)
%16 = lshr %13, %15 (hasExternalUses)
%17 = lshr %16, 5:i32
%18:i32 = var
%19 = ult %18, 11:i32
blockpc %1 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %1 1 %21 1
%22 = eq %5, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25:i32 = var
%26 = ult %25, %3
%27 = ult %18, 245:i32
pc %24 1
pc %26 1
pc %27 1
infer %17


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, 16:i32, %2
%4 = lshr %3, 3:i32 (hasExternalUses)
%5 = lshr %0, %4 (hasExternalUses)
%6 = shl %5, %4
%7 = shl 2:i32, %4
%8 = sub 0:i32, %7
%9 = or %7, %8
%10 = and %6, %9
%11 = sub 0:i32, %10
%12 = and %10, %11
%13 = add %12, -1:i32
%14 = lshr %13, 12:i32
%15 = and %14, 16:i32 (hasExternalUses)
%16 = lshr %13, %15 (hasExternalUses)
%17 = lshr %16, 5:i32
%18 = and %17, 8:i32
%19:i32 = var
%20 = ult %19, 11:i32
blockpc %1 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %1 1 %22 1
%23 = eq %5, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27 = ult %26, %3
%28:i32 = var
pc %25 1
pc %27 1
pc %28 1
infer %18


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, 16:i32, %2
%4 = lshr %3, 3:i32 (hasExternalUses)
%5 = lshr %0, %4 (hasExternalUses)
%6 = shl %5, %4
%7 = shl 2:i32, %4
%8 = sub 0:i32, %7
%9 = or %7, %8
%10 = and %6, %9
%11 = sub 0:i32, %10
%12 = and %10, %11
%13 = add %12, -1:i32
%14 = lshr %13, 12:i32
%15 = and %14, 16:i32 (hasExternalUses)
%16 = lshr %13, %15
%17 = lshr %16, 5:i32
%18 = and %17, 8:i32 (hasExternalUses)
%19 = lshr %16, %18
%20:i32 = var
%21 = ult %20, 11:i32
blockpc %1 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %1 1 %23 1
%24 = eq %5, 0:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
%28 = ult %27, %3
%29:i32 = var
pc %26 1
pc %28 1
pc %29 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, 16:i32, %2
%4 = lshr %3, 3:i32 (hasExternalUses)
%5 = lshr %0, %4 (hasExternalUses)
%6 = shl %5, %4
%7 = shl 2:i32, %4
%8 = sub 0:i32, %7
%9 = or %7, %8
%10 = and %6, %9
%11 = sub 0:i32, %10
%12 = and %10, %11
%13 = add %12, -1:i32
%14 = lshr %13, 12:i32
%15 = and %14, 16:i32 (hasExternalUses)
%16 = lshr %13, %15
%17 = lshr %16, 5:i32
%18 = and %17, 8:i32 (hasExternalUses)
%19 = lshr %16, %18 (hasExternalUses)
%20 = lshr %19, 2:i32
%21:i32 = var
%22 = ult %21, 11:i32
blockpc %1 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %1 1 %24 1
%25 = eq %5, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
%29:i32 = var
pc %27 1
pc %28 1
pc %29 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = lshr %0, %1 (hasExternalUses)
%3 = shl %2, %1
%4 = shl 2:i32, %1
%5 = sub 0:i32, %4
%6 = or %4, %5
%7 = and %3, %6
%8 = sub 0:i32, %7
%9 = and %7, %8
%10 = add %9, -1:i32
%11 = lshr %10, 12:i32
%12 = and %11, 16:i32 (hasExternalUses)
%13 = lshr %10, %12
%14 = lshr %13, 5:i32
%15 = and %14, 8:i32 (hasExternalUses)
%16 = lshr %13, %15 (hasExternalUses)
%17 = lshr %16, 2:i32
%18 = and %17, 4:i32
%19 = eq %2, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22:i32 = var
%23 = block 2
%24:i32 = var
%25 = ult %24, 11:i32
blockpc %23 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %23 1 %27 1
%28:i32 = var
%29 = phi %23, 16:i32, %28
%30 = ult %22, %29
%31:i32 = var
pc %21 1
pc %30 1
pc %31 1
infer %18


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = lshr %0, %1 (hasExternalUses)
%3 = shl %2, %1
%4 = shl 2:i32, %1
%5 = sub 0:i32, %4
%6 = or %4, %5
%7 = and %3, %6
%8 = sub 0:i32, %7
%9 = and %7, %8
%10 = add %9, -1:i32
%11 = lshr %10, 12:i32
%12 = and %11, 16:i32
%13 = lshr %10, %12 (hasExternalUses)
%14 = lshr %13, 5:i32
%15 = and %14, 8:i32 (hasExternalUses)
%16 = or %15, %12
%17 = eq %2, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = block 2
%22:i32 = var
%23 = ult %22, 11:i32
blockpc %21 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %21 1 %25 1
%26 = add %22, 11:i32
%27 = and %26, -8:i32
%28 = phi %21, 16:i32, %27
%29 = ult %20, %28
%30:i32 = var
pc %19 1
pc %29 1
pc %30 1
infer %16


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, 16:i32, %2
%4 = lshr %3, 3:i32 (hasExternalUses)
%5 = lshr %0, %4 (hasExternalUses)
%6 = shl %5, %4
%7 = shl 2:i32, %4
%8 = sub 0:i32, %7
%9 = or %7, %8
%10 = and %6, %9
%11 = sub 0:i32, %10
%12 = and %10, %11
%13 = add %12, -1:i32
%14 = lshr %13, 12:i32
%15 = and %14, 16:i32 (hasExternalUses)
%16 = lshr %13, %15
%17 = lshr %16, 5:i32
%18 = and %17, 8:i32 (hasExternalUses)
%19 = lshr %16, %18
%20 = lshr %19, 2:i32
%21 = and %20, 4:i32 (hasExternalUses)
%22 = lshr %19, %21
%23:i32 = var
%24 = ult %23, 11:i32
blockpc %1 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %1 1 %26 1
%27 = eq %5, 0:i32
%28:i32 = zext %27
%29 = eq %28, 0:i32
%30:i32 = var
%31:i32 = var
pc %29 1
pc %30 1
pc %31 1
infer %22


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = lshr %0, %1 (hasExternalUses)
%3 = shl %2, %1
%4 = shl 2:i32, %1
%5 = sub 0:i32, %4
%6 = or %4, %5
%7 = and %3, %6
%8 = sub 0:i32, %7
%9 = and %7, %8
%10 = add %9, -1:i32
%11 = lshr %10, 12:i32
%12 = and %11, 16:i32 (hasExternalUses)
%13 = lshr %10, %12
%14 = lshr %13, 5:i32
%15 = and %14, 8:i32 (hasExternalUses)
%16 = lshr %13, %15
%17 = lshr %16, 2:i32
%18 = and %17, 4:i32 (hasExternalUses)
%19 = lshr %16, %18 (hasExternalUses)
%20 = lshr %19, 1:i32
%21 = eq %2, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24:i32 = var
%25 = block 2
%26:i32 = var
%27 = ult %26, 11:i32
blockpc %25 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %25 1 %29 1
%30:i32 = var
%31 = phi %25, 16:i32, %30
%32 = ult %24, %31
%33:i32 = var
pc %23 1
pc %32 1
pc %33 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3:i32 = var
%4:i32 = var
%5 = or %3, %4
%6 = and %2, %5
%7 = sub 0:i32, %6
%8 = and %6, %7
%9 = add %8, -1:i32
%10 = lshr %9, 12:i32
%11 = and %10, 16:i32 (hasExternalUses)
%12 = lshr %9, %11
%13 = lshr %12, 5:i32
%14 = and %13, 8:i32 (hasExternalUses)
%15 = lshr %12, %14
%16 = lshr %15, 2:i32
%17 = and %16, 4:i32 (hasExternalUses)
%18 = lshr %15, %17 (hasExternalUses)
%19 = lshr %18, 1:i32
%20 = and %19, 2:i32
%21 = eq %0, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24:i32 = var
%25 = block 2
%26:i32 = var
%27 = ult %26, 11:i32
blockpc %25 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %25 1 %29 1
%30:i32 = var
%31 = phi %25, 16:i32, %30
%32 = ult %24, %31
%33:i32 = var
pc %23 1
pc %32 1
pc %33 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3:i32 = var
%4:i32 = var
%5 = or %3, %4
%6 = and %2, %5
%7 = sub 0:i32, %6
%8 = and %6, %7
%9 = add %8, -1:i32
%10 = lshr %9, 12:i32
%11 = and %10, 16:i32
%12 = lshr %9, %11
%13 = lshr %12, 5:i32
%14 = and %13, 8:i32
%15 = or %14, %11
%16 = lshr %12, %14 (hasExternalUses)
%17 = lshr %16, 2:i32
%18 = and %17, 4:i32 (hasExternalUses)
%19 = or %15, %18
%20 = eq %0, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = block 2
%25:i32 = var
%26 = ult %25, 11:i32
blockpc %24 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %24 1 %28 1
%29:i32 = var
%30 = phi %24, 16:i32, %29
%31 = ult %23, %30
%32:i32 = var
pc %22 1
pc %31 1
pc %32 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = lshr %0, %1 (hasExternalUses)
%3 = shl %2, %1
%4 = shl 2:i32, %1
%5 = sub 0:i32, %4
%6 = or %4, %5
%7 = and %3, %6
%8 = sub 0:i32, %7
%9 = and %7, %8
%10 = add %9, -1:i32
%11 = lshr %10, 12:i32
%12 = and %11, 16:i32 (hasExternalUses)
%13 = lshr %10, %12
%14 = lshr %13, 5:i32
%15 = and %14, 8:i32 (hasExternalUses)
%16 = lshr %13, %15
%17 = lshr %16, 2:i32
%18 = and %17, 4:i32 (hasExternalUses)
%19 = lshr %16, %18
%20 = lshr %19, 1:i32
%21 = and %20, 2:i32 (hasExternalUses)
%22 = lshr %19, %21
%23 = eq %2, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = ult %28, 11:i32
blockpc %27 0 %29 1
%30:i32 = var
blockpc %27 1 %30 1
%31:i32 = var
%32 = phi %27, 16:i32, %31
%33 = ult %26, %32
%34:i32 = var
pc %25 1
pc %33 1
pc %34 1
infer %22


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3:i32 = var
%4:i32 = var
%5 = or %3, %4
%6 = and %2, %5
%7 = sub 0:i32, %6
%8 = and %6, %7
%9 = add %8, -1:i32
%10 = lshr %9, 12:i32
%11 = and %10, 16:i32 (hasExternalUses)
%12 = lshr %9, %11
%13 = lshr %12, 5:i32
%14 = and %13, 8:i32 (hasExternalUses)
%15 = lshr %12, %14
%16 = lshr %15, 2:i32
%17 = and %16, 4:i32 (hasExternalUses)
%18 = lshr %15, %17
%19 = lshr %18, 1:i32
%20 = and %19, 2:i32 (hasExternalUses)
%21 = lshr %18, %20 (hasExternalUses)
%22 = lshr %21, 1:i32
%23 = eq %0, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = ult %28, 11:i32
blockpc %27 0 %29 1
%30:i32 = var
blockpc %27 1 %30 1
%31:i32 = var
%32 = phi %27, 16:i32, %31
%33 = ult %26, %32
%34:i32 = var
pc %25 1
pc %33 1
pc %34 1
infer %22


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = and %0, %1
%3 = sub 0:i32, %2
%4 = and %2, %3
%5 = add %4, -1:i32
%6 = lshr %5, 12:i32
%7 = and %6, 16:i32 (hasExternalUses)
%8 = lshr %5, %7
%9 = lshr %8, 5:i32
%10 = and %9, 8:i32 (hasExternalUses)
%11 = lshr %8, %10
%12 = lshr %11, 2:i32
%13 = and %12, 4:i32 (hasExternalUses)
%14 = lshr %11, %13
%15 = lshr %14, 1:i32
%16 = and %15, 2:i32 (hasExternalUses)
%17 = lshr %14, %16 (hasExternalUses)
%18 = lshr %17, 1:i32
%19 = and %18, 1:i32
%20:i32 = var
%21 = block 2
%22:i32 = var
%23 = ult %22, 11:i32
blockpc %21 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %21 1 %25 1
%26 = add %22, 11:i32
%27 = and %26, -8:i32
%28 = phi %21, 16:i32, %27
%29 = lshr %28, 3:i32
%30 = lshr %20, %29
%31 = eq %30, 0:i32
%32:i32 = zext %31
%33 = eq %32, 0:i32
%34:i32 = var
%35:i32 = var
pc %33 1
pc %34 1
pc %35 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = and %0, %1
%3 = sub 0:i32, %2
%4 = and %2, %3
%5 = add %4, -1:i32
%6 = lshr %5, 12:i32
%7 = and %6, 16:i32
%8 = lshr %5, %7
%9 = lshr %8, 5:i32
%10 = and %9, 8:i32
%11 = or %10, %7
%12 = lshr %8, %10
%13 = lshr %12, 2:i32
%14 = and %13, 4:i32
%15 = or %11, %14
%16 = lshr %12, %14 (hasExternalUses)
%17 = lshr %16, 1:i32
%18 = and %17, 2:i32 (hasExternalUses)
%19 = or %15, %18
%20:i32 = var
%21 = block 2
%22:i32 = var
%23 = ult %22, 11:i32
blockpc %21 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %21 1 %25 1
%26 = add %22, 11:i32
%27 = and %26, -8:i32
%28 = phi %21, 16:i32, %27
%29 = lshr %28, 3:i32
%30 = lshr %20, %29
%31 = eq %30, 0:i32
%32:i32 = zext %31
%33 = eq %32, 0:i32
%34:i32 = var
%35:i32 = var
pc %33 1
pc %34 1
pc %35 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32
%9 = or %8, %5
%10 = lshr %6, %8
%11 = lshr %10, 2:i32
%12 = and %11, 4:i32
%13 = or %9, %12
%14 = lshr %10, %12
%15 = lshr %14, 1:i32
%16 = and %15, 2:i32
%17 = or %13, %16
%18 = lshr %14, %16 (hasExternalUses)
%19 = lshr %18, 1:i32
%20 = and %19, 1:i32 (hasExternalUses)
%21 = or %17, %20
%22:i32 = var
%23 = block 2
%24:i32 = var
%25 = ult %24, 11:i32
blockpc %23 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %23 1 %27 1
%28:i32 = var
%29 = phi %23, 16:i32, %28
%30 = lshr %29, 3:i32
%31 = lshr %22, %30
%32 = eq %31, 0:i32
%33:i32 = zext %32
%34 = eq %33, 0:i32
%35:i32 = var
%36:i32 = var
pc %34 1
pc %35 1
pc %36 1
infer %21


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3:i32 = var
%4:i32 = var
%5 = or %3, %4
%6 = and %2, %5
%7 = sub 0:i32, %6
%8 = and %6, %7
%9 = add %8, -1:i32
%10 = lshr %9, 12:i32
%11 = and %10, 16:i32 (hasExternalUses)
%12 = lshr %9, %11
%13 = lshr %12, 5:i32
%14 = and %13, 8:i32 (hasExternalUses)
%15 = lshr %12, %14
%16 = lshr %15, 2:i32
%17 = and %16, 4:i32 (hasExternalUses)
%18 = lshr %15, %17
%19 = lshr %18, 1:i32
%20 = and %19, 2:i32 (hasExternalUses)
%21 = lshr %18, %20
%22 = lshr %21, 1:i32
%23 = and %22, 1:i32 (hasExternalUses)
%24 = lshr %21, %23
%25 = eq %0, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33 = phi %29, 16:i32, %32
%34 = ult %28, %33
%35:i32 = var
pc %27 1
pc %34 1
pc %35 1
infer %24


; start LHS (in $38)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 16:i32
%4 = lshr %1, %3
%5 = lshr %4, 5:i32
%6 = and %5, 8:i32
%7 = or %6, %3
%8 = lshr %4, %6
%9 = lshr %8, 2:i32
%10 = and %9, 4:i32
%11 = or %7, %10
%12 = lshr %8, %10
%13 = lshr %12, 1:i32
%14 = and %13, 2:i32
%15 = or %11, %14
%16 = lshr %12, %14
%17 = lshr %16, 1:i32
%18 = and %17, 1:i32
%19 = or %15, %18
%20 = lshr %16, %18
%21 = add %19, %20
%22:i32 = var
%23 = block 2
%24:i32 = var
%25 = ult %24, 11:i32
blockpc %23 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %23 1 %27 1
%28:i32 = var
%29 = phi %23, 16:i32, %28
%30 = lshr %29, 3:i32
%31 = lshr %22, %30
%32 = eq %31, 0:i32
%33:i32 = zext %32
%34 = eq %33, 0:i32
%35:i32 = var
%36:i32 = var
pc %34 1
pc %35 1
pc %36 1
infer %21


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = lshr %0, %1
%3 = lshr %2, 5:i32
%4 = and %3, 8:i32
%5 = or %4, %1
%6 = lshr %2, %4
%7 = lshr %6, 2:i32
%8 = and %7, 4:i32
%9 = or %5, %8
%10 = lshr %6, %8
%11 = lshr %10, 1:i32
%12 = and %11, 2:i32
%13 = or %9, %12
%14 = lshr %10, %12
%15 = lshr %14, 1:i32
%16 = and %15, 1:i32
%17 = or %13, %16
%18 = lshr %14, %16
%19 = add %17, %18 (hasExternalUses)
%20 = shl %19, 1:i32
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = ult %23, 11:i32
blockpc %22 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %22 1 %26 1
%27 = add %23, 11:i32
%28 = and %27, -8:i32
%29 = phi %22, 16:i32, %28
%30 = lshr %29, 3:i32
%31 = lshr %21, %30
%32 = eq %31, 0:i32
%33:i32 = zext %32
%34 = eq %33, 0:i32
%35:i32 = var
%36:i32 = var
pc %34 1
pc %35 1
pc %36 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 5:i32
%2 = and %1, 8:i32
%3:i32 = var
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = or %2, %5
%7 = lshr %0, %2
%8 = lshr %7, 2:i32
%9 = and %8, 4:i32
%10 = or %6, %9
%11 = lshr %7, %9
%12 = lshr %11, 1:i32
%13 = and %12, 2:i32
%14 = or %10, %13
%15 = lshr %11, %13
%16 = lshr %15, 1:i32
%17 = and %16, 1:i32
%18 = or %14, %17
%19 = lshr %15, %17
%20 = add %18, %19 (hasExternalUses)
%21 = shl %20, 1:i32
%22 = shl %21, 2:i32
%23:i32 = var
%24 = block 2
%25:i32 = var
%26 = ult %25, 11:i32
blockpc %24 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %24 1 %28 1
%29:i32 = var
%30 = phi %24, 16:i32, %29
%31 = lshr %30, 3:i32
%32 = lshr %23, %31
%33 = eq %32, 0:i32
%34:i32 = zext %33
%35 = eq %34, 0:i32
%36:i32 = var
%37:i32 = var
pc %35 1
pc %36 1
pc %37 1
infer %22


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 16:i32 (hasExternalUses)
%4 = or %1, %3
%5:i32 = var
%6 = lshr %5, 2:i32
%7 = and %6, 4:i32
%8 = or %4, %7
%9 = lshr %5, %7
%10 = lshr %9, 1:i32
%11 = and %10, 2:i32
%12 = or %8, %11
%13 = lshr %9, %11
%14 = lshr %13, 1:i32
%15 = and %14, 1:i32
%16 = or %12, %15
%17 = lshr %13, %15
%18 = add %16, %17 (hasExternalUses)
%19 = shl %18, 1:i32
%20 = shl %19, 2:i32
%21 = add 3144:i32, %20
%22:i32 = var
%23 = block 2
%24:i32 = var
%25 = ult %24, 11:i32
blockpc %23 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %23 1 %27 1
%28:i32 = var
%29 = phi %23, 16:i32, %28
%30 = lshr %29, 3:i32
%31 = lshr %22, %30
%32 = eq %31, 0:i32
%33:i32 = zext %32
%34 = eq %33, 0:i32
%35:i32 = var
%36:i32 = var
pc %34 1
pc %35 1
pc %36 1
infer %21


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = or %0, %1
%3:i32 = var
%4 = and %3, 4:i32 (hasExternalUses)
%5 = or %2, %4
%6:i32 = var
%7 = lshr %6, 1:i32
%8 = and %7, 2:i32
%9 = or %5, %8
%10 = lshr %6, %8
%11 = lshr %10, 1:i32
%12 = and %11, 1:i32
%13 = or %9, %12
%14 = lshr %10, %12
%15 = add %13, %14 (hasExternalUses)
%16 = shl %15, 1:i32
%17 = shl %16, 2:i32
%18 = add 3144:i32, %17 (hasExternalUses)
%19 = add %18, 8:i32
%20:i32 = var
%21 = block 2
%22:i32 = var
%23 = ult %22, 11:i32
blockpc %21 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %21 1 %25 1
%26 = add %22, 11:i32
%27 = and %26, -8:i32
%28 = phi %21, 16:i32, %27
%29 = lshr %28, 3:i32
%30 = lshr %20, %29
%31 = eq %30, 0:i32
%32:i32 = zext %31
%33 = eq %32, 0:i32
%34:i32 = var
%35:i32 = var
pc %33 1
pc %34 1
pc %35 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = ult %4, 11:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8 = add %4, 11:i32
%9 = and %8, -8:i32
%10 = phi %3, 16:i32, %9
%11 = lshr %10, 3:i32
%12 = lshr %2, %11
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16:i32 = var
%17 = ult %16, %10
%18 = ult %4, 245:i32
pc %15 1
pc %17 1
pc %18 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = or %1, %2
%4:i32 = var
%5 = and %4, 4:i32 (hasExternalUses)
%6 = or %3, %5
%7:i32 = var
%8 = lshr %7, 1:i32
%9 = and %8, 2:i32
%10 = or %6, %9
%11 = lshr %7, %9
%12 = lshr %11, 1:i32
%13 = and %12, 1:i32
%14 = or %10, %13
%15 = lshr %11, %13
%16 = add %14, %15 (hasExternalUses)
%17 = shl %16, 1:i32
%18 = shl %17, 2:i32
%19 = add 3144:i32, %18 (hasExternalUses)
%20 = eq %0, %19
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = ult %23, 11:i32
blockpc %22 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %22 1 %26 1
%27 = add %23, 11:i32
%28 = and %27, -8:i32
%29 = phi %22, 16:i32, %28
%30 = lshr %29, 3:i32
%31 = lshr %21, %30
%32 = eq %31, 0:i32
%33:i32 = zext %32
%34 = eq %33, 0:i32
%35:i32 = var
%36:i32 = var
pc %34 1
pc %35 1
pc %36 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = lshr %0, %1
%3 = lshr %2, 5:i32
%4 = and %3, 8:i32
%5 = or %4, %1
%6 = lshr %2, %4
%7 = lshr %6, 2:i32
%8 = and %7, 4:i32
%9 = or %5, %8
%10 = lshr %6, %8
%11 = lshr %10, 1:i32
%12 = and %11, 2:i32
%13 = or %9, %12
%14 = lshr %10, %12
%15 = lshr %14, 1:i32
%16 = and %15, 1:i32
%17 = or %13, %16
%18 = lshr %14, %16
%19 = add %17, %18 (hasExternalUses)
%20 = shl 1:i32, %19
%21:i32 = var
%22 = shl %19, 1:i32
%23 = shl %22, 2:i32
%24 = add 3144:i32, %23
%25 = eq %21, %24
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = ult %28, 11:i32
blockpc %27 0 %29 1
%30:i32 = var
blockpc %27 1 %30 1
%31:i32 = var
%32 = phi %27, 16:i32, %31
%33 = lshr %32, 3:i32
%34 = lshr %26, %33
%35 = eq %34, 0:i32
%36:i32 = zext %35
%37 = eq %36, 0:i32
%38:i32 = var
%39:i32 = var
pc %25 1
pc %37 1
pc %38 1
pc %39 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 5:i32
%2 = and %1, 8:i32
%3:i32 = var
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = or %2, %5
%7 = lshr %0, %2
%8 = lshr %7, 2:i32
%9 = and %8, 4:i32
%10 = or %6, %9
%11 = lshr %7, %9
%12 = lshr %11, 1:i32
%13 = and %12, 2:i32
%14 = or %10, %13
%15 = lshr %11, %13
%16 = lshr %15, 1:i32
%17 = and %16, 1:i32
%18 = or %14, %17
%19 = lshr %15, %17
%20 = add %18, %19 (hasExternalUses)
%21 = shl 1:i32, %20
%22 = xor %21, -1:i32
%23:i32 = var
%24 = shl %20, 1:i32
%25 = shl %24, 2:i32
%26 = add 3144:i32, %25
%27 = eq %23, %26
%28:i32 = var
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33 = phi %29, 16:i32, %32
%34 = lshr %33, 3:i32
%35 = lshr %28, %34
%36 = eq %35, 0:i32
%37:i32 = zext %36
%38 = eq %37, 0:i32
%39:i32 = var
%40:i32 = var
pc %27 1
pc %38 1
pc %39 1
pc %40 1
infer %22


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = and %1, 8:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, 16:i32 (hasExternalUses)
%5 = or %2, %4
%6:i32 = var
%7 = lshr %6, 2:i32
%8 = and %7, 4:i32
%9 = or %5, %8
%10 = lshr %6, %8
%11 = lshr %10, 1:i32
%12 = and %11, 2:i32
%13 = or %9, %12
%14 = lshr %10, %12
%15 = lshr %14, 1:i32
%16 = and %15, 1:i32
%17 = or %13, %16
%18 = lshr %14, %16
%19 = add %17, %18 (hasExternalUses)
%20 = shl 1:i32, %19
%21 = xor %20, -1:i32
%22 = and %0, %21
%23:i32 = var
%24 = shl %19, 1:i32
%25 = shl %24, 2:i32
%26 = add 3144:i32, %25
%27 = eq %23, %26
%28 = block 2
%29:i32 = var
%30 = ult %29, 11:i32
blockpc %28 0 %30 1
%31:i32 = var
blockpc %28 1 %31 1
%32:i32 = var
%33 = phi %28, 16:i32, %32
%34 = lshr %33, 3:i32
%35 = lshr %0, %34
%36 = eq %35, 0:i32
%37:i32 = zext %36
%38 = eq %37, 0:i32
%39:i32 = var
%40:i32 = var
pc %27 1
pc %38 1
pc %39 1
pc %40 1
infer %22


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3:i32 = var
%4 = or %2, %3
%5:i32 = var
%6 = and %5, 1:i32
%7 = or %4, %6
%8:i32 = var
%9 = lshr %8, %3
%10 = lshr %9, %6
%11 = add %7, %10
%12 = shl %11, 1:i32
%13 = shl %12, 2:i32
%14 = add 3144:i32, %13
%15 = eq %0, %14
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18:i32 = var
%19 = block 2
%20:i32 = var
%21 = ult %20, 11:i32
blockpc %19 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %19 1 %23 1
%24 = add %20, 11:i32
%25 = and %24, -8:i32
%26 = phi %19, 16:i32, %25
%27 = lshr %26, 3:i32
%28 = lshr %18, %27
%29 = eq %28, 0:i32
%30:i32 = zext %29
%31 = eq %30, 0:i32
%32:i32 = var
%33:i32 = var
pc %17 1
pc %31 1
pc %32 1
pc %33 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = lshr %0, %1
%3 = lshr %2, 5:i32
%4 = and %3, 8:i32
%5 = or %4, %1
%6 = lshr %2, %4
%7 = lshr %6, 2:i32
%8 = and %7, 4:i32
%9 = or %5, %8
%10 = lshr %6, %8
%11 = lshr %10, 1:i32
%12 = and %11, 2:i32
%13 = or %9, %12
%14 = lshr %10, %12
%15 = lshr %14, 1:i32
%16 = and %15, 1:i32
%17 = or %13, %16
%18 = lshr %14, %16
%19 = add %17, %18 (hasExternalUses)
%20 = shl %19, 3:i32
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = ult %23, 11:i32
blockpc %22 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %22 1 %26 1
%27 = add %23, 11:i32
%28 = and %27, -8:i32
%29 = phi %22, 16:i32, %28
%30 = lshr %29, 3:i32
%31 = lshr %21, %30
%32 = eq %31, 0:i32
%33:i32 = zext %32
%34 = eq %33, 0:i32
%35:i32 = var
%36:i32 = var
pc %34 1
pc %35 1
pc %36 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 5:i32
%2 = and %1, 8:i32
%3:i32 = var
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = or %2, %5
%7 = lshr %0, %2
%8 = lshr %7, 2:i32
%9 = and %8, 4:i32
%10 = or %6, %9
%11 = lshr %7, %9
%12 = lshr %11, 1:i32
%13 = and %12, 2:i32
%14 = or %10, %13
%15 = lshr %11, %13
%16 = lshr %15, 1:i32
%17 = and %16, 1:i32
%18 = or %14, %17
%19 = lshr %15, %17
%20 = add %18, %19 (hasExternalUses)
%21 = shl %20, 3:i32 (hasExternalUses)
%22 = block 2
%23:i32 = var
%24 = add %23, 11:i32
%25 = and %24, -8:i32 (hasExternalUses)
%26 = phi %22, 16:i32, %25
%27 = sub %21, %26
%28 = ult %23, 11:i32
blockpc %22 0 %28 1
%29:i32 = var
blockpc %22 1 %29 1
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %30 1
pc %31 1
pc %32 1
infer %27


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = ult %4, 11:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8 = add %4, 11:i32
%9 = and %8, -8:i32
%10 = phi %3, 16:i32, %9
%11 = lshr %10, 3:i32
%12 = lshr %2, %11
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16:i32 = var
%17 = ult %16, %10
%18 = ult %4, 245:i32
pc %15 1
pc %17 1
pc %18 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = add %1, 11:i32
%3 = and %2, -8:i32 (hasExternalUses)
%4 = phi %0, 16:i32, %3
%5 = or %4, 3:i32
%6 = ult %1, 11:i32
blockpc %0 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %0 1 %8 1
%9:i32 = var
%10 = lshr %4, 3:i32
%11 = lshr %9, %10
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = ult %15, %4
%17 = ult %1, 245:i32
pc %14 1
pc %16 1
pc %17 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = add %0, %5
%7 = ult %2, 11:i32
blockpc %1 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %1 1 %9 1
%10:i32 = var
%11 = lshr %5, 3:i32
%12 = lshr %10, %11
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16:i32 = var
%17 = ult %16, %5
%18 = ult %2, 245:i32
pc %15 1
pc %17 1
pc %18 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = add %0, %5 (hasExternalUses)
%7 = add %6, 4:i32
%8 = ult %2, 11:i32
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
%11:i32 = var
%12 = lshr %5, 3:i32
%13 = lshr %11, %12
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17:i32 = var
%18 = ult %17, %5
%19 = ult %2, 245:i32
pc %16 1
pc %18 1
pc %19 1
infer %7


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 16:i32 (hasExternalUses)
%4 = or %1, %3
%5:i32 = var
%6 = lshr %5, 2:i32
%7 = and %6, 4:i32
%8 = or %4, %7
%9 = lshr %5, %7
%10 = lshr %9, 1:i32
%11 = and %10, 2:i32
%12 = or %8, %11
%13 = lshr %9, %11
%14 = lshr %13, 1:i32
%15 = and %14, 1:i32
%16 = or %12, %15
%17 = lshr %13, %15
%18 = add %16, %17 (hasExternalUses)
%19 = shl %18, 3:i32 (hasExternalUses)
%20 = block 2
%21:i32 = var
%22 = add %21, 11:i32
%23 = and %22, -8:i32 (hasExternalUses)
%24 = phi %20, 16:i32, %23
%25 = sub %19, %24 (hasExternalUses)
%26 = or %25, 1:i32
%27 = ult %21, 11:i32
blockpc %20 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %20 1 %29 1
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %30 1
pc %31 1
pc %32 1
infer %26


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = lshr %1, 5:i32
%3 = and %2, 8:i32
%4:i32 = var
%5 = lshr %4, 12:i32
%6 = and %5, 16:i32 (hasExternalUses)
%7 = or %3, %6
%8 = lshr %1, %3
%9 = lshr %8, 2:i32
%10 = and %9, 4:i32
%11 = or %7, %10
%12 = lshr %8, %10
%13 = lshr %12, 1:i32
%14 = and %13, 2:i32
%15 = or %11, %14
%16 = lshr %12, %14
%17 = lshr %16, 1:i32
%18 = and %17, 1:i32
%19 = or %15, %18
%20 = lshr %16, %18
%21 = add %19, %20 (hasExternalUses)
%22 = shl %21, 3:i32 (hasExternalUses)
%23 = add %0, %22
%24:i32 = var
%25 = block 2
%26:i32 = var
%27 = ult %26, 11:i32
blockpc %25 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %25 1 %29 1
%30:i32 = var
%31 = phi %25, 16:i32, %30
%32 = lshr %31, 3:i32
%33 = lshr %24, %32
%34 = eq %33, 0:i32
%35:i32 = zext %34
%36 = eq %35, 0:i32
%37:i32 = var
%38:i32 = var
pc %36 1
pc %37 1
pc %38 1
infer %23


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = ult %4, 11:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8 = add %4, 11:i32
%9 = and %8, -8:i32
%10 = phi %3, 16:i32, %9
%11 = lshr %10, 3:i32
%12 = lshr %2, %11
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16 = ult %0, %10
%17 = ult %4, 245:i32
pc %15 1
pc %16 1
pc %17 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = ult %6, 11:i32
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10 = add %6, 11:i32
%11 = and %10, -8:i32
%12 = phi %5, 16:i32, %11
%13 = lshr %12, 3:i32
%14 = lshr %4, %13
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18 = ult %0, %12
%19 = ult %6, 245:i32
pc %17 1
pc %18 1
pc %19 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = block 2
%7:i32 = var
%8 = ult %7, 11:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = add %7, 11:i32
%12 = and %11, -8:i32
%13 = phi %6, 16:i32, %12
%14 = lshr %13, 3:i32
%15 = lshr %5, %14
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19 = ult %0, %13
%20 = ult %7, 245:i32
pc %4 1
pc %18 1
pc %19 1
pc %20 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl %1, 1:i32
%3 = eq %0, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = lshr %14, 3:i32
%16 = lshr %6, %15
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = ult %0, %14
%21 = ult %8, 245:i32
pc %5 1
pc %19 1
pc %20 1
pc %21 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl %1, 1:i32
%3 = shl %2, 2:i32
%4 = eq %0, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = block 2
%9:i32 = var
%10 = ult %9, 11:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13 = add %9, 11:i32
%14 = and %13, -8:i32
%15 = phi %8, 16:i32, %14
%16 = lshr %15, 3:i32
%17 = lshr %7, %16
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21 = ult %0, %15
%22 = ult %9, 245:i32
pc %6 1
pc %20 1
pc %21 1
pc %22 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl %1, 1:i32
%3 = shl %2, 2:i32
%4 = add 3144:i32, %3
%5 = eq %0, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = ult %10, 11:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = add %10, 11:i32
%15 = and %14, -8:i32
%16 = phi %9, 16:i32, %15
%17 = lshr %16, 3:i32
%18 = lshr %8, %17
%19 = eq %18, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = ult %0, %16
%23 = ult %10, 245:i32
pc %7 1
pc %21 1
pc %22 1
pc %23 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl 1:i32, %1
%3 = eq %0, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = lshr %14, 3:i32
%16 = lshr %6, %15
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = ult %0, %14
%21 = ult %8, 245:i32
pc %5 1
pc %19 1
pc %20 1
pc %21 1
infer %2


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = or %2, %3
%5:i32 = var
%6 = and %5, 2:i32 (hasExternalUses)
%7 = or %4, %6
%8:i32 = var
%9 = lshr %8, 1:i32
%10 = and %9, 1:i32
%11 = or %7, %10
%12 = lshr %8, %10
%13 = add %11, %12 (hasExternalUses)
%14 = shl 1:i32, %13
%15 = xor %14, -1:i32
%16 = and %1, %15 (hasExternalUses)
%17 = phi %0, %16, %1
%18:i32 = var
%19 = lshr %18, 3:i32 (hasExternalUses)
%20 = shl 1:i32, %19 (hasExternalUses)
%21 = and %17, %20
%22:i32 = var
%23 = shl %13, 1:i32
%24 = shl %23, 2:i32
%25 = add 3144:i32, %24
%26 = eq %22, %25
blockpc %0 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %0 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %21


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = or %2, %3
%5:i32 = var
%6 = and %5, 1:i32
%7 = or %4, %6
%8:i32 = var
%9 = lshr %8, %3 (hasExternalUses)
%10 = lshr %9, %6
%11 = add %7, %10 (hasExternalUses)
%12 = shl 1:i32, %11
%13 = xor %12, -1:i32
%14 = and %1, %13 (hasExternalUses)
%15 = phi %0, %14, %1
%16:i32 = var
%17 = lshr %16, 3:i32 (hasExternalUses)
%18 = shl 1:i32, %17 (hasExternalUses)
%19 = and %15, %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = shl %11, 1:i32
%23 = shl %22, 2:i32
%24 = add 3144:i32, %23
%25 = eq %21, %24
blockpc %0 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %0 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %20


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = or %2, %3
%5:i32 = var
%6 = and %5, 2:i32 (hasExternalUses)
%7 = or %4, %6
%8:i32 = var
%9 = lshr %8, 1:i32
%10 = and %9, 1:i32
%11 = or %7, %10
%12 = lshr %8, %10
%13 = add %11, %12 (hasExternalUses)
%14 = shl 1:i32, %13
%15 = xor %14, -1:i32
%16 = and %1, %15 (hasExternalUses)
%17 = phi %0, %16, %1
%18:i32 = var
%19 = lshr %18, 3:i32 (hasExternalUses)
%20 = shl 1:i32, %19 (hasExternalUses)
%21 = or %17, %20
%22:i32 = var
%23 = shl %13, 1:i32
%24 = shl %23, 2:i32
%25 = add 3144:i32, %24
%26 = eq %22, %25
blockpc %0 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %0 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %21


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl %1, 1:i32
%3 = shl %2, 2:i32
%4 = add 3144:i32, %3 (hasExternalUses)
%5 = add %4, 8:i32
%6 = block 2
%7:i32 = var
%8:i32 = var
%9:i32 = var
%10 = add %8, %9
%11 = shl %10, 1:i32
%12 = shl %11, 2:i32
%13 = add 3144:i32, %12
%14 = eq %7, %13
blockpc %6 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %6 1 %16 1
%17:i32 = var
%18 = shl 1:i32, %10
%19 = xor %18, -1:i32
%20 = and %17, %19
%21 = phi %6, %20, %17
%22 = shl 1:i32, %1
%23 = and %21, %22
%24 = eq %23, 0:i32
%25 = eq %0, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
%29:i32 = var
%30:i32 = var
pc %24 1
pc %27 1
pc %28 1
pc %29 1
pc %30 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl %1, 1:i32
%3 = shl %2, 2:i32
%4 = add 3144:i32, %3 (hasExternalUses)
%5 = add %4, 8:i32
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = shl %8, 2:i32
%10 = add 3144:i32, %9
%11 = eq %7, %10
blockpc %6 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %6 1 %13 1
%14:i32 = var
%15:i32 = var
%16:i32 = var
%17 = add %15, %16
%18 = shl 1:i32, %17
%19 = xor %18, -1:i32
%20 = and %14, %19
%21 = phi %6, %20, %14
%22 = shl 1:i32, %1
%23 = and %21, %22
%24 = eq %23, 0:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27 = eq %0, 0:i32
%28:i32 = zext %27
%29 = eq %28, 0:i32
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %26 1
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %5


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = lshr %1, 3:i32 (hasExternalUses)
%3 = shl %2, 1:i32
%4 = shl %3, 2:i32
%5 = add 3144:i32, %4 (hasExternalUses)
%6:i32 = var
%7 = phi %0, %5, %6
%8 = add %7, 12:i32
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = shl %11, 1:i32
%13 = shl %12, 2:i32
%14 = add 3144:i32, %13
%15 = eq %10, %14
blockpc %9 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %9 1 %17 1
%18:i32 = var
%19 = shl 1:i32, %11
%20 = xor %19, -1:i32
%21 = and %18, %20
%22 = phi %9, %21, %18
%23 = shl 1:i32, %2
%24 = and %22, %23
%25 = eq %24, 0:i32
blockpc %0 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %0 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %8


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = lshr %14, 3:i32
%16 = lshr %6, %15
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = ult %2, %14
%21 = ult %8, 245:i32
pc %5 1
pc %19 1
pc %20 1
pc %21 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = lshr %14, 3:i32
%16 = lshr %6, %15
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = ult %2, %14
%21 = ult %8, 245:i32
pc %5 1
pc %19 1
pc %20 1
pc %21 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = ult %4, 11:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8 = add %4, 11:i32
%9 = and %8, -8:i32
%10 = phi %3, 16:i32, %9
%11 = ult %2, %10
%12 = ult %4, 245:i32
pc %11 1
pc %12 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = block 2
%7:i32 = var
%8 = ult %7, 11:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = add %7, 11:i32
%12 = and %11, -8:i32
%13 = phi %6, 16:i32, %12
%14 = ult %5, %13
%15 = ult %7, 245:i32
pc %4 1
pc %14 1
pc %15 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = eq %0, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = ult %6, %14
%16 = ult %8, 245:i32
pc %5 1
pc %15 1
pc %16 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = eq %0, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = block 2
%9:i32 = var
%10 = ult %9, 11:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13 = add %9, 11:i32
%14 = and %13, -8:i32
%15 = phi %8, 16:i32, %14
%16 = ult %7, %15
%17 = ult %9, 245:i32
pc %6 1
pc %16 1
pc %17 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32 (hasExternalUses)
%4 = lshr %3, 12:i32
%5 = eq %0, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = ult %10, 11:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = add %10, 11:i32
%15 = and %14, -8:i32
%16 = phi %9, 16:i32, %15
%17 = ult %8, %16
%18 = ult %10, 245:i32
pc %7 1
pc %17 1
pc %18 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32 (hasExternalUses)
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32
%6 = eq %0, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = ult %11, 11:i32
blockpc %10 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %10 1 %14 1
%15 = add %11, 11:i32
%16 = and %15, -8:i32
%17 = phi %10, 16:i32, %16
%18 = ult %9, %17
%19 = ult %11, 245:i32
pc %8 1
pc %18 1
pc %19 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = lshr %3, %5
%7 = eq %0, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = ult %12, 11:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16 = add %12, 11:i32
%17 = and %16, -8:i32
%18 = phi %11, 16:i32, %17
%19 = ult %10, %18
%20 = ult %12, 245:i32
pc %9 1
pc %19 1
pc %20 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = lshr %3, %5 (hasExternalUses)
%7 = lshr %6, 5:i32
%8 = eq %0, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = block 2
%13:i32 = var
%14 = ult %13, 11:i32
blockpc %12 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1
%17 = add %13, 11:i32
%18 = and %17, -8:i32
%19 = phi %12, 16:i32, %18
%20 = ult %11, %19
%21 = ult %13, 245:i32
pc %10 1
pc %20 1
pc %21 1
infer %7


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = lshr %3, %5 (hasExternalUses)
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32
%9 = eq %0, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13 = block 2
%14:i32 = var
%15 = ult %14, 11:i32
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18 = add %14, 11:i32
%19 = and %18, -8:i32
%20 = phi %13, 16:i32, %19
%21 = ult %12, %20
%22 = ult %14, 245:i32
pc %11 1
pc %21 1
pc %22 1
infer %8


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32 (hasExternalUses)
%9 = lshr %6, %8
%10 = eq %0, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13:i32 = var
%14 = block 2
%15:i32 = var
%16 = ult %15, 11:i32
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19 = add %15, 11:i32
%20 = and %19, -8:i32
%21 = phi %14, 16:i32, %20
%22 = ult %13, %21
%23 = ult %15, 245:i32
pc %12 1
pc %22 1
pc %23 1
infer %9


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32 (hasExternalUses)
%9 = lshr %6, %8 (hasExternalUses)
%10 = lshr %9, 2:i32
%11 = eq %0, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14:i32 = var
%15 = block 2
%16:i32 = var
%17 = ult %16, 11:i32
blockpc %15 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %15 1 %19 1
%20 = add %16, 11:i32
%21 = and %20, -8:i32
%22 = phi %15, 16:i32, %21
%23 = ult %14, %22
%24 = ult %16, 245:i32
pc %13 1
pc %23 1
pc %24 1
infer %10


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32 (hasExternalUses)
%9 = lshr %6, %8 (hasExternalUses)
%10 = lshr %9, 2:i32
%11 = and %10, 4:i32
%12 = eq %0, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = block 2
%17:i32 = var
%18 = ult %17, 11:i32
blockpc %16 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %16 1 %20 1
%21 = add %17, 11:i32
%22 = and %21, -8:i32
%23 = phi %16, 16:i32, %22
%24 = ult %15, %23
%25 = ult %17, 245:i32
pc %14 1
pc %24 1
pc %25 1
infer %11


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32
%6 = lshr %3, %5 (hasExternalUses)
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32 (hasExternalUses)
%9 = or %8, %5
%10 = eq %0, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13:i32 = var
%14 = block 2
%15:i32 = var
%16 = ult %15, 11:i32
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19 = add %15, 11:i32
%20 = and %19, -8:i32
%21 = phi %14, 16:i32, %20
%22 = ult %13, %21
%23 = ult %15, 245:i32
pc %12 1
pc %22 1
pc %23 1
infer %9


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32 (hasExternalUses)
%9 = lshr %6, %8
%10 = lshr %9, 2:i32
%11 = and %10, 4:i32 (hasExternalUses)
%12 = lshr %9, %11
%13 = eq %0, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16:i32 = var
%17 = block 2
%18:i32 = var
%19 = ult %18, 11:i32
blockpc %17 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %17 1 %21 1
%22 = add %18, 11:i32
%23 = and %22, -8:i32
%24 = phi %17, 16:i32, %23
%25 = ult %16, %24
%26 = ult %18, 245:i32
pc %15 1
pc %25 1
pc %26 1
infer %12


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32 (hasExternalUses)
%9 = lshr %6, %8
%10 = lshr %9, 2:i32
%11 = and %10, 4:i32 (hasExternalUses)
%12 = lshr %9, %11 (hasExternalUses)
%13 = lshr %12, 1:i32
%14 = eq %0, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = ult %19, 11:i32
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23 = add %19, 11:i32
%24 = and %23, -8:i32
%25 = phi %18, 16:i32, %24
%26 = ult %17, %25
%27 = ult %19, 245:i32
pc %16 1
pc %26 1
pc %27 1
infer %13


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32 (hasExternalUses)
%9 = lshr %6, %8
%10 = lshr %9, 2:i32
%11 = and %10, 4:i32 (hasExternalUses)
%12 = lshr %9, %11 (hasExternalUses)
%13 = lshr %12, 1:i32
%14 = and %13, 2:i32
%15 = eq %0, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18:i32 = var
%19 = block 2
%20:i32 = var
%21 = ult %20, 11:i32
blockpc %19 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %19 1 %23 1
%24 = add %20, 11:i32
%25 = and %24, -8:i32
%26 = phi %19, 16:i32, %25
%27 = ult %18, %26
%28:i32 = var
pc %17 1
pc %27 1
pc %28 1
infer %14


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32
%9 = or %8, %5
%10 = lshr %6, %8 (hasExternalUses)
%11 = lshr %10, 2:i32
%12 = and %11, 4:i32 (hasExternalUses)
%13 = or %9, %12
%14 = eq %0, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = ult %19, 11:i32
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23 = add %19, 11:i32
%24 = and %23, -8:i32
%25 = phi %18, 16:i32, %24
%26 = ult %17, %25
%27 = ult %19, 245:i32
pc %16 1
pc %26 1
pc %27 1
infer %13


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32 (hasExternalUses)
%9 = lshr %6, %8
%10 = lshr %9, 2:i32
%11 = and %10, 4:i32 (hasExternalUses)
%12 = lshr %9, %11
%13 = lshr %12, 1:i32
%14 = and %13, 2:i32 (hasExternalUses)
%15 = lshr %12, %14
%16 = eq %0, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = block 2
%21:i32 = var
%22 = ult %21, 11:i32
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25 = add %21, 11:i32
%26 = and %25, -8:i32
%27 = phi %20, 16:i32, %26
%28 = ult %19, %27
%29:i32 = var
pc %18 1
pc %28 1
pc %29 1
infer %15


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32 (hasExternalUses)
%9 = lshr %6, %8
%10 = lshr %9, 2:i32
%11 = and %10, 4:i32 (hasExternalUses)
%12 = lshr %9, %11
%13 = lshr %12, 1:i32
%14 = and %13, 2:i32 (hasExternalUses)
%15 = lshr %12, %14 (hasExternalUses)
%16 = lshr %15, 1:i32
%17 = eq %0, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = block 2
%22:i32 = var
%23 = ult %22, 11:i32
blockpc %21 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %21 1 %25 1
%26 = add %22, 11:i32
%27 = and %26, -8:i32
%28 = phi %21, 16:i32, %27
%29 = ult %20, %28
%30:i32 = var
pc %19 1
pc %29 1
pc %30 1
infer %16


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32 (hasExternalUses)
%9 = lshr %6, %8
%10 = lshr %9, 2:i32
%11 = and %10, 4:i32 (hasExternalUses)
%12 = lshr %9, %11
%13 = lshr %12, 1:i32
%14 = and %13, 2:i32 (hasExternalUses)
%15 = lshr %12, %14 (hasExternalUses)
%16 = lshr %15, 1:i32
%17 = and %16, 1:i32
%18 = eq %0, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = ult %23, 11:i32
blockpc %22 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %22 1 %26 1
%27 = add %23, 11:i32
%28 = and %27, -8:i32
%29 = phi %22, 16:i32, %28
%30 = ult %21, %29
%31:i32 = var
pc %20 1
pc %30 1
pc %31 1
infer %17


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32
%9 = or %8, %5
%10 = lshr %6, %8
%11 = lshr %10, 2:i32
%12 = and %11, 4:i32
%13 = or %9, %12
%14 = lshr %10, %12 (hasExternalUses)
%15 = lshr %14, 1:i32
%16 = and %15, 2:i32 (hasExternalUses)
%17 = or %13, %16
%18 = eq %0, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = ult %23, 11:i32
blockpc %22 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %22 1 %26 1
%27 = add %23, 11:i32
%28 = and %27, -8:i32
%29 = phi %22, 16:i32, %28
%30 = ult %21, %29
%31:i32 = var
pc %20 1
pc %30 1
pc %31 1
infer %17


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32
%9 = or %8, %5
%10 = lshr %6, %8
%11 = lshr %10, 2:i32
%12 = and %11, 4:i32
%13 = or %9, %12
%14 = lshr %10, %12
%15 = lshr %14, 1:i32
%16 = and %15, 2:i32
%17 = or %13, %16
%18 = lshr %14, %16 (hasExternalUses)
%19 = lshr %18, 1:i32
%20 = and %19, 1:i32 (hasExternalUses)
%21 = or %17, %20
%22 = eq %0, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25:i32 = var
%26 = block 2
%27:i32 = var
%28 = ult %27, 11:i32
blockpc %26 0 %28 1
%29:i32 = var
blockpc %26 1 %29 1
%30:i32 = var
%31 = phi %26, 16:i32, %30
%32 = ult %25, %31
%33:i32 = var
pc %24 1
pc %32 1
pc %33 1
infer %21


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32 (hasExternalUses)
%9 = lshr %6, %8
%10 = lshr %9, 2:i32
%11 = and %10, 4:i32 (hasExternalUses)
%12 = lshr %9, %11
%13 = lshr %12, 1:i32
%14 = and %13, 2:i32 (hasExternalUses)
%15 = lshr %12, %14
%16 = lshr %15, 1:i32
%17 = and %16, 1:i32 (hasExternalUses)
%18 = lshr %15, %17
%19 = eq %0, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22:i32 = var
%23 = block 2
%24:i32 = var
%25 = ult %24, 11:i32
blockpc %23 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %23 1 %27 1
%28:i32 = var
%29 = phi %23, 16:i32, %28
%30 = ult %22, %29
%31:i32 = var
pc %21 1
pc %30 1
pc %31 1
infer %18


; start LHS (in $38)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 16:i32
%4 = lshr %1, %3
%5 = lshr %4, 5:i32
%6 = and %5, 8:i32
%7 = or %6, %3
%8 = lshr %4, %6
%9 = lshr %8, 2:i32
%10 = and %9, 4:i32
%11 = or %7, %10
%12 = lshr %8, %10
%13 = lshr %12, 1:i32
%14 = and %13, 2:i32
%15 = or %11, %14
%16 = lshr %12, %14
%17 = lshr %16, 1:i32
%18 = and %17, 1:i32
%19 = or %15, %18
%20 = lshr %16, %18
%21 = add %19, %20
%22:i32 = var
%23 = eq %22, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = ult %28, 11:i32
blockpc %27 0 %29 1
%30:i32 = var
blockpc %27 1 %30 1
%31:i32 = var
%32 = phi %27, 16:i32, %31
%33 = ult %26, %32
%34:i32 = var
pc %25 1
pc %33 1
pc %34 1
infer %21


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = lshr %0, %1
%3 = lshr %2, 5:i32
%4 = and %3, 8:i32
%5 = or %4, %1
%6 = lshr %2, %4
%7 = lshr %6, 2:i32
%8 = and %7, 4:i32
%9 = or %5, %8
%10 = lshr %6, %8
%11 = lshr %10, 1:i32
%12 = and %11, 2:i32
%13 = or %9, %12
%14 = lshr %10, %12
%15 = lshr %14, 1:i32
%16 = and %15, 1:i32
%17 = or %13, %16
%18 = lshr %14, %16
%19 = add %17, %18
%20 = shl %19, 2:i32
%21:i32 = var
%22 = eq %21, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25:i32 = var
%26 = block 2
%27:i32 = var
%28 = ult %27, 11:i32
blockpc %26 0 %28 1
%29:i32 = var
blockpc %26 1 %29 1
%30:i32 = var
%31 = phi %26, 16:i32, %30
%32 = ult %25, %31
%33:i32 = var
pc %24 1
pc %32 1
pc %33 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 5:i32
%2 = and %1, 8:i32
%3:i32 = var
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = or %2, %5
%7 = lshr %0, %2
%8 = lshr %7, 2:i32
%9 = and %8, 4:i32
%10 = or %6, %9
%11 = lshr %7, %9
%12 = lshr %11, 1:i32
%13 = and %12, 2:i32
%14 = or %10, %13
%15 = lshr %11, %13
%16 = lshr %15, 1:i32
%17 = and %16, 1:i32
%18 = or %14, %17
%19 = lshr %15, %17
%20 = add %18, %19
%21 = shl %20, 2:i32
%22 = add 3408:i32, %21
%23:i32 = var
%24 = eq %23, 0:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
%28 = block 2
%29:i32 = var
%30 = ult %29, 11:i32
blockpc %28 0 %30 1
%31:i32 = var
blockpc %28 1 %31 1
%32:i32 = var
%33 = phi %28, 16:i32, %32
%34 = ult %27, %33
%35:i32 = var
pc %26 1
pc %34 1
pc %35 1
infer %22


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = ult %6, %14
%16 = ult %8, 245:i32
pc %5 1
pc %15 1
pc %16 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = ult %6, %14
%16 = ult %8, 245:i32
pc %5 1
pc %15 1
pc %16 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 11:i32
%5 = and %4, -8:i32 (hasExternalUses)
%6 = phi %2, 16:i32, %5
%7 = sub %1, %6
%8 = ult %3, 11:i32
blockpc %2 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %2 1 %10 1
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = ult %15, %6
%17 = ult %3, 245:i32
pc %14 1
pc %16 1
pc %17 1
infer %7


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = ult %6, %14
%16 = ult %8, 245:i32
pc %5 1
pc %15 1
pc %16 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = ult %6, %14
%16 = ult %8, 245:i32
pc %5 1
pc %15 1
pc %16 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = ult %10, 11:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = add %10, 11:i32
%15 = and %14, -8:i32
%16 = phi %9, 16:i32, %15
%17 = ult %8, %16
%18 = ult %10, 245:i32
pc %3 1
pc %7 1
pc %17 1
pc %18 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = ult %10, 11:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = add %10, 11:i32
%15 = and %14, -8:i32
%16 = phi %9, 16:i32, %15
%17 = ult %8, %16
%18 = ult %10, 245:i32
pc %3 1
pc %7 1
pc %17 1
pc %18 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = add %3, 4:i32
%5 = eq %2, 0:i32
blockpc %0 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %0 1 %7 1
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13 = block 2
%14:i32 = var
%15 = ult %14, 11:i32
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18 = add %14, 11:i32
%19 = and %18, -8:i32
%20 = phi %13, 16:i32, %19
%21 = ult %12, %20
%22 = ult %14, 245:i32
pc %11 1
pc %21 1
pc %22 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = ult %6, %14
%16 = ult %8, 245:i32
pc %5 1
pc %15 1
pc %16 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 11:i32
%5 = and %4, -8:i32 (hasExternalUses)
%6 = phi %2, 16:i32, %5
%7 = sub %1, %6
%8 = ult %3, 11:i32
blockpc %2 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %2 1 %10 1
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = ult %15, %6
%17 = ult %3, 245:i32
pc %14 1
pc %16 1
pc %17 1
infer %7


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3:i32 = var
%4 = add %3, 11:i32
%5 = and %4, -8:i32 (hasExternalUses)
%6 = phi %2, 16:i32, %5
%7 = sub %1, %6 (hasExternalUses)
%8:i32 = var
%9 = ult %7, %8
%10 = ult %3, 11:i32
blockpc %2 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %2 1 %12 1
%13:i32 = var
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17:i32 = var
%18 = ult %17, %6
%19 = ult %3, 245:i32
pc %16 1
pc %18 1
pc %19 1
infer %9


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = add %0, %5
%7 = ult %2, 11:i32
blockpc %1 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %1 1 %9 1
%10:i32 = var
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14:i32 = var
%15 = ult %14, %5
%16 = ult %2, 245:i32
pc %13 1
pc %15 1
pc %16 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = add %0, %5 (hasExternalUses)
%7 = ult %0, %6
%8 = ult %2, 11:i32
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = ult %15, %5
%17 = ult %2, 245:i32
pc %14 1
pc %16 1
pc %17 1
infer %7


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 24:i32
%2 = block 2
%3:i32 = var
%4 = ult %3, 11:i32
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7 = add %3, 11:i32
%8 = and %7, -8:i32
%9 = phi %2, 16:i32, %8
%10 = add %0, %9
%11 = ult %0, %10
%12:i32 = var
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16:i32 = var
%17 = ult %16, %9
%18 = ult %3, 245:i32
pc %11 1
pc %15 1
pc %17 1
pc %18 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2 = block 2
%3:i32 = var
%4 = ult %3, 11:i32
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7 = add %3, 11:i32
%8 = and %7, -8:i32
%9 = phi %2, 16:i32, %8
%10 = add %0, %9
%11 = ult %0, %10
%12:i32 = var
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16:i32 = var
%17 = ult %16, %9
%18 = ult %3, 245:i32
pc %11 1
pc %15 1
pc %17 1
pc %18 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = eq %0, %1
%3 = block 2
%4:i32 = var
%5 = ult %4, 11:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8 = add %4, 11:i32
%9 = and %8, -8:i32
%10 = phi %3, 16:i32, %9
%11 = add %1, %10
%12 = ult %1, %11
%13:i32 = var
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17:i32 = var
%18 = ult %17, %10
%19 = ult %4, 245:i32
pc %12 1
pc %16 1
pc %18 1
pc %19 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = eq %2, %0
%4 = block 2
%5:i32 = var
%6 = ult %5, 11:i32
blockpc %4 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1
%9 = add %5, 11:i32
%10 = and %9, -8:i32
%11 = phi %4, 16:i32, %10
%12 = add %0, %11
%13 = ult %0, %12
%14:i32 = var
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18:i32 = var
%19 = ult %18, %11
%20 = ult %5, 245:i32
pc %3 1
pc %13 1
pc %17 1
pc %19 1
pc %20 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3:i32 = var
%4 = eq %2, %3
%5 = block 2
%6:i32 = var
%7 = ult %6, 11:i32
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10 = add %6, 11:i32
%11 = and %10, -8:i32
%12 = phi %5, 16:i32, %11
%13 = add %3, %12
%14 = ult %3, %13
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = ult %19, %12
%21 = ult %6, 245:i32
pc %4 1
pc %14 1
pc %18 1
pc %20 1
pc %21 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = eq %4, %0
%6 = block 2
%7:i32 = var
%8 = ult %7, 11:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = add %7, 11:i32
%12 = and %11, -8:i32
%13 = phi %6, 16:i32, %12
%14 = add %0, %13
%15 = ult %0, %14
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = ult %20, %13
%22 = ult %7, 245:i32
pc %3 1
pc %5 1
pc %15 1
pc %19 1
pc %21 1
pc %22 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5:i32 = var
%6 = eq %4, %5
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = add %5, %14
%16 = ult %5, %15
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = ult %21, %14
%23 = ult %8, 245:i32
pc %3 1
pc %6 1
pc %16 1
pc %20 1
pc %22 1
pc %23 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3:i32 = var
%4 = eq %2, %3
%5 = block 2
%6:i32 = var
%7 = ult %6, 11:i32
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10 = add %6, 11:i32
%11 = and %10, -8:i32
%12 = phi %5, 16:i32, %11
%13 = add %3, %12
%14 = ult %3, %13
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = ult %19, %12
%21 = ult %6, 245:i32
pc %4 1
pc %14 1
pc %18 1
pc %20 1
pc %21 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3:i32 = var
%4 = eq %2, %3
%5 = block 2
%6:i32 = var
%7 = ult %6, 11:i32
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10 = add %6, 11:i32
%11 = and %10, -8:i32
%12 = phi %5, 16:i32, %11
%13 = add %3, %12
%14 = ult %3, %13
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = ult %19, %12
%21 = ult %6, 245:i32
pc %4 1
pc %14 1
pc %18 1
pc %20 1
pc %21 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5:i32 = var
%6 = eq %4, %5
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = add %5, %14
%16 = ult %5, %15
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = ult %21, %14
%23 = ult %8, 245:i32
pc %3 1
pc %6 1
pc %16 1
pc %20 1
pc %22 1
pc %23 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5:i32 = var
%6 = eq %4, %5
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = add %5, %14
%16 = ult %5, %15
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = ult %21, %14
%23 = ult %8, 245:i32
pc %3 1
pc %6 1
pc %16 1
pc %20 1
pc %22 1
pc %23 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = eq %2, %0
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = ult %7, 11:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = add %7, 11:i32
%12 = and %11, -8:i32
%13 = phi %6, 16:i32, %12
%14 = add %0, %13
%15 = ult %0, %14
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = ult %20, %13
%22 = ult %7, 245:i32
pc %5 1
pc %15 1
pc %19 1
pc %21 1
pc %22 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3:i32 = var
%4 = eq %2, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = add %3, %14
%16 = ult %3, %15
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = ult %21, %14
%23 = ult %8, 245:i32
pc %6 1
pc %16 1
pc %20 1
pc %22 1
pc %23 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = eq %0, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = ult %7, 11:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = add %7, 11:i32
%12 = and %11, -8:i32
%13 = phi %6, 16:i32, %12
%14 = add %2, %13
%15 = ult %2, %14
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = ult %20, %13
%22 = ult %7, 245:i32
pc %5 1
pc %15 1
pc %19 1
pc %21 1
pc %22 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = ult %4, 11:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8 = add %4, 11:i32
%9 = and %8, -8:i32
%10 = phi %3, 16:i32, %9
%11 = add %2, %10
%12 = ult %2, %11
%13:i32 = var
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17:i32 = var
%18 = ult %17, %10
%19 = ult %4, 245:i32
pc %12 1
pc %16 1
pc %18 1
pc %19 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = ult %6, 11:i32
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10 = add %6, 11:i32
%11 = and %10, -8:i32
%12 = phi %5, 16:i32, %11
%13 = add %4, %12
%14 = ult %4, %13
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = ult %19, %12
%21 = ult %6, 245:i32
pc %14 1
pc %18 1
pc %20 1
pc %21 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 28:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = ult %7, 11:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = add %7, 11:i32
%12 = and %11, -8:i32
%13 = phi %6, 16:i32, %12
%14 = add %0, %13
%15 = ult %0, %14
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = ult %20, %13
%22 = ult %7, 245:i32
pc %5 1
pc %15 1
pc %19 1
pc %21 1
pc %22 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = shl %0, 2:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = add %6, %14
%16 = ult %6, %15
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = ult %21, %14
%23 = ult %8, 245:i32
pc %5 1
pc %16 1
pc %20 1
pc %22 1
pc %23 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = shl %0, 2:i32
%2 = add 3408:i32, %1
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = block 2
%9:i32 = var
%10 = ult %9, 11:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13 = add %9, 11:i32
%14 = and %13, -8:i32
%15 = phi %8, 16:i32, %14
%16 = add %7, %15
%17 = ult %7, %16
%18:i32 = var
%19 = eq %18, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22:i32 = var
%23 = ult %22, %15
%24 = ult %9, 245:i32
pc %6 1
pc %17 1
pc %21 1
pc %23 1
pc %24 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = eq %0, %1
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = add %0, %14
%16 = ult %0, %15
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = ult %21, %14
%23 = ult %8, 245:i32
pc %6 1
pc %16 1
pc %20 1
pc %22 1
pc %23 1
infer %2


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = eq %3, %7
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
%11:i32 = var
%12 = eq %7, %11
%13:i32 = var
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17 = block 2
%18:i32 = var
%19 = ult %18, 11:i32
blockpc %17 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %17 1 %21 1
%22 = add %18, 11:i32
%23 = and %22, -8:i32
%24 = phi %17, 16:i32, %23
%25 = add %7, %24
%26 = ult %7, %25
%27:i32 = var
%28:i32 = var
%29:i32 = var
pc %12 1
pc %16 1
pc %26 1
pc %27 1
pc %28 1
pc %29 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = shl 1:i32, %0
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = eq %4, %5
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10 = phi %3, %9, %4
%11 = phi %2, 0:i32, %10
%12 = eq %11, 0:i32
%13:i32 = var
%14 = eq %5, %13
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19 = block 2
%20:i32 = var
%21 = ult %20, 11:i32
blockpc %19 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %19 1 %23 1
%24 = add %20, 11:i32
%25 = and %24, -8:i32
%26 = phi %19, 16:i32, %25
%27 = add %5, %26
%28 = ult %5, %27
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %12 1
pc %14 1
pc %18 1
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = shl 1:i32, %0
%2 = xor %1, -1:i32
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = eq %5, %6
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10:i32 = var
%11 = phi %4, %10, %5
%12 = phi %3, 0:i32, %11
%13 = eq %12, 0:i32
%14:i32 = var
%15 = eq %6, %14
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = block 2
%21:i32 = var
%22 = ult %21, 11:i32
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25 = add %21, 11:i32
%26 = and %25, -8:i32
%27 = phi %20, 16:i32, %26
%28 = add %6, %27
%29 = ult %6, %28
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %13 1
pc %15 1
pc %19 1
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl 1:i32, %1
%3 = xor %2, -1:i32
%4 = and %0, %3
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = eq %7, %8
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12:i32 = var
%13 = phi %6, %12, %7
%14 = phi %5, 0:i32, %13
%15 = eq %14, 0:i32
%16:i32 = var
%17 = eq %8, %16
%18:i32 = var
%19 = eq %18, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = block 2
%23:i32 = var
%24 = ult %23, 11:i32
blockpc %22 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %22 1 %26 1
%27:i32 = var
%28 = phi %22, 16:i32, %27
%29 = add %8, %28
%30 = ult %8, %29
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %15 1
pc %17 1
pc %21 1
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3:i32 = var
%4 = eq %2, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = eq %0, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = block 2
%11:i32 = var
%12 = ult %11, 11:i32
blockpc %10 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %10 1 %14 1
%15 = add %11, 11:i32
%16 = and %15, -8:i32
%17 = phi %10, 16:i32, %16
%18 = add %2, %17
%19 = ult %2, %18
%20:i32 = var
%21 = eq %20, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24:i32 = var
%25 = ult %24, %17
%26 = ult %11, 245:i32
pc %6 1
pc %9 1
pc %19 1
pc %23 1
pc %25 1
pc %26 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3:i32 = var
%4 = eq %2, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = eq %0, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = block 2
%11:i32 = var
%12 = ult %11, 11:i32
blockpc %10 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %10 1 %14 1
%15 = add %11, 11:i32
%16 = and %15, -8:i32
%17 = phi %10, 16:i32, %16
%18 = add %2, %17
%19 = ult %2, %18
%20:i32 = var
%21 = eq %20, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24:i32 = var
%25 = ult %24, %17
%26 = ult %11, 245:i32
pc %6 1
pc %9 1
pc %19 1
pc %23 1
pc %25 1
pc %26 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = eq %0, %1
%3:i32 = var
%4 = eq %1, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = block 2
%12:i32 = var
%13 = ult %12, 11:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16 = add %12, 11:i32
%17 = and %16, -8:i32
%18 = phi %11, 16:i32, %17
%19 = add %1, %18
%20 = ult %1, %19
%21:i32 = var
%22 = eq %21, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25:i32 = var
%26 = ult %25, %18
%27 = ult %12, 245:i32
pc %6 1
pc %10 1
pc %20 1
pc %24 1
pc %26 1
pc %27 1
infer %2


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = eq %3, %7
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
%11:i32 = var
%12 = eq %7, %11
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19 = block 2
%20:i32 = var
%21 = ult %20, 11:i32
blockpc %19 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %19 1 %23 1
%24 = add %20, 11:i32
%25 = and %24, -8:i32
%26 = phi %19, 16:i32, %25
%27 = add %7, %26
%28 = ult %7, %27
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %14 1
pc %18 1
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %6


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 24:i32
%7:i32 = var
%8 = eq %3, %7
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = block 2
%16:i32 = var
%17 = ult %16, 11:i32
blockpc %15 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %15 1 %19 1
%20 = add %16, 11:i32
%21 = and %20, -8:i32
%22 = phi %15, 16:i32, %21
%23 = add %7, %22
%24 = ult %7, %23
%25:i32 = var
%26 = eq %25, 0:i32
%27:i32 = zext %26
%28 = eq %27, 0:i32
%29:i32 = var
%30:i32 = var
pc %14 1
pc %24 1
pc %28 1
pc %29 1
pc %30 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = ult %7, 11:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = add %7, 11:i32
%12 = and %11, -8:i32
%13 = phi %6, 16:i32, %12
%14 = add %0, %13
%15 = ult %0, %14
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = ult %20, %13
%22 = ult %7, 245:i32
pc %5 1
pc %15 1
pc %19 1
pc %21 1
pc %22 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = add %6, %14
%16 = ult %6, %15
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = ult %21, %14
%23 = ult %8, 245:i32
pc %5 1
pc %16 1
pc %20 1
pc %22 1
pc %23 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = ult %10, 11:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = add %10, 11:i32
%15 = and %14, -8:i32
%16 = phi %9, 16:i32, %15
%17 = add %8, %16
%18 = ult %8, %17
%19:i32 = var
%20 = eq %19, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = ult %23, %16
%25 = ult %10, 245:i32
pc %7 1
pc %18 1
pc %22 1
pc %24 1
pc %25 1
infer %3


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 16:i32
%7:i32 = var
%8 = eq %3, %7
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19 = block 2
%20:i32 = var
%21 = ult %20, 11:i32
blockpc %19 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %19 1 %23 1
%24 = add %20, 11:i32
%25 = and %24, -8:i32
%26 = phi %19, 16:i32, %25
%27 = add %7, %26
%28 = ult %7, %27
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %14 1
pc %18 1
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 24:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = ult %11, 11:i32
blockpc %10 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %10 1 %14 1
%15 = add %11, 11:i32
%16 = and %15, -8:i32
%17 = phi %10, 16:i32, %16
%18 = add %9, %17
%19 = ult %9, %18
%20:i32 = var
%21 = eq %20, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24:i32 = var
%25 = ult %24, %17
%26 = ult %11, 245:i32
pc %4 1
pc %8 1
pc %19 1
pc %23 1
pc %25 1
pc %26 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = ult %7, 11:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = add %7, 11:i32
%12 = and %11, -8:i32
%13 = phi %6, 16:i32, %12
%14 = add %0, %13
%15 = ult %0, %14
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = ult %20, %13
%22 = ult %7, 245:i32
pc %5 1
pc %15 1
pc %19 1
pc %21 1
pc %22 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = add %6, %14
%16 = ult %6, %15
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = ult %21, %14
%23 = ult %8, 245:i32
pc %5 1
pc %16 1
pc %20 1
pc %22 1
pc %23 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = ult %10, 11:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = add %10, 11:i32
%15 = and %14, -8:i32
%16 = phi %9, 16:i32, %15
%17 = add %8, %16
%18 = ult %8, %17
%19:i32 = var
%20 = eq %19, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = ult %23, %16
%25 = ult %10, 245:i32
pc %7 1
pc %18 1
pc %22 1
pc %24 1
pc %25 1
infer %3


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 20:i32
%7:i32 = var
%8 = eq %3, %7
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19 = block 2
%20:i32 = var
%21 = ult %20, 11:i32
blockpc %19 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %19 1 %23 1
%24 = add %20, 11:i32
%25 = and %24, -8:i32
%26 = phi %19, 16:i32, %25
%27 = add %7, %26
%28 = ult %7, %27
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %14 1
pc %18 1
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 24:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = ult %11, 11:i32
blockpc %10 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %10 1 %14 1
%15 = add %11, 11:i32
%16 = and %15, -8:i32
%17 = phi %10, 16:i32, %16
%18 = add %9, %17
%19 = ult %9, %18
%20:i32 = var
%21 = eq %20, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24:i32 = var
%25 = ult %24, %17
%26 = ult %11, 245:i32
pc %4 1
pc %8 1
pc %19 1
pc %23 1
pc %25 1
pc %26 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = ult %0, 16:i32
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = ult %4, 11:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8 = add %4, 11:i32
%9 = and %8, -8:i32
%10 = phi %3, 16:i32, %9
%11 = add %2, %10
%12 = ult %2, %11
%13:i32 = var
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17:i32 = var
%18 = ult %17, %10
%19 = ult %4, 245:i32
pc %12 1
pc %16 1
pc %18 1
pc %19 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = add %0, %5
%7 = ult %2, 11:i32
blockpc %1 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %1 1 %9 1
%10 = ult %0, 16:i32
%11:i32 = var
%12 = add %11, %5
%13 = ult %11, %12
%14:i32 = var
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18:i32 = var
%19 = ult %18, %5
%20 = ult %2, 245:i32
pc %10 1
pc %13 1
pc %17 1
pc %19 1
pc %20 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = ult %2, 16:i32
%4 = block 2
%5:i32 = var
%6 = ult %5, 11:i32
blockpc %4 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1
%9 = add %5, 11:i32
%10 = and %9, -8:i32
%11 = phi %4, 16:i32, %10
%12 = add %0, %11
%13 = ult %0, %12
%14:i32 = var
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18:i32 = var
%19 = ult %18, %11
%20 = ult %5, 245:i32
pc %3 1
pc %13 1
pc %17 1
pc %19 1
pc %20 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = add %0, %5 (hasExternalUses)
%7 = or %6, 3:i32
%8 = ult %2, 11:i32
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
%11 = ult %0, 16:i32
%12:i32 = var
%13 = add %12, %5
%14 = ult %12, %13
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = ult %19, %5
%21 = ult %2, 245:i32
pc %11 1
pc %14 1
pc %18 1
pc %20 1
pc %21 1
infer %7


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = add %3, 11:i32
%5 = and %4, -8:i32 (hasExternalUses)
%6 = phi %2, 16:i32, %5
%7 = add %1, %6 (hasExternalUses)
%8 = add %0, %7
%9 = ult %3, 11:i32
blockpc %2 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %2 1 %11 1
%12 = ult %1, 16:i32
%13 = add %0, %6
%14 = ult %0, %13
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = ult %19, %6
%21 = ult %3, 245:i32
pc %12 1
pc %14 1
pc %18 1
pc %20 1
pc %21 1
infer %8


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = add %3, 11:i32
%5 = and %4, -8:i32 (hasExternalUses)
%6 = phi %2, 16:i32, %5
%7 = add %1, %6 (hasExternalUses)
%8 = add %0, %7
%9 = add %8, 4:i32
%10 = ult %3, 11:i32
blockpc %2 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %2 1 %12 1
%13 = ult %1, 16:i32
%14 = add %0, %6
%15 = ult %0, %14
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = ult %20, %6
%22 = ult %3, 245:i32
pc %13 1
pc %15 1
pc %19 1
pc %21 1
pc %22 1
infer %9


; start LHS (in $38)
%0:i32 = var
%1 = or %0, 1:i32
%2:i32 = var
%3 = ult %2, 16:i32
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = ult %6, 11:i32
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10 = add %6, 11:i32
%11 = and %10, -8:i32
%12 = phi %5, 16:i32, %11
%13 = add %4, %12
%14 = ult %4, %13
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = ult %19, %12
%21 = ult %6, 245:i32
pc %3 1
pc %14 1
pc %18 1
pc %20 1
pc %21 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = ult %2, 16:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = ult %7, 11:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = add %7, 11:i32
%12 = and %11, -8:i32
%13 = phi %6, 16:i32, %12
%14 = add %0, %13
%15 = ult %0, %14
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = ult %20, %13
%22 = ult %7, 245:i32
pc %5 1
pc %15 1
pc %19 1
pc %21 1
pc %22 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = add %1, 11:i32
%3 = and %2, -8:i32 (hasExternalUses)
%4 = phi %0, 16:i32, %3
%5 = or %4, 3:i32
%6 = ult %1, 11:i32
blockpc %0 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %0 1 %8 1
%9:i32 = var
%10 = ult %9, 16:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13:i32 = var
%14 = add %13, %4
%15 = ult %13, %14
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = ult %20, %4
%22 = ult %1, 245:i32
pc %12 1
pc %15 1
pc %19 1
pc %21 1
pc %22 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = add %0, %5 (hasExternalUses)
%7 = add %6, 4:i32
%8 = ult %2, 11:i32
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
%11:i32 = var
%12 = ult %11, 16:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = ult %0, %6
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = ult %20, %5
%22 = ult %2, 245:i32
pc %14 1
pc %15 1
pc %19 1
pc %21 1
pc %22 1
infer %7


; start LHS (in $38)
%0:i32 = var
%1 = or %0, 1:i32
%2 = ult %0, 16:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = block 2
%7:i32 = var
%8 = ult %7, 11:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11 = add %7, 11:i32
%12 = and %11, -8:i32
%13 = phi %6, 16:i32, %12
%14 = add %5, %13
%15 = ult %5, %14
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = ult %20, %13
%22 = ult %7, 245:i32
pc %4 1
pc %15 1
pc %19 1
pc %21 1
pc %22 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %1, 16:i32, %4
%6 = add %0, %5 (hasExternalUses)
%7:i32 = var
%8 = add %6, %7
%9 = ult %2, 11:i32
blockpc %1 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %1 1 %11 1
%12 = ult %7, 16:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = ult %0, %6
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = ult %20, %5
%22 = ult %2, 245:i32
pc %14 1
pc %15 1
pc %19 1
pc %21 1
pc %22 1
infer %8


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = ult %2, 16:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = ult %8, 11:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = add %8, 11:i32
%13 = and %12, -8:i32
%14 = phi %7, 16:i32, %13
%15 = add %6, %14
%16 = ult %6, %15
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21 = ult %0, %14
%22 = ult %8, 245:i32
pc %5 1
pc %16 1
pc %20 1
pc %21 1
pc %22 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4:i32 = var
%5 = ult %4, 16:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = ult %10, 11:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = add %10, 11:i32
%15 = and %14, -8:i32
%16 = phi %9, 16:i32, %15
%17 = add %8, %16
%18 = ult %8, %17
%19:i32 = var
%20 = eq %19, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = ult %0, %16
%24 = ult %10, 245:i32
pc %7 1
pc %18 1
pc %22 1
pc %23 1
pc %24 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = ult %5, 16:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9:i32 = var
%10 = block 2
%11:i32 = var
%12 = ult %11, 11:i32
blockpc %10 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %10 1 %14 1
%15 = add %11, 11:i32
%16 = and %15, -8:i32
%17 = phi %10, 16:i32, %16
%18 = add %9, %17
%19 = ult %9, %18
%20:i32 = var
%21 = eq %20, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24 = ult %0, %17
%25 = ult %11, 245:i32
pc %4 1
pc %8 1
pc %19 1
pc %23 1
pc %24 1
pc %25 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl %1, 1:i32
%3 = eq %0, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult %6, 16:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = ult %12, 11:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16 = add %12, 11:i32
%17 = and %16, -8:i32
%18 = phi %11, 16:i32, %17
%19 = add %10, %18
%20 = ult %10, %19
%21:i32 = var
%22 = eq %21, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = ult %0, %18
%26 = ult %12, 245:i32
pc %5 1
pc %9 1
pc %20 1
pc %24 1
pc %25 1
pc %26 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl %1, 1:i32
%3 = shl %2, 2:i32
%4 = eq %0, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = ult %7, 16:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = block 2
%13:i32 = var
%14 = ult %13, 11:i32
blockpc %12 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1
%17 = add %13, 11:i32
%18 = and %17, -8:i32
%19 = phi %12, 16:i32, %18
%20 = add %11, %19
%21 = ult %11, %20
%22:i32 = var
%23 = eq %22, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26 = ult %0, %19
%27 = ult %13, 245:i32
pc %6 1
pc %10 1
pc %21 1
pc %25 1
pc %26 1
pc %27 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl %1, 1:i32
%3 = shl %2, 2:i32
%4 = add 3144:i32, %3
%5 = eq %0, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = ult %8, 16:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13 = block 2
%14:i32 = var
%15 = ult %14, 11:i32
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18 = add %14, 11:i32
%19 = and %18, -8:i32
%20 = phi %13, 16:i32, %19
%21 = add %12, %20
%22 = ult %12, %21
%23:i32 = var
%24 = eq %23, 0:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27 = ult %0, %20
%28:i32 = var
pc %7 1
pc %11 1
pc %22 1
pc %26 1
pc %27 1
pc %28 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl 1:i32, %1
%3 = eq %0, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult %6, 16:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = ult %12, 11:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16 = add %12, 11:i32
%17 = and %16, -8:i32
%18 = phi %11, 16:i32, %17
%19 = add %10, %18
%20 = ult %10, %19
%21:i32 = var
%22 = eq %21, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = ult %0, %18
%26 = ult %12, 245:i32
pc %5 1
pc %9 1
pc %20 1
pc %24 1
pc %25 1
pc %26 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl 1:i32, %1 (hasExternalUses)
%3:i32 = var
%4 = and %2, %3
%5 = eq %0, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = ult %8, 16:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13 = block 2
%14:i32 = var
%15 = ult %14, 11:i32
blockpc %13 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %13 1 %17 1
%18 = add %14, 11:i32
%19 = and %18, -8:i32
%20 = phi %13, 16:i32, %19
%21 = add %12, %20
%22 = ult %12, %21
%23:i32 = var
%24 = eq %23, 0:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27 = ult %0, %20
%28:i32 = var
pc %7 1
pc %11 1
pc %22 1
pc %26 1
pc %27 1
pc %28 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl 1:i32, %1 (hasExternalUses)
%3:i32 = var
%4 = and %2, %3
%5 = eq %4, 0:i32
%6 = eq %0, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9:i32 = var
%10 = ult %9, 16:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13:i32 = var
%14 = block 2
%15:i32 = var
%16 = ult %15, 11:i32
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19 = add %15, 11:i32
%20 = and %19, -8:i32
%21 = phi %14, 16:i32, %20
%22 = add %13, %21
%23 = ult %13, %22
%24:i32 = var
%25 = eq %24, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
%29:i32 = var
pc %8 1
pc %12 1
pc %23 1
pc %27 1
pc %28 1
pc %29 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl 1:i32, %1 (hasExternalUses)
%3:i32 = var
%4 = or %2, %3
%5 = and %2, %3
%6 = eq %5, 0:i32
%7 = eq %0, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ult %10, 16:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14:i32 = var
%15 = block 2
%16:i32 = var
%17 = ult %16, 11:i32
blockpc %15 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %15 1 %19 1
%20 = add %16, 11:i32
%21 = and %20, -8:i32
%22 = phi %15, 16:i32, %21
%23 = add %14, %22
%24 = ult %14, %23
%25:i32 = var
%26 = eq %25, 0:i32
%27:i32 = zext %26
%28 = eq %27, 0:i32
%29:i32 = var
%30:i32 = var
pc %6 1
pc %9 1
pc %13 1
pc %24 1
pc %28 1
pc %29 1
pc %30 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl %1, 1:i32
%3 = shl %2, 2:i32
%4 = add 3144:i32, %3 (hasExternalUses)
%5 = add %4, 8:i32
%6 = shl 1:i32, %1
%7:i32 = var
%8 = and %6, %7
%9 = eq %8, 0:i32
%10 = eq %0, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13:i32 = var
%14 = ult %13, 16:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = ult %19, 11:i32
blockpc %18 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %18 1 %22 1
%23 = add %19, 11:i32
%24 = and %23, -8:i32
%25 = phi %18, 16:i32, %24
%26 = add %17, %25
%27 = ult %17, %26
%28:i32 = var
%29:i32 = var
%30:i32 = var
pc %9 1
pc %12 1
pc %16 1
pc %27 1
pc %28 1
pc %29 1
pc %30 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32 (hasExternalUses)
%2 = shl %1, 1:i32
%3 = shl %2, 2:i32
%4 = add 3144:i32, %3 (hasExternalUses)
%5 = add %4, 8:i32
%6 = shl 1:i32, %1
%7:i32 = var
%8 = and %6, %7
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12 = eq %0, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = ult %15, 16:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = block 2
%21:i32 = var
%22 = ult %21, 11:i32
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25 = add %21, 11:i32
%26 = and %25, -8:i32
%27 = phi %20, 16:i32, %26
%28 = add %19, %27
%29 = ult %19, %28
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %11 1
pc %14 1
pc %18 1
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %5


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = lshr %1, 3:i32 (hasExternalUses)
%3 = shl %2, 1:i32
%4 = shl %3, 2:i32
%5 = add 3144:i32, %4 (hasExternalUses)
%6:i32 = var
%7 = phi %0, %5, %6
%8 = add %7, 12:i32
%9 = shl 1:i32, %2
%10:i32 = var
%11 = and %9, %10
%12 = eq %11, 0:i32
blockpc %0 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %0 1 %14 1
%15 = eq %1, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18:i32 = var
%19 = ult %18, 16:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22:i32 = var
%23 = block 2
%24:i32 = var
%25 = ult %24, 11:i32
blockpc %23 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %23 1 %27 1
%28:i32 = var
%29 = phi %23, 16:i32, %28
%30 = add %22, %29
%31 = ult %22, %30
%32:i32 = var
%33:i32 = var
%34:i32 = var
pc %17 1
pc %21 1
pc %31 1
pc %32 1
pc %33 1
pc %34 1
infer %8


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult %6, 16:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = ult %12, 11:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16 = add %12, 11:i32
%17 = and %16, -8:i32
%18 = phi %11, 16:i32, %17
%19 = add %10, %18
%20 = ult %10, %19
%21:i32 = var
%22 = eq %21, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = ult %2, %18
%26 = ult %12, 245:i32
pc %5 1
pc %9 1
pc %20 1
pc %24 1
pc %25 1
pc %26 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult %6, 16:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = ult %12, 11:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16 = add %12, 11:i32
%17 = and %16, -8:i32
%18 = phi %11, 16:i32, %17
%19 = add %10, %18
%20 = ult %10, %19
%21:i32 = var
%22 = eq %21, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = ult %2, %18
%26 = ult %12, 245:i32
pc %5 1
pc %9 1
pc %20 1
pc %24 1
pc %25 1
pc %26 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2 = block 2
%3:i32 = var
%4 = ult %3, 11:i32
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7 = add %3, 11:i32
%8 = and %7, -8:i32
%9 = phi %2, 16:i32, %8
%10 = add %0, %9
%11 = ult %0, %10
%12:i32 = var
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16:i32 = var
%17 = ult %16, %9
%18 = ult %3, 245:i32
pc %11 1
pc %15 1
pc %17 1
pc %18 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = ult -65:i32, %0
%2 = ult %0, 245:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32
%2 = ult -65:i32, %0
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5 = ult %0, 245:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
pc %4 1
pc %7 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = and %1, -8:i32
%3 = ult -65:i32, %0
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = ult %0, 245:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %5 1
pc %8 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = ult -65:i32, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = ult %2, 245:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %5 1
pc %8 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = and %1, -8:i32 (hasExternalUses)
%3 = sub 0:i32, %2
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = ult -65:i32, %0
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = ult %0, 245:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
pc %7 1
pc %10 1
pc %13 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = ult -65:i32, %0
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = ult %0, 245:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %6 1
pc %9 1
pc %12 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = eq %2, 0:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = ult -65:i32, %0
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = ult %0, 245:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
pc %7 1
pc %10 1
pc %13 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = and %1, -8:i32 (hasExternalUses)
%3 = ult 16777215:i32, %2
%4 = lshr %1, 8:i32
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12 = ult -65:i32, %0
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = ult %0, 245:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
pc %7 1
pc %11 1
pc %14 1
pc %17 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = and %1, -8:i32
%5 = ult 16777215:i32, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = eq %2, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = ult -65:i32, %0
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18 = ult %0, 245:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
pc %7 1
pc %10 1
pc %14 1
pc %17 1
pc %20 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %1, -8:i32
%6 = ult 16777215:i32, %5
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9 = eq %2, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16 = ult -65:i32, %0
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19 = ult %0, 245:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
pc %8 1
pc %11 1
pc %15 1
pc %18 1
pc %21 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32
%6 = and %1, -8:i32
%7 = ult 16777215:i32, %6
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = eq %2, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13:i32 = var
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17 = ult -65:i32, %0
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = ult %0, 245:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
pc %9 1
pc %12 1
pc %16 1
pc %19 1
pc %22 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32 (hasExternalUses)
%6 = shl %2, %5
%7 = and %1, -8:i32
%8 = ult 16777215:i32, %7
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = eq %2, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14:i32 = var
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18 = ult -65:i32, %0
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21 = ult %0, 245:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
pc %10 1
pc %13 1
pc %17 1
pc %20 1
pc %23 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32 (hasExternalUses)
%6 = shl %2, %5 (hasExternalUses)
%7 = add %6, 520192:i32
%8 = and %1, -8:i32
%9 = ult 16777215:i32, %8
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12 = eq %2, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19 = ult -65:i32, %0
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = ult %0, 245:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
pc %11 1
pc %14 1
pc %18 1
pc %21 1
pc %24 1
infer %7


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32 (hasExternalUses)
%6 = shl %2, %5 (hasExternalUses)
%7 = add %6, 520192:i32
%8 = lshr %7, 16:i32
%9 = and %1, -8:i32
%10 = ult 16777215:i32, %9
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13 = eq %2, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16:i32 = var
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = ult -65:i32, %0
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = ult %0, 245:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
pc %12 1
pc %15 1
pc %19 1
pc %22 1
pc %25 1
infer %8


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32 (hasExternalUses)
%6 = shl %2, %5 (hasExternalUses)
%7 = add %6, 520192:i32
%8 = lshr %7, 16:i32
%9 = and %8, 4:i32
%10 = and %1, -8:i32
%11 = ult 16777215:i32, %10
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = eq %2, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21 = ult -65:i32, %0
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24 = ult %0, 245:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
pc %13 1
pc %16 1
pc %20 1
pc %23 1
pc %26 1
infer %9


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32 (hasExternalUses)
%6 = shl %2, %5
%7 = add %6, 520192:i32
%8 = lshr %7, 16:i32
%9 = and %8, 4:i32 (hasExternalUses)
%10 = shl %6, %9
%11 = and %1, -8:i32
%12 = ult 16777215:i32, %11
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = eq %2, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18:i32 = var
%19 = eq %18, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = ult -65:i32, %0
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = ult %0, 245:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
pc %14 1
pc %17 1
pc %21 1
pc %24 1
pc %27 1
infer %10


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32 (hasExternalUses)
%6 = shl %2, %5
%7 = add %6, 520192:i32
%8 = lshr %7, 16:i32
%9 = and %8, 4:i32 (hasExternalUses)
%10 = shl %6, %9 (hasExternalUses)
%11 = add %10, 245760:i32
%12 = and %1, -8:i32
%13 = ult 16777215:i32, %12
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16 = eq %2, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = eq %19, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = ult -65:i32, %0
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26 = ult %0, 245:i32
%27:i32 = zext %26
%28 = eq %27, 0:i32
pc %15 1
pc %18 1
pc %22 1
pc %25 1
pc %28 1
infer %11


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32 (hasExternalUses)
%6 = shl %2, %5
%7 = add %6, 520192:i32
%8 = lshr %7, 16:i32
%9 = and %8, 4:i32 (hasExternalUses)
%10 = shl %6, %9 (hasExternalUses)
%11 = add %10, 245760:i32
%12 = lshr %11, 16:i32
%13 = and %1, -8:i32
%14 = ult 16777215:i32, %13
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17 = eq %2, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = eq %20, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24 = ult -65:i32, %0
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27 = ult %0, 245:i32
%28:i32 = zext %27
%29 = eq %28, 0:i32
pc %16 1
pc %19 1
pc %23 1
pc %26 1
pc %29 1
infer %12


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32 (hasExternalUses)
%6 = shl %2, %5
%7 = add %6, 520192:i32
%8 = lshr %7, 16:i32
%9 = and %8, 4:i32 (hasExternalUses)
%10 = shl %6, %9 (hasExternalUses)
%11 = add %10, 245760:i32
%12 = lshr %11, 16:i32
%13 = and %12, 2:i32
%14 = and %1, -8:i32
%15 = ult 16777215:i32, %14
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18 = eq %2, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = eq %21, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = ult -65:i32, %0
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28 = ult %0, 245:i32
%29:i32 = zext %28
%30 = eq %29, 0:i32
pc %17 1
pc %20 1
pc %24 1
pc %27 1
pc %30 1
infer %13


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32
%6 = shl %2, %5 (hasExternalUses)
%7 = add %6, 520192:i32
%8 = lshr %7, 16:i32
%9 = and %8, 4:i32 (hasExternalUses)
%10 = or %9, %5
%11 = and %1, -8:i32
%12 = ult 16777215:i32, %11
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = eq %2, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18:i32 = var
%19 = eq %18, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = ult -65:i32, %0
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = ult %0, 245:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
pc %14 1
pc %17 1
pc %21 1
pc %24 1
pc %27 1
infer %10


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32
%6 = shl %2, %5
%7 = add %6, 520192:i32
%8 = lshr %7, 16:i32
%9 = and %8, 4:i32
%10 = or %9, %5
%11 = shl %6, %9 (hasExternalUses)
%12 = add %11, 245760:i32
%13 = lshr %12, 16:i32
%14 = and %13, 2:i32 (hasExternalUses)
%15 = or %10, %14
%16 = and %1, -8:i32
%17 = ult 16777215:i32, %16
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = eq %2, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = eq %23, 0:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27 = ult -65:i32, %0
%28:i32 = zext %27
%29 = eq %28, 0:i32
%30:i32 = var
pc %19 1
pc %22 1
pc %26 1
pc %29 1
pc %30 1
infer %15


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32 (hasExternalUses)
%6 = shl %2, %5
%7 = add %6, 520192:i32
%8 = lshr %7, 16:i32
%9 = and %8, 4:i32 (hasExternalUses)
%10 = shl %6, %9
%11 = add %10, 245760:i32
%12 = lshr %11, 16:i32
%13 = and %12, 2:i32 (hasExternalUses)
%14 = shl %10, %13
%15 = and %1, -8:i32
%16 = ult 16777215:i32, %15
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19 = eq %2, 0:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22:i32 = var
%23 = eq %22, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26 = ult -65:i32, %0
%27:i32 = zext %26
%28 = eq %27, 0:i32
%29 = ult %0, 245:i32
%30:i32 = zext %29
%31 = eq %30, 0:i32
pc %18 1
pc %21 1
pc %25 1
pc %28 1
pc %31 1
infer %14


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3:i32 = var
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32
%6 = shl %2, %5
%7 = add %6, 520192:i32
%8 = lshr %7, 16:i32
%9 = and %8, 4:i32
%10 = or %9, %5
%11 = shl %6, %9 (hasExternalUses)
%12 = add %11, 245760:i32
%13 = lshr %12, 16:i32
%14 = and %13, 2:i32 (hasExternalUses)
%15 = or %10, %14
%16 = sub 14:i32, %15
%17 = and %1, -8:i32
%18 = ult 16777215:i32, %17
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21 = eq %2, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24:i32 = var
%25 = eq %24, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28 = ult -65:i32, %0
%29:i32 = zext %28
%30 = eq %29, 0:i32
%31:i32 = var
pc %20 1
pc %23 1
pc %27 1
pc %30 1
pc %31 1
infer %16


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = lshr %1, 8:i32 (hasExternalUses)
%3 = add %2, 1048320:i32
%4 = lshr %3, 16:i32
%5 = and %4, 8:i32 (hasExternalUses)
%6 = shl %2, %5
%7 = add %6, 520192:i32
%8 = lshr %7, 16:i32
%9 = and %8, 4:i32 (hasExternalUses)
%10 = shl %6, %9
%11 = add %10, 245760:i32
%12 = lshr %11, 16:i32
%13 = and %12, 2:i32 (hasExternalUses)
%14 = shl %10, %13
%15 = lshr %14, 15:i32
%16 = and %1, -8:i32
%17 = ult 16777215:i32, %16
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = eq %2, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = eq %23, 0:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27 = ult -65:i32, %0
%28:i32 = zext %27
%29 = eq %28, 0:i32
%30:i32 = var
pc %19 1
pc %22 1
pc %26 1
pc %29 1
pc %30 1
infer %15


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 8:i32
%4 = shl %1, %3
%5 = add %4, 520192:i32
%6 = lshr %5, 16:i32
%7 = and %6, 4:i32
%8 = or %7, %3
%9 = shl %4, %7
%10 = add %9, 245760:i32
%11 = lshr %10, 16:i32
%12 = and %11, 2:i32
%13 = or %8, %12
%14 = sub 14:i32, %13
%15 = shl %9, %12
%16 = lshr %15, 15:i32
%17 = add %14, %16
%18 = and %0, -8:i32
%19 = ult 16777215:i32, %18
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = eq %1, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25:i32 = var
%26 = eq %25, 0:i32
%27:i32 = zext %26
%28 = eq %27, 0:i32
%29:i32 = var
%30 = ult -65:i32, %29
%31:i32 = zext %30
%32 = eq %31, 0:i32
%33:i32 = var
pc %21 1
pc %24 1
pc %28 1
pc %32 1
pc %33 1
infer %17


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3 = add %2, 520192:i32
%4 = lshr %3, 16:i32
%5 = and %4, 4:i32
%6 = or %5, %1
%7 = shl %2, %5
%8 = add %7, 245760:i32
%9 = lshr %8, 16:i32
%10 = and %9, 2:i32
%11 = or %6, %10
%12 = sub 14:i32, %11
%13 = shl %7, %10
%14 = lshr %13, 15:i32
%15 = add %12, %14 (hasExternalUses)
%16 = add %15, 7:i32
%17:i32 = var
%18 = add %17, 11:i32
%19 = and %18, -8:i32
%20 = ult 16777215:i32, %19
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = eq %0, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27 = eq %26, 0:i32
%28:i32 = zext %27
%29 = eq %28, 0:i32
%30:i32 = var
%31:i32 = var
pc %22 1
pc %25 1
pc %29 1
pc %30 1
pc %31 1
infer %16


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = add %3, 520192:i32
%5 = lshr %4, 16:i32
%6 = and %5, 4:i32
%7:i32 = var
%8 = add %7, 1048320:i32
%9 = lshr %8, 16:i32
%10 = and %9, 8:i32 (hasExternalUses)
%11 = or %6, %10
%12 = shl %3, %6
%13 = add %12, 245760:i32
%14 = lshr %13, 16:i32
%15 = and %14, 2:i32
%16 = or %11, %15
%17 = sub 14:i32, %16
%18 = shl %12, %15
%19 = lshr %18, 15:i32
%20 = add %17, %19 (hasExternalUses)
%21 = add %20, 7:i32
%22 = lshr %2, %21
%23 = ult 16777215:i32, %2
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26 = eq %7, 0:i32
%27:i32 = zext %26
%28 = eq %27, 0:i32
%29:i32 = var
%30 = eq %29, 0:i32
%31:i32 = zext %30
%32 = eq %31, 0:i32
%33:i32 = var
%34:i32 = var
pc %25 1
pc %28 1
pc %32 1
pc %33 1
pc %34 1
infer %22


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = lshr %3, 16:i32
%5 = and %4, 4:i32 (hasExternalUses)
%6:i32 = var
%7 = lshr %6, 16:i32
%8 = and %7, 8:i32 (hasExternalUses)
%9 = or %5, %8
%10:i32 = var
%11 = add %10, 245760:i32
%12 = lshr %11, 16:i32
%13 = and %12, 2:i32
%14 = or %9, %13
%15 = sub 14:i32, %14
%16 = shl %10, %13
%17 = lshr %16, 15:i32
%18 = add %15, %17 (hasExternalUses)
%19 = add %18, 7:i32
%20 = lshr %2, %19
%21 = and %20, 1:i32
%22 = ult 16777215:i32, %2
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = lshr %1, 8:i32
%26 = eq %25, 0:i32
%27:i32 = zext %26
%28 = eq %27, 0:i32
%29:i32 = var
%30 = eq %29, 0:i32
%31:i32 = zext %30
%32 = eq %31, 0:i32
%33:i32 = var
%34:i32 = var
pc %24 1
pc %28 1
pc %32 1
pc %33 1
pc %34 1
infer %21


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3 = add %2, 520192:i32
%4 = lshr %3, 16:i32
%5 = and %4, 4:i32
%6 = or %5, %1
%7 = shl %2, %5
%8 = add %7, 245760:i32
%9 = lshr %8, 16:i32
%10 = and %9, 2:i32
%11 = or %6, %10
%12 = sub 14:i32, %11
%13 = shl %7, %10
%14 = lshr %13, 15:i32
%15 = add %12, %14 (hasExternalUses)
%16 = shl %15, 1:i32
%17:i32 = var
%18 = add %17, 11:i32
%19 = and %18, -8:i32
%20 = ult 16777215:i32, %19
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = eq %0, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27 = eq %26, 0:i32
%28:i32 = zext %27
%29 = eq %28, 0:i32
%30:i32 = var
%31:i32 = var
pc %22 1
pc %25 1
pc %29 1
pc %30 1
pc %31 1
infer %16


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, 4:i32
%5:i32 = var
%6 = and %5, 8:i32
%7 = or %4, %6
%8:i32 = var
%9 = lshr %8, 16:i32
%10 = and %9, 2:i32
%11 = or %7, %10
%12 = sub 14:i32, %11
%13:i32 = var
%14 = shl %13, %6 (hasExternalUses)
%15 = shl %14, %4 (hasExternalUses)
%16 = shl %15, %10
%17 = lshr %16, 15:i32
%18 = add %12, %17
%19 = add %18, 7:i32
%20 = lshr %2, %19
%21 = and %20, 1:i32
%22 = shl %18, 1:i32
%23 = or %21, %22
%24 = ult 16777215:i32, %2
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27 = eq %13, 0:i32
%28:i32 = zext %27
%29 = eq %28, 0:i32
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %26 1
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %23


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32 (hasExternalUses)
%4 = and %3, -8:i32 (hasExternalUses)
%5:i32 = var
%6 = sub 14:i32, %5
%7:i32 = var
%8 = lshr %7, 15:i32
%9 = add %6, %8
%10 = add %9, 7:i32
%11 = lshr %4, %10
%12 = and %11, 1:i32
%13 = shl %9, 1:i32
%14 = or %12, %13 (hasExternalUses)
%15 = phi %1, 31:i32, %14
%16 = phi %0, 0:i32, %15
%17 = shl %16, 2:i32
%18 = lshr %3, 8:i32
%19 = eq %18, 0:i32
blockpc %0 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %0 1 %21 1
%22 = ult 16777215:i32, %4
blockpc %1 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %1 1 %24 1
%25:i32 = var
%26 = eq %25, 0:i32
%27:i32 = zext %26
%28 = eq %27, 0:i32
%29:i32 = var
%30:i32 = var
pc %28 1
pc %29 1
pc %30 1
infer %17


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32 (hasExternalUses)
%4 = and %3, -8:i32 (hasExternalUses)
%5:i32 = var
%6:i32 = var
%7 = add %5, %6
%8 = add %7, 7:i32
%9 = lshr %4, %8
%10 = and %9, 1:i32
%11 = shl %7, 1:i32
%12 = or %10, %11 (hasExternalUses)
%13 = phi %1, 31:i32, %12
%14 = phi %0, 0:i32, %13
%15 = shl %14, 2:i32
%16 = add 3408:i32, %15
%17 = lshr %3, 8:i32
%18 = eq %17, 0:i32
blockpc %0 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %0 1 %20 1
%21 = ult 16777215:i32, %4
blockpc %1 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %1 1 %23 1
%24:i32 = var
%25 = eq %24, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
%29:i32 = var
pc %27 1
pc %28 1
pc %29 1
infer %16


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult -65:i32, %6
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = ult %6, 245:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
pc %5 1
pc %9 1
pc %12 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32 (hasExternalUses)
%4 = and %3, -8:i32 (hasExternalUses)
%5:i32 = var
%6 = sub 14:i32, %5
%7:i32 = var
%8 = lshr %7, 15:i32
%9 = add %6, %8
%10 = add %9, 7:i32
%11 = lshr %4, %10
%12 = and %11, 1:i32
%13 = shl %9, 1:i32
%14 = or %12, %13 (hasExternalUses)
%15 = phi %1, 31:i32, %14
%16 = phi %0, 0:i32, %15
%17 = lshr %16, 1:i32
%18 = lshr %3, 8:i32
%19 = eq %18, 0:i32
blockpc %0 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %0 1 %21 1
%22 = ult 16777215:i32, %4
blockpc %1 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %1 1 %24 1
%25:i32 = var
%26 = eq %25, 0:i32
%27:i32 = zext %26
%28 = eq %27, 0:i32
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %17


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32 (hasExternalUses)
%4 = and %3, -8:i32 (hasExternalUses)
%5:i32 = var
%6:i32 = var
%7 = add %5, %6
%8 = add %7, 7:i32
%9 = lshr %4, %8
%10 = and %9, 1:i32
%11 = shl %7, 1:i32
%12 = or %10, %11 (hasExternalUses)
%13 = phi %1, 31:i32, %12
%14 = phi %0, 0:i32, %13
%15 = lshr %14, 1:i32
%16 = sub 25:i32, %15
%17 = lshr %3, 8:i32
%18 = eq %17, 0:i32
blockpc %0 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %0 1 %20 1
%21 = ult 16777215:i32, %4
blockpc %1 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %1 1 %23 1
%24:i32 = var
%25 = eq %24, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
%29:i32 = var
%30:i32 = var
pc %27 1
pc %28 1
pc %29 1
pc %30 1
infer %16


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = add %2, 11:i32 (hasExternalUses)
%4 = and %3, -8:i32 (hasExternalUses)
%5:i32 = var
%6 = sub 14:i32, %5
%7:i32 = var
%8 = lshr %7, 15:i32
%9 = add %6, %8
%10 = add %9, 7:i32
%11 = lshr %4, %10
%12 = and %11, 1:i32
%13 = shl %9, 1:i32
%14 = or %12, %13 (hasExternalUses)
%15 = phi %1, 31:i32, %14
%16 = phi %0, 0:i32, %15
%17 = eq %16, 31:i32
%18 = lshr %3, 8:i32
%19 = eq %18, 0:i32
blockpc %0 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %0 1 %21 1
%22 = ult 16777215:i32, %4
blockpc %1 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %1 1 %24 1
%25:i32 = var
%26 = eq %25, 0:i32
%27:i32 = zext %26
%28 = eq %27, 0:i32
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %17


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 11:i32 (hasExternalUses)
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = lshr %2, %6
%8 = and %7, 1:i32
%9:i32 = var
%10:i32 = var
%11 = add %9, %10 (hasExternalUses)
%12 = shl %11, 1:i32
%13 = or %8, %12 (hasExternalUses)
%14 = phi %5, 31:i32, %13
%15 = phi %4, 0:i32, %14
%16 = lshr %15, 1:i32
%17 = sub 25:i32, %16
%18 = phi %3, 0:i32, %17
%19 = shl %2, %18
%20 = eq %15, 31:i32
blockpc %3 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %3 1 %22 1
%23 = lshr %1, 8:i32
%24 = eq %23, 0:i32
blockpc %4 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %4 1 %26 1
%27:i32 = var
blockpc %5 0 %27 1
%28:i32 = var
blockpc %5 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ult -65:i32, %10
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = ult %10, 245:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
pc %5 1
pc %9 1
pc %13 1
pc %16 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ult -65:i32, %10
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = ult %10, 245:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
pc %5 1
pc %9 1
pc %13 1
pc %16 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2:i32 = var
%3 = add %2, 11:i32 (hasExternalUses)
%4 = and %3, -8:i32 (hasExternalUses)
%5 = sub %1, %4
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = ult -65:i32, %2
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17 = ult %2, 245:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
pc %9 1
pc %13 1
pc %16 1
pc %19 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2:i32 = var
%3 = add %2, 11:i32 (hasExternalUses)
%4 = and %3, -8:i32 (hasExternalUses)
%5 = sub %1, %4 (hasExternalUses)
%6:i32 = var
%7 = ult %5, %6
%8:i32 = var
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12:i32 = var
%13 = eq %12, 0:i32
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16 = ult -65:i32, %2
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19 = ult %2, 245:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
pc %11 1
pc %15 1
pc %18 1
pc %21 1
infer %7


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2:i32 = var
%3 = add %2, 11:i32 (hasExternalUses)
%4 = and %3, -8:i32 (hasExternalUses)
%5 = sub %1, %4 (hasExternalUses)
%6 = eq %5, 0:i32
%7:i32 = var
%8 = ult %5, %7
%9:i32 = var
%10 = eq %9, 0:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13:i32 = var
%14 = eq %13, 0:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
%17 = ult -65:i32, %2
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = ult %2, 245:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
pc %8 1
pc %12 1
pc %16 1
pc %19 1
pc %22 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ult -65:i32, %10
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = ult %10, 245:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
pc %5 1
pc %9 1
pc %13 1
pc %16 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ult -65:i32, %10
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = ult %10, 245:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
pc %5 1
pc %9 1
pc %13 1
pc %16 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 31:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ult -65:i32, %10
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = ult %10, 245:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
pc %5 1
pc %9 1
pc %13 1
pc %16 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 31:i32
%2 = shl %1, 2:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = ult -65:i32, %11
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = ult %11, 245:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
pc %6 1
pc %10 1
pc %14 1
pc %17 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = lshr %2, 31:i32
%4 = shl %3, 2:i32
%5 = add %1, %4
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = eq %10, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14:i32 = var
%15 = ult -65:i32, %14
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18 = ult %14, 245:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
pc %9 1
pc %13 1
pc %17 1
pc %20 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ult -65:i32, %10
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = ult %10, 245:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
pc %5 1
pc %9 1
pc %13 1
pc %16 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = eq %0, %1
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = ult -65:i32, %11
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = ult %11, 245:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
pc %6 1
pc %10 1
pc %14 1
pc %17 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3:i32 = var
%4 = eq %0, %3
%5:i32 = zext %4
%6 = or %2, %5
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = ult -65:i32, %15
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19 = ult %15, 245:i32
%20:i32 = zext %19
%21 = eq %20, 0:i32
pc %10 1
pc %14 1
pc %18 1
pc %21 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = shl %0, 1:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ult -65:i32, %10
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = ult %10, 245:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
pc %5 1
pc %9 1
pc %13 1
pc %16 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ult -65:i32, %10
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = ult %10, 245:i32
%15:i32 = zext %14
%16 = eq %15, 0:i32
pc %5 1
pc %9 1
pc %13 1
pc %16 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = phi %0, 65:i32, 61:i32
%2 = eq %1, 61:i32
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = ult -65:i32, %7
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = ult %7, 245:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
pc %6 1
pc %10 1
pc %13 1
infer %2


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = phi %2, 0:i32, %6
%8 = phi %0, %1, %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = eq %10, 0:i32
blockpc %2 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %2 1 %13 1
%14 = eq %5, 0:i32
%15:i32 = zext %14
%16:i32 = var
%17 = eq %5, %16
%18:i32 = zext %17
%19 = or %15, %18
%20 = ne %19, 0:i32
blockpc %3 0 %20 1
%21 = eq %19, 0:i32
blockpc %3 1 %21 1
%22 = phi %0, 65:i32, 61:i32
%23 = eq %22, 61:i32
%24:i32 = var
%25 = eq %24, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
%29:i32 = var
pc %23 1
pc %27 1
pc %28 1
pc %29 1
infer %9


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = phi %2, 0:i32, %6
%8 = phi %0, %1, %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = eq %10, 0:i32
blockpc %2 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %2 1 %13 1
%14:i32 = var
%15 = and %14, -8:i32
%16:i32 = var
%17 = add %16, 11:i32
%18 = and %17, -8:i32
%19 = sub %15, %18
%20:i32 = var
%21 = ult %19, %20
blockpc %3 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %3 1 %23 1
%24 = phi %0, 65:i32, 61:i32
%25 = eq %24, 61:i32
%26:i32 = var
%27:i32 = var
%28:i32 = var
pc %25 1
pc %26 1
pc %27 1
pc %28 1
infer %9


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = phi %2, 0:i32, %6
%8 = phi %0, %1, %7
%9 = eq %8, 0:i32
%10:i32 = zext %9
%11:i32 = var
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = phi %12, %13, %14
%16 = phi %2, 0:i32, %15
%17 = phi %0, %11, %16
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = and %10, %19
%21:i32 = var
%22 = eq %21, 0:i32
blockpc %2 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %2 1 %24 1
%25 = eq %5, 0:i32
%26:i32 = zext %25
%27:i32 = var
%28 = eq %5, %27
%29:i32 = zext %28
%30 = or %26, %29
%31 = ne %30, 0:i32
blockpc %3 0 %31 1
%32:i32 = var
blockpc %3 1 %32 1
%33:i32 = var
blockpc %12 0 %33 1
%34:i32 = var
blockpc %12 1 %34 1
%35:i32 = var
%36:i32 = var
%37:i32 = var
%38:i32 = var
pc %35 1
pc %36 1
pc %37 1
pc %38 1
infer %20


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7:i32 = var
%8:i32 = var
%9 = add %7, %8
%10 = add %9, 7:i32
%11 = lshr %6, %10
%12 = and %11, 1:i32
%13 = shl %9, 1:i32
%14 = or %12, %13 (hasExternalUses)
%15 = phi %3, 31:i32, %14
%16 = phi %2, 0:i32, %15
%17 = phi %0, %1, %16
%18 = shl 2:i32, %17
%19 = lshr %5, 8:i32
%20 = eq %19, 0:i32
blockpc %2 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %2 1 %22 1
%23 = ult 16777215:i32, %6
blockpc %3 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %3 1 %25 1
%26:i32 = var
%27:i32 = var
%28:i32 = var
%29:i32 = var
%30:i32 = var
pc %26 1
pc %27 1
pc %28 1
pc %29 1
pc %30 1
infer %18


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = and %4, -8:i32 (hasExternalUses)
%6:i32 = var
%7 = add %6, 7:i32
%8 = lshr %5, %7
%9 = and %8, 1:i32
%10 = shl %6, 1:i32
%11 = or %9, %10 (hasExternalUses)
%12 = phi %3, 31:i32, %11
%13 = phi %2, 0:i32, %12
%14 = phi %0, %1, %13
%15 = shl 2:i32, %14 (hasExternalUses)
%16 = sub 0:i32, %15
%17 = lshr %4, 8:i32
%18 = eq %17, 0:i32
blockpc %2 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %2 1 %20 1
%21 = ult 16777215:i32, %5
blockpc %3 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %3 1 %23 1
%24:i32 = var
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32:i32 = var
%33 = phi %28, %31, %32
%34 = phi %25, 0:i32, %33
%35 = phi %0, %24, %34
%36 = eq %35, 0:i32
%37:i32 = zext %36
%38:i32 = var
%39 = add %38, 0:i32; Replace bad zext operation
%40 = and %37, %39
%41 = ne %40, 0:i32
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
pc %41 1
pc %42 1
pc %43 1
pc %44 1
pc %45 1
infer %16


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = and %4, -8:i32 (hasExternalUses)
%6:i32 = var
%7 = add %6, 7:i32
%8 = lshr %5, %7
%9 = and %8, 1:i32
%10 = shl %6, 1:i32
%11 = or %9, %10 (hasExternalUses)
%12 = phi %3, 31:i32, %11
%13 = phi %2, 0:i32, %12
%14 = phi %0, %1, %13
%15 = shl 2:i32, %14
%16 = sub 0:i32, %15
%17 = or %15, %16
%18 = lshr %4, 8:i32
%19 = eq %18, 0:i32
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22 = ult 16777215:i32, %5
blockpc %3 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %3 1 %24 1
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %29, %32, %33
%35 = phi %26, 0:i32, %34
%36 = phi %0, %25, %35
%37 = eq %36, 0:i32
%38:i32 = zext %37
%39:i32 = var
%40 = add %39, 0:i32; Replace bad zext operation
%41 = and %38, %40
%42 = ne %41, 0:i32
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
infer %17


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = lshr %4, %5
%7 = and %6, 1:i32
%8:i32 = var
%9:i32 = var
%10 = add %8, %9 (hasExternalUses)
%11 = shl %10, 1:i32
%12 = or %7, %11 (hasExternalUses)
%13 = phi %3, 31:i32, %12
%14 = phi %2, 0:i32, %13
%15 = phi %0, %1, %14
%16 = shl 2:i32, %15
%17 = sub 0:i32, %16
%18 = or %16, %17
%19:i32 = var
%20:i32 = var
%21 = phi %0, %19, %20
%22 = and %18, %21
%23:i32 = var
%24 = add %23, 11:i32
%25 = lshr %24, 8:i32
%26 = eq %25, 0:i32
blockpc %2 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %2 1 %28 1
%29:i32 = var
blockpc %3 0 %29 1
%30:i32 = var
blockpc %3 1 %30 1
%31:i32 = var
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35:i32 = var
pc %31 1
pc %32 1
pc %33 1
pc %34 1
pc %35 1
infer %22


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = and %4, 1:i32
%6:i32 = var
%7 = shl %6, 1:i32
%8 = or %5, %7 (hasExternalUses)
%9 = phi %3, 31:i32, %8
%10 = phi %2, 0:i32, %9
%11 = phi %0, %1, %10
%12 = shl 2:i32, %11
%13 = sub 0:i32, %12
%14 = or %12, %13
%15:i32 = var
%16:i32 = var
%17 = phi %0, %15, %16
%18 = and %14, %17 (hasExternalUses)
%19 = eq %18, 0:i32
%20:i32 = var
%21 = add %20, 11:i32
%22 = lshr %21, 8:i32
%23 = eq %22, 0:i32
blockpc %2 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %2 1 %25 1
%26 = and %21, -8:i32
%27 = ult 16777215:i32, %26
blockpc %3 0 %27 1
%28:i32 = var
blockpc %3 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %19


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = and %4, 1:i32
%6:i32 = var
%7 = shl %6, 1:i32
%8 = or %5, %7 (hasExternalUses)
%9 = phi %3, 31:i32, %8
%10 = phi %2, 0:i32, %9
%11 = phi %0, %1, %10
%12 = shl 2:i32, %11
%13 = sub 0:i32, %12
%14 = or %12, %13
%15:i32 = var
%16:i32 = var
%17 = phi %0, %15, %16
%18 = and %14, %17 (hasExternalUses)
%19 = sub 0:i32, %18
%20:i32 = var
%21 = add %20, 11:i32
%22 = lshr %21, 8:i32
%23 = eq %22, 0:i32
blockpc %2 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %2 1 %25 1
%26 = and %21, -8:i32
%27 = ult 16777215:i32, %26
blockpc %3 0 %27 1
%28:i32 = var
blockpc %3 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %19


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = and %4, 1:i32
%6:i32 = var
%7 = shl %6, 1:i32
%8 = or %5, %7 (hasExternalUses)
%9 = phi %3, 31:i32, %8
%10 = phi %2, 0:i32, %9
%11 = phi %0, %1, %10
%12 = shl 2:i32, %11
%13 = sub 0:i32, %12
%14 = or %12, %13
%15:i32 = var
%16:i32 = var
%17 = phi %0, %15, %16
%18 = and %14, %17 (hasExternalUses)
%19 = sub 0:i32, %18
%20 = and %18, %19
%21:i32 = var
%22 = add %21, 11:i32
%23 = lshr %22, 8:i32
%24 = eq %23, 0:i32
blockpc %2 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %2 1 %26 1
%27 = and %22, -8:i32
%28 = ult 16777215:i32, %27
blockpc %3 0 %28 1
%29:i32 = var
blockpc %3 1 %29 1
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
%34:i32 = var
pc %30 1
pc %31 1
pc %32 1
pc %33 1
pc %34 1
infer %20


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = or %4, %5 (hasExternalUses)
%7 = phi %3, 31:i32, %6
%8 = phi %2, 0:i32, %7
%9 = phi %0, %1, %8
%10 = shl 2:i32, %9
%11 = sub 0:i32, %10
%12 = or %10, %11
%13:i32 = var
%14:i32 = var
%15 = phi %0, %13, %14
%16 = and %12, %15 (hasExternalUses)
%17 = sub 0:i32, %16
%18 = and %16, %17
%19 = add %18, -1:i32
%20:i32 = var
%21 = add %20, 11:i32
%22 = lshr %21, 8:i32
%23 = eq %22, 0:i32
blockpc %2 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %2 1 %25 1
%26 = and %21, -8:i32
%27 = ult 16777215:i32, %26
blockpc %3 0 %27 1
%28:i32 = var
blockpc %3 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %19


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 31:i32, %4
%6 = phi %2, 0:i32, %5
%7 = phi %0, %1, %6
%8 = shl 2:i32, %7
%9 = sub 0:i32, %8
%10 = or %8, %9
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %12
%14 = and %10, %13 (hasExternalUses)
%15 = sub 0:i32, %14
%16 = and %14, %15
%17 = add %16, -1:i32 (hasExternalUses)
%18 = lshr %17, 12:i32
%19:i32 = var
%20 = add %19, 11:i32
%21 = lshr %20, 8:i32
%22 = eq %21, 0:i32
blockpc %2 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %2 1 %24 1
%25 = and %20, -8:i32
%26 = ult 16777215:i32, %25
blockpc %3 0 %26 1
%27:i32 = var
blockpc %3 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %18


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 31:i32, %4
%6 = phi %2, 0:i32, %5
%7 = phi %0, %1, %6
%8 = shl 2:i32, %7
%9 = sub 0:i32, %8
%10 = or %8, %9
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %12
%14 = and %10, %13 (hasExternalUses)
%15 = sub 0:i32, %14
%16 = and %14, %15
%17 = add %16, -1:i32 (hasExternalUses)
%18 = lshr %17, 12:i32
%19 = and %18, 16:i32
%20:i32 = var
%21 = add %20, 11:i32
%22 = lshr %21, 8:i32
%23 = eq %22, 0:i32
blockpc %2 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %2 1 %25 1
%26 = and %21, -8:i32
%27 = ult 16777215:i32, %26
blockpc %3 0 %27 1
%28:i32 = var
blockpc %3 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %19


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 31:i32, %4
%6 = phi %2, 0:i32, %5
%7 = phi %0, %1, %6
%8 = shl 2:i32, %7
%9 = sub 0:i32, %8
%10 = or %8, %9
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %12
%14 = and %10, %13 (hasExternalUses)
%15 = sub 0:i32, %14
%16 = and %14, %15
%17 = add %16, -1:i32
%18 = lshr %17, 12:i32
%19 = and %18, 16:i32 (hasExternalUses)
%20 = lshr %17, %19
%21:i32 = var
%22 = add %21, 11:i32
%23 = lshr %22, 8:i32
%24 = eq %23, 0:i32
blockpc %2 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %2 1 %26 1
%27 = and %22, -8:i32
%28 = ult 16777215:i32, %27
blockpc %3 0 %28 1
%29:i32 = var
blockpc %3 1 %29 1
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
%34:i32 = var
pc %30 1
pc %31 1
pc %32 1
pc %33 1
pc %34 1
infer %20


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 31:i32, %4
%6 = phi %2, 0:i32, %5
%7 = phi %0, %1, %6
%8 = shl 2:i32, %7
%9 = sub 0:i32, %8
%10 = or %8, %9
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %12
%14 = and %10, %13 (hasExternalUses)
%15 = sub 0:i32, %14
%16 = and %14, %15
%17 = add %16, -1:i32
%18 = lshr %17, 12:i32
%19 = and %18, 16:i32 (hasExternalUses)
%20 = lshr %17, %19 (hasExternalUses)
%21 = lshr %20, 5:i32
%22:i32 = var
%23 = add %22, 11:i32
%24 = lshr %23, 8:i32
%25 = eq %24, 0:i32
blockpc %2 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %2 1 %27 1
%28:i32 = var
blockpc %3 0 %28 1
%29:i32 = var
blockpc %3 1 %29 1
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
%34:i32 = var
pc %30 1
pc %31 1
pc %32 1
pc %33 1
pc %34 1
infer %21


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 31:i32, %4
%6 = phi %2, 0:i32, %5
%7 = phi %0, %1, %6
%8 = shl 2:i32, %7
%9 = sub 0:i32, %8
%10 = or %8, %9
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %12
%14 = and %10, %13 (hasExternalUses)
%15 = sub 0:i32, %14
%16 = and %14, %15
%17 = add %16, -1:i32
%18 = lshr %17, 12:i32
%19 = and %18, 16:i32 (hasExternalUses)
%20 = lshr %17, %19 (hasExternalUses)
%21 = lshr %20, 5:i32
%22 = and %21, 8:i32
%23:i32 = var
%24 = add %23, 11:i32
%25 = lshr %24, 8:i32
%26 = eq %25, 0:i32
blockpc %2 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %2 1 %28 1
%29:i32 = var
blockpc %3 0 %29 1
%30:i32 = var
blockpc %3 1 %30 1
%31:i32 = var
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35:i32 = var
pc %31 1
pc %32 1
pc %33 1
pc %34 1
pc %35 1
infer %22


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 31:i32, %4
%6 = phi %2, 0:i32, %5
%7 = phi %0, %1, %6
%8 = shl 2:i32, %7
%9 = sub 0:i32, %8
%10 = or %8, %9
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %12
%14 = and %10, %13 (hasExternalUses)
%15 = sub 0:i32, %14
%16 = and %14, %15
%17 = add %16, -1:i32
%18 = lshr %17, 12:i32
%19 = and %18, 16:i32 (hasExternalUses)
%20 = lshr %17, %19
%21 = lshr %20, 5:i32
%22 = and %21, 8:i32 (hasExternalUses)
%23 = lshr %20, %22
%24:i32 = var
%25 = add %24, 11:i32
%26 = lshr %25, 8:i32
%27 = eq %26, 0:i32
blockpc %2 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %2 1 %29 1
%30:i32 = var
blockpc %3 0 %30 1
%31:i32 = var
blockpc %3 1 %31 1
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35:i32 = var
%36:i32 = var
pc %32 1
pc %33 1
pc %34 1
pc %35 1
pc %36 1
infer %23


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 31:i32, %4
%6 = phi %2, 0:i32, %5
%7 = phi %0, %1, %6
%8 = shl 2:i32, %7
%9 = sub 0:i32, %8
%10 = or %8, %9
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %12
%14 = and %10, %13 (hasExternalUses)
%15 = sub 0:i32, %14
%16 = and %14, %15
%17 = add %16, -1:i32
%18 = lshr %17, 12:i32
%19 = and %18, 16:i32 (hasExternalUses)
%20 = lshr %17, %19
%21 = lshr %20, 5:i32
%22 = and %21, 8:i32 (hasExternalUses)
%23 = lshr %20, %22 (hasExternalUses)
%24 = lshr %23, 2:i32
%25:i32 = var
%26 = add %25, 11:i32
%27 = lshr %26, 8:i32
%28 = eq %27, 0:i32
blockpc %2 0 %28 1
%29:i32 = var
blockpc %2 1 %29 1
%30:i32 = var
blockpc %3 0 %30 1
%31:i32 = var
blockpc %3 1 %31 1
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35:i32 = var
%36:i32 = var
pc %32 1
pc %33 1
pc %34 1
pc %35 1
pc %36 1
infer %24


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 31:i32, %4
%6 = phi %2, 0:i32, %5
%7 = phi %0, %1, %6
%8 = shl 2:i32, %7
%9 = sub 0:i32, %8
%10 = or %8, %9
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %12
%14 = and %10, %13 (hasExternalUses)
%15 = sub 0:i32, %14
%16 = and %14, %15
%17 = add %16, -1:i32
%18 = lshr %17, 12:i32
%19 = and %18, 16:i32 (hasExternalUses)
%20 = lshr %17, %19
%21 = lshr %20, 5:i32
%22 = and %21, 8:i32 (hasExternalUses)
%23 = lshr %20, %22 (hasExternalUses)
%24 = lshr %23, 2:i32
%25 = and %24, 4:i32
%26:i32 = var
%27 = add %26, 11:i32
%28 = lshr %27, 8:i32
%29 = eq %28, 0:i32
blockpc %2 0 %29 1
%30:i32 = var
blockpc %2 1 %30 1
%31:i32 = var
blockpc %3 0 %31 1
%32:i32 = var
blockpc %3 1 %32 1
%33:i32 = var
%34:i32 = var
%35:i32 = var
%36:i32 = var
%37:i32 = var
pc %33 1
pc %34 1
pc %35 1
pc %36 1
pc %37 1
infer %25


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 31:i32, %4
%6 = phi %2, 0:i32, %5
%7 = phi %0, %1, %6
%8 = shl 2:i32, %7
%9 = sub 0:i32, %8
%10 = or %8, %9
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %12
%14 = and %10, %13 (hasExternalUses)
%15 = sub 0:i32, %14
%16 = and %14, %15
%17 = add %16, -1:i32
%18 = lshr %17, 12:i32
%19 = and %18, 16:i32
%20 = lshr %17, %19 (hasExternalUses)
%21 = lshr %20, 5:i32
%22 = and %21, 8:i32 (hasExternalUses)
%23 = or %22, %19
%24:i32 = var
%25 = add %24, 11:i32
%26 = lshr %25, 8:i32
%27 = eq %26, 0:i32
blockpc %2 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %2 1 %29 1
%30:i32 = var
blockpc %3 0 %30 1
%31:i32 = var
blockpc %3 1 %31 1
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35:i32 = var
%36:i32 = var
pc %32 1
pc %33 1
pc %34 1
pc %35 1
pc %36 1
infer %23


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 31:i32, %4
%6 = phi %2, 0:i32, %5
%7 = phi %0, %1, %6
%8 = shl 2:i32, %7
%9 = sub 0:i32, %8
%10 = or %8, %9
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %12
%14 = and %10, %13 (hasExternalUses)
%15 = sub 0:i32, %14
%16 = and %14, %15
%17 = add %16, -1:i32
%18 = lshr %17, 12:i32
%19 = and %18, 16:i32 (hasExternalUses)
%20 = lshr %17, %19
%21 = lshr %20, 5:i32
%22 = and %21, 8:i32 (hasExternalUses)
%23 = lshr %20, %22
%24 = lshr %23, 2:i32
%25 = and %24, 4:i32 (hasExternalUses)
%26 = lshr %23, %25
%27:i32 = var
%28 = add %27, 11:i32
%29 = lshr %28, 8:i32
%30 = eq %29, 0:i32
blockpc %2 0 %30 1
%31:i32 = var
blockpc %2 1 %31 1
%32:i32 = var
blockpc %3 0 %32 1
%33:i32 = var
blockpc %3 1 %33 1
%34:i32 = var
%35:i32 = var
%36:i32 = var
%37:i32 = var
%38:i32 = var
pc %34 1
pc %35 1
pc %36 1
pc %37 1
pc %38 1
infer %26


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 31:i32, %4
%6 = phi %2, 0:i32, %5
%7 = phi %0, %1, %6
%8 = shl 2:i32, %7
%9 = sub 0:i32, %8
%10 = or %8, %9
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %12
%14 = and %10, %13 (hasExternalUses)
%15 = sub 0:i32, %14
%16 = and %14, %15
%17 = add %16, -1:i32
%18 = lshr %17, 12:i32
%19 = and %18, 16:i32 (hasExternalUses)
%20 = lshr %17, %19
%21 = lshr %20, 5:i32
%22 = and %21, 8:i32 (hasExternalUses)
%23 = lshr %20, %22
%24 = lshr %23, 2:i32
%25 = and %24, 4:i32 (hasExternalUses)
%26 = lshr %23, %25 (hasExternalUses)
%27 = lshr %26, 1:i32
%28:i32 = var
%29 = add %28, 11:i32
%30 = lshr %29, 8:i32
%31 = eq %30, 0:i32
blockpc %2 0 %31 1
%32:i32 = var
blockpc %2 1 %32 1
%33:i32 = var
blockpc %3 0 %33 1
%34:i32 = var
blockpc %3 1 %34 1
%35:i32 = var
%36:i32 = var
%37:i32 = var
%38:i32 = var
%39:i32 = var
pc %35 1
pc %36 1
pc %37 1
pc %38 1
pc %39 1
infer %27


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = or %0, %1
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = and %2, %6 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %7, %8
%10 = add %9, -1:i32
%11 = lshr %10, 12:i32
%12 = and %11, 16:i32 (hasExternalUses)
%13 = lshr %10, %12
%14 = lshr %13, 5:i32
%15 = and %14, 8:i32 (hasExternalUses)
%16 = lshr %13, %15
%17 = lshr %16, 2:i32
%18 = and %17, 4:i32 (hasExternalUses)
%19 = lshr %16, %18 (hasExternalUses)
%20 = lshr %19, 1:i32
%21 = and %20, 2:i32
%22:i32 = var
%23 = block 2
%24:i32 = var
%25 = eq %24, 0:i32
blockpc %23 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %23 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32:i32 = var
%33 = phi %28, %31, %32
%34 = phi %23, 0:i32, %33
%35 = phi %3, %22, %34
%36 = eq %35, 0:i32
%37:i32 = zext %36
%38:i32 = var
%39 = add %38, 0:i32; Replace bad zext operation
%40 = and %37, %39
%41 = ne %40, 0:i32
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
pc %41 1
pc %42 1
pc %43 1
pc %44 1
pc %45 1
infer %21


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = or %0, %1
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = and %2, %6 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %7, %8
%10 = add %9, -1:i32
%11 = lshr %10, 12:i32
%12 = and %11, 16:i32
%13 = lshr %10, %12
%14 = lshr %13, 5:i32
%15 = and %14, 8:i32
%16 = or %15, %12
%17 = lshr %13, %15 (hasExternalUses)
%18 = lshr %17, 2:i32
%19 = and %18, 4:i32 (hasExternalUses)
%20 = or %16, %19
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = eq %23, 0:i32
blockpc %22 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %22 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30:i32 = var
%31:i32 = var
%32 = phi %27, %30, %31
%33 = phi %22, 0:i32, %32
%34 = phi %3, %21, %33
%35 = eq %34, 0:i32
%36:i32 = zext %35
%37:i32 = var
%38 = add %37, 0:i32; Replace bad zext operation
%39 = and %36, %38
%40 = ne %39, 0:i32
%41:i32 = var
%42:i32 = var
%43:i32 = var
%44:i32 = var
pc %40 1
pc %41 1
pc %42 1
pc %43 1
pc %44 1
infer %20


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, 31:i32, %4
%6 = phi %2, 0:i32, %5
%7 = phi %0, %1, %6
%8 = shl 2:i32, %7
%9 = sub 0:i32, %8
%10 = or %8, %9
%11:i32 = var
%12:i32 = var
%13 = phi %0, %11, %12
%14 = and %10, %13 (hasExternalUses)
%15 = sub 0:i32, %14
%16 = and %14, %15
%17 = add %16, -1:i32
%18 = lshr %17, 12:i32
%19 = and %18, 16:i32 (hasExternalUses)
%20 = lshr %17, %19
%21 = lshr %20, 5:i32
%22 = and %21, 8:i32 (hasExternalUses)
%23 = lshr %20, %22
%24 = lshr %23, 2:i32
%25 = and %24, 4:i32 (hasExternalUses)
%26 = lshr %23, %25
%27 = lshr %26, 1:i32
%28 = and %27, 2:i32 (hasExternalUses)
%29 = lshr %26, %28
%30:i32 = var
blockpc %2 0 %30 1
%31:i32 = var
blockpc %2 1 %31 1
%32:i32 = var
blockpc %3 0 %32 1
%33:i32 = var
blockpc %3 1 %33 1
%34:i32 = var
%35:i32 = var
%36:i32 = var
%37:i32 = var
%38:i32 = var
pc %34 1
pc %35 1
pc %36 1
pc %37 1
pc %38 1
infer %29


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = or %0, %1
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = and %2, %6 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %7, %8
%10 = add %9, -1:i32
%11 = lshr %10, 12:i32
%12 = and %11, 16:i32 (hasExternalUses)
%13 = lshr %10, %12
%14 = lshr %13, 5:i32
%15 = and %14, 8:i32 (hasExternalUses)
%16 = lshr %13, %15
%17 = lshr %16, 2:i32
%18 = and %17, 4:i32 (hasExternalUses)
%19 = lshr %16, %18
%20 = lshr %19, 1:i32
%21 = and %20, 2:i32 (hasExternalUses)
%22 = lshr %19, %21 (hasExternalUses)
%23 = lshr %22, 1:i32
%24:i32 = var
%25 = block 2
%26:i32 = var
%27 = eq %26, 0:i32
blockpc %25 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %25 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34:i32 = var
%35 = phi %30, %33, %34
%36 = phi %25, 0:i32, %35
%37 = phi %3, %24, %36
%38 = eq %37, 0:i32
%39:i32 = zext %38
%40:i32 = var
%41 = add %40, 0:i32; Replace bad zext operation
%42 = and %39, %41
%43 = ne %42, 0:i32
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
infer %23


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = and %0, %4 (hasExternalUses)
%6 = sub 0:i32, %5
%7 = and %5, %6
%8 = add %7, -1:i32
%9 = lshr %8, 12:i32
%10 = and %9, 16:i32 (hasExternalUses)
%11 = lshr %8, %10
%12 = lshr %11, 5:i32
%13 = and %12, 8:i32 (hasExternalUses)
%14 = lshr %11, %13
%15 = lshr %14, 2:i32
%16 = and %15, 4:i32 (hasExternalUses)
%17 = lshr %14, %16
%18 = lshr %17, 1:i32
%19 = and %18, 2:i32 (hasExternalUses)
%20 = lshr %17, %19 (hasExternalUses)
%21 = lshr %20, 1:i32
%22 = and %21, 1:i32
%23:i32 = var
%24 = block 2
%25:i32 = var
%26 = eq %25, 0:i32
blockpc %24 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %24 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %29, %32, %33
%35 = phi %24, 0:i32, %34
%36 = phi %1, %23, %35
%37 = eq %36, 0:i32
%38:i32 = zext %37
%39:i32 = var
%40 = add %39, 0:i32; Replace bad zext operation
%41 = and %38, %40
%42 = ne %41, 0:i32
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
infer %22


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = and %0, %4 (hasExternalUses)
%6 = sub 0:i32, %5
%7 = and %5, %6
%8 = add %7, -1:i32
%9 = lshr %8, 12:i32
%10 = and %9, 16:i32
%11 = lshr %8, %10
%12 = lshr %11, 5:i32
%13 = and %12, 8:i32
%14 = or %13, %10
%15 = lshr %11, %13
%16 = lshr %15, 2:i32
%17 = and %16, 4:i32
%18 = or %14, %17
%19 = lshr %15, %17 (hasExternalUses)
%20 = lshr %19, 1:i32
%21 = and %20, 2:i32 (hasExternalUses)
%22 = or %18, %21
%23:i32 = var
%24 = block 2
%25:i32 = var
%26 = eq %25, 0:i32
blockpc %24 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %24 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %29, %32, %33
%35 = phi %24, 0:i32, %34
%36 = phi %1, %23, %35
%37 = eq %36, 0:i32
%38:i32 = zext %37
%39:i32 = var
%40 = add %39, 0:i32; Replace bad zext operation
%41 = and %38, %40
%42 = ne %41, 0:i32
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
infer %22


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = and %0, %1
%3 = add %2, -1:i32
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32
%6 = lshr %3, %5
%7 = lshr %6, 5:i32
%8 = and %7, 8:i32
%9 = or %8, %5
%10 = lshr %6, %8
%11 = lshr %10, 2:i32
%12 = and %11, 4:i32
%13 = or %9, %12
%14 = lshr %10, %12
%15 = lshr %14, 1:i32
%16 = and %15, 2:i32
%17 = or %13, %16
%18 = lshr %14, %16 (hasExternalUses)
%19 = lshr %18, 1:i32
%20 = and %19, 1:i32 (hasExternalUses)
%21 = or %17, %20
%22 = block 2
%23:i32 = var
%24 = block 2
%25:i32 = var
%26 = eq %25, 0:i32
blockpc %24 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %24 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %29, %32, %33
%35 = phi %24, 0:i32, %34
%36 = phi %22, %23, %35
%37 = eq %36, 0:i32
%38:i32 = zext %37
%39:i32 = var
%40 = add %39, 0:i32; Replace bad zext operation
%41 = and %38, %40
%42 = ne %41, 0:i32
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
infer %21


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = or %0, %1
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = and %2, %6 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %7, %8
%10 = add %9, -1:i32
%11 = lshr %10, 12:i32
%12 = and %11, 16:i32 (hasExternalUses)
%13 = lshr %10, %12
%14 = lshr %13, 5:i32
%15 = and %14, 8:i32 (hasExternalUses)
%16 = lshr %13, %15
%17 = lshr %16, 2:i32
%18 = and %17, 4:i32 (hasExternalUses)
%19 = lshr %16, %18
%20 = lshr %19, 1:i32
%21 = and %20, 2:i32 (hasExternalUses)
%22 = lshr %19, %21
%23 = lshr %22, 1:i32
%24 = and %23, 1:i32 (hasExternalUses)
%25 = lshr %22, %24
%26:i32 = var
%27 = block 2
%28:i32 = var
%29 = eq %28, 0:i32
blockpc %27 0 %29 1
%30:i32 = var
blockpc %27 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34:i32 = var
%35:i32 = var
%36 = phi %31, %34, %35
%37 = phi %27, 0:i32, %36
%38 = phi %3, %26, %37
%39 = eq %38, 0:i32
%40:i32 = zext %39
%41:i32 = var
%42 = add %41, 0:i32; Replace bad zext operation
%43 = and %40, %42
%44 = ne %43, 0:i32
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
infer %25


; start LHS (in $38)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 16:i32
%4 = lshr %1, %3
%5 = lshr %4, 5:i32
%6 = and %5, 8:i32
%7 = or %6, %3
%8 = lshr %4, %6
%9 = lshr %8, 2:i32
%10 = and %9, 4:i32
%11 = or %7, %10
%12 = lshr %8, %10
%13 = lshr %12, 1:i32
%14 = and %13, 2:i32
%15 = or %11, %14
%16 = lshr %12, %14
%17 = lshr %16, 1:i32
%18 = and %17, 1:i32
%19 = or %15, %18
%20 = lshr %16, %18
%21 = add %19, %20
%22 = block 2
%23:i32 = var
%24 = block 2
%25:i32 = var
%26 = eq %25, 0:i32
blockpc %24 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %24 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %29, %32, %33
%35 = phi %24, 0:i32, %34
%36 = phi %22, %23, %35
%37 = eq %36, 0:i32
%38:i32 = zext %37
%39:i32 = var
%40 = add %39, 0:i32; Replace bad zext operation
%41 = and %38, %40
%42 = ne %41, 0:i32
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
infer %21


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = lshr %0, %1
%3 = lshr %2, 5:i32
%4 = and %3, 8:i32
%5 = or %4, %1
%6 = lshr %2, %4
%7 = lshr %6, 2:i32
%8 = and %7, 4:i32
%9 = or %5, %8
%10 = lshr %6, %8
%11 = lshr %10, 1:i32
%12 = and %11, 2:i32
%13 = or %9, %12
%14 = lshr %10, %12
%15 = lshr %14, 1:i32
%16 = and %15, 1:i32
%17 = or %13, %16
%18 = lshr %14, %16
%19 = add %17, %18
%20 = shl %19, 2:i32
%21 = block 2
%22:i32 = var
%23 = block 2
%24:i32 = var
%25 = eq %24, 0:i32
blockpc %23 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %23 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32:i32 = var
%33 = phi %28, %31, %32
%34 = phi %23, 0:i32, %33
%35 = phi %21, %22, %34
%36 = eq %35, 0:i32
%37:i32 = zext %36
%38:i32 = var
%39 = add %38, 0:i32; Replace bad zext operation
%40 = and %37, %39
%41 = ne %40, 0:i32
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
pc %41 1
pc %42 1
pc %43 1
pc %44 1
pc %45 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 5:i32
%2 = and %1, 8:i32
%3:i32 = var
%4 = lshr %3, 12:i32
%5 = and %4, 16:i32 (hasExternalUses)
%6 = or %2, %5
%7 = lshr %0, %2
%8 = lshr %7, 2:i32
%9 = and %8, 4:i32
%10 = or %6, %9
%11 = lshr %7, %9
%12 = lshr %11, 1:i32
%13 = and %12, 2:i32
%14 = or %10, %13
%15 = lshr %11, %13
%16 = lshr %15, 1:i32
%17 = and %16, 1:i32
%18 = or %14, %17
%19 = lshr %15, %17
%20 = add %18, %19
%21 = shl %20, 2:i32
%22 = add 3408:i32, %21
%23 = block 2
%24:i32 = var
%25 = block 2
%26:i32 = var
%27 = eq %26, 0:i32
blockpc %25 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %25 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34:i32 = var
%35 = phi %30, %33, %34
%36 = phi %25, 0:i32, %35
%37 = phi %23, %24, %36
%38 = eq %37, 0:i32
%39:i32 = zext %38
%40:i32 = var
%41 = add %40, 0:i32; Replace bad zext operation
%42 = and %39, %41
%43 = ne %42, 0:i32
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
infer %22


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9 = phi %4, 0:i32, %8
%10 = phi %2, %3, %9
%11 = phi %0, %1, %10
%12 = eq %11, 0:i32
%13 = eq %10, 0:i32
%14:i32 = zext %13
%15:i32 = var
%16:i32 = var
%17 = eq %16, 0:i32
blockpc %4 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %4 1 %19 1
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23:i32 = var
%24:i32 = var
%25 = phi %20, %23, %24
%26 = phi %4, 0:i32, %25
%27 = phi %2, %15, %26
%28 = eq %27, 0:i32
%29:i32 = zext %28
%30 = and %14, %29
%31 = ne %30, 0:i32
blockpc %0 0 %31 1
%32:i32 = var
blockpc %0 1 %32 1
%33:i32 = var
blockpc %5 0 %33 1
%34:i32 = var
blockpc %5 1 %34 1
%35:i32 = var
%36:i32 = var
%37:i32 = var
%38:i32 = var
pc %35 1
pc %36 1
pc %37 1
pc %38 1
infer %12


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = phi %1, 65:i32, 61:i32
%3 = block 2
%4 = phi %3, %2, 65:i32
%5 = phi %0, %2, %4
%6 = eq %5, 65:i32
%7 = eq %2, 61:i32
blockpc %0 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %0 1 %9 1
%10 = block 2
%11:i32 = var
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19:i32 = var
%20 = phi %15, %18, %19
%21 = phi %12, 0:i32, %20
%22 = phi %1, %11, %21
%23 = eq %22, 0:i32
%24:i32 = zext %23
%25:i32 = var
%26 = add %25, 0:i32; Replace bad zext operation
%27 = and %24, %26
%28 = ne %27, 0:i32
blockpc %10 0 %28 1
%29:i32 = var
blockpc %10 1 %29 1
%30:i32 = var
%31 = phi %10, %30, %22
%32 = eq %31, 0:i32
blockpc %3 0 %32 1
%33:i32 = var
blockpc %3 1 %33 1
%34:i32 = var
%35:i32 = var
%36:i32 = var
pc %34 1
pc %35 1
pc %36 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3 = block 2
%4 = phi %3, 65:i32, 61:i32
%5 = eq %4, 61:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = add %10, 0:i32; Replace bad zext operation
%12:i32 = var
%13 = add %12, 0:i32; Replace bad zext operation
%14 = and %11, %13
%15 = ne %14, 0:i32
blockpc %9 0 %15 1
%16 = eq %14, 0:i32
blockpc %9 1 %16 1
%17:i32 = var
%18:i32 = var
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26:i32 = var
%27 = phi %22, %25, %26
%28 = phi %19, 0:i32, %27
%29 = phi %3, %18, %28
%30 = phi %9, %17, %29
%31 = eq %30, 0:i32
blockpc %8 0 %31 1
%32:i32 = var
blockpc %8 1 %32 1
%33 = phi %8, %4, 65:i32
%34 = phi %2, %4, %33
%35 = eq %34, 65:i32
%36:i32 = var
%37:i32 = var
%38:i32 = var
pc %35 1
pc %36 1
pc %37 1
pc %38 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3 = block 2
%4 = phi %3, 65:i32, 61:i32
%5 = eq %4, 61:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = add %10, 0:i32; Replace bad zext operation
%12:i32 = var
%13 = add %12, 0:i32; Replace bad zext operation
%14 = and %11, %13
%15 = ne %14, 0:i32
blockpc %9 0 %15 1
%16 = eq %14, 0:i32
blockpc %9 1 %16 1
%17:i32 = var
%18:i32 = var
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26:i32 = var
%27 = phi %22, %25, %26
%28 = phi %19, 0:i32, %27
%29 = phi %3, %18, %28
%30 = phi %9, %17, %29
%31 = eq %30, 0:i32
blockpc %8 0 %31 1
%32:i32 = var
blockpc %8 1 %32 1
%33 = phi %8, %4, 65:i32
%34 = phi %2, %4, %33
%35 = eq %34, 65:i32
%36:i32 = var
%37:i32 = var
%38:i32 = var
pc %35 1
pc %36 1
pc %37 1
pc %38 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = sub %1, %7
%9 = block 2
%10 = phi %2, 65:i32, 61:i32
%11 = eq %10, 61:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = add %16, 0:i32; Replace bad zext operation
%18:i32 = var
%19 = add %18, 0:i32; Replace bad zext operation
%20 = and %17, %19
%21 = ne %20, 0:i32
blockpc %15 0 %21 1
%22 = eq %20, 0:i32
blockpc %15 1 %22 1
%23:i32 = var
%24:i32 = var
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32:i32 = var
%33 = phi %28, %31, %32
%34 = phi %25, 0:i32, %33
%35 = phi %2, %24, %34
%36 = phi %15, %23, %35
%37 = eq %36, 0:i32
blockpc %14 0 %37 1
%38:i32 = var
blockpc %14 1 %38 1
%39 = phi %14, %10, 65:i32
%40 = phi %9, %10, %39
%41 = eq %40, 65:i32
%42:i32 = var
%43:i32 = var
%44:i32 = var
pc %41 1
pc %42 1
pc %43 1
pc %44 1
infer %8


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = sub %1, %7 (hasExternalUses)
%9:i32 = var
%10 = ult %8, %9
%11 = block 2
%12 = phi %2, 65:i32, 61:i32
%13 = eq %12, 61:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = add %18, 0:i32; Replace bad zext operation
%20:i32 = var
%21 = add %20, 0:i32; Replace bad zext operation
%22 = and %19, %21
%23 = ne %22, 0:i32
blockpc %17 0 %23 1
%24 = eq %22, 0:i32
blockpc %17 1 %24 1
%25:i32 = var
%26:i32 = var
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34:i32 = var
%35 = phi %30, %33, %34
%36 = phi %27, 0:i32, %35
%37 = phi %2, %26, %36
%38 = phi %17, %25, %37
%39 = eq %38, 0:i32
blockpc %16 0 %39 1
%40:i32 = var
blockpc %16 1 %40 1
%41 = phi %16, %12, 65:i32
%42 = phi %11, %12, %41
%43 = eq %42, 65:i32
%44:i32 = var
%45:i32 = var
%46:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
infer %10


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2 = block 2
%3 = block 2
%4 = phi %3, 65:i32, 61:i32
%5 = eq %4, 61:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = add %10, 0:i32; Replace bad zext operation
%12:i32 = var
%13 = add %12, 0:i32; Replace bad zext operation
%14 = and %11, %13
%15 = ne %14, 0:i32
blockpc %9 0 %15 1
%16 = eq %14, 0:i32
blockpc %9 1 %16 1
%17:i32 = var
%18:i32 = var
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26:i32 = var
%27 = phi %22, %25, %26
%28 = phi %19, 0:i32, %27
%29 = phi %3, %18, %28
%30 = phi %9, %17, %29
%31 = eq %30, 0:i32
blockpc %8 0 %31 1
%32:i32 = var
blockpc %8 1 %32 1
%33 = phi %8, %4, 65:i32
%34 = phi %2, %4, %33
%35 = eq %34, 65:i32
%36:i32 = var
%37:i32 = var
%38:i32 = var
pc %35 1
pc %36 1
pc %37 1
pc %38 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3 = block 2
%4 = phi %3, 65:i32, 61:i32
%5 = eq %4, 61:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = add %10, 0:i32; Replace bad zext operation
%12:i32 = var
%13 = add %12, 0:i32; Replace bad zext operation
%14 = and %11, %13
%15 = ne %14, 0:i32
blockpc %9 0 %15 1
%16 = eq %14, 0:i32
blockpc %9 1 %16 1
%17:i32 = var
%18:i32 = var
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26:i32 = var
%27 = phi %22, %25, %26
%28 = phi %19, 0:i32, %27
%29 = phi %3, %18, %28
%30 = phi %9, %17, %29
%31 = eq %30, 0:i32
blockpc %8 0 %31 1
%32:i32 = var
blockpc %8 1 %32 1
%33 = phi %8, %4, 65:i32
%34 = phi %2, %4, %33
%35 = eq %34, 65:i32
%36:i32 = var
%37:i32 = var
%38:i32 = var
pc %35 1
pc %36 1
pc %37 1
pc %38 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4 = block 2
%5 = block 2
%6 = phi %5, 65:i32, 61:i32
%7 = eq %6, 61:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = add %12, 0:i32; Replace bad zext operation
%14:i32 = var
%15 = add %14, 0:i32; Replace bad zext operation
%16 = and %13, %15
%17 = ne %16, 0:i32
blockpc %11 0 %17 1
%18 = eq %16, 0:i32
blockpc %11 1 %18 1
%19:i32 = var
%20:i32 = var
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28:i32 = var
%29 = phi %24, %27, %28
%30 = phi %21, 0:i32, %29
%31 = phi %5, %20, %30
%32 = phi %11, %19, %31
%33 = eq %32, 0:i32
blockpc %10 0 %33 1
%34:i32 = var
blockpc %10 1 %34 1
%35 = phi %10, %6, 65:i32
%36 = phi %4, %6, %35
%37 = eq %36, 65:i32
%38:i32 = var
%39:i32 = var
%40:i32 = var
pc %3 1
pc %37 1
pc %38 1
pc %39 1
pc %40 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = eq %3, 0:i32
%5 = eq %2, 0:i32
blockpc %0 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %0 1 %7 1
%8 = block 2
%9 = block 2
%10 = phi %9, 65:i32, 61:i32
%11 = eq %10, 61:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = add %16, 0:i32; Replace bad zext operation
%18:i32 = var
%19 = add %18, 0:i32; Replace bad zext operation
%20 = and %17, %19
%21 = ne %20, 0:i32
blockpc %15 0 %21 1
%22 = eq %20, 0:i32
blockpc %15 1 %22 1
%23:i32 = var
%24:i32 = var
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32:i32 = var
%33 = phi %28, %31, %32
%34 = phi %25, 0:i32, %33
%35 = phi %9, %24, %34
%36 = phi %15, %23, %35
%37 = eq %36, 0:i32
blockpc %14 0 %37 1
%38:i32 = var
blockpc %14 1 %38 1
%39 = phi %14, %10, 65:i32
%40 = phi %8, %10, %39
%41 = eq %40, 65:i32
%42:i32 = var
%43:i32 = var
%44:i32 = var
pc %41 1
pc %42 1
pc %43 1
pc %44 1
infer %4


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23 = eq %22, 0:i32
%24 = phi %2, 65:i32, 61:i32
%25 = eq %24, 61:i32
blockpc %1 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %1 1 %27 1
%28:i32 = var
blockpc %5 0 %28 1
%29:i32 = var
blockpc %5 1 %29 1
%30 = phi %5, %24, 65:i32
%31 = phi %1, %24, %30
%32 = eq %31, 65:i32
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %6 0 %34 1
%35:i32 = var
blockpc %6 1 %35 1
%36:i32 = var
blockpc %8 0 %36 1
%37:i32 = var
blockpc %8 1 %37 1
%38:i32 = var
blockpc %9 0 %38 1
%39:i32 = var
blockpc %9 1 %39 1
%40:i32 = var
blockpc %18 0 %40 1
%41:i32 = var
blockpc %18 1 %41 1
%42:i32 = var
%43:i32 = var
%44:i32 = var
pc %42 1
pc %43 1
pc %44 1
infer %23


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = add %3, 11:i32 (hasExternalUses)
%5 = and %4, -8:i32 (hasExternalUses)
%6 = phi %1, %2, %5
%7 = sub %0, %6
%8 = block 2
%9 = block 2
%10 = phi %1, 65:i32, 61:i32
%11 = eq %10, 61:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = phi %14, %10, 65:i32
%18 = phi %9, %10, %17
%19 = eq %18, 65:i32
blockpc %8 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %8 1 %21 1
%22:i32 = var
%23 = phi %1, %22, 0:i32
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34:i32 = var
%35:i32 = var
%36 = phi %31, %34, %35
%37 = phi %28, 0:i32, %36
%38 = phi %1, %27, %37
%39 = phi %24, 0:i32, %38
%40 = phi %14, %39, %23
%41 = phi %9, %23, %40
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45:i32 = var
%46:i32 = var
%47 = phi %42, %45, %46
%48 = phi %8, %41, %47
%49 = eq %48, 0:i32
%50:i32 = zext %49
%51 = eq %50, 0:i32
%52:i32 = var
%53:i32 = var
%54:i32 = var
pc %51 1
pc %52 1
pc %53 1
pc %54 1
infer %7


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = add %8, 11:i32 (hasExternalUses)
%10 = and %9, -8:i32 (hasExternalUses)
%11 = sub 0:i32, %10 (hasExternalUses)
%12 = block 2
%13:i32 = var
%14 = and %13, -8:i32
%15 = sub %14, %10 (hasExternalUses)
%16:i32 = var
%17 = phi %12, %15, %16
%18 = phi %7, %11, %17
%19 = phi %2, %6, %18
%20 = phi %5, %19, %4
%21 = phi %1, %4, %20
%22 = block 2
%23:i32 = var
%24 = and %23, -8:i32
%25:i32 = var
%26 = phi %2, %25, %10
%27 = sub %24, %26 (hasExternalUses)
%28:i32 = var
%29 = phi %22, %27, %28
%30 = phi %0, %21, %29
%31:i32 = var
%32 = ult %30, %31
%33:i32 = var
blockpc %0 0 %33 1
%34:i32 = var
blockpc %0 1 %34 1
%35:i32 = var
blockpc %1 0 %35 1
%36:i32 = var
blockpc %1 1 %36 1
%37:i32 = var
blockpc %5 0 %37 1
%38:i32 = var
blockpc %5 1 %38 1
%39:i32 = var
blockpc %7 0 %39 1
%40:i32 = var
blockpc %7 1 %40 1
%41:i32 = var
blockpc %12 0 %41 1
%42:i32 = var
blockpc %12 1 %42 1
%43:i32 = var
blockpc %22 0 %43 1
%44:i32 = var
blockpc %22 1 %44 1
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
pc %45 1
pc %46 1
pc %47 1
pc %48 1
infer %32


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27
%29 = phi %2, 65:i32, 61:i32
%30 = eq %29, 61:i32
blockpc %1 0 %30 1
%31:i32 = var
blockpc %1 1 %31 1
%32:i32 = var
blockpc %5 0 %32 1
%33:i32 = var
blockpc %5 1 %33 1
%34 = phi %5, %29, 65:i32
%35 = phi %1, %29, %34
%36 = eq %35, 65:i32
blockpc %0 0 %36 1
%37:i32 = var
blockpc %0 1 %37 1
%38:i32 = var
blockpc %6 0 %38 1
%39:i32 = var
blockpc %6 1 %39 1
%40:i32 = var
blockpc %8 0 %40 1
%41:i32 = var
blockpc %8 1 %41 1
%42:i32 = var
blockpc %9 0 %42 1
%43:i32 = var
blockpc %9 1 %43 1
%44:i32 = var
blockpc %18 0 %44 1
%45:i32 = var
blockpc %18 1 %45 1
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %28


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29 = ult %22, %28
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %6 0 %36 1
%37:i32 = var
blockpc %6 1 %37 1
%38:i32 = var
blockpc %8 0 %38 1
%39:i32 = var
blockpc %8 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %18 0 %42 1
%43:i32 = var
blockpc %18 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
infer %29


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23 = add %22, 24:i32
%24 = phi %2, 65:i32, 61:i32
%25 = eq %24, 61:i32
blockpc %1 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %1 1 %27 1
%28:i32 = var
blockpc %5 0 %28 1
%29:i32 = var
blockpc %5 1 %29 1
%30 = phi %5, %24, 65:i32
%31 = phi %1, %24, %30
%32 = eq %31, 65:i32
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %6 0 %34 1
%35:i32 = var
blockpc %6 1 %35 1
%36:i32 = var
blockpc %8 0 %36 1
%37:i32 = var
blockpc %8 1 %37 1
%38:i32 = var
blockpc %9 0 %38 1
%39:i32 = var
blockpc %9 1 %39 1
%40:i32 = var
blockpc %18 0 %40 1
%41:i32 = var
blockpc %18 1 %41 1
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
infer %23


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23 = add %22, 12:i32
%24 = phi %2, 65:i32, 61:i32
%25 = eq %24, 61:i32
blockpc %1 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %1 1 %27 1
%28:i32 = var
blockpc %5 0 %28 1
%29:i32 = var
blockpc %5 1 %29 1
%30 = phi %5, %24, 65:i32
%31 = phi %1, %24, %30
%32 = eq %31, 65:i32
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %6 0 %34 1
%35:i32 = var
blockpc %6 1 %35 1
%36:i32 = var
blockpc %8 0 %36 1
%37:i32 = var
blockpc %8 1 %37 1
%38:i32 = var
blockpc %9 0 %38 1
%39:i32 = var
blockpc %9 1 %39 1
%40:i32 = var
blockpc %18 0 %40 1
%41:i32 = var
blockpc %18 1 %41 1
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
infer %23


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, %4, 0:i32
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = block 2
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14 = phi %9, 0:i32, %13
%15 = phi %3, %8, %14
%16 = phi %7, 0:i32, %15
%17 = phi %6, %16, %5
%18 = phi %2, %5, %17
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = phi %1, %18, %22
%24 = eq %0, %23
%25 = phi %3, 65:i32, 61:i32
%26 = eq %25, 61:i32
blockpc %2 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %2 1 %28 1
%29:i32 = var
blockpc %6 0 %29 1
%30:i32 = var
blockpc %6 1 %30 1
%31 = phi %6, %25, 65:i32
%32 = phi %2, %25, %31
%33 = eq %32, 65:i32
blockpc %1 0 %33 1
%34:i32 = var
blockpc %1 1 %34 1
%35:i32 = var
blockpc %7 0 %35 1
%36:i32 = var
blockpc %7 1 %36 1
%37:i32 = var
blockpc %9 0 %37 1
%38:i32 = var
blockpc %9 1 %38 1
%39:i32 = var
blockpc %10 0 %39 1
%40:i32 = var
blockpc %10 1 %40 1
%41:i32 = var
blockpc %19 0 %41 1
%42:i32 = var
blockpc %19 1 %42 1
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
infer %24


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23 = add %22, 20:i32
%24 = phi %2, 65:i32, 61:i32
%25 = eq %24, 61:i32
blockpc %1 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %1 1 %27 1
%28:i32 = var
blockpc %5 0 %28 1
%29:i32 = var
blockpc %5 1 %29 1
%30 = phi %5, %24, 65:i32
%31 = phi %1, %24, %30
%32 = eq %31, 65:i32
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %6 0 %34 1
%35:i32 = var
blockpc %6 1 %35 1
%36:i32 = var
blockpc %8 0 %36 1
%37:i32 = var
blockpc %8 1 %37 1
%38:i32 = var
blockpc %9 0 %38 1
%39:i32 = var
blockpc %9 1 %39 1
%40:i32 = var
blockpc %18 0 %40 1
%41:i32 = var
blockpc %18 1 %41 1
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
infer %23


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5 = block 2
%6 = phi %5, 65:i32, 61:i32
%7 = eq %6, 61:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = block 2
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14:i32 = var
%15:i32 = var
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22:i32 = var
%23:i32 = var
%24 = phi %19, %22, %23
%25 = phi %16, 0:i32, %24
%26 = phi %5, %15, %25
%27 = phi %11, %14, %26
%28 = eq %27, 0:i32
blockpc %10 0 %28 1
%29:i32 = var
blockpc %10 1 %29 1
%30 = phi %10, %6, 65:i32
%31 = phi %4, %6, %30
%32 = eq %31, 65:i32
blockpc %3 0 %32 1
%33:i32 = var
blockpc %3 1 %33 1
%34:i32 = var
%35 = phi %5, %34, 0:i32
%36:i32 = var
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40:i32 = var
%41:i32 = var
%42 = phi %37, %40, %41
%43 = phi %16, 0:i32, %42
%44 = phi %5, %36, %43
%45 = phi %11, 0:i32, %44
%46 = phi %10, %45, %35
%47 = phi %4, %35, %46
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51:i32 = var
%52:i32 = var
%53 = phi %48, %51, %52
%54 = phi %3, %47, %53
%55 = eq %2, %54
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
pc %55 1
pc %56 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23 = add %22, 16:i32
%24 = phi %2, 65:i32, 61:i32
%25 = eq %24, 61:i32
blockpc %1 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %1 1 %27 1
%28:i32 = var
blockpc %5 0 %28 1
%29:i32 = var
blockpc %5 1 %29 1
%30 = phi %5, %24, 65:i32
%31 = phi %1, %24, %30
%32 = eq %31, 65:i32
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %6 0 %34 1
%35:i32 = var
blockpc %6 1 %35 1
%36:i32 = var
blockpc %8 0 %36 1
%37:i32 = var
blockpc %8 1 %37 1
%38:i32 = var
blockpc %9 0 %38 1
%39:i32 = var
blockpc %9 1 %39 1
%40:i32 = var
blockpc %18 0 %40 1
%41:i32 = var
blockpc %18 1 %41 1
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
infer %23


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = block 2
%6 = block 2
%7 = block 2
%8 = phi %7, 65:i32, 61:i32
%9 = eq %8, 61:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17:i32 = var
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25:i32 = var
%26 = phi %21, %24, %25
%27 = phi %18, 0:i32, %26
%28 = phi %7, %17, %27
%29 = phi %13, %16, %28
%30 = eq %29, 0:i32
blockpc %12 0 %30 1
%31:i32 = var
blockpc %12 1 %31 1
%32 = phi %12, %8, 65:i32
%33 = phi %6, %8, %32
%34 = eq %33, 65:i32
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
%37 = phi %7, %36, 0:i32
%38:i32 = var
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43:i32 = var
%44 = phi %39, %42, %43
%45 = phi %18, 0:i32, %44
%46 = phi %7, %38, %45
%47 = phi %13, 0:i32, %46
%48 = phi %12, %47, %37
%49 = phi %6, %37, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54:i32 = var
%55 = phi %50, %53, %54
%56 = phi %5, %49, %55
%57 = eq %4, %56
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
pc %3 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5 = block 2
%6 = phi %5, 65:i32, 61:i32
%7 = eq %6, 61:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = block 2
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14:i32 = var
%15:i32 = var
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22:i32 = var
%23:i32 = var
%24 = phi %19, %22, %23
%25 = phi %16, 0:i32, %24
%26 = phi %5, %15, %25
%27 = phi %11, %14, %26
%28 = eq %27, 0:i32
blockpc %10 0 %28 1
%29:i32 = var
blockpc %10 1 %29 1
%30 = phi %10, %6, 65:i32
%31 = phi %4, %6, %30
%32 = eq %31, 65:i32
blockpc %3 0 %32 1
%33:i32 = var
blockpc %3 1 %33 1
%34:i32 = var
%35 = phi %5, %34, 0:i32
%36:i32 = var
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40:i32 = var
%41:i32 = var
%42 = phi %37, %40, %41
%43 = phi %16, 0:i32, %42
%44 = phi %5, %36, %43
%45 = phi %11, 0:i32, %44
%46 = phi %10, %45, %35
%47 = phi %4, %35, %46
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51:i32 = var
%52:i32 = var
%53 = phi %48, %51, %52
%54 = phi %3, %47, %53
%55 = eq %2, %54
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
pc %55 1
pc %56 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5 = block 2
%6 = phi %5, 65:i32, 61:i32
%7 = eq %6, 61:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = block 2
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14:i32 = var
%15:i32 = var
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22:i32 = var
%23:i32 = var
%24 = phi %19, %22, %23
%25 = phi %16, 0:i32, %24
%26 = phi %5, %15, %25
%27 = phi %11, %14, %26
%28 = eq %27, 0:i32
blockpc %10 0 %28 1
%29:i32 = var
blockpc %10 1 %29 1
%30 = phi %10, %6, 65:i32
%31 = phi %4, %6, %30
%32 = eq %31, 65:i32
blockpc %3 0 %32 1
%33:i32 = var
blockpc %3 1 %33 1
%34:i32 = var
%35 = phi %5, %34, 0:i32
%36:i32 = var
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40:i32 = var
%41:i32 = var
%42 = phi %37, %40, %41
%43 = phi %16, 0:i32, %42
%44 = phi %5, %36, %43
%45 = phi %11, 0:i32, %44
%46 = phi %10, %45, %35
%47 = phi %4, %35, %46
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51:i32 = var
%52:i32 = var
%53 = phi %48, %51, %52
%54 = phi %3, %47, %53
%55 = eq %2, %54
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
pc %55 1
pc %56 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = block 2
%6 = block 2
%7 = block 2
%8 = phi %7, 65:i32, 61:i32
%9 = eq %8, 61:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17:i32 = var
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25:i32 = var
%26 = phi %21, %24, %25
%27 = phi %18, 0:i32, %26
%28 = phi %7, %17, %27
%29 = phi %13, %16, %28
%30 = eq %29, 0:i32
blockpc %12 0 %30 1
%31:i32 = var
blockpc %12 1 %31 1
%32 = phi %12, %8, 65:i32
%33 = phi %6, %8, %32
%34 = eq %33, 65:i32
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
%37 = phi %7, %36, 0:i32
%38:i32 = var
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43:i32 = var
%44 = phi %39, %42, %43
%45 = phi %18, 0:i32, %44
%46 = phi %7, %38, %45
%47 = phi %13, 0:i32, %46
%48 = phi %12, %47, %37
%49 = phi %6, %37, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54:i32 = var
%55 = phi %50, %53, %54
%56 = phi %5, %49, %55
%57 = eq %4, %56
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
pc %3 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = block 2
%6 = block 2
%7 = block 2
%8 = phi %7, 65:i32, 61:i32
%9 = eq %8, 61:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17:i32 = var
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25:i32 = var
%26 = phi %21, %24, %25
%27 = phi %18, 0:i32, %26
%28 = phi %7, %17, %27
%29 = phi %13, %16, %28
%30 = eq %29, 0:i32
blockpc %12 0 %30 1
%31:i32 = var
blockpc %12 1 %31 1
%32 = phi %12, %8, 65:i32
%33 = phi %6, %8, %32
%34 = eq %33, 65:i32
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
%37 = phi %7, %36, 0:i32
%38:i32 = var
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43:i32 = var
%44 = phi %39, %42, %43
%45 = phi %18, 0:i32, %44
%46 = phi %7, %38, %45
%47 = phi %13, 0:i32, %46
%48 = phi %12, %47, %37
%49 = phi %6, %37, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54:i32 = var
%55 = phi %50, %53, %54
%56 = phi %5, %49, %55
%57 = eq %4, %56
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
pc %3 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23 = add %22, 8:i32
%24 = phi %2, 65:i32, 61:i32
%25 = eq %24, 61:i32
blockpc %1 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %1 1 %27 1
%28:i32 = var
blockpc %5 0 %28 1
%29:i32 = var
blockpc %5 1 %29 1
%30 = phi %5, %24, 65:i32
%31 = phi %1, %24, %30
%32 = eq %31, 65:i32
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %6 0 %34 1
%35:i32 = var
blockpc %6 1 %35 1
%36:i32 = var
blockpc %8 0 %36 1
%37:i32 = var
blockpc %8 1 %37 1
%38:i32 = var
blockpc %9 0 %38 1
%39:i32 = var
blockpc %9 1 %39 1
%40:i32 = var
blockpc %18 0 %40 1
%41:i32 = var
blockpc %18 1 %41 1
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
infer %23


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5 = block 2
%6 = phi %5, 65:i32, 61:i32
%7 = eq %6, 61:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13 = phi %10, %6, 65:i32
%14 = phi %4, %6, %13
%15 = eq %14, 65:i32
blockpc %3 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %3 1 %17 1
%18:i32 = var
%19 = phi %5, %18, 0:i32
%20 = block 2
%21:i32 = var
%22 = ne %21, 0:i32
blockpc %20 0 %22 1
%23:i32 = var
blockpc %20 1 %23 1
%24:i32 = var
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32:i32 = var
%33 = phi %28, %31, %32
%34 = phi %25, 0:i32, %33
%35 = phi %5, %24, %34
%36 = phi %20, 0:i32, %35
%37 = phi %10, %36, %19
%38 = phi %4, %19, %37
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43:i32 = var
%44 = phi %39, %42, %43
%45 = phi %3, %38, %44
%46 = eq %2, %45
%47:i32 = zext %46
%48 = eq %47, 0:i32
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5 = phi %4, 65:i32, 61:i32
%6 = eq %5, 61:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12 = phi %9, %5, 65:i32
%13 = phi %3, %5, %12
%14 = eq %13, 65:i32
blockpc %2 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %2 1 %16 1
%17:i32 = var
%18 = phi %4, %17, 0:i32
%19 = block 2
%20:i32 = var
%21 = ne %20, 0:i32
blockpc %19 0 %21 1
%22 = eq %20, 0:i32
blockpc %19 1 %22 1
%23:i32 = var
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30:i32 = var
%31:i32 = var
%32 = phi %27, %30, %31
%33 = phi %24, 0:i32, %32
%34 = phi %4, %23, %33
%35 = phi %19, 0:i32, %34
%36 = phi %9, %35, %18
%37 = phi %3, %18, %36
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41:i32 = var
%42:i32 = var
%43 = phi %38, %41, %42
%44 = phi %2, %37, %43
%45 = eq %0, %44
%46:i32 = zext %45
%47 = eq %46, 0:i32
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5 = phi %4, 65:i32, 61:i32
%6 = eq %5, 61:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14:i32 = var
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21:i32 = var
%22:i32 = var
%23 = phi %18, %21, %22
%24 = phi %15, 0:i32, %23
%25 = phi %4, %14, %24
%26 = phi %10, %13, %25
%27 = eq %26, 0:i32
blockpc %9 0 %27 1
%28:i32 = var
blockpc %9 1 %28 1
%29 = phi %9, %5, 65:i32
%30 = phi %3, %5, %29
%31 = eq %30, 65:i32
blockpc %2 0 %31 1
%32:i32 = var
blockpc %2 1 %32 1
%33:i32 = var
%34 = phi %4, %33, 0:i32
%35:i32 = var
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40:i32 = var
%41 = phi %36, %39, %40
%42 = phi %15, 0:i32, %41
%43 = phi %4, %35, %42
%44 = phi %10, 0:i32, %43
%45 = phi %9, %44, %34
%46 = phi %3, %34, %45
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50:i32 = var
%51:i32 = var
%52 = phi %47, %50, %51
%53 = phi %2, %46, %52
%54:i32 = var
%55 = ult %53, %54
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
%60:i32 = var
pc %55 1
pc %56 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23 = add %22, 28:i32
%24 = phi %2, 65:i32, 61:i32
%25 = eq %24, 61:i32
blockpc %1 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %1 1 %27 1
%28:i32 = var
blockpc %5 0 %28 1
%29:i32 = var
blockpc %5 1 %29 1
%30 = phi %5, %24, 65:i32
%31 = phi %1, %24, %30
%32 = eq %31, 65:i32
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %6 0 %34 1
%35:i32 = var
blockpc %6 1 %35 1
%36:i32 = var
blockpc %8 0 %36 1
%37:i32 = var
blockpc %8 1 %37 1
%38:i32 = var
blockpc %9 0 %38 1
%39:i32 = var
blockpc %9 1 %39 1
%40:i32 = var
blockpc %18 0 %40 1
%41:i32 = var
blockpc %18 1 %41 1
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
infer %23


; start LHS (in $38)
%0:i32 = var
%1 = shl %0, 2:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 2
%8 = block 2
%9 = phi %8, 65:i32, 61:i32
%10 = eq %9, 61:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13 = block 2
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17:i32 = var
%18:i32 = var
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26:i32 = var
%27 = phi %22, %25, %26
%28 = phi %19, 0:i32, %27
%29 = phi %8, %18, %28
%30 = phi %14, %17, %29
%31 = eq %30, 0:i32
blockpc %13 0 %31 1
%32:i32 = var
blockpc %13 1 %32 1
%33 = phi %13, %9, 65:i32
%34 = phi %7, %9, %33
%35 = eq %34, 65:i32
blockpc %6 0 %35 1
%36:i32 = var
blockpc %6 1 %36 1
%37:i32 = var
%38 = phi %8, %37, 0:i32
%39:i32 = var
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44:i32 = var
%45 = phi %40, %43, %44
%46 = phi %19, 0:i32, %45
%47 = phi %8, %39, %46
%48 = phi %14, 0:i32, %47
%49 = phi %13, %48, %38
%50 = phi %7, %38, %49
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54:i32 = var
%55:i32 = var
%56 = phi %51, %54, %55
%57 = phi %6, %50, %56
%58:i32 = var
%59 = ult %57, %58
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
pc %5 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
pc %64 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = shl %0, 2:i32
%2 = add 3408:i32, %1
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = block 2
%8 = block 2
%9 = block 2
%10 = phi %9, 65:i32, 61:i32
%11 = eq %10, 61:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14 = block 2
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %23, %26, %27
%29 = phi %20, 0:i32, %28
%30 = phi %9, %19, %29
%31 = phi %15, %18, %30
%32 = eq %31, 0:i32
blockpc %14 0 %32 1
%33:i32 = var
blockpc %14 1 %33 1
%34 = phi %14, %10, 65:i32
%35 = phi %8, %10, %34
%36 = eq %35, 65:i32
blockpc %7 0 %36 1
%37:i32 = var
blockpc %7 1 %37 1
%38:i32 = var
%39 = phi %9, %38, 0:i32
%40:i32 = var
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44:i32 = var
%45:i32 = var
%46 = phi %41, %44, %45
%47 = phi %20, 0:i32, %46
%48 = phi %9, %40, %47
%49 = phi %15, 0:i32, %48
%50 = phi %14, %49, %39
%51 = phi %8, %39, %50
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56:i32 = var
%57 = phi %52, %55, %56
%58 = phi %7, %51, %57
%59:i32 = var
%60 = ult %58, %59
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
pc %6 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
infer %2


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24 = eq %22, %23
%25 = phi %2, 65:i32, 61:i32
%26 = eq %25, 61:i32
blockpc %1 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %1 1 %28 1
%29:i32 = var
blockpc %5 0 %29 1
%30:i32 = var
blockpc %5 1 %30 1
%31 = phi %5, %25, 65:i32
%32 = phi %1, %25, %31
%33 = eq %32, 65:i32
blockpc %0 0 %33 1
%34:i32 = var
blockpc %0 1 %34 1
%35:i32 = var
blockpc %6 0 %35 1
%36:i32 = var
blockpc %6 1 %36 1
%37:i32 = var
blockpc %8 0 %37 1
%38:i32 = var
blockpc %8 1 %38 1
%39:i32 = var
blockpc %9 0 %39 1
%40:i32 = var
blockpc %9 1 %40 1
%41:i32 = var
blockpc %18 0 %41 1
%42:i32 = var
blockpc %18 1 %42 1
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
infer %24


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = eq %5, 0:i32
%7 = block 2
%8 = block 2
%9 = block 2
%10 = phi %9, 65:i32, 61:i32
%11 = eq %10, 61:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14 = block 2
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %23, %26, %27
%29 = phi %20, 0:i32, %28
%30 = phi %9, %19, %29
%31 = phi %15, %18, %30
%32 = eq %31, 0:i32
blockpc %14 0 %32 1
%33:i32 = var
blockpc %14 1 %33 1
%34 = phi %14, %10, 65:i32
%35 = phi %8, %10, %34
%36 = eq %35, 65:i32
blockpc %7 0 %36 1
%37:i32 = var
blockpc %7 1 %37 1
%38:i32 = var
%39 = phi %9, %38, 0:i32
%40:i32 = var
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44:i32 = var
%45:i32 = var
%46 = phi %41, %44, %45
%47 = phi %20, 0:i32, %46
%48 = phi %9, %40, %47
%49 = phi %15, 0:i32, %48
%50 = phi %14, %49, %39
%51 = phi %8, %39, %50
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56:i32 = var
%57 = phi %52, %55, %56
%58 = phi %7, %51, %57
%59 = eq %3, %58
blockpc %1 0 %59 1
%60:i32 = var
blockpc %1 1 %60 1
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
%66:i32 = var
%67:i32 = var
%68:i32 = var
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
pc %66 1
pc %67 1
pc %68 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = shl 1:i32, %0
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
blockpc %6 0 %7 1
%8:i32 = var
blockpc %6 1 %8 1
%9 = block 2
%10 = phi %9, 65:i32, 61:i32
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14 = phi %11, %10, 65:i32
%15 = phi %6, %10, %14
%16 = eq %15, 65:i32
blockpc %5 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %5 1 %18 1
%19:i32 = var
%20 = phi %9, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32:i32 = var
%33 = phi %28, %31, %32
%34 = phi %25, 0:i32, %33
%35 = phi %9, %24, %34
%36 = phi %21, 0:i32, %35
%37 = phi %11, %36, %20
%38 = phi %6, %20, %37
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42:i32 = var
%43:i32 = var
%44 = phi %39, %42, %43
%45 = phi %5, %38, %44
%46 = eq %4, %45
blockpc %3 0 %46 1
%47:i32 = var
blockpc %3 1 %47 1
%48:i32 = var
%49 = phi %3, %48, %4
%50 = phi %2, 0:i32, %49
%51 = eq %50, 0:i32
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
pc %56 1
pc %57 1
pc %58 1
pc %59 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = shl 1:i32, %0
%2 = xor %1, -1:i32
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10 = block 2
%11 = phi %10, 65:i32, 61:i32
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15 = phi %12, %11, 65:i32
%16 = phi %7, %11, %15
%17 = eq %16, 65:i32
blockpc %6 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %6 1 %19 1
%20:i32 = var
%21 = phi %10, %20, 0:i32
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33:i32 = var
%34 = phi %29, %32, %33
%35 = phi %26, 0:i32, %34
%36 = phi %10, %25, %35
%37 = phi %22, 0:i32, %36
%38 = phi %12, %37, %21
%39 = phi %7, %21, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44:i32 = var
%45 = phi %40, %43, %44
%46 = phi %6, %39, %45
%47 = eq %5, %46
blockpc %4 0 %47 1
%48:i32 = var
blockpc %4 1 %48 1
%49:i32 = var
%50 = phi %4, %49, %5
%51 = phi %3, 0:i32, %50
%52 = eq %51, 0:i32
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
%60:i32 = var
pc %52 1
pc %53 1
pc %54 1
pc %55 1
pc %56 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
infer %2


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4:i32 = var
%5 = shl 1:i32, %4
%6 = xor %5, -1:i32
%7 = and %3, %6
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15 = phi %0, 65:i32, 61:i32
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = phi %16, %15, 65:i32
%20 = phi %12, %15, %19
%21 = eq %20, 65:i32
blockpc %11 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %11 1 %23 1
%24:i32 = var
%25 = phi %0, %24, 0:i32
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36:i32 = var
%37:i32 = var
%38 = phi %33, %36, %37
%39 = phi %30, 0:i32, %38
%40 = phi %0, %29, %39
%41 = phi %26, 0:i32, %40
%42 = phi %16, %41, %25
%43 = phi %12, %25, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47:i32 = var
%48:i32 = var
%49 = phi %44, %47, %48
%50 = phi %11, %43, %49
%51 = eq %10, %50
blockpc %9 0 %51 1
%52:i32 = var
blockpc %9 1 %52 1
%53:i32 = var
%54 = phi %9, %53, %10
%55 = phi %8, 0:i32, %54
%56 = eq %55, 0:i32
%57:i32 = var
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
pc %56 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
pc %64 1
infer %7


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5 = phi %4, 65:i32, 61:i32
%6 = eq %5, 61:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12 = phi %9, %5, 65:i32
%13 = phi %3, %5, %12
%14 = eq %13, 65:i32
blockpc %2 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %2 1 %16 1
%17:i32 = var
%18 = phi %4, %17, 0:i32
%19 = block 2
%20:i32 = var
%21 = ne %20, 0:i32
blockpc %19 0 %21 1
%22 = eq %20, 0:i32
blockpc %19 1 %22 1
%23:i32 = var
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30:i32 = var
%31:i32 = var
%32 = phi %27, %30, %31
%33 = phi %24, 0:i32, %32
%34 = phi %4, %23, %33
%35 = phi %19, 0:i32, %34
%36 = phi %9, %35, %18
%37 = phi %3, %18, %36
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41:i32 = var
%42:i32 = var
%43 = phi %38, %41, %42
%44 = phi %2, %37, %43
%45:i32 = var
%46 = eq %44, %45
%47:i32 = zext %46
%48 = eq %47, 0:i32
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 20:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5 = phi %4, 65:i32, 61:i32
%6 = eq %5, 61:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12 = phi %9, %5, 65:i32
%13 = phi %3, %5, %12
%14 = eq %13, 65:i32
blockpc %2 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %2 1 %16 1
%17:i32 = var
%18 = phi %4, %17, 0:i32
%19 = block 2
%20:i32 = var
%21 = ne %20, 0:i32
blockpc %19 0 %21 1
%22 = eq %20, 0:i32
blockpc %19 1 %22 1
%23:i32 = var
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30:i32 = var
%31:i32 = var
%32 = phi %27, %30, %31
%33 = phi %24, 0:i32, %32
%34 = phi %4, %23, %33
%35 = phi %19, 0:i32, %34
%36 = phi %9, %35, %18
%37 = phi %3, %18, %36
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41:i32 = var
%42:i32 = var
%43 = phi %38, %41, %42
%44 = phi %2, %37, %43
%45:i32 = var
%46 = eq %44, %45
%47:i32 = zext %46
%48 = eq %47, 0:i32
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, %4, 0:i32
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = block 2
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14 = phi %9, 0:i32, %13
%15 = phi %3, %8, %14
%16 = phi %7, 0:i32, %15
%17 = phi %6, %16, %5
%18 = phi %2, %5, %17
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = phi %1, %18, %22
%24 = eq %0, %23
%25 = phi %3, 65:i32, 61:i32
%26 = eq %25, 61:i32
blockpc %2 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %2 1 %28 1
%29:i32 = var
blockpc %6 0 %29 1
%30:i32 = var
blockpc %6 1 %30 1
%31 = phi %6, %25, 65:i32
%32 = phi %2, %25, %31
%33 = eq %32, 65:i32
blockpc %1 0 %33 1
%34:i32 = var
blockpc %1 1 %34 1
%35:i32 = var
blockpc %7 0 %35 1
%36:i32 = var
blockpc %7 1 %36 1
%37:i32 = var
blockpc %9 0 %37 1
%38:i32 = var
blockpc %9 1 %38 1
%39:i32 = var
blockpc %10 0 %39 1
%40:i32 = var
blockpc %10 1 %40 1
%41:i32 = var
blockpc %19 0 %41 1
%42:i32 = var
blockpc %19 1 %42 1
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %24


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = eq %5, 0:i32
%7 = block 2
%8 = block 2
%9 = block 2
%10 = phi %9, 65:i32, 61:i32
%11 = eq %10, 61:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14 = block 2
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %23, %26, %27
%29 = phi %20, 0:i32, %28
%30 = phi %9, %19, %29
%31 = phi %15, %18, %30
%32 = eq %31, 0:i32
blockpc %14 0 %32 1
%33:i32 = var
blockpc %14 1 %33 1
%34 = phi %14, %10, 65:i32
%35 = phi %8, %10, %34
%36 = eq %35, 65:i32
blockpc %7 0 %36 1
%37:i32 = var
blockpc %7 1 %37 1
%38:i32 = var
%39 = phi %9, %38, 0:i32
%40:i32 = var
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44:i32 = var
%45:i32 = var
%46 = phi %41, %44, %45
%47 = phi %20, 0:i32, %46
%48 = phi %9, %40, %47
%49 = phi %15, 0:i32, %48
%50 = phi %14, %49, %39
%51 = phi %8, %39, %50
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56:i32 = var
%57 = phi %52, %55, %56
%58 = phi %7, %51, %57
%59 = eq %3, %58
blockpc %1 0 %59 1
%60:i32 = var
blockpc %1 1 %60 1
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
%66:i32 = var
%67:i32 = var
%68:i32 = var
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
pc %66 1
pc %67 1
pc %68 1
infer %6


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 24:i32
%7 = block 2
%8 = block 2
%9 = block 2
%10 = phi %9, 65:i32, 61:i32
%11 = eq %10, 61:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14 = block 2
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %23, %26, %27
%29 = phi %20, 0:i32, %28
%30 = phi %9, %19, %29
%31 = phi %15, %18, %30
%32 = eq %31, 0:i32
blockpc %14 0 %32 1
%33:i32 = var
blockpc %14 1 %33 1
%34 = phi %14, %10, 65:i32
%35 = phi %8, %10, %34
%36 = eq %35, 65:i32
blockpc %7 0 %36 1
%37:i32 = var
blockpc %7 1 %37 1
%38:i32 = var
%39 = phi %9, %38, 0:i32
%40:i32 = var
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44:i32 = var
%45:i32 = var
%46 = phi %41, %44, %45
%47 = phi %20, 0:i32, %46
%48 = phi %9, %40, %47
%49 = phi %15, 0:i32, %48
%50 = phi %14, %49, %39
%51 = phi %8, %39, %50
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56:i32 = var
%57 = phi %52, %55, %56
%58 = phi %7, %51, %57
%59 = eq %3, %58
blockpc %1 0 %59 1
%60:i32 = var
blockpc %1 1 %60 1
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
%66:i32 = var
%67:i32 = var
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
pc %66 1
pc %67 1
infer %6


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23 = add %22, 16:i32
%24 = phi %2, 65:i32, 61:i32
%25 = eq %24, 61:i32
blockpc %1 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %1 1 %27 1
%28:i32 = var
blockpc %5 0 %28 1
%29:i32 = var
blockpc %5 1 %29 1
%30 = phi %5, %24, 65:i32
%31 = phi %1, %24, %30
%32 = eq %31, 65:i32
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %6 0 %34 1
%35:i32 = var
blockpc %6 1 %35 1
%36:i32 = var
blockpc %8 0 %36 1
%37:i32 = var
blockpc %8 1 %37 1
%38:i32 = var
blockpc %9 0 %38 1
%39:i32 = var
blockpc %9 1 %39 1
%40:i32 = var
blockpc %18 0 %40 1
%41:i32 = var
blockpc %18 1 %41 1
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
infer %23


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 2
%8 = block 2
%9 = phi %8, 65:i32, 61:i32
%10 = eq %9, 61:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13 = block 2
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17:i32 = var
%18:i32 = var
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26:i32 = var
%27 = phi %22, %25, %26
%28 = phi %19, 0:i32, %27
%29 = phi %8, %18, %28
%30 = phi %14, %17, %29
%31 = eq %30, 0:i32
blockpc %13 0 %31 1
%32:i32 = var
blockpc %13 1 %32 1
%33 = phi %13, %9, 65:i32
%34 = phi %7, %9, %33
%35 = eq %34, 65:i32
blockpc %6 0 %35 1
%36:i32 = var
blockpc %6 1 %36 1
%37:i32 = var
%38 = phi %8, %37, 0:i32
%39:i32 = var
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44:i32 = var
%45 = phi %40, %43, %44
%46 = phi %19, 0:i32, %45
%47 = phi %8, %39, %46
%48 = phi %14, 0:i32, %47
%49 = phi %13, %48, %38
%50 = phi %7, %38, %49
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54:i32 = var
%55:i32 = var
%56 = phi %51, %54, %55
%57 = phi %6, %50, %56
%58:i32 = var
%59 = ult %57, %58
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
pc %5 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
pc %64 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = block 2
%9 = block 2
%10 = block 2
%11 = phi %10, 65:i32, 61:i32
%12 = eq %11, 61:i32
blockpc %9 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %9 1 %14 1
%15 = block 2
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19:i32 = var
%20:i32 = var
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28:i32 = var
%29 = phi %24, %27, %28
%30 = phi %21, 0:i32, %29
%31 = phi %10, %20, %30
%32 = phi %16, %19, %31
%33 = eq %32, 0:i32
blockpc %15 0 %33 1
%34:i32 = var
blockpc %15 1 %34 1
%35 = phi %15, %11, 65:i32
%36 = phi %9, %11, %35
%37 = eq %36, 65:i32
blockpc %8 0 %37 1
%38:i32 = var
blockpc %8 1 %38 1
%39:i32 = var
%40 = phi %10, %39, 0:i32
%41:i32 = var
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45:i32 = var
%46:i32 = var
%47 = phi %42, %45, %46
%48 = phi %21, 0:i32, %47
%49 = phi %10, %41, %48
%50 = phi %16, 0:i32, %49
%51 = phi %15, %50, %40
%52 = phi %9, %40, %51
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56:i32 = var
%57:i32 = var
%58 = phi %53, %56, %57
%59 = phi %8, %52, %58
%60:i32 = var
%61 = ult %59, %60
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
%66:i32 = var
pc %7 1
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
pc %66 1
infer %3


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 16:i32
%7 = block 2
%8 = block 2
%9 = block 2
%10 = phi %9, 65:i32, 61:i32
%11 = eq %10, 61:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14 = block 2
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %23, %26, %27
%29 = phi %20, 0:i32, %28
%30 = phi %9, %19, %29
%31 = phi %15, %18, %30
%32 = eq %31, 0:i32
blockpc %14 0 %32 1
%33:i32 = var
blockpc %14 1 %33 1
%34 = phi %14, %10, 65:i32
%35 = phi %8, %10, %34
%36 = eq %35, 65:i32
blockpc %7 0 %36 1
%37:i32 = var
blockpc %7 1 %37 1
%38:i32 = var
%39 = phi %9, %38, 0:i32
%40:i32 = var
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44:i32 = var
%45:i32 = var
%46 = phi %41, %44, %45
%47 = phi %20, 0:i32, %46
%48 = phi %9, %40, %47
%49 = phi %15, 0:i32, %48
%50 = phi %14, %49, %39
%51 = phi %8, %39, %50
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56:i32 = var
%57 = phi %52, %55, %56
%58 = phi %7, %51, %57
%59 = eq %3, %58
blockpc %1 0 %59 1
%60:i32 = var
blockpc %1 1 %60 1
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
%66:i32 = var
%67:i32 = var
%68:i32 = var
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
pc %66 1
pc %67 1
pc %68 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 24:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9 = block 2
%10 = block 2
%11 = block 2
%12 = phi %11, 65:i32, 61:i32
%13 = eq %12, 61:i32
blockpc %10 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %10 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29:i32 = var
%30 = phi %25, %28, %29
%31 = phi %22, 0:i32, %30
%32 = phi %11, %21, %31
%33 = phi %17, %20, %32
%34 = eq %33, 0:i32
blockpc %16 0 %34 1
%35:i32 = var
blockpc %16 1 %35 1
%36 = phi %16, %12, 65:i32
%37 = phi %10, %12, %36
%38 = eq %37, 65:i32
blockpc %9 0 %38 1
%39:i32 = var
blockpc %9 1 %39 1
%40:i32 = var
%41 = phi %11, %40, 0:i32
%42:i32 = var
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46:i32 = var
%47:i32 = var
%48 = phi %43, %46, %47
%49 = phi %22, 0:i32, %48
%50 = phi %11, %42, %49
%51 = phi %17, 0:i32, %50
%52 = phi %16, %51, %41
%53 = phi %10, %41, %52
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57:i32 = var
%58:i32 = var
%59 = phi %54, %57, %58
%60 = phi %9, %53, %59
%61:i32 = var
%62 = ult %60, %61
%63:i32 = var
%64:i32 = var
%65:i32 = var
%66:i32 = var
%67:i32 = var
pc %4 1
pc %8 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
pc %66 1
pc %67 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23 = add %22, 20:i32
%24 = phi %2, 65:i32, 61:i32
%25 = eq %24, 61:i32
blockpc %1 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %1 1 %27 1
%28:i32 = var
blockpc %5 0 %28 1
%29:i32 = var
blockpc %5 1 %29 1
%30 = phi %5, %24, 65:i32
%31 = phi %1, %24, %30
%32 = eq %31, 65:i32
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %6 0 %34 1
%35:i32 = var
blockpc %6 1 %35 1
%36:i32 = var
blockpc %8 0 %36 1
%37:i32 = var
blockpc %8 1 %37 1
%38:i32 = var
blockpc %9 0 %38 1
%39:i32 = var
blockpc %9 1 %39 1
%40:i32 = var
blockpc %18 0 %40 1
%41:i32 = var
blockpc %18 1 %41 1
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
infer %23


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 2
%8 = block 2
%9 = phi %8, 65:i32, 61:i32
%10 = eq %9, 61:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13 = block 2
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17:i32 = var
%18:i32 = var
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26:i32 = var
%27 = phi %22, %25, %26
%28 = phi %19, 0:i32, %27
%29 = phi %8, %18, %28
%30 = phi %14, %17, %29
%31 = eq %30, 0:i32
blockpc %13 0 %31 1
%32:i32 = var
blockpc %13 1 %32 1
%33 = phi %13, %9, 65:i32
%34 = phi %7, %9, %33
%35 = eq %34, 65:i32
blockpc %6 0 %35 1
%36:i32 = var
blockpc %6 1 %36 1
%37:i32 = var
%38 = phi %8, %37, 0:i32
%39:i32 = var
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44:i32 = var
%45 = phi %40, %43, %44
%46 = phi %19, 0:i32, %45
%47 = phi %8, %39, %46
%48 = phi %14, 0:i32, %47
%49 = phi %13, %48, %38
%50 = phi %7, %38, %49
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54:i32 = var
%55:i32 = var
%56 = phi %51, %54, %55
%57 = phi %6, %50, %56
%58:i32 = var
%59 = ult %57, %58
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
pc %5 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
pc %64 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 20:i32
%7 = block 2
%8 = block 2
%9 = block 2
%10 = phi %9, 65:i32, 61:i32
%11 = eq %10, 61:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14 = block 2
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26:i32 = var
%27:i32 = var
%28 = phi %23, %26, %27
%29 = phi %20, 0:i32, %28
%30 = phi %9, %19, %29
%31 = phi %15, %18, %30
%32 = eq %31, 0:i32
blockpc %14 0 %32 1
%33:i32 = var
blockpc %14 1 %33 1
%34 = phi %14, %10, 65:i32
%35 = phi %8, %10, %34
%36 = eq %35, 65:i32
blockpc %7 0 %36 1
%37:i32 = var
blockpc %7 1 %37 1
%38:i32 = var
%39 = phi %9, %38, 0:i32
%40:i32 = var
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44:i32 = var
%45:i32 = var
%46 = phi %41, %44, %45
%47 = phi %20, 0:i32, %46
%48 = phi %9, %40, %47
%49 = phi %15, 0:i32, %48
%50 = phi %14, %49, %39
%51 = phi %8, %39, %50
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56:i32 = var
%57 = phi %52, %55, %56
%58 = phi %7, %51, %57
%59 = eq %3, %58
blockpc %1 0 %59 1
%60:i32 = var
blockpc %1 1 %60 1
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
%66:i32 = var
%67:i32 = var
%68:i32 = var
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
pc %66 1
pc %67 1
pc %68 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 24:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9 = block 2
%10 = block 2
%11 = block 2
%12 = phi %11, 65:i32, 61:i32
%13 = eq %12, 61:i32
blockpc %10 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %10 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29:i32 = var
%30 = phi %25, %28, %29
%31 = phi %22, 0:i32, %30
%32 = phi %11, %21, %31
%33 = phi %17, %20, %32
%34 = eq %33, 0:i32
blockpc %16 0 %34 1
%35:i32 = var
blockpc %16 1 %35 1
%36 = phi %16, %12, 65:i32
%37 = phi %10, %12, %36
%38 = eq %37, 65:i32
blockpc %9 0 %38 1
%39:i32 = var
blockpc %9 1 %39 1
%40:i32 = var
%41 = phi %11, %40, 0:i32
%42:i32 = var
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46:i32 = var
%47:i32 = var
%48 = phi %43, %46, %47
%49 = phi %22, 0:i32, %48
%50 = phi %11, %42, %49
%51 = phi %17, 0:i32, %50
%52 = phi %16, %51, %41
%53 = phi %10, %41, %52
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57:i32 = var
%58:i32 = var
%59 = phi %54, %57, %58
%60 = phi %9, %53, %59
%61:i32 = var
%62 = ult %60, %61
%63:i32 = var
%64:i32 = var
%65:i32 = var
%66:i32 = var
%67:i32 = var
pc %4 1
pc %8 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
pc %66 1
pc %67 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = add %8, 11:i32 (hasExternalUses)
%10 = and %9, -8:i32 (hasExternalUses)
%11 = sub 0:i32, %10 (hasExternalUses)
%12 = block 2
%13:i32 = var
%14 = and %13, -8:i32
%15 = sub %14, %10 (hasExternalUses)
%16:i32 = var
%17 = phi %12, %15, %16
%18 = phi %7, %11, %17
%19 = phi %2, %6, %18
%20 = phi %5, %19, %4
%21 = phi %1, %4, %20
%22 = block 2
%23:i32 = var
%24 = and %23, -8:i32
%25:i32 = var
%26 = phi %2, %25, %10
%27 = sub %24, %26 (hasExternalUses)
%28:i32 = var
%29 = phi %22, %27, %28
%30 = phi %0, %21, %29
%31 = ult %30, 16:i32
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %1 0 %34 1
%35:i32 = var
blockpc %1 1 %35 1
%36:i32 = var
blockpc %5 0 %36 1
%37:i32 = var
blockpc %5 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %12 0 %40 1
%41:i32 = var
blockpc %12 1 %41 1
%42:i32 = var
blockpc %22 0 %42 1
%43:i32 = var
blockpc %22 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
infer %31


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = add %8, 11:i32 (hasExternalUses)
%10 = and %9, -8:i32 (hasExternalUses)
%11 = sub 0:i32, %10 (hasExternalUses)
%12 = block 2
%13:i32 = var
%14 = and %13, -8:i32
%15 = sub %14, %10 (hasExternalUses)
%16:i32 = var
%17 = phi %12, %15, %16
%18 = phi %7, %11, %17
%19 = phi %2, %6, %18
%20 = phi %5, %19, %4
%21 = phi %1, %4, %20
%22 = block 2
%23:i32 = var
%24 = and %23, -8:i32
%25:i32 = var
%26 = phi %2, %25, %10
%27 = sub %24, %26 (hasExternalUses)
%28:i32 = var
%29 = phi %22, %27, %28
%30 = phi %0, %21, %29
%31 = add %30, %26
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %1 0 %34 1
%35:i32 = var
blockpc %1 1 %35 1
%36:i32 = var
blockpc %5 0 %36 1
%37:i32 = var
blockpc %5 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %12 0 %40 1
%41:i32 = var
blockpc %12 1 %41 1
%42:i32 = var
blockpc %22 0 %42 1
%43:i32 = var
blockpc %22 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %31


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23 = add %22, 4:i32
%24 = phi %2, 65:i32, 61:i32
%25 = eq %24, 61:i32
blockpc %1 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %1 1 %27 1
%28:i32 = var
blockpc %5 0 %28 1
%29:i32 = var
blockpc %5 1 %29 1
%30 = phi %5, %24, 65:i32
%31 = phi %1, %24, %30
%32 = eq %31, 65:i32
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %6 0 %34 1
%35:i32 = var
blockpc %6 1 %35 1
%36:i32 = var
blockpc %8 0 %36 1
%37:i32 = var
blockpc %8 1 %37 1
%38:i32 = var
blockpc %9 0 %38 1
%39:i32 = var
blockpc %9 1 %39 1
%40:i32 = var
blockpc %18 0 %40 1
%41:i32 = var
blockpc %18 1 %41 1
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
infer %23


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = and %8, -8:i32 (hasExternalUses)
%10 = sub 0:i32, %9 (hasExternalUses)
%11 = block 2
%12:i32 = var
%13 = sub %12, %9 (hasExternalUses)
%14:i32 = var
%15 = phi %11, %13, %14
%16 = phi %7, %10, %15
%17 = phi %2, %6, %16
%18 = phi %5, %17, %4
%19 = phi %1, %4, %18
%20 = block 2
%21:i32 = var
%22 = and %21, -8:i32
%23:i32 = var
%24 = phi %2, %23, %9
%25 = sub %22, %24 (hasExternalUses)
%26:i32 = var
%27 = phi %20, %25, %26
%28 = phi %0, %19, %27
%29 = add %28, %24 (hasExternalUses)
%30 = or %29, 3:i32
%31:i32 = var
blockpc %0 0 %31 1
%32:i32 = var
blockpc %0 1 %32 1
%33:i32 = var
blockpc %1 0 %33 1
%34:i32 = var
blockpc %1 1 %34 1
%35:i32 = var
blockpc %5 0 %35 1
%36:i32 = var
blockpc %5 1 %36 1
%37:i32 = var
blockpc %7 0 %37 1
%38:i32 = var
blockpc %7 1 %38 1
%39:i32 = var
blockpc %11 0 %39 1
%40:i32 = var
blockpc %11 1 %40 1
%41:i32 = var
blockpc %20 0 %41 1
%42:i32 = var
blockpc %20 1 %42 1
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
infer %30


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24 = phi %2, %23, 0:i32
%25:i32 = var
%26:i32 = var
%27 = and %26, -8:i32 (hasExternalUses)
%28 = sub 0:i32, %27 (hasExternalUses)
%29:i32 = var
%30 = sub %29, %27 (hasExternalUses)
%31:i32 = var
%32 = phi %9, %30, %31
%33 = phi %8, %28, %32
%34 = phi %2, %25, %33
%35 = phi %5, %34, %24
%36 = phi %1, %24, %35
%37 = block 2
%38:i32 = var
%39:i32 = var
%40 = phi %37, %38, %39
%41 = phi %0, %36, %40
%42:i32 = var
%43 = phi %2, %42, %27
%44 = add %41, %43 (hasExternalUses)
%45 = add %22, %44
%46:i32 = var
blockpc %0 0 %46 1
%47:i32 = var
blockpc %0 1 %47 1
%48:i32 = var
blockpc %1 0 %48 1
%49:i32 = var
blockpc %1 1 %49 1
%50:i32 = var
blockpc %5 0 %50 1
%51:i32 = var
blockpc %5 1 %51 1
%52:i32 = var
blockpc %6 0 %52 1
%53:i32 = var
blockpc %6 1 %53 1
%54:i32 = var
blockpc %8 0 %54 1
%55:i32 = var
blockpc %8 1 %55 1
%56:i32 = var
blockpc %9 0 %56 1
%57:i32 = var
blockpc %9 1 %57 1
%58:i32 = var
blockpc %18 0 %58 1
%59:i32 = var
blockpc %18 1 %59 1
blockpc %37 0 %58 1
%60:i32 = var
blockpc %37 1 %60 1
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
%66:i32 = var
%67:i32 = var
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
pc %66 1
pc %67 1
infer %45


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24 = phi %2, %23, 0:i32
%25:i32 = var
%26:i32 = var
%27 = sub 0:i32, %26 (hasExternalUses)
%28:i32 = var
%29:i32 = var
%30 = phi %9, %28, %29
%31 = phi %8, %27, %30
%32 = phi %2, %25, %31
%33 = phi %5, %32, %24
%34 = phi %1, %24, %33
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %37
%39 = phi %0, %34, %38
%40:i32 = var
%41 = phi %2, %40, %26
%42 = add %39, %41 (hasExternalUses)
%43 = add %22, %42
%44 = add %43, 4:i32
%45:i32 = var
blockpc %0 0 %45 1
%46:i32 = var
blockpc %0 1 %46 1
%47:i32 = var
blockpc %1 0 %47 1
%48:i32 = var
blockpc %1 1 %48 1
%49:i32 = var
blockpc %5 0 %49 1
%50:i32 = var
blockpc %5 1 %50 1
%51:i32 = var
blockpc %6 0 %51 1
%52:i32 = var
blockpc %6 1 %52 1
%53:i32 = var
blockpc %8 0 %53 1
%54:i32 = var
blockpc %8 1 %54 1
%55:i32 = var
blockpc %9 0 %55 1
%56:i32 = var
blockpc %9 1 %56 1
%57:i32 = var
blockpc %18 0 %57 1
%58:i32 = var
blockpc %18 1 %58 1
blockpc %35 0 %57 1
%59:i32 = var
blockpc %35 1 %59 1
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
%66:i32 = var
pc %60 1
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
pc %66 1
infer %44


; start LHS (in $38)
%0:i32 = var
%1 = or %0, 1:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5 = phi %4, 65:i32, 61:i32
%6 = eq %5, 61:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14:i32 = var
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21:i32 = var
%22:i32 = var
%23 = phi %18, %21, %22
%24 = phi %15, 0:i32, %23
%25 = phi %4, %14, %24
%26 = phi %10, %13, %25
%27 = eq %26, 0:i32
blockpc %9 0 %27 1
%28:i32 = var
blockpc %9 1 %28 1
%29 = phi %9, %5, 65:i32
%30 = phi %3, %5, %29
%31 = eq %30, 65:i32
blockpc %2 0 %31 1
%32:i32 = var
blockpc %2 1 %32 1
%33:i32 = var
%34 = phi %4, %33, 0:i32
%35:i32 = var
%36:i32 = var
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40:i32 = var
%41:i32 = var
%42 = phi %37, %40, %41
%43 = phi %15, %36, %42
%44 = phi %4, %35, %43
%45 = phi %9, %44, %34
%46 = phi %3, %34, %45
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50:i32 = var
%51:i32 = var
%52 = phi %47, %50, %51
%53 = phi %2, %46, %52
%54 = ult %53, 16:i32
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
%60:i32 = var
pc %54 1
pc %55 1
pc %56 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23 = add %22, 4:i32
%24 = phi %2, 65:i32, 61:i32
%25 = eq %24, 61:i32
blockpc %1 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %1 1 %27 1
%28:i32 = var
blockpc %5 0 %28 1
%29:i32 = var
blockpc %5 1 %29 1
%30 = phi %5, %24, 65:i32
%31 = phi %1, %24, %30
%32 = eq %31, 65:i32
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %6 0 %34 1
%35:i32 = var
blockpc %6 1 %35 1
%36:i32 = var
blockpc %8 0 %36 1
%37:i32 = var
blockpc %8 1 %37 1
%38:i32 = var
blockpc %9 0 %38 1
%39:i32 = var
blockpc %9 1 %39 1
%40:i32 = var
blockpc %18 0 %40 1
%41:i32 = var
blockpc %18 1 %41 1
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
infer %23


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = add %2, 11:i32 (hasExternalUses)
%4 = and %3, -8:i32 (hasExternalUses)
%5 = phi %0, %1, %4
%6 = or %5, 3:i32
%7 = block 2
%8 = block 2
%9 = phi %0, 65:i32, 61:i32
%10 = eq %9, 61:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16 = phi %13, %9, 65:i32
%17 = phi %8, %9, %16
%18 = eq %17, 65:i32
blockpc %7 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %7 1 %20 1
%21:i32 = var
%22 = phi %0, %21, 0:i32
%23:i32 = var
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32:i32 = var
%33 = phi %28, %31, %32
%34 = phi %24, %27, %33
%35 = phi %0, %23, %34
%36 = phi %13, %35, %22
%37 = phi %8, %22, %36
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41:i32 = var
%42:i32 = var
%43 = phi %38, %41, %42
%44 = phi %7, %37, %43
%45 = ult %44, 16:i32
%46:i32 = zext %45
%47 = eq %46, 0:i32
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
infer %6


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29 = add %28, 4:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %6 0 %36 1
%37:i32 = var
blockpc %6 1 %37 1
%38:i32 = var
blockpc %8 0 %38 1
%39:i32 = var
blockpc %8 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %18 0 %42 1
%43:i32 = var
blockpc %18 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %29


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = add %8, 11:i32 (hasExternalUses)
%10 = and %9, -8:i32 (hasExternalUses)
%11 = sub 0:i32, %10 (hasExternalUses)
%12 = block 2
%13:i32 = var
%14 = and %13, -8:i32
%15 = sub %14, %10 (hasExternalUses)
%16:i32 = var
%17 = phi %12, %15, %16
%18 = phi %7, %11, %17
%19 = phi %2, %6, %18
%20 = phi %5, %19, %4
%21 = phi %1, %4, %20
%22 = block 2
%23:i32 = var
%24 = and %23, -8:i32
%25:i32 = var
%26 = phi %2, %25, %10
%27 = sub %24, %26 (hasExternalUses)
%28:i32 = var
%29 = phi %22, %27, %28
%30 = phi %0, %21, %29
%31 = or %30, 1:i32
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %1 0 %34 1
%35:i32 = var
blockpc %1 1 %35 1
%36:i32 = var
blockpc %5 0 %36 1
%37:i32 = var
blockpc %5 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %12 0 %40 1
%41:i32 = var
blockpc %12 1 %41 1
%42:i32 = var
blockpc %22 0 %42 1
%43:i32 = var
blockpc %22 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %31


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29:i32 = var
%30 = phi %2, %29, 0:i32
%31:i32 = var
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35 = phi %9, %33, %34
%36 = phi %8, %32, %35
%37 = phi %2, %31, %36
%38 = phi %5, %37, %30
%39 = phi %1, %30, %38
%40 = block 2
%41:i32 = var
%42:i32 = var
%43 = phi %40, %41, %42
%44 = phi %0, %39, %43
%45 = add %28, %44
%46:i32 = var
blockpc %0 0 %46 1
%47:i32 = var
blockpc %0 1 %47 1
%48:i32 = var
blockpc %1 0 %48 1
%49:i32 = var
blockpc %1 1 %49 1
%50:i32 = var
blockpc %5 0 %50 1
%51:i32 = var
blockpc %5 1 %51 1
%52:i32 = var
blockpc %6 0 %52 1
%53:i32 = var
blockpc %6 1 %53 1
%54:i32 = var
blockpc %8 0 %54 1
%55:i32 = var
blockpc %8 1 %55 1
%56:i32 = var
blockpc %9 0 %56 1
%57:i32 = var
blockpc %9 1 %57 1
%58:i32 = var
blockpc %18 0 %58 1
%59:i32 = var
blockpc %18 1 %59 1
blockpc %40 0 %58 1
%60:i32 = var
blockpc %40 1 %60 1
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
%66:i32 = var
%67:i32 = var
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
pc %66 1
pc %67 1
infer %45


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = add %8, 11:i32 (hasExternalUses)
%10 = and %9, -8:i32 (hasExternalUses)
%11 = sub 0:i32, %10 (hasExternalUses)
%12 = block 2
%13:i32 = var
%14 = and %13, -8:i32
%15 = sub %14, %10 (hasExternalUses)
%16:i32 = var
%17 = phi %12, %15, %16
%18 = phi %7, %11, %17
%19 = phi %2, %6, %18
%20 = phi %5, %19, %4
%21 = phi %1, %4, %20
%22 = block 2
%23:i32 = var
%24 = and %23, -8:i32
%25:i32 = var
%26 = phi %2, %25, %10
%27 = sub %24, %26 (hasExternalUses)
%28:i32 = var
%29 = phi %22, %27, %28
%30 = phi %0, %21, %29
%31 = lshr %30, 3:i32
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %1 0 %34 1
%35:i32 = var
blockpc %1 1 %35 1
%36:i32 = var
blockpc %5 0 %36 1
%37:i32 = var
blockpc %5 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %12 0 %40 1
%41:i32 = var
blockpc %12 1 %41 1
%42:i32 = var
blockpc %22 0 %42 1
%43:i32 = var
blockpc %22 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %31


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = add %8, 11:i32 (hasExternalUses)
%10 = and %9, -8:i32 (hasExternalUses)
%11 = sub 0:i32, %10 (hasExternalUses)
%12 = block 2
%13:i32 = var
%14 = and %13, -8:i32
%15 = sub %14, %10 (hasExternalUses)
%16:i32 = var
%17 = phi %12, %15, %16
%18 = phi %7, %11, %17
%19 = phi %2, %6, %18
%20 = phi %5, %19, %4
%21 = phi %1, %4, %20
%22 = block 2
%23:i32 = var
%24 = and %23, -8:i32
%25:i32 = var
%26 = phi %2, %25, %10
%27 = sub %24, %26 (hasExternalUses)
%28:i32 = var
%29 = phi %22, %27, %28
%30 = phi %0, %21, %29
%31 = ult %30, 256:i32
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %1 0 %34 1
%35:i32 = var
blockpc %1 1 %35 1
%36:i32 = var
blockpc %5 0 %36 1
%37:i32 = var
blockpc %5 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %12 0 %40 1
%41:i32 = var
blockpc %12 1 %41 1
%42:i32 = var
blockpc %22 0 %42 1
%43:i32 = var
blockpc %22 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %31


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = and %8, -8:i32 (hasExternalUses)
%10 = sub 0:i32, %9 (hasExternalUses)
%11 = block 2
%12:i32 = var
%13 = sub %12, %9 (hasExternalUses)
%14:i32 = var
%15 = phi %11, %13, %14
%16 = phi %7, %10, %15
%17 = phi %2, %6, %16
%18 = phi %5, %17, %4
%19 = phi %1, %4, %18
%20 = block 2
%21:i32 = var
%22 = and %21, -8:i32
%23:i32 = var
%24 = phi %2, %23, %9
%25 = sub %22, %24 (hasExternalUses)
%26:i32 = var
%27 = phi %20, %25, %26
%28 = phi %0, %19, %27
%29 = lshr %28, 3:i32 (hasExternalUses)
%30 = shl %29, 1:i32
%31:i32 = var
blockpc %0 0 %31 1
%32:i32 = var
blockpc %0 1 %32 1
%33:i32 = var
blockpc %1 0 %33 1
%34:i32 = var
blockpc %1 1 %34 1
%35:i32 = var
blockpc %5 0 %35 1
%36:i32 = var
blockpc %5 1 %36 1
%37:i32 = var
blockpc %7 0 %37 1
%38:i32 = var
blockpc %7 1 %38 1
%39:i32 = var
blockpc %11 0 %39 1
%40:i32 = var
blockpc %11 1 %40 1
%41:i32 = var
blockpc %20 0 %41 1
%42:i32 = var
blockpc %20 1 %42 1
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %30


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = sub 0:i32, %8 (hasExternalUses)
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14 = phi %7, %9, %13
%15 = phi %2, %6, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20 = and %19, -8:i32
%21:i32 = var
%22 = phi %2, %21, %8
%23 = sub %20, %22 (hasExternalUses)
%24:i32 = var
%25 = phi %18, %23, %24
%26 = phi %0, %17, %25
%27 = lshr %26, 3:i32 (hasExternalUses)
%28 = shl %27, 1:i32
%29 = shl %28, 2:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %7 0 %36 1
%37:i32 = var
blockpc %7 1 %37 1
%38:i32 = var
blockpc %10 0 %38 1
%39:i32 = var
blockpc %10 1 %39 1
%40:i32 = var
blockpc %18 0 %40 1
%41:i32 = var
blockpc %18 1 %41 1
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
infer %29


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19 = and %18, -8:i32
%20:i32 = var
%21:i32 = var
%22 = and %21, -8:i32 (hasExternalUses)
%23 = phi %2, %20, %22
%24 = sub %19, %23 (hasExternalUses)
%25:i32 = var
%26 = phi %17, %24, %25
%27 = phi %0, %16, %26
%28 = lshr %27, 3:i32 (hasExternalUses)
%29 = shl %28, 1:i32
%30 = shl %29, 2:i32
%31 = add 3144:i32, %30
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %1 0 %34 1
%35:i32 = var
blockpc %1 1 %35 1
%36:i32 = var
blockpc %5 0 %36 1
%37:i32 = var
blockpc %5 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %17 0 %42 1
%43:i32 = var
blockpc %17 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
infer %31


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = and %8, -8:i32 (hasExternalUses)
%10 = sub 0:i32, %9 (hasExternalUses)
%11 = block 2
%12:i32 = var
%13 = sub %12, %9 (hasExternalUses)
%14:i32 = var
%15 = phi %11, %13, %14
%16 = phi %7, %10, %15
%17 = phi %2, %6, %16
%18 = phi %5, %17, %4
%19 = phi %1, %4, %18
%20 = block 2
%21:i32 = var
%22 = and %21, -8:i32
%23:i32 = var
%24 = phi %2, %23, %9
%25 = sub %22, %24 (hasExternalUses)
%26:i32 = var
%27 = phi %20, %25, %26
%28 = phi %0, %19, %27
%29 = lshr %28, 3:i32 (hasExternalUses)
%30 = shl 1:i32, %29
%31:i32 = var
blockpc %0 0 %31 1
%32:i32 = var
blockpc %0 1 %32 1
%33:i32 = var
blockpc %1 0 %33 1
%34:i32 = var
blockpc %1 1 %34 1
%35:i32 = var
blockpc %5 0 %35 1
%36:i32 = var
blockpc %5 1 %36 1
%37:i32 = var
blockpc %7 0 %37 1
%38:i32 = var
blockpc %7 1 %38 1
%39:i32 = var
blockpc %11 0 %39 1
%40:i32 = var
blockpc %11 1 %40 1
%41:i32 = var
blockpc %20 0 %41 1
%42:i32 = var
blockpc %20 1 %42 1
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %30


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = block 2
%9:i32 = var
%10 = sub 0:i32, %9 (hasExternalUses)
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %8, %10, %14
%16 = phi %3, %7, %15
%17 = phi %6, %16, %5
%18 = phi %2, %5, %17
%19 = block 2
%20:i32 = var
%21 = and %20, -8:i32
%22:i32 = var
%23 = phi %3, %22, %9
%24 = sub %21, %23 (hasExternalUses)
%25:i32 = var
%26 = phi %19, %24, %25
%27 = phi %1, %18, %26
%28 = lshr %27, 3:i32 (hasExternalUses)
%29 = shl 1:i32, %28 (hasExternalUses)
%30 = and %0, %29
%31:i32 = var
blockpc %1 0 %31 1
%32:i32 = var
blockpc %1 1 %32 1
%33:i32 = var
blockpc %2 0 %33 1
%34:i32 = var
blockpc %2 1 %34 1
%35:i32 = var
blockpc %6 0 %35 1
%36:i32 = var
blockpc %6 1 %36 1
%37:i32 = var
blockpc %8 0 %37 1
%38:i32 = var
blockpc %8 1 %38 1
%39:i32 = var
blockpc %11 0 %39 1
%40:i32 = var
blockpc %11 1 %40 1
%41:i32 = var
blockpc %19 0 %41 1
%42:i32 = var
blockpc %19 1 %42 1
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %30


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = block 2
%9:i32 = var
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14 = phi %8, %9, %13
%15 = phi %3, %7, %14
%16 = phi %6, %15, %5
%17 = phi %2, %5, %16
%18 = block 2
%19:i32 = var
%20 = and %19, -8:i32
%21:i32 = var
%22:i32 = var
%23 = and %22, -8:i32 (hasExternalUses)
%24 = phi %3, %21, %23
%25 = sub %20, %24 (hasExternalUses)
%26:i32 = var
%27 = phi %18, %25, %26
%28 = phi %1, %17, %27
%29 = lshr %28, 3:i32 (hasExternalUses)
%30 = shl 1:i32, %29 (hasExternalUses)
%31 = and %0, %30
%32 = eq %31, 0:i32
%33:i32 = var
blockpc %1 0 %33 1
%34:i32 = var
blockpc %1 1 %34 1
%35:i32 = var
blockpc %2 0 %35 1
%36:i32 = var
blockpc %2 1 %36 1
%37:i32 = var
blockpc %6 0 %37 1
%38:i32 = var
blockpc %6 1 %38 1
%39:i32 = var
blockpc %8 0 %39 1
%40:i32 = var
blockpc %8 1 %40 1
%41:i32 = var
blockpc %10 0 %41 1
%42:i32 = var
blockpc %10 1 %42 1
%43:i32 = var
blockpc %18 0 %43 1
%44:i32 = var
blockpc %18 1 %44 1
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %32


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = block 2
%9:i32 = var
%10 = sub 0:i32, %9 (hasExternalUses)
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %8, %10, %14
%16 = phi %3, %7, %15
%17 = phi %6, %16, %5
%18 = phi %2, %5, %17
%19 = block 2
%20:i32 = var
%21 = and %20, -8:i32
%22:i32 = var
%23 = phi %3, %22, %9
%24 = sub %21, %23 (hasExternalUses)
%25:i32 = var
%26 = phi %19, %24, %25
%27 = phi %1, %18, %26
%28 = lshr %27, 3:i32 (hasExternalUses)
%29 = shl 1:i32, %28 (hasExternalUses)
%30 = or %0, %29
%31:i32 = var
blockpc %1 0 %31 1
%32:i32 = var
blockpc %1 1 %32 1
%33:i32 = var
blockpc %2 0 %33 1
%34:i32 = var
blockpc %2 1 %34 1
%35:i32 = var
blockpc %6 0 %35 1
%36:i32 = var
blockpc %6 1 %36 1
%37:i32 = var
blockpc %8 0 %37 1
%38:i32 = var
blockpc %8 1 %38 1
%39:i32 = var
blockpc %11 0 %39 1
%40:i32 = var
blockpc %11 1 %40 1
%41:i32 = var
blockpc %19 0 %41 1
%42:i32 = var
blockpc %19 1 %42 1
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
infer %30


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19 = and %18, -8:i32
%20:i32 = var
%21:i32 = var
%22 = phi %2, %20, %21
%23 = sub %19, %22 (hasExternalUses)
%24:i32 = var
%25 = phi %17, %23, %24
%26 = phi %0, %16, %25
%27 = lshr %26, 3:i32 (hasExternalUses)
%28 = shl %27, 1:i32
%29 = shl %28, 2:i32
%30 = add 3144:i32, %29 (hasExternalUses)
%31 = add %30, 8:i32
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %1 0 %34 1
%35:i32 = var
blockpc %1 1 %35 1
%36:i32 = var
blockpc %5 0 %36 1
%37:i32 = var
blockpc %5 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %17 0 %42 1
%43:i32 = var
blockpc %17 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %31


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19 = and %18, -8:i32
%20:i32 = var
%21:i32 = var
%22 = phi %2, %20, %21
%23 = sub %19, %22 (hasExternalUses)
%24:i32 = var
%25 = phi %17, %23, %24
%26 = phi %0, %16, %25
%27 = lshr %26, 3:i32 (hasExternalUses)
%28 = shl %27, 1:i32
%29 = shl %28, 2:i32
%30 = add 3144:i32, %29 (hasExternalUses)
%31 = add %30, 8:i32
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %1 0 %34 1
%35:i32 = var
blockpc %1 1 %35 1
%36:i32 = var
blockpc %5 0 %36 1
%37:i32 = var
blockpc %5 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %17 0 %42 1
%43:i32 = var
blockpc %17 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %31


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, %4, 0:i32
%6 = block 2
%7:i32 = var
%8 = block 2
%9:i32 = var
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14 = phi %8, %9, %13
%15 = phi %3, %7, %14
%16 = phi %6, %15, %5
%17 = phi %2, %5, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21:i32 = var
%22 = phi %3, %20, %21
%23 = sub %19, %22 (hasExternalUses)
%24:i32 = var
%25 = phi %18, %23, %24
%26 = phi %1, %17, %25
%27 = lshr %26, 3:i32 (hasExternalUses)
%28 = shl %27, 1:i32
%29 = shl %28, 2:i32
%30 = add 3144:i32, %29 (hasExternalUses)
%31:i32 = var
%32 = phi %0, %30, %31
%33 = add %32, 12:i32
%34:i32 = var
blockpc %0 0 %34 1
%35:i32 = var
blockpc %0 1 %35 1
%36:i32 = var
blockpc %1 0 %36 1
%37:i32 = var
blockpc %1 1 %37 1
%38:i32 = var
blockpc %2 0 %38 1
%39:i32 = var
blockpc %2 1 %39 1
%40:i32 = var
blockpc %6 0 %40 1
%41:i32 = var
blockpc %6 1 %41 1
%42:i32 = var
blockpc %8 0 %42 1
%43:i32 = var
blockpc %8 1 %43 1
%44:i32 = var
blockpc %10 0 %44 1
%45:i32 = var
blockpc %10 1 %45 1
%46:i32 = var
blockpc %18 0 %46 1
%47:i32 = var
blockpc %18 1 %47 1
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
infer %33


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29 = add %28, 8:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %6 0 %36 1
%37:i32 = var
blockpc %6 1 %37 1
%38:i32 = var
blockpc %8 0 %38 1
%39:i32 = var
blockpc %8 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %18 0 %42 1
%43:i32 = var
blockpc %18 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
infer %29


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29 = add %28, 12:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %6 0 %36 1
%37:i32 = var
blockpc %6 1 %37 1
%38:i32 = var
blockpc %8 0 %38 1
%39:i32 = var
blockpc %8 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %18 0 %42 1
%43:i32 = var
blockpc %18 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
infer %29


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = add %8, 11:i32 (hasExternalUses)
%10 = and %9, -8:i32 (hasExternalUses)
%11 = sub 0:i32, %10 (hasExternalUses)
%12 = block 2
%13:i32 = var
%14 = and %13, -8:i32
%15 = sub %14, %10 (hasExternalUses)
%16:i32 = var
%17 = phi %12, %15, %16
%18 = phi %7, %11, %17
%19 = phi %2, %6, %18
%20 = phi %5, %19, %4
%21 = phi %1, %4, %20
%22 = block 2
%23:i32 = var
%24 = and %23, -8:i32
%25:i32 = var
%26 = phi %2, %25, %10
%27 = sub %24, %26 (hasExternalUses)
%28:i32 = var
%29 = phi %22, %27, %28
%30 = phi %0, %21, %29
%31 = lshr %30, 8:i32
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %1 0 %34 1
%35:i32 = var
blockpc %1 1 %35 1
%36:i32 = var
blockpc %5 0 %36 1
%37:i32 = var
blockpc %5 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %12 0 %40 1
%41:i32 = var
blockpc %12 1 %41 1
%42:i32 = var
blockpc %22 0 %42 1
%43:i32 = var
blockpc %22 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %31


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = and %8, -8:i32 (hasExternalUses)
%10 = sub 0:i32, %9 (hasExternalUses)
%11 = block 2
%12:i32 = var
%13 = sub %12, %9 (hasExternalUses)
%14:i32 = var
%15 = phi %11, %13, %14
%16 = phi %7, %10, %15
%17 = phi %2, %6, %16
%18 = phi %5, %17, %4
%19 = phi %1, %4, %18
%20 = block 2
%21:i32 = var
%22 = and %21, -8:i32
%23:i32 = var
%24 = phi %2, %23, %9
%25 = sub %22, %24 (hasExternalUses)
%26:i32 = var
%27 = phi %20, %25, %26
%28 = phi %0, %19, %27
%29 = lshr %28, 8:i32 (hasExternalUses)
%30 = eq %29, 0:i32
%31:i32 = var
blockpc %0 0 %31 1
%32:i32 = var
blockpc %0 1 %32 1
%33:i32 = var
blockpc %1 0 %33 1
%34:i32 = var
blockpc %1 1 %34 1
%35:i32 = var
blockpc %5 0 %35 1
%36:i32 = var
blockpc %5 1 %36 1
%37:i32 = var
blockpc %7 0 %37 1
%38:i32 = var
blockpc %7 1 %38 1
%39:i32 = var
blockpc %11 0 %39 1
%40:i32 = var
blockpc %11 1 %40 1
%41:i32 = var
blockpc %20 0 %41 1
%42:i32 = var
blockpc %20 1 %42 1
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
infer %30


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = add %8, 11:i32 (hasExternalUses)
%10 = and %9, -8:i32 (hasExternalUses)
%11 = sub 0:i32, %10 (hasExternalUses)
%12 = block 2
%13:i32 = var
%14 = and %13, -8:i32
%15 = sub %14, %10 (hasExternalUses)
%16:i32 = var
%17 = phi %12, %15, %16
%18 = phi %7, %11, %17
%19 = phi %2, %6, %18
%20 = phi %5, %19, %4
%21 = phi %1, %4, %20
%22 = block 2
%23:i32 = var
%24 = and %23, -8:i32
%25:i32 = var
%26 = phi %2, %25, %10
%27 = sub %24, %26 (hasExternalUses)
%28:i32 = var
%29 = phi %22, %27, %28
%30 = phi %0, %21, %29
%31 = ult 16777215:i32, %30
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %1 0 %34 1
%35:i32 = var
blockpc %1 1 %35 1
%36:i32 = var
blockpc %5 0 %36 1
%37:i32 = var
blockpc %5 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %12 0 %40 1
%41:i32 = var
blockpc %12 1 %41 1
%42:i32 = var
blockpc %22 0 %42 1
%43:i32 = var
blockpc %22 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
infer %31


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = and %8, -8:i32 (hasExternalUses)
%10 = sub 0:i32, %9 (hasExternalUses)
%11 = block 2
%12:i32 = var
%13 = sub %12, %9 (hasExternalUses)
%14:i32 = var
%15 = phi %11, %13, %14
%16 = phi %7, %10, %15
%17 = phi %2, %6, %16
%18 = phi %5, %17, %4
%19 = phi %1, %4, %18
%20 = block 2
%21:i32 = var
%22 = and %21, -8:i32
%23:i32 = var
%24 = phi %2, %23, %9
%25 = sub %22, %24 (hasExternalUses)
%26:i32 = var
%27 = phi %20, %25, %26
%28 = phi %0, %19, %27
%29 = lshr %28, 8:i32 (hasExternalUses)
%30 = add %29, 1048320:i32
%31:i32 = var
blockpc %0 0 %31 1
%32:i32 = var
blockpc %0 1 %32 1
%33:i32 = var
blockpc %1 0 %33 1
%34:i32 = var
blockpc %1 1 %34 1
%35:i32 = var
blockpc %5 0 %35 1
%36:i32 = var
blockpc %5 1 %36 1
%37:i32 = var
blockpc %7 0 %37 1
%38:i32 = var
blockpc %7 1 %38 1
%39:i32 = var
blockpc %11 0 %39 1
%40:i32 = var
blockpc %11 1 %40 1
%41:i32 = var
blockpc %20 0 %41 1
%42:i32 = var
blockpc %20 1 %42 1
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
infer %30


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = sub 0:i32, %8 (hasExternalUses)
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14 = phi %7, %9, %13
%15 = phi %2, %6, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20 = and %19, -8:i32
%21:i32 = var
%22 = phi %2, %21, %8
%23 = sub %20, %22 (hasExternalUses)
%24:i32 = var
%25 = phi %18, %23, %24
%26 = phi %0, %17, %25
%27 = lshr %26, 8:i32 (hasExternalUses)
%28 = add %27, 1048320:i32
%29 = lshr %28, 16:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %7 0 %36 1
%37:i32 = var
blockpc %7 1 %37 1
%38:i32 = var
blockpc %10 0 %38 1
%39:i32 = var
blockpc %10 1 %39 1
%40:i32 = var
blockpc %18 0 %40 1
%41:i32 = var
blockpc %18 1 %41 1
%42:i32 = var
%43:i32 = var
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %42 1
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %29


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19 = and %18, -8:i32
%20:i32 = var
%21:i32 = var
%22 = and %21, -8:i32 (hasExternalUses)
%23 = phi %2, %20, %22
%24 = sub %19, %23 (hasExternalUses)
%25:i32 = var
%26 = phi %17, %24, %25
%27 = phi %0, %16, %26
%28 = lshr %27, 8:i32 (hasExternalUses)
%29 = add %28, 1048320:i32
%30 = lshr %29, 16:i32
%31 = and %30, 8:i32
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %1 0 %34 1
%35:i32 = var
blockpc %1 1 %35 1
%36:i32 = var
blockpc %5 0 %36 1
%37:i32 = var
blockpc %5 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %17 0 %42 1
%43:i32 = var
blockpc %17 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %31


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = and %8, -8:i32 (hasExternalUses)
%10 = sub 0:i32, %9 (hasExternalUses)
%11 = block 2
%12:i32 = var
%13 = sub %12, %9 (hasExternalUses)
%14:i32 = var
%15 = phi %11, %13, %14
%16 = phi %7, %10, %15
%17 = phi %2, %6, %16
%18 = phi %5, %17, %4
%19 = phi %1, %4, %18
%20 = block 2
%21:i32 = var
%22 = and %21, -8:i32
%23:i32 = var
%24 = phi %2, %23, %9
%25 = sub %22, %24 (hasExternalUses)
%26:i32 = var
%27 = phi %20, %25, %26
%28 = phi %0, %19, %27
%29 = lshr %28, 8:i32 (hasExternalUses)
%30:i32 = var
%31 = shl %29, %30
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %1 0 %34 1
%35:i32 = var
blockpc %1 1 %35 1
%36:i32 = var
blockpc %5 0 %36 1
%37:i32 = var
blockpc %5 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %11 0 %40 1
%41:i32 = var
blockpc %11 1 %41 1
%42:i32 = var
blockpc %20 0 %42 1
%43:i32 = var
blockpc %20 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %31


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = sub 0:i32, %8 (hasExternalUses)
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14 = phi %7, %9, %13
%15 = phi %2, %6, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20 = and %19, -8:i32
%21:i32 = var
%22 = phi %2, %21, %8
%23 = sub %20, %22 (hasExternalUses)
%24:i32 = var
%25 = phi %18, %23, %24
%26 = phi %0, %17, %25
%27 = lshr %26, 8:i32 (hasExternalUses)
%28 = add %27, 1048320:i32
%29 = lshr %28, 16:i32
%30 = and %29, 8:i32 (hasExternalUses)
%31 = shl %27, %30 (hasExternalUses)
%32 = add %31, 520192:i32
%33:i32 = var
blockpc %0 0 %33 1
%34:i32 = var
blockpc %0 1 %34 1
%35:i32 = var
blockpc %1 0 %35 1
%36:i32 = var
blockpc %1 1 %36 1
%37:i32 = var
blockpc %5 0 %37 1
%38:i32 = var
blockpc %5 1 %38 1
%39:i32 = var
blockpc %7 0 %39 1
%40:i32 = var
blockpc %7 1 %40 1
%41:i32 = var
blockpc %10 0 %41 1
%42:i32 = var
blockpc %10 1 %42 1
%43:i32 = var
blockpc %18 0 %43 1
%44:i32 = var
blockpc %18 1 %44 1
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
infer %32


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19 = and %18, -8:i32
%20:i32 = var
%21:i32 = var
%22 = and %21, -8:i32 (hasExternalUses)
%23 = phi %2, %20, %22
%24 = sub %19, %23 (hasExternalUses)
%25:i32 = var
%26 = phi %17, %24, %25
%27 = phi %0, %16, %26
%28 = lshr %27, 8:i32 (hasExternalUses)
%29 = add %28, 1048320:i32
%30 = lshr %29, 16:i32
%31 = and %30, 8:i32 (hasExternalUses)
%32 = shl %28, %31 (hasExternalUses)
%33 = add %32, 520192:i32
%34 = lshr %33, 16:i32
%35:i32 = var
blockpc %0 0 %35 1
%36:i32 = var
blockpc %0 1 %36 1
%37:i32 = var
blockpc %1 0 %37 1
%38:i32 = var
blockpc %1 1 %38 1
%39:i32 = var
blockpc %5 0 %39 1
%40:i32 = var
blockpc %5 1 %40 1
%41:i32 = var
blockpc %7 0 %41 1
%42:i32 = var
blockpc %7 1 %42 1
%43:i32 = var
blockpc %9 0 %43 1
%44:i32 = var
blockpc %9 1 %44 1
%45:i32 = var
blockpc %17 0 %45 1
%46:i32 = var
blockpc %17 1 %46 1
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
infer %34


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19 = and %18, -8:i32
%20:i32 = var
%21:i32 = var
%22 = phi %2, %20, %21
%23 = sub %19, %22 (hasExternalUses)
%24:i32 = var
%25 = phi %17, %23, %24
%26 = phi %0, %16, %25
%27 = lshr %26, 8:i32 (hasExternalUses)
%28 = add %27, 1048320:i32
%29 = lshr %28, 16:i32
%30 = and %29, 8:i32 (hasExternalUses)
%31 = shl %27, %30 (hasExternalUses)
%32 = add %31, 520192:i32
%33 = lshr %32, 16:i32
%34 = and %33, 4:i32
%35:i32 = var
blockpc %0 0 %35 1
%36:i32 = var
blockpc %0 1 %36 1
%37:i32 = var
blockpc %1 0 %37 1
%38:i32 = var
blockpc %1 1 %38 1
%39:i32 = var
blockpc %5 0 %39 1
%40:i32 = var
blockpc %5 1 %40 1
%41:i32 = var
blockpc %7 0 %41 1
%42:i32 = var
blockpc %7 1 %42 1
%43:i32 = var
blockpc %9 0 %43 1
%44:i32 = var
blockpc %9 1 %44 1
%45:i32 = var
blockpc %17 0 %45 1
%46:i32 = var
blockpc %17 1 %46 1
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
infer %34


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = sub 0:i32, %8 (hasExternalUses)
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14 = phi %7, %9, %13
%15 = phi %2, %6, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20 = and %19, -8:i32
%21:i32 = var
%22 = phi %2, %21, %8
%23 = sub %20, %22 (hasExternalUses)
%24:i32 = var
%25 = phi %18, %23, %24
%26 = phi %0, %17, %25
%27 = lshr %26, 8:i32 (hasExternalUses)
%28 = add %27, 1048320:i32
%29 = lshr %28, 16:i32
%30 = and %29, 8:i32 (hasExternalUses)
%31 = shl %27, %30 (hasExternalUses)
%32:i32 = var
%33 = shl %31, %32
%34:i32 = var
blockpc %0 0 %34 1
%35:i32 = var
blockpc %0 1 %35 1
%36:i32 = var
blockpc %1 0 %36 1
%37:i32 = var
blockpc %1 1 %37 1
%38:i32 = var
blockpc %5 0 %38 1
%39:i32 = var
blockpc %5 1 %39 1
%40:i32 = var
blockpc %7 0 %40 1
%41:i32 = var
blockpc %7 1 %41 1
%42:i32 = var
blockpc %10 0 %42 1
%43:i32 = var
blockpc %10 1 %43 1
%44:i32 = var
blockpc %18 0 %44 1
%45:i32 = var
blockpc %18 1 %45 1
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
infer %33


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19 = and %18, -8:i32
%20:i32 = var
%21:i32 = var
%22 = and %21, -8:i32 (hasExternalUses)
%23 = phi %2, %20, %22
%24 = sub %19, %23 (hasExternalUses)
%25:i32 = var
%26 = phi %17, %24, %25
%27 = phi %0, %16, %26
%28 = lshr %27, 8:i32 (hasExternalUses)
%29 = add %28, 1048320:i32
%30 = lshr %29, 16:i32
%31 = and %30, 8:i32 (hasExternalUses)
%32 = shl %28, %31 (hasExternalUses)
%33:i32 = var
%34 = shl %32, %33 (hasExternalUses)
%35 = add %34, 245760:i32
%36:i32 = var
blockpc %0 0 %36 1
%37:i32 = var
blockpc %0 1 %37 1
%38:i32 = var
blockpc %1 0 %38 1
%39:i32 = var
blockpc %1 1 %39 1
%40:i32 = var
blockpc %5 0 %40 1
%41:i32 = var
blockpc %5 1 %41 1
%42:i32 = var
blockpc %7 0 %42 1
%43:i32 = var
blockpc %7 1 %43 1
%44:i32 = var
blockpc %9 0 %44 1
%45:i32 = var
blockpc %9 1 %45 1
%46:i32 = var
blockpc %17 0 %46 1
%47:i32 = var
blockpc %17 1 %47 1
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
pc %56 1
infer %35


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19 = and %18, -8:i32
%20:i32 = var
%21:i32 = var
%22 = phi %2, %20, %21
%23 = sub %19, %22 (hasExternalUses)
%24:i32 = var
%25 = phi %17, %23, %24
%26 = phi %0, %16, %25
%27 = lshr %26, 8:i32 (hasExternalUses)
%28 = add %27, 1048320:i32
%29 = lshr %28, 16:i32
%30 = and %29, 8:i32 (hasExternalUses)
%31 = shl %27, %30 (hasExternalUses)
%32:i32 = var
%33 = shl %31, %32 (hasExternalUses)
%34 = add %33, 245760:i32
%35 = lshr %34, 16:i32
%36:i32 = var
blockpc %0 0 %36 1
%37:i32 = var
blockpc %0 1 %37 1
%38:i32 = var
blockpc %1 0 %38 1
%39:i32 = var
blockpc %1 1 %39 1
%40:i32 = var
blockpc %5 0 %40 1
%41:i32 = var
blockpc %5 1 %41 1
%42:i32 = var
blockpc %7 0 %42 1
%43:i32 = var
blockpc %7 1 %43 1
%44:i32 = var
blockpc %9 0 %44 1
%45:i32 = var
blockpc %9 1 %45 1
%46:i32 = var
blockpc %17 0 %46 1
%47:i32 = var
blockpc %17 1 %47 1
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
pc %56 1
infer %35


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19:i32 = var
%20:i32 = var
%21 = phi %2, %19, %20
%22 = sub %18, %21 (hasExternalUses)
%23:i32 = var
%24 = phi %17, %22, %23
%25 = phi %0, %16, %24
%26 = lshr %25, 8:i32 (hasExternalUses)
%27 = add %26, 1048320:i32
%28 = lshr %27, 16:i32
%29 = and %28, 8:i32 (hasExternalUses)
%30 = shl %26, %29 (hasExternalUses)
%31:i32 = var
%32 = shl %30, %31 (hasExternalUses)
%33 = add %32, 245760:i32
%34 = lshr %33, 16:i32
%35 = and %34, 2:i32
%36:i32 = var
blockpc %0 0 %36 1
%37:i32 = var
blockpc %0 1 %37 1
%38:i32 = var
blockpc %1 0 %38 1
%39:i32 = var
blockpc %1 1 %39 1
%40:i32 = var
blockpc %5 0 %40 1
%41:i32 = var
blockpc %5 1 %41 1
%42:i32 = var
blockpc %7 0 %42 1
%43:i32 = var
blockpc %7 1 %43 1
%44:i32 = var
blockpc %9 0 %44 1
%45:i32 = var
blockpc %9 1 %45 1
%46:i32 = var
blockpc %17 0 %46 1
%47:i32 = var
blockpc %17 1 %47 1
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
pc %56 1
infer %35


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19:i32 = var
%20:i32 = var
%21 = phi %2, %19, %20
%22 = sub %18, %21 (hasExternalUses)
%23:i32 = var
%24 = phi %17, %22, %23
%25 = phi %0, %16, %24
%26 = lshr %25, 8:i32 (hasExternalUses)
%27 = add %26, 1048320:i32
%28 = lshr %27, 16:i32
%29 = and %28, 8:i32
%30 = shl %26, %29 (hasExternalUses)
%31 = add %30, 520192:i32
%32 = lshr %31, 16:i32
%33 = and %32, 4:i32 (hasExternalUses)
%34 = or %33, %29
%35:i32 = var
blockpc %0 0 %35 1
%36:i32 = var
blockpc %0 1 %36 1
%37:i32 = var
blockpc %1 0 %37 1
%38:i32 = var
blockpc %1 1 %38 1
%39:i32 = var
blockpc %5 0 %39 1
%40:i32 = var
blockpc %5 1 %40 1
%41:i32 = var
blockpc %7 0 %41 1
%42:i32 = var
blockpc %7 1 %42 1
%43:i32 = var
blockpc %9 0 %43 1
%44:i32 = var
blockpc %9 1 %44 1
%45:i32 = var
blockpc %17 0 %45 1
%46:i32 = var
blockpc %17 1 %46 1
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
infer %34


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19:i32 = var
%20 = phi %17, %18, %19
%21 = phi %0, %16, %20
%22 = lshr %21, 8:i32 (hasExternalUses)
%23 = add %22, 1048320:i32
%24 = lshr %23, 16:i32
%25 = and %24, 8:i32
%26 = shl %22, %25 (hasExternalUses)
%27 = add %26, 520192:i32
%28 = lshr %27, 16:i32
%29 = and %28, 4:i32 (hasExternalUses)
%30 = or %29, %25
%31:i32 = var
%32 = or %30, %31
%33:i32 = var
blockpc %0 0 %33 1
%34:i32 = var
blockpc %0 1 %34 1
%35:i32 = var
blockpc %1 0 %35 1
%36:i32 = var
blockpc %1 1 %36 1
%37:i32 = var
blockpc %5 0 %37 1
%38:i32 = var
blockpc %5 1 %38 1
%39:i32 = var
blockpc %7 0 %39 1
%40:i32 = var
blockpc %7 1 %40 1
%41:i32 = var
blockpc %9 0 %41 1
%42:i32 = var
blockpc %9 1 %42 1
%43:i32 = var
blockpc %17 0 %43 1
%44:i32 = var
blockpc %17 1 %44 1
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
infer %32


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19 = and %18, -8:i32
%20:i32 = var
%21:i32 = var
%22 = and %21, -8:i32 (hasExternalUses)
%23 = phi %2, %20, %22
%24 = sub %19, %23 (hasExternalUses)
%25:i32 = var
%26 = phi %17, %24, %25
%27 = phi %0, %16, %26
%28 = lshr %27, 8:i32 (hasExternalUses)
%29 = add %28, 1048320:i32
%30 = lshr %29, 16:i32
%31 = and %30, 8:i32 (hasExternalUses)
%32 = shl %28, %31 (hasExternalUses)
%33:i32 = var
%34 = shl %32, %33 (hasExternalUses)
%35:i32 = var
%36 = shl %34, %35
%37:i32 = var
blockpc %0 0 %37 1
%38:i32 = var
blockpc %0 1 %38 1
%39:i32 = var
blockpc %1 0 %39 1
%40:i32 = var
blockpc %1 1 %40 1
%41:i32 = var
blockpc %5 0 %41 1
%42:i32 = var
blockpc %5 1 %42 1
%43:i32 = var
blockpc %7 0 %43 1
%44:i32 = var
blockpc %7 1 %44 1
%45:i32 = var
blockpc %9 0 %45 1
%46:i32 = var
blockpc %9 1 %46 1
%47:i32 = var
blockpc %17 0 %47 1
%48:i32 = var
blockpc %17 1 %48 1
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
pc %56 1
pc %57 1
infer %36


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19:i32 = var
%20 = phi %17, %18, %19
%21 = phi %0, %16, %20
%22 = lshr %21, 8:i32 (hasExternalUses)
%23:i32 = var
%24 = lshr %23, 16:i32
%25 = and %24, 8:i32
%26 = shl %22, %25 (hasExternalUses)
%27 = add %26, 520192:i32
%28 = lshr %27, 16:i32
%29 = and %28, 4:i32 (hasExternalUses)
%30 = or %29, %25
%31:i32 = var
%32 = or %30, %31
%33 = sub 14:i32, %32
%34:i32 = var
blockpc %0 0 %34 1
%35:i32 = var
blockpc %0 1 %35 1
%36:i32 = var
blockpc %1 0 %36 1
%37:i32 = var
blockpc %1 1 %37 1
%38:i32 = var
blockpc %5 0 %38 1
%39:i32 = var
blockpc %5 1 %39 1
%40:i32 = var
blockpc %7 0 %40 1
%41:i32 = var
blockpc %7 1 %41 1
%42:i32 = var
blockpc %9 0 %42 1
%43:i32 = var
blockpc %9 1 %43 1
%44:i32 = var
blockpc %17 0 %44 1
%45:i32 = var
blockpc %17 1 %45 1
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
infer %33


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19 = and %18, -8:i32
%20:i32 = var
%21:i32 = var
%22 = phi %2, %20, %21
%23 = sub %19, %22 (hasExternalUses)
%24:i32 = var
%25 = phi %17, %23, %24
%26 = phi %0, %16, %25
%27 = lshr %26, 8:i32 (hasExternalUses)
%28 = add %27, 1048320:i32
%29 = lshr %28, 16:i32
%30 = and %29, 8:i32 (hasExternalUses)
%31 = shl %27, %30 (hasExternalUses)
%32:i32 = var
%33 = shl %31, %32 (hasExternalUses)
%34:i32 = var
%35 = shl %33, %34
%36 = lshr %35, 15:i32
%37:i32 = var
blockpc %0 0 %37 1
%38:i32 = var
blockpc %0 1 %38 1
%39:i32 = var
blockpc %1 0 %39 1
%40:i32 = var
blockpc %1 1 %40 1
%41:i32 = var
blockpc %5 0 %41 1
%42:i32 = var
blockpc %5 1 %42 1
%43:i32 = var
blockpc %7 0 %43 1
%44:i32 = var
blockpc %7 1 %44 1
%45:i32 = var
blockpc %9 0 %45 1
%46:i32 = var
blockpc %9 1 %46 1
%47:i32 = var
blockpc %17 0 %47 1
%48:i32 = var
blockpc %17 1 %48 1
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
pc %56 1
pc %57 1
infer %36


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %7, %8, %12
%14 = phi %2, %6, %13
%15 = phi %5, %14, %4
%16 = phi %1, %4, %15
%17 = block 2
%18:i32 = var
%19:i32 = var
%20 = phi %17, %18, %19
%21 = phi %0, %16, %20
%22 = lshr %21, 8:i32 (hasExternalUses)
%23:i32 = var
%24 = and %23, 8:i32
%25 = shl %22, %24 (hasExternalUses)
%26 = add %25, 520192:i32
%27 = lshr %26, 16:i32
%28 = and %27, 4:i32 (hasExternalUses)
%29 = or %28, %24
%30:i32 = var
%31 = or %29, %30
%32 = sub 14:i32, %31
%33:i32 = var
%34 = add %32, %33
%35:i32 = var
blockpc %0 0 %35 1
%36:i32 = var
blockpc %0 1 %36 1
%37:i32 = var
blockpc %1 0 %37 1
%38:i32 = var
blockpc %1 1 %38 1
%39:i32 = var
blockpc %5 0 %39 1
%40:i32 = var
blockpc %5 1 %40 1
%41:i32 = var
blockpc %7 0 %41 1
%42:i32 = var
blockpc %7 1 %42 1
%43:i32 = var
blockpc %9 0 %43 1
%44:i32 = var
blockpc %9 1 %44 1
%45:i32 = var
blockpc %17 0 %45 1
%46:i32 = var
blockpc %17 1 %46 1
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
infer %34


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3 = add %2, 520192:i32
%4 = lshr %3, 16:i32
%5 = and %4, 4:i32
%6 = or %5, %1
%7 = shl %2, %5
%8 = add %7, 245760:i32
%9 = lshr %8, 16:i32
%10 = and %9, 2:i32
%11 = or %6, %10
%12 = sub 14:i32, %11
%13 = shl %7, %10
%14 = lshr %13, 15:i32
%15 = add %12, %14 (hasExternalUses)
%16 = add %15, 7:i32
%17 = block 2
%18 = block 2
%19 = block 2
%20 = phi %19, 65:i32, 61:i32
%21 = eq %20, 61:i32
blockpc %18 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %18 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = phi %24, %20, 65:i32
%28 = phi %18, %20, %27
%29 = eq %28, 65:i32
blockpc %17 0 %29 1
%30:i32 = var
blockpc %17 1 %30 1
%31:i32 = var
%32 = phi %19, %31, 0:i32
%33:i32 = var
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37:i32 = var
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41:i32 = var
%42:i32 = var
%43 = phi %38, %41, %42
%44 = phi %34, %37, %43
%45 = phi %19, %33, %44
%46 = phi %24, %45, %32
%47 = phi %18, %32, %46
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51:i32 = var
%52:i32 = var
%53 = phi %48, %51, %52
%54 = phi %17, %47, %53
%55 = ult 16777215:i32, %54
%56:i32 = zext %55
%57 = eq %56, 0:i32
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
infer %16


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = add %8, 11:i32 (hasExternalUses)
%10 = and %9, -8:i32 (hasExternalUses)
%11 = sub 0:i32, %10 (hasExternalUses)
%12 = block 2
%13:i32 = var
%14 = and %13, -8:i32
%15 = sub %14, %10 (hasExternalUses)
%16:i32 = var
%17 = phi %12, %15, %16
%18 = phi %7, %11, %17
%19 = phi %2, %6, %18
%20 = phi %5, %19, %4
%21 = phi %1, %4, %20
%22 = block 2
%23:i32 = var
%24 = and %23, -8:i32
%25:i32 = var
%26 = phi %2, %25, %10
%27 = sub %24, %26 (hasExternalUses)
%28:i32 = var
%29 = phi %22, %27, %28
%30 = phi %0, %21, %29
%31:i32 = var
%32 = lshr %30, %31
%33:i32 = var
blockpc %0 0 %33 1
%34:i32 = var
blockpc %0 1 %34 1
%35:i32 = var
blockpc %1 0 %35 1
%36:i32 = var
blockpc %1 1 %36 1
%37:i32 = var
blockpc %5 0 %37 1
%38:i32 = var
blockpc %5 1 %38 1
%39:i32 = var
blockpc %7 0 %39 1
%40:i32 = var
blockpc %7 1 %40 1
%41:i32 = var
blockpc %12 0 %41 1
%42:i32 = var
blockpc %12 1 %42 1
%43:i32 = var
blockpc %22 0 %43 1
%44:i32 = var
blockpc %22 1 %44 1
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
infer %32


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = and %8, -8:i32 (hasExternalUses)
%10 = sub 0:i32, %9 (hasExternalUses)
%11 = block 2
%12:i32 = var
%13 = sub %12, %9 (hasExternalUses)
%14:i32 = var
%15 = phi %11, %13, %14
%16 = phi %7, %10, %15
%17 = phi %2, %6, %16
%18 = phi %5, %17, %4
%19 = phi %1, %4, %18
%20 = block 2
%21:i32 = var
%22 = and %21, -8:i32
%23:i32 = var
%24 = phi %2, %23, %9
%25 = sub %22, %24 (hasExternalUses)
%26:i32 = var
%27 = phi %20, %25, %26
%28 = phi %0, %19, %27
%29:i32 = var
%30 = lshr %29, 16:i32
%31 = and %30, 4:i32 (hasExternalUses)
%32:i32 = var
%33 = or %31, %32
%34:i32 = var
%35 = or %33, %34
%36 = sub 14:i32, %35
%37:i32 = var
%38 = add %36, %37 (hasExternalUses)
%39 = add %38, 7:i32
%40 = lshr %28, %39
%41 = and %40, 1:i32
%42:i32 = var
blockpc %0 0 %42 1
%43:i32 = var
blockpc %0 1 %43 1
%44:i32 = var
blockpc %1 0 %44 1
%45:i32 = var
blockpc %1 1 %45 1
%46:i32 = var
blockpc %5 0 %46 1
%47:i32 = var
blockpc %5 1 %47 1
%48:i32 = var
blockpc %7 0 %48 1
%49:i32 = var
blockpc %7 1 %49 1
%50:i32 = var
blockpc %11 0 %50 1
%51:i32 = var
blockpc %11 1 %51 1
%52:i32 = var
blockpc %20 0 %52 1
%53:i32 = var
blockpc %20 1 %53 1
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
pc %54 1
pc %55 1
pc %56 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
infer %41


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3 = add %2, 520192:i32
%4 = lshr %3, 16:i32
%5 = and %4, 4:i32
%6 = or %5, %1
%7 = shl %2, %5
%8 = add %7, 245760:i32
%9 = lshr %8, 16:i32
%10 = and %9, 2:i32
%11 = or %6, %10
%12 = sub 14:i32, %11
%13 = shl %7, %10
%14 = lshr %13, 15:i32
%15 = add %12, %14 (hasExternalUses)
%16 = shl %15, 1:i32
%17 = block 2
%18 = block 2
%19 = block 2
%20 = phi %19, 65:i32, 61:i32
%21 = eq %20, 61:i32
blockpc %18 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %18 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = phi %24, %20, 65:i32
%28 = phi %18, %20, %27
%29 = eq %28, 65:i32
blockpc %17 0 %29 1
%30:i32 = var
blockpc %17 1 %30 1
%31:i32 = var
%32 = phi %19, %31, 0:i32
%33:i32 = var
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37:i32 = var
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41:i32 = var
%42:i32 = var
%43 = phi %38, %41, %42
%44 = phi %34, %37, %43
%45 = phi %19, %33, %44
%46 = phi %24, %45, %32
%47 = phi %18, %32, %46
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51:i32 = var
%52:i32 = var
%53 = phi %48, %51, %52
%54 = phi %17, %47, %53
%55 = ult 16777215:i32, %54
%56:i32 = zext %55
%57 = eq %56, 0:i32
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
infer %16


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = sub 0:i32, %8 (hasExternalUses)
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14 = phi %7, %9, %13
%15 = phi %2, %6, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20 = and %19, -8:i32
%21:i32 = var
%22 = phi %2, %21, %8
%23 = sub %20, %22 (hasExternalUses)
%24:i32 = var
%25 = phi %18, %23, %24
%26 = phi %0, %17, %25
%27:i32 = var
%28 = and %27, 4:i32 (hasExternalUses)
%29:i32 = var
%30 = and %29, 8:i32 (hasExternalUses)
%31 = or %28, %30
%32:i32 = var
%33 = or %31, %32
%34 = sub 14:i32, %33
%35:i32 = var
%36 = add %34, %35 (hasExternalUses)
%37 = add %36, 7:i32
%38 = lshr %26, %37
%39 = and %38, 1:i32
%40:i32 = var
%41 = or %39, %40
%42:i32 = var
blockpc %0 0 %42 1
%43:i32 = var
blockpc %0 1 %43 1
%44:i32 = var
blockpc %1 0 %44 1
%45:i32 = var
blockpc %1 1 %45 1
%46:i32 = var
blockpc %5 0 %46 1
%47:i32 = var
blockpc %5 1 %47 1
%48:i32 = var
blockpc %7 0 %48 1
%49:i32 = var
blockpc %7 1 %49 1
%50:i32 = var
blockpc %10 0 %50 1
%51:i32 = var
blockpc %10 1 %51 1
%52:i32 = var
blockpc %18 0 %52 1
%53:i32 = var
blockpc %18 1 %53 1
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
pc %54 1
pc %55 1
pc %56 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
infer %41


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %9, %10, %14
%16 = phi %4, %8, %15
%17 = phi %7, %16, %6
%18 = phi %3, %6, %17
%19 = block 2
%20:i32 = var
%21:i32 = var
%22:i32 = var
%23 = phi %4, %21, %22
%24 = sub %20, %23 (hasExternalUses)
%25:i32 = var
%26 = phi %19, %24, %25
%27 = phi %2, %18, %26
%28:i32 = var
%29 = sub 14:i32, %28
%30:i32 = var
%31 = add %29, %30 (hasExternalUses)
%32 = add %31, 7:i32
%33 = lshr %27, %32
%34 = and %33, 1:i32
%35:i32 = var
%36 = or %34, %35 (hasExternalUses)
%37 = phi %1, 31:i32, %36
%38 = phi %0, 0:i32, %37
%39 = shl %38, 2:i32
%40:i32 = var
blockpc %0 0 %40 1
%41:i32 = var
blockpc %0 1 %41 1
%42:i32 = var
blockpc %1 0 %42 1
%43:i32 = var
blockpc %1 1 %43 1
%44:i32 = var
blockpc %2 0 %44 1
%45:i32 = var
blockpc %2 1 %45 1
%46:i32 = var
blockpc %3 0 %46 1
%47:i32 = var
blockpc %3 1 %47 1
%48:i32 = var
blockpc %7 0 %48 1
%49:i32 = var
blockpc %7 1 %49 1
%50:i32 = var
blockpc %9 0 %50 1
%51:i32 = var
blockpc %9 1 %51 1
%52:i32 = var
blockpc %11 0 %52 1
%53:i32 = var
blockpc %11 1 %53 1
%54:i32 = var
blockpc %19 0 %54 1
%55:i32 = var
blockpc %19 1 %55 1
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
pc %56 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
infer %39


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %9, %10, %14
%16 = phi %4, %8, %15
%17 = phi %7, %16, %6
%18 = phi %3, %6, %17
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = phi %2, %18, %22
%24:i32 = var
%25:i32 = var
%26 = add %24, %25 (hasExternalUses)
%27 = add %26, 7:i32
%28 = lshr %23, %27
%29 = and %28, 1:i32
%30:i32 = var
%31 = or %29, %30 (hasExternalUses)
%32 = phi %1, 31:i32, %31
%33 = phi %0, 0:i32, %32
%34 = shl %33, 2:i32
%35 = add 3408:i32, %34
%36:i32 = var
blockpc %0 0 %36 1
%37:i32 = var
blockpc %0 1 %37 1
%38:i32 = var
blockpc %1 0 %38 1
%39:i32 = var
blockpc %1 1 %39 1
%40:i32 = var
blockpc %2 0 %40 1
%41:i32 = var
blockpc %2 1 %41 1
%42:i32 = var
blockpc %3 0 %42 1
%43:i32 = var
blockpc %3 1 %43 1
%44:i32 = var
blockpc %7 0 %44 1
%45:i32 = var
blockpc %7 1 %45 1
%46:i32 = var
blockpc %9 0 %46 1
%47:i32 = var
blockpc %9 1 %47 1
%48:i32 = var
blockpc %11 0 %48 1
%49:i32 = var
blockpc %11 1 %49 1
%50:i32 = var
blockpc %19 0 %50 1
%51:i32 = var
blockpc %19 1 %51 1
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58:i32 = var
pc %52 1
pc %53 1
pc %54 1
pc %55 1
pc %56 1
pc %57 1
pc %58 1
infer %35


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29 = add %28, 28:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %6 0 %36 1
%37:i32 = var
blockpc %6 1 %37 1
%38:i32 = var
blockpc %8 0 %38 1
%39:i32 = var
blockpc %8 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %18 0 %42 1
%43:i32 = var
blockpc %18 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %29


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29 = add %28, 16:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %6 0 %36 1
%37:i32 = var
blockpc %6 1 %37 1
%38:i32 = var
blockpc %8 0 %38 1
%39:i32 = var
blockpc %8 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %18 0 %42 1
%43:i32 = var
blockpc %18 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
infer %29


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29 = add %28, 16:i32 (hasExternalUses)
%30 = add %29, 4:i32
%31:i32 = var
blockpc %0 0 %31 1
%32:i32 = var
blockpc %0 1 %32 1
%33:i32 = var
blockpc %1 0 %33 1
%34:i32 = var
blockpc %1 1 %34 1
%35:i32 = var
blockpc %5 0 %35 1
%36:i32 = var
blockpc %5 1 %36 1
%37:i32 = var
blockpc %6 0 %37 1
%38:i32 = var
blockpc %6 1 %38 1
%39:i32 = var
blockpc %8 0 %39 1
%40:i32 = var
blockpc %8 1 %40 1
%41:i32 = var
blockpc %9 0 %41 1
%42:i32 = var
blockpc %9 1 %42 1
%43:i32 = var
blockpc %18 0 %43 1
%44:i32 = var
blockpc %18 1 %44 1
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
infer %30


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %9, %10, %14
%16 = phi %4, %8, %15
%17 = phi %7, %16, %6
%18 = phi %3, %6, %17
%19 = block 2
%20:i32 = var
%21:i32 = var
%22:i32 = var
%23 = phi %4, %21, %22
%24 = sub %20, %23 (hasExternalUses)
%25:i32 = var
%26 = phi %19, %24, %25
%27 = phi %2, %18, %26
%28:i32 = var
%29 = sub 14:i32, %28
%30:i32 = var
%31 = add %29, %30 (hasExternalUses)
%32 = add %31, 7:i32
%33 = lshr %27, %32
%34 = and %33, 1:i32
%35:i32 = var
%36 = or %34, %35 (hasExternalUses)
%37 = phi %1, 31:i32, %36
%38 = phi %0, 0:i32, %37
%39 = shl 1:i32, %38
%40:i32 = var
blockpc %0 0 %40 1
%41:i32 = var
blockpc %0 1 %41 1
%42:i32 = var
blockpc %1 0 %42 1
%43:i32 = var
blockpc %1 1 %43 1
%44:i32 = var
blockpc %2 0 %44 1
%45:i32 = var
blockpc %2 1 %45 1
%46:i32 = var
blockpc %3 0 %46 1
%47:i32 = var
blockpc %3 1 %47 1
%48:i32 = var
blockpc %7 0 %48 1
%49:i32 = var
blockpc %7 1 %49 1
%50:i32 = var
blockpc %9 0 %50 1
%51:i32 = var
blockpc %9 1 %51 1
%52:i32 = var
blockpc %11 0 %52 1
%53:i32 = var
blockpc %11 1 %53 1
%54:i32 = var
blockpc %19 0 %54 1
%55:i32 = var
blockpc %19 1 %55 1
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
pc %56 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
infer %39


; start LHS (in $38)
%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = shl 1:i32, %5
%7 = xor %6, -1:i32
%8 = and %4, %7 (hasExternalUses)
%9 = phi %0, %8, %4, %4
%10 = block 2
%11 = block 2
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %1, %14, 0:i32
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = phi %18, %19, %23
%25 = phi %1, %17, %24
%26 = phi %16, %25, %15
%27 = phi %13, %15, %26
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %30
%32 = phi %12, %27, %31
%33:i32 = var
%34 = lshr %32, %33
%35 = and %34, 1:i32
%36:i32 = var
%37 = or %35, %36 (hasExternalUses)
%38 = phi %11, 31:i32, %37
%39 = phi %10, 0:i32, %38
%40 = shl 1:i32, %39 (hasExternalUses)
%41 = and %9, %40
%42:i32 = var
blockpc %10 0 %42 1
%43:i32 = var
blockpc %10 1 %43 1
%44:i32 = var
blockpc %11 0 %44 1
%45:i32 = var
blockpc %11 1 %45 1
%46:i32 = var
blockpc %12 0 %46 1
%47:i32 = var
blockpc %12 1 %47 1
%48:i32 = var
blockpc %13 0 %48 1
%49:i32 = var
blockpc %13 1 %49 1
%50:i32 = var
blockpc %16 0 %50 1
%51:i32 = var
blockpc %16 1 %51 1
%52:i32 = var
blockpc %18 0 %52 1
%53:i32 = var
blockpc %18 1 %53 1
%54:i32 = var
blockpc %20 0 %54 1
%55:i32 = var
blockpc %20 1 %55 1
%56:i32 = var
blockpc %28 0 %56 1
%57:i32 = var
blockpc %28 1 %57 1
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
pc %64 1
infer %41


; start LHS (in $38)
%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = shl 1:i32, %5
%7 = xor %6, -1:i32
%8 = and %4, %7 (hasExternalUses)
%9 = phi %0, %8, %4, %4
%10 = block 2
%11 = block 2
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %1, %14, 0:i32
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = phi %18, %19, %23
%25 = phi %1, %17, %24
%26 = phi %16, %25, %15
%27 = phi %13, %15, %26
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %30
%32 = phi %12, %27, %31
%33:i32 = var
%34 = lshr %32, %33
%35 = and %34, 1:i32
%36:i32 = var
%37 = or %35, %36 (hasExternalUses)
%38 = phi %11, 31:i32, %37
%39 = phi %10, 0:i32, %38
%40 = shl 1:i32, %39 (hasExternalUses)
%41 = and %9, %40
%42 = eq %41, 0:i32
%43:i32 = var
blockpc %10 0 %43 1
%44:i32 = var
blockpc %10 1 %44 1
%45:i32 = var
blockpc %11 0 %45 1
%46:i32 = var
blockpc %11 1 %46 1
%47:i32 = var
blockpc %12 0 %47 1
%48:i32 = var
blockpc %12 1 %48 1
%49:i32 = var
blockpc %13 0 %49 1
%50:i32 = var
blockpc %13 1 %50 1
%51:i32 = var
blockpc %16 0 %51 1
%52:i32 = var
blockpc %16 1 %52 1
%53:i32 = var
blockpc %18 0 %53 1
%54:i32 = var
blockpc %18 1 %54 1
%55:i32 = var
blockpc %20 0 %55 1
%56:i32 = var
blockpc %20 1 %56 1
%57:i32 = var
blockpc %28 0 %57 1
%58:i32 = var
blockpc %28 1 %58 1
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
infer %42


; start LHS (in $38)
%0 = block 3
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5:i32 = var
%6 = shl 1:i32, %5
%7 = xor %6, -1:i32
%8 = and %4, %7 (hasExternalUses)
%9 = phi %0, %8, %4, %4
%10 = block 2
%11 = block 2
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %1, %14, 0:i32
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = phi %18, %19, %23
%25 = phi %1, %17, %24
%26 = phi %16, %25, %15
%27 = phi %13, %15, %26
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = phi %28, %29, %30
%32 = phi %12, %27, %31
%33:i32 = var
%34 = lshr %32, %33
%35 = and %34, 1:i32
%36:i32 = var
%37 = or %35, %36 (hasExternalUses)
%38 = phi %11, 31:i32, %37
%39 = phi %10, 0:i32, %38
%40 = shl 1:i32, %39 (hasExternalUses)
%41 = or %9, %40
%42:i32 = var
blockpc %10 0 %42 1
%43:i32 = var
blockpc %10 1 %43 1
%44:i32 = var
blockpc %11 0 %44 1
%45:i32 = var
blockpc %11 1 %45 1
%46:i32 = var
blockpc %12 0 %46 1
%47:i32 = var
blockpc %12 1 %47 1
%48:i32 = var
blockpc %13 0 %48 1
%49:i32 = var
blockpc %13 1 %49 1
%50:i32 = var
blockpc %16 0 %50 1
%51:i32 = var
blockpc %16 1 %51 1
%52:i32 = var
blockpc %18 0 %52 1
%53:i32 = var
blockpc %18 1 %53 1
%54:i32 = var
blockpc %20 0 %54 1
%55:i32 = var
blockpc %20 1 %55 1
%56:i32 = var
blockpc %28 0 %56 1
%57:i32 = var
blockpc %28 1 %57 1
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
%64:i32 = var
%65:i32 = var
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
pc %64 1
pc %65 1
infer %41


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29 = add %28, 24:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %6 0 %36 1
%37:i32 = var
blockpc %6 1 %37 1
%38:i32 = var
blockpc %8 0 %38 1
%39:i32 = var
blockpc %8 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %18 0 %42 1
%43:i32 = var
blockpc %18 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
infer %29


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29 = add %28, 12:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %6 0 %36 1
%37:i32 = var
blockpc %6 1 %37 1
%38:i32 = var
blockpc %8 0 %38 1
%39:i32 = var
blockpc %8 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %18 0 %42 1
%43:i32 = var
blockpc %18 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
infer %29


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29 = add %28, 8:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %6 0 %36 1
%37:i32 = var
blockpc %6 1 %37 1
%38:i32 = var
blockpc %8 0 %38 1
%39:i32 = var
blockpc %8 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %18 0 %42 1
%43:i32 = var
blockpc %18 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
infer %29


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5 = phi %4, 65:i32, 61:i32
%6 = eq %5, 61:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12 = phi %9, %5, 65:i32
%13 = phi %3, %5, %12
%14 = eq %13, 65:i32
blockpc %2 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %2 1 %16 1
%17:i32 = var
%18 = phi %4, %17, 0:i32
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23:i32 = var
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28:i32 = var
%29 = phi %24, %27, %28
%30 = phi %20, %23, %29
%31 = phi %4, %19, %30
%32 = phi %9, %31, %18
%33 = phi %3, %18, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37:i32 = var
%38:i32 = var
%39 = phi %34, %37, %38
%40 = phi %2, %33, %39
%41 = ult %40, 16:i32
%42:i32 = zext %41
%43 = eq %42, 0:i32
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5 = phi %4, 65:i32, 61:i32
%6 = eq %5, 61:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12 = phi %9, %5, 65:i32
%13 = phi %3, %5, %12
%14 = eq %13, 65:i32
blockpc %2 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %2 1 %16 1
%17:i32 = var
%18 = phi %4, %17, 0:i32
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23:i32 = var
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28:i32 = var
%29 = phi %24, %27, %28
%30 = phi %20, %23, %29
%31 = phi %4, %19, %30
%32 = phi %9, %31, %18
%33 = phi %3, %18, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37:i32 = var
%38:i32 = var
%39 = phi %34, %37, %38
%40 = phi %2, %33, %39
%41 = ult %40, 16:i32
%42:i32 = zext %41
%43 = eq %42, 0:i32
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = add %10, 11:i32 (hasExternalUses)
%12 = and %11, -8:i32 (hasExternalUses)
%13 = sub 0:i32, %12 (hasExternalUses)
%14 = block 2
%15:i32 = var
%16 = and %15, -8:i32
%17 = sub %16, %12 (hasExternalUses)
%18:i32 = var
%19 = phi %14, %17, %18
%20 = phi %9, %13, %19
%21 = phi %4, %8, %20
%22 = phi %7, %21, %6
%23 = phi %3, %6, %22
%24 = block 2
%25:i32 = var
%26 = and %25, -8:i32
%27:i32 = var
%28 = phi %4, %27, %12
%29 = sub %26, %28 (hasExternalUses)
%30:i32 = var
%31 = phi %24, %29, %30
%32 = phi %2, %23, %31
%33 = eq %1, %32
%34:i32 = var
blockpc %2 0 %34 1
%35:i32 = var
blockpc %2 1 %35 1
%36:i32 = var
blockpc %3 0 %36 1
%37:i32 = var
blockpc %3 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %14 0 %42 1
%43:i32 = var
blockpc %14 1 %43 1
%44:i32 = var
blockpc %24 0 %44 1
%45:i32 = var
blockpc %24 1 %45 1
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %33


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %9, %10, %14
%16 = phi %4, %8, %15
%17 = phi %7, %16, %6
%18 = phi %3, %6, %17
%19 = block 2
%20:i32 = var
%21:i32 = var
%22:i32 = var
%23 = phi %4, %21, %22
%24 = sub %20, %23 (hasExternalUses)
%25:i32 = var
%26 = phi %19, %24, %25
%27 = phi %2, %18, %26
%28:i32 = var
%29 = sub 14:i32, %28
%30:i32 = var
%31 = add %29, %30 (hasExternalUses)
%32 = add %31, 7:i32
%33 = lshr %27, %32
%34 = and %33, 1:i32
%35:i32 = var
%36 = or %34, %35 (hasExternalUses)
%37 = phi %1, 31:i32, %36
%38 = phi %0, 0:i32, %37
%39 = lshr %38, 1:i32
%40:i32 = var
blockpc %0 0 %40 1
%41:i32 = var
blockpc %0 1 %41 1
%42:i32 = var
blockpc %1 0 %42 1
%43:i32 = var
blockpc %1 1 %43 1
%44:i32 = var
blockpc %2 0 %44 1
%45:i32 = var
blockpc %2 1 %45 1
%46:i32 = var
blockpc %3 0 %46 1
%47:i32 = var
blockpc %3 1 %47 1
%48:i32 = var
blockpc %7 0 %48 1
%49:i32 = var
blockpc %7 1 %49 1
%50:i32 = var
blockpc %9 0 %50 1
%51:i32 = var
blockpc %9 1 %51 1
%52:i32 = var
blockpc %11 0 %52 1
%53:i32 = var
blockpc %11 1 %53 1
%54:i32 = var
blockpc %19 0 %54 1
%55:i32 = var
blockpc %19 1 %55 1
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
pc %56 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
infer %39


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %9, %10, %14
%16 = phi %4, %8, %15
%17 = phi %7, %16, %6
%18 = phi %3, %6, %17
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = phi %2, %18, %22
%24:i32 = var
%25:i32 = var
%26 = add %24, %25 (hasExternalUses)
%27 = add %26, 7:i32
%28 = lshr %23, %27
%29 = and %28, 1:i32
%30:i32 = var
%31 = or %29, %30 (hasExternalUses)
%32 = phi %1, 31:i32, %31
%33 = phi %0, 0:i32, %32
%34 = lshr %33, 1:i32
%35 = sub 25:i32, %34
%36:i32 = var
blockpc %0 0 %36 1
%37:i32 = var
blockpc %0 1 %37 1
%38:i32 = var
blockpc %1 0 %38 1
%39:i32 = var
blockpc %1 1 %39 1
%40:i32 = var
blockpc %2 0 %40 1
%41:i32 = var
blockpc %2 1 %41 1
%42:i32 = var
blockpc %3 0 %42 1
%43:i32 = var
blockpc %3 1 %43 1
%44:i32 = var
blockpc %7 0 %44 1
%45:i32 = var
blockpc %7 1 %45 1
%46:i32 = var
blockpc %9 0 %46 1
%47:i32 = var
blockpc %9 1 %47 1
%48:i32 = var
blockpc %11 0 %48 1
%49:i32 = var
blockpc %11 1 %49 1
%50:i32 = var
blockpc %19 0 %50 1
%51:i32 = var
blockpc %19 1 %51 1
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
pc %52 1
pc %53 1
pc %54 1
pc %55 1
pc %56 1
pc %57 1
pc %58 1
pc %59 1
infer %35


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %9, %10, %14
%16 = phi %4, %8, %15
%17 = phi %7, %16, %6
%18 = phi %3, %6, %17
%19 = block 2
%20:i32 = var
%21:i32 = var
%22:i32 = var
%23 = phi %4, %21, %22
%24 = sub %20, %23 (hasExternalUses)
%25:i32 = var
%26 = phi %19, %24, %25
%27 = phi %2, %18, %26
%28:i32 = var
%29 = sub 14:i32, %28
%30:i32 = var
%31 = add %29, %30 (hasExternalUses)
%32 = add %31, 7:i32
%33 = lshr %27, %32
%34 = and %33, 1:i32
%35:i32 = var
%36 = or %34, %35 (hasExternalUses)
%37 = phi %1, 31:i32, %36
%38 = phi %0, 0:i32, %37
%39 = eq %38, 31:i32
%40:i32 = var
blockpc %0 0 %40 1
%41:i32 = var
blockpc %0 1 %41 1
%42:i32 = var
blockpc %1 0 %42 1
%43:i32 = var
blockpc %1 1 %43 1
%44:i32 = var
blockpc %2 0 %44 1
%45:i32 = var
blockpc %2 1 %45 1
%46:i32 = var
blockpc %3 0 %46 1
%47:i32 = var
blockpc %3 1 %47 1
%48:i32 = var
blockpc %7 0 %48 1
%49:i32 = var
blockpc %7 1 %49 1
%50:i32 = var
blockpc %9 0 %50 1
%51:i32 = var
blockpc %9 1 %51 1
%52:i32 = var
blockpc %11 0 %52 1
%53:i32 = var
blockpc %11 1 %53 1
%54:i32 = var
blockpc %19 0 %54 1
%55:i32 = var
blockpc %19 1 %55 1
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59:i32 = var
%60:i32 = var
%61:i32 = var
%62:i32 = var
%63:i32 = var
pc %56 1
pc %57 1
pc %58 1
pc %59 1
pc %60 1
pc %61 1
pc %62 1
pc %63 1
infer %39


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = add %8, 11:i32 (hasExternalUses)
%10 = and %9, -8:i32 (hasExternalUses)
%11 = sub 0:i32, %10 (hasExternalUses)
%12 = block 2
%13:i32 = var
%14 = and %13, -8:i32
%15 = sub %14, %10 (hasExternalUses)
%16:i32 = var
%17 = phi %12, %15, %16
%18 = phi %7, %11, %17
%19 = phi %2, %6, %18
%20 = phi %5, %19, %4
%21 = phi %1, %4, %20
%22 = block 2
%23:i32 = var
%24 = and %23, -8:i32
%25:i32 = var
%26 = phi %2, %25, %10
%27 = sub %24, %26 (hasExternalUses)
%28:i32 = var
%29 = phi %22, %27, %28
%30 = phi %0, %21, %29
%31 = block 2
%32:i32 = var
%33 = phi %31, 0:i32, %32
%34 = shl %30, %33
%35:i32 = var
blockpc %0 0 %35 1
%36:i32 = var
blockpc %0 1 %36 1
%37:i32 = var
blockpc %1 0 %37 1
%38:i32 = var
blockpc %1 1 %38 1
%39:i32 = var
blockpc %5 0 %39 1
%40:i32 = var
blockpc %5 1 %40 1
%41:i32 = var
blockpc %7 0 %41 1
%42:i32 = var
blockpc %7 1 %42 1
%43:i32 = var
blockpc %12 0 %43 1
%44:i32 = var
blockpc %12 1 %44 1
%45:i32 = var
blockpc %22 0 %45 1
%46:i32 = var
blockpc %22 1 %46 1
%47:i32 = var
blockpc %31 0 %47 1
%48:i32 = var
blockpc %31 1 %48 1
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
pc %56 1
infer %34


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5 = block 2
%6 = block 2
%7 = phi %6, 65:i32, 61:i32
%8 = eq %7, 61:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14 = phi %11, %7, 65:i32
%15 = phi %5, %7, %14
%16 = eq %15, 65:i32
blockpc %4 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %4 1 %18 1
%19:i32 = var
%20 = phi %6, %19, 0:i32
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30:i32 = var
%31 = phi %26, %29, %30
%32 = phi %22, %25, %31
%33 = phi %6, %21, %32
%34 = phi %11, %33, %20
%35 = phi %5, %20, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40:i32 = var
%41 = phi %36, %39, %40
%42 = phi %4, %35, %41
%43 = eq %3, %42
%44:i32 = zext %43
%45 = eq %44, 0:i32
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 31:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5 = block 2
%6 = block 2
%7 = phi %6, 65:i32, 61:i32
%8 = eq %7, 61:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14 = phi %11, %7, 65:i32
%15 = phi %5, %7, %14
%16 = eq %15, 65:i32
blockpc %4 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %4 1 %18 1
%19:i32 = var
%20 = phi %6, %19, 0:i32
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30:i32 = var
%31 = phi %26, %29, %30
%32 = phi %22, %25, %31
%33 = phi %6, %21, %32
%34 = phi %11, %33, %20
%35 = phi %5, %20, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40:i32 = var
%41 = phi %36, %39, %40
%42 = phi %4, %35, %41
%43 = eq %3, %42
%44:i32 = zext %43
%45 = eq %44, 0:i32
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 31:i32
%2 = shl %1, 2:i32
%3:i32 = var
%4 = and %3, -8:i32
%5 = block 2
%6 = block 2
%7 = block 2
%8 = phi %7, 65:i32, 61:i32
%9 = eq %8, 61:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15 = phi %12, %8, 65:i32
%16 = phi %6, %8, %15
%17 = eq %16, 65:i32
blockpc %5 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %5 1 %19 1
%20:i32 = var
%21 = phi %7, %20, 0:i32
%22:i32 = var
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26:i32 = var
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30:i32 = var
%31:i32 = var
%32 = phi %27, %30, %31
%33 = phi %23, %26, %32
%34 = phi %7, %22, %33
%35 = phi %12, %34, %21
%36 = phi %6, %21, %35
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40:i32 = var
%41:i32 = var
%42 = phi %37, %40, %41
%43 = phi %5, %36, %42
%44 = eq %4, %43
%45:i32 = zext %44
%46 = eq %45, 0:i32
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = lshr %2, 31:i32
%4 = shl %3, 2:i32
%5 = add %1, %4
%6:i32 = var
%7 = and %6, -8:i32
%8 = block 2
%9 = block 2
%10 = block 2
%11 = phi %10, 65:i32, 61:i32
%12 = eq %11, 61:i32
blockpc %9 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %9 1 %14 1
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18 = phi %15, %11, 65:i32
%19 = phi %9, %11, %18
%20 = eq %19, 65:i32
blockpc %8 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %8 1 %22 1
%23:i32 = var
%24 = phi %10, %23, 0:i32
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34:i32 = var
%35 = phi %30, %33, %34
%36 = phi %26, %29, %35
%37 = phi %10, %25, %36
%38 = phi %15, %37, %24
%39 = phi %9, %24, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43:i32 = var
%44:i32 = var
%45 = phi %40, %43, %44
%46 = phi %8, %39, %45
%47 = eq %7, %46
%48:i32 = zext %47
%49 = eq %48, 0:i32
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
pc %56 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5 = block 2
%6 = block 2
%7 = phi %6, 65:i32, 61:i32
%8 = eq %7, 61:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14 = phi %11, %7, 65:i32
%15 = phi %5, %7, %14
%16 = eq %15, 65:i32
blockpc %4 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %4 1 %18 1
%19:i32 = var
%20 = phi %6, %19, 0:i32
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30:i32 = var
%31 = phi %26, %29, %30
%32 = phi %22, %25, %31
%33 = phi %6, %21, %32
%34 = phi %11, %33, %20
%35 = phi %5, %20, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40:i32 = var
%41 = phi %36, %39, %40
%42 = phi %4, %35, %41
%43 = eq %3, %42
%44:i32 = zext %43
%45 = eq %44, 0:i32
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = shl %0, 1:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5 = block 2
%6 = block 2
%7 = phi %6, 65:i32, 61:i32
%8 = eq %7, 61:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14 = phi %11, %7, 65:i32
%15 = phi %5, %7, %14
%16 = eq %15, 65:i32
blockpc %4 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %4 1 %18 1
%19:i32 = var
%20 = phi %6, %19, 0:i32
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30:i32 = var
%31 = phi %26, %29, %30
%32 = phi %22, %25, %31
%33 = phi %6, %21, %32
%34 = phi %11, %33, %20
%35 = phi %5, %20, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40:i32 = var
%41 = phi %36, %39, %40
%42 = phi %4, %35, %41
%43 = eq %3, %42
%44:i32 = zext %43
%45 = eq %44, 0:i32
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5 = block 2
%6 = block 2
%7 = phi %6, 65:i32, 61:i32
%8 = eq %7, 61:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14 = phi %11, %7, 65:i32
%15 = phi %5, %7, %14
%16 = eq %15, 65:i32
blockpc %4 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %4 1 %18 1
%19:i32 = var
%20 = phi %6, %19, 0:i32
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30:i32 = var
%31 = phi %26, %29, %30
%32 = phi %22, %25, %31
%33 = phi %6, %21, %32
%34 = phi %11, %33, %20
%35 = phi %5, %20, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40:i32 = var
%41 = phi %36, %39, %40
%42 = phi %4, %35, %41
%43 = eq %3, %42
%44:i32 = zext %43
%45 = eq %44, 0:i32
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5 = block 2
%6 = block 2
%7 = phi %6, 65:i32, 61:i32
%8 = eq %7, 61:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14 = phi %11, %7, 65:i32
%15 = phi %5, %7, %14
%16 = eq %15, 65:i32
blockpc %4 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %4 1 %18 1
%19:i32 = var
%20 = phi %6, %19, 0:i32
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30:i32 = var
%31 = phi %26, %29, %30
%32 = phi %22, %25, %31
%33 = phi %6, %21, %32
%34 = phi %11, %33, %20
%35 = phi %5, %20, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39:i32 = var
%40:i32 = var
%41 = phi %36, %39, %40
%42 = phi %4, %35, %41
%43 = eq %3, %42
%44:i32 = zext %43
%45 = eq %44, 0:i32
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = block 2
%8:i32 = var
%9 = block 2
%10:i32 = var
%11 = add %10, 11:i32 (hasExternalUses)
%12 = and %11, -8:i32 (hasExternalUses)
%13 = sub 0:i32, %12 (hasExternalUses)
%14 = block 2
%15:i32 = var
%16 = and %15, -8:i32
%17 = sub %16, %12 (hasExternalUses)
%18:i32 = var
%19 = phi %14, %17, %18
%20 = phi %9, %13, %19
%21 = phi %4, %8, %20
%22 = phi %7, %21, %6
%23 = phi %3, %6, %22
%24 = block 2
%25:i32 = var
%26 = and %25, -8:i32
%27:i32 = var
%28 = phi %4, %27, %12
%29 = sub %26, %28 (hasExternalUses)
%30:i32 = var
%31 = phi %24, %29, %30
%32 = phi %2, %23, %31
%33 = eq %1, %32
%34:i32 = var
blockpc %2 0 %34 1
%35:i32 = var
blockpc %2 1 %35 1
%36:i32 = var
blockpc %3 0 %36 1
%37:i32 = var
blockpc %3 1 %37 1
%38:i32 = var
blockpc %7 0 %38 1
%39:i32 = var
blockpc %7 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %14 0 %42 1
%43:i32 = var
blockpc %14 1 %43 1
%44:i32 = var
blockpc %24 0 %44 1
%45:i32 = var
blockpc %24 1 %45 1
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
infer %33


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29 = add %28, 24:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %6 0 %36 1
%37:i32 = var
blockpc %6 1 %37 1
%38:i32 = var
blockpc %8 0 %38 1
%39:i32 = var
blockpc %8 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %18 0 %42 1
%43:i32 = var
blockpc %18 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
infer %29


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29 = add %28, 12:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %6 0 %36 1
%37:i32 = var
blockpc %6 1 %37 1
%38:i32 = var
blockpc %8 0 %38 1
%39:i32 = var
blockpc %8 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %18 0 %42 1
%43:i32 = var
blockpc %18 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
infer %29


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = phi %2, %3, 0:i32
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = phi %9, %10, %11
%13 = phi %8, 0:i32, %12
%14 = phi %2, %7, %13
%15 = phi %6, 0:i32, %14
%16 = phi %5, %15, %4
%17 = phi %1, %4, %16
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = phi %0, %17, %21
%23:i32 = var
%24:i32 = var
%25 = add %24, 11:i32 (hasExternalUses)
%26 = and %25, -8:i32 (hasExternalUses)
%27 = phi %2, %23, %26
%28 = add %22, %27 (hasExternalUses)
%29 = add %28, 8:i32
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %1 0 %32 1
%33:i32 = var
blockpc %1 1 %33 1
%34:i32 = var
blockpc %5 0 %34 1
%35:i32 = var
blockpc %5 1 %35 1
%36:i32 = var
blockpc %6 0 %36 1
%37:i32 = var
blockpc %6 1 %37 1
%38:i32 = var
blockpc %8 0 %38 1
%39:i32 = var
blockpc %8 1 %39 1
%40:i32 = var
blockpc %9 0 %40 1
%41:i32 = var
blockpc %9 1 %41 1
%42:i32 = var
blockpc %18 0 %42 1
%43:i32 = var
blockpc %18 1 %43 1
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
infer %29


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = add %3, 8:i32
%5 = block 2
%6 = block 2
%7 = block 2
%8 = phi %7, 65:i32, 61:i32
%9 = eq %8, 61:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15 = phi %12, %8, 65:i32
%16 = phi %6, %8, %15
%17 = eq %16, 65:i32
blockpc %5 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %5 1 %19 1
%20:i32 = var
%21 = phi %7, %20, 0:i32
%22:i32 = var
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26:i32 = var
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30:i32 = var
%31:i32 = var
%32 = phi %27, %30, %31
%33 = phi %23, %26, %32
%34 = phi %7, %22, %33
%35 = phi %12, %34, %21
%36 = phi %6, %21, %35
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40:i32 = var
%41:i32 = var
%42 = phi %37, %40, %41
%43 = phi %5, %36, %42
%44 = ult %43, 16:i32
%45:i32 = zext %44
%46 = eq %45, 0:i32
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %46 1
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5 = phi %4, 65:i32, 61:i32
%6 = eq %5, 61:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12 = phi %9, %5, 65:i32
%13 = phi %3, %5, %12
%14 = eq %13, 65:i32
blockpc %2 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %2 1 %16 1
%17:i32 = var
%18 = phi %4, %17, 0:i32
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23:i32 = var
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28:i32 = var
%29 = phi %24, %27, %28
%30 = phi %20, %23, %29
%31 = phi %4, %19, %30
%32 = phi %9, %31, %18
%33 = phi %3, %18, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37:i32 = var
%38:i32 = var
%39 = phi %34, %37, %38
%40 = phi %2, %33, %39
%41 = ult %40, 16:i32
%42:i32 = zext %41
%43 = eq %42, 0:i32
%44:i32 = var
%45:i32 = var
%46:i32 = var
%47:i32 = var
%48:i32 = var
%49:i32 = var
pc %43 1
pc %44 1
pc %45 1
pc %46 1
pc %47 1
pc %48 1
pc %49 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %10, 0:i32, %14
%16 = phi %4, %9, %15
%17 = phi %8, 0:i32, %16
%18 = phi %7, %17, %6
%19 = phi %3, %6, %18
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = phi %2, %19, %23
%25:i32 = var
%26:i32 = var
%27 = add %26, 11:i32 (hasExternalUses)
%28 = and %27, -8:i32 (hasExternalUses)
%29 = phi %4, %25, %28
%30 = add %24, %29 (hasExternalUses)
%31 = phi %0, %1, %30
%32 = add %31, 8:i32
%33:i32 = var
blockpc %2 0 %33 1
%34:i32 = var
blockpc %2 1 %34 1
%35:i32 = var
blockpc %3 0 %35 1
%36:i32 = var
blockpc %3 1 %36 1
%37:i32 = var
blockpc %7 0 %37 1
%38:i32 = var
blockpc %7 1 %38 1
%39:i32 = var
blockpc %8 0 %39 1
%40:i32 = var
blockpc %8 1 %40 1
%41:i32 = var
blockpc %10 0 %41 1
%42:i32 = var
blockpc %10 1 %42 1
%43:i32 = var
blockpc %11 0 %43 1
%44:i32 = var
blockpc %11 1 %44 1
%45:i32 = var
blockpc %20 0 %45 1
%46:i32 = var
blockpc %20 1 %46 1
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
infer %32


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %10, 0:i32, %14
%16 = phi %4, %9, %15
%17 = phi %8, 0:i32, %16
%18 = phi %7, %17, %6
%19 = phi %3, %6, %18
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = phi %2, %19, %23
%25:i32 = var
%26:i32 = var
%27 = add %26, 11:i32 (hasExternalUses)
%28 = and %27, -8:i32 (hasExternalUses)
%29 = phi %4, %25, %28
%30 = add %24, %29 (hasExternalUses)
%31 = phi %0, %1, %30
%32 = add %31, 12:i32
%33:i32 = var
blockpc %2 0 %33 1
%34:i32 = var
blockpc %2 1 %34 1
%35:i32 = var
blockpc %3 0 %35 1
%36:i32 = var
blockpc %3 1 %36 1
%37:i32 = var
blockpc %7 0 %37 1
%38:i32 = var
blockpc %7 1 %38 1
%39:i32 = var
blockpc %8 0 %39 1
%40:i32 = var
blockpc %8 1 %40 1
%41:i32 = var
blockpc %10 0 %41 1
%42:i32 = var
blockpc %10 1 %42 1
%43:i32 = var
blockpc %11 0 %43 1
%44:i32 = var
blockpc %11 1 %44 1
%45:i32 = var
blockpc %20 0 %45 1
%46:i32 = var
blockpc %20 1 %46 1
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
infer %32


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = phi %4, %5, 0:i32
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = phi %11, %12, %13
%15 = phi %10, 0:i32, %14
%16 = phi %4, %9, %15
%17 = phi %8, 0:i32, %16
%18 = phi %7, %17, %6
%19 = phi %3, %6, %18
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = phi %2, %19, %23
%25:i32 = var
%26:i32 = var
%27 = add %26, 11:i32 (hasExternalUses)
%28 = and %27, -8:i32 (hasExternalUses)
%29 = phi %4, %25, %28
%30 = add %24, %29 (hasExternalUses)
%31 = phi %0, %1, %30
%32 = add %31, 24:i32
%33:i32 = var
blockpc %2 0 %33 1
%34:i32 = var
blockpc %2 1 %34 1
%35:i32 = var
blockpc %3 0 %35 1
%36:i32 = var
blockpc %3 1 %36 1
%37:i32 = var
blockpc %7 0 %37 1
%38:i32 = var
blockpc %7 1 %38 1
%39:i32 = var
blockpc %8 0 %39 1
%40:i32 = var
blockpc %8 1 %40 1
%41:i32 = var
blockpc %10 0 %41 1
%42:i32 = var
blockpc %10 1 %42 1
%43:i32 = var
blockpc %11 0 %43 1
%44:i32 = var
blockpc %11 1 %44 1
%45:i32 = var
blockpc %20 0 %45 1
%46:i32 = var
blockpc %20 1 %46 1
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
infer %32


; start LHS (in $38)
%0 = block 4
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = phi %3, %4, 0:i32
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = block 2
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = phi %10, %11, %12
%14 = phi %9, 0:i32, %13
%15 = phi %3, %8, %14
%16 = phi %7, 0:i32, %15
%17 = phi %6, %16, %5
%18 = phi %2, %5, %17
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = phi %1, %18, %22
%24 = block 2
%25 = block 2
%26:i32 = var
%27 = phi %25, %26, %23
%28 = phi %24, %23, %27
%29 = phi %0, %23, %23, %23, %28
%30 = add %29, 8:i32
%31:i32 = var
blockpc %1 0 %31 1
%32:i32 = var
blockpc %1 1 %32 1
%33:i32 = var
blockpc %2 0 %33 1
%34:i32 = var
blockpc %2 1 %34 1
%35:i32 = var
blockpc %6 0 %35 1
%36:i32 = var
blockpc %6 1 %36 1
%37:i32 = var
blockpc %7 0 %37 1
%38:i32 = var
blockpc %7 1 %38 1
%39:i32 = var
blockpc %9 0 %39 1
%40:i32 = var
blockpc %9 1 %40 1
%41:i32 = var
blockpc %10 0 %41 1
%42:i32 = var
blockpc %10 1 %42 1
%43:i32 = var
blockpc %19 0 %43 1
%44:i32 = var
blockpc %19 1 %44 1
%45:i32 = var
blockpc %24 0 %45 1
%46:i32 = var
blockpc %24 1 %46 1
%47:i32 = var
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %47 1
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
infer %30


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = ult %0, %18
%20 = ult %4, 245:i32
blockpc %8 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %8 1 %22 1
%23 = ult %4, 11:i32
blockpc %9 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %9 1 %25 1
%26:i32 = var
blockpc %13 0 %26 1
%27:i32 = var
blockpc %13 1 %27 1
%28:i32 = var
blockpc %14 0 %28 1
%29:i32 = var
blockpc %14 1 %29 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = ult %0, %18
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = ult %4, 245:i32
blockpc %8 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %8 1 %24 1
%25 = ult %4, 11:i32
blockpc %9 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %9 1 %27 1
%28:i32 = var
blockpc %13 0 %28 1
%29:i32 = var
blockpc %13 1 %29 1
%30:i32 = var
blockpc %14 0 %30 1
%31:i32 = var
blockpc %14 1 %31 1
infer %21


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = sub %0, %18
%20 = ult %4, 245:i32
blockpc %8 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %8 1 %22 1
%23 = ult %4, 11:i32
blockpc %9 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %9 1 %25 1
%26:i32 = var
blockpc %13 0 %26 1
%27:i32 = var
blockpc %13 1 %27 1
%28:i32 = var
blockpc %14 0 %28 1
%29:i32 = var
blockpc %14 1 %29 1
%30:i32 = var
pc %30 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = sub %0, %18 (hasExternalUses)
%20 = ult 15:i32, %19
%21 = ult %4, 245:i32
blockpc %8 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %8 1 %23 1
%24 = ult %4, 11:i32
blockpc %9 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %9 1 %26 1
%27:i32 = var
blockpc %13 0 %27 1
%28:i32 = var
blockpc %13 1 %28 1
%29:i32 = var
blockpc %14 0 %29 1
%30:i32 = var
blockpc %14 1 %30 1
%31:i32 = var
pc %31 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = add %0, %18
%20 = ult %4, 245:i32
blockpc %8 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %8 1 %22 1
%23 = ult %4, 11:i32
blockpc %9 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %9 1 %25 1
%26:i32 = var
blockpc %13 0 %26 1
%27:i32 = var
blockpc %13 1 %27 1
%28:i32 = var
blockpc %14 0 %28 1
%29:i32 = var
blockpc %14 1 %29 1
%30:i32 = var
%31:i32 = var
pc %30 1
pc %31 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = add %0, %18 (hasExternalUses)
%20 = add %19, 4:i32
%21 = ult %4, 245:i32
blockpc %8 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %8 1 %23 1
%24 = ult %4, 11:i32
blockpc %9 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %9 1 %26 1
%27:i32 = var
blockpc %13 0 %27 1
%28:i32 = var
blockpc %13 1 %28 1
%29:i32 = var
blockpc %14 0 %29 1
%30:i32 = var
blockpc %14 1 %30 1
%31:i32 = var
%32:i32 = var
pc %31 1
pc %32 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = sub %0, %18 (hasExternalUses)
%20 = or %19, 1:i32
%21 = ult %4, 245:i32
blockpc %8 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %8 1 %23 1
%24 = ult %4, 11:i32
blockpc %9 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %9 1 %26 1
%27:i32 = var
blockpc %13 0 %27 1
%28:i32 = var
blockpc %13 1 %28 1
%29:i32 = var
blockpc %14 0 %29 1
%30:i32 = var
blockpc %14 1 %30 1
%31:i32 = var
%32:i32 = var
pc %31 1
pc %32 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32
%8 = and %7, -8:i32
%9 = phi %4, %5, %8
%10 = block 2
%11 = ult %6, 245:i32
blockpc %10 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %10 1 %13 1
%14 = block 2
%15 = ult %6, 11:i32
blockpc %14 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %14 1 %17 1
%18 = add %6, 11:i32
%19 = and %18, -8:i32
%20 = phi %14, 16:i32, %19
%21 = block 2
%22 = ult -65:i32, %6
blockpc %21 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %21 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = phi %25, %8, %9
%29 = phi %21, -1:i32, %28
%30 = phi %10, %20, %29
%31 = phi %3, %9, %30
%32 = sub %1, %31
%33 = ult 15:i32, %32
%34:i32 = var
pc %33 1
pc %34 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32
%8 = and %7, -8:i32
%9 = phi %4, %5, %8
%10 = block 2
%11 = ult %6, 245:i32
blockpc %10 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %10 1 %13 1
%14 = block 2
%15 = ult %6, 11:i32
blockpc %14 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %14 1 %17 1
%18 = add %6, 11:i32
%19 = and %18, -8:i32
%20 = phi %14, 16:i32, %19
%21 = block 2
%22 = ult -65:i32, %6
blockpc %21 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %21 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = phi %25, %8, %9
%29 = phi %21, -1:i32, %28
%30 = phi %10, %20, %29
%31 = phi %3, %9, %30
%32 = sub %2, %31
%33 = ult 15:i32, %32
%34:i32 = var
pc %33 1
pc %34 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = add %3, 11:i32 (hasExternalUses)
%5 = and %4, -8:i32 (hasExternalUses)
%6 = phi %1, %2, %5
%7 = block 2
%8 = block 2
%9 = add %3, 11:i32
%10 = and %9, -8:i32 (hasExternalUses)
%11 = phi %8, 16:i32, %10
%12 = block 2
%13 = block 2
%14 = phi %13, %5, %6
%15 = phi %12, -1:i32, %14
%16 = phi %7, %11, %15
%17 = phi %0, %6, %16
%18 = or %17, 3:i32
%19 = ult %3, 245:i32
blockpc %7 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %7 1 %21 1
%22 = ult %3, 11:i32
blockpc %8 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %8 1 %24 1
%25 = ult -65:i32, %3
blockpc %12 0 %25 1
%26:i32 = var
blockpc %12 1 %26 1
%27:i32 = var
blockpc %13 0 %27 1
%28:i32 = var
blockpc %13 1 %28 1
%29:i32 = var
%30:i32 = var
pc %29 1
pc %30 1
infer %18


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32
%8 = and %7, -8:i32
%9 = phi %4, %5, %8
%10 = block 2
%11 = ult %6, 245:i32
blockpc %10 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %10 1 %13 1
%14 = block 2
%15 = ult %6, 11:i32
blockpc %14 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %14 1 %17 1
%18 = add %6, 11:i32
%19 = and %18, -8:i32
%20 = phi %14, 16:i32, %19
%21 = block 2
%22 = ult -65:i32, %6
blockpc %21 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %21 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = phi %25, %8, %9
%29 = phi %21, -1:i32, %28
%30 = phi %10, %20, %29
%31 = phi %3, %9, %30
%32 = sub %2, %31
%33 = ult 15:i32, %32
%34:i32 = zext %33
%35 = eq %34, 0:i32
%36:i32 = var
pc %35 1
pc %36 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = or %0, 3:i32
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %5, 11:i32
%7 = and %6, -8:i32
%8 = phi %3, %4, %7
%9 = block 2
%10 = ult %5, 245:i32
blockpc %9 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %9 1 %12 1
%13 = block 2
%14 = ult %5, 11:i32
blockpc %13 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %13 1 %16 1
%17 = add %5, 11:i32
%18 = and %17, -8:i32
%19 = phi %13, 16:i32, %18
%20 = block 2
%21 = ult -65:i32, %5
blockpc %20 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %20 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = phi %24, %7, %8
%28 = phi %20, -1:i32, %27
%29 = phi %9, %19, %28
%30 = phi %2, %8, %29
%31 = sub %0, %30
%32 = ult 15:i32, %31
%33:i32 = zext %32
%34 = eq %33, 0:i32
%35:i32 = var
pc %34 1
pc %35 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32
%8 = and %7, -8:i32
%9 = phi %4, %5, %8
%10 = block 2
%11 = ult %6, 245:i32
blockpc %10 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %10 1 %13 1
%14 = block 2
%15 = ult %6, 11:i32
blockpc %14 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %14 1 %17 1
%18 = add %6, 11:i32
%19 = and %18, -8:i32
%20 = phi %14, 16:i32, %19
%21 = block 2
%22 = ult -65:i32, %6
blockpc %21 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %21 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = phi %25, %8, %9
%29 = phi %21, -1:i32, %28
%30 = phi %10, %20, %29
%31 = phi %3, %9, %30
%32 = sub %1, %31
%33 = ult 15:i32, %32
%34:i32 = zext %33
%35 = eq %34, 0:i32
%36:i32 = var
pc %35 1
pc %36 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3 = add %2, 4:i32
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = add %7, 11:i32
%9 = and %8, -8:i32
%10 = phi %5, %6, %9
%11 = block 2
%12 = ult %7, 245:i32
blockpc %11 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %11 1 %14 1
%15 = block 2
%16 = ult %7, 11:i32
blockpc %15 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %15 1 %18 1
%19 = add %7, 11:i32
%20 = and %19, -8:i32
%21 = phi %15, 16:i32, %20
%22 = block 2
%23 = ult -65:i32, %7
blockpc %22 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %22 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = phi %26, %9, %10
%30 = phi %22, -1:i32, %29
%31 = phi %11, %21, %30
%32 = phi %4, %10, %31
%33 = sub %1, %32
%34 = ult 15:i32, %33
%35:i32 = zext %34
%36 = eq %35, 0:i32
%37:i32 = var
pc %36 1
pc %37 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = or %0, 1:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32
%8 = and %7, -8:i32
%9 = phi %4, %5, %8
%10 = block 2
%11 = ult %6, 245:i32
blockpc %10 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %10 1 %13 1
%14 = block 2
%15 = ult %6, 11:i32
blockpc %14 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %14 1 %17 1
%18 = add %6, 11:i32
%19 = and %18, -8:i32
%20 = phi %14, 16:i32, %19
%21 = block 2
%22 = ult -65:i32, %6
blockpc %21 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %21 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = phi %25, %8, %9
%29 = phi %21, -1:i32, %28
%30 = phi %10, %20, %29
%31 = phi %3, %9, %30
%32 = sub %2, %31
%33 = ult 15:i32, %32
%34:i32 = zext %33
%35 = eq %34, 0:i32
%36:i32 = var
pc %35 1
pc %36 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32
%8 = and %7, -8:i32
%9 = phi %4, %5, %8
%10 = block 2
%11 = ult %6, 245:i32
blockpc %10 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %10 1 %13 1
%14 = block 2
%15 = ult %6, 11:i32
blockpc %14 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %14 1 %17 1
%18 = add %6, 11:i32
%19 = and %18, -8:i32
%20 = phi %14, 16:i32, %19
%21 = block 2
%22 = ult -65:i32, %6
blockpc %21 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %21 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = phi %25, %8, %9
%29 = phi %21, -1:i32, %28
%30 = phi %10, %20, %29
%31 = phi %3, %9, %30
%32 = ult %2, %31
%33:i32 = zext %32
%34 = eq %33, 0:i32
pc %34 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = add %3, 11:i32 (hasExternalUses)
%5 = and %4, -8:i32 (hasExternalUses)
%6 = phi %1, %2, %5
%7 = block 2
%8 = block 2
%9 = add %3, 11:i32
%10 = and %9, -8:i32 (hasExternalUses)
%11 = phi %8, 16:i32, %10
%12 = block 2
%13 = block 2
%14 = phi %13, %5, %6
%15 = phi %12, -1:i32, %14
%16 = phi %7, %11, %15
%17 = phi %0, %6, %16
%18:i32 = var
%19 = ult %17, %18
%20 = ult %3, 245:i32
blockpc %7 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %7 1 %22 1
%23 = ult %3, 11:i32
blockpc %8 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %8 1 %25 1
%26:i32 = var
blockpc %12 0 %26 1
%27:i32 = var
blockpc %12 1 %27 1
%28:i32 = var
blockpc %13 0 %28 1
%29:i32 = var
blockpc %13 1 %29 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = sub %0, %18
%20 = ult %4, 245:i32
blockpc %8 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %8 1 %22 1
%23 = ult %4, 11:i32
blockpc %9 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %9 1 %25 1
%26:i32 = var
blockpc %13 0 %26 1
%27:i32 = var
blockpc %13 1 %27 1
%28:i32 = var
blockpc %14 0 %28 1
%29:i32 = var
blockpc %14 1 %29 1
%30:i32 = var
pc %30 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = add %0, %18
%20 = ult %4, 245:i32
blockpc %8 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %8 1 %22 1
%23 = ult %4, 11:i32
blockpc %9 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %9 1 %25 1
%26:i32 = var
blockpc %13 0 %26 1
%27:i32 = var
blockpc %13 1 %27 1
%28:i32 = var
blockpc %14 0 %28 1
%29:i32 = var
blockpc %14 1 %29 1
%30:i32 = var
pc %30 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = add %0, %18 (hasExternalUses)
%20 = add %19, 4:i32
%21 = ult %4, 245:i32
blockpc %8 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %8 1 %23 1
%24 = ult %4, 11:i32
blockpc %9 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %9 1 %26 1
%27:i32 = var
blockpc %13 0 %27 1
%28:i32 = var
blockpc %13 1 %28 1
%29:i32 = var
blockpc %14 0 %29 1
%30:i32 = var
blockpc %14 1 %30 1
%31:i32 = var
pc %31 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = sub %0, %18 (hasExternalUses)
%20 = or %19, 1:i32
%21 = ult %4, 245:i32
blockpc %8 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %8 1 %23 1
%24 = ult %4, 11:i32
blockpc %9 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %9 1 %26 1
%27:i32 = var
blockpc %13 0 %27 1
%28:i32 = var
blockpc %13 1 %28 1
%29:i32 = var
blockpc %14 0 %29 1
%30:i32 = var
blockpc %14 1 %30 1
%31:i32 = var
pc %31 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %5, 11:i32
%7 = and %6, -8:i32
%8 = phi %3, %4, %7
%9 = block 2
%10 = ult %5, 245:i32
blockpc %9 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %9 1 %12 1
%13 = block 2
%14 = ult %5, 11:i32
blockpc %13 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %13 1 %16 1
%17 = add %5, 11:i32
%18 = and %17, -8:i32
%19 = phi %13, 16:i32, %18
%20 = block 2
%21 = ult -65:i32, %5
blockpc %20 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %20 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = phi %24, %7, %8
%28 = phi %20, -1:i32, %27
%29 = phi %9, %19, %28
%30 = phi %2, %8, %29
%31:i32 = var
%32 = ult %30, %31
pc %32 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = add %3, 11:i32 (hasExternalUses)
%5 = and %4, -8:i32 (hasExternalUses)
%6 = phi %1, %2, %5
%7 = block 2
%8 = block 2
%9 = add %3, 11:i32
%10 = and %9, -8:i32 (hasExternalUses)
%11 = phi %8, 16:i32, %10
%12 = block 2
%13 = block 2
%14 = phi %13, %5, %6
%15 = phi %12, -1:i32, %14
%16 = phi %7, %11, %15
%17 = phi %0, %6, %16
%18 = or %17, 3:i32
%19 = ult %3, 245:i32
blockpc %7 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %7 1 %21 1
%22 = ult %3, 11:i32
blockpc %8 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %8 1 %24 1
%25 = ult -65:i32, %3
blockpc %12 0 %25 1
%26:i32 = var
blockpc %12 1 %26 1
%27:i32 = var
blockpc %13 0 %27 1
%28:i32 = var
blockpc %13 1 %28 1
%29:i32 = var
pc %29 1
infer %18


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %5, 11:i32
%7 = and %6, -8:i32
%8 = phi %3, %4, %7
%9 = block 2
%10 = ult %5, 245:i32
blockpc %9 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %9 1 %12 1
%13 = block 2
%14 = ult %5, 11:i32
blockpc %13 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %13 1 %16 1
%17 = add %5, 11:i32
%18 = and %17, -8:i32
%19 = phi %13, 16:i32, %18
%20 = block 2
%21 = ult -65:i32, %5
blockpc %20 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %20 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = phi %24, %7, %8
%28 = phi %20, -1:i32, %27
%29 = phi %9, %19, %28
%30 = phi %2, %8, %29
%31:i32 = var
%32 = ult %30, %31
pc %32 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6 = block 2
%7 = block 2
%8 = phi %7, %3, %4
%9 = phi %6, %3, %8
%10 = phi %5, %3, %9
%11 = phi %0, %4, %10
%12 = and %11, -16:i32
%13:i32 = var
%14 = ult %13, 245:i32
blockpc %5 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %5 1 %16 1
%17 = ult -65:i32, %13
blockpc %6 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %6 1 %19 1
%20:i32 = var
%21 = eq %20, 0:i32
blockpc %7 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %7 1 %23 1
%24:i32 = var
pc %24 1
infer %12


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = block 2
%6 = block 2
%7 = block 2
%8 = phi %7, %3, %4
%9 = phi %6, %3, %8
%10 = phi %5, %3, %9
%11 = phi %0, %4, %10
%12 = and %11, -16:i32
%13 = xor %12, 1431655768:i32
%14:i32 = var
%15 = ult %14, 245:i32
blockpc %5 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %5 1 %17 1
%18 = ult -65:i32, %14
blockpc %6 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %6 1 %20 1
%21:i32 = var
%22 = eq %21, 0:i32
blockpc %7 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %7 1 %24 1
%25:i32 = var
pc %25 1
infer %13


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = add %3, 11:i32 (hasExternalUses)
%5 = and %4, -8:i32 (hasExternalUses)
%6 = phi %1, %2, %5
%7 = block 2
%8 = block 2
%9 = add %3, 11:i32
%10 = and %9, -8:i32 (hasExternalUses)
%11 = phi %8, 16:i32, %10
%12 = block 2
%13 = block 2
%14 = phi %13, %5, %6
%15 = phi %12, -1:i32, %14
%16 = phi %7, %11, %15
%17 = phi %0, %6, %16
%18 = add %17, 48:i32
%19 = ult %3, 245:i32
blockpc %7 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %7 1 %21 1
%22 = ult %3, 11:i32
blockpc %8 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %8 1 %24 1
%25 = ult -65:i32, %3
blockpc %12 0 %25 1
%26:i32 = var
blockpc %12 1 %26 1
%27:i32 = var
blockpc %13 0 %27 1
%28:i32 = var
blockpc %13 1 %28 1
infer %18


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = add %3, 11:i32 (hasExternalUses)
%5 = and %4, -8:i32 (hasExternalUses)
%6 = phi %1, %2, %5
%7 = block 2
%8 = block 2
%9 = add %3, 11:i32
%10 = and %9, -8:i32 (hasExternalUses)
%11 = phi %8, 16:i32, %10
%12 = block 2
%13 = block 2
%14 = phi %13, %5, %6
%15 = phi %12, -1:i32, %14
%16 = phi %7, %11, %15
%17 = phi %0, %6, %16
%18 = add %17, 47:i32
%19 = ult %3, 245:i32
blockpc %7 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %7 1 %21 1
%22 = ult %3, 11:i32
blockpc %8 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %8 1 %24 1
%25 = ult -65:i32, %3
blockpc %12 0 %25 1
%26:i32 = var
blockpc %12 1 %26 1
%27:i32 = var
blockpc %13 0 %27 1
%28:i32 = var
blockpc %13 1 %28 1
infer %18


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = phi %0, 4096:i32, %1
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32 (hasExternalUses)
%8 = and %7, -8:i32 (hasExternalUses)
%9 = phi %4, %5, %8
%10 = block 2
%11 = block 2
%12 = add %6, 11:i32
%13 = and %12, -8:i32 (hasExternalUses)
%14 = phi %11, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %8, %9
%18 = phi %15, -1:i32, %17
%19 = phi %10, %14, %18
%20 = phi %3, %9, %19
%21 = add %20, 47:i32 (hasExternalUses)
%22 = add %2, %21
%23:i32 = var
%24 = eq %23, 0:i32
blockpc %0 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %0 1 %26 1
%27 = ult %6, 245:i32
blockpc %10 0 %27 1
%28:i32 = var
blockpc %10 1 %28 1
%29:i32 = var
blockpc %11 0 %29 1
%30:i32 = var
blockpc %11 1 %30 1
%31:i32 = var
blockpc %15 0 %31 1
%32:i32 = var
blockpc %15 1 %32 1
%33:i32 = var
blockpc %16 0 %33 1
%34:i32 = var
blockpc %16 1 %34 1
infer %22


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = phi %0, 4096:i32, %1
%3 = sub 0:i32, %2
%4:i32 = var
%5 = eq %4, 0:i32
blockpc %0 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %0 1 %7 1
infer %3


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = phi %0, 4096:i32, %1
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32 (hasExternalUses)
%8 = and %7, -8:i32 (hasExternalUses)
%9 = phi %4, %5, %8
%10 = block 2
%11 = block 2
%12 = add %6, 11:i32
%13 = and %12, -8:i32 (hasExternalUses)
%14 = phi %11, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %8, %9
%18 = phi %15, -1:i32, %17
%19 = phi %10, %14, %18
%20 = phi %3, %9, %19
%21 = add %20, 47:i32 (hasExternalUses)
%22 = add %2, %21 (hasExternalUses)
%23 = sub 0:i32, %2 (hasExternalUses)
%24 = and %22, %23
%25:i32 = var
%26 = eq %25, 0:i32
blockpc %0 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %0 1 %28 1
%29:i32 = var
blockpc %10 0 %29 1
%30:i32 = var
blockpc %10 1 %30 1
%31:i32 = var
blockpc %11 0 %31 1
%32:i32 = var
blockpc %11 1 %32 1
%33:i32 = var
blockpc %15 0 %33 1
%34:i32 = var
blockpc %15 1 %34 1
%35:i32 = var
blockpc %16 0 %35 1
%36:i32 = var
blockpc %16 1 %36 1
infer %24


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = add %3, 11:i32 (hasExternalUses)
%5 = and %4, -8:i32 (hasExternalUses)
%6 = phi %1, %2, %5
%7 = block 2
%8 = block 2
%9 = add %3, 11:i32
%10 = and %9, -8:i32 (hasExternalUses)
%11 = phi %8, 16:i32, %10
%12 = block 2
%13 = block 2
%14 = phi %13, %5, %6
%15 = phi %12, -1:i32, %14
%16 = phi %7, %11, %15
%17 = phi %0, %6, %16
%18 = block 2
%19:i32 = var
%20 = phi %18, 4096:i32, %19
%21 = add %17, 47:i32 (hasExternalUses)
%22 = add %20, %21 (hasExternalUses)
%23 = sub 0:i32, %20 (hasExternalUses)
%24 = and %22, %23 (hasExternalUses)
%25 = ult %17, %24
%26 = ult %3, 245:i32
blockpc %7 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %7 1 %28 1
%29:i32 = var
blockpc %8 0 %29 1
%30:i32 = var
blockpc %8 1 %30 1
%31:i32 = var
blockpc %12 0 %31 1
%32:i32 = var
blockpc %12 1 %32 1
%33:i32 = var
blockpc %13 0 %33 1
%34:i32 = var
blockpc %13 1 %34 1
%35:i32 = var
blockpc %18 0 %35 1
%36:i32 = var
blockpc %18 1 %36 1
infer %25


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = add %3, 11:i32 (hasExternalUses)
%5 = and %4, -8:i32 (hasExternalUses)
%6 = phi %1, %2, %5
%7 = block 2
%8 = block 2
%9 = add %3, 11:i32
%10 = and %9, -8:i32 (hasExternalUses)
%11 = phi %8, 16:i32, %10
%12 = block 2
%13 = block 2
%14 = phi %13, %5, %6
%15 = phi %12, -1:i32, %14
%16 = phi %7, %11, %15
%17 = phi %0, %6, %16
%18 = block 2
%19:i32 = var
%20 = phi %18, 4096:i32, %19
%21 = add %17, 47:i32 (hasExternalUses)
%22 = add %20, %21 (hasExternalUses)
%23 = sub 0:i32, %20 (hasExternalUses)
%24 = and %22, %23 (hasExternalUses)
%25 = ult %17, %24
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28 = ult %3, 245:i32
blockpc %7 0 %28 1
%29:i32 = var
blockpc %7 1 %29 1
%30:i32 = var
blockpc %8 0 %30 1
%31:i32 = var
blockpc %8 1 %31 1
%32:i32 = var
blockpc %12 0 %32 1
%33:i32 = var
blockpc %12 1 %33 1
%34:i32 = var
blockpc %13 0 %34 1
%35:i32 = var
blockpc %13 1 %35 1
%36:i32 = var
blockpc %18 0 %36 1
%37:i32 = var
blockpc %18 1 %37 1
infer %27


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, 4096:i32, %2
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = add %7, 11:i32 (hasExternalUses)
%9 = and %8, -8:i32 (hasExternalUses)
%10 = phi %5, %6, %9
%11 = block 2
%12 = block 2
%13 = add %7, 11:i32
%14 = and %13, -8:i32 (hasExternalUses)
%15 = phi %12, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %9, %10
%19 = phi %16, -1:i32, %18
%20 = phi %11, %15, %19
%21 = phi %4, %10, %20
%22 = add %21, 47:i32 (hasExternalUses)
%23 = add %3, %22 (hasExternalUses)
%24 = sub 0:i32, %3 (hasExternalUses)
%25 = and %23, %24 (hasExternalUses)
%26 = add %0, %25
%27:i32 = var
%28 = eq %27, 0:i32
blockpc %1 0 %28 1
%29:i32 = var
blockpc %1 1 %29 1
%30:i32 = var
blockpc %11 0 %30 1
%31:i32 = var
blockpc %11 1 %31 1
%32:i32 = var
blockpc %12 0 %32 1
%33:i32 = var
blockpc %12 1 %33 1
%34:i32 = var
blockpc %16 0 %34 1
%35:i32 = var
blockpc %16 1 %35 1
%36:i32 = var
blockpc %17 0 %36 1
%37:i32 = var
blockpc %17 1 %37 1
%38:i32 = var
pc %38 1
infer %26


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, 4096:i32, %2
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = add %7, 11:i32 (hasExternalUses)
%9 = and %8, -8:i32 (hasExternalUses)
%10 = phi %5, %6, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = and %13, -8:i32 (hasExternalUses)
%15 = phi %12, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %9, %10
%19 = phi %16, -1:i32, %18
%20 = phi %11, %15, %19
%21 = phi %4, %10, %20
%22 = add %21, 47:i32 (hasExternalUses)
%23 = add %3, %22 (hasExternalUses)
%24 = sub 0:i32, %3 (hasExternalUses)
%25 = and %23, %24 (hasExternalUses)
%26 = add %0, %25 (hasExternalUses)
%27 = ule %26, %0
%28:i32 = var
%29 = eq %28, 0:i32
blockpc %1 0 %29 1
%30:i32 = var
blockpc %1 1 %30 1
%31:i32 = var
blockpc %11 0 %31 1
%32:i32 = var
blockpc %11 1 %32 1
%33:i32 = var
blockpc %12 0 %33 1
%34:i32 = var
blockpc %12 1 %34 1
%35:i32 = var
blockpc %16 0 %35 1
%36:i32 = var
blockpc %16 1 %36 1
%37:i32 = var
blockpc %17 0 %37 1
%38:i32 = var
blockpc %17 1 %38 1
%39:i32 = var
pc %39 1
infer %27


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = block 2
%3:i32 = var
%4 = phi %2, 4096:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = add %8, 11:i32 (hasExternalUses)
%10 = and %9, -8:i32 (hasExternalUses)
%11 = phi %6, %7, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = and %14, -8:i32 (hasExternalUses)
%16 = phi %13, 16:i32, %15
%17 = block 2
%18 = block 2
%19 = phi %18, %10, %11
%20 = phi %17, -1:i32, %19
%21 = phi %12, %16, %20
%22 = phi %5, %11, %21
%23 = add %22, 47:i32 (hasExternalUses)
%24 = add %4, %23 (hasExternalUses)
%25 = sub 0:i32, %4 (hasExternalUses)
%26 = and %24, %25 (hasExternalUses)
%27 = add %1, %26 (hasExternalUses)
%28 = ult %0, %27
%29:i32 = var
%30 = eq %29, 0:i32
blockpc %2 0 %30 1
%31:i32 = var
blockpc %2 1 %31 1
%32:i32 = var
blockpc %12 0 %32 1
%33:i32 = var
blockpc %12 1 %33 1
%34:i32 = var
blockpc %13 0 %34 1
%35:i32 = var
blockpc %13 1 %35 1
%36:i32 = var
blockpc %17 0 %36 1
%37:i32 = var
blockpc %17 1 %37 1
%38:i32 = var
blockpc %18 0 %38 1
%39:i32 = var
blockpc %18 1 %39 1
%40:i32 = var
pc %40 1
infer %28


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = phi %1, 4096:i32, %2
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %7, %8
%16 = phi %13, -1:i32, %15
%17 = phi %9, %12, %16
%18 = phi %4, %8, %17
%19 = add %18, 47:i32 (hasExternalUses)
%20 = add %3, %19 (hasExternalUses)
%21 = sub 0:i32, %3 (hasExternalUses)
%22 = and %20, %21 (hasExternalUses)
%23 = add %0, %22
%24 = ule %23, %0
%25:i32 = zext %24
%26:i32 = var
%27 = ult %26, %23
%28:i32 = zext %27
%29 = or %25, %28
%30:i32 = var
blockpc %1 0 %30 1
%31:i32 = var
blockpc %1 1 %31 1
%32:i32 = var
blockpc %9 0 %32 1
%33:i32 = var
blockpc %9 1 %33 1
%34:i32 = var
blockpc %10 0 %34 1
%35:i32 = var
blockpc %10 1 %35 1
%36:i32 = var
blockpc %13 0 %36 1
%37:i32 = var
blockpc %13 1 %37 1
%38:i32 = var
blockpc %14 0 %38 1
%39:i32 = var
blockpc %14 1 %39 1
%40:i32 = var
pc %40 1
infer %29


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 4:i32
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 4:i32
%2 = eq %1, 0:i32
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = and %2, 4:i32
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3 = eq %0, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = and %6, 4:i32
%8 = eq %7, 0:i32
pc %5 1
pc %8 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5 = eq %0, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = and %8, 4:i32
%10 = eq %9, 0:i32
pc %7 1
pc %10 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3:i32 = var
%4 = ult %2, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = eq %2, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = and %10, 4:i32
%12 = eq %11, 0:i32
pc %6 1
pc %9 1
pc %12 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3:i32 = var
%4 = ult %3, %0
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = eq %3, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = and %10, 4:i32
%12 = eq %11, 0:i32
pc %6 1
pc %9 1
pc %12 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2
%4 = ult %0, %3
%5 = ult %0, %1
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = eq %0, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = and %11, 4:i32
%13 = eq %12, 0:i32
pc %7 1
pc %10 1
pc %13 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = and %6, 4:i32
%8 = eq %7, 0:i32
pc %5 1
pc %8 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = and %6, 4:i32
%8 = eq %7, 0:i32
pc %5 1
pc %8 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = phi %0, 4096:i32, %1
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32 (hasExternalUses)
%8 = and %7, -8:i32 (hasExternalUses)
%9 = phi %4, %5, %8
%10 = block 2
%11 = block 2
%12 = add %6, 11:i32
%13 = and %12, -8:i32 (hasExternalUses)
%14 = phi %11, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %8, %9
%18 = phi %15, -1:i32, %17
%19 = phi %10, %14, %18
%20 = phi %3, %9, %19
%21 = add %20, 47:i32 (hasExternalUses)
%22 = add %2, %21 (hasExternalUses)
%23:i32 = var
%24 = sub %22, %23
%25:i32 = var
%26 = eq %25, 0:i32
blockpc %0 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %0 1 %28 1
%29:i32 = var
blockpc %10 0 %29 1
%30:i32 = var
blockpc %10 1 %30 1
%31:i32 = var
blockpc %11 0 %31 1
%32:i32 = var
blockpc %11 1 %32 1
%33:i32 = var
blockpc %15 0 %33 1
%34:i32 = var
blockpc %15 1 %34 1
%35:i32 = var
blockpc %16 0 %35 1
%36:i32 = var
blockpc %16 1 %36 1
%37:i32 = var
%38:i32 = var
pc %37 1
pc %38 1
infer %24


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = phi %0, 4096:i32, %1
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32 (hasExternalUses)
%8 = and %7, -8:i32 (hasExternalUses)
%9 = phi %4, %5, %8
%10 = block 2
%11 = block 2
%12 = add %6, 11:i32
%13 = and %12, -8:i32 (hasExternalUses)
%14 = phi %11, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %8, %9
%18 = phi %15, -1:i32, %17
%19 = phi %10, %14, %18
%20 = phi %3, %9, %19
%21 = add %20, 47:i32 (hasExternalUses)
%22 = add %2, %21 (hasExternalUses)
%23:i32 = var
%24 = sub %22, %23
%25 = sub 0:i32, %2 (hasExternalUses)
%26 = and %24, %25
%27:i32 = var
%28 = eq %27, 0:i32
blockpc %0 0 %28 1
%29:i32 = var
blockpc %0 1 %29 1
%30:i32 = var
blockpc %10 0 %30 1
%31:i32 = var
blockpc %10 1 %31 1
%32:i32 = var
blockpc %11 0 %32 1
%33:i32 = var
blockpc %11 1 %33 1
%34:i32 = var
blockpc %15 0 %34 1
%35:i32 = var
blockpc %15 1 %35 1
%36:i32 = var
blockpc %16 0 %36 1
%37:i32 = var
blockpc %16 1 %37 1
%38:i32 = var
%39:i32 = var
pc %38 1
pc %39 1
infer %26


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = phi %0, 4096:i32, %1
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32 (hasExternalUses)
%8 = and %7, -8:i32 (hasExternalUses)
%9 = phi %4, %5, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = and %12, -8:i32 (hasExternalUses)
%14 = phi %11, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %8, %9
%18 = phi %15, -1:i32, %17
%19 = phi %10, %14, %18
%20 = phi %3, %9, %19
%21 = add %20, 47:i32 (hasExternalUses)
%22 = add %2, %21 (hasExternalUses)
%23:i32 = var
%24 = sub %22, %23
%25 = sub 0:i32, %2 (hasExternalUses)
%26 = and %24, %25 (hasExternalUses)
%27 = ult %26, 2147483647:i32
%28:i32 = var
%29 = eq %28, 0:i32
blockpc %0 0 %29 1
%30:i32 = var
blockpc %0 1 %30 1
%31:i32 = var
blockpc %10 0 %31 1
%32:i32 = var
blockpc %10 1 %32 1
%33:i32 = var
blockpc %11 0 %33 1
%34:i32 = var
blockpc %11 1 %34 1
%35:i32 = var
blockpc %15 0 %35 1
%36:i32 = var
blockpc %15 1 %36 1
%37:i32 = var
blockpc %16 0 %37 1
%38:i32 = var
blockpc %16 1 %38 1
%39:i32 = var
%40:i32 = var
pc %39 1
pc %40 1
infer %27


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3:i32 = var
%4 = eq %3, 0:i32
blockpc %2 0 %4 1
%5:i32 = zext %4
%6 = eq %5, 0:i32
blockpc %2 1 %6 1
%7:i32 = var
%8 = phi %2, 4096:i32, %7
%9 = block 2
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = add %12, 11:i32
%14 = and %13, -8:i32
%15 = phi %10, %11, %14
%16 = block 2
%17 = ult %12, 245:i32
blockpc %16 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %16 1 %19 1
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23:i32 = var
%24 = and %23, -8:i32
%25 = phi %20, 16:i32, %24
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, %14, %15
%33 = phi %26, -1:i32, %32
%34 = phi %16, %25, %33
%35 = phi %9, %15, %34
%36 = add %35, 47:i32
%37 = add %8, %36
%38:i32 = var
%39 = sub %37, %38
%40:i32 = var
%41 = and %39, %40
%42 = ult %41, 2147483647:i32
%43:i32 = var
%44:i32 = var
pc %42 1
pc %43 1
pc %44 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3 = block 2
%4:i32 = var
%5 = eq %4, 0:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8:i32 = var
%9 = phi %3, 4096:i32, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = add %13, 11:i32
%15 = and %14, -8:i32
%16 = phi %11, %12, %15
%17 = block 2
%18 = ult %13, 245:i32
blockpc %17 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %17 1 %20 1
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25 = phi %21, 16:i32, %24
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, %15, %16
%33 = phi %26, -1:i32, %32
%34 = phi %17, %25, %33
%35 = phi %10, %16, %34
%36 = add %35, 47:i32
%37 = add %9, %36
%38:i32 = var
%39 = sub %37, %38
%40:i32 = var
%41 = and %39, %40
%42 = ult %41, 2147483647:i32
%43:i32 = var
%44:i32 = var
pc %42 1
pc %43 1
pc %44 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2
%4 = eq %0, %3
%5 = block 2
%6:i32 = var
%7 = eq %6, 0:i32
blockpc %5 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %5 1 %9 1
%10:i32 = var
%11 = phi %5, 4096:i32, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15:i32 = var
%16 = add %15, 11:i32
%17 = and %16, -8:i32
%18 = phi %13, %14, %17
%19 = block 2
%20 = ult %15, 245:i32
blockpc %19 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %19 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26:i32 = var
%27 = phi %23, 16:i32, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = phi %31, %17, %18
%35 = phi %28, -1:i32, %34
%36 = phi %19, %27, %35
%37 = phi %12, %18, %36
%38 = add %37, 47:i32
%39 = add %11, %38
%40:i32 = var
%41 = sub %39, %40
%42:i32 = var
%43 = and %41, %42
%44 = ult %43, 2147483647:i32
%45:i32 = var
%46:i32 = var
pc %44 1
pc %45 1
pc %46 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, -1:i32
%2:i32 = var
%3:i32 = var
%4 = add %2, %3
%5 = eq %0, %4
%6 = block 2
%7:i32 = var
%8 = eq %7, 0:i32
blockpc %6 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %6 1 %10 1
%11:i32 = var
%12 = phi %6, 4096:i32, %11
%13 = block 2
%14 = block 2
%15:i32 = var
%16:i32 = var
%17 = add %16, 11:i32
%18 = and %17, -8:i32
%19 = phi %14, %15, %18
%20 = block 2
%21 = ult %16, 245:i32
blockpc %20 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %20 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28 = phi %24, 16:i32, %27
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = phi %32, %18, %19
%36 = phi %29, -1:i32, %35
%37 = phi %20, %28, %36
%38 = phi %13, %19, %37
%39 = add %38, 47:i32
%40 = add %12, %39
%41:i32 = var
%42 = sub %40, %41
%43:i32 = var
%44 = and %42, %43
%45 = ult %44, 2147483647:i32
%46:i32 = var
%47:i32 = var
pc %5 1
pc %45 1
pc %46 1
pc %47 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6 = phi %5, 65:i32, 61:i32
%7 = block 2
%8 = block 2
%9 = block 2
%10 = block 2
%11 = block 2
%12 = phi %11, %6, 65:i32
%13 = phi %10, %6, %12
%14 = phi %9, 0:i32, %13
%15 = phi %8, 0:i32, %14
%16 = phi %7, 0:i32, %15
%17 = phi %4, %6, %16
%18 = phi %3, %17, 136:i32
%19 = phi %2, %18, %17
%20 = phi %1, 128:i32, %19
%21 = phi %0, 128:i32, %20
%22 = eq %21, 128:i32
%23:i32 = var
%24 = eq %23, 0:i32
blockpc %1 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %1 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30:i32 = var
%31 = phi %27, 4096:i32, %30
%32:i32 = var
%33 = add %31, %32
%34:i32 = var
%35 = sub %33, %34
%36:i32 = var
%37 = and %35, %36
%38 = ult %37, 2147483647:i32
blockpc %2 0 %38 1
%39:i32 = var
blockpc %2 1 %39 1
%40:i32 = var
blockpc %3 0 %40 1
%41:i32 = var
blockpc %3 1 %41 1
%42:i32 = var
blockpc %7 0 %42 1
%43:i32 = var
blockpc %7 1 %43 1
%44:i32 = var
blockpc %8 0 %44 1
%45:i32 = var
blockpc %8 1 %45 1
%46:i32 = var
blockpc %9 0 %46 1
%47:i32 = var
blockpc %9 1 %47 1
%48:i32 = var
blockpc %10 0 %48 1
%49:i32 = var
blockpc %10 1 %49 1
%50:i32 = var
blockpc %11 0 %50 1
%51:i32 = var
blockpc %11 1 %51 1
%52:i32 = var
pc %52 1
infer %22


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, -1:i32
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = eq %4, 0:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8 = block 2
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12:i32 = var
%13 = phi %9, 4096:i32, %12
%14:i32 = var
%15 = add %13, %14
%16:i32 = var
%17 = sub %15, %16
%18 = sub 0:i32, %13
%19 = and %17, %18
%20 = ult %19, 2147483647:i32
blockpc %8 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %8 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27 = block 2
%28 = phi %27, 65:i32, 61:i32
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = phi %41, %28, 65:i32
%45 = phi %38, %28, %44
%46 = phi %35, 0:i32, %45
%47 = phi %32, 0:i32, %46
%48 = phi %29, 0:i32, %47
%49 = phi %26, %28, %48
%50 = phi %23, %49, 136:i32
%51 = phi %8, %50, %49
%52 = phi %3, 128:i32, %51
%53 = phi %2, 128:i32, %52
%54 = eq %53, 128:i32
%55:i32 = var
pc %54 1
pc %55 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, -1:i32
%2:i32 = var
%3 = eq %2, -1:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = eq %8, 0:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 4096:i32, %16
%18:i32 = var
%19 = add %17, %18
%20:i32 = var
%21 = sub %19, %20
%22 = sub 0:i32, %17
%23 = and %21, %22
%24 = ult %23, 2147483647:i32
blockpc %12 0 %24 1
%25:i32 = var
blockpc %12 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30 = block 2
%31 = phi %30, 65:i32, 61:i32
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = phi %44, %31, 65:i32
%48 = phi %41, %31, %47
%49 = phi %38, 0:i32, %48
%50 = phi %35, 0:i32, %49
%51 = phi %32, 0:i32, %50
%52 = phi %29, %31, %51
%53 = phi %26, %52, 136:i32
%54 = phi %12, %53, %52
%55 = phi %7, 128:i32, %54
%56 = phi %6, 128:i32, %55
%57 = eq %56, 128:i32
%58:i32 = var
pc %5 1
pc %57 1
pc %58 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2:i32 = var
%3 = and %1, %2
%4 = eq %2, -1:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13 = block 2
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17:i32 = var
%18 = phi %14, 4096:i32, %17
%19:i32 = var
%20 = add %18, %19
%21:i32 = var
%22 = sub %20, %21
%23 = sub 0:i32, %18
%24 = and %22, %23
%25 = ult %24, 2147483647:i32
blockpc %13 0 %25 1
%26:i32 = var
blockpc %13 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31 = block 2
%32 = phi %31, 65:i32, 61:i32
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = phi %45, %32, 65:i32
%49 = phi %42, %32, %48
%50 = phi %39, 0:i32, %49
%51 = phi %36, 0:i32, %50
%52 = phi %33, 0:i32, %51
%53 = phi %30, %32, %52
%54 = phi %27, %53, 136:i32
%55 = phi %13, %54, %53
%56 = phi %8, 128:i32, %55
%57 = phi %7, 128:i32, %56
%58 = eq %57, 128:i32
%59:i32 = var
pc %6 1
pc %58 1
pc %59 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2:i32 = var
%3 = add %1, %2
%4 = eq %2, -1:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13 = block 2
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17:i32 = var
%18 = phi %14, 4096:i32, %17
%19:i32 = var
%20 = add %18, %19
%21:i32 = var
%22 = sub %20, %21
%23 = sub 0:i32, %18
%24 = and %22, %23
%25 = ult %24, 2147483647:i32
blockpc %13 0 %25 1
%26:i32 = var
blockpc %13 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31 = block 2
%32 = phi %31, 65:i32, 61:i32
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = phi %45, %32, 65:i32
%49 = phi %42, %32, %48
%50 = phi %39, 0:i32, %49
%51 = phi %36, 0:i32, %50
%52 = phi %33, 0:i32, %51
%53 = phi %30, %32, %52
%54 = phi %27, %53, 136:i32
%55 = phi %13, %54, %53
%56 = phi %8, 128:i32, %55
%57 = phi %7, 128:i32, %56
%58 = eq %57, 128:i32
%59:i32 = var
pc %6 1
pc %58 1
pc %59 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2:i32 = var
%3 = eq %2, -1:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = eq %8, 0:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 4096:i32, %16
%18:i32 = var
%19 = add %17, %18
%20:i32 = var
%21 = sub %19, %20
%22 = sub 0:i32, %17
%23 = and %21, %22
%24 = ult %23, 2147483647:i32
blockpc %12 0 %24 1
%25:i32 = var
blockpc %12 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30 = block 2
%31 = phi %30, 65:i32, 61:i32
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = phi %44, %31, 65:i32
%48 = phi %41, %31, %47
%49 = phi %38, 0:i32, %48
%50 = phi %35, 0:i32, %49
%51 = phi %32, 0:i32, %50
%52 = phi %29, %31, %51
%53 = phi %26, %52, 136:i32
%54 = phi %12, %53, %52
%55 = phi %7, 128:i32, %54
%56 = phi %6, 128:i32, %55
%57 = eq %56, 128:i32
%58:i32 = var
pc %5 1
pc %57 1
pc %58 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2:i32 = var
%3 = add %1, %2
%4 = sub 0:i32, %0
%5 = and %3, %4
%6 = eq %2, -1:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = eq %11, 0:i32
blockpc %10 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %10 1 %14 1
%15 = block 2
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19:i32 = var
%20 = phi %16, 4096:i32, %19
%21:i32 = var
%22 = add %20, %21
%23:i32 = var
%24 = sub %22, %23
%25 = sub 0:i32, %20
%26 = and %24, %25
%27 = ult %26, 2147483647:i32
blockpc %15 0 %27 1
%28:i32 = var
blockpc %15 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33 = block 2
%34 = phi %33, 65:i32, 61:i32
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = phi %47, %34, 65:i32
%51 = phi %44, %34, %50
%52 = phi %41, 0:i32, %51
%53 = phi %38, 0:i32, %52
%54 = phi %35, 0:i32, %53
%55 = phi %32, %34, %54
%56 = phi %29, %55, 136:i32
%57 = phi %15, %56, %55
%58 = phi %10, 128:i32, %57
%59 = phi %9, 128:i32, %58
%60 = eq %59, 128:i32
%61:i32 = var
pc %8 1
pc %60 1
pc %61 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2:i32 = var
%3 = add %1, %2
%4 = sub 0:i32, %0
%5 = and %3, %4
%6 = sub %5, %2
%7 = eq %2, -1:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = eq %12, 0:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21 = phi %17, 4096:i32, %20
%22:i32 = var
%23 = add %21, %22
%24:i32 = var
%25 = sub %23, %24
%26:i32 = var
%27 = and %25, %26
%28 = ult %27, 2147483647:i32
blockpc %16 0 %28 1
%29:i32 = var
blockpc %16 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34 = block 2
%35 = phi %34, 65:i32, 61:i32
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = phi %48, %35, 65:i32
%52 = phi %45, %35, %51
%53 = phi %42, 0:i32, %52
%54 = phi %39, 0:i32, %53
%55 = phi %36, 0:i32, %54
%56 = phi %33, %35, %55
%57 = phi %30, %56, 136:i32
%58 = phi %16, %57, %56
%59 = phi %11, 128:i32, %58
%60 = phi %10, 128:i32, %59
%61 = eq %60, 128:i32
%62:i32 = var
pc %9 1
pc %61 1
pc %62 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2:i32 = var
%3 = and %1, %2
%4 = eq %3, 0:i32
%5 = eq %2, -1:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = eq %10, 0:i32
blockpc %9 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %9 1 %13 1
%14 = block 2
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19 = phi %15, 4096:i32, %18
%20:i32 = var
%21 = add %19, %20
%22:i32 = var
%23 = sub %21, %22
%24 = sub 0:i32, %19
%25 = and %23, %24
%26 = ult %25, 2147483647:i32
blockpc %14 0 %26 1
%27:i32 = var
blockpc %14 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32 = block 2
%33 = phi %32, 65:i32, 61:i32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = phi %46, %33, 65:i32
%50 = phi %43, %33, %49
%51 = phi %40, 0:i32, %50
%52 = phi %37, 0:i32, %51
%53 = phi %34, 0:i32, %52
%54 = phi %31, %33, %53
%55 = phi %28, %54, 136:i32
%56 = phi %14, %55, %54
%57 = phi %9, 128:i32, %56
%58 = phi %8, 128:i32, %57
%59 = eq %58, 128:i32
%60:i32 = var
pc %7 1
pc %59 1
pc %60 1
infer %4


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = add %2, %3
%5 = sub 0:i32, %1
%6 = and %4, %5
%7 = sub %6, %3
%8 = phi %0, 0:i32, %7
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = phi %11, 4096:i32, %12
%14 = block 2
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = add %17, 11:i32 (hasExternalUses)
%19 = and %18, -8:i32 (hasExternalUses)
%20 = phi %15, %16, %19
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = and %23, -8:i32 (hasExternalUses)
%25 = phi %22, 16:i32, %24
%26 = block 2
%27 = block 2
%28 = phi %27, %19, %20
%29 = phi %26, -1:i32, %28
%30 = phi %21, %25, %29
%31 = phi %14, %20, %30
%32 = add %31, 47:i32 (hasExternalUses)
%33 = add %13, %32 (hasExternalUses)
%34:i32 = var
%35 = and %33, %34 (hasExternalUses)
%36 = phi %9, %10, %35
%37 = add %8, %36
%38:i32 = var
blockpc %0 0 %38 1
%39:i32 = var
blockpc %0 1 %39 1
%40:i32 = var
blockpc %11 0 %40 1
%41:i32 = var
blockpc %11 1 %41 1
%42:i32 = var
blockpc %21 0 %42 1
%43:i32 = var
blockpc %21 1 %43 1
%44:i32 = var
blockpc %22 0 %44 1
%45:i32 = var
blockpc %22 1 %45 1
%46:i32 = var
blockpc %26 0 %46 1
%47:i32 = var
blockpc %26 1 %47 1
%48:i32 = var
blockpc %27 0 %48 1
%49:i32 = var
blockpc %27 1 %49 1
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %50 1
pc %51 1
pc %52 1
infer %37


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = add %2, %3
%5 = sub 0:i32, %1
%6 = and %4, %5
%7 = sub %6, %3
%8 = phi %0, 0:i32, %7
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = phi %11, 4096:i32, %12
%14 = block 2
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = and %17, -8:i32 (hasExternalUses)
%19 = phi %15, %16, %18
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = phi %21, 16:i32, %22
%24 = block 2
%25 = block 2
%26 = phi %25, %18, %19
%27 = phi %24, -1:i32, %26
%28 = phi %20, %23, %27
%29 = phi %14, %19, %28
%30 = add %29, 47:i32 (hasExternalUses)
%31 = add %13, %30 (hasExternalUses)
%32:i32 = var
%33 = and %31, %32 (hasExternalUses)
%34 = phi %9, %10, %33
%35 = add %8, %34 (hasExternalUses)
%36:i32 = var
%37 = add %35, %36
%38:i32 = var
blockpc %0 0 %38 1
%39:i32 = var
blockpc %0 1 %39 1
%40:i32 = var
blockpc %11 0 %40 1
%41:i32 = var
blockpc %11 1 %41 1
%42:i32 = var
blockpc %20 0 %42 1
%43:i32 = var
blockpc %20 1 %43 1
%44:i32 = var
blockpc %21 0 %44 1
%45:i32 = var
blockpc %21 1 %45 1
%46:i32 = var
blockpc %24 0 %46 1
%47:i32 = var
blockpc %24 1 %47 1
%48:i32 = var
blockpc %25 0 %48 1
%49:i32 = var
blockpc %25 1 %49 1
%50:i32 = var
%51:i32 = var
%52:i32 = var
pc %50 1
pc %51 1
pc %52 1
infer %37


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %5, 11:i32 (hasExternalUses)
%7 = and %6, -8:i32 (hasExternalUses)
%8 = phi %3, %4, %7
%9 = block 2
%10 = block 2
%11 = add %5, 11:i32
%12 = and %11, -8:i32 (hasExternalUses)
%13 = phi %10, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %7, %8
%17 = phi %14, -1:i32, %16
%18 = phi %9, %13, %17
%19 = phi %2, %8, %18
%20 = phi %0, %1, %19
%21 = block 2
%22:i32 = var
%23 = add %22, -1:i32 (hasExternalUses)
%24:i32 = var
%25 = add %23, %24
%26 = sub 0:i32, %22
%27 = and %25, %26
%28 = sub %27, %24
%29 = phi %21, 0:i32, %28
%30:i32 = var
%31:i32 = var
%32 = phi %0, %30, %31
%33 = add %29, %32 (hasExternalUses)
%34 = ult %20, %33
%35:i32 = var
blockpc %9 0 %35 1
%36:i32 = var
blockpc %9 1 %36 1
%37:i32 = var
blockpc %10 0 %37 1
%38:i32 = var
blockpc %10 1 %38 1
%39:i32 = var
blockpc %14 0 %39 1
%40:i32 = var
blockpc %14 1 %40 1
%41:i32 = var
blockpc %15 0 %41 1
%42:i32 = var
blockpc %15 1 %42 1
%43:i32 = var
blockpc %21 0 %43 1
%44:i32 = var
blockpc %21 1 %44 1
%45:i32 = var
%46:i32 = var
%47:i32 = var
pc %45 1
pc %46 1
pc %47 1
infer %34


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = add %2, %3
%5 = sub 0:i32, %1
%6 = and %4, %5
%7 = sub %6, %3
%8 = phi %0, 0:i32, %7
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = phi %11, 4096:i32, %12
%14 = block 2
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = and %17, -8:i32 (hasExternalUses)
%19 = phi %15, %16, %18
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = phi %21, 16:i32, %22
%24 = block 2
%25 = block 2
%26 = phi %25, %18, %19
%27 = phi %24, -1:i32, %26
%28 = phi %20, %23, %27
%29 = phi %14, %19, %28
%30 = add %29, 47:i32 (hasExternalUses)
%31 = add %13, %30 (hasExternalUses)
%32:i32 = var
%33 = and %31, %32 (hasExternalUses)
%34 = phi %9, %10, %33
%35 = add %8, %34 (hasExternalUses)
%36 = ult %35, 2147483647:i32
%37:i32 = var
blockpc %0 0 %37 1
%38:i32 = var
blockpc %0 1 %38 1
%39:i32 = var
blockpc %11 0 %39 1
%40:i32 = var
blockpc %11 1 %40 1
%41:i32 = var
blockpc %20 0 %41 1
%42:i32 = var
blockpc %20 1 %42 1
%43:i32 = var
blockpc %21 0 %43 1
%44:i32 = var
blockpc %21 1 %44 1
%45:i32 = var
blockpc %24 0 %45 1
%46:i32 = var
blockpc %24 1 %46 1
%47:i32 = var
blockpc %25 0 %47 1
%48:i32 = var
blockpc %25 1 %48 1
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %49 1
pc %50 1
pc %51 1
infer %36


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %5, 11:i32 (hasExternalUses)
%7 = and %6, -8:i32 (hasExternalUses)
%8 = phi %3, %4, %7
%9 = block 2
%10 = block 2
%11 = add %5, 11:i32
%12 = and %11, -8:i32 (hasExternalUses)
%13 = phi %10, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %7, %8
%17 = phi %14, -1:i32, %16
%18 = phi %9, %13, %17
%19 = phi %2, %8, %18
%20 = phi %0, %1, %19
%21 = block 2
%22:i32 = var
%23 = add %22, -1:i32 (hasExternalUses)
%24:i32 = var
%25 = add %23, %24
%26 = sub 0:i32, %22
%27 = and %25, %26
%28 = sub %27, %24
%29 = phi %21, 0:i32, %28
%30:i32 = var
%31:i32 = var
%32 = phi %0, %30, %31
%33 = add %29, %32 (hasExternalUses)
%34 = ult %20, %33
%35:i32 = zext %34
%36:i32 = var
%37 = add %36, 0:i32; Replace bad zext operation
%38 = and %35, %37
%39:i32 = var
blockpc %9 0 %39 1
%40:i32 = var
blockpc %9 1 %40 1
%41:i32 = var
blockpc %10 0 %41 1
%42:i32 = var
blockpc %10 1 %42 1
%43:i32 = var
blockpc %14 0 %43 1
%44:i32 = var
blockpc %14 1 %44 1
%45:i32 = var
blockpc %15 0 %45 1
%46:i32 = var
blockpc %15 1 %46 1
%47:i32 = var
blockpc %21 0 %47 1
%48:i32 = var
blockpc %21 1 %48 1
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %49 1
pc %50 1
pc %51 1
infer %38


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = add %7, 11:i32
%9 = and %8, -8:i32
%10 = phi %5, %6, %9
%11 = block 2
%12 = ult %7, 245:i32
blockpc %11 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %11 1 %14 1
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19 = and %18, -8:i32
%20 = phi %15, 16:i32, %19
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = phi %24, %9, %10
%28 = phi %21, -1:i32, %27
%29 = phi %11, %20, %28
%30 = phi %4, %10, %29
%31 = phi %2, %3, %30
%32:i32 = var
%33 = ult %31, %32
%34:i32 = zext %33
%35:i32 = var
%36 = add %35, 0:i32; Replace bad zext operation
%37 = and %34, %36
%38 = ne %37, 0:i32
%39:i32 = var
%40:i32 = var
%41:i32 = var
pc %38 1
pc %39 1
pc %40 1
pc %41 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4 = block 2
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = add %9, 11:i32
%11 = and %10, -8:i32
%12 = phi %7, %8, %11
%13 = block 2
%14 = ult %9, 245:i32
blockpc %13 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %13 1 %16 1
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21 = and %20, -8:i32
%22 = phi %17, 16:i32, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = phi %26, %11, %12
%30 = phi %23, -1:i32, %29
%31 = phi %13, %22, %30
%32 = phi %6, %12, %31
%33 = phi %4, %5, %32
%34:i32 = var
%35 = ult %33, %34
%36:i32 = zext %35
%37:i32 = var
%38 = add %37, 0:i32; Replace bad zext operation
%39 = and %36, %38
%40 = ne %39, 0:i32
%41:i32 = var
%42:i32 = var
%43:i32 = var
pc %40 1
pc %41 1
pc %42 1
pc %43 1
infer %3


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = add %1, -1:i32 (hasExternalUses)
%3:i32 = var
%4 = add %2, %3
%5 = sub 0:i32, %1
%6 = and %4, %5
%7 = sub %6, %3
%8 = phi %0, 0:i32, %7
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = phi %11, 4096:i32, %12
%14 = block 2
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = phi %15, %16, %17
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, 16:i32, %21
%23 = block 2
%24 = block 2
%25 = phi %24, %17, %18
%26 = phi %23, -1:i32, %25
%27 = phi %19, %22, %26
%28 = phi %14, %18, %27
%29 = add %28, 47:i32 (hasExternalUses)
%30 = add %13, %29 (hasExternalUses)
%31:i32 = var
%32 = and %30, %31 (hasExternalUses)
%33 = phi %9, %10, %32
%34 = add %8, %33 (hasExternalUses)
%35:i32 = var
%36 = add %34, %35 (hasExternalUses)
%37 = ule %36, %35
%38:i32 = var
blockpc %0 0 %38 1
%39:i32 = var
blockpc %0 1 %39 1
%40:i32 = var
blockpc %11 0 %40 1
%41:i32 = var
blockpc %11 1 %41 1
%42:i32 = var
blockpc %19 0 %42 1
%43:i32 = var
blockpc %19 1 %43 1
%44:i32 = var
blockpc %20 0 %44 1
%45:i32 = var
blockpc %20 1 %45 1
%46:i32 = var
blockpc %23 0 %46 1
%47:i32 = var
blockpc %23 1 %47 1
%48:i32 = var
blockpc %24 0 %48 1
%49:i32 = var
blockpc %24 1 %49 1
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
infer %37


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = add %2, -1:i32 (hasExternalUses)
%4:i32 = var
%5 = add %3, %4
%6 = sub 0:i32, %2
%7 = and %5, %6
%8 = sub %7, %4
%9 = phi %1, 0:i32, %8
%10 = block 2
%11:i32 = var
%12 = block 2
%13:i32 = var
%14 = phi %12, 4096:i32, %13
%15 = block 2
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = phi %16, %17, %18
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = phi %21, 16:i32, %22
%24 = block 2
%25 = block 2
%26 = phi %25, %18, %19
%27 = phi %24, -1:i32, %26
%28 = phi %20, %23, %27
%29 = phi %15, %19, %28
%30 = add %29, 47:i32 (hasExternalUses)
%31 = add %14, %30 (hasExternalUses)
%32:i32 = var
%33 = and %31, %32 (hasExternalUses)
%34 = phi %10, %11, %33
%35 = add %9, %34 (hasExternalUses)
%36:i32 = var
%37 = add %35, %36 (hasExternalUses)
%38 = ult %0, %37
%39:i32 = var
blockpc %1 0 %39 1
%40:i32 = var
blockpc %1 1 %40 1
%41:i32 = var
blockpc %12 0 %41 1
%42:i32 = var
blockpc %12 1 %42 1
%43:i32 = var
blockpc %20 0 %43 1
%44:i32 = var
blockpc %20 1 %44 1
%45:i32 = var
blockpc %21 0 %45 1
%46:i32 = var
blockpc %21 1 %46 1
%47:i32 = var
blockpc %24 0 %47 1
%48:i32 = var
blockpc %24 1 %48 1
%49:i32 = var
blockpc %25 0 %49 1
%50:i32 = var
blockpc %25 1 %50 1
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
infer %38


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = add %1, %2
%4:i32 = var
%5 = sub 0:i32, %4
%6 = and %3, %5
%7 = sub %6, %2
%8 = phi %0, 0:i32, %7
%9 = block 2
%10:i32 = var
%11 = block 2
%12:i32 = var
%13 = phi %11, 4096:i32, %12
%14 = block 2
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = phi %15, %16, %17
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, 16:i32, %21
%23 = block 2
%24 = block 2
%25 = phi %24, %17, %18
%26 = phi %23, -1:i32, %25
%27 = phi %19, %22, %26
%28 = phi %14, %18, %27
%29 = add %28, 47:i32 (hasExternalUses)
%30 = add %13, %29 (hasExternalUses)
%31:i32 = var
%32 = and %30, %31 (hasExternalUses)
%33 = phi %9, %10, %32
%34 = add %8, %33 (hasExternalUses)
%35:i32 = var
%36 = add %34, %35 (hasExternalUses)
%37 = ule %36, %35
%38:i32 = zext %37
%39:i32 = var
%40 = add %39, 0:i32; Replace bad zext operation
%41 = or %38, %40
%42:i32 = var
blockpc %0 0 %42 1
%43:i32 = var
blockpc %0 1 %43 1
%44:i32 = var
blockpc %11 0 %44 1
%45:i32 = var
blockpc %11 1 %45 1
%46:i32 = var
blockpc %19 0 %46 1
%47:i32 = var
blockpc %19 1 %47 1
%48:i32 = var
blockpc %20 0 %48 1
%49:i32 = var
blockpc %20 1 %49 1
%50:i32 = var
blockpc %23 0 %50 1
%51:i32 = var
blockpc %23 1 %51 1
%52:i32 = var
blockpc %24 0 %52 1
%53:i32 = var
blockpc %24 1 %53 1
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58:i32 = var
pc %54 1
pc %55 1
pc %56 1
pc %57 1
pc %58 1
infer %41


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = eq %0, %1
%3 = block 2
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = add %8, 11:i32
%10 = and %9, -8:i32
%11 = phi %6, %7, %10
%12 = block 2
%13 = ult %8, 245:i32
blockpc %12 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %12 1 %15 1
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19:i32 = var
%20 = and %19, -8:i32
%21 = phi %16, 16:i32, %20
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = phi %25, %10, %11
%29 = phi %22, -1:i32, %28
%30 = phi %12, %21, %29
%31 = phi %5, %11, %30
%32 = phi %3, %4, %31
%33:i32 = var
%34 = ult %32, %33
%35:i32 = zext %34
%36:i32 = var
%37 = add %36, 0:i32; Replace bad zext operation
%38 = and %35, %37
%39 = ne %38, 0:i32
%40:i32 = var
%41:i32 = var
%42:i32 = var
pc %39 1
pc %40 1
pc %41 1
pc %42 1
infer %2


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 2
%6 = block 2
%7 = phi %6, 65:i32, 61:i32
%8 = block 2
%9 = block 2
%10 = block 2
%11 = block 2
%12 = block 2
%13 = phi %12, %7, 65:i32
%14 = phi %11, %7, %13
%15 = phi %10, 0:i32, %14
%16 = phi %9, 0:i32, %15
%17 = phi %8, 0:i32, %16
%18 = phi %5, %7, %17
%19 = phi %4, %18, 136:i32
%20 = phi %3, %19, %18
%21 = phi %2, 128:i32, %20
%22 = phi %1, 128:i32, %21
%23 = block 2
%24 = block 2
%25 = block 2
%26 = phi %25, 136:i32, %22
%27 = phi %24, %22, %26
%28 = phi %23, %22, %27
%29 = phi %0, %22, %28
%30 = eq %29, 136:i32
%31:i32 = var
blockpc %2 0 %31 1
%32:i32 = var
blockpc %2 1 %32 1
%33:i32 = var
blockpc %3 0 %33 1
%34:i32 = var
blockpc %3 1 %34 1
%35:i32 = var
blockpc %4 0 %35 1
%36:i32 = var
blockpc %4 1 %36 1
%37:i32 = var
blockpc %8 0 %37 1
%38:i32 = var
blockpc %8 1 %38 1
%39:i32 = var
blockpc %9 0 %39 1
%40:i32 = var
blockpc %9 1 %40 1
%41:i32 = var
blockpc %10 0 %41 1
%42:i32 = var
blockpc %10 1 %42 1
%43:i32 = var
blockpc %11 0 %43 1
%44:i32 = var
blockpc %11 1 %44 1
%45:i32 = var
blockpc %12 0 %45 1
%46:i32 = var
blockpc %12 1 %46 1
%47:i32 = var
blockpc %23 0 %47 1
%48:i32 = var
blockpc %23 1 %48 1
%49:i32 = var
blockpc %24 0 %49 1
%50:i32 = var
blockpc %24 1 %50 1
%51:i32 = var
blockpc %25 0 %51 1
%52:i32 = var
blockpc %25 1 %52 1
%53:i32 = var
pc %53 1
infer %30


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = block 2
%9 = block 2
%10 = block 2
%11 = phi %10, 0:i32, %7
%12 = phi %9, 0:i32, %11
%13 = phi %8, 0:i32, %12
%14 = phi %4, %7, %13
%15 = block 2
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = phi %17, 4096:i32, %18
%20:i32 = var
%21 = add %19, %20 (hasExternalUses)
%22:i32 = var
%23 = sub %21, %22
%24 = sub 0:i32, %19 (hasExternalUses)
%25 = and %23, %24 (hasExternalUses)
%26 = phi %16, %14, %25
%27 = phi %15, %26, %14
%28 = phi %3, %14, %27
%29 = phi %1, %2, %28
%30 = block 2
%31 = block 2
%32 = block 2
%33:i32 = var
%34 = phi %32, %33, %29
%35 = phi %31, %29, %34
%36 = phi %30, %29, %35
%37 = phi %0, %29, %36
%38 = sub 0:i32, %37
%39:i32 = var
blockpc %3 0 %39 1
%40:i32 = var
blockpc %3 1 %40 1
%41:i32 = var
blockpc %8 0 %41 1
%42:i32 = var
blockpc %8 1 %42 1
%43:i32 = var
blockpc %9 0 %43 1
%44:i32 = var
blockpc %9 1 %44 1
%45:i32 = var
blockpc %10 0 %45 1
%46:i32 = var
blockpc %10 1 %46 1
%47:i32 = var
blockpc %15 0 %47 1
%48:i32 = var
blockpc %15 1 %48 1
%49:i32 = var
blockpc %16 0 %49 1
%50:i32 = var
blockpc %16 1 %50 1
%51:i32 = var
blockpc %17 0 %51 1
%52:i32 = var
blockpc %17 1 %52 1
%53:i32 = var
blockpc %30 0 %53 1
%54:i32 = var
blockpc %30 1 %54 1
%55:i32 = var
blockpc %31 0 %55 1
%56:i32 = var
blockpc %31 1 %56 1
%57:i32 = var
blockpc %32 0 %57 1
%58:i32 = var
blockpc %32 1 %58 1
%59:i32 = var
%60:i32 = var
pc %59 1
pc %60 1
infer %38


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = block 2
%9 = block 2
%10 = block 2
%11 = phi %10, 0:i32, %7
%12 = phi %9, 0:i32, %11
%13 = phi %8, 0:i32, %12
%14 = phi %4, %7, %13
%15 = block 2
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = phi %17, 4096:i32, %18
%20:i32 = var
%21 = add %19, %20 (hasExternalUses)
%22:i32 = var
%23 = sub %21, %22
%24 = sub 0:i32, %19 (hasExternalUses)
%25 = and %23, %24 (hasExternalUses)
%26 = phi %16, %14, %25
%27 = phi %15, %26, %14
%28 = phi %3, %14, %27
%29 = phi %1, %2, %28
%30 = block 2
%31 = block 2
%32 = block 2
%33:i32 = var
%34 = phi %32, %33, %29
%35 = phi %31, %29, %34
%36 = phi %30, %29, %35
%37 = phi %0, %29, %36
%38 = ult %37, 2147483647:i32
%39:i32 = var
blockpc %3 0 %39 1
%40:i32 = var
blockpc %3 1 %40 1
%41:i32 = var
blockpc %8 0 %41 1
%42:i32 = var
blockpc %8 1 %42 1
%43:i32 = var
blockpc %9 0 %43 1
%44:i32 = var
blockpc %9 1 %44 1
%45:i32 = var
blockpc %10 0 %45 1
%46:i32 = var
blockpc %10 1 %46 1
%47:i32 = var
blockpc %15 0 %47 1
%48:i32 = var
blockpc %15 1 %48 1
%49:i32 = var
blockpc %16 0 %49 1
%50:i32 = var
blockpc %16 1 %50 1
%51:i32 = var
blockpc %17 0 %51 1
%52:i32 = var
blockpc %17 1 %52 1
%53:i32 = var
blockpc %30 0 %53 1
%54:i32 = var
blockpc %30 1 %54 1
%55:i32 = var
blockpc %31 0 %55 1
%56:i32 = var
blockpc %31 1 %56 1
%57:i32 = var
blockpc %32 0 %57 1
%58:i32 = var
blockpc %32 1 %58 1
%59:i32 = var
%60:i32 = var
pc %59 1
pc %60 1
infer %38


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = block 2
%9 = block 2
%10 = block 2
%11 = phi %10, 0:i32, %7
%12 = phi %9, 0:i32, %11
%13 = phi %8, 0:i32, %12
%14 = phi %4, %7, %13
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = phi %16, %14, %17
%19 = phi %15, %18, %14
%20 = phi %3, %14, %19
%21 = phi %1, %2, %20
%22 = block 2
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, %21
%27 = phi %23, %21, %26
%28 = phi %22, %21, %27
%29 = phi %0, %21, %28
%30 = ne %29, -1:i32
%31:i32 = var
blockpc %3 0 %31 1
%32:i32 = var
blockpc %3 1 %32 1
%33:i32 = var
blockpc %8 0 %33 1
%34:i32 = var
blockpc %8 1 %34 1
%35:i32 = var
blockpc %9 0 %35 1
%36:i32 = var
blockpc %9 1 %36 1
%37:i32 = var
blockpc %10 0 %37 1
%38:i32 = var
blockpc %10 1 %38 1
%39:i32 = var
blockpc %15 0 %39 1
%40:i32 = var
blockpc %15 1 %40 1
%41:i32 = var
blockpc %16 0 %41 1
%42:i32 = var
blockpc %16 1 %42 1
%43:i32 = var
blockpc %22 0 %43 1
%44:i32 = var
blockpc %22 1 %44 1
%45:i32 = var
blockpc %23 0 %45 1
%46:i32 = var
blockpc %23 1 %46 1
%47:i32 = var
blockpc %24 0 %47 1
%48:i32 = var
blockpc %24 1 %48 1
%49:i32 = var
%50:i32 = var
pc %49 1
pc %50 1
infer %30


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = block 2
%9 = block 2
%10 = block 2
%11 = phi %10, 0:i32, %7
%12 = phi %9, 0:i32, %11
%13 = phi %8, 0:i32, %12
%14 = phi %4, %7, %13
%15 = block 2
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = phi %17, 4096:i32, %18
%20:i32 = var
%21 = add %19, %20 (hasExternalUses)
%22:i32 = var
%23 = sub %21, %22
%24 = sub 0:i32, %19 (hasExternalUses)
%25 = and %23, %24 (hasExternalUses)
%26 = phi %16, %14, %25
%27 = phi %15, %26, %14
%28 = phi %3, %14, %27
%29 = phi %1, %2, %28
%30 = block 2
%31 = block 2
%32 = block 2
%33:i32 = var
%34 = phi %32, %33, %29
%35 = phi %31, %29, %34
%36 = phi %30, %29, %35
%37 = phi %0, %29, %36
%38:i32 = var
%39:i32 = var
%40 = phi %1, %38, %39
%41 = ult %37, %40
%42:i32 = var
blockpc %3 0 %42 1
%43:i32 = var
blockpc %3 1 %43 1
%44:i32 = var
blockpc %8 0 %44 1
%45:i32 = var
blockpc %8 1 %45 1
%46:i32 = var
blockpc %9 0 %46 1
%47:i32 = var
blockpc %9 1 %47 1
%48:i32 = var
blockpc %10 0 %48 1
%49:i32 = var
blockpc %10 1 %49 1
%50:i32 = var
blockpc %15 0 %50 1
%51:i32 = var
blockpc %15 1 %51 1
%52:i32 = var
blockpc %16 0 %52 1
%53:i32 = var
blockpc %16 1 %53 1
%54:i32 = var
blockpc %17 0 %54 1
%55:i32 = var
blockpc %17 1 %55 1
%56:i32 = var
blockpc %30 0 %56 1
%57:i32 = var
blockpc %30 1 %57 1
%58:i32 = var
blockpc %31 0 %58 1
%59:i32 = var
blockpc %31 1 %59 1
%60:i32 = var
blockpc %32 0 %60 1
%61:i32 = var
blockpc %32 1 %61 1
%62:i32 = var
%63:i32 = var
pc %62 1
pc %63 1
infer %41


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = block 2
%9 = block 2
%10 = block 2
%11 = phi %10, 0:i32, %7
%12 = phi %9, 0:i32, %11
%13 = phi %8, 0:i32, %12
%14 = phi %4, %7, %13
%15 = block 2
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = and %17, %18 (hasExternalUses)
%20 = phi %16, %14, %19
%21 = phi %15, %20, %14
%22 = phi %3, %14, %21
%23 = phi %1, %2, %22
%24 = block 2
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, 0:i32, %28
%30:i32 = var
%31:i32 = var
%32 = phi %1, %30, %31
%33 = add %29, %32 (hasExternalUses)
%34 = phi %26, %33, %23
%35 = phi %25, %23, %34
%36 = phi %24, %23, %35
%37 = phi %0, %23, %36
%38 = ult %37, 2147483647:i32
%39:i32 = zext %38
%40:i32 = var
%41 = add %40, 0:i32; Replace bad zext operation
%42 = and %39, %41
%43:i32 = var
blockpc %3 0 %43 1
%44:i32 = var
blockpc %3 1 %44 1
%45:i32 = var
blockpc %8 0 %45 1
%46:i32 = var
blockpc %8 1 %46 1
%47:i32 = var
blockpc %9 0 %47 1
%48:i32 = var
blockpc %9 1 %48 1
%49:i32 = var
blockpc %10 0 %49 1
%50:i32 = var
blockpc %10 1 %50 1
%51:i32 = var
blockpc %15 0 %51 1
%52:i32 = var
blockpc %15 1 %52 1
%53:i32 = var
blockpc %16 0 %53 1
%54:i32 = var
blockpc %16 1 %54 1
%55:i32 = var
blockpc %24 0 %55 1
%56:i32 = var
blockpc %24 1 %56 1
%57:i32 = var
blockpc %25 0 %57 1
%58:i32 = var
blockpc %25 1 %58 1
%59:i32 = var
blockpc %26 0 %59 1
%60:i32 = var
blockpc %26 1 %60 1
%61:i32 = var
blockpc %27 0 %61 1
%62:i32 = var
blockpc %27 1 %62 1
%63:i32 = var
%64:i32 = var
pc %63 1
pc %64 1
infer %42


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = block 2
%9 = block 2
%10 = block 2
%11 = phi %10, 0:i32, %7
%12 = phi %9, 0:i32, %11
%13 = phi %8, 0:i32, %12
%14 = phi %4, %7, %13
%15 = block 2
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = and %17, %18 (hasExternalUses)
%20 = phi %16, %14, %19
%21 = phi %15, %20, %14
%22 = phi %3, %14, %21
%23 = phi %1, %2, %22
%24 = block 2
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, 0:i32, %28
%30:i32 = var
%31:i32 = var
%32 = phi %1, %30, %31
%33 = add %29, %32 (hasExternalUses)
%34 = phi %26, %33, %23
%35 = phi %25, %23, %34
%36 = phi %24, %23, %35
%37 = phi %0, %23, %36
%38:i32 = var
%39:i32 = var
%40 = phi %1, %38, %39
%41 = ult %37, %40
%42:i32 = zext %41
%43:i32 = var
%44 = and %42, %43
%45:i32 = var
blockpc %3 0 %45 1
%46:i32 = var
blockpc %3 1 %46 1
%47:i32 = var
blockpc %8 0 %47 1
%48:i32 = var
blockpc %8 1 %48 1
%49:i32 = var
blockpc %9 0 %49 1
%50:i32 = var
blockpc %9 1 %50 1
%51:i32 = var
blockpc %10 0 %51 1
%52:i32 = var
blockpc %10 1 %52 1
%53:i32 = var
blockpc %15 0 %53 1
%54:i32 = var
blockpc %15 1 %54 1
%55:i32 = var
blockpc %16 0 %55 1
%56:i32 = var
blockpc %16 1 %56 1
%57:i32 = var
blockpc %24 0 %57 1
%58:i32 = var
blockpc %24 1 %58 1
%59:i32 = var
blockpc %25 0 %59 1
%60:i32 = var
blockpc %25 1 %60 1
%61:i32 = var
blockpc %26 0 %61 1
%62:i32 = var
blockpc %26 1 %62 1
%63:i32 = var
blockpc %27 0 %63 1
%64:i32 = var
blockpc %27 1 %64 1
%65:i32 = var
%66:i32 = var
pc %65 1
pc %66 1
infer %44


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = block 2
%9 = block 2
%10 = block 2
%11 = phi %10, 0:i32, %7
%12 = phi %9, 0:i32, %11
%13 = phi %8, 0:i32, %12
%14 = phi %4, %7, %13
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = phi %16, %14, %17
%19 = phi %15, %18, %14
%20 = phi %3, %14, %19
%21 = phi %1, %2, %20
%22 = block 2
%23 = block 2
%24 = block 2
%25 = block 2
%26:i32 = var
%27 = phi %25, 0:i32, %26
%28:i32 = var
%29:i32 = var
%30 = phi %1, %28, %29
%31 = add %27, %30 (hasExternalUses)
%32 = phi %24, %31, %21
%33 = phi %23, %21, %32
%34 = phi %22, %21, %33
%35 = phi %0, %21, %34
%36:i32 = var
%37:i32 = var
%38 = phi %1, %36, %37
%39 = ult %35, %38
%40:i32 = zext %39
%41:i32 = var
%42 = and %40, %41
%43 = eq %42, 0:i32
%44:i32 = var
blockpc %3 0 %44 1
%45:i32 = var
blockpc %3 1 %45 1
%46:i32 = var
blockpc %8 0 %46 1
%47:i32 = var
blockpc %8 1 %47 1
%48:i32 = var
blockpc %9 0 %48 1
%49:i32 = var
blockpc %9 1 %49 1
%50:i32 = var
blockpc %10 0 %50 1
%51:i32 = var
blockpc %10 1 %51 1
%52:i32 = var
blockpc %15 0 %52 1
%53:i32 = var
blockpc %15 1 %53 1
%54:i32 = var
blockpc %16 0 %54 1
%55:i32 = var
blockpc %16 1 %55 1
%56:i32 = var
blockpc %22 0 %56 1
%57:i32 = var
blockpc %22 1 %57 1
%58:i32 = var
blockpc %23 0 %58 1
%59:i32 = var
blockpc %23 1 %59 1
%60:i32 = var
blockpc %24 0 %60 1
%61:i32 = var
blockpc %24 1 %61 1
%62:i32 = var
blockpc %25 0 %62 1
%63:i32 = var
blockpc %25 1 %63 1
%64:i32 = var
%65:i32 = var
pc %64 1
pc %65 1
infer %43


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = block 2
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = phi %5, %6, 0:i32
%8 = block 2
%9 = block 2
%10 = block 2
%11 = phi %10, 0:i32, %7
%12 = phi %9, 0:i32, %11
%13 = phi %8, 0:i32, %12
%14 = phi %4, %7, %13
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = phi %16, %14, %17
%19 = phi %15, %18, %14
%20 = phi %3, %14, %19
%21 = phi %1, %2, %20
%22 = block 2
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, %21
%27 = phi %23, %21, %26
%28 = phi %22, %21, %27
%29 = phi %0, %21, %28
%30 = eq %29, -1:i32
%31:i32 = var
blockpc %3 0 %31 1
%32:i32 = var
blockpc %3 1 %32 1
%33:i32 = var
blockpc %8 0 %33 1
%34:i32 = var
blockpc %8 1 %34 1
%35:i32 = var
blockpc %9 0 %35 1
%36:i32 = var
blockpc %9 1 %36 1
%37:i32 = var
blockpc %10 0 %37 1
%38:i32 = var
blockpc %10 1 %38 1
%39:i32 = var
blockpc %15 0 %39 1
%40:i32 = var
blockpc %15 1 %40 1
%41:i32 = var
blockpc %16 0 %41 1
%42:i32 = var
blockpc %16 1 %42 1
%43:i32 = var
blockpc %22 0 %43 1
%44:i32 = var
blockpc %22 1 %44 1
%45:i32 = var
blockpc %23 0 %45 1
%46:i32 = var
blockpc %23 1 %46 1
%47:i32 = var
blockpc %24 0 %47 1
%48:i32 = var
blockpc %24 1 %48 1
%49:i32 = var
%50:i32 = var
%51:i32 = var
pc %49 1
pc %50 1
pc %51 1
infer %30


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %5, 11:i32 (hasExternalUses)
%7 = and %6, -8:i32 (hasExternalUses)
%8 = phi %3, %4, %7
%9 = block 2
%10 = block 2
%11 = add %5, 11:i32
%12 = and %11, -8:i32 (hasExternalUses)
%13 = phi %10, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %7, %8
%17 = phi %14, -1:i32, %16
%18 = phi %9, %13, %17
%19 = phi %2, %8, %18
%20 = add %19, 47:i32 (hasExternalUses)
%21 = phi %0, %1, %20
%22 = block 2
%23:i32 = var
%24 = block 2
%25:i32 = var
%26 = phi %3, %25, 0:i32
%27 = phi %15, 0:i32, %26
%28 = phi %14, 0:i32, %27
%29 = phi %9, 0:i32, %28
%30 = phi %2, %26, %29
%31 = block 2
%32 = block 2
%33:i32 = var
%34 = phi %32, %30, %33
%35 = phi %31, %34, %30
%36 = phi %24, %30, %35
%37 = phi %0, %23, %36
%38 = block 2
%39 = block 2
%40 = block 2
%41:i32 = var
%42 = phi %40, %41, %37
%43 = phi %39, %37, %42
%44 = phi %38, %37, %43
%45 = phi %22, %37, %44
%46 = sub %21, %45
%47:i32 = var
blockpc %9 0 %47 1
%48:i32 = var
blockpc %9 1 %48 1
%49:i32 = var
blockpc %10 0 %49 1
%50:i32 = var
blockpc %10 1 %50 1
%51:i32 = var
blockpc %14 0 %51 1
%52:i32 = var
blockpc %14 1 %52 1
%53:i32 = var
blockpc %15 0 %53 1
%54:i32 = var
blockpc %15 1 %54 1
%55:i32 = var
blockpc %24 0 %55 1
%56:i32 = var
blockpc %24 1 %56 1
%57:i32 = var
blockpc %31 0 %57 1
%58:i32 = var
blockpc %31 1 %58 1
%59:i32 = var
blockpc %32 0 %59 1
%60:i32 = var
blockpc %32 1 %60 1
%61:i32 = var
blockpc %38 0 %61 1
%62:i32 = var
blockpc %38 1 %62 1
%63:i32 = var
blockpc %39 0 %63 1
%64:i32 = var
blockpc %39 1 %64 1
%65:i32 = var
blockpc %40 0 %65 1
%66:i32 = var
blockpc %40 1 %66 1
%67:i32 = var
%68:i32 = var
pc %67 1
pc %68 1
infer %46


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %5, 11:i32 (hasExternalUses)
%7 = and %6, -8:i32 (hasExternalUses)
%8 = phi %3, %4, %7
%9 = block 2
%10 = block 2
%11 = add %5, 11:i32
%12 = and %11, -8:i32 (hasExternalUses)
%13 = phi %10, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %7, %8
%17 = phi %14, -1:i32, %16
%18 = phi %9, %13, %17
%19 = phi %2, %8, %18
%20 = add %19, 47:i32 (hasExternalUses)
%21 = phi %0, %1, %20
%22 = block 2
%23:i32 = var
%24 = block 2
%25:i32 = var
%26 = phi %3, %25, 0:i32
%27 = phi %15, 0:i32, %26
%28 = phi %14, 0:i32, %27
%29 = phi %9, 0:i32, %28
%30 = phi %2, %26, %29
%31 = block 2
%32 = block 2
%33:i32 = var
%34 = phi %32, %30, %33
%35 = phi %31, %34, %30
%36 = phi %24, %30, %35
%37 = phi %0, %23, %36
%38 = block 2
%39 = block 2
%40 = block 2
%41:i32 = var
%42 = phi %40, %41, %37
%43 = phi %39, %37, %42
%44 = phi %38, %37, %43
%45 = phi %22, %37, %44
%46 = sub %21, %45
%47:i32 = var
%48 = add %46, %47
%49:i32 = var
blockpc %9 0 %49 1
%50:i32 = var
blockpc %9 1 %50 1
%51:i32 = var
blockpc %10 0 %51 1
%52:i32 = var
blockpc %10 1 %52 1
%53:i32 = var
blockpc %14 0 %53 1
%54:i32 = var
blockpc %14 1 %54 1
%55:i32 = var
blockpc %15 0 %55 1
%56:i32 = var
blockpc %15 1 %56 1
%57:i32 = var
blockpc %24 0 %57 1
%58:i32 = var
blockpc %24 1 %58 1
%59:i32 = var
blockpc %31 0 %59 1
%60:i32 = var
blockpc %31 1 %60 1
%61:i32 = var
blockpc %32 0 %61 1
%62:i32 = var
blockpc %32 1 %62 1
%63:i32 = var
blockpc %38 0 %63 1
%64:i32 = var
blockpc %38 1 %64 1
%65:i32 = var
blockpc %39 0 %65 1
%66:i32 = var
blockpc %39 1 %66 1
%67:i32 = var
blockpc %40 0 %67 1
%68:i32 = var
blockpc %40 1 %68 1
%69:i32 = var
%70:i32 = var
pc %69 1
pc %70 1
infer %48


; start LHS (in $38)
%0:i32 = var
%1 = sub 0:i32, %0
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = eq %5, 0:i32
blockpc %4 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = sub %10, %11
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 4096:i32, %16
%18 = sub 0:i32, %17
%19 = and %12, %18
%20 = ult %19, 2147483647:i32
blockpc %9 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %9 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27 = block 2
%28 = phi %27, 65:i32, 61:i32
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = phi %41, %28, 65:i32
%45 = phi %38, %28, %44
%46 = phi %35, 0:i32, %45
%47 = phi %32, 0:i32, %46
%48 = phi %29, 0:i32, %47
%49 = phi %26, %28, %48
%50 = phi %23, %49, 136:i32
%51 = phi %9, %50, %49
%52 = phi %4, 128:i32, %51
%53 = phi %3, 128:i32, %52
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57 = block 2
%58:i32 = var
blockpc %57 0 %58 1
%59:i32 = var
blockpc %57 1 %59 1
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63 = phi %60, 136:i32, %53
%64 = phi %57, %53, %63
%65 = phi %54, %53, %64
%66 = phi %2, %53, %65
%67 = eq %66, 136:i32
%68:i32 = var
pc %67 1
pc %68 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %5, 11:i32 (hasExternalUses)
%7 = and %6, -8:i32 (hasExternalUses)
%8 = phi %3, %4, %7
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = and %11, -8:i32 (hasExternalUses)
%13 = phi %10, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %7, %8
%17 = phi %14, -1:i32, %16
%18 = phi %9, %13, %17
%19 = phi %2, %8, %18
%20 = add %19, 47:i32 (hasExternalUses)
%21 = phi %0, %1, %20
%22 = block 2
%23:i32 = var
%24 = block 2
%25:i32 = var
%26 = phi %3, %25, 0:i32
%27 = phi %15, 0:i32, %26
%28 = phi %14, 0:i32, %27
%29 = phi %9, 0:i32, %28
%30 = phi %2, %26, %29
%31 = block 2
%32 = block 2
%33:i32 = var
%34 = phi %32, %30, %33
%35 = phi %31, %34, %30
%36 = phi %24, %30, %35
%37 = phi %0, %23, %36
%38 = block 2
%39 = block 2
%40 = block 2
%41:i32 = var
%42 = phi %40, %41, %37
%43 = phi %39, %37, %42
%44 = phi %38, %37, %43
%45 = phi %22, %37, %44
%46 = sub %21, %45
%47:i32 = var
%48 = add %46, %47
%49:i32 = var
%50 = and %48, %49
%51:i32 = var
blockpc %9 0 %51 1
%52:i32 = var
blockpc %9 1 %52 1
%53:i32 = var
blockpc %10 0 %53 1
%54:i32 = var
blockpc %10 1 %54 1
%55:i32 = var
blockpc %14 0 %55 1
%56:i32 = var
blockpc %14 1 %56 1
%57:i32 = var
blockpc %15 0 %57 1
%58:i32 = var
blockpc %15 1 %58 1
%59:i32 = var
blockpc %24 0 %59 1
%60:i32 = var
blockpc %24 1 %60 1
%61:i32 = var
blockpc %31 0 %61 1
%62:i32 = var
blockpc %31 1 %62 1
%63:i32 = var
blockpc %32 0 %63 1
%64:i32 = var
blockpc %32 1 %64 1
%65:i32 = var
blockpc %38 0 %65 1
%66:i32 = var
blockpc %38 1 %66 1
%67:i32 = var
blockpc %39 0 %67 1
%68:i32 = var
blockpc %39 1 %68 1
%69:i32 = var
blockpc %40 0 %69 1
%70:i32 = var
blockpc %40 1 %70 1
%71:i32 = var
%72:i32 = var
pc %71 1
pc %72 1
infer %50


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %3, %4, %6
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, 16:i32, %10
%12 = block 2
%13 = block 2
%14 = phi %13, %6, %7
%15 = phi %12, -1:i32, %14
%16 = phi %8, %11, %15
%17 = phi %2, %7, %16
%18 = add %17, 47:i32 (hasExternalUses)
%19 = phi %0, %1, %18
%20 = block 2
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = phi %3, %23, 0:i32
%25 = phi %13, 0:i32, %24
%26 = phi %12, 0:i32, %25
%27 = phi %8, 0:i32, %26
%28 = phi %2, %24, %27
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %28, %31
%33 = phi %29, %32, %28
%34 = phi %22, %28, %33
%35 = phi %0, %21, %34
%36 = block 2
%37 = block 2
%38 = block 2
%39:i32 = var
%40 = phi %38, %39, %35
%41 = phi %37, %35, %40
%42 = phi %36, %35, %41
%43 = phi %20, %35, %42
%44 = sub %19, %43
%45:i32 = var
%46 = add %44, %45
%47:i32 = var
%48 = and %46, %47 (hasExternalUses)
%49 = ult %48, 2147483647:i32
%50:i32 = var
blockpc %8 0 %50 1
%51:i32 = var
blockpc %8 1 %51 1
%52:i32 = var
blockpc %9 0 %52 1
%53:i32 = var
blockpc %9 1 %53 1
%54:i32 = var
blockpc %12 0 %54 1
%55:i32 = var
blockpc %12 1 %55 1
%56:i32 = var
blockpc %13 0 %56 1
%57:i32 = var
blockpc %13 1 %57 1
%58:i32 = var
blockpc %22 0 %58 1
%59:i32 = var
blockpc %22 1 %59 1
%60:i32 = var
blockpc %29 0 %60 1
%61:i32 = var
blockpc %29 1 %61 1
%62:i32 = var
blockpc %30 0 %62 1
%63:i32 = var
blockpc %30 1 %63 1
%64:i32 = var
blockpc %36 0 %64 1
%65:i32 = var
blockpc %36 1 %65 1
%66:i32 = var
blockpc %37 0 %66 1
%67:i32 = var
blockpc %37 1 %67 1
%68:i32 = var
blockpc %38 0 %68 1
%69:i32 = var
blockpc %38 1 %69 1
%70:i32 = var
%71:i32 = var
pc %70 1
pc %71 1
infer %49


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = phi %8, 16:i32, %9
%11 = block 2
%12 = block 2
%13 = phi %12, %5, %6
%14 = phi %11, -1:i32, %13
%15 = phi %7, %10, %14
%16 = phi %2, %6, %15
%17 = add %16, 47:i32 (hasExternalUses)
%18 = phi %0, %1, %17
%19 = block 2
%20:i32 = var
%21 = block 2
%22:i32 = var
%23 = phi %3, %22, 0:i32
%24 = phi %12, 0:i32, %23
%25 = phi %11, 0:i32, %24
%26 = phi %7, 0:i32, %25
%27 = phi %2, %23, %26
%28 = block 2
%29 = block 2
%30:i32 = var
%31 = phi %29, %27, %30
%32 = phi %28, %31, %27
%33 = phi %21, %27, %32
%34 = phi %0, %20, %33
%35 = block 2
%36 = block 2
%37 = block 2
%38:i32 = var
%39 = phi %37, %38, %34
%40 = phi %36, %34, %39
%41 = phi %35, %34, %40
%42 = phi %19, %34, %41
%43 = sub %18, %42
%44:i32 = var
%45 = add %43, %44
%46:i32 = var
%47 = and %45, %46 (hasExternalUses)
%48 = ult %47, 2147483647:i32
%49:i32 = zext %48
%50 = eq %49, 0:i32
%51:i32 = var
blockpc %7 0 %51 1
%52:i32 = var
blockpc %7 1 %52 1
%53:i32 = var
blockpc %8 0 %53 1
%54:i32 = var
blockpc %8 1 %54 1
%55:i32 = var
blockpc %11 0 %55 1
%56:i32 = var
blockpc %11 1 %56 1
%57:i32 = var
blockpc %12 0 %57 1
%58:i32 = var
blockpc %12 1 %58 1
%59:i32 = var
blockpc %21 0 %59 1
%60:i32 = var
blockpc %21 1 %60 1
%61:i32 = var
blockpc %28 0 %61 1
%62:i32 = var
blockpc %28 1 %62 1
%63:i32 = var
blockpc %29 0 %63 1
%64:i32 = var
blockpc %29 1 %64 1
%65:i32 = var
blockpc %35 0 %65 1
%66:i32 = var
blockpc %35 1 %66 1
%67:i32 = var
blockpc %36 0 %67 1
%68:i32 = var
blockpc %36 1 %68 1
%69:i32 = var
blockpc %37 0 %69 1
%70:i32 = var
blockpc %37 1 %70 1
%71:i32 = var
%72:i32 = var
pc %71 1
pc %72 1
infer %50


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, -1:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5:i32 = var
%6 = eq %5, 0:i32
blockpc %4 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1
%9 = block 2
%10:i32 = var
%11:i32 = var
%12 = sub %10, %11
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 4096:i32, %16
%18 = sub 0:i32, %17
%19 = and %12, %18
%20 = ult %19, 2147483647:i32
blockpc %9 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %9 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27 = block 2
%28 = phi %27, 65:i32, 61:i32
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = phi %41, %28, 65:i32
%45 = phi %38, %28, %44
%46 = phi %35, 0:i32, %45
%47 = phi %32, 0:i32, %46
%48 = phi %29, 0:i32, %47
%49 = phi %26, %28, %48
%50 = phi %23, %49, 136:i32
%51 = phi %9, %50, %49
%52 = phi %4, 128:i32, %51
%53 = phi %3, 128:i32, %52
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57 = block 2
%58:i32 = var
blockpc %57 0 %58 1
%59:i32 = var
blockpc %57 1 %59 1
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63 = phi %60, 136:i32, %53
%64 = phi %57, %53, %63
%65 = phi %54, %53, %64
%66 = phi %2, %53, %65
%67 = eq %66, 136:i32
%68:i32 = var
pc %67 1
pc %68 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %3, %4, %6
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, 16:i32, %10
%12 = block 2
%13 = block 2
%14 = phi %13, %6, %7
%15 = phi %12, -1:i32, %14
%16 = phi %8, %11, %15
%17 = phi %2, %7, %16
%18 = add %17, 47:i32 (hasExternalUses)
%19 = phi %0, %1, %18
%20 = block 2
%21:i32 = var
%22 = block 2
%23:i32 = var
%24 = phi %3, %23, 0:i32
%25 = phi %13, 0:i32, %24
%26 = phi %12, 0:i32, %25
%27 = phi %8, 0:i32, %26
%28 = phi %2, %24, %27
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %28, %31
%33 = phi %29, %32, %28
%34 = phi %22, %28, %33
%35 = phi %0, %21, %34
%36 = block 2
%37 = block 2
%38 = block 2
%39:i32 = var
%40 = phi %38, %39, %35
%41 = phi %37, %35, %40
%42 = phi %36, %35, %41
%43 = phi %20, %35, %42
%44 = sub %19, %43
%45:i32 = var
%46 = add %44, %45
%47:i32 = var
%48 = and %46, %47 (hasExternalUses)
%49 = add %48, %43
%50:i32 = var
blockpc %8 0 %50 1
%51:i32 = var
blockpc %8 1 %51 1
%52:i32 = var
blockpc %9 0 %52 1
%53:i32 = var
blockpc %9 1 %53 1
%54:i32 = var
blockpc %12 0 %54 1
%55:i32 = var
blockpc %12 1 %55 1
%56:i32 = var
blockpc %13 0 %56 1
%57:i32 = var
blockpc %13 1 %57 1
%58:i32 = var
blockpc %22 0 %58 1
%59:i32 = var
blockpc %22 1 %59 1
%60:i32 = var
blockpc %29 0 %60 1
%61:i32 = var
blockpc %29 1 %61 1
%62:i32 = var
blockpc %30 0 %62 1
%63:i32 = var
blockpc %30 1 %63 1
%64:i32 = var
blockpc %36 0 %64 1
%65:i32 = var
blockpc %36 1 %65 1
%66:i32 = var
blockpc %37 0 %66 1
%67:i32 = var
blockpc %37 1 %67 1
%68:i32 = var
blockpc %38 0 %68 1
%69:i32 = var
blockpc %38 1 %69 1
%70:i32 = var
%71:i32 = var
%72:i32 = var
pc %70 1
pc %71 1
pc %72 1
infer %49


; start LHS (in $38)
%0:i32 = var
%1 = or %0, 4:i32
%2:i32 = var
%3 = and %2, 4:i32
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $38)
%0 = block 6
%1 = phi %0, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%2 = eq %1, 143:i32
infer %2


; start LHS (in $38)
%0 = block 6
%1 = block 2
%2:i32 = var
%3 = phi %1, 4096:i32, %2
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = add %7, 11:i32 (hasExternalUses)
%9 = and %8, -8:i32 (hasExternalUses)
%10 = phi %5, %6, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = and %13, -8:i32 (hasExternalUses)
%15 = phi %12, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %9, %10
%19 = phi %16, -1:i32, %18
%20 = phi %11, %15, %19
%21 = phi %4, %10, %20
%22 = add %21, 47:i32 (hasExternalUses)
%23 = add %3, %22 (hasExternalUses)
%24 = sub 0:i32, %3 (hasExternalUses)
%25 = and %23, %24 (hasExternalUses)
%26 = block 2
%27:i32 = var
%28 = phi %26, %27, %25
%29 = block 2
%30 = phi %29, %28, %25
%31 = phi %0, %25, %28, %28, %28, %28, %30
%32 = ult %31, 2147483647:i32
%33:i32 = var
blockpc %1 0 %33 1
%34:i32 = var
blockpc %1 1 %34 1
%35:i32 = var
blockpc %11 0 %35 1
%36:i32 = var
blockpc %11 1 %36 1
%37:i32 = var
blockpc %12 0 %37 1
%38:i32 = var
blockpc %12 1 %38 1
%39:i32 = var
blockpc %16 0 %39 1
%40:i32 = var
blockpc %16 1 %40 1
%41:i32 = var
blockpc %17 0 %41 1
%42:i32 = var
blockpc %17 1 %42 1
%43:i32 = var
blockpc %29 0 %43 1
%44:i32 = var
blockpc %29 1 %44 1
%45:i32 = var
pc %45 1
infer %32


; start LHS (in $38)
%0:i32 = var
%1 = ne %0, -1:i32
%2 = block 6
%3 = block 2
%4:i32 = var
%5 = eq %4, 0:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8:i32 = var
%9 = phi %3, 4096:i32, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = add %13, 11:i32
%15 = and %14, -8:i32
%16 = phi %11, %12, %15
%17 = block 2
%18 = ult %13, 245:i32
blockpc %17 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %17 1 %20 1
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25 = phi %21, 16:i32, %24
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, %15, %16
%33 = phi %26, -1:i32, %32
%34 = phi %17, %25, %33
%35 = phi %10, %16, %34
%36 = add %35, 47:i32
%37 = add %9, %36
%38:i32 = var
%39 = and %37, %38
%40 = block 2
%41:i32 = var
%42 = phi %40, %41, %39
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %42, %39
%47 = phi %2, %39, %42, %42, %42, %42, %46
%48 = ult %47, 2147483647:i32
%49:i32 = var
pc %48 1
pc %49 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = ne %0, -1:i32
%2 = block 6
%3 = block 2
%4:i32 = var
%5 = eq %4, 0:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8:i32 = var
%9 = phi %3, 4096:i32, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = add %13, 11:i32
%15 = and %14, -8:i32
%16 = phi %11, %12, %15
%17 = block 2
%18 = ult %13, 245:i32
blockpc %17 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %17 1 %20 1
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25 = phi %21, 16:i32, %24
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, %15, %16
%33 = phi %26, -1:i32, %32
%34 = phi %17, %25, %33
%35 = phi %10, %16, %34
%36 = add %35, 47:i32
%37 = add %9, %36
%38:i32 = var
%39 = and %37, %38
%40 = block 2
%41:i32 = var
%42 = phi %40, %41, %39
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %42, %39
%47 = phi %2, %39, %42, %42, %42, %42, %46
%48 = ult %47, 2147483647:i32
%49:i32 = var
pc %48 1
pc %49 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3 = block 6
%4 = block 2
%5:i32 = var
%6 = eq %5, 0:i32
blockpc %4 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1
%9:i32 = var
%10 = phi %4, 4096:i32, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = add %14, 11:i32
%16 = and %15, -8:i32
%17 = phi %12, %13, %16
%18 = block 2
%19 = ult %14, 245:i32
blockpc %18 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %18 1 %21 1
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26 = phi %22, 16:i32, %25
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = phi %30, %16, %17
%34 = phi %27, -1:i32, %33
%35 = phi %18, %26, %34
%36 = phi %11, %17, %35
%37 = add %36, 47:i32
%38 = add %10, %37
%39:i32 = var
%40 = and %38, %39
%41 = block 2
%42:i32 = var
%43 = phi %41, %42, %40
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = phi %44, %43, %40
%48 = phi %3, %40, %43, %43, %43, %43, %47
%49 = ult %48, 2147483647:i32
%50:i32 = var
pc %49 1
pc %50 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = ne %0, -1:i32
%2:i32 = zext %1
%3:i32 = var
%4 = ne %3, -1:i32
%5:i32 = zext %4
%6 = and %2, %5
%7 = block 6
%8 = block 2
%9:i32 = var
%10 = eq %9, 0:i32
blockpc %8 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %8 1 %12 1
%13:i32 = var
%14 = phi %8, 4096:i32, %13
%15 = block 2
%16 = block 2
%17:i32 = var
%18:i32 = var
%19 = add %18, 11:i32
%20 = and %19, -8:i32
%21 = phi %16, %17, %20
%22 = block 2
%23 = ult %18, 245:i32
blockpc %22 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %22 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = phi %26, 16:i32, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = phi %34, %20, %21
%38 = phi %31, -1:i32, %37
%39 = phi %22, %30, %38
%40 = phi %15, %21, %39
%41 = add %40, 47:i32
%42 = add %14, %41
%43:i32 = var
%44 = and %42, %43
%45 = block 2
%46:i32 = var
%47 = phi %45, %46, %44
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = phi %48, %47, %44
%52 = phi %7, %44, %47, %47, %47, %47, %51
%53 = ult %52, 2147483647:i32
%54:i32 = var
pc %53 1
pc %54 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3:i32 = zext %2
%4 = ne %0, -1:i32
%5:i32 = zext %4
%6 = ne %1, -1:i32
%7:i32 = zext %6
%8 = and %5, %7
%9 = and %3, %8
%10 = block 6
%11 = block 2
%12:i32 = var
%13 = eq %12, 0:i32
blockpc %11 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %11 1 %15 1
%16:i32 = var
%17 = phi %11, 4096:i32, %16
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = add %21, 11:i32
%23 = and %22, -8:i32
%24 = phi %19, %20, %23
%25 = block 2
%26 = ult %21, 245:i32
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32 = phi %28, 16:i32, %31
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = phi %36, %23, %24
%40 = phi %33, -1:i32, %39
%41 = phi %25, %32, %40
%42 = phi %18, %24, %41
%43 = add %42, 47:i32
%44 = add %17, %43
%45:i32 = var
%46 = and %44, %45
%47 = block 2
%48:i32 = var
%49 = phi %47, %48, %46
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = phi %50, %49, %46
%54 = phi %10, %46, %49, %49, %49, %49, %53
%55 = ult %54, 2147483647:i32
%56:i32 = var
pc %55 1
pc %56 1
infer %9


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = sub %0, %1
%3 = block 6
%4 = block 2
%5:i32 = var
%6 = eq %5, 0:i32
blockpc %4 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %4 1 %8 1
%9:i32 = var
%10 = phi %4, 4096:i32, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14:i32 = var
%15 = add %14, 11:i32
%16 = and %15, -8:i32
%17 = phi %12, %13, %16
%18 = block 2
%19 = ult %14, 245:i32
blockpc %18 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %18 1 %21 1
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26 = phi %22, 16:i32, %25
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = phi %30, %16, %17
%34 = phi %27, -1:i32, %33
%35 = phi %18, %26, %34
%36 = phi %11, %17, %35
%37 = add %36, 47:i32
%38 = add %10, %37
%39:i32 = var
%40 = and %38, %39
%41 = block 2
%42:i32 = var
%43 = phi %41, %42, %40
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = phi %44, %43, %40
%48 = phi %3, %40, %43, %43, %43, %43, %47
%49 = ult %48, 2147483647:i32
%50:i32 = var
pc %49 1
pc %50 1
infer %2


; start LHS (in $38)
%0 = block 6
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, %18
%22 = block 2
%23 = phi %22, %21, %18
%24 = phi %0, %18, %21, %21, %21, %21, %23
%25 = add %24, 40:i32
%26 = ult %4, 245:i32
blockpc %8 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %8 1 %28 1
%29:i32 = var
blockpc %9 0 %29 1
%30:i32 = var
blockpc %9 1 %30 1
%31:i32 = var
blockpc %13 0 %31 1
%32:i32 = var
blockpc %13 1 %32 1
%33:i32 = var
blockpc %14 0 %33 1
%34:i32 = var
blockpc %14 1 %34 1
%35:i32 = var
blockpc %22 0 %35 1
%36:i32 = var
blockpc %22 1 %36 1
%37:i32 = var
%38:i32 = var
pc %37 1
pc %38 1
infer %25


; start LHS (in $38)
%0 = block 6
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, %18
%22 = block 2
%23 = phi %22, %21, %18
%24 = phi %0, %18, %21, %21, %21, %21, %23
%25 = add %24, 40:i32
%26:i32 = var
%27:i32 = var
%28 = sub %26, %27 (hasExternalUses)
%29 = ult %25, %28
%30:i32 = var
blockpc %8 0 %30 1
%31:i32 = var
blockpc %8 1 %31 1
%32:i32 = var
blockpc %9 0 %32 1
%33:i32 = var
blockpc %9 1 %33 1
%34:i32 = var
blockpc %13 0 %34 1
%35:i32 = var
blockpc %13 1 %35 1
%36:i32 = var
blockpc %14 0 %36 1
%37:i32 = var
blockpc %14 1 %37 1
%38:i32 = var
blockpc %22 0 %38 1
%39:i32 = var
blockpc %22 1 %39 1
%40:i32 = var
%41:i32 = var
pc %40 1
pc %41 1
infer %29


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, -1:i32
%2 = block 6
%3 = block 2
%4:i32 = var
%5 = eq %4, 0:i32
blockpc %3 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %3 1 %7 1
%8:i32 = var
%9 = phi %3, 4096:i32, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = add %13, 11:i32
%15 = and %14, -8:i32
%16 = phi %11, %12, %15
%17 = block 2
%18 = ult %13, 245:i32
blockpc %17 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %17 1 %20 1
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25 = phi %21, 16:i32, %24
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, %15, %16
%33 = phi %26, -1:i32, %32
%34 = phi %17, %25, %33
%35 = phi %10, %16, %34
%36 = add %35, 47:i32
%37 = add %9, %36
%38:i32 = var
%39 = and %37, %38
%40 = block 2
%41:i32 = var
%42 = phi %40, %41, %39
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %42, %39
%47 = phi %2, %39, %42, %42, %42, %42, %46
%48 = ult %47, 2147483647:i32
%49:i32 = var
pc %48 1
pc %49 1
infer %1


; start LHS (in $38)
%0 = block 6
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, %18
%22 = block 2
%23 = phi %22, %21, %18
%24 = phi %0, %18, %21, %21, %21, %21, %23
%25 = add %24, 40:i32
%26:i32 = var
%27:i32 = var
%28 = sub %26, %27 (hasExternalUses)
%29 = ult %25, %28 (hasExternalUses)
%30:i32 = zext %29
%31 = xor %30, 1:i32
%32:i32 = var
blockpc %8 0 %32 1
%33:i32 = var
blockpc %8 1 %33 1
%34:i32 = var
blockpc %9 0 %34 1
%35:i32 = var
blockpc %9 1 %35 1
%36:i32 = var
blockpc %13 0 %36 1
%37:i32 = var
blockpc %13 1 %37 1
%38:i32 = var
blockpc %14 0 %38 1
%39:i32 = var
blockpc %14 1 %39 1
%40:i32 = var
blockpc %22 0 %40 1
%41:i32 = var
blockpc %22 1 %41 1
%42:i32 = var
%43:i32 = var
pc %42 1
pc %43 1
infer %31


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, -1:i32
%2:i32 = zext %1
%3 = block 6
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = and %7, -8:i32 (hasExternalUses)
%9 = phi %5, %6, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %8, %9
%17 = phi %14, -1:i32, %16
%18 = phi %10, %13, %17
%19 = phi %4, %9, %18
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, %19
%23 = block 2
%24 = phi %23, %22, %19
%25 = phi %3, %19, %22, %22, %22, %22, %24
%26 = add %25, 40:i32
%27:i32 = var
%28 = sub %27, %0 (hasExternalUses)
%29 = ult %26, %28 (hasExternalUses)
%30:i32 = zext %29
%31 = xor %30, 1:i32
%32 = or %2, %31
%33:i32 = var
blockpc %10 0 %33 1
%34:i32 = var
blockpc %10 1 %34 1
%35:i32 = var
blockpc %11 0 %35 1
%36:i32 = var
blockpc %11 1 %36 1
%37:i32 = var
blockpc %14 0 %37 1
%38:i32 = var
blockpc %14 1 %38 1
%39:i32 = var
blockpc %15 0 %39 1
%40:i32 = var
blockpc %15 1 %40 1
%41:i32 = var
blockpc %23 0 %41 1
%42:i32 = var
blockpc %23 1 %42 1
%43:i32 = var
%44:i32 = var
pc %43 1
pc %44 1
infer %32


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3:i32 = zext %2
%4 = ne %0, -1:i32
%5:i32 = zext %4
%6 = ne %1, -1:i32
%7:i32 = zext %6
%8 = and %5, %7
%9 = and %3, %8
%10 = xor %9, 1:i32
%11 = block 6
%12 = block 2
%13:i32 = var
%14 = eq %13, 0:i32
blockpc %12 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1
%17:i32 = var
%18 = phi %12, 4096:i32, %17
%19 = block 2
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = add %22, 11:i32
%24 = and %23, -8:i32
%25 = phi %20, %21, %24
%26 = block 2
%27 = ult %22, 245:i32
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33 = phi %29, 16:i32, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %24, %25
%41 = phi %34, -1:i32, %40
%42 = phi %26, %33, %41
%43 = phi %19, %25, %42
%44 = add %43, 47:i32
%45 = add %18, %44
%46:i32 = var
%47 = and %45, %46
%48 = block 2
%49:i32 = var
%50 = phi %48, %49, %47
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54 = phi %51, %50, %47
%55 = phi %11, %47, %50, %50, %50, %50, %54
%56 = ult %55, 2147483647:i32
%57:i32 = var
pc %56 1
pc %57 1
infer %10


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, -1:i32
%2:i32 = zext %1
%3 = block 6
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %7, %8
%16 = phi %13, -1:i32, %15
%17 = phi %9, %12, %16
%18 = phi %4, %8, %17
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, %18
%22 = block 2
%23 = phi %22, %21, %18
%24 = phi %3, %18, %21, %21, %21, %21, %23
%25 = add %24, 40:i32
%26:i32 = var
%27 = sub %26, %0 (hasExternalUses)
%28 = ult %25, %27 (hasExternalUses)
%29:i32 = zext %28
%30 = xor %29, 1:i32
%31 = or %2, %30
%32:i32 = var
%33 = or %31, %32
%34:i32 = var
blockpc %9 0 %34 1
%35:i32 = var
blockpc %9 1 %35 1
%36:i32 = var
blockpc %10 0 %36 1
%37:i32 = var
blockpc %10 1 %37 1
%38:i32 = var
blockpc %13 0 %38 1
%39:i32 = var
blockpc %13 1 %39 1
%40:i32 = var
blockpc %14 0 %40 1
%41:i32 = var
blockpc %14 1 %41 1
%42:i32 = var
blockpc %22 0 %42 1
%43:i32 = var
blockpc %22 1 %43 1
%44:i32 = var
%45:i32 = var
pc %44 1
pc %45 1
infer %33


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, -1:i32
%2:i32 = zext %1
%3 = block 6
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = phi %5, %6, %7
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %7, %8
%16 = phi %13, -1:i32, %15
%17 = phi %9, %12, %16
%18 = phi %4, %8, %17
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, %18
%22 = block 2
%23 = phi %22, %21, %18
%24 = phi %3, %18, %21, %21, %21, %21, %23
%25 = add %24, 40:i32
%26:i32 = var
%27 = sub %26, %0 (hasExternalUses)
%28 = ult %25, %27 (hasExternalUses)
%29:i32 = zext %28
%30 = xor %29, 1:i32
%31 = or %2, %30
%32:i32 = var
%33 = or %31, %32
%34 = eq %33, 0:i32
%35:i32 = var
blockpc %9 0 %35 1
%36:i32 = var
blockpc %9 1 %36 1
%37:i32 = var
blockpc %10 0 %37 1
%38:i32 = var
blockpc %10 1 %38 1
%39:i32 = var
blockpc %13 0 %39 1
%40:i32 = var
blockpc %13 1 %40 1
%41:i32 = var
blockpc %14 0 %41 1
%42:i32 = var
blockpc %14 1 %42 1
%43:i32 = var
blockpc %22 0 %43 1
%44:i32 = var
blockpc %22 1 %44 1
%45:i32 = var
%46:i32 = var
pc %45 1
pc %46 1
infer %34


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2 = phi %1, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%3 = block 2
%4 = block 2
%5 = phi %4, %2, 145:i32
%6 = phi %3, %2, %5
%7 = phi %0, %2, %6
%8 = eq %7, 145:i32
%9 = eq %2, 143:i32
blockpc %0 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %0 1 %11 1
%12 = block 2
%13:i32 = var
%14 = eq %13, 0:i32
blockpc %12 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %12 1 %16 1
%17:i32 = var
%18 = phi %12, 4096:i32, %17
%19 = block 2
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = and %22, -8:i32
%24 = phi %20, %21, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32 = phi %28, 16:i32, %31
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = phi %36, %23, %24
%40 = phi %33, -1:i32, %39
%41 = phi %25, %32, %40
%42 = phi %19, %24, %41
%43 = add %42, 47:i32
%44 = add %18, %43
%45:i32 = var
%46 = and %44, %45
%47 = block 2
%48:i32 = var
%49 = phi %47, %48, %46
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = phi %50, %49, %46
%54 = phi %1, %46, %49, %49, %49, %49, %53
%55 = ult %54, 2147483647:i32
blockpc %3 0 %55 1
%56:i32 = var
blockpc %3 1 %56 1
%57:i32 = var
blockpc %4 0 %57 1
%58:i32 = var
blockpc %4 1 %58 1
infer %8


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3 = block 2
%4:i32 = var
%5 = phi %3, 4096:i32, %4
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %9, %10
%18 = phi %15, -1:i32, %17
%19 = phi %11, %14, %18
%20 = phi %6, %10, %19
%21 = add %20, 47:i32 (hasExternalUses)
%22 = add %5, %21 (hasExternalUses)
%23:i32 = var
%24 = sub %22, %23
%25 = sub 0:i32, %5 (hasExternalUses)
%26 = and %24, %25 (hasExternalUses)
%27 = block 2
%28:i32 = var
%29 = add %28, -1:i32 (hasExternalUses)
%30:i32 = var
%31 = add %29, %30
%32:i32 = var
%33 = and %31, %32
%34 = sub %33, %30
%35 = phi %27, 0:i32, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = add %35, %39 (hasExternalUses)
%41 = block 2
%42:i32 = var
%43 = block 2
%44:i32 = var
%45 = phi %7, %44, 0:i32
%46 = phi %16, 0:i32, %45
%47 = phi %15, 0:i32, %46
%48 = phi %11, 0:i32, %47
%49 = phi %6, %45, %48
%50 = block 2
%51 = block 2
%52 = phi %51, %49, %26
%53 = phi %50, %52, %49
%54 = phi %43, %49, %53
%55 = phi %36, %42, %54
%56 = block 2
%57 = block 2
%58 = block 2
%59 = phi %58, %40, %55
%60 = phi %57, %55, %59
%61 = phi %56, %55, %60
%62 = phi %41, %55, %61
%63:i32 = var
%64 = block 2
%65:i32 = var
%66:i32 = var
%67 = phi %7, %66, 0:i32
%68 = phi %16, 0:i32, %67
%69 = phi %15, 0:i32, %68
%70 = phi %11, 0:i32, %69
%71 = phi %6, %67, %70
%72 = phi %36, %65, %71
%73 = phi %64, %72, %71
%74 = phi %2, %26, %40, %62, %62, %63, %73
%75 = block 2
%76 = block 2
%77 = block 2
%78:i32 = var
%79:i32 = var
%80 = phi %7, %79, 0:i32
%81 = phi %16, 0:i32, %80
%82 = phi %15, 0:i32, %81
%83 = phi %11, 0:i32, %82
%84 = phi %6, %80, %83
%85:i32 = var
%86 = phi %36, %85, %84
%87 = block 3
%88:i32 = var
%89:i32 = var
%90 = phi %7, %89, 0:i32
%91 = phi %16, 0:i32, %90
%92 = phi %15, 0:i32, %91
%93 = phi %11, 0:i32, %92
%94 = phi %6, %90, %93
%95 = phi %51, %26, %94
%96 = phi %50, %95, 0:i32
%97 = phi %43, %94, %96
%98 = phi %36, %88, %97
%99 = phi %58, %98, 0:i32
%100 = phi %57, 0:i32, %99
%101 = phi %56, %98, %100
%102 = phi %41, 0:i32, %101
%103 = phi %87, 0:i32, 0:i32, %102
%104 = phi %64, %103, 0:i32
%105 = phi %2, %84, %86, %86, %86, %86, %104
%106 = phi %77, %78, %105
%107 = phi %76, %74, %106
%108 = phi %75, %74, %107
%109 = phi %1, %74, %108
%110 = add %0, %109
%111:i32 = var
blockpc %1 0 %111 1
%112:i32 = var
blockpc %1 1 %112 1
%113:i32 = var
blockpc %3 0 %113 1
%114:i32 = var
blockpc %3 1 %114 1
%115:i32 = var
blockpc %11 0 %115 1
%116:i32 = var
blockpc %11 1 %116 1
%117:i32 = var
blockpc %12 0 %117 1
%118:i32 = var
blockpc %12 1 %118 1
%119:i32 = var
blockpc %15 0 %119 1
%120:i32 = var
blockpc %15 1 %120 1
%121:i32 = var
blockpc %16 0 %121 1
%122:i32 = var
blockpc %16 1 %122 1
%123:i32 = var
blockpc %27 0 %123 1
%124:i32 = var
blockpc %27 1 %124 1
%125:i32 = var
blockpc %43 0 %125 1
%126:i32 = var
blockpc %43 1 %126 1
%127:i32 = var
blockpc %50 0 %127 1
%128:i32 = var
blockpc %50 1 %128 1
%129:i32 = var
blockpc %51 0 %129 1
%130:i32 = var
blockpc %51 1 %130 1
%131:i32 = var
blockpc %56 0 %131 1
%132:i32 = var
blockpc %56 1 %132 1
%133:i32 = var
blockpc %57 0 %133 1
%134:i32 = var
blockpc %57 1 %134 1
%135:i32 = var
blockpc %58 0 %135 1
%136:i32 = var
blockpc %58 1 %136 1
%137:i32 = var
blockpc %64 0 %137 1
%138:i32 = var
blockpc %64 1 %138 1
%139:i32 = var
blockpc %75 0 %139 1
%140:i32 = var
blockpc %75 1 %140 1
%141:i32 = var
blockpc %76 0 %141 1
%142:i32 = var
blockpc %76 1 %142 1
%143:i32 = var
blockpc %77 0 %143 1
%144:i32 = var
blockpc %77 1 %144 1
%145:i32 = var
pc %145 1
infer %110


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = block 2
%3 = block 6
%4 = block 2
%5:i32 = var
%6 = phi %4, 4096:i32, %5
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %10, %11
%19 = phi %16, -1:i32, %18
%20 = phi %12, %15, %19
%21 = phi %7, %11, %20
%22 = add %21, 47:i32 (hasExternalUses)
%23 = add %6, %22 (hasExternalUses)
%24:i32 = var
%25 = sub %23, %24
%26 = sub 0:i32, %6 (hasExternalUses)
%27 = and %25, %26 (hasExternalUses)
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = add %29, %30
%32:i32 = var
%33 = and %31, %32
%34 = sub %33, %30
%35 = phi %28, 0:i32, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = add %35, %39 (hasExternalUses)
%41 = block 2
%42:i32 = var
%43 = block 2
%44:i32 = var
%45 = phi %8, %44, 0:i32
%46 = phi %17, 0:i32, %45
%47 = phi %16, 0:i32, %46
%48 = phi %12, 0:i32, %47
%49 = phi %7, %45, %48
%50 = block 2
%51 = block 2
%52 = phi %51, %49, %27
%53 = phi %50, %52, %49
%54 = phi %43, %49, %53
%55 = phi %36, %42, %54
%56 = block 2
%57 = block 2
%58 = block 2
%59 = phi %58, %40, %55
%60 = phi %57, %55, %59
%61 = phi %56, %55, %60
%62 = phi %41, %55, %61
%63:i32 = var
%64 = block 2
%65:i32 = var
%66:i32 = var
%67 = phi %8, %66, 0:i32
%68 = phi %17, 0:i32, %67
%69 = phi %16, 0:i32, %68
%70 = phi %12, 0:i32, %69
%71 = phi %7, %67, %70
%72 = phi %36, %65, %71
%73 = phi %64, %72, %71
%74 = phi %3, %27, %40, %62, %62, %63, %73
%75 = block 2
%76 = block 2
%77 = block 2
%78:i32 = var
%79:i32 = var
%80 = phi %8, %79, 0:i32
%81 = phi %17, 0:i32, %80
%82 = phi %16, 0:i32, %81
%83 = phi %12, 0:i32, %82
%84 = phi %7, %80, %83
%85:i32 = var
%86 = phi %36, %85, %84
%87 = block 3
%88:i32 = var
%89:i32 = var
%90 = phi %8, %89, 0:i32
%91 = phi %17, 0:i32, %90
%92 = phi %16, 0:i32, %91
%93 = phi %12, 0:i32, %92
%94 = phi %7, %90, %93
%95 = phi %51, %27, %94
%96 = phi %50, %95, 0:i32
%97 = phi %43, %94, %96
%98 = phi %36, %88, %97
%99 = phi %58, %98, 0:i32
%100 = phi %57, 0:i32, %99
%101 = phi %56, %98, %100
%102 = phi %41, 0:i32, %101
%103 = phi %87, 0:i32, 0:i32, %102
%104 = phi %64, %103, 0:i32
%105 = phi %3, %84, %86, %86, %86, %86, %104
%106 = phi %77, %78, %105
%107 = phi %76, %74, %106
%108 = phi %75, %74, %107
%109 = phi %2, %74, %108
%110 = add %1, %109 (hasExternalUses)
%111 = ult %0, %110
%112:i32 = var
blockpc %2 0 %112 1
%113:i32 = var
blockpc %2 1 %113 1
%114:i32 = var
blockpc %4 0 %114 1
%115:i32 = var
blockpc %4 1 %115 1
%116:i32 = var
blockpc %12 0 %116 1
%117:i32 = var
blockpc %12 1 %117 1
%118:i32 = var
blockpc %13 0 %118 1
%119:i32 = var
blockpc %13 1 %119 1
%120:i32 = var
blockpc %16 0 %120 1
%121:i32 = var
blockpc %16 1 %121 1
%122:i32 = var
blockpc %17 0 %122 1
%123:i32 = var
blockpc %17 1 %123 1
%124:i32 = var
blockpc %28 0 %124 1
%125:i32 = var
blockpc %28 1 %125 1
%126:i32 = var
blockpc %43 0 %126 1
%127:i32 = var
blockpc %43 1 %127 1
%128:i32 = var
blockpc %50 0 %128 1
%129:i32 = var
blockpc %50 1 %129 1
%130:i32 = var
blockpc %51 0 %130 1
%131:i32 = var
blockpc %51 1 %131 1
%132:i32 = var
blockpc %56 0 %132 1
%133:i32 = var
blockpc %56 1 %133 1
%134:i32 = var
blockpc %57 0 %134 1
%135:i32 = var
blockpc %57 1 %135 1
%136:i32 = var
blockpc %58 0 %136 1
%137:i32 = var
blockpc %58 1 %137 1
%138:i32 = var
blockpc %64 0 %138 1
%139:i32 = var
blockpc %64 1 %139 1
%140:i32 = var
blockpc %75 0 %140 1
%141:i32 = var
blockpc %75 1 %141 1
%142:i32 = var
blockpc %76 0 %142 1
%143:i32 = var
blockpc %76 1 %143 1
%144:i32 = var
blockpc %77 0 %144 1
%145:i32 = var
blockpc %77 1 %145 1
%146:i32 = var
pc %146 1
infer %111


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2 = block 2
%3 = block 6
%4 = phi %3, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%5 = eq %4, 143:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8 = block 2
%9 = block 2
%10:i32 = var
blockpc %9 0 %10 1
%11:i32 = var
blockpc %9 1 %11 1
%12:i32 = var
%13 = phi %9, 4096:i32, %12
%14 = block 2
%15 = block 2
%16:i32 = var
%17:i32 = var
%18 = phi %15, %16, %17
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25:i32 = var
%26 = phi %22, 16:i32, %25
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = phi %30, %17, %18
%34 = phi %27, -1:i32, %33
%35 = phi %19, %26, %34
%36 = phi %14, %18, %35
%37 = add %36, 47:i32
%38 = add %13, %37
%39:i32 = var
%40 = and %38, %39
%41 = block 2
%42:i32 = var
%43 = phi %41, %42, %40
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = phi %44, %43, %40
%48 = phi %3, %40, %43, %43, %43, %43, %47
%49 = ult %48, 2147483647:i32
blockpc %8 0 %49 1
%50:i32 = var
blockpc %8 1 %50 1
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54 = phi %51, %4, 145:i32
%55 = phi %8, %4, %54
%56 = phi %2, %4, %55
%57 = eq %56, 145:i32
pc %57 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4 = block 2
%5 = block 6
%6 = phi %5, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%7 = eq %6, 143:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = block 2
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14:i32 = var
%15 = phi %11, 4096:i32, %14
%16 = block 2
%17 = block 2
%18:i32 = var
%19:i32 = var
%20 = phi %17, %18, %19
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28 = phi %24, 16:i32, %27
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = phi %32, %19, %20
%36 = phi %29, -1:i32, %35
%37 = phi %21, %28, %36
%38 = phi %16, %20, %37
%39 = add %38, 47:i32
%40 = add %15, %39
%41:i32 = var
%42 = and %40, %41
%43 = block 2
%44:i32 = var
%45 = phi %43, %44, %42
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = phi %46, %45, %42
%50 = phi %5, %42, %45, %45, %45, %45, %49
%51 = ult %50, 2147483647:i32
blockpc %10 0 %51 1
%52:i32 = var
blockpc %10 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = phi %53, %6, 145:i32
%57 = phi %10, %6, %56
%58 = phi %4, %6, %57
%59 = eq %58, 145:i32
pc %3 1
pc %59 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51 = ult %49, %50
%52:i32 = var
blockpc %0 0 %52 1
%53:i32 = var
blockpc %0 1 %53 1
%54:i32 = var
blockpc %7 0 %54 1
%55:i32 = var
blockpc %7 1 %55 1
%56:i32 = var
blockpc %12 0 %56 1
%57:i32 = var
blockpc %12 1 %57 1
%58:i32 = var
blockpc %13 0 %58 1
%59:i32 = var
blockpc %13 1 %59 1
%60:i32 = var
blockpc %14 0 %60 1
%61:i32 = var
blockpc %14 1 %61 1
%62:i32 = var
blockpc %19 0 %62 1
%63:i32 = var
blockpc %19 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %25 0 %66 1
%67:i32 = var
blockpc %25 1 %67 1
%68:i32 = var
blockpc %26 0 %68 1
%69:i32 = var
blockpc %26 1 %69 1
%70:i32 = var
blockpc %27 0 %70 1
%71:i32 = var
blockpc %27 1 %71 1
%72:i32 = var
blockpc %33 0 %72 1
%73:i32 = var
blockpc %33 1 %73 1
%74:i32 = var
blockpc %44 0 %74 1
%75:i32 = var
blockpc %44 1 %75 1
%76:i32 = var
blockpc %45 0 %76 1
%77:i32 = var
blockpc %45 1 %77 1
%78:i32 = var
%79:i32 = var
pc %78 1
pc %79 1
infer %51


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53 = ult %52, %0
%54:i32 = zext %53
%55 = or %2, %54
%56:i32 = var
blockpc %3 0 %56 1
%57:i32 = var
blockpc %3 1 %57 1
%58:i32 = var
blockpc %10 0 %58 1
%59:i32 = var
blockpc %10 1 %59 1
%60:i32 = var
blockpc %15 0 %60 1
%61:i32 = var
blockpc %15 1 %61 1
%62:i32 = var
blockpc %16 0 %62 1
%63:i32 = var
blockpc %16 1 %63 1
%64:i32 = var
blockpc %17 0 %64 1
%65:i32 = var
blockpc %17 1 %65 1
%66:i32 = var
blockpc %22 0 %66 1
%67:i32 = var
blockpc %22 1 %67 1
%68:i32 = var
blockpc %23 0 %68 1
%69:i32 = var
blockpc %23 1 %69 1
%70:i32 = var
blockpc %28 0 %70 1
%71:i32 = var
blockpc %28 1 %71 1
%72:i32 = var
blockpc %29 0 %72 1
%73:i32 = var
blockpc %29 1 %73 1
%74:i32 = var
blockpc %30 0 %74 1
%75:i32 = var
blockpc %30 1 %75 1
%76:i32 = var
blockpc %36 0 %76 1
%77:i32 = var
blockpc %36 1 %77 1
%78:i32 = var
blockpc %47 0 %78 1
%79:i32 = var
blockpc %47 1 %79 1
%80:i32 = var
blockpc %48 0 %80 1
%81:i32 = var
blockpc %48 1 %81 1
%82:i32 = var
%83:i32 = var
pc %82 1
pc %83 1
infer %55


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2 = block 2
%3:i32 = var
%4 = phi %2, 4096:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %8, %9
%17 = phi %14, -1:i32, %16
%18 = phi %10, %13, %17
%19 = phi %5, %9, %18
%20 = add %19, 47:i32 (hasExternalUses)
%21 = add %4, %20 (hasExternalUses)
%22:i32 = var
%23 = sub %21, %22
%24 = sub 0:i32, %4 (hasExternalUses)
%25 = and %23, %24 (hasExternalUses)
%26 = block 2
%27:i32 = var
%28 = add %27, -1:i32 (hasExternalUses)
%29:i32 = var
%30 = add %28, %29
%31:i32 = var
%32 = and %30, %31
%33 = sub %32, %29
%34 = phi %26, 0:i32, %33
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %37
%39 = add %34, %38 (hasExternalUses)
%40 = block 2
%41:i32 = var
%42 = block 2
%43:i32 = var
%44 = phi %6, %43, 0:i32
%45 = phi %15, 0:i32, %44
%46 = phi %14, 0:i32, %45
%47 = phi %10, 0:i32, %46
%48 = phi %5, %44, %47
%49 = block 2
%50 = block 2
%51 = phi %50, %48, %25
%52 = phi %49, %51, %48
%53 = phi %42, %48, %52
%54 = phi %35, %41, %53
%55 = block 2
%56 = block 2
%57 = block 2
%58 = phi %57, %39, %54
%59 = phi %56, %54, %58
%60 = phi %55, %54, %59
%61 = phi %40, %54, %60
%62:i32 = var
%63 = block 2
%64:i32 = var
%65:i32 = var
%66 = phi %6, %65, 0:i32
%67 = phi %15, 0:i32, %66
%68 = phi %14, 0:i32, %67
%69 = phi %10, 0:i32, %68
%70 = phi %5, %66, %69
%71 = phi %35, %64, %70
%72 = phi %63, %71, %70
%73 = phi %1, %25, %39, %61, %61, %62, %72
%74 = block 2
%75 = block 2
%76 = block 2
%77:i32 = var
%78:i32 = var
%79 = phi %6, %78, 0:i32
%80 = phi %15, 0:i32, %79
%81 = phi %14, 0:i32, %80
%82 = phi %10, 0:i32, %81
%83 = phi %5, %79, %82
%84:i32 = var
%85 = phi %35, %84, %83
%86 = block 3
%87:i32 = var
%88:i32 = var
%89 = phi %6, %88, 0:i32
%90 = phi %15, 0:i32, %89
%91 = phi %14, 0:i32, %90
%92 = phi %10, 0:i32, %91
%93 = phi %5, %89, %92
%94 = phi %50, %25, %93
%95 = phi %49, %94, 0:i32
%96 = phi %42, %93, %95
%97 = phi %35, %87, %96
%98 = phi %57, %97, 0:i32
%99 = phi %56, 0:i32, %98
%100 = phi %55, %97, %99
%101 = phi %40, 0:i32, %100
%102 = phi %86, 0:i32, 0:i32, %101
%103 = phi %63, %102, 0:i32
%104 = phi %1, %83, %85, %85, %85, %85, %103
%105 = phi %76, %77, %104
%106 = phi %75, %73, %105
%107 = phi %74, %73, %106
%108 = phi %0, %73, %107
%109 = add %108, -40:i32
%110:i32 = var
blockpc %0 0 %110 1
%111:i32 = var
blockpc %0 1 %111 1
%112:i32 = var
blockpc %2 0 %112 1
%113:i32 = var
blockpc %2 1 %113 1
%114:i32 = var
blockpc %10 0 %114 1
%115:i32 = var
blockpc %10 1 %115 1
%116:i32 = var
blockpc %11 0 %116 1
%117:i32 = var
blockpc %11 1 %117 1
%118:i32 = var
blockpc %14 0 %118 1
%119:i32 = var
blockpc %14 1 %119 1
%120:i32 = var
blockpc %15 0 %120 1
%121:i32 = var
blockpc %15 1 %121 1
%122:i32 = var
blockpc %26 0 %122 1
%123:i32 = var
blockpc %26 1 %123 1
%124:i32 = var
blockpc %42 0 %124 1
%125:i32 = var
blockpc %42 1 %125 1
%126:i32 = var
blockpc %49 0 %126 1
%127:i32 = var
blockpc %49 1 %127 1
%128:i32 = var
blockpc %50 0 %128 1
%129:i32 = var
blockpc %50 1 %129 1
%130:i32 = var
blockpc %55 0 %130 1
%131:i32 = var
blockpc %55 1 %131 1
%132:i32 = var
blockpc %56 0 %132 1
%133:i32 = var
blockpc %56 1 %133 1
%134:i32 = var
blockpc %57 0 %134 1
%135:i32 = var
blockpc %57 1 %135 1
%136:i32 = var
blockpc %63 0 %136 1
%137:i32 = var
blockpc %63 1 %137 1
%138:i32 = var
blockpc %74 0 %138 1
%139:i32 = var
blockpc %74 1 %139 1
%140:i32 = var
blockpc %75 0 %140 1
%141:i32 = var
blockpc %75 1 %141 1
%142:i32 = var
blockpc %76 0 %142 1
%143:i32 = var
blockpc %76 1 %143 1
%144:i32 = var
%145:i32 = var
pc %144 1
pc %145 1
infer %109


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32
%51:i32 = var
blockpc %0 0 %51 1
%52:i32 = var
blockpc %0 1 %52 1
%53:i32 = var
blockpc %7 0 %53 1
%54:i32 = var
blockpc %7 1 %54 1
%55:i32 = var
blockpc %12 0 %55 1
%56:i32 = var
blockpc %12 1 %56 1
%57:i32 = var
blockpc %13 0 %57 1
%58:i32 = var
blockpc %13 1 %58 1
%59:i32 = var
blockpc %14 0 %59 1
%60:i32 = var
blockpc %14 1 %60 1
%61:i32 = var
blockpc %19 0 %61 1
%62:i32 = var
blockpc %19 1 %62 1
%63:i32 = var
blockpc %20 0 %63 1
%64:i32 = var
blockpc %20 1 %64 1
%65:i32 = var
blockpc %25 0 %65 1
%66:i32 = var
blockpc %25 1 %66 1
%67:i32 = var
blockpc %26 0 %67 1
%68:i32 = var
blockpc %26 1 %68 1
%69:i32 = var
blockpc %27 0 %69 1
%70:i32 = var
blockpc %27 1 %70 1
%71:i32 = var
blockpc %33 0 %71 1
%72:i32 = var
blockpc %33 1 %72 1
%73:i32 = var
blockpc %44 0 %73 1
%74:i32 = var
blockpc %44 1 %74 1
%75:i32 = var
blockpc %45 0 %75 1
%76:i32 = var
blockpc %45 1 %76 1
%77:i32 = var
%78:i32 = var
pc %77 1
pc %78 1
infer %50


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32 (hasExternalUses)
%51 = and %50, 7:i32
%52:i32 = var
blockpc %0 0 %52 1
%53:i32 = var
blockpc %0 1 %53 1
%54:i32 = var
blockpc %7 0 %54 1
%55:i32 = var
blockpc %7 1 %55 1
%56:i32 = var
blockpc %12 0 %56 1
%57:i32 = var
blockpc %12 1 %57 1
%58:i32 = var
blockpc %13 0 %58 1
%59:i32 = var
blockpc %13 1 %59 1
%60:i32 = var
blockpc %14 0 %60 1
%61:i32 = var
blockpc %14 1 %61 1
%62:i32 = var
blockpc %19 0 %62 1
%63:i32 = var
blockpc %19 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %25 0 %66 1
%67:i32 = var
blockpc %25 1 %67 1
%68:i32 = var
blockpc %26 0 %68 1
%69:i32 = var
blockpc %26 1 %69 1
%70:i32 = var
blockpc %27 0 %70 1
%71:i32 = var
blockpc %27 1 %71 1
%72:i32 = var
blockpc %33 0 %72 1
%73:i32 = var
blockpc %33 1 %73 1
%74:i32 = var
blockpc %44 0 %74 1
%75:i32 = var
blockpc %44 1 %75 1
%76:i32 = var
blockpc %45 0 %76 1
%77:i32 = var
blockpc %45 1 %77 1
%78:i32 = var
%79:i32 = var
pc %78 1
pc %79 1
infer %51


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32 (hasExternalUses)
%51 = sub 0:i32, %50
%52:i32 = var
blockpc %0 0 %52 1
%53:i32 = var
blockpc %0 1 %53 1
%54:i32 = var
blockpc %7 0 %54 1
%55:i32 = var
blockpc %7 1 %55 1
%56:i32 = var
blockpc %12 0 %56 1
%57:i32 = var
blockpc %12 1 %57 1
%58:i32 = var
blockpc %13 0 %58 1
%59:i32 = var
blockpc %13 1 %59 1
%60:i32 = var
blockpc %14 0 %60 1
%61:i32 = var
blockpc %14 1 %61 1
%62:i32 = var
blockpc %19 0 %62 1
%63:i32 = var
blockpc %19 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %25 0 %66 1
%67:i32 = var
blockpc %25 1 %67 1
%68:i32 = var
blockpc %26 0 %68 1
%69:i32 = var
blockpc %26 1 %69 1
%70:i32 = var
blockpc %27 0 %70 1
%71:i32 = var
blockpc %27 1 %71 1
%72:i32 = var
blockpc %33 0 %72 1
%73:i32 = var
blockpc %33 1 %73 1
%74:i32 = var
blockpc %44 0 %74 1
%75:i32 = var
blockpc %44 1 %75 1
%76:i32 = var
blockpc %45 0 %76 1
%77:i32 = var
blockpc %45 1 %77 1
%78:i32 = var
%79:i32 = var
pc %78 1
pc %79 1
infer %51


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32 (hasExternalUses)
%51 = sub 0:i32, %50
%52 = and %51, 7:i32
%53:i32 = var
blockpc %0 0 %53 1
%54:i32 = var
blockpc %0 1 %54 1
%55:i32 = var
blockpc %7 0 %55 1
%56:i32 = var
blockpc %7 1 %56 1
%57:i32 = var
blockpc %12 0 %57 1
%58:i32 = var
blockpc %12 1 %58 1
%59:i32 = var
blockpc %13 0 %59 1
%60:i32 = var
blockpc %13 1 %60 1
%61:i32 = var
blockpc %14 0 %61 1
%62:i32 = var
blockpc %14 1 %62 1
%63:i32 = var
blockpc %19 0 %63 1
%64:i32 = var
blockpc %19 1 %64 1
%65:i32 = var
blockpc %20 0 %65 1
%66:i32 = var
blockpc %20 1 %66 1
%67:i32 = var
blockpc %25 0 %67 1
%68:i32 = var
blockpc %25 1 %68 1
%69:i32 = var
blockpc %26 0 %69 1
%70:i32 = var
blockpc %26 1 %70 1
%71:i32 = var
blockpc %27 0 %71 1
%72:i32 = var
blockpc %27 1 %72 1
%73:i32 = var
blockpc %33 0 %73 1
%74:i32 = var
blockpc %33 1 %74 1
%75:i32 = var
blockpc %44 0 %75 1
%76:i32 = var
blockpc %44 1 %76 1
%77:i32 = var
blockpc %45 0 %77 1
%78:i32 = var
blockpc %45 1 %78 1
%79:i32 = var
%80:i32 = var
pc %79 1
pc %80 1
infer %52


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32 (hasExternalUses)
%51 = and %50, 7:i32
%52 = eq %51, 0:i32
%53:i32 = var
blockpc %0 0 %53 1
%54:i32 = var
blockpc %0 1 %54 1
%55:i32 = var
blockpc %7 0 %55 1
%56:i32 = var
blockpc %7 1 %56 1
%57:i32 = var
blockpc %12 0 %57 1
%58:i32 = var
blockpc %12 1 %58 1
%59:i32 = var
blockpc %13 0 %59 1
%60:i32 = var
blockpc %13 1 %60 1
%61:i32 = var
blockpc %14 0 %61 1
%62:i32 = var
blockpc %14 1 %62 1
%63:i32 = var
blockpc %19 0 %63 1
%64:i32 = var
blockpc %19 1 %64 1
%65:i32 = var
blockpc %20 0 %65 1
%66:i32 = var
blockpc %20 1 %66 1
%67:i32 = var
blockpc %25 0 %67 1
%68:i32 = var
blockpc %25 1 %68 1
%69:i32 = var
blockpc %26 0 %69 1
%70:i32 = var
blockpc %26 1 %70 1
%71:i32 = var
blockpc %27 0 %71 1
%72:i32 = var
blockpc %27 1 %72 1
%73:i32 = var
blockpc %33 0 %73 1
%74:i32 = var
blockpc %33 1 %74 1
%75:i32 = var
blockpc %44 0 %75 1
%76:i32 = var
blockpc %44 1 %76 1
%77:i32 = var
blockpc %45 0 %77 1
%78:i32 = var
blockpc %45 1 %78 1
%79:i32 = var
%80:i32 = var
pc %79 1
pc %80 1
infer %52


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52
%54:i32 = var
blockpc %0 0 %54 1
%55:i32 = var
blockpc %0 1 %55 1
%56:i32 = var
blockpc %7 0 %56 1
%57:i32 = var
blockpc %7 1 %57 1
%58:i32 = var
blockpc %12 0 %58 1
%59:i32 = var
blockpc %12 1 %59 1
%60:i32 = var
blockpc %13 0 %60 1
%61:i32 = var
blockpc %13 1 %61 1
%62:i32 = var
blockpc %14 0 %62 1
%63:i32 = var
blockpc %14 1 %63 1
%64:i32 = var
blockpc %19 0 %64 1
%65:i32 = var
blockpc %19 1 %65 1
%66:i32 = var
blockpc %20 0 %66 1
%67:i32 = var
blockpc %20 1 %67 1
%68:i32 = var
blockpc %25 0 %68 1
%69:i32 = var
blockpc %25 1 %69 1
%70:i32 = var
blockpc %26 0 %70 1
%71:i32 = var
blockpc %26 1 %71 1
%72:i32 = var
blockpc %27 0 %72 1
%73:i32 = var
blockpc %27 1 %73 1
%74:i32 = var
blockpc %33 0 %74 1
%75:i32 = var
blockpc %33 1 %75 1
%76:i32 = var
blockpc %44 0 %76 1
%77:i32 = var
blockpc %44 1 %77 1
%78:i32 = var
blockpc %45 0 %78 1
%79:i32 = var
blockpc %45 1 %79 1
%80:i32 = var
blockpc %50 0 %80 1
%81:i32 = var
blockpc %50 1 %81 1
%82:i32 = var
%83:i32 = var
pc %82 1
pc %83 1
infer %53


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2 = block 2
%3:i32 = var
%4 = phi %2, 4096:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %8, %9
%17 = phi %14, -1:i32, %16
%18 = phi %10, %13, %17
%19 = phi %5, %9, %18
%20 = add %19, 47:i32 (hasExternalUses)
%21 = add %4, %20 (hasExternalUses)
%22:i32 = var
%23 = sub %21, %22
%24 = sub 0:i32, %4 (hasExternalUses)
%25 = and %23, %24 (hasExternalUses)
%26 = block 2
%27:i32 = var
%28:i32 = var
%29 = add %27, %28
%30:i32 = var
%31 = and %29, %30
%32 = sub %31, %28
%33 = phi %26, 0:i32, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %36
%38 = add %33, %37 (hasExternalUses)
%39 = block 2
%40:i32 = var
%41 = block 2
%42:i32 = var
%43 = phi %6, %42, 0:i32
%44 = phi %15, 0:i32, %43
%45 = phi %14, 0:i32, %44
%46 = phi %10, 0:i32, %45
%47 = phi %5, %43, %46
%48 = block 2
%49 = block 2
%50 = phi %49, %47, %25
%51 = phi %48, %50, %47
%52 = phi %41, %47, %51
%53 = phi %34, %40, %52
%54 = block 2
%55 = block 2
%56 = block 2
%57 = phi %56, %38, %53
%58 = phi %55, %53, %57
%59 = phi %54, %53, %58
%60 = phi %39, %53, %59
%61:i32 = var
%62 = block 2
%63:i32 = var
%64:i32 = var
%65 = phi %6, %64, 0:i32
%66 = phi %15, 0:i32, %65
%67 = phi %14, 0:i32, %66
%68 = phi %10, 0:i32, %67
%69 = phi %5, %65, %68
%70 = phi %34, %63, %69
%71 = phi %62, %70, %69
%72 = phi %1, %25, %38, %60, %60, %61, %71
%73 = block 2
%74 = block 2
%75 = block 2
%76:i32 = var
%77:i32 = var
%78 = phi %6, %77, 0:i32
%79 = phi %15, 0:i32, %78
%80 = phi %14, 0:i32, %79
%81 = phi %10, 0:i32, %80
%82 = phi %5, %78, %81
%83:i32 = var
%84 = phi %34, %83, %82
%85 = block 3
%86:i32 = var
%87:i32 = var
%88 = phi %6, %87, 0:i32
%89 = phi %15, 0:i32, %88
%90 = phi %14, 0:i32, %89
%91 = phi %10, 0:i32, %90
%92 = phi %5, %88, %91
%93 = phi %49, %25, %92
%94 = phi %48, %93, 0:i32
%95 = phi %41, %92, %94
%96 = phi %34, %86, %95
%97 = phi %56, %96, 0:i32
%98 = phi %55, 0:i32, %97
%99 = phi %54, %96, %98
%100 = phi %39, 0:i32, %99
%101 = phi %85, 0:i32, 0:i32, %100
%102 = phi %62, %101, 0:i32
%103 = phi %1, %82, %84, %84, %84, %84, %102
%104 = phi %75, %76, %103
%105 = phi %74, %72, %104
%106 = phi %73, %72, %105
%107 = phi %0, %72, %106
%108 = add %107, -40:i32 (hasExternalUses)
%109 = block 2
%110:i32 = var
%111 = phi %109, 0:i32, %110
%112 = sub %108, %111
%113:i32 = var
blockpc %0 0 %113 1
%114:i32 = var
blockpc %0 1 %114 1
%115:i32 = var
blockpc %2 0 %115 1
%116:i32 = var
blockpc %2 1 %116 1
%117:i32 = var
blockpc %10 0 %117 1
%118:i32 = var
blockpc %10 1 %118 1
%119:i32 = var
blockpc %11 0 %119 1
%120:i32 = var
blockpc %11 1 %120 1
%121:i32 = var
blockpc %14 0 %121 1
%122:i32 = var
blockpc %14 1 %122 1
%123:i32 = var
blockpc %15 0 %123 1
%124:i32 = var
blockpc %15 1 %124 1
%125:i32 = var
blockpc %26 0 %125 1
%126:i32 = var
blockpc %26 1 %126 1
%127:i32 = var
blockpc %41 0 %127 1
%128:i32 = var
blockpc %41 1 %128 1
%129:i32 = var
blockpc %48 0 %129 1
%130:i32 = var
blockpc %48 1 %130 1
%131:i32 = var
blockpc %49 0 %131 1
%132:i32 = var
blockpc %49 1 %132 1
%133:i32 = var
blockpc %54 0 %133 1
%134:i32 = var
blockpc %54 1 %134 1
%135:i32 = var
blockpc %55 0 %135 1
%136:i32 = var
blockpc %55 1 %136 1
%137:i32 = var
blockpc %56 0 %137 1
%138:i32 = var
blockpc %56 1 %138 1
%139:i32 = var
blockpc %62 0 %139 1
%140:i32 = var
blockpc %62 1 %140 1
%141:i32 = var
blockpc %73 0 %141 1
%142:i32 = var
blockpc %73 1 %142 1
%143:i32 = var
blockpc %74 0 %143 1
%144:i32 = var
blockpc %74 1 %144 1
%145:i32 = var
blockpc %75 0 %145 1
%146:i32 = var
blockpc %75 1 %146 1
%147:i32 = var
blockpc %109 0 %147 1
%148:i32 = var
blockpc %109 1 %148 1
%149:i32 = var
%150:i32 = var
pc %149 1
pc %150 1
infer %112


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54 = add %53, 4:i32
%55:i32 = var
blockpc %0 0 %55 1
%56:i32 = var
blockpc %0 1 %56 1
%57:i32 = var
blockpc %7 0 %57 1
%58:i32 = var
blockpc %7 1 %58 1
%59:i32 = var
blockpc %12 0 %59 1
%60:i32 = var
blockpc %12 1 %60 1
%61:i32 = var
blockpc %13 0 %61 1
%62:i32 = var
blockpc %13 1 %62 1
%63:i32 = var
blockpc %14 0 %63 1
%64:i32 = var
blockpc %14 1 %64 1
%65:i32 = var
blockpc %19 0 %65 1
%66:i32 = var
blockpc %19 1 %66 1
%67:i32 = var
blockpc %20 0 %67 1
%68:i32 = var
blockpc %20 1 %68 1
%69:i32 = var
blockpc %25 0 %69 1
%70:i32 = var
blockpc %25 1 %70 1
%71:i32 = var
blockpc %26 0 %71 1
%72:i32 = var
blockpc %26 1 %72 1
%73:i32 = var
blockpc %27 0 %73 1
%74:i32 = var
blockpc %27 1 %74 1
%75:i32 = var
blockpc %33 0 %75 1
%76:i32 = var
blockpc %33 1 %76 1
%77:i32 = var
blockpc %44 0 %77 1
%78:i32 = var
blockpc %44 1 %78 1
%79:i32 = var
blockpc %45 0 %79 1
%80:i32 = var
blockpc %45 1 %80 1
%81:i32 = var
blockpc %50 0 %81 1
%82:i32 = var
blockpc %50 1 %82 1
%83:i32 = var
%84:i32 = var
pc %83 1
pc %84 1
infer %54


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2 = block 2
%3:i32 = var
%4 = phi %2, 4096:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %8, %9
%17 = phi %14, -1:i32, %16
%18 = phi %10, %13, %17
%19 = phi %5, %9, %18
%20 = add %19, 47:i32 (hasExternalUses)
%21 = add %4, %20 (hasExternalUses)
%22:i32 = var
%23 = sub %21, %22
%24 = sub 0:i32, %4 (hasExternalUses)
%25 = and %23, %24 (hasExternalUses)
%26 = block 2
%27:i32 = var
%28:i32 = var
%29 = and %27, %28
%30:i32 = var
%31 = sub %29, %30
%32 = phi %26, 0:i32, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %35
%37 = add %32, %36 (hasExternalUses)
%38 = block 2
%39:i32 = var
%40 = block 2
%41:i32 = var
%42 = phi %6, %41, 0:i32
%43 = phi %15, 0:i32, %42
%44 = phi %14, 0:i32, %43
%45 = phi %10, 0:i32, %44
%46 = phi %5, %42, %45
%47 = block 2
%48 = block 2
%49 = phi %48, %46, %25
%50 = phi %47, %49, %46
%51 = phi %40, %46, %50
%52 = phi %33, %39, %51
%53 = block 2
%54 = block 2
%55 = block 2
%56 = phi %55, %37, %52
%57 = phi %54, %52, %56
%58 = phi %53, %52, %57
%59 = phi %38, %52, %58
%60:i32 = var
%61 = block 2
%62:i32 = var
%63:i32 = var
%64 = phi %6, %63, 0:i32
%65 = phi %15, 0:i32, %64
%66 = phi %14, 0:i32, %65
%67 = phi %10, 0:i32, %66
%68 = phi %5, %64, %67
%69 = phi %33, %62, %68
%70 = phi %61, %69, %68
%71 = phi %1, %25, %37, %59, %59, %60, %70
%72 = block 2
%73 = block 2
%74 = block 2
%75:i32 = var
%76:i32 = var
%77 = phi %6, %76, 0:i32
%78 = phi %15, 0:i32, %77
%79 = phi %14, 0:i32, %78
%80 = phi %10, 0:i32, %79
%81 = phi %5, %77, %80
%82:i32 = var
%83 = phi %33, %82, %81
%84 = block 3
%85:i32 = var
%86:i32 = var
%87 = phi %6, %86, 0:i32
%88 = phi %15, 0:i32, %87
%89 = phi %14, 0:i32, %88
%90 = phi %10, 0:i32, %89
%91 = phi %5, %87, %90
%92 = phi %48, %25, %91
%93 = phi %47, %92, 0:i32
%94 = phi %40, %91, %93
%95 = phi %33, %85, %94
%96 = phi %55, %95, 0:i32
%97 = phi %54, 0:i32, %96
%98 = phi %53, %95, %97
%99 = phi %38, 0:i32, %98
%100 = phi %84, 0:i32, 0:i32, %99
%101 = phi %61, %100, 0:i32
%102 = phi %1, %81, %83, %83, %83, %83, %101
%103 = phi %74, %75, %102
%104 = phi %73, %71, %103
%105 = phi %72, %71, %104
%106 = phi %0, %71, %105
%107 = add %106, -40:i32 (hasExternalUses)
%108 = block 2
%109:i32 = var
%110 = phi %108, 0:i32, %109
%111 = sub %107, %110 (hasExternalUses)
%112 = or %111, 1:i32
%113:i32 = var
blockpc %0 0 %113 1
%114:i32 = var
blockpc %0 1 %114 1
%115:i32 = var
blockpc %2 0 %115 1
%116:i32 = var
blockpc %2 1 %116 1
%117:i32 = var
blockpc %10 0 %117 1
%118:i32 = var
blockpc %10 1 %118 1
%119:i32 = var
blockpc %11 0 %119 1
%120:i32 = var
blockpc %11 1 %120 1
%121:i32 = var
blockpc %14 0 %121 1
%122:i32 = var
blockpc %14 1 %122 1
%123:i32 = var
blockpc %15 0 %123 1
%124:i32 = var
blockpc %15 1 %124 1
%125:i32 = var
blockpc %26 0 %125 1
%126:i32 = var
blockpc %26 1 %126 1
%127:i32 = var
blockpc %40 0 %127 1
%128:i32 = var
blockpc %40 1 %128 1
%129:i32 = var
blockpc %47 0 %129 1
%130:i32 = var
blockpc %47 1 %130 1
%131:i32 = var
blockpc %48 0 %131 1
%132:i32 = var
blockpc %48 1 %132 1
%133:i32 = var
blockpc %53 0 %133 1
%134:i32 = var
blockpc %53 1 %134 1
%135:i32 = var
blockpc %54 0 %135 1
%136:i32 = var
blockpc %54 1 %136 1
%137:i32 = var
blockpc %55 0 %137 1
%138:i32 = var
blockpc %55 1 %138 1
%139:i32 = var
blockpc %61 0 %139 1
%140:i32 = var
blockpc %61 1 %140 1
%141:i32 = var
blockpc %72 0 %141 1
%142:i32 = var
blockpc %72 1 %142 1
%143:i32 = var
blockpc %73 0 %143 1
%144:i32 = var
blockpc %73 1 %144 1
%145:i32 = var
blockpc %74 0 %145 1
%146:i32 = var
blockpc %74 1 %146 1
%147:i32 = var
blockpc %108 0 %147 1
%148:i32 = var
blockpc %108 1 %148 1
%149:i32 = var
%150:i32 = var
pc %149 1
pc %150 1
infer %112


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51 = add %49, %50
%52:i32 = var
blockpc %0 0 %52 1
%53:i32 = var
blockpc %0 1 %53 1
%54:i32 = var
blockpc %7 0 %54 1
%55:i32 = var
blockpc %7 1 %55 1
%56:i32 = var
blockpc %12 0 %56 1
%57:i32 = var
blockpc %12 1 %57 1
%58:i32 = var
blockpc %13 0 %58 1
%59:i32 = var
blockpc %13 1 %59 1
%60:i32 = var
blockpc %14 0 %60 1
%61:i32 = var
blockpc %14 1 %61 1
%62:i32 = var
blockpc %19 0 %62 1
%63:i32 = var
blockpc %19 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %25 0 %66 1
%67:i32 = var
blockpc %25 1 %67 1
%68:i32 = var
blockpc %26 0 %68 1
%69:i32 = var
blockpc %26 1 %69 1
%70:i32 = var
blockpc %27 0 %70 1
%71:i32 = var
blockpc %27 1 %71 1
%72:i32 = var
blockpc %33 0 %72 1
%73:i32 = var
blockpc %33 1 %73 1
%74:i32 = var
blockpc %44 0 %74 1
%75:i32 = var
blockpc %44 1 %75 1
%76:i32 = var
blockpc %45 0 %76 1
%77:i32 = var
blockpc %45 1 %77 1
%78:i32 = var
%79:i32 = var
pc %78 1
pc %79 1
infer %51


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51 = add %49, %50
%52 = add %51, 4:i32
%53:i32 = var
blockpc %0 0 %53 1
%54:i32 = var
blockpc %0 1 %54 1
%55:i32 = var
blockpc %7 0 %55 1
%56:i32 = var
blockpc %7 1 %56 1
%57:i32 = var
blockpc %12 0 %57 1
%58:i32 = var
blockpc %12 1 %58 1
%59:i32 = var
blockpc %13 0 %59 1
%60:i32 = var
blockpc %13 1 %60 1
%61:i32 = var
blockpc %14 0 %61 1
%62:i32 = var
blockpc %14 1 %62 1
%63:i32 = var
blockpc %19 0 %63 1
%64:i32 = var
blockpc %19 1 %64 1
%65:i32 = var
blockpc %20 0 %65 1
%66:i32 = var
blockpc %20 1 %66 1
%67:i32 = var
blockpc %25 0 %67 1
%68:i32 = var
blockpc %25 1 %68 1
%69:i32 = var
blockpc %26 0 %69 1
%70:i32 = var
blockpc %26 1 %70 1
%71:i32 = var
blockpc %27 0 %71 1
%72:i32 = var
blockpc %27 1 %72 1
%73:i32 = var
blockpc %33 0 %73 1
%74:i32 = var
blockpc %33 1 %74 1
%75:i32 = var
blockpc %44 0 %75 1
%76:i32 = var
blockpc %44 1 %76 1
%77:i32 = var
blockpc %45 0 %77 1
%78:i32 = var
blockpc %45 1 %78 1
%79:i32 = var
%80:i32 = var
pc %79 1
pc %80 1
infer %52


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 6
%8 = phi %7, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%9 = eq %8, 143:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 4096:i32, %16
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = phi %26, 16:i32, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = phi %34, %21, %22
%38 = phi %31, -1:i32, %37
%39 = phi %23, %30, %38
%40 = phi %18, %22, %39
%41 = add %40, 47:i32
%42 = add %17, %41
%43:i32 = var
%44 = and %42, %43
%45 = block 2
%46:i32 = var
%47 = phi %45, %46, %44
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = phi %48, %47, %44
%52 = phi %7, %44, %47, %47, %47, %47, %51
%53 = ult %52, 2147483647:i32
blockpc %12 0 %53 1
%54:i32 = var
blockpc %12 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = phi %55, %8, 145:i32
%59 = phi %12, %8, %58
%60 = phi %6, %8, %59
%61 = eq %60, 145:i32
pc %5 1
pc %61 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = block 2
%8 = block 6
%9 = phi %8, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%10 = eq %9, 143:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13 = block 2
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17:i32 = var
%18 = phi %14, 4096:i32, %17
%19 = block 2
%20 = block 2
%21:i32 = var
%22:i32 = var
%23 = phi %20, %21, %22
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30:i32 = var
%31 = phi %27, 16:i32, %30
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = phi %35, %22, %23
%39 = phi %32, -1:i32, %38
%40 = phi %24, %31, %39
%41 = phi %19, %23, %40
%42 = add %41, 47:i32
%43 = add %18, %42
%44:i32 = var
%45 = and %43, %44
%46 = block 2
%47:i32 = var
%48 = phi %46, %47, %45
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52 = phi %49, %48, %45
%53 = phi %8, %45, %48, %48, %48, %48, %52
%54 = ult %53, 2147483647:i32
blockpc %13 0 %54 1
%55:i32 = var
blockpc %13 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59 = phi %56, %9, 145:i32
%60 = phi %13, %9, %59
%61 = phi %7, %9, %60
%62 = eq %61, 145:i32
pc %6 1
pc %62 1
infer %2


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51 = eq %49, %50
%52:i32 = var
blockpc %0 0 %52 1
%53:i32 = var
blockpc %0 1 %53 1
%54:i32 = var
blockpc %7 0 %54 1
%55:i32 = var
blockpc %7 1 %55 1
%56:i32 = var
blockpc %12 0 %56 1
%57:i32 = var
blockpc %12 1 %57 1
%58:i32 = var
blockpc %13 0 %58 1
%59:i32 = var
blockpc %13 1 %59 1
%60:i32 = var
blockpc %14 0 %60 1
%61:i32 = var
blockpc %14 1 %61 1
%62:i32 = var
blockpc %19 0 %62 1
%63:i32 = var
blockpc %19 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %25 0 %66 1
%67:i32 = var
blockpc %25 1 %67 1
%68:i32 = var
blockpc %26 0 %68 1
%69:i32 = var
blockpc %26 1 %69 1
%70:i32 = var
blockpc %27 0 %70 1
%71:i32 = var
blockpc %27 1 %71 1
%72:i32 = var
blockpc %33 0 %72 1
%73:i32 = var
blockpc %33 1 %73 1
%74:i32 = var
blockpc %44 0 %74 1
%75:i32 = var
blockpc %44 1 %75 1
%76:i32 = var
blockpc %45 0 %76 1
%77:i32 = var
blockpc %45 1 %77 1
%78:i32 = var
%79:i32 = var
pc %78 1
pc %79 1
infer %51


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 6
%8 = phi %7, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%9 = eq %8, 143:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 4096:i32, %16
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = phi %26, 16:i32, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = phi %34, %21, %22
%38 = phi %31, -1:i32, %37
%39 = phi %23, %30, %38
%40 = phi %18, %22, %39
%41 = add %40, 47:i32
%42 = add %17, %41
%43:i32 = var
%44 = and %42, %43
%45 = block 2
%46:i32 = var
%47 = phi %45, %46, %44
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = phi %48, %47, %44
%52 = phi %7, %44, %47, %47, %47, %47, %51
%53 = ult %52, 2147483647:i32
blockpc %12 0 %53 1
%54:i32 = var
blockpc %12 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = phi %55, %8, 145:i32
%59 = phi %12, %8, %58
%60 = phi %6, %8, %59
%61 = eq %60, 145:i32
pc %5 1
pc %61 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 6
%8 = phi %7, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%9 = eq %8, 143:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 4096:i32, %16
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = phi %26, 16:i32, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = phi %34, %21, %22
%38 = phi %31, -1:i32, %37
%39 = phi %23, %30, %38
%40 = phi %18, %22, %39
%41 = add %40, 47:i32
%42 = add %17, %41
%43:i32 = var
%44 = and %42, %43
%45 = block 2
%46:i32 = var
%47 = phi %45, %46, %44
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = phi %48, %47, %44
%52 = phi %7, %44, %47, %47, %47, %47, %51
%53 = ult %52, 2147483647:i32
blockpc %12 0 %53 1
%54:i32 = var
blockpc %12 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = phi %55, %8, 145:i32
%59 = phi %12, %8, %58
%60 = phi %6, %8, %59
%61 = eq %60, 145:i32
pc %5 1
pc %61 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 6
%3 = phi %2, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%4 = block 2
%5 = block 2
%6 = phi %5, %3, 145:i32
%7 = phi %4, %3, %6
%8 = phi %1, %3, %7
%9 = phi %0, 154:i32, %8
%10 = eq %9, 154:i32
%11 = eq %3, 143:i32
blockpc %1 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %1 1 %13 1
%14 = block 2
%15:i32 = var
%16 = eq %15, 0:i32
blockpc %14 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %14 1 %18 1
%19:i32 = var
%20 = phi %14, 4096:i32, %19
%21 = block 2
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = and %24, -8:i32
%26 = phi %22, %23, %25
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34 = phi %30, 16:i32, %33
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = phi %38, %25, %26
%42 = phi %35, -1:i32, %41
%43 = phi %27, %34, %42
%44 = phi %21, %26, %43
%45 = add %44, 47:i32
%46 = add %20, %45
%47:i32 = var
%48 = and %46, %47
%49 = block 2
%50:i32 = var
%51 = phi %49, %50, %48
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = phi %52, %51, %48
%56 = phi %2, %48, %51, %51, %51, %51, %55
%57 = ult %56, 2147483647:i32
blockpc %4 0 %57 1
%58:i32 = var
blockpc %4 1 %58 1
%59:i32 = var
blockpc %5 0 %59 1
%60:i32 = var
blockpc %5 1 %60 1
%61:i32 = var
%62:i32 = var
pc %61 1
pc %62 1
infer %10


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14 = phi %10, 4096:i32, %13
%15:i32 = var
%16 = add %14, %15
%17 = sub 0:i32, %14
%18 = and %16, %17
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, %18
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = phi %22, %21, %18
%26 = phi %4, %18, %21, %21, %21, %21, %25
%27 = ult %26, 2147483647:i32
blockpc %9 0 %27 1
%28:i32 = var
blockpc %9 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, %5, 145:i32
%33 = phi %9, %5, %32
%34 = phi %3, %5, %33
%35 = phi %2, 154:i32, %34
%36 = eq %35, 154:i32
%37:i32 = var
%38:i32 = var
pc %36 1
pc %37 1
pc %38 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2 = block 2
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14 = phi %10, 4096:i32, %13
%15:i32 = var
%16 = add %14, %15
%17 = sub 0:i32, %14
%18 = and %16, %17
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, %18
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = phi %22, %21, %18
%26 = phi %4, %18, %21, %21, %21, %21, %25
%27 = ult %26, 2147483647:i32
blockpc %9 0 %27 1
%28:i32 = var
blockpc %9 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, %5, 145:i32
%33 = phi %9, %5, %32
%34 = phi %3, %5, %33
%35 = phi %2, 154:i32, %34
%36 = eq %35, 154:i32
%37:i32 = var
%38:i32 = var
pc %36 1
pc %37 1
pc %38 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 8:i32
%2 = block 2
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9 = block 2
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14 = phi %10, 4096:i32, %13
%15:i32 = var
%16 = add %14, %15
%17 = sub 0:i32, %14
%18 = and %16, %17
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, %18
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = phi %22, %21, %18
%26 = phi %4, %18, %21, %21, %21, %21, %25
%27 = ult %26, 2147483647:i32
blockpc %9 0 %27 1
%28:i32 = var
blockpc %9 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, %5, 145:i32
%33 = phi %9, %5, %32
%34 = phi %3, %5, %33
%35 = phi %2, 154:i32, %34
%36 = eq %35, 154:i32
%37:i32 = var
%38:i32 = var
pc %36 1
pc %37 1
pc %38 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 8:i32
%2 = eq %1, 0:i32
%3 = block 2
%4 = block 2
%5 = block 6
%6 = phi %5, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%7 = eq %6, 143:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = block 2
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14:i32 = var
%15 = phi %11, 4096:i32, %14
%16:i32 = var
%17 = add %15, %16
%18 = sub 0:i32, %15
%19 = and %17, %18
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, %19
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = phi %23, %22, %19
%27 = phi %5, %19, %22, %22, %22, %22, %26
%28 = ult %27, 2147483647:i32
blockpc %10 0 %28 1
%29:i32 = var
blockpc %10 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = phi %30, %6, 145:i32
%34 = phi %10, %6, %33
%35 = phi %4, %6, %34
%36 = phi %3, 154:i32, %35
%37 = eq %36, 154:i32
%38:i32 = var
%39:i32 = var
pc %37 1
pc %38 1
pc %39 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51 = ult %0, %50
%52:i32 = var
blockpc %1 0 %52 1
%53:i32 = var
blockpc %1 1 %53 1
%54:i32 = var
blockpc %8 0 %54 1
%55:i32 = var
blockpc %8 1 %55 1
%56:i32 = var
blockpc %13 0 %56 1
%57:i32 = var
blockpc %13 1 %57 1
%58:i32 = var
blockpc %14 0 %58 1
%59:i32 = var
blockpc %14 1 %59 1
%60:i32 = var
blockpc %15 0 %60 1
%61:i32 = var
blockpc %15 1 %61 1
%62:i32 = var
blockpc %20 0 %62 1
%63:i32 = var
blockpc %20 1 %63 1
%64:i32 = var
blockpc %21 0 %64 1
%65:i32 = var
blockpc %21 1 %65 1
%66:i32 = var
blockpc %26 0 %66 1
%67:i32 = var
blockpc %26 1 %67 1
%68:i32 = var
blockpc %27 0 %68 1
%69:i32 = var
blockpc %27 1 %69 1
%70:i32 = var
blockpc %28 0 %70 1
%71:i32 = var
blockpc %28 1 %71 1
%72:i32 = var
blockpc %34 0 %72 1
%73:i32 = var
blockpc %34 1 %73 1
%74:i32 = var
blockpc %45 0 %74 1
%75:i32 = var
blockpc %45 1 %75 1
%76:i32 = var
blockpc %46 0 %76 1
%77:i32 = var
blockpc %46 1 %77 1
%78:i32 = var
%79:i32 = var
%80:i32 = var
%81:i32 = var
pc %78 1
pc %79 1
pc %80 1
pc %81 1
infer %51


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = ule %0, %1
%3:i32 = var
%4 = and %3, 8:i32
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 2
%8 = block 6
%9 = phi %8, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%10 = eq %9, 143:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13 = block 2
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17:i32 = var
%18 = phi %14, 4096:i32, %17
%19:i32 = var
%20 = add %18, %19
%21 = sub 0:i32, %18
%22 = and %20, %21
%23 = block 2
%24:i32 = var
%25 = phi %23, %24, %22
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = phi %26, %25, %22
%30 = phi %8, %22, %25, %25, %25, %25, %29
%31 = ult %30, 2147483647:i32
blockpc %13 0 %31 1
%32:i32 = var
blockpc %13 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, %9, 145:i32
%37 = phi %13, %9, %36
%38 = phi %7, %9, %37
%39 = phi %6, 154:i32, %38
%40 = eq %39, 154:i32
%41:i32 = var
%42:i32 = var
pc %5 1
pc %40 1
pc %41 1
pc %42 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51 = ult %0, %50
%52:i32 = zext %51
%53:i32 = var
%54 = add %53, 0:i32; Replace bad zext operation
%55 = and %52, %54
%56:i32 = var
blockpc %1 0 %56 1
%57:i32 = var
blockpc %1 1 %57 1
%58:i32 = var
blockpc %8 0 %58 1
%59:i32 = var
blockpc %8 1 %59 1
%60:i32 = var
blockpc %13 0 %60 1
%61:i32 = var
blockpc %13 1 %61 1
%62:i32 = var
blockpc %14 0 %62 1
%63:i32 = var
blockpc %14 1 %63 1
%64:i32 = var
blockpc %15 0 %64 1
%65:i32 = var
blockpc %15 1 %65 1
%66:i32 = var
blockpc %20 0 %66 1
%67:i32 = var
blockpc %20 1 %67 1
%68:i32 = var
blockpc %21 0 %68 1
%69:i32 = var
blockpc %21 1 %69 1
%70:i32 = var
blockpc %26 0 %70 1
%71:i32 = var
blockpc %26 1 %71 1
%72:i32 = var
blockpc %27 0 %72 1
%73:i32 = var
blockpc %27 1 %73 1
%74:i32 = var
blockpc %28 0 %74 1
%75:i32 = var
blockpc %28 1 %75 1
%76:i32 = var
blockpc %34 0 %76 1
%77:i32 = var
blockpc %34 1 %77 1
%78:i32 = var
blockpc %45 0 %78 1
%79:i32 = var
blockpc %45 1 %79 1
%80:i32 = var
blockpc %46 0 %80 1
%81:i32 = var
blockpc %46 1 %81 1
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85:i32 = var
pc %82 1
pc %83 1
pc %84 1
pc %85 1
infer %55


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3 = block 2
%4:i32 = var
%5 = phi %3, 4096:i32, %4
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %9, %10
%18 = phi %15, -1:i32, %17
%19 = phi %11, %14, %18
%20 = phi %6, %10, %19
%21 = add %20, 47:i32 (hasExternalUses)
%22 = add %5, %21 (hasExternalUses)
%23:i32 = var
%24 = sub %22, %23
%25 = sub 0:i32, %5 (hasExternalUses)
%26 = and %24, %25 (hasExternalUses)
%27 = block 2
%28:i32 = var
%29 = add %28, -1:i32 (hasExternalUses)
%30:i32 = var
%31 = add %29, %30
%32:i32 = var
%33 = and %31, %32
%34 = sub %33, %30
%35 = phi %27, 0:i32, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = add %35, %39 (hasExternalUses)
%41 = block 2
%42:i32 = var
%43 = block 2
%44:i32 = var
%45 = phi %7, %44, 0:i32
%46 = phi %16, 0:i32, %45
%47 = phi %15, 0:i32, %46
%48 = phi %11, 0:i32, %47
%49 = phi %6, %45, %48
%50 = block 2
%51 = block 2
%52 = phi %51, %49, %26
%53 = phi %50, %52, %49
%54 = phi %43, %49, %53
%55 = phi %36, %42, %54
%56 = block 2
%57 = block 2
%58 = block 2
%59 = phi %58, %40, %55
%60 = phi %57, %55, %59
%61 = phi %56, %55, %60
%62 = phi %41, %55, %61
%63:i32 = var
%64 = block 2
%65:i32 = var
%66:i32 = var
%67 = phi %7, %66, 0:i32
%68 = phi %16, 0:i32, %67
%69 = phi %15, 0:i32, %68
%70 = phi %11, 0:i32, %69
%71 = phi %6, %67, %70
%72 = phi %36, %65, %71
%73 = phi %64, %72, %71
%74 = phi %2, %26, %40, %62, %62, %63, %73
%75 = block 2
%76 = block 2
%77 = block 2
%78:i32 = var
%79:i32 = var
%80 = phi %7, %79, 0:i32
%81 = phi %16, 0:i32, %80
%82 = phi %15, 0:i32, %81
%83 = phi %11, 0:i32, %82
%84 = phi %6, %80, %83
%85:i32 = var
%86 = phi %36, %85, %84
%87 = block 3
%88:i32 = var
%89:i32 = var
%90 = phi %7, %89, 0:i32
%91 = phi %16, 0:i32, %90
%92 = phi %15, 0:i32, %91
%93 = phi %11, 0:i32, %92
%94 = phi %6, %90, %93
%95 = phi %51, %26, %94
%96 = phi %50, %95, 0:i32
%97 = phi %43, %94, %96
%98 = phi %36, %88, %97
%99 = phi %58, %98, 0:i32
%100 = phi %57, 0:i32, %99
%101 = phi %56, %98, %100
%102 = phi %41, 0:i32, %101
%103 = phi %87, 0:i32, 0:i32, %102
%104 = phi %64, %103, 0:i32
%105 = phi %2, %84, %86, %86, %86, %86, %104
%106 = phi %77, %78, %105
%107 = phi %76, %74, %106
%108 = phi %75, %74, %107
%109 = phi %1, %74, %108
%110 = add %0, %109
%111:i32 = var
blockpc %1 0 %111 1
%112:i32 = var
blockpc %1 1 %112 1
%113:i32 = var
blockpc %3 0 %113 1
%114:i32 = var
blockpc %3 1 %114 1
%115:i32 = var
blockpc %11 0 %115 1
%116:i32 = var
blockpc %11 1 %116 1
%117:i32 = var
blockpc %12 0 %117 1
%118:i32 = var
blockpc %12 1 %118 1
%119:i32 = var
blockpc %15 0 %119 1
%120:i32 = var
blockpc %15 1 %120 1
%121:i32 = var
blockpc %16 0 %121 1
%122:i32 = var
blockpc %16 1 %122 1
%123:i32 = var
blockpc %27 0 %123 1
%124:i32 = var
blockpc %27 1 %124 1
%125:i32 = var
blockpc %43 0 %125 1
%126:i32 = var
blockpc %43 1 %126 1
%127:i32 = var
blockpc %50 0 %127 1
%128:i32 = var
blockpc %50 1 %128 1
%129:i32 = var
blockpc %51 0 %129 1
%130:i32 = var
blockpc %51 1 %130 1
%131:i32 = var
blockpc %56 0 %131 1
%132:i32 = var
blockpc %56 1 %132 1
%133:i32 = var
blockpc %57 0 %133 1
%134:i32 = var
blockpc %57 1 %134 1
%135:i32 = var
blockpc %58 0 %135 1
%136:i32 = var
blockpc %58 1 %136 1
%137:i32 = var
blockpc %64 0 %137 1
%138:i32 = var
blockpc %64 1 %138 1
%139:i32 = var
blockpc %75 0 %139 1
%140:i32 = var
blockpc %75 1 %140 1
%141:i32 = var
blockpc %76 0 %141 1
%142:i32 = var
blockpc %76 1 %142 1
%143:i32 = var
blockpc %77 0 %143 1
%144:i32 = var
blockpc %77 1 %144 1
%145:i32 = var
%146:i32 = var
%147:i32 = var
%148:i32 = var
%149:i32 = var
pc %145 1
pc %146 1
pc %147 1
pc %148 1
pc %149 1
infer %110


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3 = block 2
%4:i32 = var
%5 = phi %3, 4096:i32, %4
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %9, %10
%18 = phi %15, -1:i32, %17
%19 = phi %11, %14, %18
%20 = phi %6, %10, %19
%21 = add %20, 47:i32 (hasExternalUses)
%22 = add %5, %21 (hasExternalUses)
%23:i32 = var
%24 = sub %22, %23
%25 = sub 0:i32, %5 (hasExternalUses)
%26 = and %24, %25 (hasExternalUses)
%27 = block 2
%28:i32 = var
%29 = add %28, -1:i32 (hasExternalUses)
%30:i32 = var
%31 = add %29, %30
%32:i32 = var
%33 = and %31, %32
%34 = sub %33, %30
%35 = phi %27, 0:i32, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = add %35, %39 (hasExternalUses)
%41 = block 2
%42:i32 = var
%43 = block 2
%44:i32 = var
%45 = phi %7, %44, 0:i32
%46 = phi %16, 0:i32, %45
%47 = phi %15, 0:i32, %46
%48 = phi %11, 0:i32, %47
%49 = phi %6, %45, %48
%50 = block 2
%51 = block 2
%52 = phi %51, %49, %26
%53 = phi %50, %52, %49
%54 = phi %43, %49, %53
%55 = phi %36, %42, %54
%56 = block 2
%57 = block 2
%58 = block 2
%59 = phi %58, %40, %55
%60 = phi %57, %55, %59
%61 = phi %56, %55, %60
%62 = phi %41, %55, %61
%63:i32 = var
%64 = block 2
%65:i32 = var
%66:i32 = var
%67 = phi %7, %66, 0:i32
%68 = phi %16, 0:i32, %67
%69 = phi %15, 0:i32, %68
%70 = phi %11, 0:i32, %69
%71 = phi %6, %67, %70
%72 = phi %36, %65, %71
%73 = phi %64, %72, %71
%74 = phi %2, %26, %40, %62, %62, %63, %73
%75 = block 2
%76 = block 2
%77 = block 2
%78:i32 = var
%79:i32 = var
%80 = phi %7, %79, 0:i32
%81 = phi %16, 0:i32, %80
%82 = phi %15, 0:i32, %81
%83 = phi %11, 0:i32, %82
%84 = phi %6, %80, %83
%85:i32 = var
%86 = phi %36, %85, %84
%87 = block 3
%88:i32 = var
%89:i32 = var
%90 = phi %7, %89, 0:i32
%91 = phi %16, 0:i32, %90
%92 = phi %15, 0:i32, %91
%93 = phi %11, 0:i32, %92
%94 = phi %6, %90, %93
%95 = phi %51, %26, %94
%96 = phi %50, %95, 0:i32
%97 = phi %43, %94, %96
%98 = phi %36, %88, %97
%99 = phi %58, %98, 0:i32
%100 = phi %57, 0:i32, %99
%101 = phi %56, %98, %100
%102 = phi %41, 0:i32, %101
%103 = phi %87, 0:i32, 0:i32, %102
%104 = phi %64, %103, 0:i32
%105 = phi %2, %84, %86, %86, %86, %86, %104
%106 = phi %77, %78, %105
%107 = phi %76, %74, %106
%108 = phi %75, %74, %107
%109 = phi %1, %74, %108
%110 = add %0, %109
%111:i32 = var
blockpc %1 0 %111 1
%112:i32 = var
blockpc %1 1 %112 1
%113:i32 = var
blockpc %3 0 %113 1
%114:i32 = var
blockpc %3 1 %114 1
%115:i32 = var
blockpc %11 0 %115 1
%116:i32 = var
blockpc %11 1 %116 1
%117:i32 = var
blockpc %12 0 %117 1
%118:i32 = var
blockpc %12 1 %118 1
%119:i32 = var
blockpc %15 0 %119 1
%120:i32 = var
blockpc %15 1 %120 1
%121:i32 = var
blockpc %16 0 %121 1
%122:i32 = var
blockpc %16 1 %122 1
%123:i32 = var
blockpc %27 0 %123 1
%124:i32 = var
blockpc %27 1 %124 1
%125:i32 = var
blockpc %43 0 %125 1
%126:i32 = var
blockpc %43 1 %126 1
%127:i32 = var
blockpc %50 0 %127 1
%128:i32 = var
blockpc %50 1 %128 1
%129:i32 = var
blockpc %51 0 %129 1
%130:i32 = var
blockpc %51 1 %130 1
%131:i32 = var
blockpc %56 0 %131 1
%132:i32 = var
blockpc %56 1 %132 1
%133:i32 = var
blockpc %57 0 %133 1
%134:i32 = var
blockpc %57 1 %134 1
%135:i32 = var
blockpc %58 0 %135 1
%136:i32 = var
blockpc %58 1 %136 1
%137:i32 = var
blockpc %64 0 %137 1
%138:i32 = var
blockpc %64 1 %138 1
%139:i32 = var
blockpc %75 0 %139 1
%140:i32 = var
blockpc %75 1 %140 1
%141:i32 = var
blockpc %76 0 %141 1
%142:i32 = var
blockpc %76 1 %142 1
%143:i32 = var
blockpc %77 0 %143 1
%144:i32 = var
blockpc %77 1 %144 1
%145:i32 = var
%146:i32 = var
%147:i32 = var
%148:i32 = var
%149:i32 = var
pc %145 1
pc %146 1
pc %147 1
pc %148 1
pc %149 1
infer %110


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2 = block 2
%3 = block 6
%4 = phi %3, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%5 = eq %4, 143:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8:i32 = var
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = phi %17, %18, 0:i32
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = phi %26, 0:i32, %19
%30 = phi %23, 0:i32, %29
%31 = phi %20, 0:i32, %30
%32 = phi %16, %19, %31
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = phi %36, %32, %8
%40 = phi %33, %39, %32
%41 = phi %13, %32, %40
%42 = phi %11, %12, %41
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52:i32 = var
%53 = phi %49, %52, %42
%54 = phi %46, %42, %53
%55 = phi %43, %42, %54
%56 = phi %10, %42, %55
%57 = block 2
%58:i32 = var
blockpc %57 0 %58 1
%59:i32 = var
blockpc %57 1 %59 1
%60:i32 = var
%61:i32 = var
%62 = phi %17, %61, 0:i32
%63 = phi %26, 0:i32, %62
%64 = phi %23, 0:i32, %63
%65 = phi %20, 0:i32, %64
%66 = phi %16, %62, %65
%67 = phi %11, %60, %66
%68 = phi %57, %67, %66
%69 = phi %3, %8, %9, %56, %56, %56, %68
%70 = block 2
%71:i32 = var
blockpc %70 0 %71 1
%72:i32 = var
blockpc %70 1 %72 1
%73 = block 2
%74:i32 = var
blockpc %73 0 %74 1
%75:i32 = var
blockpc %73 1 %75 1
%76:i32 = var
%77 = phi %73, %69, %76
%78 = phi %70, %69, %77
%79 = phi %2, %69, %78
%80 = ult %0, %79
%81:i32 = zext %80
%82:i32 = var
%83 = add %82, 0:i32; Replace bad zext operation
%84 = and %81, %83
%85 = ne %84, 0:i32
%86:i32 = var
%87:i32 = var
%88:i32 = var
%89:i32 = var
pc %85 1
pc %86 1
pc %87 1
pc %88 1
pc %89 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32 (hasExternalUses)
%2 = and %1, 7:i32
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81 = ult %0, %80
%82:i32 = zext %81
%83:i32 = var
%84 = add %83, 0:i32; Replace bad zext operation
%85 = and %82, %84
%86 = ne %85, 0:i32
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
pc %86 1
pc %87 1
pc %88 1
pc %89 1
pc %90 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32 (hasExternalUses)
%2 = sub 0:i32, %1
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81 = ult %0, %80
%82:i32 = zext %81
%83:i32 = var
%84 = add %83, 0:i32; Replace bad zext operation
%85 = and %82, %84
%86 = ne %85, 0:i32
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
pc %86 1
pc %87 1
pc %88 1
pc %89 1
pc %90 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32 (hasExternalUses)
%2 = sub 0:i32, %1
%3 = and %2, 7:i32
%4 = block 2
%5 = block 6
%6 = phi %5, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%7 = eq %6, 143:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10:i32 = var
%11:i32 = var
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18 = block 2
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, 0:i32
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = phi %28, 0:i32, %21
%32 = phi %25, 0:i32, %31
%33 = phi %22, 0:i32, %32
%34 = phi %18, %21, %33
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = phi %38, %34, %10
%42 = phi %35, %41, %34
%43 = phi %15, %34, %42
%44 = phi %13, %14, %43
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54:i32 = var
%55 = phi %51, %54, %44
%56 = phi %48, %44, %55
%57 = phi %45, %44, %56
%58 = phi %12, %44, %57
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62:i32 = var
%63:i32 = var
%64 = phi %19, %63, 0:i32
%65 = phi %28, 0:i32, %64
%66 = phi %25, 0:i32, %65
%67 = phi %22, 0:i32, %66
%68 = phi %18, %64, %67
%69 = phi %13, %62, %68
%70 = phi %59, %69, %68
%71 = phi %5, %10, %11, %58, %58, %58, %70
%72 = block 2
%73:i32 = var
blockpc %72 0 %73 1
%74:i32 = var
blockpc %72 1 %74 1
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78:i32 = var
%79 = phi %75, %71, %78
%80 = phi %72, %71, %79
%81 = phi %4, %71, %80
%82 = ult %0, %81
%83:i32 = zext %82
%84:i32 = var
%85 = add %84, 0:i32; Replace bad zext operation
%86 = and %83, %85
%87 = ne %86, 0:i32
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91:i32 = var
pc %87 1
pc %88 1
pc %89 1
pc %90 1
pc %91 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32 (hasExternalUses)
%2 = and %1, 7:i32
%3 = eq %2, 0:i32
%4 = block 2
%5 = block 6
%6 = phi %5, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%7 = eq %6, 143:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10:i32 = var
%11:i32 = var
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18 = block 2
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, 0:i32
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = phi %28, 0:i32, %21
%32 = phi %25, 0:i32, %31
%33 = phi %22, 0:i32, %32
%34 = phi %18, %21, %33
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = phi %38, %34, %10
%42 = phi %35, %41, %34
%43 = phi %15, %34, %42
%44 = phi %13, %14, %43
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54:i32 = var
%55 = phi %51, %54, %44
%56 = phi %48, %44, %55
%57 = phi %45, %44, %56
%58 = phi %12, %44, %57
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62:i32 = var
%63:i32 = var
%64 = phi %19, %63, 0:i32
%65 = phi %28, 0:i32, %64
%66 = phi %25, 0:i32, %65
%67 = phi %22, 0:i32, %66
%68 = phi %18, %64, %67
%69 = phi %13, %62, %68
%70 = phi %59, %69, %68
%71 = phi %5, %10, %11, %58, %58, %58, %70
%72 = block 2
%73:i32 = var
blockpc %72 0 %73 1
%74:i32 = var
blockpc %72 1 %74 1
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78:i32 = var
%79 = phi %75, %71, %78
%80 = phi %72, %71, %79
%81 = phi %4, %71, %80
%82 = ult %0, %81
%83:i32 = zext %82
%84:i32 = var
%85 = add %84, 0:i32; Replace bad zext operation
%86 = and %83, %85
%87 = ne %86, 0:i32
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91:i32 = var
pc %87 1
pc %88 1
pc %89 1
pc %90 1
pc %91 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = add %0, 8:i32 (hasExternalUses)
%3 = sub 0:i32, %2
%4 = and %3, 7:i32 (hasExternalUses)
%5 = phi %1, 0:i32, %4
%6 = add %0, %5
%7 = and %2, 7:i32
%8 = eq %7, 0:i32
blockpc %1 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %1 1 %10 1
%11 = block 2
%12 = block 6
%13 = phi %12, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%14 = eq %13, 143:i32
blockpc %11 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %11 1 %16 1
%17:i32 = var
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26 = block 2
%27:i32 = var
%28 = phi %26, %27, 0:i32
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = phi %35, 0:i32, %28
%39 = phi %32, 0:i32, %38
%40 = phi %29, 0:i32, %39
%41 = phi %25, %28, %40
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = phi %45, %41, %17
%49 = phi %42, %48, %41
%50 = phi %22, %41, %49
%51 = phi %20, %21, %50
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62 = phi %58, %61, %51
%63 = phi %55, %51, %62
%64 = phi %52, %51, %63
%65 = phi %19, %51, %64
%66 = block 2
%67:i32 = var
blockpc %66 0 %67 1
%68:i32 = var
blockpc %66 1 %68 1
%69:i32 = var
%70:i32 = var
%71 = phi %26, %70, 0:i32
%72 = phi %35, 0:i32, %71
%73 = phi %32, 0:i32, %72
%74 = phi %29, 0:i32, %73
%75 = phi %25, %71, %74
%76 = phi %20, %69, %75
%77 = phi %66, %76, %75
%78 = phi %12, %17, %18, %65, %65, %65, %77
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82 = block 2
%83:i32 = var
blockpc %82 0 %83 1
%84:i32 = var
blockpc %82 1 %84 1
%85:i32 = var
%86 = phi %82, %78, %85
%87 = phi %79, %78, %86
%88 = phi %11, %78, %87
%89 = ult %0, %88
%90:i32 = zext %89
%91:i32 = var
%92 = add %91, 0:i32; Replace bad zext operation
%93 = and %90, %92
%94 = ne %93, 0:i32
%95:i32 = var
%96:i32 = var
%97:i32 = var
%98:i32 = var
pc %94 1
pc %95 1
pc %96 1
pc %97 1
pc %98 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3 = block 2
%4:i32 = var
%5 = phi %3, 4096:i32, %4
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %9, %10
%18 = phi %15, -1:i32, %17
%19 = phi %11, %14, %18
%20 = phi %6, %10, %19
%21 = add %20, 47:i32 (hasExternalUses)
%22 = add %5, %21 (hasExternalUses)
%23:i32 = var
%24 = sub %22, %23
%25 = sub 0:i32, %5 (hasExternalUses)
%26 = and %24, %25 (hasExternalUses)
%27 = block 2
%28:i32 = var
%29:i32 = var
%30 = add %28, %29
%31:i32 = var
%32 = and %30, %31
%33 = sub %32, %29
%34 = phi %27, 0:i32, %33
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %37
%39 = add %34, %38 (hasExternalUses)
%40 = block 2
%41:i32 = var
%42 = block 2
%43:i32 = var
%44 = phi %7, %43, 0:i32
%45 = phi %16, 0:i32, %44
%46 = phi %15, 0:i32, %45
%47 = phi %11, 0:i32, %46
%48 = phi %6, %44, %47
%49 = block 2
%50 = block 2
%51 = phi %50, %48, %26
%52 = phi %49, %51, %48
%53 = phi %42, %48, %52
%54 = phi %35, %41, %53
%55 = block 2
%56 = block 2
%57 = block 2
%58 = phi %57, %39, %54
%59 = phi %56, %54, %58
%60 = phi %55, %54, %59
%61 = phi %40, %54, %60
%62:i32 = var
%63 = block 2
%64:i32 = var
%65:i32 = var
%66 = phi %7, %65, 0:i32
%67 = phi %16, 0:i32, %66
%68 = phi %15, 0:i32, %67
%69 = phi %11, 0:i32, %68
%70 = phi %6, %66, %69
%71 = phi %35, %64, %70
%72 = phi %63, %71, %70
%73 = phi %2, %26, %39, %61, %61, %62, %72
%74 = block 2
%75 = block 2
%76 = block 2
%77:i32 = var
%78:i32 = var
%79 = phi %7, %78, 0:i32
%80 = phi %16, 0:i32, %79
%81 = phi %15, 0:i32, %80
%82 = phi %11, 0:i32, %81
%83 = phi %6, %79, %82
%84:i32 = var
%85 = phi %35, %84, %83
%86 = block 3
%87:i32 = var
%88:i32 = var
%89 = phi %7, %88, 0:i32
%90 = phi %16, 0:i32, %89
%91 = phi %15, 0:i32, %90
%92 = phi %11, 0:i32, %91
%93 = phi %6, %89, %92
%94 = phi %50, %26, %93
%95 = phi %49, %94, 0:i32
%96 = phi %42, %93, %95
%97 = phi %35, %87, %96
%98 = phi %57, %97, 0:i32
%99 = phi %56, 0:i32, %98
%100 = phi %55, %97, %99
%101 = phi %40, 0:i32, %100
%102 = phi %86, 0:i32, 0:i32, %101
%103 = phi %63, %102, 0:i32
%104 = phi %2, %83, %85, %85, %85, %85, %103
%105 = phi %76, %77, %104
%106 = phi %75, %73, %105
%107 = phi %74, %73, %106
%108 = phi %1, %73, %107
%109 = add %0, %108 (hasExternalUses)
%110 = block 2
%111:i32 = var
%112 = phi %110, 0:i32, %111
%113 = sub %109, %112
%114:i32 = var
blockpc %1 0 %114 1
%115:i32 = var
blockpc %1 1 %115 1
%116:i32 = var
blockpc %3 0 %116 1
%117:i32 = var
blockpc %3 1 %117 1
%118:i32 = var
blockpc %11 0 %118 1
%119:i32 = var
blockpc %11 1 %119 1
%120:i32 = var
blockpc %12 0 %120 1
%121:i32 = var
blockpc %12 1 %121 1
%122:i32 = var
blockpc %15 0 %122 1
%123:i32 = var
blockpc %15 1 %123 1
%124:i32 = var
blockpc %16 0 %124 1
%125:i32 = var
blockpc %16 1 %125 1
%126:i32 = var
blockpc %27 0 %126 1
%127:i32 = var
blockpc %27 1 %127 1
%128:i32 = var
blockpc %42 0 %128 1
%129:i32 = var
blockpc %42 1 %129 1
%130:i32 = var
blockpc %49 0 %130 1
%131:i32 = var
blockpc %49 1 %131 1
%132:i32 = var
blockpc %50 0 %132 1
%133:i32 = var
blockpc %50 1 %133 1
%134:i32 = var
blockpc %55 0 %134 1
%135:i32 = var
blockpc %55 1 %135 1
%136:i32 = var
blockpc %56 0 %136 1
%137:i32 = var
blockpc %56 1 %137 1
%138:i32 = var
blockpc %57 0 %138 1
%139:i32 = var
blockpc %57 1 %139 1
%140:i32 = var
blockpc %63 0 %140 1
%141:i32 = var
blockpc %63 1 %141 1
%142:i32 = var
blockpc %74 0 %142 1
%143:i32 = var
blockpc %74 1 %143 1
%144:i32 = var
blockpc %75 0 %144 1
%145:i32 = var
blockpc %75 1 %145 1
%146:i32 = var
blockpc %76 0 %146 1
%147:i32 = var
blockpc %76 1 %147 1
%148:i32 = var
blockpc %110 0 %148 1
%149:i32 = var
blockpc %110 1 %149 1
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
%154:i32 = var
pc %150 1
pc %151 1
pc %152 1
pc %153 1
pc %154 1
infer %113


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = add %0, 8:i32 (hasExternalUses)
%3 = sub 0:i32, %2
%4 = and %3, 7:i32 (hasExternalUses)
%5 = phi %1, 0:i32, %4
%6 = add %0, %5 (hasExternalUses)
%7 = add %6, 4:i32
%8 = and %2, 7:i32
%9 = eq %8, 0:i32
blockpc %1 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %1 1 %11 1
%12 = block 2
%13 = block 6
%14 = phi %13, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%15 = eq %14, 143:i32
blockpc %12 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %12 1 %17 1
%18:i32 = var
%19:i32 = var
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, 0:i32
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = phi %36, 0:i32, %29
%40 = phi %33, 0:i32, %39
%41 = phi %30, 0:i32, %40
%42 = phi %26, %29, %41
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = phi %46, %42, %18
%50 = phi %43, %49, %42
%51 = phi %23, %42, %50
%52 = phi %21, %22, %51
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62:i32 = var
%63 = phi %59, %62, %52
%64 = phi %56, %52, %63
%65 = phi %53, %52, %64
%66 = phi %20, %52, %65
%67 = block 2
%68:i32 = var
blockpc %67 0 %68 1
%69:i32 = var
blockpc %67 1 %69 1
%70:i32 = var
%71:i32 = var
%72 = phi %27, %71, 0:i32
%73 = phi %36, 0:i32, %72
%74 = phi %33, 0:i32, %73
%75 = phi %30, 0:i32, %74
%76 = phi %26, %72, %75
%77 = phi %21, %70, %76
%78 = phi %67, %77, %76
%79 = phi %13, %18, %19, %66, %66, %66, %78
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83 = block 2
%84:i32 = var
blockpc %83 0 %84 1
%85:i32 = var
blockpc %83 1 %85 1
%86:i32 = var
%87 = phi %83, %79, %86
%88 = phi %80, %79, %87
%89 = phi %12, %79, %88
%90 = ult %0, %89
%91:i32 = zext %90
%92:i32 = var
%93 = add %92, 0:i32; Replace bad zext operation
%94 = and %91, %93
%95 = ne %94, 0:i32
%96:i32 = var
%97:i32 = var
%98:i32 = var
%99:i32 = var
pc %95 1
pc %96 1
pc %97 1
pc %98 1
pc %99 1
infer %7


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3 = block 2
%4:i32 = var
%5 = phi %3, 4096:i32, %4
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %9, %10
%18 = phi %15, -1:i32, %17
%19 = phi %11, %14, %18
%20 = phi %6, %10, %19
%21 = add %20, 47:i32 (hasExternalUses)
%22 = add %5, %21 (hasExternalUses)
%23:i32 = var
%24 = sub %22, %23
%25 = sub 0:i32, %5 (hasExternalUses)
%26 = and %24, %25 (hasExternalUses)
%27 = block 2
%28:i32 = var
%29:i32 = var
%30 = and %28, %29
%31:i32 = var
%32 = sub %30, %31
%33 = phi %27, 0:i32, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %36
%38 = add %33, %37 (hasExternalUses)
%39 = block 2
%40:i32 = var
%41 = block 2
%42:i32 = var
%43 = phi %7, %42, 0:i32
%44 = phi %16, 0:i32, %43
%45 = phi %15, 0:i32, %44
%46 = phi %11, 0:i32, %45
%47 = phi %6, %43, %46
%48 = block 2
%49 = block 2
%50 = phi %49, %47, %26
%51 = phi %48, %50, %47
%52 = phi %41, %47, %51
%53 = phi %34, %40, %52
%54 = block 2
%55 = block 2
%56 = block 2
%57 = phi %56, %38, %53
%58 = phi %55, %53, %57
%59 = phi %54, %53, %58
%60 = phi %39, %53, %59
%61:i32 = var
%62 = block 2
%63:i32 = var
%64:i32 = var
%65 = phi %7, %64, 0:i32
%66 = phi %16, 0:i32, %65
%67 = phi %15, 0:i32, %66
%68 = phi %11, 0:i32, %67
%69 = phi %6, %65, %68
%70 = phi %34, %63, %69
%71 = phi %62, %70, %69
%72 = phi %2, %26, %38, %60, %60, %61, %71
%73 = block 2
%74 = block 2
%75 = block 2
%76:i32 = var
%77:i32 = var
%78 = phi %7, %77, 0:i32
%79 = phi %16, 0:i32, %78
%80 = phi %15, 0:i32, %79
%81 = phi %11, 0:i32, %80
%82 = phi %6, %78, %81
%83:i32 = var
%84 = phi %34, %83, %82
%85 = block 3
%86:i32 = var
%87:i32 = var
%88 = phi %7, %87, 0:i32
%89 = phi %16, 0:i32, %88
%90 = phi %15, 0:i32, %89
%91 = phi %11, 0:i32, %90
%92 = phi %6, %88, %91
%93 = phi %49, %26, %92
%94 = phi %48, %93, 0:i32
%95 = phi %41, %92, %94
%96 = phi %34, %86, %95
%97 = phi %56, %96, 0:i32
%98 = phi %55, 0:i32, %97
%99 = phi %54, %96, %98
%100 = phi %39, 0:i32, %99
%101 = phi %85, 0:i32, 0:i32, %100
%102 = phi %62, %101, 0:i32
%103 = phi %2, %82, %84, %84, %84, %84, %102
%104 = phi %75, %76, %103
%105 = phi %74, %72, %104
%106 = phi %73, %72, %105
%107 = phi %1, %72, %106
%108 = add %0, %107 (hasExternalUses)
%109 = block 2
%110:i32 = var
%111 = phi %109, 0:i32, %110
%112 = sub %108, %111 (hasExternalUses)
%113 = or %112, 1:i32
%114:i32 = var
blockpc %1 0 %114 1
%115:i32 = var
blockpc %1 1 %115 1
%116:i32 = var
blockpc %3 0 %116 1
%117:i32 = var
blockpc %3 1 %117 1
%118:i32 = var
blockpc %11 0 %118 1
%119:i32 = var
blockpc %11 1 %119 1
%120:i32 = var
blockpc %12 0 %120 1
%121:i32 = var
blockpc %12 1 %121 1
%122:i32 = var
blockpc %15 0 %122 1
%123:i32 = var
blockpc %15 1 %123 1
%124:i32 = var
blockpc %16 0 %124 1
%125:i32 = var
blockpc %16 1 %125 1
%126:i32 = var
blockpc %27 0 %126 1
%127:i32 = var
blockpc %27 1 %127 1
%128:i32 = var
blockpc %41 0 %128 1
%129:i32 = var
blockpc %41 1 %129 1
%130:i32 = var
blockpc %48 0 %130 1
%131:i32 = var
blockpc %48 1 %131 1
%132:i32 = var
blockpc %49 0 %132 1
%133:i32 = var
blockpc %49 1 %133 1
%134:i32 = var
blockpc %54 0 %134 1
%135:i32 = var
blockpc %54 1 %135 1
%136:i32 = var
blockpc %55 0 %136 1
%137:i32 = var
blockpc %55 1 %137 1
%138:i32 = var
blockpc %56 0 %138 1
%139:i32 = var
blockpc %56 1 %139 1
%140:i32 = var
blockpc %62 0 %140 1
%141:i32 = var
blockpc %62 1 %141 1
%142:i32 = var
blockpc %73 0 %142 1
%143:i32 = var
blockpc %73 1 %143 1
%144:i32 = var
blockpc %74 0 %144 1
%145:i32 = var
blockpc %74 1 %145 1
%146:i32 = var
blockpc %75 0 %146 1
%147:i32 = var
blockpc %75 1 %147 1
%148:i32 = var
blockpc %109 0 %148 1
%149:i32 = var
blockpc %109 1 %149 1
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
%154:i32 = var
pc %150 1
pc %151 1
pc %152 1
pc %153 1
pc %154 1
infer %113


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = block 2
%3 = block 6
%4 = block 2
%5:i32 = var
%6 = phi %4, 4096:i32, %5
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %10, %11
%19 = phi %16, -1:i32, %18
%20 = phi %12, %15, %19
%21 = phi %7, %11, %20
%22 = add %21, 47:i32 (hasExternalUses)
%23 = add %6, %22 (hasExternalUses)
%24:i32 = var
%25 = sub %23, %24
%26 = sub 0:i32, %6 (hasExternalUses)
%27 = and %25, %26 (hasExternalUses)
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = add %29, %30
%32:i32 = var
%33 = and %31, %32
%34 = sub %33, %30
%35 = phi %28, 0:i32, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = add %35, %39 (hasExternalUses)
%41 = block 2
%42:i32 = var
%43 = block 2
%44:i32 = var
%45 = phi %8, %44, 0:i32
%46 = phi %17, 0:i32, %45
%47 = phi %16, 0:i32, %46
%48 = phi %12, 0:i32, %47
%49 = phi %7, %45, %48
%50 = block 2
%51 = block 2
%52 = phi %51, %49, %27
%53 = phi %50, %52, %49
%54 = phi %43, %49, %53
%55 = phi %36, %42, %54
%56 = block 2
%57 = block 2
%58 = block 2
%59 = phi %58, %40, %55
%60 = phi %57, %55, %59
%61 = phi %56, %55, %60
%62 = phi %41, %55, %61
%63:i32 = var
%64 = block 2
%65:i32 = var
%66:i32 = var
%67 = phi %8, %66, 0:i32
%68 = phi %17, 0:i32, %67
%69 = phi %16, 0:i32, %68
%70 = phi %12, 0:i32, %69
%71 = phi %7, %67, %70
%72 = phi %36, %65, %71
%73 = phi %64, %72, %71
%74 = phi %3, %27, %40, %62, %62, %63, %73
%75 = block 2
%76 = block 2
%77 = block 2
%78:i32 = var
%79:i32 = var
%80 = phi %8, %79, 0:i32
%81 = phi %17, 0:i32, %80
%82 = phi %16, 0:i32, %81
%83 = phi %12, 0:i32, %82
%84 = phi %7, %80, %83
%85:i32 = var
%86 = phi %36, %85, %84
%87 = block 3
%88:i32 = var
%89:i32 = var
%90 = phi %8, %89, 0:i32
%91 = phi %17, 0:i32, %90
%92 = phi %16, 0:i32, %91
%93 = phi %12, 0:i32, %92
%94 = phi %7, %90, %93
%95 = phi %51, %27, %94
%96 = phi %50, %95, 0:i32
%97 = phi %43, %94, %96
%98 = phi %36, %88, %97
%99 = phi %58, %98, 0:i32
%100 = phi %57, 0:i32, %99
%101 = phi %56, %98, %100
%102 = phi %41, 0:i32, %101
%103 = phi %87, 0:i32, 0:i32, %102
%104 = phi %64, %103, 0:i32
%105 = phi %3, %84, %86, %86, %86, %86, %104
%106 = phi %77, %78, %105
%107 = phi %76, %74, %106
%108 = phi %75, %74, %107
%109 = phi %2, %74, %108
%110 = add %1, %109 (hasExternalUses)
%111 = add %0, %110
%112:i32 = var
blockpc %2 0 %112 1
%113:i32 = var
blockpc %2 1 %113 1
%114:i32 = var
blockpc %4 0 %114 1
%115:i32 = var
blockpc %4 1 %115 1
%116:i32 = var
blockpc %12 0 %116 1
%117:i32 = var
blockpc %12 1 %117 1
%118:i32 = var
blockpc %13 0 %118 1
%119:i32 = var
blockpc %13 1 %119 1
%120:i32 = var
blockpc %16 0 %120 1
%121:i32 = var
blockpc %16 1 %121 1
%122:i32 = var
blockpc %17 0 %122 1
%123:i32 = var
blockpc %17 1 %123 1
%124:i32 = var
blockpc %28 0 %124 1
%125:i32 = var
blockpc %28 1 %125 1
%126:i32 = var
blockpc %43 0 %126 1
%127:i32 = var
blockpc %43 1 %127 1
%128:i32 = var
blockpc %50 0 %128 1
%129:i32 = var
blockpc %50 1 %129 1
%130:i32 = var
blockpc %51 0 %130 1
%131:i32 = var
blockpc %51 1 %131 1
%132:i32 = var
blockpc %56 0 %132 1
%133:i32 = var
blockpc %56 1 %133 1
%134:i32 = var
blockpc %57 0 %134 1
%135:i32 = var
blockpc %57 1 %135 1
%136:i32 = var
blockpc %58 0 %136 1
%137:i32 = var
blockpc %58 1 %137 1
%138:i32 = var
blockpc %64 0 %138 1
%139:i32 = var
blockpc %64 1 %139 1
%140:i32 = var
blockpc %75 0 %140 1
%141:i32 = var
blockpc %75 1 %141 1
%142:i32 = var
blockpc %76 0 %142 1
%143:i32 = var
blockpc %76 1 %143 1
%144:i32 = var
blockpc %77 0 %144 1
%145:i32 = var
blockpc %77 1 %145 1
%146:i32 = var
%147:i32 = var
%148:i32 = var
%149:i32 = var
%150:i32 = var
pc %146 1
pc %147 1
pc %148 1
pc %149 1
pc %150 1
infer %111


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = block 2
%3 = block 6
%4 = block 2
%5:i32 = var
%6 = phi %4, 4096:i32, %5
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %10, %11
%19 = phi %16, -1:i32, %18
%20 = phi %12, %15, %19
%21 = phi %7, %11, %20
%22 = add %21, 47:i32 (hasExternalUses)
%23 = add %6, %22 (hasExternalUses)
%24:i32 = var
%25 = sub %23, %24
%26 = sub 0:i32, %6 (hasExternalUses)
%27 = and %25, %26 (hasExternalUses)
%28 = block 2
%29:i32 = var
%30:i32 = var
%31 = and %29, %30
%32:i32 = var
%33 = sub %31, %32
%34 = phi %28, 0:i32, %33
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %37
%39 = add %34, %38 (hasExternalUses)
%40 = block 2
%41:i32 = var
%42 = block 2
%43:i32 = var
%44 = phi %8, %43, 0:i32
%45 = phi %17, 0:i32, %44
%46 = phi %16, 0:i32, %45
%47 = phi %12, 0:i32, %46
%48 = phi %7, %44, %47
%49 = block 2
%50 = block 2
%51 = phi %50, %48, %27
%52 = phi %49, %51, %48
%53 = phi %42, %48, %52
%54 = phi %35, %41, %53
%55 = block 2
%56 = block 2
%57 = block 2
%58 = phi %57, %39, %54
%59 = phi %56, %54, %58
%60 = phi %55, %54, %59
%61 = phi %40, %54, %60
%62:i32 = var
%63 = block 2
%64:i32 = var
%65:i32 = var
%66 = phi %8, %65, 0:i32
%67 = phi %17, 0:i32, %66
%68 = phi %16, 0:i32, %67
%69 = phi %12, 0:i32, %68
%70 = phi %7, %66, %69
%71 = phi %35, %64, %70
%72 = phi %63, %71, %70
%73 = phi %3, %27, %39, %61, %61, %62, %72
%74 = block 2
%75 = block 2
%76 = block 2
%77:i32 = var
%78:i32 = var
%79 = phi %8, %78, 0:i32
%80 = phi %17, 0:i32, %79
%81 = phi %16, 0:i32, %80
%82 = phi %12, 0:i32, %81
%83 = phi %7, %79, %82
%84:i32 = var
%85 = phi %35, %84, %83
%86 = block 3
%87:i32 = var
%88:i32 = var
%89 = phi %8, %88, 0:i32
%90 = phi %17, 0:i32, %89
%91 = phi %16, 0:i32, %90
%92 = phi %12, 0:i32, %91
%93 = phi %7, %89, %92
%94 = phi %50, %27, %93
%95 = phi %49, %94, 0:i32
%96 = phi %42, %93, %95
%97 = phi %35, %87, %96
%98 = phi %57, %97, 0:i32
%99 = phi %56, 0:i32, %98
%100 = phi %55, %97, %99
%101 = phi %40, 0:i32, %100
%102 = phi %86, 0:i32, 0:i32, %101
%103 = phi %63, %102, 0:i32
%104 = phi %3, %83, %85, %85, %85, %85, %103
%105 = phi %76, %77, %104
%106 = phi %75, %73, %105
%107 = phi %74, %73, %106
%108 = phi %2, %73, %107
%109 = add %1, %108 (hasExternalUses)
%110 = add %0, %109
%111 = add %110, 4:i32
%112:i32 = var
blockpc %2 0 %112 1
%113:i32 = var
blockpc %2 1 %113 1
%114:i32 = var
blockpc %4 0 %114 1
%115:i32 = var
blockpc %4 1 %115 1
%116:i32 = var
blockpc %12 0 %116 1
%117:i32 = var
blockpc %12 1 %117 1
%118:i32 = var
blockpc %13 0 %118 1
%119:i32 = var
blockpc %13 1 %119 1
%120:i32 = var
blockpc %16 0 %120 1
%121:i32 = var
blockpc %16 1 %121 1
%122:i32 = var
blockpc %17 0 %122 1
%123:i32 = var
blockpc %17 1 %123 1
%124:i32 = var
blockpc %28 0 %124 1
%125:i32 = var
blockpc %28 1 %125 1
%126:i32 = var
blockpc %42 0 %126 1
%127:i32 = var
blockpc %42 1 %127 1
%128:i32 = var
blockpc %49 0 %128 1
%129:i32 = var
blockpc %49 1 %129 1
%130:i32 = var
blockpc %50 0 %130 1
%131:i32 = var
blockpc %50 1 %131 1
%132:i32 = var
blockpc %55 0 %132 1
%133:i32 = var
blockpc %55 1 %133 1
%134:i32 = var
blockpc %56 0 %134 1
%135:i32 = var
blockpc %56 1 %135 1
%136:i32 = var
blockpc %57 0 %136 1
%137:i32 = var
blockpc %57 1 %137 1
%138:i32 = var
blockpc %63 0 %138 1
%139:i32 = var
blockpc %63 1 %139 1
%140:i32 = var
blockpc %74 0 %140 1
%141:i32 = var
blockpc %74 1 %141 1
%142:i32 = var
blockpc %75 0 %142 1
%143:i32 = var
blockpc %75 1 %143 1
%144:i32 = var
blockpc %76 0 %144 1
%145:i32 = var
blockpc %76 1 %145 1
%146:i32 = var
%147:i32 = var
%148:i32 = var
%149:i32 = var
%150:i32 = var
pc %146 1
pc %147 1
pc %148 1
pc %149 1
pc %150 1
infer %111


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51 = ult %49, %50
%52:i32 = var
blockpc %0 0 %52 1
%53:i32 = var
blockpc %0 1 %53 1
%54:i32 = var
blockpc %7 0 %54 1
%55:i32 = var
blockpc %7 1 %55 1
%56:i32 = var
blockpc %12 0 %56 1
%57:i32 = var
blockpc %12 1 %57 1
%58:i32 = var
blockpc %13 0 %58 1
%59:i32 = var
blockpc %13 1 %59 1
%60:i32 = var
blockpc %14 0 %60 1
%61:i32 = var
blockpc %14 1 %61 1
%62:i32 = var
blockpc %19 0 %62 1
%63:i32 = var
blockpc %19 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %25 0 %66 1
%67:i32 = var
blockpc %25 1 %67 1
%68:i32 = var
blockpc %26 0 %68 1
%69:i32 = var
blockpc %26 1 %69 1
%70:i32 = var
blockpc %27 0 %70 1
%71:i32 = var
blockpc %27 1 %71 1
%72:i32 = var
blockpc %33 0 %72 1
%73:i32 = var
blockpc %33 1 %73 1
%74:i32 = var
blockpc %44 0 %74 1
%75:i32 = var
blockpc %44 1 %75 1
%76:i32 = var
blockpc %45 0 %76 1
%77:i32 = var
blockpc %45 1 %77 1
%78:i32 = var
%79:i32 = var
pc %78 1
pc %79 1
infer %51


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110
%112:i32 = var
blockpc %0 0 %112 1
%113:i32 = var
blockpc %0 1 %113 1
%114:i32 = var
blockpc %7 0 %114 1
%115:i32 = var
blockpc %7 1 %115 1
%116:i32 = var
blockpc %12 0 %116 1
%117:i32 = var
blockpc %12 1 %117 1
%118:i32 = var
blockpc %13 0 %118 1
%119:i32 = var
blockpc %13 1 %119 1
%120:i32 = var
blockpc %14 0 %120 1
%121:i32 = var
blockpc %14 1 %121 1
%122:i32 = var
blockpc %19 0 %122 1
%123:i32 = var
blockpc %19 1 %123 1
%124:i32 = var
blockpc %20 0 %124 1
%125:i32 = var
blockpc %20 1 %125 1
%126:i32 = var
blockpc %25 0 %126 1
%127:i32 = var
blockpc %25 1 %127 1
%128:i32 = var
blockpc %26 0 %128 1
%129:i32 = var
blockpc %26 1 %129 1
%130:i32 = var
blockpc %27 0 %130 1
%131:i32 = var
blockpc %27 1 %131 1
%132:i32 = var
blockpc %33 0 %132 1
%133:i32 = var
blockpc %33 1 %133 1
%134:i32 = var
blockpc %44 0 %134 1
%135:i32 = var
blockpc %44 1 %135 1
%136:i32 = var
blockpc %45 0 %136 1
%137:i32 = var
blockpc %45 1 %137 1
%138:i32 = var
blockpc %78 0 %138 1
%139:i32 = var
blockpc %78 1 %139 1
%140:i32 = var
%141:i32 = var
pc %140 1
pc %141 1
infer %111


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55 = phi %10, %54, 0:i32
%56 = phi %15, 0:i32, %55
%57 = phi %14, 0:i32, %56
%58 = phi %13, 0:i32, %57
%59 = phi %9, %55, %58
%60 = phi %21, %59, %51
%61 = phi %20, %60, %59
%62 = phi %8, %59, %61
%63 = phi %6, %53, %62
%64 = phi %28, %52, %63
%65 = phi %27, %63, %64
%66 = phi %26, %63, %65
%67 = phi %5, %63, %66
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %10, %70, 0:i32
%72 = phi %15, 0:i32, %71
%73 = phi %14, 0:i32, %72
%74 = phi %13, 0:i32, %73
%75 = phi %9, %71, %74
%76 = phi %6, %69, %75
%77 = phi %34, %76, %75
%78 = phi %2, %51, %52, %67, %67, %68, %77
%79 = block 2
%80:i32 = var
%81:i32 = var
%82 = phi %10, %81, 0:i32
%83 = phi %15, 0:i32, %82
%84 = phi %14, 0:i32, %83
%85 = phi %13, 0:i32, %84
%86 = phi %9, %82, %85
%87:i32 = var
%88 = phi %6, %87, %86
%89 = block 3
%90:i32 = var
%91:i32 = var
%92 = phi %10, %91, 0:i32
%93 = phi %15, 0:i32, %92
%94 = phi %14, 0:i32, %93
%95 = phi %13, 0:i32, %94
%96 = phi %9, %92, %95
%97 = phi %21, %51, %96
%98 = phi %20, %97, 0:i32
%99 = phi %8, %96, %98
%100 = phi %6, %90, %99
%101 = phi %28, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %26, %100, %102
%104 = phi %5, 0:i32, %103
%105 = phi %89, 0:i32, 0:i32, %104
%106 = phi %34, %105, 0:i32
%107 = phi %2, %86, %88, %88, %88, %88, %106
%108 = phi %79, %80, %107
%109 = phi %46, %78, %108
%110 = phi %45, %78, %109
%111 = phi %1, %78, %110
%112 = add %50, %111 (hasExternalUses)
%113 = eq %0, %112
%114:i32 = var
blockpc %1 0 %114 1
%115:i32 = var
blockpc %1 1 %115 1
%116:i32 = var
blockpc %8 0 %116 1
%117:i32 = var
blockpc %8 1 %117 1
%118:i32 = var
blockpc %13 0 %118 1
%119:i32 = var
blockpc %13 1 %119 1
%120:i32 = var
blockpc %14 0 %120 1
%121:i32 = var
blockpc %14 1 %121 1
%122:i32 = var
blockpc %15 0 %122 1
%123:i32 = var
blockpc %15 1 %123 1
%124:i32 = var
blockpc %20 0 %124 1
%125:i32 = var
blockpc %20 1 %125 1
%126:i32 = var
blockpc %21 0 %126 1
%127:i32 = var
blockpc %21 1 %127 1
%128:i32 = var
blockpc %26 0 %128 1
%129:i32 = var
blockpc %26 1 %129 1
%130:i32 = var
blockpc %27 0 %130 1
%131:i32 = var
blockpc %27 1 %131 1
%132:i32 = var
blockpc %28 0 %132 1
%133:i32 = var
blockpc %28 1 %133 1
%134:i32 = var
blockpc %34 0 %134 1
%135:i32 = var
blockpc %34 1 %135 1
%136:i32 = var
blockpc %45 0 %136 1
%137:i32 = var
blockpc %45 1 %137 1
%138:i32 = var
blockpc %46 0 %138 1
%139:i32 = var
blockpc %46 1 %139 1
%140:i32 = var
blockpc %79 0 %140 1
%141:i32 = var
blockpc %79 1 %141 1
%142:i32 = var
%143:i32 = var
pc %142 1
pc %143 1
infer %113


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 6
%8 = phi %7, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%9 = eq %8, 143:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 4096:i32, %16
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = phi %26, 16:i32, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = phi %34, %21, %22
%38 = phi %31, -1:i32, %37
%39 = phi %23, %30, %38
%40 = phi %18, %22, %39
%41 = add %40, 47:i32
%42 = add %17, %41
%43:i32 = var
%44 = and %42, %43
%45 = block 2
%46:i32 = var
%47 = phi %45, %46, %44
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = phi %48, %47, %44
%52 = phi %7, %44, %47, %47, %47, %47, %51
%53 = ult %52, 2147483647:i32
blockpc %12 0 %53 1
%54:i32 = var
blockpc %12 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = phi %55, %8, 145:i32
%59 = phi %12, %8, %58
%60 = phi %6, %8, %59
%61 = eq %60, 145:i32
pc %5 1
pc %61 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 6
%8 = phi %7, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%9 = eq %8, 143:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 4096:i32, %16
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = phi %26, 16:i32, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = phi %34, %21, %22
%38 = phi %31, -1:i32, %37
%39 = phi %23, %30, %38
%40 = phi %18, %22, %39
%41 = add %40, 47:i32
%42 = add %17, %41
%43:i32 = var
%44 = and %42, %43
%45 = block 2
%46:i32 = var
%47 = phi %45, %46, %44
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = phi %48, %47, %44
%52 = phi %7, %44, %47, %47, %47, %47, %51
%53 = ult %52, 2147483647:i32
blockpc %12 0 %53 1
%54:i32 = var
blockpc %12 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = phi %55, %8, 145:i32
%59 = phi %12, %8, %58
%60 = phi %6, %8, %59
%61 = eq %60, 145:i32
pc %5 1
pc %61 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3 = block 6
%4 = phi %3, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%5 = block 2
%6 = block 2
%7 = phi %6, %4, 145:i32
%8 = phi %5, %4, %7
%9 = phi %2, %4, %8
%10 = phi %1, 154:i32, %9
%11 = phi %0, 162:i32, %10
%12 = eq %11, 162:i32
%13 = eq %4, 143:i32
blockpc %2 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %2 1 %15 1
%16 = block 2
%17:i32 = var
%18 = eq %17, 0:i32
blockpc %16 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %16 1 %20 1
%21:i32 = var
%22 = phi %16, 4096:i32, %21
%23 = block 2
%24 = block 2
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34:i32 = var
%35 = phi %31, 16:i32, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = phi %39, %26, %27
%43 = phi %36, -1:i32, %42
%44 = phi %28, %35, %43
%45 = phi %23, %27, %44
%46 = add %45, 47:i32
%47 = add %22, %46
%48:i32 = var
%49 = and %47, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, %51, %49
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = phi %53, %52, %49
%57 = phi %3, %49, %52, %52, %52, %52, %56
%58 = ult %57, 2147483647:i32
blockpc %5 0 %58 1
%59:i32 = var
blockpc %5 1 %59 1
%60:i32 = var
blockpc %6 0 %60 1
%61:i32 = var
blockpc %6 1 %61 1
%62:i32 = var
%63:i32 = var
pc %62 1
pc %63 1
infer %12


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 6
%6 = phi %5, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%7 = eq %6, 143:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = and %11, %12
%14 = block 2
%15:i32 = var
%16 = phi %14, %15, %13
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20 = phi %17, %16, %13
%21 = phi %5, %13, %16, %16, %16, %16, %20
%22 = ult %21, 2147483647:i32
blockpc %10 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %10 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = phi %25, %6, 145:i32
%29 = phi %10, %6, %28
%30 = phi %4, %6, %29
%31 = phi %3, 154:i32, %30
%32 = phi %2, 162:i32, %31
%33 = eq %32, 162:i32
%34:i32 = var
%35:i32 = var
pc %33 1
pc %34 1
pc %35 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 8:i32
%2 = block 2
%3 = block 2
%4 = block 2
%5 = block 6
%6 = phi %5, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%7 = eq %6, 143:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = block 2
%11:i32 = var
%12:i32 = var
%13 = and %11, %12
%14 = block 2
%15:i32 = var
%16 = phi %14, %15, %13
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20 = phi %17, %16, %13
%21 = phi %5, %13, %16, %16, %16, %16, %20
%22 = ult %21, 2147483647:i32
blockpc %10 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %10 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = phi %25, %6, 145:i32
%29 = phi %10, %6, %28
%30 = phi %4, %6, %29
%31 = phi %3, 154:i32, %30
%32 = phi %2, 162:i32, %31
%33 = eq %32, 162:i32
%34:i32 = var
%35:i32 = var
pc %33 1
pc %34 1
pc %35 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 8:i32
%2 = eq %1, 0:i32
%3 = block 2
%4 = block 2
%5 = block 2
%6 = block 6
%7 = phi %6, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%8 = eq %7, 143:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = block 2
%12:i32 = var
%13:i32 = var
%14 = and %12, %13
%15 = block 2
%16:i32 = var
%17 = phi %15, %16, %14
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21 = phi %18, %17, %14
%22 = phi %6, %14, %17, %17, %17, %17, %21
%23 = ult %22, 2147483647:i32
blockpc %11 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %11 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = phi %26, %7, 145:i32
%30 = phi %11, %7, %29
%31 = phi %5, %7, %30
%32 = phi %4, 154:i32, %31
%33 = phi %3, 162:i32, %32
%34 = eq %33, 162:i32
%35:i32 = var
%36:i32 = var
pc %34 1
pc %35 1
pc %36 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = and %2, 8:i32
%4 = eq %3, 0:i32
%5 = block 2
%6 = block 2
%7 = block 2
%8 = block 6
%9 = phi %8, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%10 = eq %9, 143:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13 = block 2
%14:i32 = var
%15:i32 = var
%16 = and %14, %15
%17 = block 2
%18:i32 = var
%19 = phi %17, %18, %16
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = phi %20, %19, %16
%24 = phi %8, %16, %19, %19, %19, %19, %23
%25 = ult %24, 2147483647:i32
blockpc %13 0 %25 1
%26:i32 = var
blockpc %13 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, %9, 145:i32
%31 = phi %13, %9, %30
%32 = phi %7, %9, %31
%33 = phi %6, 154:i32, %32
%34 = phi %5, 162:i32, %33
%35 = eq %34, 162:i32
%36:i32 = var
%37:i32 = var
pc %4 1
pc %35 1
pc %36 1
pc %37 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3 = block 2
%4:i32 = var
%5 = phi %3, 4096:i32, %4
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %9, %10
%18 = phi %15, -1:i32, %17
%19 = phi %11, %14, %18
%20 = phi %6, %10, %19
%21 = add %20, 47:i32 (hasExternalUses)
%22 = add %5, %21 (hasExternalUses)
%23:i32 = var
%24 = sub %22, %23
%25 = sub 0:i32, %5 (hasExternalUses)
%26 = and %24, %25 (hasExternalUses)
%27 = block 2
%28:i32 = var
%29 = add %28, -1:i32 (hasExternalUses)
%30:i32 = var
%31 = add %29, %30
%32:i32 = var
%33 = and %31, %32
%34 = sub %33, %30
%35 = phi %27, 0:i32, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %36, %37, %38
%40 = add %35, %39 (hasExternalUses)
%41 = block 2
%42:i32 = var
%43 = block 2
%44:i32 = var
%45 = phi %7, %44, 0:i32
%46 = phi %16, 0:i32, %45
%47 = phi %15, 0:i32, %46
%48 = phi %11, 0:i32, %47
%49 = phi %6, %45, %48
%50 = block 2
%51 = block 2
%52 = phi %51, %49, %26
%53 = phi %50, %52, %49
%54 = phi %43, %49, %53
%55 = phi %36, %42, %54
%56 = block 2
%57 = block 2
%58 = block 2
%59 = phi %58, %40, %55
%60 = phi %57, %55, %59
%61 = phi %56, %55, %60
%62 = phi %41, %55, %61
%63:i32 = var
%64 = block 2
%65:i32 = var
%66:i32 = var
%67 = phi %7, %66, 0:i32
%68 = phi %16, 0:i32, %67
%69 = phi %15, 0:i32, %68
%70 = phi %11, 0:i32, %69
%71 = phi %6, %67, %70
%72 = phi %36, %65, %71
%73 = phi %64, %72, %71
%74 = phi %2, %26, %40, %62, %62, %63, %73
%75 = block 2
%76 = block 2
%77 = block 2
%78:i32 = var
%79:i32 = var
%80 = phi %7, %79, 0:i32
%81 = phi %16, 0:i32, %80
%82 = phi %15, 0:i32, %81
%83 = phi %11, 0:i32, %82
%84 = phi %6, %80, %83
%85:i32 = var
%86 = phi %36, %85, %84
%87 = block 3
%88:i32 = var
%89:i32 = var
%90 = phi %7, %89, 0:i32
%91 = phi %16, 0:i32, %90
%92 = phi %15, 0:i32, %91
%93 = phi %11, 0:i32, %92
%94 = phi %6, %90, %93
%95 = phi %51, %26, %94
%96 = phi %50, %95, 0:i32
%97 = phi %43, %94, %96
%98 = phi %36, %88, %97
%99 = phi %58, %98, 0:i32
%100 = phi %57, 0:i32, %99
%101 = phi %56, %98, %100
%102 = phi %41, 0:i32, %101
%103 = phi %87, 0:i32, 0:i32, %102
%104 = phi %64, %103, 0:i32
%105 = phi %2, %84, %86, %86, %86, %86, %104
%106 = phi %77, %78, %105
%107 = phi %76, %74, %106
%108 = phi %75, %74, %107
%109 = phi %1, %74, %108
%110 = add %0, %109
%111:i32 = var
blockpc %1 0 %111 1
%112:i32 = var
blockpc %1 1 %112 1
%113:i32 = var
blockpc %3 0 %113 1
%114:i32 = var
blockpc %3 1 %114 1
%115:i32 = var
blockpc %11 0 %115 1
%116:i32 = var
blockpc %11 1 %116 1
%117:i32 = var
blockpc %12 0 %117 1
%118:i32 = var
blockpc %12 1 %118 1
%119:i32 = var
blockpc %15 0 %119 1
%120:i32 = var
blockpc %15 1 %120 1
%121:i32 = var
blockpc %16 0 %121 1
%122:i32 = var
blockpc %16 1 %122 1
%123:i32 = var
blockpc %27 0 %123 1
%124:i32 = var
blockpc %27 1 %124 1
%125:i32 = var
blockpc %43 0 %125 1
%126:i32 = var
blockpc %43 1 %126 1
%127:i32 = var
blockpc %50 0 %127 1
%128:i32 = var
blockpc %50 1 %128 1
%129:i32 = var
blockpc %51 0 %129 1
%130:i32 = var
blockpc %51 1 %130 1
%131:i32 = var
blockpc %56 0 %131 1
%132:i32 = var
blockpc %56 1 %132 1
%133:i32 = var
blockpc %57 0 %133 1
%134:i32 = var
blockpc %57 1 %134 1
%135:i32 = var
blockpc %58 0 %135 1
%136:i32 = var
blockpc %58 1 %136 1
%137:i32 = var
blockpc %64 0 %137 1
%138:i32 = var
blockpc %64 1 %138 1
%139:i32 = var
blockpc %75 0 %139 1
%140:i32 = var
blockpc %75 1 %140 1
%141:i32 = var
blockpc %76 0 %141 1
%142:i32 = var
blockpc %76 1 %142 1
%143:i32 = var
blockpc %77 0 %143 1
%144:i32 = var
blockpc %77 1 %144 1
%145:i32 = var
%146:i32 = var
%147:i32 = var
%148:i32 = var
pc %145 1
pc %146 1
pc %147 1
pc %148 1
infer %110


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32
%51:i32 = var
blockpc %0 0 %51 1
%52:i32 = var
blockpc %0 1 %52 1
%53:i32 = var
blockpc %7 0 %53 1
%54:i32 = var
blockpc %7 1 %54 1
%55:i32 = var
blockpc %12 0 %55 1
%56:i32 = var
blockpc %12 1 %56 1
%57:i32 = var
blockpc %13 0 %57 1
%58:i32 = var
blockpc %13 1 %58 1
%59:i32 = var
blockpc %14 0 %59 1
%60:i32 = var
blockpc %14 1 %60 1
%61:i32 = var
blockpc %19 0 %61 1
%62:i32 = var
blockpc %19 1 %62 1
%63:i32 = var
blockpc %20 0 %63 1
%64:i32 = var
blockpc %20 1 %64 1
%65:i32 = var
blockpc %25 0 %65 1
%66:i32 = var
blockpc %25 1 %66 1
%67:i32 = var
blockpc %26 0 %67 1
%68:i32 = var
blockpc %26 1 %68 1
%69:i32 = var
blockpc %27 0 %69 1
%70:i32 = var
blockpc %27 1 %70 1
%71:i32 = var
blockpc %33 0 %71 1
%72:i32 = var
blockpc %33 1 %72 1
%73:i32 = var
blockpc %44 0 %73 1
%74:i32 = var
blockpc %44 1 %74 1
%75:i32 = var
blockpc %45 0 %75 1
%76:i32 = var
blockpc %45 1 %76 1
%77:i32 = var
%78:i32 = var
%79:i32 = var
%80:i32 = var
pc %77 1
pc %78 1
pc %79 1
pc %80 1
infer %50


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32 (hasExternalUses)
%51 = and %50, 7:i32
%52:i32 = var
blockpc %0 0 %52 1
%53:i32 = var
blockpc %0 1 %53 1
%54:i32 = var
blockpc %7 0 %54 1
%55:i32 = var
blockpc %7 1 %55 1
%56:i32 = var
blockpc %12 0 %56 1
%57:i32 = var
blockpc %12 1 %57 1
%58:i32 = var
blockpc %13 0 %58 1
%59:i32 = var
blockpc %13 1 %59 1
%60:i32 = var
blockpc %14 0 %60 1
%61:i32 = var
blockpc %14 1 %61 1
%62:i32 = var
blockpc %19 0 %62 1
%63:i32 = var
blockpc %19 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %25 0 %66 1
%67:i32 = var
blockpc %25 1 %67 1
%68:i32 = var
blockpc %26 0 %68 1
%69:i32 = var
blockpc %26 1 %69 1
%70:i32 = var
blockpc %27 0 %70 1
%71:i32 = var
blockpc %27 1 %71 1
%72:i32 = var
blockpc %33 0 %72 1
%73:i32 = var
blockpc %33 1 %73 1
%74:i32 = var
blockpc %44 0 %74 1
%75:i32 = var
blockpc %44 1 %75 1
%76:i32 = var
blockpc %45 0 %76 1
%77:i32 = var
blockpc %45 1 %77 1
%78:i32 = var
%79:i32 = var
%80:i32 = var
%81:i32 = var
pc %78 1
pc %79 1
pc %80 1
pc %81 1
infer %51


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32 (hasExternalUses)
%51 = sub 0:i32, %50
%52:i32 = var
blockpc %0 0 %52 1
%53:i32 = var
blockpc %0 1 %53 1
%54:i32 = var
blockpc %7 0 %54 1
%55:i32 = var
blockpc %7 1 %55 1
%56:i32 = var
blockpc %12 0 %56 1
%57:i32 = var
blockpc %12 1 %57 1
%58:i32 = var
blockpc %13 0 %58 1
%59:i32 = var
blockpc %13 1 %59 1
%60:i32 = var
blockpc %14 0 %60 1
%61:i32 = var
blockpc %14 1 %61 1
%62:i32 = var
blockpc %19 0 %62 1
%63:i32 = var
blockpc %19 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %25 0 %66 1
%67:i32 = var
blockpc %25 1 %67 1
%68:i32 = var
blockpc %26 0 %68 1
%69:i32 = var
blockpc %26 1 %69 1
%70:i32 = var
blockpc %27 0 %70 1
%71:i32 = var
blockpc %27 1 %71 1
%72:i32 = var
blockpc %33 0 %72 1
%73:i32 = var
blockpc %33 1 %73 1
%74:i32 = var
blockpc %44 0 %74 1
%75:i32 = var
blockpc %44 1 %75 1
%76:i32 = var
blockpc %45 0 %76 1
%77:i32 = var
blockpc %45 1 %77 1
%78:i32 = var
%79:i32 = var
%80:i32 = var
%81:i32 = var
pc %78 1
pc %79 1
pc %80 1
pc %81 1
infer %51


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32 (hasExternalUses)
%51 = sub 0:i32, %50
%52 = and %51, 7:i32
%53:i32 = var
blockpc %0 0 %53 1
%54:i32 = var
blockpc %0 1 %54 1
%55:i32 = var
blockpc %7 0 %55 1
%56:i32 = var
blockpc %7 1 %56 1
%57:i32 = var
blockpc %12 0 %57 1
%58:i32 = var
blockpc %12 1 %58 1
%59:i32 = var
blockpc %13 0 %59 1
%60:i32 = var
blockpc %13 1 %60 1
%61:i32 = var
blockpc %14 0 %61 1
%62:i32 = var
blockpc %14 1 %62 1
%63:i32 = var
blockpc %19 0 %63 1
%64:i32 = var
blockpc %19 1 %64 1
%65:i32 = var
blockpc %20 0 %65 1
%66:i32 = var
blockpc %20 1 %66 1
%67:i32 = var
blockpc %25 0 %67 1
%68:i32 = var
blockpc %25 1 %68 1
%69:i32 = var
blockpc %26 0 %69 1
%70:i32 = var
blockpc %26 1 %70 1
%71:i32 = var
blockpc %27 0 %71 1
%72:i32 = var
blockpc %27 1 %72 1
%73:i32 = var
blockpc %33 0 %73 1
%74:i32 = var
blockpc %33 1 %74 1
%75:i32 = var
blockpc %44 0 %75 1
%76:i32 = var
blockpc %44 1 %76 1
%77:i32 = var
blockpc %45 0 %77 1
%78:i32 = var
blockpc %45 1 %78 1
%79:i32 = var
%80:i32 = var
%81:i32 = var
%82:i32 = var
pc %79 1
pc %80 1
pc %81 1
pc %82 1
infer %52


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32 (hasExternalUses)
%51 = and %50, 7:i32
%52 = eq %51, 0:i32
%53:i32 = var
blockpc %0 0 %53 1
%54:i32 = var
blockpc %0 1 %54 1
%55:i32 = var
blockpc %7 0 %55 1
%56:i32 = var
blockpc %7 1 %56 1
%57:i32 = var
blockpc %12 0 %57 1
%58:i32 = var
blockpc %12 1 %58 1
%59:i32 = var
blockpc %13 0 %59 1
%60:i32 = var
blockpc %13 1 %60 1
%61:i32 = var
blockpc %14 0 %61 1
%62:i32 = var
blockpc %14 1 %62 1
%63:i32 = var
blockpc %19 0 %63 1
%64:i32 = var
blockpc %19 1 %64 1
%65:i32 = var
blockpc %20 0 %65 1
%66:i32 = var
blockpc %20 1 %66 1
%67:i32 = var
blockpc %25 0 %67 1
%68:i32 = var
blockpc %25 1 %68 1
%69:i32 = var
blockpc %26 0 %69 1
%70:i32 = var
blockpc %26 1 %70 1
%71:i32 = var
blockpc %27 0 %71 1
%72:i32 = var
blockpc %27 1 %72 1
%73:i32 = var
blockpc %33 0 %73 1
%74:i32 = var
blockpc %33 1 %74 1
%75:i32 = var
blockpc %44 0 %75 1
%76:i32 = var
blockpc %44 1 %76 1
%77:i32 = var
blockpc %45 0 %77 1
%78:i32 = var
blockpc %45 1 %78 1
%79:i32 = var
%80:i32 = var
%81:i32 = var
%82:i32 = var
pc %79 1
pc %80 1
pc %81 1
pc %82 1
infer %52


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52
%54:i32 = var
blockpc %0 0 %54 1
%55:i32 = var
blockpc %0 1 %55 1
%56:i32 = var
blockpc %7 0 %56 1
%57:i32 = var
blockpc %7 1 %57 1
%58:i32 = var
blockpc %12 0 %58 1
%59:i32 = var
blockpc %12 1 %59 1
%60:i32 = var
blockpc %13 0 %60 1
%61:i32 = var
blockpc %13 1 %61 1
%62:i32 = var
blockpc %14 0 %62 1
%63:i32 = var
blockpc %14 1 %63 1
%64:i32 = var
blockpc %19 0 %64 1
%65:i32 = var
blockpc %19 1 %65 1
%66:i32 = var
blockpc %20 0 %66 1
%67:i32 = var
blockpc %20 1 %67 1
%68:i32 = var
blockpc %25 0 %68 1
%69:i32 = var
blockpc %25 1 %69 1
%70:i32 = var
blockpc %26 0 %70 1
%71:i32 = var
blockpc %26 1 %71 1
%72:i32 = var
blockpc %27 0 %72 1
%73:i32 = var
blockpc %27 1 %73 1
%74:i32 = var
blockpc %33 0 %74 1
%75:i32 = var
blockpc %33 1 %75 1
%76:i32 = var
blockpc %44 0 %76 1
%77:i32 = var
blockpc %44 1 %77 1
%78:i32 = var
blockpc %45 0 %78 1
%79:i32 = var
blockpc %45 1 %79 1
%80:i32 = var
blockpc %50 0 %80 1
%81:i32 = var
blockpc %50 1 %81 1
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85:i32 = var
pc %82 1
pc %83 1
pc %84 1
pc %85 1
infer %53


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = add %111, 8:i32
%113:i32 = var
blockpc %0 0 %113 1
%114:i32 = var
blockpc %0 1 %114 1
%115:i32 = var
blockpc %7 0 %115 1
%116:i32 = var
blockpc %7 1 %116 1
%117:i32 = var
blockpc %12 0 %117 1
%118:i32 = var
blockpc %12 1 %118 1
%119:i32 = var
blockpc %13 0 %119 1
%120:i32 = var
blockpc %13 1 %120 1
%121:i32 = var
blockpc %14 0 %121 1
%122:i32 = var
blockpc %14 1 %122 1
%123:i32 = var
blockpc %19 0 %123 1
%124:i32 = var
blockpc %19 1 %124 1
%125:i32 = var
blockpc %20 0 %125 1
%126:i32 = var
blockpc %20 1 %126 1
%127:i32 = var
blockpc %25 0 %127 1
%128:i32 = var
blockpc %25 1 %128 1
%129:i32 = var
blockpc %26 0 %129 1
%130:i32 = var
blockpc %26 1 %130 1
%131:i32 = var
blockpc %27 0 %131 1
%132:i32 = var
blockpc %27 1 %132 1
%133:i32 = var
blockpc %33 0 %133 1
%134:i32 = var
blockpc %33 1 %134 1
%135:i32 = var
blockpc %44 0 %135 1
%136:i32 = var
blockpc %44 1 %136 1
%137:i32 = var
blockpc %45 0 %137 1
%138:i32 = var
blockpc %45 1 %138 1
%139:i32 = var
blockpc %78 0 %139 1
%140:i32 = var
blockpc %78 1 %140 1
%141:i32 = var
%142:i32 = var
%143:i32 = var
%144:i32 = var
pc %141 1
pc %142 1
pc %143 1
pc %144 1
infer %112


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = add %111, 8:i32 (hasExternalUses)
%113 = and %112, 7:i32
%114:i32 = var
blockpc %0 0 %114 1
%115:i32 = var
blockpc %0 1 %115 1
%116:i32 = var
blockpc %7 0 %116 1
%117:i32 = var
blockpc %7 1 %117 1
%118:i32 = var
blockpc %12 0 %118 1
%119:i32 = var
blockpc %12 1 %119 1
%120:i32 = var
blockpc %13 0 %120 1
%121:i32 = var
blockpc %13 1 %121 1
%122:i32 = var
blockpc %14 0 %122 1
%123:i32 = var
blockpc %14 1 %123 1
%124:i32 = var
blockpc %19 0 %124 1
%125:i32 = var
blockpc %19 1 %125 1
%126:i32 = var
blockpc %20 0 %126 1
%127:i32 = var
blockpc %20 1 %127 1
%128:i32 = var
blockpc %25 0 %128 1
%129:i32 = var
blockpc %25 1 %129 1
%130:i32 = var
blockpc %26 0 %130 1
%131:i32 = var
blockpc %26 1 %131 1
%132:i32 = var
blockpc %27 0 %132 1
%133:i32 = var
blockpc %27 1 %133 1
%134:i32 = var
blockpc %33 0 %134 1
%135:i32 = var
blockpc %33 1 %135 1
%136:i32 = var
blockpc %44 0 %136 1
%137:i32 = var
blockpc %44 1 %137 1
%138:i32 = var
blockpc %45 0 %138 1
%139:i32 = var
blockpc %45 1 %139 1
%140:i32 = var
blockpc %78 0 %140 1
%141:i32 = var
blockpc %78 1 %141 1
%142:i32 = var
%143:i32 = var
%144:i32 = var
%145:i32 = var
pc %142 1
pc %143 1
pc %144 1
pc %145 1
infer %113


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = add %111, 8:i32 (hasExternalUses)
%113 = sub 0:i32, %112
%114:i32 = var
blockpc %0 0 %114 1
%115:i32 = var
blockpc %0 1 %115 1
%116:i32 = var
blockpc %7 0 %116 1
%117:i32 = var
blockpc %7 1 %117 1
%118:i32 = var
blockpc %12 0 %118 1
%119:i32 = var
blockpc %12 1 %119 1
%120:i32 = var
blockpc %13 0 %120 1
%121:i32 = var
blockpc %13 1 %121 1
%122:i32 = var
blockpc %14 0 %122 1
%123:i32 = var
blockpc %14 1 %123 1
%124:i32 = var
blockpc %19 0 %124 1
%125:i32 = var
blockpc %19 1 %125 1
%126:i32 = var
blockpc %20 0 %126 1
%127:i32 = var
blockpc %20 1 %127 1
%128:i32 = var
blockpc %25 0 %128 1
%129:i32 = var
blockpc %25 1 %129 1
%130:i32 = var
blockpc %26 0 %130 1
%131:i32 = var
blockpc %26 1 %131 1
%132:i32 = var
blockpc %27 0 %132 1
%133:i32 = var
blockpc %27 1 %133 1
%134:i32 = var
blockpc %33 0 %134 1
%135:i32 = var
blockpc %33 1 %135 1
%136:i32 = var
blockpc %44 0 %136 1
%137:i32 = var
blockpc %44 1 %137 1
%138:i32 = var
blockpc %45 0 %138 1
%139:i32 = var
blockpc %45 1 %139 1
%140:i32 = var
blockpc %78 0 %140 1
%141:i32 = var
blockpc %78 1 %141 1
%142:i32 = var
%143:i32 = var
%144:i32 = var
%145:i32 = var
pc %142 1
pc %143 1
pc %144 1
pc %145 1
infer %113


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = add %111, 8:i32 (hasExternalUses)
%113 = sub 0:i32, %112
%114 = and %113, 7:i32
%115:i32 = var
blockpc %0 0 %115 1
%116:i32 = var
blockpc %0 1 %116 1
%117:i32 = var
blockpc %7 0 %117 1
%118:i32 = var
blockpc %7 1 %118 1
%119:i32 = var
blockpc %12 0 %119 1
%120:i32 = var
blockpc %12 1 %120 1
%121:i32 = var
blockpc %13 0 %121 1
%122:i32 = var
blockpc %13 1 %122 1
%123:i32 = var
blockpc %14 0 %123 1
%124:i32 = var
blockpc %14 1 %124 1
%125:i32 = var
blockpc %19 0 %125 1
%126:i32 = var
blockpc %19 1 %126 1
%127:i32 = var
blockpc %20 0 %127 1
%128:i32 = var
blockpc %20 1 %128 1
%129:i32 = var
blockpc %25 0 %129 1
%130:i32 = var
blockpc %25 1 %130 1
%131:i32 = var
blockpc %26 0 %131 1
%132:i32 = var
blockpc %26 1 %132 1
%133:i32 = var
blockpc %27 0 %133 1
%134:i32 = var
blockpc %27 1 %134 1
%135:i32 = var
blockpc %33 0 %135 1
%136:i32 = var
blockpc %33 1 %136 1
%137:i32 = var
blockpc %44 0 %137 1
%138:i32 = var
blockpc %44 1 %138 1
%139:i32 = var
blockpc %45 0 %139 1
%140:i32 = var
blockpc %45 1 %140 1
%141:i32 = var
blockpc %78 0 %141 1
%142:i32 = var
blockpc %78 1 %142 1
%143:i32 = var
%144:i32 = var
%145:i32 = var
%146:i32 = var
pc %143 1
pc %144 1
pc %145 1
pc %146 1
infer %114


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = add %111, 8:i32 (hasExternalUses)
%113 = and %112, 7:i32
%114 = eq %113, 0:i32
%115:i32 = var
blockpc %0 0 %115 1
%116:i32 = var
blockpc %0 1 %116 1
%117:i32 = var
blockpc %7 0 %117 1
%118:i32 = var
blockpc %7 1 %118 1
%119:i32 = var
blockpc %12 0 %119 1
%120:i32 = var
blockpc %12 1 %120 1
%121:i32 = var
blockpc %13 0 %121 1
%122:i32 = var
blockpc %13 1 %122 1
%123:i32 = var
blockpc %14 0 %123 1
%124:i32 = var
blockpc %14 1 %124 1
%125:i32 = var
blockpc %19 0 %125 1
%126:i32 = var
blockpc %19 1 %126 1
%127:i32 = var
blockpc %20 0 %127 1
%128:i32 = var
blockpc %20 1 %128 1
%129:i32 = var
blockpc %25 0 %129 1
%130:i32 = var
blockpc %25 1 %130 1
%131:i32 = var
blockpc %26 0 %131 1
%132:i32 = var
blockpc %26 1 %132 1
%133:i32 = var
blockpc %27 0 %133 1
%134:i32 = var
blockpc %27 1 %134 1
%135:i32 = var
blockpc %33 0 %135 1
%136:i32 = var
blockpc %33 1 %136 1
%137:i32 = var
blockpc %44 0 %137 1
%138:i32 = var
blockpc %44 1 %138 1
%139:i32 = var
blockpc %45 0 %139 1
%140:i32 = var
blockpc %45 1 %140 1
%141:i32 = var
blockpc %78 0 %141 1
%142:i32 = var
blockpc %78 1 %142 1
%143:i32 = var
%144:i32 = var
%145:i32 = var
%146:i32 = var
pc %143 1
pc %144 1
pc %145 1
pc %146 1
infer %114


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114
%116:i32 = var
blockpc %0 0 %116 1
%117:i32 = var
blockpc %0 1 %117 1
%118:i32 = var
blockpc %7 0 %118 1
%119:i32 = var
blockpc %7 1 %119 1
%120:i32 = var
blockpc %12 0 %120 1
%121:i32 = var
blockpc %12 1 %121 1
%122:i32 = var
blockpc %13 0 %122 1
%123:i32 = var
blockpc %13 1 %123 1
%124:i32 = var
blockpc %14 0 %124 1
%125:i32 = var
blockpc %14 1 %125 1
%126:i32 = var
blockpc %19 0 %126 1
%127:i32 = var
blockpc %19 1 %127 1
%128:i32 = var
blockpc %20 0 %128 1
%129:i32 = var
blockpc %20 1 %129 1
%130:i32 = var
blockpc %25 0 %130 1
%131:i32 = var
blockpc %25 1 %131 1
%132:i32 = var
blockpc %26 0 %132 1
%133:i32 = var
blockpc %26 1 %133 1
%134:i32 = var
blockpc %27 0 %134 1
%135:i32 = var
blockpc %27 1 %135 1
%136:i32 = var
blockpc %33 0 %136 1
%137:i32 = var
blockpc %33 1 %137 1
%138:i32 = var
blockpc %44 0 %138 1
%139:i32 = var
blockpc %44 1 %139 1
%140:i32 = var
blockpc %45 0 %140 1
%141:i32 = var
blockpc %45 1 %141 1
%142:i32 = var
blockpc %78 0 %142 1
%143:i32 = var
blockpc %78 1 %143 1
%144:i32 = var
blockpc %112 0 %144 1
%145:i32 = var
blockpc %112 1 %145 1
%146:i32 = var
%147:i32 = var
%148:i32 = var
%149:i32 = var
pc %146 1
pc %147 1
pc %148 1
pc %149 1
infer %115


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67
%69:i32 = var
blockpc %0 0 %69 1
%70:i32 = var
blockpc %0 1 %70 1
%71:i32 = var
blockpc %7 0 %71 1
%72:i32 = var
blockpc %7 1 %72 1
%73:i32 = var
blockpc %12 0 %73 1
%74:i32 = var
blockpc %12 1 %74 1
%75:i32 = var
blockpc %13 0 %75 1
%76:i32 = var
blockpc %13 1 %76 1
%77:i32 = var
blockpc %14 0 %77 1
%78:i32 = var
blockpc %14 1 %78 1
%79:i32 = var
blockpc %19 0 %79 1
%80:i32 = var
blockpc %19 1 %80 1
%81:i32 = var
blockpc %20 0 %81 1
%82:i32 = var
blockpc %20 1 %82 1
%83:i32 = var
blockpc %25 0 %83 1
%84:i32 = var
blockpc %25 1 %84 1
%85:i32 = var
blockpc %26 0 %85 1
%86:i32 = var
blockpc %26 1 %86 1
%87:i32 = var
blockpc %27 0 %87 1
%88:i32 = var
blockpc %27 1 %88 1
%89:i32 = var
blockpc %33 0 %89 1
%90:i32 = var
blockpc %33 1 %90 1
%91:i32 = var
blockpc %44 0 %91 1
%92:i32 = var
blockpc %44 1 %92 1
%93:i32 = var
blockpc %45 0 %93 1
%94:i32 = var
blockpc %45 1 %94 1
%95:i32 = var
blockpc %50 0 %95 1
%96:i32 = var
blockpc %50 1 %96 1
%97:i32 = var
blockpc %57 0 %97 1
%98:i32 = var
blockpc %57 1 %98 1
%99:i32 = var
%100:i32 = var
%101:i32 = var
%102:i32 = var
pc %99 1
pc %100 1
pc %101 1
pc %102 1
infer %68


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116:i32 = var
%117 = sub %115, %116
%118:i32 = var
blockpc %0 0 %118 1
%119:i32 = var
blockpc %0 1 %119 1
%120:i32 = var
blockpc %7 0 %120 1
%121:i32 = var
blockpc %7 1 %121 1
%122:i32 = var
blockpc %12 0 %122 1
%123:i32 = var
blockpc %12 1 %123 1
%124:i32 = var
blockpc %13 0 %124 1
%125:i32 = var
blockpc %13 1 %125 1
%126:i32 = var
blockpc %14 0 %126 1
%127:i32 = var
blockpc %14 1 %127 1
%128:i32 = var
blockpc %19 0 %128 1
%129:i32 = var
blockpc %19 1 %129 1
%130:i32 = var
blockpc %20 0 %130 1
%131:i32 = var
blockpc %20 1 %131 1
%132:i32 = var
blockpc %25 0 %132 1
%133:i32 = var
blockpc %25 1 %133 1
%134:i32 = var
blockpc %26 0 %134 1
%135:i32 = var
blockpc %26 1 %135 1
%136:i32 = var
blockpc %27 0 %136 1
%137:i32 = var
blockpc %27 1 %137 1
%138:i32 = var
blockpc %33 0 %138 1
%139:i32 = var
blockpc %33 1 %139 1
%140:i32 = var
blockpc %44 0 %140 1
%141:i32 = var
blockpc %44 1 %141 1
%142:i32 = var
blockpc %45 0 %142 1
%143:i32 = var
blockpc %45 1 %143 1
%144:i32 = var
blockpc %78 0 %144 1
%145:i32 = var
blockpc %78 1 %145 1
%146:i32 = var
blockpc %112 0 %146 1
%147:i32 = var
blockpc %112 1 %147 1
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
pc %148 1
pc %149 1
pc %150 1
pc %151 1
infer %117


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116:i32 = var
%117 = sub %115, %116
%118:i32 = var
%119:i32 = var
%120 = phi %9, %118, %119
%121 = block 2
%122:i32 = var
%123 = phi %121, 16:i32, %122
%124 = phi %14, %119, %120
%125 = phi %13, -1:i32, %124
%126 = phi %12, %123, %125
%127 = phi %8, %120, %126
%128:i32 = var
%129 = phi %5, %128, %127
%130 = phi %33, %129, %127
%131 = phi %1, %127, %129, %129, %129, %129, %130
%132 = sub %117, %131
%133:i32 = var
blockpc %0 0 %133 1
%134:i32 = var
blockpc %0 1 %134 1
%135:i32 = var
blockpc %7 0 %135 1
%136:i32 = var
blockpc %7 1 %136 1
%137:i32 = var
blockpc %12 0 %137 1
%138:i32 = var
blockpc %12 1 %138 1
%139:i32 = var
blockpc %13 0 %139 1
%140:i32 = var
blockpc %13 1 %140 1
%141:i32 = var
blockpc %14 0 %141 1
%142:i32 = var
blockpc %14 1 %142 1
%143:i32 = var
blockpc %19 0 %143 1
%144:i32 = var
blockpc %19 1 %144 1
%145:i32 = var
blockpc %20 0 %145 1
%146:i32 = var
blockpc %20 1 %146 1
%147:i32 = var
blockpc %25 0 %147 1
%148:i32 = var
blockpc %25 1 %148 1
%149:i32 = var
blockpc %26 0 %149 1
%150:i32 = var
blockpc %26 1 %150 1
%151:i32 = var
blockpc %27 0 %151 1
%152:i32 = var
blockpc %27 1 %152 1
%153:i32 = var
blockpc %33 0 %153 1
%154:i32 = var
blockpc %33 1 %154 1
%155:i32 = var
blockpc %44 0 %155 1
%156:i32 = var
blockpc %44 1 %156 1
%157:i32 = var
blockpc %45 0 %157 1
%158:i32 = var
blockpc %45 1 %158 1
%159:i32 = var
blockpc %78 0 %159 1
%160:i32 = var
blockpc %78 1 %160 1
%161:i32 = var
blockpc %112 0 %161 1
%162:i32 = var
blockpc %112 1 %162 1
%163:i32 = var
blockpc %121 0 %163 1
%164:i32 = var
blockpc %121 1 %164 1
%165:i32 = var
%166:i32 = var
%167:i32 = var
%168:i32 = var
pc %165 1
pc %166 1
pc %167 1
pc %168 1
infer %132


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54 = add %53, 4:i32
%55:i32 = var
blockpc %0 0 %55 1
%56:i32 = var
blockpc %0 1 %56 1
%57:i32 = var
blockpc %7 0 %57 1
%58:i32 = var
blockpc %7 1 %58 1
%59:i32 = var
blockpc %12 0 %59 1
%60:i32 = var
blockpc %12 1 %60 1
%61:i32 = var
blockpc %13 0 %61 1
%62:i32 = var
blockpc %13 1 %62 1
%63:i32 = var
blockpc %14 0 %63 1
%64:i32 = var
blockpc %14 1 %64 1
%65:i32 = var
blockpc %19 0 %65 1
%66:i32 = var
blockpc %19 1 %66 1
%67:i32 = var
blockpc %20 0 %67 1
%68:i32 = var
blockpc %20 1 %68 1
%69:i32 = var
blockpc %25 0 %69 1
%70:i32 = var
blockpc %25 1 %70 1
%71:i32 = var
blockpc %26 0 %71 1
%72:i32 = var
blockpc %26 1 %72 1
%73:i32 = var
blockpc %27 0 %73 1
%74:i32 = var
blockpc %27 1 %74 1
%75:i32 = var
blockpc %33 0 %75 1
%76:i32 = var
blockpc %33 1 %76 1
%77:i32 = var
blockpc %44 0 %77 1
%78:i32 = var
blockpc %44 1 %78 1
%79:i32 = var
blockpc %45 0 %79 1
%80:i32 = var
blockpc %45 1 %80 1
%81:i32 = var
blockpc %50 0 %81 1
%82:i32 = var
blockpc %50 1 %82 1
%83:i32 = var
%84:i32 = var
%85:i32 = var
%86:i32 = var
pc %83 1
pc %84 1
pc %85 1
pc %86 1
infer %54


; start LHS (in $38)
%0 = block 6
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %4, 11:i32 (hasExternalUses)
%6 = and %5, -8:i32 (hasExternalUses)
%7 = phi %2, %3, %6
%8 = block 2
%9 = block 2
%10 = add %4, 11:i32
%11 = and %10, -8:i32 (hasExternalUses)
%12 = phi %9, 16:i32, %11
%13 = block 2
%14 = block 2
%15 = phi %14, %6, %7
%16 = phi %13, -1:i32, %15
%17 = phi %8, %12, %16
%18 = phi %1, %7, %17
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, %18
%22 = block 2
%23 = phi %22, %21, %18
%24 = phi %0, %18, %21, %21, %21, %21, %23
%25 = or %24, 3:i32
%26 = ult %4, 245:i32
blockpc %8 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %8 1 %28 1
%29:i32 = var
blockpc %9 0 %29 1
%30:i32 = var
blockpc %9 1 %30 1
%31:i32 = var
blockpc %13 0 %31 1
%32:i32 = var
blockpc %13 1 %32 1
%33:i32 = var
blockpc %14 0 %33 1
%34:i32 = var
blockpc %14 1 %34 1
%35:i32 = var
blockpc %22 0 %35 1
%36:i32 = var
blockpc %22 1 %36 1
%37:i32 = var
%38:i32 = var
%39:i32 = var
%40:i32 = var
pc %37 1
pc %38 1
pc %39 1
pc %40 1
infer %25


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55 = phi %10, %54, 0:i32
%56 = phi %15, 0:i32, %55
%57 = phi %14, 0:i32, %56
%58 = phi %13, 0:i32, %57
%59 = phi %9, %55, %58
%60 = phi %21, %59, %51
%61 = phi %20, %60, %59
%62 = phi %8, %59, %61
%63 = phi %6, %53, %62
%64 = phi %28, %52, %63
%65 = phi %27, %63, %64
%66 = phi %26, %63, %65
%67 = phi %5, %63, %66
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %10, %70, 0:i32
%72 = phi %15, 0:i32, %71
%73 = phi %14, 0:i32, %72
%74 = phi %13, 0:i32, %73
%75 = phi %9, %71, %74
%76 = phi %6, %69, %75
%77 = phi %34, %76, %75
%78 = phi %2, %51, %52, %67, %67, %68, %77
%79 = block 2
%80:i32 = var
%81:i32 = var
%82 = phi %10, %81, 0:i32
%83 = phi %15, 0:i32, %82
%84 = phi %14, 0:i32, %83
%85 = phi %13, 0:i32, %84
%86 = phi %9, %82, %85
%87:i32 = var
%88 = phi %6, %87, %86
%89 = block 3
%90:i32 = var
%91:i32 = var
%92 = phi %10, %91, 0:i32
%93 = phi %15, 0:i32, %92
%94 = phi %14, 0:i32, %93
%95 = phi %13, 0:i32, %94
%96 = phi %9, %92, %95
%97 = phi %21, %51, %96
%98 = phi %20, %97, 0:i32
%99 = phi %8, %96, %98
%100 = phi %6, %90, %99
%101 = phi %28, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %26, %100, %102
%104 = phi %5, 0:i32, %103
%105 = phi %89, 0:i32, 0:i32, %104
%106 = phi %34, %105, 0:i32
%107 = phi %2, %86, %88, %88, %88, %88, %106
%108 = phi %79, %80, %107
%109 = phi %46, %78, %108
%110 = phi %45, %78, %109
%111 = phi %1, %78, %110
%112 = add %50, %111 (hasExternalUses)
%113 = block 2
%114:i32 = var
%115 = phi %113, 0:i32, %114
%116 = add %112, %115 (hasExternalUses)
%117 = eq %0, %116
%118:i32 = var
blockpc %1 0 %118 1
%119:i32 = var
blockpc %1 1 %119 1
%120:i32 = var
blockpc %8 0 %120 1
%121:i32 = var
blockpc %8 1 %121 1
%122:i32 = var
blockpc %13 0 %122 1
%123:i32 = var
blockpc %13 1 %123 1
%124:i32 = var
blockpc %14 0 %124 1
%125:i32 = var
blockpc %14 1 %125 1
%126:i32 = var
blockpc %15 0 %126 1
%127:i32 = var
blockpc %15 1 %127 1
%128:i32 = var
blockpc %20 0 %128 1
%129:i32 = var
blockpc %20 1 %129 1
%130:i32 = var
blockpc %21 0 %130 1
%131:i32 = var
blockpc %21 1 %131 1
%132:i32 = var
blockpc %26 0 %132 1
%133:i32 = var
blockpc %26 1 %133 1
%134:i32 = var
blockpc %27 0 %134 1
%135:i32 = var
blockpc %27 1 %135 1
%136:i32 = var
blockpc %28 0 %136 1
%137:i32 = var
blockpc %28 1 %137 1
%138:i32 = var
blockpc %34 0 %138 1
%139:i32 = var
blockpc %34 1 %139 1
%140:i32 = var
blockpc %45 0 %140 1
%141:i32 = var
blockpc %45 1 %141 1
%142:i32 = var
blockpc %46 0 %142 1
%143:i32 = var
blockpc %46 1 %143 1
%144:i32 = var
blockpc %79 0 %144 1
%145:i32 = var
blockpc %79 1 %145 1
%146:i32 = var
blockpc %113 0 %146 1
%147:i32 = var
blockpc %113 1 %147 1
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
pc %148 1
pc %149 1
pc %150 1
pc %151 1
infer %117


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55 = phi %10, %54, 0:i32
%56 = phi %15, 0:i32, %55
%57 = phi %14, 0:i32, %56
%58 = phi %13, 0:i32, %57
%59 = phi %9, %55, %58
%60 = phi %21, %59, %51
%61 = phi %20, %60, %59
%62 = phi %8, %59, %61
%63 = phi %6, %53, %62
%64 = phi %28, %52, %63
%65 = phi %27, %63, %64
%66 = phi %26, %63, %65
%67 = phi %5, %63, %66
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %10, %70, 0:i32
%72 = phi %15, 0:i32, %71
%73 = phi %14, 0:i32, %72
%74 = phi %13, 0:i32, %73
%75 = phi %9, %71, %74
%76 = phi %6, %69, %75
%77 = phi %34, %76, %75
%78 = phi %2, %51, %52, %67, %67, %68, %77
%79 = block 2
%80:i32 = var
%81:i32 = var
%82 = phi %10, %81, 0:i32
%83 = phi %15, 0:i32, %82
%84 = phi %14, 0:i32, %83
%85 = phi %13, 0:i32, %84
%86 = phi %9, %82, %85
%87:i32 = var
%88 = phi %6, %87, %86
%89 = block 3
%90:i32 = var
%91:i32 = var
%92 = phi %10, %91, 0:i32
%93 = phi %15, 0:i32, %92
%94 = phi %14, 0:i32, %93
%95 = phi %13, 0:i32, %94
%96 = phi %9, %92, %95
%97 = phi %21, %51, %96
%98 = phi %20, %97, 0:i32
%99 = phi %8, %96, %98
%100 = phi %6, %90, %99
%101 = phi %28, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %26, %100, %102
%104 = phi %5, 0:i32, %103
%105 = phi %89, 0:i32, 0:i32, %104
%106 = phi %34, %105, 0:i32
%107 = phi %2, %86, %88, %88, %88, %88, %106
%108 = phi %79, %80, %107
%109 = phi %46, %78, %108
%110 = phi %45, %78, %109
%111 = phi %1, %78, %110
%112 = add %50, %111 (hasExternalUses)
%113 = block 2
%114:i32 = var
%115 = phi %113, 0:i32, %114
%116 = add %112, %115 (hasExternalUses)
%117:i32 = var
%118 = sub %116, %117
%119:i32 = var
%120:i32 = var
%121 = phi %10, %119, %120
%122 = block 2
%123:i32 = var
%124 = phi %122, 16:i32, %123
%125 = phi %15, %120, %121
%126 = phi %14, -1:i32, %125
%127 = phi %13, %124, %126
%128 = phi %9, %121, %127
%129:i32 = var
%130 = phi %6, %129, %128
%131 = phi %34, %130, %128
%132 = phi %2, %128, %130, %130, %130, %130, %131
%133 = sub %118, %132 (hasExternalUses)
%134 = add %0, %133
%135:i32 = var
blockpc %1 0 %135 1
%136:i32 = var
blockpc %1 1 %136 1
%137:i32 = var
blockpc %8 0 %137 1
%138:i32 = var
blockpc %8 1 %138 1
%139:i32 = var
blockpc %13 0 %139 1
%140:i32 = var
blockpc %13 1 %140 1
%141:i32 = var
blockpc %14 0 %141 1
%142:i32 = var
blockpc %14 1 %142 1
%143:i32 = var
blockpc %15 0 %143 1
%144:i32 = var
blockpc %15 1 %144 1
%145:i32 = var
blockpc %20 0 %145 1
%146:i32 = var
blockpc %20 1 %146 1
%147:i32 = var
blockpc %21 0 %147 1
%148:i32 = var
blockpc %21 1 %148 1
%149:i32 = var
blockpc %26 0 %149 1
%150:i32 = var
blockpc %26 1 %150 1
%151:i32 = var
blockpc %27 0 %151 1
%152:i32 = var
blockpc %27 1 %152 1
%153:i32 = var
blockpc %28 0 %153 1
%154:i32 = var
blockpc %28 1 %154 1
%155:i32 = var
blockpc %34 0 %155 1
%156:i32 = var
blockpc %34 1 %156 1
%157:i32 = var
blockpc %45 0 %157 1
%158:i32 = var
blockpc %45 1 %158 1
%159:i32 = var
blockpc %46 0 %159 1
%160:i32 = var
blockpc %46 1 %160 1
%161:i32 = var
blockpc %79 0 %161 1
%162:i32 = var
blockpc %79 1 %162 1
%163:i32 = var
blockpc %113 0 %163 1
%164:i32 = var
blockpc %113 1 %164 1
%165:i32 = var
blockpc %122 0 %165 1
%166:i32 = var
blockpc %122 1 %166 1
%167:i32 = var
%168:i32 = var
%169:i32 = var
%170:i32 = var
%171:i32 = var
pc %167 1
pc %168 1
pc %169 1
pc %170 1
pc %171 1
infer %134


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 4:i32
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %12 0 %74 1
%75:i32 = var
blockpc %12 1 %75 1
%76:i32 = var
blockpc %13 0 %76 1
%77:i32 = var
blockpc %13 1 %77 1
%78:i32 = var
blockpc %14 0 %78 1
%79:i32 = var
blockpc %14 1 %79 1
%80:i32 = var
blockpc %19 0 %80 1
%81:i32 = var
blockpc %19 1 %81 1
%82:i32 = var
blockpc %20 0 %82 1
%83:i32 = var
blockpc %20 1 %83 1
%84:i32 = var
blockpc %25 0 %84 1
%85:i32 = var
blockpc %25 1 %85 1
%86:i32 = var
blockpc %26 0 %86 1
%87:i32 = var
blockpc %26 1 %87 1
%88:i32 = var
blockpc %27 0 %88 1
%89:i32 = var
blockpc %27 1 %89 1
%90:i32 = var
blockpc %33 0 %90 1
%91:i32 = var
blockpc %33 1 %91 1
%92:i32 = var
blockpc %44 0 %92 1
%93:i32 = var
blockpc %44 1 %93 1
%94:i32 = var
blockpc %45 0 %94 1
%95:i32 = var
blockpc %45 1 %95 1
%96:i32 = var
blockpc %50 0 %96 1
%97:i32 = var
blockpc %50 1 %97 1
%98:i32 = var
blockpc %57 0 %98 1
%99:i32 = var
blockpc %57 1 %99 1
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
pc %100 1
pc %101 1
pc %102 1
pc %103 1
pc %104 1
infer %69


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55 = phi %10, %54, 0:i32
%56 = phi %15, 0:i32, %55
%57 = phi %14, 0:i32, %56
%58 = phi %13, 0:i32, %57
%59 = phi %9, %55, %58
%60 = phi %21, %59, %51
%61 = phi %20, %60, %59
%62 = phi %8, %59, %61
%63 = phi %6, %53, %62
%64 = phi %28, %52, %63
%65 = phi %27, %63, %64
%66 = phi %26, %63, %65
%67 = phi %5, %63, %66
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %10, %70, 0:i32
%72 = phi %15, 0:i32, %71
%73 = phi %14, 0:i32, %72
%74 = phi %13, 0:i32, %73
%75 = phi %9, %71, %74
%76 = phi %6, %69, %75
%77 = phi %34, %76, %75
%78 = phi %2, %51, %52, %67, %67, %68, %77
%79 = block 2
%80:i32 = var
%81:i32 = var
%82 = phi %10, %81, 0:i32
%83 = phi %15, 0:i32, %82
%84 = phi %14, 0:i32, %83
%85 = phi %13, 0:i32, %84
%86 = phi %9, %82, %85
%87:i32 = var
%88 = phi %6, %87, %86
%89 = block 3
%90:i32 = var
%91:i32 = var
%92 = phi %10, %91, 0:i32
%93 = phi %15, 0:i32, %92
%94 = phi %14, 0:i32, %93
%95 = phi %13, 0:i32, %94
%96 = phi %9, %92, %95
%97 = phi %21, %51, %96
%98 = phi %20, %97, 0:i32
%99 = phi %8, %96, %98
%100 = phi %6, %90, %99
%101 = phi %28, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %26, %100, %102
%104 = phi %5, 0:i32, %103
%105 = phi %89, 0:i32, 0:i32, %104
%106 = phi %34, %105, 0:i32
%107 = phi %2, %86, %88, %88, %88, %88, %106
%108 = phi %79, %80, %107
%109 = phi %46, %78, %108
%110 = phi %45, %78, %109
%111 = phi %1, %78, %110
%112 = add %50, %111 (hasExternalUses)
%113 = block 2
%114:i32 = var
%115 = phi %113, 0:i32, %114
%116 = add %112, %115 (hasExternalUses)
%117:i32 = var
%118 = sub %116, %117
%119:i32 = var
%120:i32 = var
%121 = phi %10, %119, %120
%122 = block 2
%123:i32 = var
%124 = phi %122, 16:i32, %123
%125 = phi %15, %120, %121
%126 = phi %14, -1:i32, %125
%127 = phi %13, %124, %126
%128 = phi %9, %121, %127
%129:i32 = var
%130 = phi %6, %129, %128
%131 = phi %34, %130, %128
%132 = phi %2, %128, %130, %130, %130, %130, %131
%133 = sub %118, %132 (hasExternalUses)
%134 = add %0, %133 (hasExternalUses)
%135 = or %134, 1:i32
%136:i32 = var
blockpc %1 0 %136 1
%137:i32 = var
blockpc %1 1 %137 1
%138:i32 = var
blockpc %8 0 %138 1
%139:i32 = var
blockpc %8 1 %139 1
%140:i32 = var
blockpc %13 0 %140 1
%141:i32 = var
blockpc %13 1 %141 1
%142:i32 = var
blockpc %14 0 %142 1
%143:i32 = var
blockpc %14 1 %143 1
%144:i32 = var
blockpc %15 0 %144 1
%145:i32 = var
blockpc %15 1 %145 1
%146:i32 = var
blockpc %20 0 %146 1
%147:i32 = var
blockpc %20 1 %147 1
%148:i32 = var
blockpc %21 0 %148 1
%149:i32 = var
blockpc %21 1 %149 1
%150:i32 = var
blockpc %26 0 %150 1
%151:i32 = var
blockpc %26 1 %151 1
%152:i32 = var
blockpc %27 0 %152 1
%153:i32 = var
blockpc %27 1 %153 1
%154:i32 = var
blockpc %28 0 %154 1
%155:i32 = var
blockpc %28 1 %155 1
%156:i32 = var
blockpc %34 0 %156 1
%157:i32 = var
blockpc %34 1 %157 1
%158:i32 = var
blockpc %45 0 %158 1
%159:i32 = var
blockpc %45 1 %159 1
%160:i32 = var
blockpc %46 0 %160 1
%161:i32 = var
blockpc %46 1 %161 1
%162:i32 = var
blockpc %79 0 %162 1
%163:i32 = var
blockpc %79 1 %163 1
%164:i32 = var
blockpc %113 0 %164 1
%165:i32 = var
blockpc %113 1 %165 1
%166:i32 = var
blockpc %122 0 %166 1
%167:i32 = var
blockpc %122 1 %167 1
%168:i32 = var
%169:i32 = var
%170:i32 = var
%171:i32 = var
%172:i32 = var
pc %168 1
pc %169 1
pc %170 1
pc %171 1
pc %172 1
infer %135


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55 = phi %10, %54, 0:i32
%56 = phi %15, 0:i32, %55
%57 = phi %14, 0:i32, %56
%58 = phi %13, 0:i32, %57
%59 = phi %9, %55, %58
%60 = phi %21, %59, %51
%61 = phi %20, %60, %59
%62 = phi %8, %59, %61
%63 = phi %6, %53, %62
%64 = phi %28, %52, %63
%65 = phi %27, %63, %64
%66 = phi %26, %63, %65
%67 = phi %5, %63, %66
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %10, %70, 0:i32
%72 = phi %15, 0:i32, %71
%73 = phi %14, 0:i32, %72
%74 = phi %13, 0:i32, %73
%75 = phi %9, %71, %74
%76 = phi %6, %69, %75
%77 = phi %34, %76, %75
%78 = phi %2, %51, %52, %67, %67, %68, %77
%79 = block 2
%80:i32 = var
%81:i32 = var
%82 = phi %10, %81, 0:i32
%83 = phi %15, 0:i32, %82
%84 = phi %14, 0:i32, %83
%85 = phi %13, 0:i32, %84
%86 = phi %9, %82, %85
%87:i32 = var
%88 = phi %6, %87, %86
%89 = block 3
%90:i32 = var
%91:i32 = var
%92 = phi %10, %91, 0:i32
%93 = phi %15, 0:i32, %92
%94 = phi %14, 0:i32, %93
%95 = phi %13, 0:i32, %94
%96 = phi %9, %92, %95
%97 = phi %21, %51, %96
%98 = phi %20, %97, 0:i32
%99 = phi %8, %96, %98
%100 = phi %6, %90, %99
%101 = phi %28, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %26, %100, %102
%104 = phi %5, 0:i32, %103
%105 = phi %89, 0:i32, 0:i32, %104
%106 = phi %34, %105, 0:i32
%107 = phi %2, %86, %88, %88, %88, %88, %106
%108 = phi %79, %80, %107
%109 = phi %46, %78, %108
%110 = phi %45, %78, %109
%111 = phi %1, %78, %110
%112 = add %50, %111 (hasExternalUses)
%113 = block 2
%114:i32 = var
%115 = phi %113, 0:i32, %114
%116 = add %112, %115 (hasExternalUses)
%117 = eq %0, %116
%118:i32 = var
blockpc %1 0 %118 1
%119:i32 = var
blockpc %1 1 %119 1
%120:i32 = var
blockpc %8 0 %120 1
%121:i32 = var
blockpc %8 1 %121 1
%122:i32 = var
blockpc %13 0 %122 1
%123:i32 = var
blockpc %13 1 %123 1
%124:i32 = var
blockpc %14 0 %124 1
%125:i32 = var
blockpc %14 1 %125 1
%126:i32 = var
blockpc %15 0 %126 1
%127:i32 = var
blockpc %15 1 %127 1
%128:i32 = var
blockpc %20 0 %128 1
%129:i32 = var
blockpc %20 1 %129 1
%130:i32 = var
blockpc %21 0 %130 1
%131:i32 = var
blockpc %21 1 %131 1
%132:i32 = var
blockpc %26 0 %132 1
%133:i32 = var
blockpc %26 1 %133 1
%134:i32 = var
blockpc %27 0 %134 1
%135:i32 = var
blockpc %27 1 %135 1
%136:i32 = var
blockpc %28 0 %136 1
%137:i32 = var
blockpc %28 1 %137 1
%138:i32 = var
blockpc %34 0 %138 1
%139:i32 = var
blockpc %34 1 %139 1
%140:i32 = var
blockpc %45 0 %140 1
%141:i32 = var
blockpc %45 1 %141 1
%142:i32 = var
blockpc %46 0 %142 1
%143:i32 = var
blockpc %46 1 %143 1
%144:i32 = var
blockpc %79 0 %144 1
%145:i32 = var
blockpc %79 1 %145 1
%146:i32 = var
blockpc %113 0 %146 1
%147:i32 = var
blockpc %113 1 %147 1
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
infer %117


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55 = phi %10, %54, 0:i32
%56 = phi %15, 0:i32, %55
%57 = phi %14, 0:i32, %56
%58 = phi %13, 0:i32, %57
%59 = phi %9, %55, %58
%60 = phi %21, %59, %51
%61 = phi %20, %60, %59
%62 = phi %8, %59, %61
%63 = phi %6, %53, %62
%64 = phi %28, %52, %63
%65 = phi %27, %63, %64
%66 = phi %26, %63, %65
%67 = phi %5, %63, %66
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %10, %70, 0:i32
%72 = phi %15, 0:i32, %71
%73 = phi %14, 0:i32, %72
%74 = phi %13, 0:i32, %73
%75 = phi %9, %71, %74
%76 = phi %6, %69, %75
%77 = phi %34, %76, %75
%78 = phi %2, %51, %52, %67, %67, %68, %77
%79 = block 2
%80:i32 = var
%81:i32 = var
%82 = phi %10, %81, 0:i32
%83 = phi %15, 0:i32, %82
%84 = phi %14, 0:i32, %83
%85 = phi %13, 0:i32, %84
%86 = phi %9, %82, %85
%87:i32 = var
%88 = phi %6, %87, %86
%89 = block 3
%90:i32 = var
%91:i32 = var
%92 = phi %10, %91, 0:i32
%93 = phi %15, 0:i32, %92
%94 = phi %14, 0:i32, %93
%95 = phi %13, 0:i32, %94
%96 = phi %9, %92, %95
%97 = phi %21, %51, %96
%98 = phi %20, %97, 0:i32
%99 = phi %8, %96, %98
%100 = phi %6, %90, %99
%101 = phi %28, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %26, %100, %102
%104 = phi %5, 0:i32, %103
%105 = phi %89, 0:i32, 0:i32, %104
%106 = phi %34, %105, 0:i32
%107 = phi %2, %86, %88, %88, %88, %88, %106
%108 = phi %79, %80, %107
%109 = phi %46, %78, %108
%110 = phi %45, %78, %109
%111 = phi %1, %78, %110
%112 = add %50, %111 (hasExternalUses)
%113 = block 2
%114:i32 = var
%115 = phi %113, 0:i32, %114
%116 = add %112, %115 (hasExternalUses)
%117:i32 = var
%118 = sub %116, %117
%119:i32 = var
%120:i32 = var
%121 = phi %10, %119, %120
%122 = block 2
%123:i32 = var
%124 = phi %122, 16:i32, %123
%125 = phi %15, %120, %121
%126 = phi %14, -1:i32, %125
%127 = phi %13, %124, %126
%128 = phi %9, %121, %127
%129:i32 = var
%130 = phi %6, %129, %128
%131 = phi %34, %130, %128
%132 = phi %2, %128, %130, %130, %130, %130, %131
%133 = sub %118, %132 (hasExternalUses)
%134 = add %0, %133
%135:i32 = var
blockpc %1 0 %135 1
%136:i32 = var
blockpc %1 1 %136 1
%137:i32 = var
blockpc %8 0 %137 1
%138:i32 = var
blockpc %8 1 %138 1
%139:i32 = var
blockpc %13 0 %139 1
%140:i32 = var
blockpc %13 1 %140 1
%141:i32 = var
blockpc %14 0 %141 1
%142:i32 = var
blockpc %14 1 %142 1
%143:i32 = var
blockpc %15 0 %143 1
%144:i32 = var
blockpc %15 1 %144 1
%145:i32 = var
blockpc %20 0 %145 1
%146:i32 = var
blockpc %20 1 %146 1
%147:i32 = var
blockpc %21 0 %147 1
%148:i32 = var
blockpc %21 1 %148 1
%149:i32 = var
blockpc %26 0 %149 1
%150:i32 = var
blockpc %26 1 %150 1
%151:i32 = var
blockpc %27 0 %151 1
%152:i32 = var
blockpc %27 1 %152 1
%153:i32 = var
blockpc %28 0 %153 1
%154:i32 = var
blockpc %28 1 %154 1
%155:i32 = var
blockpc %34 0 %155 1
%156:i32 = var
blockpc %34 1 %156 1
%157:i32 = var
blockpc %45 0 %157 1
%158:i32 = var
blockpc %45 1 %158 1
%159:i32 = var
blockpc %46 0 %159 1
%160:i32 = var
blockpc %46 1 %160 1
%161:i32 = var
blockpc %79 0 %161 1
%162:i32 = var
blockpc %79 1 %162 1
%163:i32 = var
blockpc %113 0 %163 1
%164:i32 = var
blockpc %113 1 %164 1
%165:i32 = var
blockpc %122 0 %165 1
%166:i32 = var
blockpc %122 1 %166 1
%167:i32 = var
%168:i32 = var
%169:i32 = var
%170:i32 = var
%171:i32 = var
%172:i32 = var
pc %167 1
pc %168 1
pc %169 1
pc %170 1
pc %171 1
pc %172 1
infer %134


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 4:i32
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %12 0 %74 1
%75:i32 = var
blockpc %12 1 %75 1
%76:i32 = var
blockpc %13 0 %76 1
%77:i32 = var
blockpc %13 1 %77 1
%78:i32 = var
blockpc %14 0 %78 1
%79:i32 = var
blockpc %14 1 %79 1
%80:i32 = var
blockpc %19 0 %80 1
%81:i32 = var
blockpc %19 1 %81 1
%82:i32 = var
blockpc %20 0 %82 1
%83:i32 = var
blockpc %20 1 %83 1
%84:i32 = var
blockpc %25 0 %84 1
%85:i32 = var
blockpc %25 1 %85 1
%86:i32 = var
blockpc %26 0 %86 1
%87:i32 = var
blockpc %26 1 %87 1
%88:i32 = var
blockpc %27 0 %88 1
%89:i32 = var
blockpc %27 1 %89 1
%90:i32 = var
blockpc %33 0 %90 1
%91:i32 = var
blockpc %33 1 %91 1
%92:i32 = var
blockpc %44 0 %92 1
%93:i32 = var
blockpc %44 1 %93 1
%94:i32 = var
blockpc %45 0 %94 1
%95:i32 = var
blockpc %45 1 %95 1
%96:i32 = var
blockpc %50 0 %96 1
%97:i32 = var
blockpc %50 1 %97 1
%98:i32 = var
blockpc %57 0 %98 1
%99:i32 = var
blockpc %57 1 %99 1
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105:i32 = var
pc %100 1
pc %101 1
pc %102 1
pc %103 1
pc %104 1
pc %105 1
infer %69


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55 = phi %10, %54, 0:i32
%56 = phi %15, 0:i32, %55
%57 = phi %14, 0:i32, %56
%58 = phi %13, 0:i32, %57
%59 = phi %9, %55, %58
%60 = phi %21, %59, %51
%61 = phi %20, %60, %59
%62 = phi %8, %59, %61
%63 = phi %6, %53, %62
%64 = phi %28, %52, %63
%65 = phi %27, %63, %64
%66 = phi %26, %63, %65
%67 = phi %5, %63, %66
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %10, %70, 0:i32
%72 = phi %15, 0:i32, %71
%73 = phi %14, 0:i32, %72
%74 = phi %13, 0:i32, %73
%75 = phi %9, %71, %74
%76 = phi %6, %69, %75
%77 = phi %34, %76, %75
%78 = phi %2, %51, %52, %67, %67, %68, %77
%79 = block 2
%80:i32 = var
%81:i32 = var
%82 = phi %10, %81, 0:i32
%83 = phi %15, 0:i32, %82
%84 = phi %14, 0:i32, %83
%85 = phi %13, 0:i32, %84
%86 = phi %9, %82, %85
%87:i32 = var
%88 = phi %6, %87, %86
%89 = block 3
%90:i32 = var
%91:i32 = var
%92 = phi %10, %91, 0:i32
%93 = phi %15, 0:i32, %92
%94 = phi %14, 0:i32, %93
%95 = phi %13, 0:i32, %94
%96 = phi %9, %92, %95
%97 = phi %21, %51, %96
%98 = phi %20, %97, 0:i32
%99 = phi %8, %96, %98
%100 = phi %6, %90, %99
%101 = phi %28, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %26, %100, %102
%104 = phi %5, 0:i32, %103
%105 = phi %89, 0:i32, 0:i32, %104
%106 = phi %34, %105, 0:i32
%107 = phi %2, %86, %88, %88, %88, %88, %106
%108 = phi %79, %80, %107
%109 = phi %46, %78, %108
%110 = phi %45, %78, %109
%111 = phi %1, %78, %110
%112 = add %50, %111 (hasExternalUses)
%113 = block 2
%114:i32 = var
%115 = phi %113, 0:i32, %114
%116 = add %112, %115 (hasExternalUses)
%117:i32 = var
%118 = sub %116, %117
%119:i32 = var
%120:i32 = var
%121 = phi %10, %119, %120
%122 = block 2
%123:i32 = var
%124 = phi %122, 16:i32, %123
%125 = phi %15, %120, %121
%126 = phi %14, -1:i32, %125
%127 = phi %13, %124, %126
%128 = phi %9, %121, %127
%129:i32 = var
%130 = phi %6, %129, %128
%131 = phi %34, %130, %128
%132 = phi %2, %128, %130, %130, %130, %130, %131
%133 = sub %118, %132 (hasExternalUses)
%134 = add %0, %133 (hasExternalUses)
%135 = or %134, 1:i32
%136:i32 = var
blockpc %1 0 %136 1
%137:i32 = var
blockpc %1 1 %137 1
%138:i32 = var
blockpc %8 0 %138 1
%139:i32 = var
blockpc %8 1 %139 1
%140:i32 = var
blockpc %13 0 %140 1
%141:i32 = var
blockpc %13 1 %141 1
%142:i32 = var
blockpc %14 0 %142 1
%143:i32 = var
blockpc %14 1 %143 1
%144:i32 = var
blockpc %15 0 %144 1
%145:i32 = var
blockpc %15 1 %145 1
%146:i32 = var
blockpc %20 0 %146 1
%147:i32 = var
blockpc %20 1 %147 1
%148:i32 = var
blockpc %21 0 %148 1
%149:i32 = var
blockpc %21 1 %149 1
%150:i32 = var
blockpc %26 0 %150 1
%151:i32 = var
blockpc %26 1 %151 1
%152:i32 = var
blockpc %27 0 %152 1
%153:i32 = var
blockpc %27 1 %153 1
%154:i32 = var
blockpc %28 0 %154 1
%155:i32 = var
blockpc %28 1 %155 1
%156:i32 = var
blockpc %34 0 %156 1
%157:i32 = var
blockpc %34 1 %157 1
%158:i32 = var
blockpc %45 0 %158 1
%159:i32 = var
blockpc %45 1 %159 1
%160:i32 = var
blockpc %46 0 %160 1
%161:i32 = var
blockpc %46 1 %161 1
%162:i32 = var
blockpc %79 0 %162 1
%163:i32 = var
blockpc %79 1 %163 1
%164:i32 = var
blockpc %113 0 %164 1
%165:i32 = var
blockpc %113 1 %165 1
%166:i32 = var
blockpc %122 0 %166 1
%167:i32 = var
blockpc %122 1 %167 1
%168:i32 = var
%169:i32 = var
%170:i32 = var
%171:i32 = var
%172:i32 = var
%173:i32 = var
pc %168 1
pc %169 1
pc %170 1
pc %171 1
pc %172 1
pc %173 1
infer %135


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69:i32 = var
%70 = add %68, %69
%71:i32 = var
blockpc %0 0 %71 1
%72:i32 = var
blockpc %0 1 %72 1
%73:i32 = var
blockpc %7 0 %73 1
%74:i32 = var
blockpc %7 1 %74 1
%75:i32 = var
blockpc %12 0 %75 1
%76:i32 = var
blockpc %12 1 %76 1
%77:i32 = var
blockpc %13 0 %77 1
%78:i32 = var
blockpc %13 1 %78 1
%79:i32 = var
blockpc %14 0 %79 1
%80:i32 = var
blockpc %14 1 %80 1
%81:i32 = var
blockpc %19 0 %81 1
%82:i32 = var
blockpc %19 1 %82 1
%83:i32 = var
blockpc %20 0 %83 1
%84:i32 = var
blockpc %20 1 %84 1
%85:i32 = var
blockpc %25 0 %85 1
%86:i32 = var
blockpc %25 1 %86 1
%87:i32 = var
blockpc %26 0 %87 1
%88:i32 = var
blockpc %26 1 %88 1
%89:i32 = var
blockpc %27 0 %89 1
%90:i32 = var
blockpc %27 1 %90 1
%91:i32 = var
blockpc %33 0 %91 1
%92:i32 = var
blockpc %33 1 %92 1
%93:i32 = var
blockpc %44 0 %93 1
%94:i32 = var
blockpc %44 1 %94 1
%95:i32 = var
blockpc %45 0 %95 1
%96:i32 = var
blockpc %45 1 %96 1
%97:i32 = var
blockpc %50 0 %97 1
%98:i32 = var
blockpc %50 1 %98 1
%99:i32 = var
blockpc %57 0 %99 1
%100:i32 = var
blockpc %57 1 %100 1
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105:i32 = var
%106:i32 = var
pc %101 1
pc %102 1
pc %103 1
pc %104 1
pc %105 1
pc %106 1
infer %70


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116 = add %115, 4:i32
%117:i32 = var
blockpc %0 0 %117 1
%118:i32 = var
blockpc %0 1 %118 1
%119:i32 = var
blockpc %7 0 %119 1
%120:i32 = var
blockpc %7 1 %120 1
%121:i32 = var
blockpc %12 0 %121 1
%122:i32 = var
blockpc %12 1 %122 1
%123:i32 = var
blockpc %13 0 %123 1
%124:i32 = var
blockpc %13 1 %124 1
%125:i32 = var
blockpc %14 0 %125 1
%126:i32 = var
blockpc %14 1 %126 1
%127:i32 = var
blockpc %19 0 %127 1
%128:i32 = var
blockpc %19 1 %128 1
%129:i32 = var
blockpc %20 0 %129 1
%130:i32 = var
blockpc %20 1 %130 1
%131:i32 = var
blockpc %25 0 %131 1
%132:i32 = var
blockpc %25 1 %132 1
%133:i32 = var
blockpc %26 0 %133 1
%134:i32 = var
blockpc %26 1 %134 1
%135:i32 = var
blockpc %27 0 %135 1
%136:i32 = var
blockpc %27 1 %136 1
%137:i32 = var
blockpc %33 0 %137 1
%138:i32 = var
blockpc %33 1 %138 1
%139:i32 = var
blockpc %44 0 %139 1
%140:i32 = var
blockpc %44 1 %140 1
%141:i32 = var
blockpc %45 0 %141 1
%142:i32 = var
blockpc %45 1 %142 1
%143:i32 = var
blockpc %78 0 %143 1
%144:i32 = var
blockpc %78 1 %144 1
%145:i32 = var
blockpc %112 0 %145 1
%146:i32 = var
blockpc %112 1 %146 1
%147:i32 = var
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
pc %147 1
pc %148 1
pc %149 1
pc %150 1
pc %151 1
infer %116


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 3:i32
%2:i32 = var
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85 = phi %18, %84, 0:i32
%86 = phi %27, 0:i32, %85
%87 = phi %24, 0:i32, %86
%88 = phi %21, 0:i32, %87
%89 = phi %17, %85, %88
%90 = phi %37, %89, %81
%91 = phi %34, %90, %89
%92 = phi %14, %89, %91
%93 = phi %12, %83, %92
%94 = phi %50, %82, %93
%95 = phi %47, %93, %94
%96 = phi %44, %93, %95
%97 = phi %11, %93, %96
%98:i32 = var
%99:i32 = var
%100:i32 = var
%101 = phi %18, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %24, 0:i32, %102
%104 = phi %21, 0:i32, %103
%105 = phi %17, %101, %104
%106 = phi %12, %99, %105
%107 = phi %58, %106, %105
%108 = phi %4, %81, %82, %97, %97, %98, %107
%109 = block 2
%110:i32 = var
blockpc %109 0 %110 1
%111:i32 = var
blockpc %109 1 %111 1
%112:i32 = var
%113:i32 = var
%114 = phi %18, %113, 0:i32
%115 = phi %27, 0:i32, %114
%116 = phi %24, 0:i32, %115
%117 = phi %21, 0:i32, %116
%118 = phi %17, %114, %117
%119:i32 = var
%120 = phi %12, %119, %118
%121 = block 3
%122:i32 = var
%123:i32 = var
%124 = phi %18, %123, 0:i32
%125 = phi %27, 0:i32, %124
%126 = phi %24, 0:i32, %125
%127 = phi %21, 0:i32, %126
%128 = phi %17, %124, %127
%129 = phi %37, %81, %128
%130 = phi %34, %129, 0:i32
%131 = phi %14, %128, %130
%132 = phi %12, %122, %131
%133 = phi %50, %132, 0:i32
%134 = phi %47, 0:i32, %133
%135 = phi %44, %132, %134
%136 = phi %11, 0:i32, %135
%137 = phi %121, 0:i32, 0:i32, %136
%138 = phi %58, %137, 0:i32
%139 = phi %4, %118, %120, %120, %120, %120, %138
%140 = phi %109, %112, %139
%141 = phi %74, %108, %140
%142 = phi %71, %108, %141
%143 = phi %3, %108, %142
%144 = add %80, %143
%145 = block 2
%146:i32 = var
blockpc %145 0 %146 1
%147:i32 = var
blockpc %145 1 %147 1
%148:i32 = var
%149 = phi %145, 0:i32, %148
%150 = add %144, %149
%151 = eq %2, %150
%152:i32 = zext %151
%153 = eq %152, 0:i32
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, 3:i32
%2 = eq %1, 1:i32
%3:i32 = var
%4 = block 2
%5 = block 6
%6 = phi %5, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%7 = eq %6, 143:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10:i32 = var
%11:i32 = var
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18 = block 2
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, 0:i32
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = phi %28, 0:i32, %21
%32 = phi %25, 0:i32, %31
%33 = phi %22, 0:i32, %32
%34 = phi %18, %21, %33
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = phi %38, %34, %10
%42 = phi %35, %41, %34
%43 = phi %15, %34, %42
%44 = phi %13, %14, %43
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54:i32 = var
%55 = phi %51, %54, %44
%56 = phi %48, %44, %55
%57 = phi %45, %44, %56
%58 = phi %12, %44, %57
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62:i32 = var
%63:i32 = var
%64 = phi %19, %63, 0:i32
%65 = phi %28, 0:i32, %64
%66 = phi %25, 0:i32, %65
%67 = phi %22, 0:i32, %66
%68 = phi %18, %64, %67
%69 = phi %13, %62, %68
%70 = phi %59, %69, %68
%71 = phi %5, %10, %11, %58, %58, %58, %70
%72 = block 2
%73:i32 = var
blockpc %72 0 %73 1
%74:i32 = var
blockpc %72 1 %74 1
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78:i32 = var
%79 = phi %75, %71, %78
%80 = phi %72, %71, %79
%81 = phi %4, %71, %80
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85:i32 = var
%86 = phi %19, %85, 0:i32
%87 = phi %28, 0:i32, %86
%88 = phi %25, 0:i32, %87
%89 = phi %22, 0:i32, %88
%90 = phi %18, %86, %89
%91 = phi %38, %90, %82
%92 = phi %35, %91, %90
%93 = phi %15, %90, %92
%94 = phi %13, %84, %93
%95 = phi %51, %83, %94
%96 = phi %48, %94, %95
%97 = phi %45, %94, %96
%98 = phi %12, %94, %97
%99:i32 = var
%100:i32 = var
%101:i32 = var
%102 = phi %19, %101, 0:i32
%103 = phi %28, 0:i32, %102
%104 = phi %25, 0:i32, %103
%105 = phi %22, 0:i32, %104
%106 = phi %18, %102, %105
%107 = phi %13, %100, %106
%108 = phi %59, %107, %106
%109 = phi %5, %82, %83, %98, %98, %99, %108
%110 = block 2
%111:i32 = var
blockpc %110 0 %111 1
%112:i32 = var
blockpc %110 1 %112 1
%113:i32 = var
%114:i32 = var
%115 = phi %19, %114, 0:i32
%116 = phi %28, 0:i32, %115
%117 = phi %25, 0:i32, %116
%118 = phi %22, 0:i32, %117
%119 = phi %18, %115, %118
%120:i32 = var
%121 = phi %13, %120, %119
%122 = block 3
%123:i32 = var
%124:i32 = var
%125 = phi %19, %124, 0:i32
%126 = phi %28, 0:i32, %125
%127 = phi %25, 0:i32, %126
%128 = phi %22, 0:i32, %127
%129 = phi %18, %125, %128
%130 = phi %38, %82, %129
%131 = phi %35, %130, 0:i32
%132 = phi %15, %129, %131
%133 = phi %13, %123, %132
%134 = phi %51, %133, 0:i32
%135 = phi %48, 0:i32, %134
%136 = phi %45, %133, %135
%137 = phi %12, 0:i32, %136
%138 = phi %122, 0:i32, 0:i32, %137
%139 = phi %59, %138, 0:i32
%140 = phi %5, %119, %121, %121, %121, %121, %139
%141 = phi %110, %113, %140
%142 = phi %75, %109, %141
%143 = phi %72, %109, %142
%144 = phi %4, %109, %143
%145 = add %81, %144
%146 = block 2
%147:i32 = var
blockpc %146 0 %147 1
%148:i32 = var
blockpc %146 1 %148 1
%149:i32 = var
%150 = phi %146, 0:i32, %149
%151 = add %145, %150
%152 = eq %3, %151
%153:i32 = zext %152
%154 = eq %153, 0:i32
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = and %0, 3:i32
%3 = eq %2, 1:i32
%4:i32 = var
%5 = block 2
%6 = block 6
%7 = phi %6, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%8 = eq %7, 143:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11:i32 = var
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, 0:i32
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, 0:i32, %22
%33 = phi %26, 0:i32, %32
%34 = phi %23, 0:i32, %33
%35 = phi %19, %22, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = phi %39, %35, %11
%43 = phi %36, %42, %35
%44 = phi %16, %35, %43
%45 = phi %14, %15, %44
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56 = phi %52, %55, %45
%57 = phi %49, %45, %56
%58 = phi %46, %45, %57
%59 = phi %13, %45, %58
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63:i32 = var
%64:i32 = var
%65 = phi %20, %64, 0:i32
%66 = phi %29, 0:i32, %65
%67 = phi %26, 0:i32, %66
%68 = phi %23, 0:i32, %67
%69 = phi %19, %65, %68
%70 = phi %14, %63, %69
%71 = phi %60, %70, %69
%72 = phi %6, %11, %12, %59, %59, %59, %71
%73 = block 2
%74:i32 = var
blockpc %73 0 %74 1
%75:i32 = var
blockpc %73 1 %75 1
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79:i32 = var
%80 = phi %76, %72, %79
%81 = phi %73, %72, %80
%82 = phi %5, %72, %81
%83:i32 = var
%84:i32 = var
%85:i32 = var
%86:i32 = var
%87 = phi %20, %86, 0:i32
%88 = phi %29, 0:i32, %87
%89 = phi %26, 0:i32, %88
%90 = phi %23, 0:i32, %89
%91 = phi %19, %87, %90
%92 = phi %39, %91, %83
%93 = phi %36, %92, %91
%94 = phi %16, %91, %93
%95 = phi %14, %85, %94
%96 = phi %52, %84, %95
%97 = phi %49, %95, %96
%98 = phi %46, %95, %97
%99 = phi %13, %95, %98
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103 = phi %20, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %26, 0:i32, %104
%106 = phi %23, 0:i32, %105
%107 = phi %19, %103, %106
%108 = phi %14, %101, %107
%109 = phi %60, %108, %107
%110 = phi %6, %83, %84, %99, %99, %100, %109
%111 = block 2
%112:i32 = var
blockpc %111 0 %112 1
%113:i32 = var
blockpc %111 1 %113 1
%114:i32 = var
%115:i32 = var
%116 = phi %20, %115, 0:i32
%117 = phi %29, 0:i32, %116
%118 = phi %26, 0:i32, %117
%119 = phi %23, 0:i32, %118
%120 = phi %19, %116, %119
%121:i32 = var
%122 = phi %14, %121, %120
%123 = block 3
%124:i32 = var
%125:i32 = var
%126 = phi %20, %125, 0:i32
%127 = phi %29, 0:i32, %126
%128 = phi %26, 0:i32, %127
%129 = phi %23, 0:i32, %128
%130 = phi %19, %126, %129
%131 = phi %39, %83, %130
%132 = phi %36, %131, 0:i32
%133 = phi %16, %130, %132
%134 = phi %14, %124, %133
%135 = phi %52, %134, 0:i32
%136 = phi %49, 0:i32, %135
%137 = phi %46, %134, %136
%138 = phi %13, 0:i32, %137
%139 = phi %123, 0:i32, 0:i32, %138
%140 = phi %60, %139, 0:i32
%141 = phi %6, %120, %122, %122, %122, %122, %140
%142 = phi %111, %114, %141
%143 = phi %76, %110, %142
%144 = phi %73, %110, %143
%145 = phi %5, %110, %144
%146 = add %82, %145
%147 = block 2
%148:i32 = var
blockpc %147 0 %148 1
%149:i32 = var
blockpc %147 1 %149 1
%150:i32 = var
%151 = phi %147, 0:i32, %150
%152 = add %146, %151
%153 = eq %4, %152
%154:i32 = zext %153
%155 = eq %154, 0:i32
%156:i32 = var
%157:i32 = var
%158:i32 = var
%159:i32 = var
pc %3 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
pc %159 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32
%2 = and %0, 3:i32
%3 = eq %2, 1:i32
%4:i32 = var
%5 = block 2
%6 = block 6
%7 = phi %6, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%8 = eq %7, 143:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11:i32 = var
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, 0:i32
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, 0:i32, %22
%33 = phi %26, 0:i32, %32
%34 = phi %23, 0:i32, %33
%35 = phi %19, %22, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = phi %39, %35, %11
%43 = phi %36, %42, %35
%44 = phi %16, %35, %43
%45 = phi %14, %15, %44
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56 = phi %52, %55, %45
%57 = phi %49, %45, %56
%58 = phi %46, %45, %57
%59 = phi %13, %45, %58
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63:i32 = var
%64:i32 = var
%65 = phi %20, %64, 0:i32
%66 = phi %29, 0:i32, %65
%67 = phi %26, 0:i32, %66
%68 = phi %23, 0:i32, %67
%69 = phi %19, %65, %68
%70 = phi %14, %63, %69
%71 = phi %60, %70, %69
%72 = phi %6, %11, %12, %59, %59, %59, %71
%73 = block 2
%74:i32 = var
blockpc %73 0 %74 1
%75:i32 = var
blockpc %73 1 %75 1
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79:i32 = var
%80 = phi %76, %72, %79
%81 = phi %73, %72, %80
%82 = phi %5, %72, %81
%83:i32 = var
%84:i32 = var
%85:i32 = var
%86:i32 = var
%87 = phi %20, %86, 0:i32
%88 = phi %29, 0:i32, %87
%89 = phi %26, 0:i32, %88
%90 = phi %23, 0:i32, %89
%91 = phi %19, %87, %90
%92 = phi %39, %91, %83
%93 = phi %36, %92, %91
%94 = phi %16, %91, %93
%95 = phi %14, %85, %94
%96 = phi %52, %84, %95
%97 = phi %49, %95, %96
%98 = phi %46, %95, %97
%99 = phi %13, %95, %98
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103 = phi %20, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %26, 0:i32, %104
%106 = phi %23, 0:i32, %105
%107 = phi %19, %103, %106
%108 = phi %14, %101, %107
%109 = phi %60, %108, %107
%110 = phi %6, %83, %84, %99, %99, %100, %109
%111 = block 2
%112:i32 = var
blockpc %111 0 %112 1
%113:i32 = var
blockpc %111 1 %113 1
%114:i32 = var
%115:i32 = var
%116 = phi %20, %115, 0:i32
%117 = phi %29, 0:i32, %116
%118 = phi %26, 0:i32, %117
%119 = phi %23, 0:i32, %118
%120 = phi %19, %116, %119
%121:i32 = var
%122 = phi %14, %121, %120
%123 = block 3
%124:i32 = var
%125:i32 = var
%126 = phi %20, %125, 0:i32
%127 = phi %29, 0:i32, %126
%128 = phi %26, 0:i32, %127
%129 = phi %23, 0:i32, %128
%130 = phi %19, %126, %129
%131 = phi %39, %83, %130
%132 = phi %36, %131, 0:i32
%133 = phi %16, %130, %132
%134 = phi %14, %124, %133
%135 = phi %52, %134, 0:i32
%136 = phi %49, 0:i32, %135
%137 = phi %46, %134, %136
%138 = phi %13, 0:i32, %137
%139 = phi %123, 0:i32, 0:i32, %138
%140 = phi %60, %139, 0:i32
%141 = phi %6, %120, %122, %122, %122, %122, %140
%142 = phi %111, %114, %141
%143 = phi %76, %110, %142
%144 = phi %73, %110, %143
%145 = phi %5, %110, %144
%146 = add %82, %145
%147 = block 2
%148:i32 = var
blockpc %147 0 %148 1
%149:i32 = var
blockpc %147 1 %149 1
%150:i32 = var
%151 = phi %147, 0:i32, %150
%152 = add %146, %151
%153 = eq %4, %152
%154:i32 = zext %153
%155 = eq %154, 0:i32
%156:i32 = var
%157:i32 = var
%158:i32 = var
%159:i32 = var
pc %3 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
pc %159 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = ult %0, 256:i32
%2 = and %0, 3:i32
%3 = eq %2, 1:i32
%4:i32 = var
%5 = block 2
%6 = block 6
%7 = phi %6, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%8 = eq %7, 143:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11:i32 = var
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, 0:i32
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, 0:i32, %22
%33 = phi %26, 0:i32, %32
%34 = phi %23, 0:i32, %33
%35 = phi %19, %22, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = phi %39, %35, %11
%43 = phi %36, %42, %35
%44 = phi %16, %35, %43
%45 = phi %14, %15, %44
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56 = phi %52, %55, %45
%57 = phi %49, %45, %56
%58 = phi %46, %45, %57
%59 = phi %13, %45, %58
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63:i32 = var
%64:i32 = var
%65 = phi %20, %64, 0:i32
%66 = phi %29, 0:i32, %65
%67 = phi %26, 0:i32, %66
%68 = phi %23, 0:i32, %67
%69 = phi %19, %65, %68
%70 = phi %14, %63, %69
%71 = phi %60, %70, %69
%72 = phi %6, %11, %12, %59, %59, %59, %71
%73 = block 2
%74:i32 = var
blockpc %73 0 %74 1
%75:i32 = var
blockpc %73 1 %75 1
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79:i32 = var
%80 = phi %76, %72, %79
%81 = phi %73, %72, %80
%82 = phi %5, %72, %81
%83:i32 = var
%84:i32 = var
%85:i32 = var
%86:i32 = var
%87 = phi %20, %86, 0:i32
%88 = phi %29, 0:i32, %87
%89 = phi %26, 0:i32, %88
%90 = phi %23, 0:i32, %89
%91 = phi %19, %87, %90
%92 = phi %39, %91, %83
%93 = phi %36, %92, %91
%94 = phi %16, %91, %93
%95 = phi %14, %85, %94
%96 = phi %52, %84, %95
%97 = phi %49, %95, %96
%98 = phi %46, %95, %97
%99 = phi %13, %95, %98
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103 = phi %20, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %26, 0:i32, %104
%106 = phi %23, 0:i32, %105
%107 = phi %19, %103, %106
%108 = phi %14, %101, %107
%109 = phi %60, %108, %107
%110 = phi %6, %83, %84, %99, %99, %100, %109
%111 = block 2
%112:i32 = var
blockpc %111 0 %112 1
%113:i32 = var
blockpc %111 1 %113 1
%114:i32 = var
%115:i32 = var
%116 = phi %20, %115, 0:i32
%117 = phi %29, 0:i32, %116
%118 = phi %26, 0:i32, %117
%119 = phi %23, 0:i32, %118
%120 = phi %19, %116, %119
%121:i32 = var
%122 = phi %14, %121, %120
%123 = block 3
%124:i32 = var
%125:i32 = var
%126 = phi %20, %125, 0:i32
%127 = phi %29, 0:i32, %126
%128 = phi %26, 0:i32, %127
%129 = phi %23, 0:i32, %128
%130 = phi %19, %126, %129
%131 = phi %39, %83, %130
%132 = phi %36, %131, 0:i32
%133 = phi %16, %130, %132
%134 = phi %14, %124, %133
%135 = phi %52, %134, 0:i32
%136 = phi %49, 0:i32, %135
%137 = phi %46, %134, %136
%138 = phi %13, 0:i32, %137
%139 = phi %123, 0:i32, 0:i32, %138
%140 = phi %60, %139, 0:i32
%141 = phi %6, %120, %122, %122, %122, %122, %140
%142 = phi %111, %114, %141
%143 = phi %76, %110, %142
%144 = phi %73, %110, %143
%145 = phi %5, %110, %144
%146 = add %82, %145
%147 = block 2
%148:i32 = var
blockpc %147 0 %148 1
%149:i32 = var
blockpc %147 1 %149 1
%150:i32 = var
%151 = phi %147, 0:i32, %150
%152 = add %146, %151
%153 = eq %4, %152
%154:i32 = zext %153
%155 = eq %154, 0:i32
%156:i32 = var
%157:i32 = var
%158:i32 = var
%159:i32 = var
pc %3 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
pc %159 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116 = add %115, 8:i32
%117:i32 = var
blockpc %0 0 %117 1
%118:i32 = var
blockpc %0 1 %118 1
%119:i32 = var
blockpc %7 0 %119 1
%120:i32 = var
blockpc %7 1 %120 1
%121:i32 = var
blockpc %12 0 %121 1
%122:i32 = var
blockpc %12 1 %122 1
%123:i32 = var
blockpc %13 0 %123 1
%124:i32 = var
blockpc %13 1 %124 1
%125:i32 = var
blockpc %14 0 %125 1
%126:i32 = var
blockpc %14 1 %126 1
%127:i32 = var
blockpc %19 0 %127 1
%128:i32 = var
blockpc %19 1 %128 1
%129:i32 = var
blockpc %20 0 %129 1
%130:i32 = var
blockpc %20 1 %130 1
%131:i32 = var
blockpc %25 0 %131 1
%132:i32 = var
blockpc %25 1 %132 1
%133:i32 = var
blockpc %26 0 %133 1
%134:i32 = var
blockpc %26 1 %134 1
%135:i32 = var
blockpc %27 0 %135 1
%136:i32 = var
blockpc %27 1 %136 1
%137:i32 = var
blockpc %33 0 %137 1
%138:i32 = var
blockpc %33 1 %138 1
%139:i32 = var
blockpc %44 0 %139 1
%140:i32 = var
blockpc %44 1 %140 1
%141:i32 = var
blockpc %45 0 %141 1
%142:i32 = var
blockpc %45 1 %142 1
%143:i32 = var
blockpc %78 0 %143 1
%144:i32 = var
blockpc %78 1 %144 1
%145:i32 = var
blockpc %112 0 %145 1
%146:i32 = var
blockpc %112 1 %146 1
%147:i32 = var
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
pc %147 1
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
infer %116


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116 = add %115, 12:i32
%117:i32 = var
blockpc %0 0 %117 1
%118:i32 = var
blockpc %0 1 %118 1
%119:i32 = var
blockpc %7 0 %119 1
%120:i32 = var
blockpc %7 1 %120 1
%121:i32 = var
blockpc %12 0 %121 1
%122:i32 = var
blockpc %12 1 %122 1
%123:i32 = var
blockpc %13 0 %123 1
%124:i32 = var
blockpc %13 1 %124 1
%125:i32 = var
blockpc %14 0 %125 1
%126:i32 = var
blockpc %14 1 %126 1
%127:i32 = var
blockpc %19 0 %127 1
%128:i32 = var
blockpc %19 1 %128 1
%129:i32 = var
blockpc %20 0 %129 1
%130:i32 = var
blockpc %20 1 %130 1
%131:i32 = var
blockpc %25 0 %131 1
%132:i32 = var
blockpc %25 1 %132 1
%133:i32 = var
blockpc %26 0 %133 1
%134:i32 = var
blockpc %26 1 %134 1
%135:i32 = var
blockpc %27 0 %135 1
%136:i32 = var
blockpc %27 1 %136 1
%137:i32 = var
blockpc %33 0 %137 1
%138:i32 = var
blockpc %33 1 %138 1
%139:i32 = var
blockpc %44 0 %139 1
%140:i32 = var
blockpc %44 1 %140 1
%141:i32 = var
blockpc %45 0 %141 1
%142:i32 = var
blockpc %45 1 %142 1
%143:i32 = var
blockpc %78 0 %143 1
%144:i32 = var
blockpc %78 1 %144 1
%145:i32 = var
blockpc %112 0 %145 1
%146:i32 = var
blockpc %112 1 %146 1
%147:i32 = var
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
pc %147 1
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
infer %116


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = eq %0, %1
%3:i32 = var
%4 = ult %3, 256:i32
%5 = and %3, 3:i32
%6 = eq %5, 1:i32
%7:i32 = var
%8 = block 2
%9 = block 6
%10 = phi %9, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%11 = eq %10, 143:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14:i32 = var
%15:i32 = var
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = block 2
%20:i32 = var
blockpc %19 0 %20 1
%21:i32 = var
blockpc %19 1 %21 1
%22 = block 2
%23 = block 2
%24:i32 = var
%25 = phi %23, %24, 0:i32
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = phi %32, 0:i32, %25
%36 = phi %29, 0:i32, %35
%37 = phi %26, 0:i32, %36
%38 = phi %22, %25, %37
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = phi %42, %38, %14
%46 = phi %39, %45, %38
%47 = phi %19, %38, %46
%48 = phi %17, %18, %47
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58:i32 = var
%59 = phi %55, %58, %48
%60 = phi %52, %48, %59
%61 = phi %49, %48, %60
%62 = phi %16, %48, %61
%63 = block 2
%64:i32 = var
blockpc %63 0 %64 1
%65:i32 = var
blockpc %63 1 %65 1
%66:i32 = var
%67:i32 = var
%68 = phi %23, %67, 0:i32
%69 = phi %32, 0:i32, %68
%70 = phi %29, 0:i32, %69
%71 = phi %26, 0:i32, %70
%72 = phi %22, %68, %71
%73 = phi %17, %66, %72
%74 = phi %63, %73, %72
%75 = phi %9, %14, %15, %62, %62, %62, %74
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82:i32 = var
%83 = phi %79, %75, %82
%84 = phi %76, %75, %83
%85 = phi %8, %75, %84
%86:i32 = var
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90 = phi %23, %89, 0:i32
%91 = phi %32, 0:i32, %90
%92 = phi %29, 0:i32, %91
%93 = phi %26, 0:i32, %92
%94 = phi %22, %90, %93
%95 = phi %42, %94, %86
%96 = phi %39, %95, %94
%97 = phi %19, %94, %96
%98 = phi %17, %88, %97
%99 = phi %55, %87, %98
%100 = phi %52, %98, %99
%101 = phi %49, %98, %100
%102 = phi %16, %98, %101
%103:i32 = var
%104:i32 = var
%105:i32 = var
%106 = phi %23, %105, 0:i32
%107 = phi %32, 0:i32, %106
%108 = phi %29, 0:i32, %107
%109 = phi %26, 0:i32, %108
%110 = phi %22, %106, %109
%111 = phi %17, %104, %110
%112 = phi %63, %111, %110
%113 = phi %9, %86, %87, %102, %102, %103, %112
%114 = block 2
%115:i32 = var
blockpc %114 0 %115 1
%116:i32 = var
blockpc %114 1 %116 1
%117:i32 = var
%118:i32 = var
%119 = phi %23, %118, 0:i32
%120 = phi %32, 0:i32, %119
%121 = phi %29, 0:i32, %120
%122 = phi %26, 0:i32, %121
%123 = phi %22, %119, %122
%124:i32 = var
%125 = phi %17, %124, %123
%126 = block 3
%127:i32 = var
%128:i32 = var
%129 = phi %23, %128, 0:i32
%130 = phi %32, 0:i32, %129
%131 = phi %29, 0:i32, %130
%132 = phi %26, 0:i32, %131
%133 = phi %22, %129, %132
%134 = phi %42, %86, %133
%135 = phi %39, %134, 0:i32
%136 = phi %19, %133, %135
%137 = phi %17, %127, %136
%138 = phi %55, %137, 0:i32
%139 = phi %52, 0:i32, %138
%140 = phi %49, %137, %139
%141 = phi %16, 0:i32, %140
%142 = phi %126, 0:i32, 0:i32, %141
%143 = phi %63, %142, 0:i32
%144 = phi %9, %123, %125, %125, %125, %125, %143
%145 = phi %114, %117, %144
%146 = phi %79, %113, %145
%147 = phi %76, %113, %146
%148 = phi %8, %113, %147
%149 = add %85, %148
%150 = block 2
%151:i32 = var
blockpc %150 0 %151 1
%152:i32 = var
blockpc %150 1 %152 1
%153:i32 = var
%154 = phi %150, 0:i32, %153
%155 = add %149, %154
%156 = eq %7, %155
%157:i32 = zext %156
%158 = eq %157, 0:i32
%159:i32 = var
%160:i32 = var
%161:i32 = var
%162:i32 = var
pc %4 1
pc %6 1
pc %158 1
pc %159 1
pc %160 1
pc %161 1
pc %162 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32
%2 = shl 1:i32, %1
%3:i32 = var
%4:i32 = var
%5 = eq %3, %4
%6 = ult %0, 256:i32
%7 = and %0, 3:i32
%8 = eq %7, 1:i32
%9:i32 = var
%10 = block 2
%11 = block 6
%12 = phi %11, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%13 = eq %12, 143:i32
blockpc %10 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %10 1 %15 1
%16:i32 = var
%17:i32 = var
%18 = block 2
%19 = block 2
%20:i32 = var
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25 = block 2
%26:i32 = var
%27 = phi %25, %26, 0:i32
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = phi %34, 0:i32, %27
%38 = phi %31, 0:i32, %37
%39 = phi %28, 0:i32, %38
%40 = phi %24, %27, %39
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = phi %44, %40, %16
%48 = phi %41, %47, %40
%49 = phi %21, %40, %48
%50 = phi %19, %20, %49
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57 = block 2
%58:i32 = var
blockpc %57 0 %58 1
%59:i32 = var
blockpc %57 1 %59 1
%60:i32 = var
%61 = phi %57, %60, %50
%62 = phi %54, %50, %61
%63 = phi %51, %50, %62
%64 = phi %18, %50, %63
%65 = block 2
%66:i32 = var
blockpc %65 0 %66 1
%67:i32 = var
blockpc %65 1 %67 1
%68:i32 = var
%69:i32 = var
%70 = phi %25, %69, 0:i32
%71 = phi %34, 0:i32, %70
%72 = phi %31, 0:i32, %71
%73 = phi %28, 0:i32, %72
%74 = phi %24, %70, %73
%75 = phi %19, %68, %74
%76 = phi %65, %75, %74
%77 = phi %11, %16, %17, %64, %64, %64, %76
%78 = block 2
%79:i32 = var
blockpc %78 0 %79 1
%80:i32 = var
blockpc %78 1 %80 1
%81 = block 2
%82:i32 = var
blockpc %81 0 %82 1
%83:i32 = var
blockpc %81 1 %83 1
%84:i32 = var
%85 = phi %81, %77, %84
%86 = phi %78, %77, %85
%87 = phi %10, %77, %86
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91:i32 = var
%92 = phi %25, %91, 0:i32
%93 = phi %34, 0:i32, %92
%94 = phi %31, 0:i32, %93
%95 = phi %28, 0:i32, %94
%96 = phi %24, %92, %95
%97 = phi %44, %96, %88
%98 = phi %41, %97, %96
%99 = phi %21, %96, %98
%100 = phi %19, %90, %99
%101 = phi %57, %89, %100
%102 = phi %54, %100, %101
%103 = phi %51, %100, %102
%104 = phi %18, %100, %103
%105:i32 = var
%106:i32 = var
%107:i32 = var
%108 = phi %25, %107, 0:i32
%109 = phi %34, 0:i32, %108
%110 = phi %31, 0:i32, %109
%111 = phi %28, 0:i32, %110
%112 = phi %24, %108, %111
%113 = phi %19, %106, %112
%114 = phi %65, %113, %112
%115 = phi %11, %88, %89, %104, %104, %105, %114
%116 = block 2
%117:i32 = var
blockpc %116 0 %117 1
%118:i32 = var
blockpc %116 1 %118 1
%119:i32 = var
%120:i32 = var
%121 = phi %25, %120, 0:i32
%122 = phi %34, 0:i32, %121
%123 = phi %31, 0:i32, %122
%124 = phi %28, 0:i32, %123
%125 = phi %24, %121, %124
%126:i32 = var
%127 = phi %19, %126, %125
%128 = block 3
%129:i32 = var
%130:i32 = var
%131 = phi %25, %130, 0:i32
%132 = phi %34, 0:i32, %131
%133 = phi %31, 0:i32, %132
%134 = phi %28, 0:i32, %133
%135 = phi %24, %131, %134
%136 = phi %44, %88, %135
%137 = phi %41, %136, 0:i32
%138 = phi %21, %135, %137
%139 = phi %19, %129, %138
%140 = phi %57, %139, 0:i32
%141 = phi %54, 0:i32, %140
%142 = phi %51, %139, %141
%143 = phi %18, 0:i32, %142
%144 = phi %128, 0:i32, 0:i32, %143
%145 = phi %65, %144, 0:i32
%146 = phi %11, %125, %127, %127, %127, %127, %145
%147 = phi %116, %119, %146
%148 = phi %81, %115, %147
%149 = phi %78, %115, %148
%150 = phi %10, %115, %149
%151 = add %87, %150
%152 = block 2
%153:i32 = var
blockpc %152 0 %153 1
%154:i32 = var
blockpc %152 1 %154 1
%155:i32 = var
%156 = phi %152, 0:i32, %155
%157 = add %151, %156
%158 = eq %9, %157
%159:i32 = zext %158
%160 = eq %159, 0:i32
%161:i32 = var
%162:i32 = var
%163:i32 = var
%164:i32 = var
pc %5 1
pc %6 1
pc %8 1
pc %160 1
pc %161 1
pc %162 1
pc %163 1
pc %164 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 3:i32
%2 = shl 1:i32, %1
%3 = xor %2, -1:i32
%4:i32 = var
%5:i32 = var
%6 = eq %4, %5
%7 = ult %0, 256:i32
%8 = and %0, 3:i32
%9 = eq %8, 1:i32
%10:i32 = var
%11 = block 2
%12 = block 6
%13 = phi %12, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%14 = eq %13, 143:i32
blockpc %11 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %11 1 %16 1
%17:i32 = var
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26 = block 2
%27:i32 = var
%28 = phi %26, %27, 0:i32
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = phi %35, 0:i32, %28
%39 = phi %32, 0:i32, %38
%40 = phi %29, 0:i32, %39
%41 = phi %25, %28, %40
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = phi %45, %41, %17
%49 = phi %42, %48, %41
%50 = phi %22, %41, %49
%51 = phi %20, %21, %50
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62 = phi %58, %61, %51
%63 = phi %55, %51, %62
%64 = phi %52, %51, %63
%65 = phi %19, %51, %64
%66 = block 2
%67:i32 = var
blockpc %66 0 %67 1
%68:i32 = var
blockpc %66 1 %68 1
%69:i32 = var
%70:i32 = var
%71 = phi %26, %70, 0:i32
%72 = phi %35, 0:i32, %71
%73 = phi %32, 0:i32, %72
%74 = phi %29, 0:i32, %73
%75 = phi %25, %71, %74
%76 = phi %20, %69, %75
%77 = phi %66, %76, %75
%78 = phi %12, %17, %18, %65, %65, %65, %77
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82 = block 2
%83:i32 = var
blockpc %82 0 %83 1
%84:i32 = var
blockpc %82 1 %84 1
%85:i32 = var
%86 = phi %82, %78, %85
%87 = phi %79, %78, %86
%88 = phi %11, %78, %87
%89:i32 = var
%90:i32 = var
%91:i32 = var
%92:i32 = var
%93 = phi %26, %92, 0:i32
%94 = phi %35, 0:i32, %93
%95 = phi %32, 0:i32, %94
%96 = phi %29, 0:i32, %95
%97 = phi %25, %93, %96
%98 = phi %45, %97, %89
%99 = phi %42, %98, %97
%100 = phi %22, %97, %99
%101 = phi %20, %91, %100
%102 = phi %58, %90, %101
%103 = phi %55, %101, %102
%104 = phi %52, %101, %103
%105 = phi %19, %101, %104
%106:i32 = var
%107:i32 = var
%108:i32 = var
%109 = phi %26, %108, 0:i32
%110 = phi %35, 0:i32, %109
%111 = phi %32, 0:i32, %110
%112 = phi %29, 0:i32, %111
%113 = phi %25, %109, %112
%114 = phi %20, %107, %113
%115 = phi %66, %114, %113
%116 = phi %12, %89, %90, %105, %105, %106, %115
%117 = block 2
%118:i32 = var
blockpc %117 0 %118 1
%119:i32 = var
blockpc %117 1 %119 1
%120:i32 = var
%121:i32 = var
%122 = phi %26, %121, 0:i32
%123 = phi %35, 0:i32, %122
%124 = phi %32, 0:i32, %123
%125 = phi %29, 0:i32, %124
%126 = phi %25, %122, %125
%127:i32 = var
%128 = phi %20, %127, %126
%129 = block 3
%130:i32 = var
%131:i32 = var
%132 = phi %26, %131, 0:i32
%133 = phi %35, 0:i32, %132
%134 = phi %32, 0:i32, %133
%135 = phi %29, 0:i32, %134
%136 = phi %25, %132, %135
%137 = phi %45, %89, %136
%138 = phi %42, %137, 0:i32
%139 = phi %22, %136, %138
%140 = phi %20, %130, %139
%141 = phi %58, %140, 0:i32
%142 = phi %55, 0:i32, %141
%143 = phi %52, %140, %142
%144 = phi %19, 0:i32, %143
%145 = phi %129, 0:i32, 0:i32, %144
%146 = phi %66, %145, 0:i32
%147 = phi %12, %126, %128, %128, %128, %128, %146
%148 = phi %117, %120, %147
%149 = phi %82, %116, %148
%150 = phi %79, %116, %149
%151 = phi %11, %116, %150
%152 = add %88, %151
%153 = block 2
%154:i32 = var
blockpc %153 0 %154 1
%155:i32 = var
blockpc %153 1 %155 1
%156:i32 = var
%157 = phi %153, 0:i32, %156
%158 = add %152, %157
%159 = eq %10, %158
%160:i32 = zext %159
%161 = eq %160, 0:i32
%162:i32 = var
%163:i32 = var
%164:i32 = var
%165:i32 = var
pc %6 1
pc %7 1
pc %9 1
pc %161 1
pc %162 1
pc %163 1
pc %164 1
pc %165 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = lshr %1, 3:i32
%3 = shl 1:i32, %2
%4 = xor %3, -1:i32
%5 = and %0, %4
%6:i32 = var
%7:i32 = var
%8 = eq %6, %7
%9 = ult %1, 256:i32
%10 = and %1, 3:i32
%11 = eq %10, 1:i32
%12:i32 = var
%13 = block 2
%14 = block 6
%15 = phi %14, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%16 = eq %15, 143:i32
blockpc %13 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %13 1 %18 1
%19:i32 = var
%20:i32 = var
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, 0:i32
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, 0:i32, %30
%41 = phi %34, 0:i32, %40
%42 = phi %31, 0:i32, %41
%43 = phi %27, %30, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = phi %47, %43, %19
%51 = phi %44, %50, %43
%52 = phi %24, %43, %51
%53 = phi %22, %23, %52
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57 = block 2
%58:i32 = var
blockpc %57 0 %58 1
%59:i32 = var
blockpc %57 1 %59 1
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63:i32 = var
%64 = phi %60, %63, %53
%65 = phi %57, %53, %64
%66 = phi %54, %53, %65
%67 = phi %21, %53, %66
%68 = block 2
%69:i32 = var
blockpc %68 0 %69 1
%70:i32 = var
blockpc %68 1 %70 1
%71:i32 = var
%72:i32 = var
%73 = phi %28, %72, 0:i32
%74 = phi %37, 0:i32, %73
%75 = phi %34, 0:i32, %74
%76 = phi %31, 0:i32, %75
%77 = phi %27, %73, %76
%78 = phi %22, %71, %77
%79 = phi %68, %78, %77
%80 = phi %14, %19, %20, %67, %67, %67, %79
%81 = block 2
%82:i32 = var
blockpc %81 0 %82 1
%83:i32 = var
blockpc %81 1 %83 1
%84 = block 2
%85:i32 = var
blockpc %84 0 %85 1
%86:i32 = var
blockpc %84 1 %86 1
%87:i32 = var
%88 = phi %84, %80, %87
%89 = phi %81, %80, %88
%90 = phi %13, %80, %89
%91:i32 = var
%92:i32 = var
%93:i32 = var
%94:i32 = var
%95 = phi %28, %94, 0:i32
%96 = phi %37, 0:i32, %95
%97 = phi %34, 0:i32, %96
%98 = phi %31, 0:i32, %97
%99 = phi %27, %95, %98
%100 = phi %47, %99, %91
%101 = phi %44, %100, %99
%102 = phi %24, %99, %101
%103 = phi %22, %93, %102
%104 = phi %60, %92, %103
%105 = phi %57, %103, %104
%106 = phi %54, %103, %105
%107 = phi %21, %103, %106
%108:i32 = var
%109:i32 = var
%110:i32 = var
%111 = phi %28, %110, 0:i32
%112 = phi %37, 0:i32, %111
%113 = phi %34, 0:i32, %112
%114 = phi %31, 0:i32, %113
%115 = phi %27, %111, %114
%116 = phi %22, %109, %115
%117 = phi %68, %116, %115
%118 = phi %14, %91, %92, %107, %107, %108, %117
%119 = block 2
%120:i32 = var
blockpc %119 0 %120 1
%121:i32 = var
blockpc %119 1 %121 1
%122:i32 = var
%123:i32 = var
%124 = phi %28, %123, 0:i32
%125 = phi %37, 0:i32, %124
%126 = phi %34, 0:i32, %125
%127 = phi %31, 0:i32, %126
%128 = phi %27, %124, %127
%129:i32 = var
%130 = phi %22, %129, %128
%131 = block 3
%132:i32 = var
%133:i32 = var
%134 = phi %28, %133, 0:i32
%135 = phi %37, 0:i32, %134
%136 = phi %34, 0:i32, %135
%137 = phi %31, 0:i32, %136
%138 = phi %27, %134, %137
%139 = phi %47, %91, %138
%140 = phi %44, %139, 0:i32
%141 = phi %24, %138, %140
%142 = phi %22, %132, %141
%143 = phi %60, %142, 0:i32
%144 = phi %57, 0:i32, %143
%145 = phi %54, %142, %144
%146 = phi %21, 0:i32, %145
%147 = phi %131, 0:i32, 0:i32, %146
%148 = phi %68, %147, 0:i32
%149 = phi %14, %128, %130, %130, %130, %130, %148
%150 = phi %119, %122, %149
%151 = phi %84, %118, %150
%152 = phi %81, %118, %151
%153 = phi %13, %118, %152
%154 = add %90, %153
%155 = block 2
%156:i32 = var
blockpc %155 0 %156 1
%157:i32 = var
blockpc %155 1 %157 1
%158:i32 = var
%159 = phi %155, 0:i32, %158
%160 = add %154, %159
%161 = eq %12, %160
%162:i32 = zext %161
%163 = eq %162, 0:i32
%164:i32 = var
%165:i32 = var
%166:i32 = var
%167:i32 = var
pc %8 1
pc %9 1
pc %11 1
pc %163 1
pc %164 1
pc %165 1
pc %166 1
pc %167 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = eq %2, %0
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult %6, 256:i32
%8 = and %6, 3:i32
%9 = eq %8, 1:i32
%10:i32 = var
%11 = block 2
%12 = block 6
%13 = phi %12, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%14 = eq %13, 143:i32
blockpc %11 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %11 1 %16 1
%17:i32 = var
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26 = block 2
%27:i32 = var
%28 = phi %26, %27, 0:i32
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = phi %35, 0:i32, %28
%39 = phi %32, 0:i32, %38
%40 = phi %29, 0:i32, %39
%41 = phi %25, %28, %40
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = phi %45, %41, %17
%49 = phi %42, %48, %41
%50 = phi %22, %41, %49
%51 = phi %20, %21, %50
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62 = phi %58, %61, %51
%63 = phi %55, %51, %62
%64 = phi %52, %51, %63
%65 = phi %19, %51, %64
%66 = block 2
%67:i32 = var
blockpc %66 0 %67 1
%68:i32 = var
blockpc %66 1 %68 1
%69:i32 = var
%70:i32 = var
%71 = phi %26, %70, 0:i32
%72 = phi %35, 0:i32, %71
%73 = phi %32, 0:i32, %72
%74 = phi %29, 0:i32, %73
%75 = phi %25, %71, %74
%76 = phi %20, %69, %75
%77 = phi %66, %76, %75
%78 = phi %12, %17, %18, %65, %65, %65, %77
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82 = block 2
%83:i32 = var
blockpc %82 0 %83 1
%84:i32 = var
blockpc %82 1 %84 1
%85:i32 = var
%86 = phi %82, %78, %85
%87 = phi %79, %78, %86
%88 = phi %11, %78, %87
%89:i32 = var
%90:i32 = var
%91:i32 = var
%92:i32 = var
%93 = phi %26, %92, 0:i32
%94 = phi %35, 0:i32, %93
%95 = phi %32, 0:i32, %94
%96 = phi %29, 0:i32, %95
%97 = phi %25, %93, %96
%98 = phi %45, %97, %89
%99 = phi %42, %98, %97
%100 = phi %22, %97, %99
%101 = phi %20, %91, %100
%102 = phi %58, %90, %101
%103 = phi %55, %101, %102
%104 = phi %52, %101, %103
%105 = phi %19, %101, %104
%106:i32 = var
%107:i32 = var
%108:i32 = var
%109 = phi %26, %108, 0:i32
%110 = phi %35, 0:i32, %109
%111 = phi %32, 0:i32, %110
%112 = phi %29, 0:i32, %111
%113 = phi %25, %109, %112
%114 = phi %20, %107, %113
%115 = phi %66, %114, %113
%116 = phi %12, %89, %90, %105, %105, %106, %115
%117 = block 2
%118:i32 = var
blockpc %117 0 %118 1
%119:i32 = var
blockpc %117 1 %119 1
%120:i32 = var
%121:i32 = var
%122 = phi %26, %121, 0:i32
%123 = phi %35, 0:i32, %122
%124 = phi %32, 0:i32, %123
%125 = phi %29, 0:i32, %124
%126 = phi %25, %122, %125
%127:i32 = var
%128 = phi %20, %127, %126
%129 = block 3
%130:i32 = var
%131:i32 = var
%132 = phi %26, %131, 0:i32
%133 = phi %35, 0:i32, %132
%134 = phi %32, 0:i32, %133
%135 = phi %29, 0:i32, %134
%136 = phi %25, %132, %135
%137 = phi %45, %89, %136
%138 = phi %42, %137, 0:i32
%139 = phi %22, %136, %138
%140 = phi %20, %130, %139
%141 = phi %58, %140, 0:i32
%142 = phi %55, 0:i32, %141
%143 = phi %52, %140, %142
%144 = phi %19, 0:i32, %143
%145 = phi %129, 0:i32, 0:i32, %144
%146 = phi %66, %145, 0:i32
%147 = phi %12, %126, %128, %128, %128, %128, %146
%148 = phi %117, %120, %147
%149 = phi %82, %116, %148
%150 = phi %79, %116, %149
%151 = phi %11, %116, %150
%152 = add %88, %151
%153 = block 2
%154:i32 = var
blockpc %153 0 %154 1
%155:i32 = var
blockpc %153 1 %155 1
%156:i32 = var
%157 = phi %153, 0:i32, %156
%158 = add %152, %157
%159 = eq %10, %158
%160:i32 = zext %159
%161 = eq %160, 0:i32
%162:i32 = var
%163:i32 = var
%164:i32 = var
%165:i32 = var
pc %5 1
pc %7 1
pc %9 1
pc %161 1
pc %162 1
pc %163 1
pc %164 1
pc %165 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = eq %0, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult %6, 256:i32
%8 = and %6, 3:i32
%9 = eq %8, 1:i32
%10:i32 = var
%11 = block 2
%12 = block 6
%13 = phi %12, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%14 = eq %13, 143:i32
blockpc %11 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %11 1 %16 1
%17:i32 = var
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26 = block 2
%27:i32 = var
%28 = phi %26, %27, 0:i32
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = phi %35, 0:i32, %28
%39 = phi %32, 0:i32, %38
%40 = phi %29, 0:i32, %39
%41 = phi %25, %28, %40
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = phi %45, %41, %17
%49 = phi %42, %48, %41
%50 = phi %22, %41, %49
%51 = phi %20, %21, %50
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62 = phi %58, %61, %51
%63 = phi %55, %51, %62
%64 = phi %52, %51, %63
%65 = phi %19, %51, %64
%66 = block 2
%67:i32 = var
blockpc %66 0 %67 1
%68:i32 = var
blockpc %66 1 %68 1
%69:i32 = var
%70:i32 = var
%71 = phi %26, %70, 0:i32
%72 = phi %35, 0:i32, %71
%73 = phi %32, 0:i32, %72
%74 = phi %29, 0:i32, %73
%75 = phi %25, %71, %74
%76 = phi %20, %69, %75
%77 = phi %66, %76, %75
%78 = phi %12, %17, %18, %65, %65, %65, %77
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82 = block 2
%83:i32 = var
blockpc %82 0 %83 1
%84:i32 = var
blockpc %82 1 %84 1
%85:i32 = var
%86 = phi %82, %78, %85
%87 = phi %79, %78, %86
%88 = phi %11, %78, %87
%89:i32 = var
%90:i32 = var
%91:i32 = var
%92:i32 = var
%93 = phi %26, %92, 0:i32
%94 = phi %35, 0:i32, %93
%95 = phi %32, 0:i32, %94
%96 = phi %29, 0:i32, %95
%97 = phi %25, %93, %96
%98 = phi %45, %97, %89
%99 = phi %42, %98, %97
%100 = phi %22, %97, %99
%101 = phi %20, %91, %100
%102 = phi %58, %90, %101
%103 = phi %55, %101, %102
%104 = phi %52, %101, %103
%105 = phi %19, %101, %104
%106:i32 = var
%107:i32 = var
%108:i32 = var
%109 = phi %26, %108, 0:i32
%110 = phi %35, 0:i32, %109
%111 = phi %32, 0:i32, %110
%112 = phi %29, 0:i32, %111
%113 = phi %25, %109, %112
%114 = phi %20, %107, %113
%115 = phi %66, %114, %113
%116 = phi %12, %89, %90, %105, %105, %106, %115
%117 = block 2
%118:i32 = var
blockpc %117 0 %118 1
%119:i32 = var
blockpc %117 1 %119 1
%120:i32 = var
%121:i32 = var
%122 = phi %26, %121, 0:i32
%123 = phi %35, 0:i32, %122
%124 = phi %32, 0:i32, %123
%125 = phi %29, 0:i32, %124
%126 = phi %25, %122, %125
%127:i32 = var
%128 = phi %20, %127, %126
%129 = block 3
%130:i32 = var
%131:i32 = var
%132 = phi %26, %131, 0:i32
%133 = phi %35, 0:i32, %132
%134 = phi %32, 0:i32, %133
%135 = phi %29, 0:i32, %134
%136 = phi %25, %132, %135
%137 = phi %45, %89, %136
%138 = phi %42, %137, 0:i32
%139 = phi %22, %136, %138
%140 = phi %20, %130, %139
%141 = phi %58, %140, 0:i32
%142 = phi %55, 0:i32, %141
%143 = phi %52, %140, %142
%144 = phi %19, 0:i32, %143
%145 = phi %129, 0:i32, 0:i32, %144
%146 = phi %66, %145, 0:i32
%147 = phi %12, %126, %128, %128, %128, %128, %146
%148 = phi %117, %120, %147
%149 = phi %82, %116, %148
%150 = phi %79, %116, %149
%151 = phi %11, %116, %150
%152 = add %88, %151
%153 = block 2
%154:i32 = var
blockpc %153 0 %154 1
%155:i32 = var
blockpc %153 1 %155 1
%156:i32 = var
%157 = phi %153, 0:i32, %156
%158 = add %152, %157
%159 = eq %10, %158
%160:i32 = zext %159
%161 = eq %160, 0:i32
%162:i32 = var
%163:i32 = var
%164:i32 = var
%165:i32 = var
pc %5 1
pc %7 1
pc %9 1
pc %161 1
pc %162 1
pc %163 1
pc %164 1
pc %165 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116 = add %115, 24:i32
%117:i32 = var
blockpc %0 0 %117 1
%118:i32 = var
blockpc %0 1 %118 1
%119:i32 = var
blockpc %7 0 %119 1
%120:i32 = var
blockpc %7 1 %120 1
%121:i32 = var
blockpc %12 0 %121 1
%122:i32 = var
blockpc %12 1 %122 1
%123:i32 = var
blockpc %13 0 %123 1
%124:i32 = var
blockpc %13 1 %124 1
%125:i32 = var
blockpc %14 0 %125 1
%126:i32 = var
blockpc %14 1 %126 1
%127:i32 = var
blockpc %19 0 %127 1
%128:i32 = var
blockpc %19 1 %128 1
%129:i32 = var
blockpc %20 0 %129 1
%130:i32 = var
blockpc %20 1 %130 1
%131:i32 = var
blockpc %25 0 %131 1
%132:i32 = var
blockpc %25 1 %132 1
%133:i32 = var
blockpc %26 0 %133 1
%134:i32 = var
blockpc %26 1 %134 1
%135:i32 = var
blockpc %27 0 %135 1
%136:i32 = var
blockpc %27 1 %136 1
%137:i32 = var
blockpc %33 0 %137 1
%138:i32 = var
blockpc %33 1 %138 1
%139:i32 = var
blockpc %44 0 %139 1
%140:i32 = var
blockpc %44 1 %140 1
%141:i32 = var
blockpc %45 0 %141 1
%142:i32 = var
blockpc %45 1 %142 1
%143:i32 = var
blockpc %78 0 %143 1
%144:i32 = var
blockpc %78 1 %144 1
%145:i32 = var
blockpc %112 0 %145 1
%146:i32 = var
blockpc %112 1 %146 1
%147:i32 = var
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
pc %147 1
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
infer %116


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116 = add %115, 12:i32
%117:i32 = var
blockpc %0 0 %117 1
%118:i32 = var
blockpc %0 1 %118 1
%119:i32 = var
blockpc %7 0 %119 1
%120:i32 = var
blockpc %7 1 %120 1
%121:i32 = var
blockpc %12 0 %121 1
%122:i32 = var
blockpc %12 1 %122 1
%123:i32 = var
blockpc %13 0 %123 1
%124:i32 = var
blockpc %13 1 %124 1
%125:i32 = var
blockpc %14 0 %125 1
%126:i32 = var
blockpc %14 1 %126 1
%127:i32 = var
blockpc %19 0 %127 1
%128:i32 = var
blockpc %19 1 %128 1
%129:i32 = var
blockpc %20 0 %129 1
%130:i32 = var
blockpc %20 1 %130 1
%131:i32 = var
blockpc %25 0 %131 1
%132:i32 = var
blockpc %25 1 %132 1
%133:i32 = var
blockpc %26 0 %133 1
%134:i32 = var
blockpc %26 1 %134 1
%135:i32 = var
blockpc %27 0 %135 1
%136:i32 = var
blockpc %27 1 %136 1
%137:i32 = var
blockpc %33 0 %137 1
%138:i32 = var
blockpc %33 1 %138 1
%139:i32 = var
blockpc %44 0 %139 1
%140:i32 = var
blockpc %44 1 %140 1
%141:i32 = var
blockpc %45 0 %141 1
%142:i32 = var
blockpc %45 1 %142 1
%143:i32 = var
blockpc %78 0 %143 1
%144:i32 = var
blockpc %78 1 %144 1
%145:i32 = var
blockpc %112 0 %145 1
%146:i32 = var
blockpc %112 1 %146 1
%147:i32 = var
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
pc %147 1
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
infer %116


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55 = phi %10, %54, 0:i32
%56 = phi %15, 0:i32, %55
%57 = phi %14, 0:i32, %56
%58 = phi %13, 0:i32, %57
%59 = phi %9, %55, %58
%60 = phi %21, %59, %51
%61 = phi %20, %60, %59
%62 = phi %8, %59, %61
%63 = phi %6, %53, %62
%64 = phi %28, %52, %63
%65 = phi %27, %63, %64
%66 = phi %26, %63, %65
%67 = phi %5, %63, %66
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %10, %70, 0:i32
%72 = phi %15, 0:i32, %71
%73 = phi %14, 0:i32, %72
%74 = phi %13, 0:i32, %73
%75 = phi %9, %71, %74
%76 = phi %6, %69, %75
%77 = phi %34, %76, %75
%78 = phi %2, %51, %52, %67, %67, %68, %77
%79 = block 2
%80:i32 = var
%81:i32 = var
%82 = phi %10, %81, 0:i32
%83 = phi %15, 0:i32, %82
%84 = phi %14, 0:i32, %83
%85 = phi %13, 0:i32, %84
%86 = phi %9, %82, %85
%87:i32 = var
%88 = phi %6, %87, %86
%89 = block 3
%90:i32 = var
%91:i32 = var
%92 = phi %10, %91, 0:i32
%93 = phi %15, 0:i32, %92
%94 = phi %14, 0:i32, %93
%95 = phi %13, 0:i32, %94
%96 = phi %9, %92, %95
%97 = phi %21, %51, %96
%98 = phi %20, %97, 0:i32
%99 = phi %8, %96, %98
%100 = phi %6, %90, %99
%101 = phi %28, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %26, %100, %102
%104 = phi %5, 0:i32, %103
%105 = phi %89, 0:i32, 0:i32, %104
%106 = phi %34, %105, 0:i32
%107 = phi %2, %86, %88, %88, %88, %88, %106
%108 = phi %79, %80, %107
%109 = phi %46, %78, %108
%110 = phi %45, %78, %109
%111 = phi %1, %78, %110
%112 = add %50, %111 (hasExternalUses)
%113 = block 2
%114:i32 = var
%115 = phi %113, 0:i32, %114
%116 = add %112, %115 (hasExternalUses)
%117 = eq %0, %116
%118:i32 = var
blockpc %1 0 %118 1
%119:i32 = var
blockpc %1 1 %119 1
%120:i32 = var
blockpc %8 0 %120 1
%121:i32 = var
blockpc %8 1 %121 1
%122:i32 = var
blockpc %13 0 %122 1
%123:i32 = var
blockpc %13 1 %123 1
%124:i32 = var
blockpc %14 0 %124 1
%125:i32 = var
blockpc %14 1 %125 1
%126:i32 = var
blockpc %15 0 %126 1
%127:i32 = var
blockpc %15 1 %127 1
%128:i32 = var
blockpc %20 0 %128 1
%129:i32 = var
blockpc %20 1 %129 1
%130:i32 = var
blockpc %21 0 %130 1
%131:i32 = var
blockpc %21 1 %131 1
%132:i32 = var
blockpc %26 0 %132 1
%133:i32 = var
blockpc %26 1 %133 1
%134:i32 = var
blockpc %27 0 %134 1
%135:i32 = var
blockpc %27 1 %135 1
%136:i32 = var
blockpc %28 0 %136 1
%137:i32 = var
blockpc %28 1 %137 1
%138:i32 = var
blockpc %34 0 %138 1
%139:i32 = var
blockpc %34 1 %139 1
%140:i32 = var
blockpc %45 0 %140 1
%141:i32 = var
blockpc %45 1 %141 1
%142:i32 = var
blockpc %46 0 %142 1
%143:i32 = var
blockpc %46 1 %143 1
%144:i32 = var
blockpc %79 0 %144 1
%145:i32 = var
blockpc %79 1 %145 1
%146:i32 = var
blockpc %113 0 %146 1
%147:i32 = var
blockpc %113 1 %147 1
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
%154:i32 = var
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
pc %154 1
infer %117


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116 = add %115, 16:i32
%117:i32 = var
blockpc %0 0 %117 1
%118:i32 = var
blockpc %0 1 %118 1
%119:i32 = var
blockpc %7 0 %119 1
%120:i32 = var
blockpc %7 1 %120 1
%121:i32 = var
blockpc %12 0 %121 1
%122:i32 = var
blockpc %12 1 %122 1
%123:i32 = var
blockpc %13 0 %123 1
%124:i32 = var
blockpc %13 1 %124 1
%125:i32 = var
blockpc %14 0 %125 1
%126:i32 = var
blockpc %14 1 %126 1
%127:i32 = var
blockpc %19 0 %127 1
%128:i32 = var
blockpc %19 1 %128 1
%129:i32 = var
blockpc %20 0 %129 1
%130:i32 = var
blockpc %20 1 %130 1
%131:i32 = var
blockpc %25 0 %131 1
%132:i32 = var
blockpc %25 1 %132 1
%133:i32 = var
blockpc %26 0 %133 1
%134:i32 = var
blockpc %26 1 %134 1
%135:i32 = var
blockpc %27 0 %135 1
%136:i32 = var
blockpc %27 1 %136 1
%137:i32 = var
blockpc %33 0 %137 1
%138:i32 = var
blockpc %33 1 %138 1
%139:i32 = var
blockpc %44 0 %139 1
%140:i32 = var
blockpc %44 1 %140 1
%141:i32 = var
blockpc %45 0 %141 1
%142:i32 = var
blockpc %45 1 %142 1
%143:i32 = var
blockpc %78 0 %143 1
%144:i32 = var
blockpc %78 1 %144 1
%145:i32 = var
blockpc %112 0 %145 1
%146:i32 = var
blockpc %112 1 %146 1
%147:i32 = var
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
%154:i32 = var
pc %147 1
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
pc %154 1
infer %116


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116 = add %115, 16:i32 (hasExternalUses)
%117 = add %116, 4:i32
%118:i32 = var
blockpc %0 0 %118 1
%119:i32 = var
blockpc %0 1 %119 1
%120:i32 = var
blockpc %7 0 %120 1
%121:i32 = var
blockpc %7 1 %121 1
%122:i32 = var
blockpc %12 0 %122 1
%123:i32 = var
blockpc %12 1 %123 1
%124:i32 = var
blockpc %13 0 %124 1
%125:i32 = var
blockpc %13 1 %125 1
%126:i32 = var
blockpc %14 0 %126 1
%127:i32 = var
blockpc %14 1 %127 1
%128:i32 = var
blockpc %19 0 %128 1
%129:i32 = var
blockpc %19 1 %129 1
%130:i32 = var
blockpc %20 0 %130 1
%131:i32 = var
blockpc %20 1 %131 1
%132:i32 = var
blockpc %25 0 %132 1
%133:i32 = var
blockpc %25 1 %133 1
%134:i32 = var
blockpc %26 0 %134 1
%135:i32 = var
blockpc %26 1 %135 1
%136:i32 = var
blockpc %27 0 %136 1
%137:i32 = var
blockpc %27 1 %137 1
%138:i32 = var
blockpc %33 0 %138 1
%139:i32 = var
blockpc %33 1 %139 1
%140:i32 = var
blockpc %44 0 %140 1
%141:i32 = var
blockpc %44 1 %141 1
%142:i32 = var
blockpc %45 0 %142 1
%143:i32 = var
blockpc %45 1 %143 1
%144:i32 = var
blockpc %78 0 %144 1
%145:i32 = var
blockpc %78 1 %145 1
%146:i32 = var
blockpc %112 0 %146 1
%147:i32 = var
blockpc %112 1 %147 1
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
%154:i32 = var
%155:i32 = var
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
pc %154 1
pc %155 1
infer %117


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85 = phi %18, %84, 0:i32
%86 = phi %27, 0:i32, %85
%87 = phi %24, 0:i32, %86
%88 = phi %21, 0:i32, %87
%89 = phi %17, %85, %88
%90 = phi %37, %89, %81
%91 = phi %34, %90, %89
%92 = phi %14, %89, %91
%93 = phi %12, %83, %92
%94 = phi %50, %82, %93
%95 = phi %47, %93, %94
%96 = phi %44, %93, %95
%97 = phi %11, %93, %96
%98:i32 = var
%99:i32 = var
%100:i32 = var
%101 = phi %18, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %24, 0:i32, %102
%104 = phi %21, 0:i32, %103
%105 = phi %17, %101, %104
%106 = phi %12, %99, %105
%107 = phi %58, %106, %105
%108 = phi %4, %81, %82, %97, %97, %98, %107
%109 = block 2
%110:i32 = var
blockpc %109 0 %110 1
%111:i32 = var
blockpc %109 1 %111 1
%112:i32 = var
%113:i32 = var
%114 = phi %18, %113, 0:i32
%115 = phi %27, 0:i32, %114
%116 = phi %24, 0:i32, %115
%117 = phi %21, 0:i32, %116
%118 = phi %17, %114, %117
%119:i32 = var
%120 = phi %12, %119, %118
%121 = block 3
%122:i32 = var
%123:i32 = var
%124 = phi %18, %123, 0:i32
%125 = phi %27, 0:i32, %124
%126 = phi %24, 0:i32, %125
%127 = phi %21, 0:i32, %126
%128 = phi %17, %124, %127
%129 = phi %37, %81, %128
%130 = phi %34, %129, 0:i32
%131 = phi %14, %128, %130
%132 = phi %12, %122, %131
%133 = phi %50, %132, 0:i32
%134 = phi %47, 0:i32, %133
%135 = phi %44, %132, %134
%136 = phi %11, 0:i32, %135
%137 = phi %121, 0:i32, 0:i32, %136
%138 = phi %58, %137, 0:i32
%139 = phi %4, %118, %120, %120, %120, %120, %138
%140 = phi %109, %112, %139
%141 = phi %74, %108, %140
%142 = phi %71, %108, %141
%143 = phi %3, %108, %142
%144 = add %80, %143
%145 = block 2
%146:i32 = var
blockpc %145 0 %146 1
%147:i32 = var
blockpc %145 1 %147 1
%148:i32 = var
%149 = phi %145, 0:i32, %148
%150 = add %144, %149
%151 = eq %2, %150
%152:i32 = var
%153:i32 = var
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
pc %151 1
pc %152 1
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = block 2
%6 = block 6
%7 = phi %6, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%8 = eq %7, 143:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11:i32 = var
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, 0:i32
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, 0:i32, %22
%33 = phi %26, 0:i32, %32
%34 = phi %23, 0:i32, %33
%35 = phi %19, %22, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = phi %39, %35, %11
%43 = phi %36, %42, %35
%44 = phi %16, %35, %43
%45 = phi %14, %15, %44
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56 = phi %52, %55, %45
%57 = phi %49, %45, %56
%58 = phi %46, %45, %57
%59 = phi %13, %45, %58
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63:i32 = var
%64:i32 = var
%65 = phi %20, %64, 0:i32
%66 = phi %29, 0:i32, %65
%67 = phi %26, 0:i32, %66
%68 = phi %23, 0:i32, %67
%69 = phi %19, %65, %68
%70 = phi %14, %63, %69
%71 = phi %60, %70, %69
%72 = phi %6, %11, %12, %59, %59, %59, %71
%73 = block 2
%74:i32 = var
blockpc %73 0 %74 1
%75:i32 = var
blockpc %73 1 %75 1
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79:i32 = var
%80 = phi %76, %72, %79
%81 = phi %73, %72, %80
%82 = phi %5, %72, %81
%83:i32 = var
%84:i32 = var
%85:i32 = var
%86:i32 = var
%87 = phi %20, %86, 0:i32
%88 = phi %29, 0:i32, %87
%89 = phi %26, 0:i32, %88
%90 = phi %23, 0:i32, %89
%91 = phi %19, %87, %90
%92 = phi %39, %91, %83
%93 = phi %36, %92, %91
%94 = phi %16, %91, %93
%95 = phi %14, %85, %94
%96 = phi %52, %84, %95
%97 = phi %49, %95, %96
%98 = phi %46, %95, %97
%99 = phi %13, %95, %98
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103 = phi %20, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %26, 0:i32, %104
%106 = phi %23, 0:i32, %105
%107 = phi %19, %103, %106
%108 = phi %14, %101, %107
%109 = phi %60, %108, %107
%110 = phi %6, %83, %84, %99, %99, %100, %109
%111 = block 2
%112:i32 = var
blockpc %111 0 %112 1
%113:i32 = var
blockpc %111 1 %113 1
%114:i32 = var
%115:i32 = var
%116 = phi %20, %115, 0:i32
%117 = phi %29, 0:i32, %116
%118 = phi %26, 0:i32, %117
%119 = phi %23, 0:i32, %118
%120 = phi %19, %116, %119
%121:i32 = var
%122 = phi %14, %121, %120
%123 = block 3
%124:i32 = var
%125:i32 = var
%126 = phi %20, %125, 0:i32
%127 = phi %29, 0:i32, %126
%128 = phi %26, 0:i32, %127
%129 = phi %23, 0:i32, %128
%130 = phi %19, %126, %129
%131 = phi %39, %83, %130
%132 = phi %36, %131, 0:i32
%133 = phi %16, %130, %132
%134 = phi %14, %124, %133
%135 = phi %52, %134, 0:i32
%136 = phi %49, 0:i32, %135
%137 = phi %46, %134, %136
%138 = phi %13, 0:i32, %137
%139 = phi %123, 0:i32, 0:i32, %138
%140 = phi %60, %139, 0:i32
%141 = phi %6, %120, %122, %122, %122, %122, %140
%142 = phi %111, %114, %141
%143 = phi %76, %110, %142
%144 = phi %73, %110, %143
%145 = phi %5, %110, %144
%146 = add %82, %145
%147 = block 2
%148:i32 = var
blockpc %147 0 %148 1
%149:i32 = var
blockpc %147 1 %149 1
%150:i32 = var
%151 = phi %147, 0:i32, %150
%152 = add %146, %151
%153 = eq %4, %152
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
%159:i32 = var
%160:i32 = var
pc %3 1
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
pc %159 1
pc %160 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85 = phi %18, %84, 0:i32
%86 = phi %27, 0:i32, %85
%87 = phi %24, 0:i32, %86
%88 = phi %21, 0:i32, %87
%89 = phi %17, %85, %88
%90 = phi %37, %89, %81
%91 = phi %34, %90, %89
%92 = phi %14, %89, %91
%93 = phi %12, %83, %92
%94 = phi %50, %82, %93
%95 = phi %47, %93, %94
%96 = phi %44, %93, %95
%97 = phi %11, %93, %96
%98:i32 = var
%99:i32 = var
%100:i32 = var
%101 = phi %18, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %24, 0:i32, %102
%104 = phi %21, 0:i32, %103
%105 = phi %17, %101, %104
%106 = phi %12, %99, %105
%107 = phi %58, %106, %105
%108 = phi %4, %81, %82, %97, %97, %98, %107
%109 = block 2
%110:i32 = var
blockpc %109 0 %110 1
%111:i32 = var
blockpc %109 1 %111 1
%112:i32 = var
%113:i32 = var
%114 = phi %18, %113, 0:i32
%115 = phi %27, 0:i32, %114
%116 = phi %24, 0:i32, %115
%117 = phi %21, 0:i32, %116
%118 = phi %17, %114, %117
%119:i32 = var
%120 = phi %12, %119, %118
%121 = block 3
%122:i32 = var
%123:i32 = var
%124 = phi %18, %123, 0:i32
%125 = phi %27, 0:i32, %124
%126 = phi %24, 0:i32, %125
%127 = phi %21, 0:i32, %126
%128 = phi %17, %124, %127
%129 = phi %37, %81, %128
%130 = phi %34, %129, 0:i32
%131 = phi %14, %128, %130
%132 = phi %12, %122, %131
%133 = phi %50, %132, 0:i32
%134 = phi %47, 0:i32, %133
%135 = phi %44, %132, %134
%136 = phi %11, 0:i32, %135
%137 = phi %121, 0:i32, 0:i32, %136
%138 = phi %58, %137, 0:i32
%139 = phi %4, %118, %120, %120, %120, %120, %138
%140 = phi %109, %112, %139
%141 = phi %74, %108, %140
%142 = phi %71, %108, %141
%143 = phi %3, %108, %142
%144 = add %80, %143
%145 = block 2
%146:i32 = var
blockpc %145 0 %146 1
%147:i32 = var
blockpc %145 1 %147 1
%148:i32 = var
%149 = phi %145, 0:i32, %148
%150 = add %144, %149
%151 = eq %2, %150
%152:i32 = var
%153:i32 = var
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
pc %151 1
pc %152 1
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85 = phi %18, %84, 0:i32
%86 = phi %27, 0:i32, %85
%87 = phi %24, 0:i32, %86
%88 = phi %21, 0:i32, %87
%89 = phi %17, %85, %88
%90 = phi %37, %89, %81
%91 = phi %34, %90, %89
%92 = phi %14, %89, %91
%93 = phi %12, %83, %92
%94 = phi %50, %82, %93
%95 = phi %47, %93, %94
%96 = phi %44, %93, %95
%97 = phi %11, %93, %96
%98:i32 = var
%99:i32 = var
%100:i32 = var
%101 = phi %18, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %24, 0:i32, %102
%104 = phi %21, 0:i32, %103
%105 = phi %17, %101, %104
%106 = phi %12, %99, %105
%107 = phi %58, %106, %105
%108 = phi %4, %81, %82, %97, %97, %98, %107
%109 = block 2
%110:i32 = var
blockpc %109 0 %110 1
%111:i32 = var
blockpc %109 1 %111 1
%112:i32 = var
%113:i32 = var
%114 = phi %18, %113, 0:i32
%115 = phi %27, 0:i32, %114
%116 = phi %24, 0:i32, %115
%117 = phi %21, 0:i32, %116
%118 = phi %17, %114, %117
%119:i32 = var
%120 = phi %12, %119, %118
%121 = block 3
%122:i32 = var
%123:i32 = var
%124 = phi %18, %123, 0:i32
%125 = phi %27, 0:i32, %124
%126 = phi %24, 0:i32, %125
%127 = phi %21, 0:i32, %126
%128 = phi %17, %124, %127
%129 = phi %37, %81, %128
%130 = phi %34, %129, 0:i32
%131 = phi %14, %128, %130
%132 = phi %12, %122, %131
%133 = phi %50, %132, 0:i32
%134 = phi %47, 0:i32, %133
%135 = phi %44, %132, %134
%136 = phi %11, 0:i32, %135
%137 = phi %121, 0:i32, 0:i32, %136
%138 = phi %58, %137, 0:i32
%139 = phi %4, %118, %120, %120, %120, %120, %138
%140 = phi %109, %112, %139
%141 = phi %74, %108, %140
%142 = phi %71, %108, %141
%143 = phi %3, %108, %142
%144 = add %80, %143
%145 = block 2
%146:i32 = var
blockpc %145 0 %146 1
%147:i32 = var
blockpc %145 1 %147 1
%148:i32 = var
%149 = phi %145, 0:i32, %148
%150 = add %144, %149
%151 = eq %2, %150
%152:i32 = var
%153:i32 = var
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
pc %151 1
pc %152 1
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = block 2
%6 = block 6
%7 = phi %6, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%8 = eq %7, 143:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11:i32 = var
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, 0:i32
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, 0:i32, %22
%33 = phi %26, 0:i32, %32
%34 = phi %23, 0:i32, %33
%35 = phi %19, %22, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = phi %39, %35, %11
%43 = phi %36, %42, %35
%44 = phi %16, %35, %43
%45 = phi %14, %15, %44
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56 = phi %52, %55, %45
%57 = phi %49, %45, %56
%58 = phi %46, %45, %57
%59 = phi %13, %45, %58
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63:i32 = var
%64:i32 = var
%65 = phi %20, %64, 0:i32
%66 = phi %29, 0:i32, %65
%67 = phi %26, 0:i32, %66
%68 = phi %23, 0:i32, %67
%69 = phi %19, %65, %68
%70 = phi %14, %63, %69
%71 = phi %60, %70, %69
%72 = phi %6, %11, %12, %59, %59, %59, %71
%73 = block 2
%74:i32 = var
blockpc %73 0 %74 1
%75:i32 = var
blockpc %73 1 %75 1
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79:i32 = var
%80 = phi %76, %72, %79
%81 = phi %73, %72, %80
%82 = phi %5, %72, %81
%83:i32 = var
%84:i32 = var
%85:i32 = var
%86:i32 = var
%87 = phi %20, %86, 0:i32
%88 = phi %29, 0:i32, %87
%89 = phi %26, 0:i32, %88
%90 = phi %23, 0:i32, %89
%91 = phi %19, %87, %90
%92 = phi %39, %91, %83
%93 = phi %36, %92, %91
%94 = phi %16, %91, %93
%95 = phi %14, %85, %94
%96 = phi %52, %84, %95
%97 = phi %49, %95, %96
%98 = phi %46, %95, %97
%99 = phi %13, %95, %98
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103 = phi %20, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %26, 0:i32, %104
%106 = phi %23, 0:i32, %105
%107 = phi %19, %103, %106
%108 = phi %14, %101, %107
%109 = phi %60, %108, %107
%110 = phi %6, %83, %84, %99, %99, %100, %109
%111 = block 2
%112:i32 = var
blockpc %111 0 %112 1
%113:i32 = var
blockpc %111 1 %113 1
%114:i32 = var
%115:i32 = var
%116 = phi %20, %115, 0:i32
%117 = phi %29, 0:i32, %116
%118 = phi %26, 0:i32, %117
%119 = phi %23, 0:i32, %118
%120 = phi %19, %116, %119
%121:i32 = var
%122 = phi %14, %121, %120
%123 = block 3
%124:i32 = var
%125:i32 = var
%126 = phi %20, %125, 0:i32
%127 = phi %29, 0:i32, %126
%128 = phi %26, 0:i32, %127
%129 = phi %23, 0:i32, %128
%130 = phi %19, %126, %129
%131 = phi %39, %83, %130
%132 = phi %36, %131, 0:i32
%133 = phi %16, %130, %132
%134 = phi %14, %124, %133
%135 = phi %52, %134, 0:i32
%136 = phi %49, 0:i32, %135
%137 = phi %46, %134, %136
%138 = phi %13, 0:i32, %137
%139 = phi %123, 0:i32, 0:i32, %138
%140 = phi %60, %139, 0:i32
%141 = phi %6, %120, %122, %122, %122, %122, %140
%142 = phi %111, %114, %141
%143 = phi %76, %110, %142
%144 = phi %73, %110, %143
%145 = phi %5, %110, %144
%146 = add %82, %145
%147 = block 2
%148:i32 = var
blockpc %147 0 %148 1
%149:i32 = var
blockpc %147 1 %149 1
%150:i32 = var
%151 = phi %147, 0:i32, %150
%152 = add %146, %151
%153 = eq %4, %152
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
%159:i32 = var
%160:i32 = var
pc %3 1
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
pc %159 1
pc %160 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5 = block 2
%6 = block 6
%7 = phi %6, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%8 = eq %7, 143:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11:i32 = var
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, 0:i32
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, 0:i32, %22
%33 = phi %26, 0:i32, %32
%34 = phi %23, 0:i32, %33
%35 = phi %19, %22, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = phi %39, %35, %11
%43 = phi %36, %42, %35
%44 = phi %16, %35, %43
%45 = phi %14, %15, %44
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55:i32 = var
%56 = phi %52, %55, %45
%57 = phi %49, %45, %56
%58 = phi %46, %45, %57
%59 = phi %13, %45, %58
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63:i32 = var
%64:i32 = var
%65 = phi %20, %64, 0:i32
%66 = phi %29, 0:i32, %65
%67 = phi %26, 0:i32, %66
%68 = phi %23, 0:i32, %67
%69 = phi %19, %65, %68
%70 = phi %14, %63, %69
%71 = phi %60, %70, %69
%72 = phi %6, %11, %12, %59, %59, %59, %71
%73 = block 2
%74:i32 = var
blockpc %73 0 %74 1
%75:i32 = var
blockpc %73 1 %75 1
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79:i32 = var
%80 = phi %76, %72, %79
%81 = phi %73, %72, %80
%82 = phi %5, %72, %81
%83:i32 = var
%84:i32 = var
%85:i32 = var
%86:i32 = var
%87 = phi %20, %86, 0:i32
%88 = phi %29, 0:i32, %87
%89 = phi %26, 0:i32, %88
%90 = phi %23, 0:i32, %89
%91 = phi %19, %87, %90
%92 = phi %39, %91, %83
%93 = phi %36, %92, %91
%94 = phi %16, %91, %93
%95 = phi %14, %85, %94
%96 = phi %52, %84, %95
%97 = phi %49, %95, %96
%98 = phi %46, %95, %97
%99 = phi %13, %95, %98
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103 = phi %20, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %26, 0:i32, %104
%106 = phi %23, 0:i32, %105
%107 = phi %19, %103, %106
%108 = phi %14, %101, %107
%109 = phi %60, %108, %107
%110 = phi %6, %83, %84, %99, %99, %100, %109
%111 = block 2
%112:i32 = var
blockpc %111 0 %112 1
%113:i32 = var
blockpc %111 1 %113 1
%114:i32 = var
%115:i32 = var
%116 = phi %20, %115, 0:i32
%117 = phi %29, 0:i32, %116
%118 = phi %26, 0:i32, %117
%119 = phi %23, 0:i32, %118
%120 = phi %19, %116, %119
%121:i32 = var
%122 = phi %14, %121, %120
%123 = block 3
%124:i32 = var
%125:i32 = var
%126 = phi %20, %125, 0:i32
%127 = phi %29, 0:i32, %126
%128 = phi %26, 0:i32, %127
%129 = phi %23, 0:i32, %128
%130 = phi %19, %126, %129
%131 = phi %39, %83, %130
%132 = phi %36, %131, 0:i32
%133 = phi %16, %130, %132
%134 = phi %14, %124, %133
%135 = phi %52, %134, 0:i32
%136 = phi %49, 0:i32, %135
%137 = phi %46, %134, %136
%138 = phi %13, 0:i32, %137
%139 = phi %123, 0:i32, 0:i32, %138
%140 = phi %60, %139, 0:i32
%141 = phi %6, %120, %122, %122, %122, %122, %140
%142 = phi %111, %114, %141
%143 = phi %76, %110, %142
%144 = phi %73, %110, %143
%145 = phi %5, %110, %144
%146 = add %82, %145
%147 = block 2
%148:i32 = var
blockpc %147 0 %148 1
%149:i32 = var
blockpc %147 1 %149 1
%150:i32 = var
%151 = phi %147, 0:i32, %150
%152 = add %146, %151
%153 = eq %4, %152
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
%159:i32 = var
%160:i32 = var
pc %3 1
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
pc %159 1
pc %160 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116 = add %115, 8:i32
%117:i32 = var
blockpc %0 0 %117 1
%118:i32 = var
blockpc %0 1 %118 1
%119:i32 = var
blockpc %7 0 %119 1
%120:i32 = var
blockpc %7 1 %120 1
%121:i32 = var
blockpc %12 0 %121 1
%122:i32 = var
blockpc %12 1 %122 1
%123:i32 = var
blockpc %13 0 %123 1
%124:i32 = var
blockpc %13 1 %124 1
%125:i32 = var
blockpc %14 0 %125 1
%126:i32 = var
blockpc %14 1 %126 1
%127:i32 = var
blockpc %19 0 %127 1
%128:i32 = var
blockpc %19 1 %128 1
%129:i32 = var
blockpc %20 0 %129 1
%130:i32 = var
blockpc %20 1 %130 1
%131:i32 = var
blockpc %25 0 %131 1
%132:i32 = var
blockpc %25 1 %132 1
%133:i32 = var
blockpc %26 0 %133 1
%134:i32 = var
blockpc %26 1 %134 1
%135:i32 = var
blockpc %27 0 %135 1
%136:i32 = var
blockpc %27 1 %136 1
%137:i32 = var
blockpc %33 0 %137 1
%138:i32 = var
blockpc %33 1 %138 1
%139:i32 = var
blockpc %44 0 %139 1
%140:i32 = var
blockpc %44 1 %140 1
%141:i32 = var
blockpc %45 0 %141 1
%142:i32 = var
blockpc %45 1 %142 1
%143:i32 = var
blockpc %78 0 %143 1
%144:i32 = var
blockpc %78 1 %144 1
%145:i32 = var
blockpc %112 0 %145 1
%146:i32 = var
blockpc %112 1 %146 1
%147:i32 = var
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
%154:i32 = var
pc %147 1
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
pc %154 1
infer %116


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85 = phi %18, %84, 0:i32
%86 = phi %27, 0:i32, %85
%87 = phi %24, 0:i32, %86
%88 = phi %21, 0:i32, %87
%89 = phi %17, %85, %88
%90 = phi %37, %89, %81
%91 = phi %34, %90, %89
%92 = phi %14, %89, %91
%93 = phi %12, %83, %92
%94 = phi %50, %82, %93
%95 = phi %47, %93, %94
%96 = phi %44, %93, %95
%97 = phi %11, %93, %96
%98:i32 = var
%99:i32 = var
%100:i32 = var
%101 = phi %18, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %24, 0:i32, %102
%104 = phi %21, 0:i32, %103
%105 = phi %17, %101, %104
%106 = phi %12, %99, %105
%107 = phi %58, %106, %105
%108 = phi %4, %81, %82, %97, %97, %98, %107
%109 = block 2
%110:i32 = var
blockpc %109 0 %110 1
%111:i32 = var
blockpc %109 1 %111 1
%112:i32 = var
%113:i32 = var
%114 = phi %18, %113, 0:i32
%115 = phi %27, 0:i32, %114
%116 = phi %24, 0:i32, %115
%117 = phi %21, 0:i32, %116
%118 = phi %17, %114, %117
%119:i32 = var
%120 = phi %12, %119, %118
%121 = block 3
%122:i32 = var
%123:i32 = var
%124 = phi %18, %123, 0:i32
%125 = phi %27, 0:i32, %124
%126 = phi %24, 0:i32, %125
%127 = phi %21, 0:i32, %126
%128 = phi %17, %124, %127
%129 = phi %37, %81, %128
%130 = phi %34, %129, 0:i32
%131 = phi %14, %128, %130
%132 = phi %12, %122, %131
%133 = phi %50, %132, 0:i32
%134 = phi %47, 0:i32, %133
%135 = phi %44, %132, %134
%136 = phi %11, 0:i32, %135
%137 = phi %121, 0:i32, 0:i32, %136
%138 = phi %58, %137, 0:i32
%139 = phi %4, %118, %120, %120, %120, %120, %138
%140 = phi %109, %112, %139
%141 = phi %74, %108, %140
%142 = phi %71, %108, %141
%143 = phi %3, %108, %142
%144 = add %80, %143
%145 = block 2
%146:i32 = var
blockpc %145 0 %146 1
%147:i32 = var
blockpc %145 1 %147 1
%148:i32 = var
%149 = phi %145, 0:i32, %148
%150 = add %144, %149
%151 = eq %2, %150
%152:i32 = zext %151
%153 = eq %152, 0:i32
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
%159:i32 = var
%160:i32 = var
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
pc %159 1
pc %160 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2 = block 2
%3 = block 6
%4 = phi %3, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%5 = eq %4, 143:i32
blockpc %2 0 %5 1
%6:i32 = zext %5
%7 = eq %6, 0:i32
blockpc %2 1 %7 1
%8:i32 = var
%9:i32 = var
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = phi %17, %18, 0:i32
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = phi %26, 0:i32, %19
%30 = phi %23, 0:i32, %29
%31 = phi %20, 0:i32, %30
%32 = phi %16, %19, %31
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = phi %36, %32, %8
%40 = phi %33, %39, %32
%41 = phi %13, %32, %40
%42 = phi %11, %12, %41
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = block 2
%50:i32 = var
blockpc %49 0 %50 1
%51:i32 = var
blockpc %49 1 %51 1
%52:i32 = var
%53 = phi %49, %52, %42
%54 = phi %46, %42, %53
%55 = phi %43, %42, %54
%56 = phi %10, %42, %55
%57 = block 2
%58:i32 = var
blockpc %57 0 %58 1
%59:i32 = var
blockpc %57 1 %59 1
%60:i32 = var
%61:i32 = var
%62 = phi %17, %61, 0:i32
%63 = phi %26, 0:i32, %62
%64 = phi %23, 0:i32, %63
%65 = phi %20, 0:i32, %64
%66 = phi %16, %62, %65
%67 = phi %11, %60, %66
%68 = phi %57, %67, %66
%69 = phi %3, %8, %9, %56, %56, %56, %68
%70 = block 2
%71:i32 = var
blockpc %70 0 %71 1
%72:i32 = var
blockpc %70 1 %72 1
%73 = block 2
%74:i32 = var
blockpc %73 0 %74 1
%75:i32 = var
blockpc %73 1 %75 1
%76:i32 = var
%77 = phi %73, %69, %76
%78 = phi %70, %69, %77
%79 = phi %2, %69, %78
%80:i32 = var
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84 = phi %17, %83, 0:i32
%85 = phi %26, 0:i32, %84
%86 = phi %23, 0:i32, %85
%87 = phi %20, 0:i32, %86
%88 = phi %16, %84, %87
%89 = phi %36, %88, %80
%90 = phi %33, %89, %88
%91 = phi %13, %88, %90
%92 = phi %11, %82, %91
%93 = phi %49, %81, %92
%94 = phi %46, %92, %93
%95 = phi %43, %92, %94
%96 = phi %10, %92, %95
%97:i32 = var
%98:i32 = var
%99:i32 = var
%100 = phi %17, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %23, 0:i32, %101
%103 = phi %20, 0:i32, %102
%104 = phi %16, %100, %103
%105 = phi %11, %98, %104
%106 = phi %57, %105, %104
%107 = phi %3, %80, %81, %96, %96, %97, %106
%108 = block 2
%109:i32 = var
blockpc %108 0 %109 1
%110:i32 = var
blockpc %108 1 %110 1
%111:i32 = var
%112:i32 = var
%113 = phi %17, %112, 0:i32
%114 = phi %26, 0:i32, %113
%115 = phi %23, 0:i32, %114
%116 = phi %20, 0:i32, %115
%117 = phi %16, %113, %116
%118:i32 = var
%119 = phi %11, %118, %117
%120 = block 3
%121:i32 = var
%122:i32 = var
%123 = phi %17, %122, 0:i32
%124 = phi %26, 0:i32, %123
%125 = phi %23, 0:i32, %124
%126 = phi %20, 0:i32, %125
%127 = phi %16, %123, %126
%128 = phi %36, %80, %127
%129 = phi %33, %128, 0:i32
%130 = phi %13, %127, %129
%131 = phi %11, %121, %130
%132 = phi %49, %131, 0:i32
%133 = phi %46, 0:i32, %132
%134 = phi %43, %131, %133
%135 = phi %10, 0:i32, %134
%136 = phi %120, 0:i32, 0:i32, %135
%137 = phi %57, %136, 0:i32
%138 = phi %3, %117, %119, %119, %119, %119, %137
%139 = phi %108, %111, %138
%140 = phi %73, %107, %139
%141 = phi %70, %107, %140
%142 = phi %2, %107, %141
%143 = add %79, %142
%144 = block 2
%145:i32 = var
blockpc %144 0 %145 1
%146:i32 = var
blockpc %144 1 %146 1
%147:i32 = var
%148 = phi %144, 0:i32, %147
%149 = add %143, %148
%150 = eq %0, %149
%151:i32 = zext %150
%152 = eq %151, 0:i32
%153:i32 = var
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
%159:i32 = var
pc %152 1
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
pc %159 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = ult %2, 256:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = and %2, 3:i32
%7 = eq %6, 1:i32
%8:i32 = var
%9 = block 2
%10 = block 6
%11 = phi %10, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%12 = eq %11, 143:i32
blockpc %9 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %9 1 %14 1
%15:i32 = var
%16:i32 = var
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, 0:i32
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 0:i32, %26
%37 = phi %30, 0:i32, %36
%38 = phi %27, 0:i32, %37
%39 = phi %23, %26, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %39, %15
%47 = phi %40, %46, %39
%48 = phi %20, %39, %47
%49 = phi %18, %19, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %59, %49
%61 = phi %53, %49, %60
%62 = phi %50, %49, %61
%63 = phi %17, %49, %62
%64 = block 2
%65:i32 = var
blockpc %64 0 %65 1
%66:i32 = var
blockpc %64 1 %66 1
%67:i32 = var
%68:i32 = var
%69 = phi %24, %68, 0:i32
%70 = phi %33, 0:i32, %69
%71 = phi %30, 0:i32, %70
%72 = phi %27, 0:i32, %71
%73 = phi %23, %69, %72
%74 = phi %18, %67, %73
%75 = phi %64, %74, %73
%76 = phi %10, %15, %16, %63, %63, %63, %75
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84 = phi %80, %76, %83
%85 = phi %77, %76, %84
%86 = phi %9, %76, %85
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91 = phi %24, %90, 0:i32
%92 = phi %33, 0:i32, %91
%93 = phi %30, 0:i32, %92
%94 = phi %27, 0:i32, %93
%95 = phi %23, %91, %94
%96 = phi %43, %95, %87
%97 = phi %40, %96, %95
%98 = phi %20, %95, %97
%99 = phi %18, %89, %98
%100 = phi %56, %88, %99
%101 = phi %53, %99, %100
%102 = phi %50, %99, %101
%103 = phi %17, %99, %102
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107 = phi %24, %106, 0:i32
%108 = phi %33, 0:i32, %107
%109 = phi %30, 0:i32, %108
%110 = phi %27, 0:i32, %109
%111 = phi %23, %107, %110
%112 = phi %18, %105, %111
%113 = phi %64, %112, %111
%114 = phi %10, %87, %88, %103, %103, %104, %113
%115 = block 2
%116:i32 = var
blockpc %115 0 %116 1
%117:i32 = var
blockpc %115 1 %117 1
%118:i32 = var
%119:i32 = var
%120 = phi %24, %119, 0:i32
%121 = phi %33, 0:i32, %120
%122 = phi %30, 0:i32, %121
%123 = phi %27, 0:i32, %122
%124 = phi %23, %120, %123
%125:i32 = var
%126 = phi %18, %125, %124
%127 = block 3
%128:i32 = var
%129:i32 = var
%130 = phi %24, %129, 0:i32
%131 = phi %33, 0:i32, %130
%132 = phi %30, 0:i32, %131
%133 = phi %27, 0:i32, %132
%134 = phi %23, %130, %133
%135 = phi %43, %87, %134
%136 = phi %40, %135, 0:i32
%137 = phi %20, %134, %136
%138 = phi %18, %128, %137
%139 = phi %56, %138, 0:i32
%140 = phi %53, 0:i32, %139
%141 = phi %50, %138, %140
%142 = phi %17, 0:i32, %141
%143 = phi %127, 0:i32, 0:i32, %142
%144 = phi %64, %143, 0:i32
%145 = phi %10, %124, %126, %126, %126, %126, %144
%146 = phi %115, %118, %145
%147 = phi %80, %114, %146
%148 = phi %77, %114, %147
%149 = phi %9, %114, %148
%150 = add %86, %149
%151 = block 2
%152:i32 = var
blockpc %151 0 %152 1
%153:i32 = var
blockpc %151 1 %153 1
%154:i32 = var
%155 = phi %151, 0:i32, %154
%156 = add %150, %155
%157 = eq %8, %156
%158:i32 = zext %157
%159 = eq %158, 0:i32
%160:i32 = var
%161:i32 = var
%162:i32 = var
%163:i32 = var
pc %5 1
pc %7 1
pc %159 1
pc %160 1
pc %161 1
pc %162 1
pc %163 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116 = add %115, 28:i32
%117:i32 = var
blockpc %0 0 %117 1
%118:i32 = var
blockpc %0 1 %118 1
%119:i32 = var
blockpc %7 0 %119 1
%120:i32 = var
blockpc %7 1 %120 1
%121:i32 = var
blockpc %12 0 %121 1
%122:i32 = var
blockpc %12 1 %122 1
%123:i32 = var
blockpc %13 0 %123 1
%124:i32 = var
blockpc %13 1 %124 1
%125:i32 = var
blockpc %14 0 %125 1
%126:i32 = var
blockpc %14 1 %126 1
%127:i32 = var
blockpc %19 0 %127 1
%128:i32 = var
blockpc %19 1 %128 1
%129:i32 = var
blockpc %20 0 %129 1
%130:i32 = var
blockpc %20 1 %130 1
%131:i32 = var
blockpc %25 0 %131 1
%132:i32 = var
blockpc %25 1 %132 1
%133:i32 = var
blockpc %26 0 %133 1
%134:i32 = var
blockpc %26 1 %134 1
%135:i32 = var
blockpc %27 0 %135 1
%136:i32 = var
blockpc %27 1 %136 1
%137:i32 = var
blockpc %33 0 %137 1
%138:i32 = var
blockpc %33 1 %138 1
%139:i32 = var
blockpc %44 0 %139 1
%140:i32 = var
blockpc %44 1 %140 1
%141:i32 = var
blockpc %45 0 %141 1
%142:i32 = var
blockpc %45 1 %142 1
%143:i32 = var
blockpc %78 0 %143 1
%144:i32 = var
blockpc %78 1 %144 1
%145:i32 = var
blockpc %112 0 %145 1
%146:i32 = var
blockpc %112 1 %146 1
%147:i32 = var
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
pc %147 1
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
infer %116


; start LHS (in $38)
%0:i32 = var
%1 = shl %0, 2:i32
%2:i32 = var
%3 = ult %2, 256:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = and %2, 3:i32
%7 = eq %6, 1:i32
%8:i32 = var
%9 = block 2
%10 = block 6
%11 = phi %10, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%12 = eq %11, 143:i32
blockpc %9 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %9 1 %14 1
%15:i32 = var
%16:i32 = var
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, 0:i32
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 0:i32, %26
%37 = phi %30, 0:i32, %36
%38 = phi %27, 0:i32, %37
%39 = phi %23, %26, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %39, %15
%47 = phi %40, %46, %39
%48 = phi %20, %39, %47
%49 = phi %18, %19, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %59, %49
%61 = phi %53, %49, %60
%62 = phi %50, %49, %61
%63 = phi %17, %49, %62
%64 = block 2
%65:i32 = var
blockpc %64 0 %65 1
%66:i32 = var
blockpc %64 1 %66 1
%67:i32 = var
%68:i32 = var
%69 = phi %24, %68, 0:i32
%70 = phi %33, 0:i32, %69
%71 = phi %30, 0:i32, %70
%72 = phi %27, 0:i32, %71
%73 = phi %23, %69, %72
%74 = phi %18, %67, %73
%75 = phi %64, %74, %73
%76 = phi %10, %15, %16, %63, %63, %63, %75
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84 = phi %80, %76, %83
%85 = phi %77, %76, %84
%86 = phi %9, %76, %85
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91 = phi %24, %90, 0:i32
%92 = phi %33, 0:i32, %91
%93 = phi %30, 0:i32, %92
%94 = phi %27, 0:i32, %93
%95 = phi %23, %91, %94
%96 = phi %43, %95, %87
%97 = phi %40, %96, %95
%98 = phi %20, %95, %97
%99 = phi %18, %89, %98
%100 = phi %56, %88, %99
%101 = phi %53, %99, %100
%102 = phi %50, %99, %101
%103 = phi %17, %99, %102
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107 = phi %24, %106, 0:i32
%108 = phi %33, 0:i32, %107
%109 = phi %30, 0:i32, %108
%110 = phi %27, 0:i32, %109
%111 = phi %23, %107, %110
%112 = phi %18, %105, %111
%113 = phi %64, %112, %111
%114 = phi %10, %87, %88, %103, %103, %104, %113
%115 = block 2
%116:i32 = var
blockpc %115 0 %116 1
%117:i32 = var
blockpc %115 1 %117 1
%118:i32 = var
%119:i32 = var
%120 = phi %24, %119, 0:i32
%121 = phi %33, 0:i32, %120
%122 = phi %30, 0:i32, %121
%123 = phi %27, 0:i32, %122
%124 = phi %23, %120, %123
%125:i32 = var
%126 = phi %18, %125, %124
%127 = block 3
%128:i32 = var
%129:i32 = var
%130 = phi %24, %129, 0:i32
%131 = phi %33, 0:i32, %130
%132 = phi %30, 0:i32, %131
%133 = phi %27, 0:i32, %132
%134 = phi %23, %130, %133
%135 = phi %43, %87, %134
%136 = phi %40, %135, 0:i32
%137 = phi %20, %134, %136
%138 = phi %18, %128, %137
%139 = phi %56, %138, 0:i32
%140 = phi %53, 0:i32, %139
%141 = phi %50, %138, %140
%142 = phi %17, 0:i32, %141
%143 = phi %127, 0:i32, 0:i32, %142
%144 = phi %64, %143, 0:i32
%145 = phi %10, %124, %126, %126, %126, %126, %144
%146 = phi %115, %118, %145
%147 = phi %80, %114, %146
%148 = phi %77, %114, %147
%149 = phi %9, %114, %148
%150 = add %86, %149
%151 = block 2
%152:i32 = var
blockpc %151 0 %152 1
%153:i32 = var
blockpc %151 1 %153 1
%154:i32 = var
%155 = phi %151, 0:i32, %154
%156 = add %150, %155
%157 = eq %8, %156
%158:i32 = zext %157
%159 = eq %158, 0:i32
%160:i32 = var
%161:i32 = var
%162:i32 = var
%163:i32 = var
pc %5 1
pc %7 1
pc %159 1
pc %160 1
pc %161 1
pc %162 1
pc %163 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = shl %0, 2:i32
%2 = add 3408:i32, %1
%3:i32 = var
%4 = ult %3, 256:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = and %3, 3:i32
%8 = eq %7, 1:i32
%9:i32 = var
%10 = block 2
%11 = block 6
%12 = phi %11, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%13 = eq %12, 143:i32
blockpc %10 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %10 1 %15 1
%16:i32 = var
%17:i32 = var
%18 = block 2
%19 = block 2
%20:i32 = var
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25 = block 2
%26:i32 = var
%27 = phi %25, %26, 0:i32
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = phi %34, 0:i32, %27
%38 = phi %31, 0:i32, %37
%39 = phi %28, 0:i32, %38
%40 = phi %24, %27, %39
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = phi %44, %40, %16
%48 = phi %41, %47, %40
%49 = phi %21, %40, %48
%50 = phi %19, %20, %49
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57 = block 2
%58:i32 = var
blockpc %57 0 %58 1
%59:i32 = var
blockpc %57 1 %59 1
%60:i32 = var
%61 = phi %57, %60, %50
%62 = phi %54, %50, %61
%63 = phi %51, %50, %62
%64 = phi %18, %50, %63
%65 = block 2
%66:i32 = var
blockpc %65 0 %66 1
%67:i32 = var
blockpc %65 1 %67 1
%68:i32 = var
%69:i32 = var
%70 = phi %25, %69, 0:i32
%71 = phi %34, 0:i32, %70
%72 = phi %31, 0:i32, %71
%73 = phi %28, 0:i32, %72
%74 = phi %24, %70, %73
%75 = phi %19, %68, %74
%76 = phi %65, %75, %74
%77 = phi %11, %16, %17, %64, %64, %64, %76
%78 = block 2
%79:i32 = var
blockpc %78 0 %79 1
%80:i32 = var
blockpc %78 1 %80 1
%81 = block 2
%82:i32 = var
blockpc %81 0 %82 1
%83:i32 = var
blockpc %81 1 %83 1
%84:i32 = var
%85 = phi %81, %77, %84
%86 = phi %78, %77, %85
%87 = phi %10, %77, %86
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91:i32 = var
%92 = phi %25, %91, 0:i32
%93 = phi %34, 0:i32, %92
%94 = phi %31, 0:i32, %93
%95 = phi %28, 0:i32, %94
%96 = phi %24, %92, %95
%97 = phi %44, %96, %88
%98 = phi %41, %97, %96
%99 = phi %21, %96, %98
%100 = phi %19, %90, %99
%101 = phi %57, %89, %100
%102 = phi %54, %100, %101
%103 = phi %51, %100, %102
%104 = phi %18, %100, %103
%105:i32 = var
%106:i32 = var
%107:i32 = var
%108 = phi %25, %107, 0:i32
%109 = phi %34, 0:i32, %108
%110 = phi %31, 0:i32, %109
%111 = phi %28, 0:i32, %110
%112 = phi %24, %108, %111
%113 = phi %19, %106, %112
%114 = phi %65, %113, %112
%115 = phi %11, %88, %89, %104, %104, %105, %114
%116 = block 2
%117:i32 = var
blockpc %116 0 %117 1
%118:i32 = var
blockpc %116 1 %118 1
%119:i32 = var
%120:i32 = var
%121 = phi %25, %120, 0:i32
%122 = phi %34, 0:i32, %121
%123 = phi %31, 0:i32, %122
%124 = phi %28, 0:i32, %123
%125 = phi %24, %121, %124
%126:i32 = var
%127 = phi %19, %126, %125
%128 = block 3
%129:i32 = var
%130:i32 = var
%131 = phi %25, %130, 0:i32
%132 = phi %34, 0:i32, %131
%133 = phi %31, 0:i32, %132
%134 = phi %28, 0:i32, %133
%135 = phi %24, %131, %134
%136 = phi %44, %88, %135
%137 = phi %41, %136, 0:i32
%138 = phi %21, %135, %137
%139 = phi %19, %129, %138
%140 = phi %57, %139, 0:i32
%141 = phi %54, 0:i32, %140
%142 = phi %51, %139, %141
%143 = phi %18, 0:i32, %142
%144 = phi %128, 0:i32, 0:i32, %143
%145 = phi %65, %144, 0:i32
%146 = phi %11, %125, %127, %127, %127, %127, %145
%147 = phi %116, %119, %146
%148 = phi %81, %115, %147
%149 = phi %78, %115, %148
%150 = phi %10, %115, %149
%151 = add %87, %150
%152 = block 2
%153:i32 = var
blockpc %152 0 %153 1
%154:i32 = var
blockpc %152 1 %154 1
%155:i32 = var
%156 = phi %152, 0:i32, %155
%157 = add %151, %156
%158 = eq %9, %157
%159:i32 = zext %158
%160 = eq %159, 0:i32
%161:i32 = var
%162:i32 = var
%163:i32 = var
%164:i32 = var
pc %6 1
pc %8 1
pc %160 1
pc %161 1
pc %162 1
pc %163 1
pc %164 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55 = phi %10, %54, 0:i32
%56 = phi %15, 0:i32, %55
%57 = phi %14, 0:i32, %56
%58 = phi %13, 0:i32, %57
%59 = phi %9, %55, %58
%60 = phi %21, %59, %51
%61 = phi %20, %60, %59
%62 = phi %8, %59, %61
%63 = phi %6, %53, %62
%64 = phi %28, %52, %63
%65 = phi %27, %63, %64
%66 = phi %26, %63, %65
%67 = phi %5, %63, %66
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %10, %70, 0:i32
%72 = phi %15, 0:i32, %71
%73 = phi %14, 0:i32, %72
%74 = phi %13, 0:i32, %73
%75 = phi %9, %71, %74
%76 = phi %6, %69, %75
%77 = phi %34, %76, %75
%78 = phi %2, %51, %52, %67, %67, %68, %77
%79 = block 2
%80:i32 = var
%81:i32 = var
%82 = phi %10, %81, 0:i32
%83 = phi %15, 0:i32, %82
%84 = phi %14, 0:i32, %83
%85 = phi %13, 0:i32, %84
%86 = phi %9, %82, %85
%87:i32 = var
%88 = phi %6, %87, %86
%89 = block 3
%90:i32 = var
%91:i32 = var
%92 = phi %10, %91, 0:i32
%93 = phi %15, 0:i32, %92
%94 = phi %14, 0:i32, %93
%95 = phi %13, 0:i32, %94
%96 = phi %9, %92, %95
%97 = phi %21, %51, %96
%98 = phi %20, %97, 0:i32
%99 = phi %8, %96, %98
%100 = phi %6, %90, %99
%101 = phi %28, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %26, %100, %102
%104 = phi %5, 0:i32, %103
%105 = phi %89, 0:i32, 0:i32, %104
%106 = phi %34, %105, 0:i32
%107 = phi %2, %86, %88, %88, %88, %88, %106
%108 = phi %79, %80, %107
%109 = phi %46, %78, %108
%110 = phi %45, %78, %109
%111 = phi %1, %78, %110
%112 = add %50, %111 (hasExternalUses)
%113 = block 2
%114:i32 = var
%115 = phi %113, 0:i32, %114
%116 = add %112, %115 (hasExternalUses)
%117 = eq %0, %116
%118:i32 = var
blockpc %1 0 %118 1
%119:i32 = var
blockpc %1 1 %119 1
%120:i32 = var
blockpc %8 0 %120 1
%121:i32 = var
blockpc %8 1 %121 1
%122:i32 = var
blockpc %13 0 %122 1
%123:i32 = var
blockpc %13 1 %123 1
%124:i32 = var
blockpc %14 0 %124 1
%125:i32 = var
blockpc %14 1 %125 1
%126:i32 = var
blockpc %15 0 %126 1
%127:i32 = var
blockpc %15 1 %127 1
%128:i32 = var
blockpc %20 0 %128 1
%129:i32 = var
blockpc %20 1 %129 1
%130:i32 = var
blockpc %21 0 %130 1
%131:i32 = var
blockpc %21 1 %131 1
%132:i32 = var
blockpc %26 0 %132 1
%133:i32 = var
blockpc %26 1 %133 1
%134:i32 = var
blockpc %27 0 %134 1
%135:i32 = var
blockpc %27 1 %135 1
%136:i32 = var
blockpc %28 0 %136 1
%137:i32 = var
blockpc %28 1 %137 1
%138:i32 = var
blockpc %34 0 %138 1
%139:i32 = var
blockpc %34 1 %139 1
%140:i32 = var
blockpc %45 0 %140 1
%141:i32 = var
blockpc %45 1 %141 1
%142:i32 = var
blockpc %46 0 %142 1
%143:i32 = var
blockpc %46 1 %143 1
%144:i32 = var
blockpc %79 0 %144 1
%145:i32 = var
blockpc %79 1 %145 1
%146:i32 = var
blockpc %113 0 %146 1
%147:i32 = var
blockpc %113 1 %147 1
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
%154:i32 = var
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
pc %154 1
infer %117


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = eq %5, 0:i32
%7 = block 2
%8 = block 6
%9 = phi %8, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%10 = eq %9, 143:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13:i32 = var
%14:i32 = var
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, 0:i32
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = phi %31, 0:i32, %24
%35 = phi %28, 0:i32, %34
%36 = phi %25, 0:i32, %35
%37 = phi %21, %24, %36
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = phi %41, %37, %13
%45 = phi %38, %44, %37
%46 = phi %18, %37, %45
%47 = phi %16, %17, %46
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57:i32 = var
%58 = phi %54, %57, %47
%59 = phi %51, %47, %58
%60 = phi %48, %47, %59
%61 = phi %15, %47, %60
%62 = block 2
%63:i32 = var
blockpc %62 0 %63 1
%64:i32 = var
blockpc %62 1 %64 1
%65:i32 = var
%66:i32 = var
%67 = phi %22, %66, 0:i32
%68 = phi %31, 0:i32, %67
%69 = phi %28, 0:i32, %68
%70 = phi %25, 0:i32, %69
%71 = phi %21, %67, %70
%72 = phi %16, %65, %71
%73 = phi %62, %72, %71
%74 = phi %8, %13, %14, %61, %61, %61, %73
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78 = block 2
%79:i32 = var
blockpc %78 0 %79 1
%80:i32 = var
blockpc %78 1 %80 1
%81:i32 = var
%82 = phi %78, %74, %81
%83 = phi %75, %74, %82
%84 = phi %7, %74, %83
%85:i32 = var
%86:i32 = var
%87:i32 = var
%88:i32 = var
%89 = phi %22, %88, 0:i32
%90 = phi %31, 0:i32, %89
%91 = phi %28, 0:i32, %90
%92 = phi %25, 0:i32, %91
%93 = phi %21, %89, %92
%94 = phi %41, %93, %85
%95 = phi %38, %94, %93
%96 = phi %18, %93, %95
%97 = phi %16, %87, %96
%98 = phi %54, %86, %97
%99 = phi %51, %97, %98
%100 = phi %48, %97, %99
%101 = phi %15, %97, %100
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105 = phi %22, %104, 0:i32
%106 = phi %31, 0:i32, %105
%107 = phi %28, 0:i32, %106
%108 = phi %25, 0:i32, %107
%109 = phi %21, %105, %108
%110 = phi %16, %103, %109
%111 = phi %62, %110, %109
%112 = phi %8, %85, %86, %101, %101, %102, %111
%113 = block 2
%114:i32 = var
blockpc %113 0 %114 1
%115:i32 = var
blockpc %113 1 %115 1
%116:i32 = var
%117:i32 = var
%118 = phi %22, %117, 0:i32
%119 = phi %31, 0:i32, %118
%120 = phi %28, 0:i32, %119
%121 = phi %25, 0:i32, %120
%122 = phi %21, %118, %121
%123:i32 = var
%124 = phi %16, %123, %122
%125 = block 3
%126:i32 = var
%127:i32 = var
%128 = phi %22, %127, 0:i32
%129 = phi %31, 0:i32, %128
%130 = phi %28, 0:i32, %129
%131 = phi %25, 0:i32, %130
%132 = phi %21, %128, %131
%133 = phi %41, %85, %132
%134 = phi %38, %133, 0:i32
%135 = phi %18, %132, %134
%136 = phi %16, %126, %135
%137 = phi %54, %136, 0:i32
%138 = phi %51, 0:i32, %137
%139 = phi %48, %136, %138
%140 = phi %15, 0:i32, %139
%141 = phi %125, 0:i32, 0:i32, %140
%142 = phi %62, %141, 0:i32
%143 = phi %8, %122, %124, %124, %124, %124, %142
%144 = phi %113, %116, %143
%145 = phi %78, %112, %144
%146 = phi %75, %112, %145
%147 = phi %7, %112, %146
%148 = add %84, %147
%149 = block 2
%150:i32 = var
blockpc %149 0 %150 1
%151:i32 = var
blockpc %149 1 %151 1
%152:i32 = var
%153 = phi %149, 0:i32, %152
%154 = add %148, %153
%155 = eq %3, %154
blockpc %1 0 %155 1
%156:i32 = var
blockpc %1 1 %156 1
%157:i32 = var
%158:i32 = var
%159:i32 = var
%160:i32 = var
%161:i32 = var
%162:i32 = var
%163:i32 = var
%164:i32 = var
pc %157 1
pc %158 1
pc %159 1
pc %160 1
pc %161 1
pc %162 1
pc %163 1
pc %164 1
infer %6


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9 = block 2
%10 = block 6
%11 = phi %10, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%12 = eq %11, 143:i32
blockpc %9 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %9 1 %14 1
%15:i32 = var
%16:i32 = var
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, 0:i32
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 0:i32, %26
%37 = phi %30, 0:i32, %36
%38 = phi %27, 0:i32, %37
%39 = phi %23, %26, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %39, %15
%47 = phi %40, %46, %39
%48 = phi %20, %39, %47
%49 = phi %18, %19, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %59, %49
%61 = phi %53, %49, %60
%62 = phi %50, %49, %61
%63 = phi %17, %49, %62
%64 = block 2
%65:i32 = var
blockpc %64 0 %65 1
%66:i32 = var
blockpc %64 1 %66 1
%67:i32 = var
%68:i32 = var
%69 = phi %24, %68, 0:i32
%70 = phi %33, 0:i32, %69
%71 = phi %30, 0:i32, %70
%72 = phi %27, 0:i32, %71
%73 = phi %23, %69, %72
%74 = phi %18, %67, %73
%75 = phi %64, %74, %73
%76 = phi %10, %15, %16, %63, %63, %63, %75
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84 = phi %80, %76, %83
%85 = phi %77, %76, %84
%86 = phi %9, %76, %85
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91 = phi %24, %90, 0:i32
%92 = phi %33, 0:i32, %91
%93 = phi %30, 0:i32, %92
%94 = phi %27, 0:i32, %93
%95 = phi %23, %91, %94
%96 = phi %43, %95, %87
%97 = phi %40, %96, %95
%98 = phi %20, %95, %97
%99 = phi %18, %89, %98
%100 = phi %56, %88, %99
%101 = phi %53, %99, %100
%102 = phi %50, %99, %101
%103 = phi %17, %99, %102
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107 = phi %24, %106, 0:i32
%108 = phi %33, 0:i32, %107
%109 = phi %30, 0:i32, %108
%110 = phi %27, 0:i32, %109
%111 = phi %23, %107, %110
%112 = phi %18, %105, %111
%113 = phi %64, %112, %111
%114 = phi %10, %87, %88, %103, %103, %104, %113
%115 = block 2
%116:i32 = var
blockpc %115 0 %116 1
%117:i32 = var
blockpc %115 1 %117 1
%118:i32 = var
%119:i32 = var
%120 = phi %24, %119, 0:i32
%121 = phi %33, 0:i32, %120
%122 = phi %30, 0:i32, %121
%123 = phi %27, 0:i32, %122
%124 = phi %23, %120, %123
%125:i32 = var
%126 = phi %18, %125, %124
%127 = block 3
%128:i32 = var
%129:i32 = var
%130 = phi %24, %129, 0:i32
%131 = phi %33, 0:i32, %130
%132 = phi %30, 0:i32, %131
%133 = phi %27, 0:i32, %132
%134 = phi %23, %130, %133
%135 = phi %43, %87, %134
%136 = phi %40, %135, 0:i32
%137 = phi %20, %134, %136
%138 = phi %18, %128, %137
%139 = phi %56, %138, 0:i32
%140 = phi %53, 0:i32, %139
%141 = phi %50, %138, %140
%142 = phi %17, 0:i32, %141
%143 = phi %127, 0:i32, 0:i32, %142
%144 = phi %64, %143, 0:i32
%145 = phi %10, %124, %126, %126, %126, %126, %144
%146 = phi %115, %118, %145
%147 = phi %80, %114, %146
%148 = phi %77, %114, %147
%149 = phi %9, %114, %148
%150 = add %86, %149
%151 = block 2
%152:i32 = var
blockpc %151 0 %152 1
%153:i32 = var
blockpc %151 1 %153 1
%154:i32 = var
%155 = phi %151, 0:i32, %154
%156 = add %150, %155
%157 = eq %3, %156
blockpc %1 0 %157 1
%158:i32 = var
blockpc %1 1 %158 1
%159:i32 = var
%160:i32 = var
%161:i32 = var
%162:i32 = var
%163:i32 = var
%164:i32 = var
%165:i32 = var
%166:i32 = var
pc %159 1
pc %160 1
pc %161 1
pc %162 1
pc %163 1
pc %164 1
pc %165 1
pc %166 1
infer %8


; start LHS (in $38)
%0:i32 = var
%1 = shl 1:i32, %0
%2:i32 = var
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85 = phi %18, %84, 0:i32
%86 = phi %27, 0:i32, %85
%87 = phi %24, 0:i32, %86
%88 = phi %21, 0:i32, %87
%89 = phi %17, %85, %88
%90 = phi %37, %89, %81
%91 = phi %34, %90, %89
%92 = phi %14, %89, %91
%93 = phi %12, %83, %92
%94 = phi %50, %82, %93
%95 = phi %47, %93, %94
%96 = phi %44, %93, %95
%97 = phi %11, %93, %96
%98:i32 = var
%99:i32 = var
%100:i32 = var
%101 = phi %18, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %24, 0:i32, %102
%104 = phi %21, 0:i32, %103
%105 = phi %17, %101, %104
%106 = phi %12, %99, %105
%107 = phi %58, %106, %105
%108 = phi %4, %81, %82, %97, %97, %98, %107
%109 = block 2
%110:i32 = var
blockpc %109 0 %110 1
%111:i32 = var
blockpc %109 1 %111 1
%112:i32 = var
%113:i32 = var
%114 = phi %18, %113, 0:i32
%115 = phi %27, 0:i32, %114
%116 = phi %24, 0:i32, %115
%117 = phi %21, 0:i32, %116
%118 = phi %17, %114, %117
%119:i32 = var
%120 = phi %12, %119, %118
%121 = block 3
%122:i32 = var
%123:i32 = var
%124 = phi %18, %123, 0:i32
%125 = phi %27, 0:i32, %124
%126 = phi %24, 0:i32, %125
%127 = phi %21, 0:i32, %126
%128 = phi %17, %124, %127
%129 = phi %37, %81, %128
%130 = phi %34, %129, 0:i32
%131 = phi %14, %128, %130
%132 = phi %12, %122, %131
%133 = phi %50, %132, 0:i32
%134 = phi %47, 0:i32, %133
%135 = phi %44, %132, %134
%136 = phi %11, 0:i32, %135
%137 = phi %121, 0:i32, 0:i32, %136
%138 = phi %58, %137, 0:i32
%139 = phi %4, %118, %120, %120, %120, %120, %138
%140 = phi %109, %112, %139
%141 = phi %74, %108, %140
%142 = phi %71, %108, %141
%143 = phi %3, %108, %142
%144 = add %80, %143
%145 = block 2
%146:i32 = var
blockpc %145 0 %146 1
%147:i32 = var
blockpc %145 1 %147 1
%148:i32 = var
%149 = phi %145, 0:i32, %148
%150 = add %144, %149
%151 = eq %2, %150
%152:i32 = var
%153:i32 = var
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
pc %151 1
pc %152 1
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = shl 1:i32, %0
%2 = xor %1, -1:i32
%3:i32 = var
%4 = block 2
%5 = block 6
%6 = phi %5, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%7 = eq %6, 143:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10:i32 = var
%11:i32 = var
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18 = block 2
%19 = block 2
%20:i32 = var
%21 = phi %19, %20, 0:i32
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = phi %28, 0:i32, %21
%32 = phi %25, 0:i32, %31
%33 = phi %22, 0:i32, %32
%34 = phi %18, %21, %33
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = phi %38, %34, %10
%42 = phi %35, %41, %34
%43 = phi %15, %34, %42
%44 = phi %13, %14, %43
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54:i32 = var
%55 = phi %51, %54, %44
%56 = phi %48, %44, %55
%57 = phi %45, %44, %56
%58 = phi %12, %44, %57
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62:i32 = var
%63:i32 = var
%64 = phi %19, %63, 0:i32
%65 = phi %28, 0:i32, %64
%66 = phi %25, 0:i32, %65
%67 = phi %22, 0:i32, %66
%68 = phi %18, %64, %67
%69 = phi %13, %62, %68
%70 = phi %59, %69, %68
%71 = phi %5, %10, %11, %58, %58, %58, %70
%72 = block 2
%73:i32 = var
blockpc %72 0 %73 1
%74:i32 = var
blockpc %72 1 %74 1
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78:i32 = var
%79 = phi %75, %71, %78
%80 = phi %72, %71, %79
%81 = phi %4, %71, %80
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85:i32 = var
%86 = phi %19, %85, 0:i32
%87 = phi %28, 0:i32, %86
%88 = phi %25, 0:i32, %87
%89 = phi %22, 0:i32, %88
%90 = phi %18, %86, %89
%91 = phi %38, %90, %82
%92 = phi %35, %91, %90
%93 = phi %15, %90, %92
%94 = phi %13, %84, %93
%95 = phi %51, %83, %94
%96 = phi %48, %94, %95
%97 = phi %45, %94, %96
%98 = phi %12, %94, %97
%99:i32 = var
%100:i32 = var
%101:i32 = var
%102 = phi %19, %101, 0:i32
%103 = phi %28, 0:i32, %102
%104 = phi %25, 0:i32, %103
%105 = phi %22, 0:i32, %104
%106 = phi %18, %102, %105
%107 = phi %13, %100, %106
%108 = phi %59, %107, %106
%109 = phi %5, %82, %83, %98, %98, %99, %108
%110 = block 2
%111:i32 = var
blockpc %110 0 %111 1
%112:i32 = var
blockpc %110 1 %112 1
%113:i32 = var
%114:i32 = var
%115 = phi %19, %114, 0:i32
%116 = phi %28, 0:i32, %115
%117 = phi %25, 0:i32, %116
%118 = phi %22, 0:i32, %117
%119 = phi %18, %115, %118
%120:i32 = var
%121 = phi %13, %120, %119
%122 = block 3
%123:i32 = var
%124:i32 = var
%125 = phi %19, %124, 0:i32
%126 = phi %28, 0:i32, %125
%127 = phi %25, 0:i32, %126
%128 = phi %22, 0:i32, %127
%129 = phi %18, %125, %128
%130 = phi %38, %82, %129
%131 = phi %35, %130, 0:i32
%132 = phi %15, %129, %131
%133 = phi %13, %123, %132
%134 = phi %51, %133, 0:i32
%135 = phi %48, 0:i32, %134
%136 = phi %45, %133, %135
%137 = phi %12, 0:i32, %136
%138 = phi %122, 0:i32, 0:i32, %137
%139 = phi %59, %138, 0:i32
%140 = phi %5, %119, %121, %121, %121, %121, %139
%141 = phi %110, %113, %140
%142 = phi %75, %109, %141
%143 = phi %72, %109, %142
%144 = phi %4, %109, %143
%145 = add %81, %144
%146 = block 2
%147:i32 = var
blockpc %146 0 %147 1
%148:i32 = var
blockpc %146 1 %148 1
%149:i32 = var
%150 = phi %146, 0:i32, %149
%151 = add %145, %150
%152 = eq %3, %151
%153:i32 = var
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
%159:i32 = var
pc %152 1
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
pc %159 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl 1:i32, %1
%3 = xor %2, -1:i32
%4 = and %0, %3
%5:i32 = var
%6 = block 2
%7 = block 6
%8 = phi %7, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%9 = eq %8, 143:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12:i32 = var
%13:i32 = var
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = phi %21, %22, 0:i32
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = phi %30, 0:i32, %23
%34 = phi %27, 0:i32, %33
%35 = phi %24, 0:i32, %34
%36 = phi %20, %23, %35
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = phi %40, %36, %12
%44 = phi %37, %43, %36
%45 = phi %17, %36, %44
%46 = phi %15, %16, %45
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56:i32 = var
%57 = phi %53, %56, %46
%58 = phi %50, %46, %57
%59 = phi %47, %46, %58
%60 = phi %14, %46, %59
%61 = block 2
%62:i32 = var
blockpc %61 0 %62 1
%63:i32 = var
blockpc %61 1 %63 1
%64:i32 = var
%65:i32 = var
%66 = phi %21, %65, 0:i32
%67 = phi %30, 0:i32, %66
%68 = phi %27, 0:i32, %67
%69 = phi %24, 0:i32, %68
%70 = phi %20, %66, %69
%71 = phi %15, %64, %70
%72 = phi %61, %71, %70
%73 = phi %7, %12, %13, %60, %60, %60, %72
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80:i32 = var
%81 = phi %77, %73, %80
%82 = phi %74, %73, %81
%83 = phi %6, %73, %82
%84:i32 = var
%85:i32 = var
%86:i32 = var
%87:i32 = var
%88 = phi %21, %87, 0:i32
%89 = phi %30, 0:i32, %88
%90 = phi %27, 0:i32, %89
%91 = phi %24, 0:i32, %90
%92 = phi %20, %88, %91
%93 = phi %40, %92, %84
%94 = phi %37, %93, %92
%95 = phi %17, %92, %94
%96 = phi %15, %86, %95
%97 = phi %53, %85, %96
%98 = phi %50, %96, %97
%99 = phi %47, %96, %98
%100 = phi %14, %96, %99
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104 = phi %21, %103, 0:i32
%105 = phi %30, 0:i32, %104
%106 = phi %27, 0:i32, %105
%107 = phi %24, 0:i32, %106
%108 = phi %20, %104, %107
%109 = phi %15, %102, %108
%110 = phi %61, %109, %108
%111 = phi %7, %84, %85, %100, %100, %101, %110
%112 = block 2
%113:i32 = var
blockpc %112 0 %113 1
%114:i32 = var
blockpc %112 1 %114 1
%115:i32 = var
%116:i32 = var
%117 = phi %21, %116, 0:i32
%118 = phi %30, 0:i32, %117
%119 = phi %27, 0:i32, %118
%120 = phi %24, 0:i32, %119
%121 = phi %20, %117, %120
%122:i32 = var
%123 = phi %15, %122, %121
%124 = block 3
%125:i32 = var
%126:i32 = var
%127 = phi %21, %126, 0:i32
%128 = phi %30, 0:i32, %127
%129 = phi %27, 0:i32, %128
%130 = phi %24, 0:i32, %129
%131 = phi %20, %127, %130
%132 = phi %40, %84, %131
%133 = phi %37, %132, 0:i32
%134 = phi %17, %131, %133
%135 = phi %15, %125, %134
%136 = phi %53, %135, 0:i32
%137 = phi %50, 0:i32, %136
%138 = phi %47, %135, %137
%139 = phi %14, 0:i32, %138
%140 = phi %124, 0:i32, 0:i32, %139
%141 = phi %61, %140, 0:i32
%142 = phi %7, %121, %123, %123, %123, %123, %141
%143 = phi %112, %115, %142
%144 = phi %77, %111, %143
%145 = phi %74, %111, %144
%146 = phi %6, %111, %145
%147 = add %83, %146
%148 = block 2
%149:i32 = var
blockpc %148 0 %149 1
%150:i32 = var
blockpc %148 1 %150 1
%151:i32 = var
%152 = phi %148, 0:i32, %151
%153 = add %147, %152
%154 = eq %5, %153
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
%159:i32 = var
%160:i32 = var
%161:i32 = var
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
pc %159 1
pc %160 1
pc %161 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85 = phi %18, %84, 0:i32
%86 = phi %27, 0:i32, %85
%87 = phi %24, 0:i32, %86
%88 = phi %21, 0:i32, %87
%89 = phi %17, %85, %88
%90 = phi %37, %89, %81
%91 = phi %34, %90, %89
%92 = phi %14, %89, %91
%93 = phi %12, %83, %92
%94 = phi %50, %82, %93
%95 = phi %47, %93, %94
%96 = phi %44, %93, %95
%97 = phi %11, %93, %96
%98:i32 = var
%99:i32 = var
%100:i32 = var
%101 = phi %18, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %24, 0:i32, %102
%104 = phi %21, 0:i32, %103
%105 = phi %17, %101, %104
%106 = phi %12, %99, %105
%107 = phi %58, %106, %105
%108 = phi %4, %81, %82, %97, %97, %98, %107
%109 = block 2
%110:i32 = var
blockpc %109 0 %110 1
%111:i32 = var
blockpc %109 1 %111 1
%112:i32 = var
%113:i32 = var
%114 = phi %18, %113, 0:i32
%115 = phi %27, 0:i32, %114
%116 = phi %24, 0:i32, %115
%117 = phi %21, 0:i32, %116
%118 = phi %17, %114, %117
%119:i32 = var
%120 = phi %12, %119, %118
%121 = block 3
%122:i32 = var
%123:i32 = var
%124 = phi %18, %123, 0:i32
%125 = phi %27, 0:i32, %124
%126 = phi %24, 0:i32, %125
%127 = phi %21, 0:i32, %126
%128 = phi %17, %124, %127
%129 = phi %37, %81, %128
%130 = phi %34, %129, 0:i32
%131 = phi %14, %128, %130
%132 = phi %12, %122, %131
%133 = phi %50, %132, 0:i32
%134 = phi %47, 0:i32, %133
%135 = phi %44, %132, %134
%136 = phi %11, 0:i32, %135
%137 = phi %121, 0:i32, 0:i32, %136
%138 = phi %58, %137, 0:i32
%139 = phi %4, %118, %120, %120, %120, %120, %138
%140 = phi %109, %112, %139
%141 = phi %74, %108, %140
%142 = phi %71, %108, %141
%143 = phi %3, %108, %142
%144 = add %80, %143
%145 = block 2
%146:i32 = var
blockpc %145 0 %146 1
%147:i32 = var
blockpc %145 1 %147 1
%148:i32 = var
%149 = phi %145, 0:i32, %148
%150 = add %144, %149
%151 = eq %2, %150
%152:i32 = zext %151
%153 = eq %152, 0:i32
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
%159:i32 = var
%160:i32 = var
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
pc %159 1
pc %160 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85 = phi %18, %84, 0:i32
%86 = phi %27, 0:i32, %85
%87 = phi %24, 0:i32, %86
%88 = phi %21, 0:i32, %87
%89 = phi %17, %85, %88
%90 = phi %37, %89, %81
%91 = phi %34, %90, %89
%92 = phi %14, %89, %91
%93 = phi %12, %83, %92
%94 = phi %50, %82, %93
%95 = phi %47, %93, %94
%96 = phi %44, %93, %95
%97 = phi %11, %93, %96
%98:i32 = var
%99:i32 = var
%100:i32 = var
%101 = phi %18, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %24, 0:i32, %102
%104 = phi %21, 0:i32, %103
%105 = phi %17, %101, %104
%106 = phi %12, %99, %105
%107 = phi %58, %106, %105
%108 = phi %4, %81, %82, %97, %97, %98, %107
%109 = block 2
%110:i32 = var
blockpc %109 0 %110 1
%111:i32 = var
blockpc %109 1 %111 1
%112:i32 = var
%113:i32 = var
%114 = phi %18, %113, 0:i32
%115 = phi %27, 0:i32, %114
%116 = phi %24, 0:i32, %115
%117 = phi %21, 0:i32, %116
%118 = phi %17, %114, %117
%119:i32 = var
%120 = phi %12, %119, %118
%121 = block 3
%122:i32 = var
%123:i32 = var
%124 = phi %18, %123, 0:i32
%125 = phi %27, 0:i32, %124
%126 = phi %24, 0:i32, %125
%127 = phi %21, 0:i32, %126
%128 = phi %17, %124, %127
%129 = phi %37, %81, %128
%130 = phi %34, %129, 0:i32
%131 = phi %14, %128, %130
%132 = phi %12, %122, %131
%133 = phi %50, %132, 0:i32
%134 = phi %47, 0:i32, %133
%135 = phi %44, %132, %134
%136 = phi %11, 0:i32, %135
%137 = phi %121, 0:i32, 0:i32, %136
%138 = phi %58, %137, 0:i32
%139 = phi %4, %118, %120, %120, %120, %120, %138
%140 = phi %109, %112, %139
%141 = phi %74, %108, %140
%142 = phi %71, %108, %141
%143 = phi %3, %108, %142
%144 = add %80, %143
%145 = block 2
%146:i32 = var
blockpc %145 0 %146 1
%147:i32 = var
blockpc %145 1 %147 1
%148:i32 = var
%149 = phi %145, 0:i32, %148
%150 = add %144, %149
%151 = eq %2, %150
%152:i32 = zext %151
%153 = eq %152, 0:i32
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
%158:i32 = var
%159:i32 = var
%160:i32 = var
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
pc %158 1
pc %159 1
pc %160 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55 = phi %10, %54, 0:i32
%56 = phi %15, 0:i32, %55
%57 = phi %14, 0:i32, %56
%58 = phi %13, 0:i32, %57
%59 = phi %9, %55, %58
%60 = phi %21, %59, %51
%61 = phi %20, %60, %59
%62 = phi %8, %59, %61
%63 = phi %6, %53, %62
%64 = phi %28, %52, %63
%65 = phi %27, %63, %64
%66 = phi %26, %63, %65
%67 = phi %5, %63, %66
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %10, %70, 0:i32
%72 = phi %15, 0:i32, %71
%73 = phi %14, 0:i32, %72
%74 = phi %13, 0:i32, %73
%75 = phi %9, %71, %74
%76 = phi %6, %69, %75
%77 = phi %34, %76, %75
%78 = phi %2, %51, %52, %67, %67, %68, %77
%79 = block 2
%80:i32 = var
%81:i32 = var
%82 = phi %10, %81, 0:i32
%83 = phi %15, 0:i32, %82
%84 = phi %14, 0:i32, %83
%85 = phi %13, 0:i32, %84
%86 = phi %9, %82, %85
%87:i32 = var
%88 = phi %6, %87, %86
%89 = block 3
%90:i32 = var
%91:i32 = var
%92 = phi %10, %91, 0:i32
%93 = phi %15, 0:i32, %92
%94 = phi %14, 0:i32, %93
%95 = phi %13, 0:i32, %94
%96 = phi %9, %92, %95
%97 = phi %21, %51, %96
%98 = phi %20, %97, 0:i32
%99 = phi %8, %96, %98
%100 = phi %6, %90, %99
%101 = phi %28, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %26, %100, %102
%104 = phi %5, 0:i32, %103
%105 = phi %89, 0:i32, 0:i32, %104
%106 = phi %34, %105, 0:i32
%107 = phi %2, %86, %88, %88, %88, %88, %106
%108 = phi %79, %80, %107
%109 = phi %46, %78, %108
%110 = phi %45, %78, %109
%111 = phi %1, %78, %110
%112 = add %50, %111 (hasExternalUses)
%113 = block 2
%114:i32 = var
%115 = phi %113, 0:i32, %114
%116 = add %112, %115 (hasExternalUses)
%117 = eq %0, %116
%118:i32 = var
blockpc %1 0 %118 1
%119:i32 = var
blockpc %1 1 %119 1
%120:i32 = var
blockpc %8 0 %120 1
%121:i32 = var
blockpc %8 1 %121 1
%122:i32 = var
blockpc %13 0 %122 1
%123:i32 = var
blockpc %13 1 %123 1
%124:i32 = var
blockpc %14 0 %124 1
%125:i32 = var
blockpc %14 1 %125 1
%126:i32 = var
blockpc %15 0 %126 1
%127:i32 = var
blockpc %15 1 %127 1
%128:i32 = var
blockpc %20 0 %128 1
%129:i32 = var
blockpc %20 1 %129 1
%130:i32 = var
blockpc %21 0 %130 1
%131:i32 = var
blockpc %21 1 %131 1
%132:i32 = var
blockpc %26 0 %132 1
%133:i32 = var
blockpc %26 1 %133 1
%134:i32 = var
blockpc %27 0 %134 1
%135:i32 = var
blockpc %27 1 %135 1
%136:i32 = var
blockpc %28 0 %136 1
%137:i32 = var
blockpc %28 1 %137 1
%138:i32 = var
blockpc %34 0 %138 1
%139:i32 = var
blockpc %34 1 %139 1
%140:i32 = var
blockpc %45 0 %140 1
%141:i32 = var
blockpc %45 1 %141 1
%142:i32 = var
blockpc %46 0 %142 1
%143:i32 = var
blockpc %46 1 %143 1
%144:i32 = var
blockpc %79 0 %144 1
%145:i32 = var
blockpc %79 1 %145 1
%146:i32 = var
blockpc %113 0 %146 1
%147:i32 = var
blockpc %113 1 %147 1
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
%154:i32 = var
%155:i32 = var
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
pc %154 1
pc %155 1
infer %117


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = eq %5, 0:i32
%7 = block 2
%8 = block 6
%9 = phi %8, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%10 = eq %9, 143:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13:i32 = var
%14:i32 = var
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, 0:i32
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = phi %31, 0:i32, %24
%35 = phi %28, 0:i32, %34
%36 = phi %25, 0:i32, %35
%37 = phi %21, %24, %36
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = phi %41, %37, %13
%45 = phi %38, %44, %37
%46 = phi %18, %37, %45
%47 = phi %16, %17, %46
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57:i32 = var
%58 = phi %54, %57, %47
%59 = phi %51, %47, %58
%60 = phi %48, %47, %59
%61 = phi %15, %47, %60
%62 = block 2
%63:i32 = var
blockpc %62 0 %63 1
%64:i32 = var
blockpc %62 1 %64 1
%65:i32 = var
%66:i32 = var
%67 = phi %22, %66, 0:i32
%68 = phi %31, 0:i32, %67
%69 = phi %28, 0:i32, %68
%70 = phi %25, 0:i32, %69
%71 = phi %21, %67, %70
%72 = phi %16, %65, %71
%73 = phi %62, %72, %71
%74 = phi %8, %13, %14, %61, %61, %61, %73
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78 = block 2
%79:i32 = var
blockpc %78 0 %79 1
%80:i32 = var
blockpc %78 1 %80 1
%81:i32 = var
%82 = phi %78, %74, %81
%83 = phi %75, %74, %82
%84 = phi %7, %74, %83
%85:i32 = var
%86:i32 = var
%87:i32 = var
%88:i32 = var
%89 = phi %22, %88, 0:i32
%90 = phi %31, 0:i32, %89
%91 = phi %28, 0:i32, %90
%92 = phi %25, 0:i32, %91
%93 = phi %21, %89, %92
%94 = phi %41, %93, %85
%95 = phi %38, %94, %93
%96 = phi %18, %93, %95
%97 = phi %16, %87, %96
%98 = phi %54, %86, %97
%99 = phi %51, %97, %98
%100 = phi %48, %97, %99
%101 = phi %15, %97, %100
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105 = phi %22, %104, 0:i32
%106 = phi %31, 0:i32, %105
%107 = phi %28, 0:i32, %106
%108 = phi %25, 0:i32, %107
%109 = phi %21, %105, %108
%110 = phi %16, %103, %109
%111 = phi %62, %110, %109
%112 = phi %8, %85, %86, %101, %101, %102, %111
%113 = block 2
%114:i32 = var
blockpc %113 0 %114 1
%115:i32 = var
blockpc %113 1 %115 1
%116:i32 = var
%117:i32 = var
%118 = phi %22, %117, 0:i32
%119 = phi %31, 0:i32, %118
%120 = phi %28, 0:i32, %119
%121 = phi %25, 0:i32, %120
%122 = phi %21, %118, %121
%123:i32 = var
%124 = phi %16, %123, %122
%125 = block 3
%126:i32 = var
%127:i32 = var
%128 = phi %22, %127, 0:i32
%129 = phi %31, 0:i32, %128
%130 = phi %28, 0:i32, %129
%131 = phi %25, 0:i32, %130
%132 = phi %21, %128, %131
%133 = phi %41, %85, %132
%134 = phi %38, %133, 0:i32
%135 = phi %18, %132, %134
%136 = phi %16, %126, %135
%137 = phi %54, %136, 0:i32
%138 = phi %51, 0:i32, %137
%139 = phi %48, %136, %138
%140 = phi %15, 0:i32, %139
%141 = phi %125, 0:i32, 0:i32, %140
%142 = phi %62, %141, 0:i32
%143 = phi %8, %122, %124, %124, %124, %124, %142
%144 = phi %113, %116, %143
%145 = phi %78, %112, %144
%146 = phi %75, %112, %145
%147 = phi %7, %112, %146
%148 = add %84, %147
%149 = block 2
%150:i32 = var
blockpc %149 0 %150 1
%151:i32 = var
blockpc %149 1 %151 1
%152:i32 = var
%153 = phi %149, 0:i32, %152
%154 = add %148, %153
%155 = eq %3, %154
blockpc %1 0 %155 1
%156:i32 = var
blockpc %1 1 %156 1
%157:i32 = var
%158:i32 = var
%159:i32 = var
%160:i32 = var
%161:i32 = var
%162:i32 = var
%163:i32 = var
%164:i32 = var
pc %157 1
pc %158 1
pc %159 1
pc %160 1
pc %161 1
pc %162 1
pc %163 1
pc %164 1
infer %6


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 24:i32
%7 = block 2
%8 = block 6
%9 = phi %8, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%10 = eq %9, 143:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13:i32 = var
%14:i32 = var
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, 0:i32
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = phi %31, 0:i32, %24
%35 = phi %28, 0:i32, %34
%36 = phi %25, 0:i32, %35
%37 = phi %21, %24, %36
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = phi %41, %37, %13
%45 = phi %38, %44, %37
%46 = phi %18, %37, %45
%47 = phi %16, %17, %46
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57:i32 = var
%58 = phi %54, %57, %47
%59 = phi %51, %47, %58
%60 = phi %48, %47, %59
%61 = phi %15, %47, %60
%62 = block 2
%63:i32 = var
blockpc %62 0 %63 1
%64:i32 = var
blockpc %62 1 %64 1
%65:i32 = var
%66:i32 = var
%67 = phi %22, %66, 0:i32
%68 = phi %31, 0:i32, %67
%69 = phi %28, 0:i32, %68
%70 = phi %25, 0:i32, %69
%71 = phi %21, %67, %70
%72 = phi %16, %65, %71
%73 = phi %62, %72, %71
%74 = phi %8, %13, %14, %61, %61, %61, %73
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78 = block 2
%79:i32 = var
blockpc %78 0 %79 1
%80:i32 = var
blockpc %78 1 %80 1
%81:i32 = var
%82 = phi %78, %74, %81
%83 = phi %75, %74, %82
%84 = phi %7, %74, %83
%85:i32 = var
%86:i32 = var
%87:i32 = var
%88:i32 = var
%89 = phi %22, %88, 0:i32
%90 = phi %31, 0:i32, %89
%91 = phi %28, 0:i32, %90
%92 = phi %25, 0:i32, %91
%93 = phi %21, %89, %92
%94 = phi %41, %93, %85
%95 = phi %38, %94, %93
%96 = phi %18, %93, %95
%97 = phi %16, %87, %96
%98 = phi %54, %86, %97
%99 = phi %51, %97, %98
%100 = phi %48, %97, %99
%101 = phi %15, %97, %100
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105 = phi %22, %104, 0:i32
%106 = phi %31, 0:i32, %105
%107 = phi %28, 0:i32, %106
%108 = phi %25, 0:i32, %107
%109 = phi %21, %105, %108
%110 = phi %16, %103, %109
%111 = phi %62, %110, %109
%112 = phi %8, %85, %86, %101, %101, %102, %111
%113 = block 2
%114:i32 = var
blockpc %113 0 %114 1
%115:i32 = var
blockpc %113 1 %115 1
%116:i32 = var
%117:i32 = var
%118 = phi %22, %117, 0:i32
%119 = phi %31, 0:i32, %118
%120 = phi %28, 0:i32, %119
%121 = phi %25, 0:i32, %120
%122 = phi %21, %118, %121
%123:i32 = var
%124 = phi %16, %123, %122
%125 = block 3
%126:i32 = var
%127:i32 = var
%128 = phi %22, %127, 0:i32
%129 = phi %31, 0:i32, %128
%130 = phi %28, 0:i32, %129
%131 = phi %25, 0:i32, %130
%132 = phi %21, %128, %131
%133 = phi %41, %85, %132
%134 = phi %38, %133, 0:i32
%135 = phi %18, %132, %134
%136 = phi %16, %126, %135
%137 = phi %54, %136, 0:i32
%138 = phi %51, 0:i32, %137
%139 = phi %48, %136, %138
%140 = phi %15, 0:i32, %139
%141 = phi %125, 0:i32, 0:i32, %140
%142 = phi %62, %141, 0:i32
%143 = phi %8, %122, %124, %124, %124, %124, %142
%144 = phi %113, %116, %143
%145 = phi %78, %112, %144
%146 = phi %75, %112, %145
%147 = phi %7, %112, %146
%148 = add %84, %147
%149 = block 2
%150:i32 = var
blockpc %149 0 %150 1
%151:i32 = var
blockpc %149 1 %151 1
%152:i32 = var
%153 = phi %149, 0:i32, %152
%154 = add %148, %153
%155 = eq %3, %154
blockpc %1 0 %155 1
%156:i32 = var
blockpc %1 1 %156 1
%157:i32 = var
%158:i32 = var
%159:i32 = var
%160:i32 = var
%161:i32 = var
%162:i32 = var
%163:i32 = var
pc %157 1
pc %158 1
pc %159 1
pc %160 1
pc %161 1
pc %162 1
pc %163 1
infer %6


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116 = add %115, 16:i32
%117:i32 = var
blockpc %0 0 %117 1
%118:i32 = var
blockpc %0 1 %118 1
%119:i32 = var
blockpc %7 0 %119 1
%120:i32 = var
blockpc %7 1 %120 1
%121:i32 = var
blockpc %12 0 %121 1
%122:i32 = var
blockpc %12 1 %122 1
%123:i32 = var
blockpc %13 0 %123 1
%124:i32 = var
blockpc %13 1 %124 1
%125:i32 = var
blockpc %14 0 %125 1
%126:i32 = var
blockpc %14 1 %126 1
%127:i32 = var
blockpc %19 0 %127 1
%128:i32 = var
blockpc %19 1 %128 1
%129:i32 = var
blockpc %20 0 %129 1
%130:i32 = var
blockpc %20 1 %130 1
%131:i32 = var
blockpc %25 0 %131 1
%132:i32 = var
blockpc %25 1 %132 1
%133:i32 = var
blockpc %26 0 %133 1
%134:i32 = var
blockpc %26 1 %134 1
%135:i32 = var
blockpc %27 0 %135 1
%136:i32 = var
blockpc %27 1 %136 1
%137:i32 = var
blockpc %33 0 %137 1
%138:i32 = var
blockpc %33 1 %138 1
%139:i32 = var
blockpc %44 0 %139 1
%140:i32 = var
blockpc %44 1 %140 1
%141:i32 = var
blockpc %45 0 %141 1
%142:i32 = var
blockpc %45 1 %142 1
%143:i32 = var
blockpc %78 0 %143 1
%144:i32 = var
blockpc %78 1 %144 1
%145:i32 = var
blockpc %112 0 %145 1
%146:i32 = var
blockpc %112 1 %146 1
%147:i32 = var
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
pc %147 1
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
infer %116


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = ult %2, 256:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = and %2, 3:i32
%7 = eq %6, 1:i32
%8:i32 = var
%9 = block 2
%10 = block 6
%11 = phi %10, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%12 = eq %11, 143:i32
blockpc %9 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %9 1 %14 1
%15:i32 = var
%16:i32 = var
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, 0:i32
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 0:i32, %26
%37 = phi %30, 0:i32, %36
%38 = phi %27, 0:i32, %37
%39 = phi %23, %26, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %39, %15
%47 = phi %40, %46, %39
%48 = phi %20, %39, %47
%49 = phi %18, %19, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %59, %49
%61 = phi %53, %49, %60
%62 = phi %50, %49, %61
%63 = phi %17, %49, %62
%64 = block 2
%65:i32 = var
blockpc %64 0 %65 1
%66:i32 = var
blockpc %64 1 %66 1
%67:i32 = var
%68:i32 = var
%69 = phi %24, %68, 0:i32
%70 = phi %33, 0:i32, %69
%71 = phi %30, 0:i32, %70
%72 = phi %27, 0:i32, %71
%73 = phi %23, %69, %72
%74 = phi %18, %67, %73
%75 = phi %64, %74, %73
%76 = phi %10, %15, %16, %63, %63, %63, %75
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84 = phi %80, %76, %83
%85 = phi %77, %76, %84
%86 = phi %9, %76, %85
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91 = phi %24, %90, 0:i32
%92 = phi %33, 0:i32, %91
%93 = phi %30, 0:i32, %92
%94 = phi %27, 0:i32, %93
%95 = phi %23, %91, %94
%96 = phi %43, %95, %87
%97 = phi %40, %96, %95
%98 = phi %20, %95, %97
%99 = phi %18, %89, %98
%100 = phi %56, %88, %99
%101 = phi %53, %99, %100
%102 = phi %50, %99, %101
%103 = phi %17, %99, %102
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107 = phi %24, %106, 0:i32
%108 = phi %33, 0:i32, %107
%109 = phi %30, 0:i32, %108
%110 = phi %27, 0:i32, %109
%111 = phi %23, %107, %110
%112 = phi %18, %105, %111
%113 = phi %64, %112, %111
%114 = phi %10, %87, %88, %103, %103, %104, %113
%115 = block 2
%116:i32 = var
blockpc %115 0 %116 1
%117:i32 = var
blockpc %115 1 %117 1
%118:i32 = var
%119:i32 = var
%120 = phi %24, %119, 0:i32
%121 = phi %33, 0:i32, %120
%122 = phi %30, 0:i32, %121
%123 = phi %27, 0:i32, %122
%124 = phi %23, %120, %123
%125:i32 = var
%126 = phi %18, %125, %124
%127 = block 3
%128:i32 = var
%129:i32 = var
%130 = phi %24, %129, 0:i32
%131 = phi %33, 0:i32, %130
%132 = phi %30, 0:i32, %131
%133 = phi %27, 0:i32, %132
%134 = phi %23, %130, %133
%135 = phi %43, %87, %134
%136 = phi %40, %135, 0:i32
%137 = phi %20, %134, %136
%138 = phi %18, %128, %137
%139 = phi %56, %138, 0:i32
%140 = phi %53, 0:i32, %139
%141 = phi %50, %138, %140
%142 = phi %17, 0:i32, %141
%143 = phi %127, 0:i32, 0:i32, %142
%144 = phi %64, %143, 0:i32
%145 = phi %10, %124, %126, %126, %126, %126, %144
%146 = phi %115, %118, %145
%147 = phi %80, %114, %146
%148 = phi %77, %114, %147
%149 = phi %9, %114, %148
%150 = add %86, %149
%151 = block 2
%152:i32 = var
blockpc %151 0 %152 1
%153:i32 = var
blockpc %151 1 %153 1
%154:i32 = var
%155 = phi %151, 0:i32, %154
%156 = add %150, %155
%157 = eq %8, %156
%158:i32 = zext %157
%159 = eq %158, 0:i32
%160:i32 = var
%161:i32 = var
%162:i32 = var
%163:i32 = var
pc %5 1
pc %7 1
pc %159 1
pc %160 1
pc %161 1
pc %162 1
pc %163 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4:i32 = var
%5 = ult %4, 256:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = and %4, 3:i32
%9 = eq %8, 1:i32
%10:i32 = var
%11 = block 2
%12 = block 6
%13 = phi %12, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%14 = eq %13, 143:i32
blockpc %11 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %11 1 %16 1
%17:i32 = var
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26 = block 2
%27:i32 = var
%28 = phi %26, %27, 0:i32
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = phi %35, 0:i32, %28
%39 = phi %32, 0:i32, %38
%40 = phi %29, 0:i32, %39
%41 = phi %25, %28, %40
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = phi %45, %41, %17
%49 = phi %42, %48, %41
%50 = phi %22, %41, %49
%51 = phi %20, %21, %50
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62 = phi %58, %61, %51
%63 = phi %55, %51, %62
%64 = phi %52, %51, %63
%65 = phi %19, %51, %64
%66 = block 2
%67:i32 = var
blockpc %66 0 %67 1
%68:i32 = var
blockpc %66 1 %68 1
%69:i32 = var
%70:i32 = var
%71 = phi %26, %70, 0:i32
%72 = phi %35, 0:i32, %71
%73 = phi %32, 0:i32, %72
%74 = phi %29, 0:i32, %73
%75 = phi %25, %71, %74
%76 = phi %20, %69, %75
%77 = phi %66, %76, %75
%78 = phi %12, %17, %18, %65, %65, %65, %77
%79 = block 2
%80:i32 = var
blockpc %79 0 %80 1
%81:i32 = var
blockpc %79 1 %81 1
%82 = block 2
%83:i32 = var
blockpc %82 0 %83 1
%84:i32 = var
blockpc %82 1 %84 1
%85:i32 = var
%86 = phi %82, %78, %85
%87 = phi %79, %78, %86
%88 = phi %11, %78, %87
%89:i32 = var
%90:i32 = var
%91:i32 = var
%92:i32 = var
%93 = phi %26, %92, 0:i32
%94 = phi %35, 0:i32, %93
%95 = phi %32, 0:i32, %94
%96 = phi %29, 0:i32, %95
%97 = phi %25, %93, %96
%98 = phi %45, %97, %89
%99 = phi %42, %98, %97
%100 = phi %22, %97, %99
%101 = phi %20, %91, %100
%102 = phi %58, %90, %101
%103 = phi %55, %101, %102
%104 = phi %52, %101, %103
%105 = phi %19, %101, %104
%106:i32 = var
%107:i32 = var
%108:i32 = var
%109 = phi %26, %108, 0:i32
%110 = phi %35, 0:i32, %109
%111 = phi %32, 0:i32, %110
%112 = phi %29, 0:i32, %111
%113 = phi %25, %109, %112
%114 = phi %20, %107, %113
%115 = phi %66, %114, %113
%116 = phi %12, %89, %90, %105, %105, %106, %115
%117 = block 2
%118:i32 = var
blockpc %117 0 %118 1
%119:i32 = var
blockpc %117 1 %119 1
%120:i32 = var
%121:i32 = var
%122 = phi %26, %121, 0:i32
%123 = phi %35, 0:i32, %122
%124 = phi %32, 0:i32, %123
%125 = phi %29, 0:i32, %124
%126 = phi %25, %122, %125
%127:i32 = var
%128 = phi %20, %127, %126
%129 = block 3
%130:i32 = var
%131:i32 = var
%132 = phi %26, %131, 0:i32
%133 = phi %35, 0:i32, %132
%134 = phi %32, 0:i32, %133
%135 = phi %29, 0:i32, %134
%136 = phi %25, %132, %135
%137 = phi %45, %89, %136
%138 = phi %42, %137, 0:i32
%139 = phi %22, %136, %138
%140 = phi %20, %130, %139
%141 = phi %58, %140, 0:i32
%142 = phi %55, 0:i32, %141
%143 = phi %52, %140, %142
%144 = phi %19, 0:i32, %143
%145 = phi %129, 0:i32, 0:i32, %144
%146 = phi %66, %145, 0:i32
%147 = phi %12, %126, %128, %128, %128, %128, %146
%148 = phi %117, %120, %147
%149 = phi %82, %116, %148
%150 = phi %79, %116, %149
%151 = phi %11, %116, %150
%152 = add %88, %151
%153 = block 2
%154:i32 = var
blockpc %153 0 %154 1
%155:i32 = var
blockpc %153 1 %155 1
%156:i32 = var
%157 = phi %153, 0:i32, %156
%158 = add %152, %157
%159 = eq %10, %158
%160:i32 = zext %159
%161 = eq %160, 0:i32
%162:i32 = var
%163:i32 = var
%164:i32 = var
%165:i32 = var
pc %7 1
pc %9 1
pc %161 1
pc %162 1
pc %163 1
pc %164 1
pc %165 1
infer %3


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 16:i32
%7 = block 2
%8 = block 6
%9 = phi %8, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%10 = eq %9, 143:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13:i32 = var
%14:i32 = var
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, 0:i32
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = phi %31, 0:i32, %24
%35 = phi %28, 0:i32, %34
%36 = phi %25, 0:i32, %35
%37 = phi %21, %24, %36
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = phi %41, %37, %13
%45 = phi %38, %44, %37
%46 = phi %18, %37, %45
%47 = phi %16, %17, %46
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57:i32 = var
%58 = phi %54, %57, %47
%59 = phi %51, %47, %58
%60 = phi %48, %47, %59
%61 = phi %15, %47, %60
%62 = block 2
%63:i32 = var
blockpc %62 0 %63 1
%64:i32 = var
blockpc %62 1 %64 1
%65:i32 = var
%66:i32 = var
%67 = phi %22, %66, 0:i32
%68 = phi %31, 0:i32, %67
%69 = phi %28, 0:i32, %68
%70 = phi %25, 0:i32, %69
%71 = phi %21, %67, %70
%72 = phi %16, %65, %71
%73 = phi %62, %72, %71
%74 = phi %8, %13, %14, %61, %61, %61, %73
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78 = block 2
%79:i32 = var
blockpc %78 0 %79 1
%80:i32 = var
blockpc %78 1 %80 1
%81:i32 = var
%82 = phi %78, %74, %81
%83 = phi %75, %74, %82
%84 = phi %7, %74, %83
%85:i32 = var
%86:i32 = var
%87:i32 = var
%88:i32 = var
%89 = phi %22, %88, 0:i32
%90 = phi %31, 0:i32, %89
%91 = phi %28, 0:i32, %90
%92 = phi %25, 0:i32, %91
%93 = phi %21, %89, %92
%94 = phi %41, %93, %85
%95 = phi %38, %94, %93
%96 = phi %18, %93, %95
%97 = phi %16, %87, %96
%98 = phi %54, %86, %97
%99 = phi %51, %97, %98
%100 = phi %48, %97, %99
%101 = phi %15, %97, %100
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105 = phi %22, %104, 0:i32
%106 = phi %31, 0:i32, %105
%107 = phi %28, 0:i32, %106
%108 = phi %25, 0:i32, %107
%109 = phi %21, %105, %108
%110 = phi %16, %103, %109
%111 = phi %62, %110, %109
%112 = phi %8, %85, %86, %101, %101, %102, %111
%113 = block 2
%114:i32 = var
blockpc %113 0 %114 1
%115:i32 = var
blockpc %113 1 %115 1
%116:i32 = var
%117:i32 = var
%118 = phi %22, %117, 0:i32
%119 = phi %31, 0:i32, %118
%120 = phi %28, 0:i32, %119
%121 = phi %25, 0:i32, %120
%122 = phi %21, %118, %121
%123:i32 = var
%124 = phi %16, %123, %122
%125 = block 3
%126:i32 = var
%127:i32 = var
%128 = phi %22, %127, 0:i32
%129 = phi %31, 0:i32, %128
%130 = phi %28, 0:i32, %129
%131 = phi %25, 0:i32, %130
%132 = phi %21, %128, %131
%133 = phi %41, %85, %132
%134 = phi %38, %133, 0:i32
%135 = phi %18, %132, %134
%136 = phi %16, %126, %135
%137 = phi %54, %136, 0:i32
%138 = phi %51, 0:i32, %137
%139 = phi %48, %136, %138
%140 = phi %15, 0:i32, %139
%141 = phi %125, 0:i32, 0:i32, %140
%142 = phi %62, %141, 0:i32
%143 = phi %8, %122, %124, %124, %124, %124, %142
%144 = phi %113, %116, %143
%145 = phi %78, %112, %144
%146 = phi %75, %112, %145
%147 = phi %7, %112, %146
%148 = add %84, %147
%149 = block 2
%150:i32 = var
blockpc %149 0 %150 1
%151:i32 = var
blockpc %149 1 %151 1
%152:i32 = var
%153 = phi %149, 0:i32, %152
%154 = add %148, %153
%155 = eq %3, %154
blockpc %1 0 %155 1
%156:i32 = var
blockpc %1 1 %156 1
%157:i32 = var
%158:i32 = var
%159:i32 = var
%160:i32 = var
%161:i32 = var
%162:i32 = var
%163:i32 = var
%164:i32 = var
pc %157 1
pc %158 1
pc %159 1
pc %160 1
pc %161 1
pc %162 1
pc %163 1
pc %164 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 24:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = ult %5, 256:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9 = and %5, 3:i32
%10 = eq %9, 1:i32
%11:i32 = var
%12 = block 2
%13 = block 6
%14 = phi %13, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%15 = eq %14, 143:i32
blockpc %12 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %12 1 %17 1
%18:i32 = var
%19:i32 = var
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, 0:i32
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = phi %36, 0:i32, %29
%40 = phi %33, 0:i32, %39
%41 = phi %30, 0:i32, %40
%42 = phi %26, %29, %41
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = block 2
%47:i32 = var
blockpc %46 0 %47 1
%48:i32 = var
blockpc %46 1 %48 1
%49 = phi %46, %42, %18
%50 = phi %43, %49, %42
%51 = phi %23, %42, %50
%52 = phi %21, %22, %51
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62:i32 = var
%63 = phi %59, %62, %52
%64 = phi %56, %52, %63
%65 = phi %53, %52, %64
%66 = phi %20, %52, %65
%67 = block 2
%68:i32 = var
blockpc %67 0 %68 1
%69:i32 = var
blockpc %67 1 %69 1
%70:i32 = var
%71:i32 = var
%72 = phi %27, %71, 0:i32
%73 = phi %36, 0:i32, %72
%74 = phi %33, 0:i32, %73
%75 = phi %30, 0:i32, %74
%76 = phi %26, %72, %75
%77 = phi %21, %70, %76
%78 = phi %67, %77, %76
%79 = phi %13, %18, %19, %66, %66, %66, %78
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83 = block 2
%84:i32 = var
blockpc %83 0 %84 1
%85:i32 = var
blockpc %83 1 %85 1
%86:i32 = var
%87 = phi %83, %79, %86
%88 = phi %80, %79, %87
%89 = phi %12, %79, %88
%90:i32 = var
%91:i32 = var
%92:i32 = var
%93:i32 = var
%94 = phi %27, %93, 0:i32
%95 = phi %36, 0:i32, %94
%96 = phi %33, 0:i32, %95
%97 = phi %30, 0:i32, %96
%98 = phi %26, %94, %97
%99 = phi %46, %98, %90
%100 = phi %43, %99, %98
%101 = phi %23, %98, %100
%102 = phi %21, %92, %101
%103 = phi %59, %91, %102
%104 = phi %56, %102, %103
%105 = phi %53, %102, %104
%106 = phi %20, %102, %105
%107:i32 = var
%108:i32 = var
%109:i32 = var
%110 = phi %27, %109, 0:i32
%111 = phi %36, 0:i32, %110
%112 = phi %33, 0:i32, %111
%113 = phi %30, 0:i32, %112
%114 = phi %26, %110, %113
%115 = phi %21, %108, %114
%116 = phi %67, %115, %114
%117 = phi %13, %90, %91, %106, %106, %107, %116
%118 = block 2
%119:i32 = var
blockpc %118 0 %119 1
%120:i32 = var
blockpc %118 1 %120 1
%121:i32 = var
%122:i32 = var
%123 = phi %27, %122, 0:i32
%124 = phi %36, 0:i32, %123
%125 = phi %33, 0:i32, %124
%126 = phi %30, 0:i32, %125
%127 = phi %26, %123, %126
%128:i32 = var
%129 = phi %21, %128, %127
%130 = block 3
%131:i32 = var
%132:i32 = var
%133 = phi %27, %132, 0:i32
%134 = phi %36, 0:i32, %133
%135 = phi %33, 0:i32, %134
%136 = phi %30, 0:i32, %135
%137 = phi %26, %133, %136
%138 = phi %46, %90, %137
%139 = phi %43, %138, 0:i32
%140 = phi %23, %137, %139
%141 = phi %21, %131, %140
%142 = phi %59, %141, 0:i32
%143 = phi %56, 0:i32, %142
%144 = phi %53, %141, %143
%145 = phi %20, 0:i32, %144
%146 = phi %130, 0:i32, 0:i32, %145
%147 = phi %67, %146, 0:i32
%148 = phi %13, %127, %129, %129, %129, %129, %147
%149 = phi %118, %121, %148
%150 = phi %83, %117, %149
%151 = phi %80, %117, %150
%152 = phi %12, %117, %151
%153 = add %89, %152
%154 = block 2
%155:i32 = var
blockpc %154 0 %155 1
%156:i32 = var
blockpc %154 1 %156 1
%157:i32 = var
%158 = phi %154, 0:i32, %157
%159 = add %153, %158
%160 = eq %11, %159
%161:i32 = zext %160
%162 = eq %161, 0:i32
%163:i32 = var
%164:i32 = var
%165:i32 = var
%166:i32 = var
pc %4 1
pc %8 1
pc %10 1
pc %162 1
pc %163 1
pc %164 1
pc %165 1
pc %166 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116 = add %115, 16:i32 (hasExternalUses)
%117 = add %116, 4:i32
%118:i32 = var
blockpc %0 0 %118 1
%119:i32 = var
blockpc %0 1 %119 1
%120:i32 = var
blockpc %7 0 %120 1
%121:i32 = var
blockpc %7 1 %121 1
%122:i32 = var
blockpc %12 0 %122 1
%123:i32 = var
blockpc %12 1 %123 1
%124:i32 = var
blockpc %13 0 %124 1
%125:i32 = var
blockpc %13 1 %125 1
%126:i32 = var
blockpc %14 0 %126 1
%127:i32 = var
blockpc %14 1 %127 1
%128:i32 = var
blockpc %19 0 %128 1
%129:i32 = var
blockpc %19 1 %129 1
%130:i32 = var
blockpc %20 0 %130 1
%131:i32 = var
blockpc %20 1 %131 1
%132:i32 = var
blockpc %25 0 %132 1
%133:i32 = var
blockpc %25 1 %133 1
%134:i32 = var
blockpc %26 0 %134 1
%135:i32 = var
blockpc %26 1 %135 1
%136:i32 = var
blockpc %27 0 %136 1
%137:i32 = var
blockpc %27 1 %137 1
%138:i32 = var
blockpc %33 0 %138 1
%139:i32 = var
blockpc %33 1 %139 1
%140:i32 = var
blockpc %44 0 %140 1
%141:i32 = var
blockpc %44 1 %141 1
%142:i32 = var
blockpc %45 0 %142 1
%143:i32 = var
blockpc %45 1 %143 1
%144:i32 = var
blockpc %78 0 %144 1
%145:i32 = var
blockpc %78 1 %145 1
%146:i32 = var
blockpc %112 0 %146 1
%147:i32 = var
blockpc %112 1 %147 1
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
%154:i32 = var
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
pc %154 1
infer %117


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = ult %2, 256:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = and %2, 3:i32
%7 = eq %6, 1:i32
%8:i32 = var
%9 = block 2
%10 = block 6
%11 = phi %10, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%12 = eq %11, 143:i32
blockpc %9 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %9 1 %14 1
%15:i32 = var
%16:i32 = var
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, 0:i32
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 0:i32, %26
%37 = phi %30, 0:i32, %36
%38 = phi %27, 0:i32, %37
%39 = phi %23, %26, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %39, %15
%47 = phi %40, %46, %39
%48 = phi %20, %39, %47
%49 = phi %18, %19, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %59, %49
%61 = phi %53, %49, %60
%62 = phi %50, %49, %61
%63 = phi %17, %49, %62
%64 = block 2
%65:i32 = var
blockpc %64 0 %65 1
%66:i32 = var
blockpc %64 1 %66 1
%67:i32 = var
%68:i32 = var
%69 = phi %24, %68, 0:i32
%70 = phi %33, 0:i32, %69
%71 = phi %30, 0:i32, %70
%72 = phi %27, 0:i32, %71
%73 = phi %23, %69, %72
%74 = phi %18, %67, %73
%75 = phi %64, %74, %73
%76 = phi %10, %15, %16, %63, %63, %63, %75
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84 = phi %80, %76, %83
%85 = phi %77, %76, %84
%86 = phi %9, %76, %85
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91 = phi %24, %90, 0:i32
%92 = phi %33, 0:i32, %91
%93 = phi %30, 0:i32, %92
%94 = phi %27, 0:i32, %93
%95 = phi %23, %91, %94
%96 = phi %43, %95, %87
%97 = phi %40, %96, %95
%98 = phi %20, %95, %97
%99 = phi %18, %89, %98
%100 = phi %56, %88, %99
%101 = phi %53, %99, %100
%102 = phi %50, %99, %101
%103 = phi %17, %99, %102
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107 = phi %24, %106, 0:i32
%108 = phi %33, 0:i32, %107
%109 = phi %30, 0:i32, %108
%110 = phi %27, 0:i32, %109
%111 = phi %23, %107, %110
%112 = phi %18, %105, %111
%113 = phi %64, %112, %111
%114 = phi %10, %87, %88, %103, %103, %104, %113
%115 = block 2
%116:i32 = var
blockpc %115 0 %116 1
%117:i32 = var
blockpc %115 1 %117 1
%118:i32 = var
%119:i32 = var
%120 = phi %24, %119, 0:i32
%121 = phi %33, 0:i32, %120
%122 = phi %30, 0:i32, %121
%123 = phi %27, 0:i32, %122
%124 = phi %23, %120, %123
%125:i32 = var
%126 = phi %18, %125, %124
%127 = block 3
%128:i32 = var
%129:i32 = var
%130 = phi %24, %129, 0:i32
%131 = phi %33, 0:i32, %130
%132 = phi %30, 0:i32, %131
%133 = phi %27, 0:i32, %132
%134 = phi %23, %130, %133
%135 = phi %43, %87, %134
%136 = phi %40, %135, 0:i32
%137 = phi %20, %134, %136
%138 = phi %18, %128, %137
%139 = phi %56, %138, 0:i32
%140 = phi %53, 0:i32, %139
%141 = phi %50, %138, %140
%142 = phi %17, 0:i32, %141
%143 = phi %127, 0:i32, 0:i32, %142
%144 = phi %64, %143, 0:i32
%145 = phi %10, %124, %126, %126, %126, %126, %144
%146 = phi %115, %118, %145
%147 = phi %80, %114, %146
%148 = phi %77, %114, %147
%149 = phi %9, %114, %148
%150 = add %86, %149
%151 = block 2
%152:i32 = var
blockpc %151 0 %152 1
%153:i32 = var
blockpc %151 1 %153 1
%154:i32 = var
%155 = phi %151, 0:i32, %154
%156 = add %150, %155
%157 = eq %8, %156
%158:i32 = zext %157
%159 = eq %158, 0:i32
%160:i32 = var
%161:i32 = var
%162:i32 = var
%163:i32 = var
pc %5 1
pc %7 1
pc %159 1
pc %160 1
pc %161 1
pc %162 1
pc %163 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 20:i32
%7 = block 2
%8 = block 6
%9 = phi %8, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%10 = eq %9, 143:i32
blockpc %7 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %7 1 %12 1
%13:i32 = var
%14:i32 = var
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, 0:i32
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = phi %31, 0:i32, %24
%35 = phi %28, 0:i32, %34
%36 = phi %25, 0:i32, %35
%37 = phi %21, %24, %36
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = phi %41, %37, %13
%45 = phi %38, %44, %37
%46 = phi %18, %37, %45
%47 = phi %16, %17, %46
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57:i32 = var
%58 = phi %54, %57, %47
%59 = phi %51, %47, %58
%60 = phi %48, %47, %59
%61 = phi %15, %47, %60
%62 = block 2
%63:i32 = var
blockpc %62 0 %63 1
%64:i32 = var
blockpc %62 1 %64 1
%65:i32 = var
%66:i32 = var
%67 = phi %22, %66, 0:i32
%68 = phi %31, 0:i32, %67
%69 = phi %28, 0:i32, %68
%70 = phi %25, 0:i32, %69
%71 = phi %21, %67, %70
%72 = phi %16, %65, %71
%73 = phi %62, %72, %71
%74 = phi %8, %13, %14, %61, %61, %61, %73
%75 = block 2
%76:i32 = var
blockpc %75 0 %76 1
%77:i32 = var
blockpc %75 1 %77 1
%78 = block 2
%79:i32 = var
blockpc %78 0 %79 1
%80:i32 = var
blockpc %78 1 %80 1
%81:i32 = var
%82 = phi %78, %74, %81
%83 = phi %75, %74, %82
%84 = phi %7, %74, %83
%85:i32 = var
%86:i32 = var
%87:i32 = var
%88:i32 = var
%89 = phi %22, %88, 0:i32
%90 = phi %31, 0:i32, %89
%91 = phi %28, 0:i32, %90
%92 = phi %25, 0:i32, %91
%93 = phi %21, %89, %92
%94 = phi %41, %93, %85
%95 = phi %38, %94, %93
%96 = phi %18, %93, %95
%97 = phi %16, %87, %96
%98 = phi %54, %86, %97
%99 = phi %51, %97, %98
%100 = phi %48, %97, %99
%101 = phi %15, %97, %100
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105 = phi %22, %104, 0:i32
%106 = phi %31, 0:i32, %105
%107 = phi %28, 0:i32, %106
%108 = phi %25, 0:i32, %107
%109 = phi %21, %105, %108
%110 = phi %16, %103, %109
%111 = phi %62, %110, %109
%112 = phi %8, %85, %86, %101, %101, %102, %111
%113 = block 2
%114:i32 = var
blockpc %113 0 %114 1
%115:i32 = var
blockpc %113 1 %115 1
%116:i32 = var
%117:i32 = var
%118 = phi %22, %117, 0:i32
%119 = phi %31, 0:i32, %118
%120 = phi %28, 0:i32, %119
%121 = phi %25, 0:i32, %120
%122 = phi %21, %118, %121
%123:i32 = var
%124 = phi %16, %123, %122
%125 = block 3
%126:i32 = var
%127:i32 = var
%128 = phi %22, %127, 0:i32
%129 = phi %31, 0:i32, %128
%130 = phi %28, 0:i32, %129
%131 = phi %25, 0:i32, %130
%132 = phi %21, %128, %131
%133 = phi %41, %85, %132
%134 = phi %38, %133, 0:i32
%135 = phi %18, %132, %134
%136 = phi %16, %126, %135
%137 = phi %54, %136, 0:i32
%138 = phi %51, 0:i32, %137
%139 = phi %48, %136, %138
%140 = phi %15, 0:i32, %139
%141 = phi %125, 0:i32, 0:i32, %140
%142 = phi %62, %141, 0:i32
%143 = phi %8, %122, %124, %124, %124, %124, %142
%144 = phi %113, %116, %143
%145 = phi %78, %112, %144
%146 = phi %75, %112, %145
%147 = phi %7, %112, %146
%148 = add %84, %147
%149 = block 2
%150:i32 = var
blockpc %149 0 %150 1
%151:i32 = var
blockpc %149 1 %151 1
%152:i32 = var
%153 = phi %149, 0:i32, %152
%154 = add %148, %153
%155 = eq %3, %154
blockpc %1 0 %155 1
%156:i32 = var
blockpc %1 1 %156 1
%157:i32 = var
%158:i32 = var
%159:i32 = var
%160:i32 = var
%161:i32 = var
%162:i32 = var
%163:i32 = var
pc %157 1
pc %158 1
pc %159 1
pc %160 1
pc %161 1
pc %162 1
pc %163 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 24:i32
%2:i32 = var
%3 = ult %2, 256:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = and %2, 3:i32
%7 = eq %6, 1:i32
%8:i32 = var
%9 = block 2
%10 = block 6
%11 = phi %10, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%12 = eq %11, 143:i32
blockpc %9 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %9 1 %14 1
%15:i32 = var
%16:i32 = var
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, 0:i32
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 0:i32, %26
%37 = phi %30, 0:i32, %36
%38 = phi %27, 0:i32, %37
%39 = phi %23, %26, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %39, %15
%47 = phi %40, %46, %39
%48 = phi %20, %39, %47
%49 = phi %18, %19, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %59, %49
%61 = phi %53, %49, %60
%62 = phi %50, %49, %61
%63 = phi %17, %49, %62
%64 = block 2
%65:i32 = var
blockpc %64 0 %65 1
%66:i32 = var
blockpc %64 1 %66 1
%67:i32 = var
%68:i32 = var
%69 = phi %24, %68, 0:i32
%70 = phi %33, 0:i32, %69
%71 = phi %30, 0:i32, %70
%72 = phi %27, 0:i32, %71
%73 = phi %23, %69, %72
%74 = phi %18, %67, %73
%75 = phi %64, %74, %73
%76 = phi %10, %15, %16, %63, %63, %63, %75
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84 = phi %80, %76, %83
%85 = phi %77, %76, %84
%86 = phi %9, %76, %85
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91 = phi %24, %90, 0:i32
%92 = phi %33, 0:i32, %91
%93 = phi %30, 0:i32, %92
%94 = phi %27, 0:i32, %93
%95 = phi %23, %91, %94
%96 = phi %43, %95, %87
%97 = phi %40, %96, %95
%98 = phi %20, %95, %97
%99 = phi %18, %89, %98
%100 = phi %56, %88, %99
%101 = phi %53, %99, %100
%102 = phi %50, %99, %101
%103 = phi %17, %99, %102
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107 = phi %24, %106, 0:i32
%108 = phi %33, 0:i32, %107
%109 = phi %30, 0:i32, %108
%110 = phi %27, 0:i32, %109
%111 = phi %23, %107, %110
%112 = phi %18, %105, %111
%113 = phi %64, %112, %111
%114 = phi %10, %87, %88, %103, %103, %104, %113
%115 = block 2
%116:i32 = var
blockpc %115 0 %116 1
%117:i32 = var
blockpc %115 1 %117 1
%118:i32 = var
%119:i32 = var
%120 = phi %24, %119, 0:i32
%121 = phi %33, 0:i32, %120
%122 = phi %30, 0:i32, %121
%123 = phi %27, 0:i32, %122
%124 = phi %23, %120, %123
%125:i32 = var
%126 = phi %18, %125, %124
%127 = block 3
%128:i32 = var
%129:i32 = var
%130 = phi %24, %129, 0:i32
%131 = phi %33, 0:i32, %130
%132 = phi %30, 0:i32, %131
%133 = phi %27, 0:i32, %132
%134 = phi %23, %130, %133
%135 = phi %43, %87, %134
%136 = phi %40, %135, 0:i32
%137 = phi %20, %134, %136
%138 = phi %18, %128, %137
%139 = phi %56, %138, 0:i32
%140 = phi %53, 0:i32, %139
%141 = phi %50, %138, %140
%142 = phi %17, 0:i32, %141
%143 = phi %127, 0:i32, 0:i32, %142
%144 = phi %64, %143, 0:i32
%145 = phi %10, %124, %126, %126, %126, %126, %144
%146 = phi %115, %118, %145
%147 = phi %80, %114, %146
%148 = phi %77, %114, %147
%149 = phi %9, %114, %148
%150 = add %86, %149
%151 = block 2
%152:i32 = var
blockpc %151 0 %152 1
%153:i32 = var
blockpc %151 1 %153 1
%154:i32 = var
%155 = phi %151, 0:i32, %154
%156 = add %150, %155
%157 = eq %8, %156
%158:i32 = zext %157
%159 = eq %158, 0:i32
%160:i32 = var
%161:i32 = var
%162:i32 = var
%163:i32 = var
pc %5 1
pc %7 1
pc %159 1
pc %160 1
pc %161 1
pc %162 1
pc %163 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54 = phi %9, %53, 0:i32
%55 = phi %14, 0:i32, %54
%56 = phi %13, 0:i32, %55
%57 = phi %12, 0:i32, %56
%58 = phi %8, %54, %57
%59 = phi %20, %58, %50
%60 = phi %19, %59, %58
%61 = phi %7, %58, %60
%62 = phi %5, %52, %61
%63 = phi %27, %51, %62
%64 = phi %26, %62, %63
%65 = phi %25, %62, %64
%66 = phi %4, %62, %65
%67:i32 = var
%68:i32 = var
%69:i32 = var
%70 = phi %9, %69, 0:i32
%71 = phi %14, 0:i32, %70
%72 = phi %13, 0:i32, %71
%73 = phi %12, 0:i32, %72
%74 = phi %8, %70, %73
%75 = phi %5, %68, %74
%76 = phi %33, %75, %74
%77 = phi %1, %50, %51, %66, %66, %67, %76
%78 = block 2
%79:i32 = var
%80:i32 = var
%81 = phi %9, %80, 0:i32
%82 = phi %14, 0:i32, %81
%83 = phi %13, 0:i32, %82
%84 = phi %12, 0:i32, %83
%85 = phi %8, %81, %84
%86:i32 = var
%87 = phi %5, %86, %85
%88 = block 3
%89:i32 = var
%90:i32 = var
%91 = phi %9, %90, 0:i32
%92 = phi %14, 0:i32, %91
%93 = phi %13, 0:i32, %92
%94 = phi %12, 0:i32, %93
%95 = phi %8, %91, %94
%96 = phi %20, %50, %95
%97 = phi %19, %96, 0:i32
%98 = phi %7, %95, %97
%99 = phi %5, %89, %98
%100 = phi %27, %99, 0:i32
%101 = phi %26, 0:i32, %100
%102 = phi %25, %99, %101
%103 = phi %4, 0:i32, %102
%104 = phi %88, 0:i32, 0:i32, %103
%105 = phi %33, %104, 0:i32
%106 = phi %1, %85, %87, %87, %87, %87, %105
%107 = phi %78, %79, %106
%108 = phi %45, %77, %107
%109 = phi %44, %77, %108
%110 = phi %0, %77, %109
%111 = add %49, %110 (hasExternalUses)
%112 = block 2
%113:i32 = var
%114 = phi %112, 0:i32, %113
%115 = add %111, %114 (hasExternalUses)
%116:i32 = var
%117 = add %115, %116
%118:i32 = var
blockpc %0 0 %118 1
%119:i32 = var
blockpc %0 1 %119 1
%120:i32 = var
blockpc %7 0 %120 1
%121:i32 = var
blockpc %7 1 %121 1
%122:i32 = var
blockpc %12 0 %122 1
%123:i32 = var
blockpc %12 1 %123 1
%124:i32 = var
blockpc %13 0 %124 1
%125:i32 = var
blockpc %13 1 %125 1
%126:i32 = var
blockpc %14 0 %126 1
%127:i32 = var
blockpc %14 1 %127 1
%128:i32 = var
blockpc %19 0 %128 1
%129:i32 = var
blockpc %19 1 %129 1
%130:i32 = var
blockpc %20 0 %130 1
%131:i32 = var
blockpc %20 1 %131 1
%132:i32 = var
blockpc %25 0 %132 1
%133:i32 = var
blockpc %25 1 %133 1
%134:i32 = var
blockpc %26 0 %134 1
%135:i32 = var
blockpc %26 1 %135 1
%136:i32 = var
blockpc %27 0 %136 1
%137:i32 = var
blockpc %27 1 %137 1
%138:i32 = var
blockpc %33 0 %138 1
%139:i32 = var
blockpc %33 1 %139 1
%140:i32 = var
blockpc %44 0 %140 1
%141:i32 = var
blockpc %44 1 %141 1
%142:i32 = var
blockpc %45 0 %142 1
%143:i32 = var
blockpc %45 1 %143 1
%144:i32 = var
blockpc %78 0 %144 1
%145:i32 = var
blockpc %78 1 %145 1
%146:i32 = var
blockpc %112 0 %146 1
%147:i32 = var
blockpc %112 1 %147 1
%148:i32 = var
%149:i32 = var
%150:i32 = var
%151:i32 = var
%152:i32 = var
%153:i32 = var
pc %148 1
pc %149 1
pc %150 1
pc %151 1
pc %152 1
pc %153 1
infer %117


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32 (hasExternalUses)
%2 = block 2
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, %12, 0:i32
%14 = block 2
%15 = block 2
%16 = block 2
%17 = phi %16, 0:i32, %13
%18 = phi %15, 0:i32, %17
%19 = phi %14, 0:i32, %18
%20 = phi %10, %13, %19
%21 = block 2
%22 = block 2
%23 = phi %22, %20, %4
%24 = phi %21, %23, %20
%25 = phi %9, %20, %24
%26 = phi %7, %8, %25
%27 = block 2
%28 = block 2
%29 = block 2
%30:i32 = var
%31 = phi %29, %30, %26
%32 = phi %28, %26, %31
%33 = phi %27, %26, %32
%34 = phi %6, %26, %33
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %11, %37, 0:i32
%39 = phi %16, 0:i32, %38
%40 = phi %15, 0:i32, %39
%41 = phi %14, 0:i32, %40
%42 = phi %10, %38, %41
%43 = phi %7, %36, %42
%44 = phi %35, %43, %42
%45 = phi %3, %4, %5, %34, %34, %34, %44
%46 = block 2
%47 = block 2
%48:i32 = var
%49 = phi %47, %45, %48
%50 = phi %46, %45, %49
%51 = phi %2, %45, %50
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56 = phi %11, %55, 0:i32
%57 = phi %16, 0:i32, %56
%58 = phi %15, 0:i32, %57
%59 = phi %14, 0:i32, %58
%60 = phi %10, %56, %59
%61 = phi %22, %60, %52
%62 = phi %21, %61, %60
%63 = phi %9, %60, %62
%64 = phi %7, %54, %63
%65 = phi %29, %53, %64
%66 = phi %28, %64, %65
%67 = phi %27, %64, %66
%68 = phi %6, %64, %67
%69:i32 = var
%70:i32 = var
%71:i32 = var
%72 = phi %11, %71, 0:i32
%73 = phi %16, 0:i32, %72
%74 = phi %15, 0:i32, %73
%75 = phi %14, 0:i32, %74
%76 = phi %10, %72, %75
%77 = phi %7, %70, %76
%78 = phi %35, %77, %76
%79 = phi %3, %52, %53, %68, %68, %69, %78
%80 = block 2
%81:i32 = var
%82:i32 = var
%83 = phi %11, %82, 0:i32
%84 = phi %16, 0:i32, %83
%85 = phi %15, 0:i32, %84
%86 = phi %14, 0:i32, %85
%87 = phi %10, %83, %86
%88:i32 = var
%89 = phi %7, %88, %87
%90 = block 3
%91:i32 = var
%92:i32 = var
%93 = phi %11, %92, 0:i32
%94 = phi %16, 0:i32, %93
%95 = phi %15, 0:i32, %94
%96 = phi %14, 0:i32, %95
%97 = phi %10, %93, %96
%98 = phi %22, %52, %97
%99 = phi %21, %98, 0:i32
%100 = phi %9, %97, %99
%101 = phi %7, %91, %100
%102 = phi %29, %101, 0:i32
%103 = phi %28, 0:i32, %102
%104 = phi %27, %101, %103
%105 = phi %6, 0:i32, %104
%106 = phi %90, 0:i32, 0:i32, %105
%107 = phi %35, %106, 0:i32
%108 = phi %3, %87, %89, %89, %89, %89, %107
%109 = phi %80, %81, %108
%110 = phi %47, %79, %109
%111 = phi %46, %79, %110
%112 = phi %2, %79, %111
%113 = add %51, %112 (hasExternalUses)
%114 = block 2
%115:i32 = var
%116 = phi %114, 0:i32, %115
%117 = add %113, %116 (hasExternalUses)
%118:i32 = var
%119 = sub %117, %118
%120:i32 = var
%121:i32 = var
%122 = phi %11, %120, %121
%123 = block 2
%124:i32 = var
%125 = phi %123, 16:i32, %124
%126 = phi %16, %121, %122
%127 = phi %15, -1:i32, %126
%128 = phi %14, %125, %127
%129 = phi %10, %122, %128
%130:i32 = var
%131 = phi %7, %130, %129
%132 = phi %35, %131, %129
%133 = phi %3, %129, %131, %131, %131, %131, %132
%134 = sub %119, %133 (hasExternalUses)
%135 = add %1, %134
%136:i32 = var
blockpc %2 0 %136 1
%137:i32 = var
blockpc %2 1 %137 1
%138:i32 = var
blockpc %9 0 %138 1
%139:i32 = var
blockpc %9 1 %139 1
%140:i32 = var
blockpc %14 0 %140 1
%141:i32 = var
blockpc %14 1 %141 1
%142:i32 = var
blockpc %15 0 %142 1
%143:i32 = var
blockpc %15 1 %143 1
%144:i32 = var
blockpc %16 0 %144 1
%145:i32 = var
blockpc %16 1 %145 1
%146:i32 = var
blockpc %21 0 %146 1
%147:i32 = var
blockpc %21 1 %147 1
%148:i32 = var
blockpc %22 0 %148 1
%149:i32 = var
blockpc %22 1 %149 1
%150:i32 = var
blockpc %27 0 %150 1
%151:i32 = var
blockpc %27 1 %151 1
%152:i32 = var
blockpc %28 0 %152 1
%153:i32 = var
blockpc %28 1 %153 1
%154:i32 = var
blockpc %29 0 %154 1
%155:i32 = var
blockpc %29 1 %155 1
%156:i32 = var
blockpc %35 0 %156 1
%157:i32 = var
blockpc %35 1 %157 1
%158:i32 = var
blockpc %46 0 %158 1
%159:i32 = var
blockpc %46 1 %159 1
%160:i32 = var
blockpc %47 0 %160 1
%161:i32 = var
blockpc %47 1 %161 1
%162:i32 = var
blockpc %80 0 %162 1
%163:i32 = var
blockpc %80 1 %163 1
%164:i32 = var
blockpc %114 0 %164 1
%165:i32 = var
blockpc %114 1 %165 1
%166:i32 = var
blockpc %123 0 %166 1
%167:i32 = var
blockpc %123 1 %167 1
%168:i32 = var
%169:i32 = var
%170:i32 = var
%171:i32 = var
%172:i32 = var
%173:i32 = var
pc %168 1
pc %169 1
pc %170 1
pc %171 1
pc %172 1
pc %173 1
infer %135


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55 = phi %10, %54, 0:i32
%56 = phi %15, 0:i32, %55
%57 = phi %14, 0:i32, %56
%58 = phi %13, 0:i32, %57
%59 = phi %9, %55, %58
%60 = phi %21, %59, %51
%61 = phi %20, %60, %59
%62 = phi %8, %59, %61
%63 = phi %6, %53, %62
%64 = phi %28, %52, %63
%65 = phi %27, %63, %64
%66 = phi %26, %63, %65
%67 = phi %5, %63, %66
%68:i32 = var
%69:i32 = var
%70:i32 = var
%71 = phi %10, %70, 0:i32
%72 = phi %15, 0:i32, %71
%73 = phi %14, 0:i32, %72
%74 = phi %13, 0:i32, %73
%75 = phi %9, %71, %74
%76 = phi %6, %69, %75
%77 = phi %34, %76, %75
%78 = phi %2, %51, %52, %67, %67, %68, %77
%79 = block 2
%80:i32 = var
%81:i32 = var
%82 = phi %10, %81, 0:i32
%83 = phi %15, 0:i32, %82
%84 = phi %14, 0:i32, %83
%85 = phi %13, 0:i32, %84
%86 = phi %9, %82, %85
%87:i32 = var
%88 = phi %6, %87, %86
%89 = block 3
%90:i32 = var
%91:i32 = var
%92 = phi %10, %91, 0:i32
%93 = phi %15, 0:i32, %92
%94 = phi %14, 0:i32, %93
%95 = phi %13, 0:i32, %94
%96 = phi %9, %92, %95
%97 = phi %21, %51, %96
%98 = phi %20, %97, 0:i32
%99 = phi %8, %96, %98
%100 = phi %6, %90, %99
%101 = phi %28, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %26, %100, %102
%104 = phi %5, 0:i32, %103
%105 = phi %89, 0:i32, 0:i32, %104
%106 = phi %34, %105, 0:i32
%107 = phi %2, %86, %88, %88, %88, %88, %106
%108 = phi %79, %80, %107
%109 = phi %46, %78, %108
%110 = phi %45, %78, %109
%111 = phi %1, %78, %110
%112 = add %50, %111 (hasExternalUses)
%113 = block 2
%114:i32 = var
%115 = phi %113, 0:i32, %114
%116 = add %112, %115 (hasExternalUses)
%117:i32 = var
%118 = add %116, %117
%119 = phi %0, %118, %116
%120 = add %119, 4:i32
%121:i32 = var
blockpc %0 0 %121 1
%122:i32 = var
blockpc %0 1 %122 1
%123:i32 = var
blockpc %1 0 %123 1
%124:i32 = var
blockpc %1 1 %124 1
%125:i32 = var
blockpc %8 0 %125 1
%126:i32 = var
blockpc %8 1 %126 1
%127:i32 = var
blockpc %13 0 %127 1
%128:i32 = var
blockpc %13 1 %128 1
%129:i32 = var
blockpc %14 0 %129 1
%130:i32 = var
blockpc %14 1 %130 1
%131:i32 = var
blockpc %15 0 %131 1
%132:i32 = var
blockpc %15 1 %132 1
%133:i32 = var
blockpc %20 0 %133 1
%134:i32 = var
blockpc %20 1 %134 1
%135:i32 = var
blockpc %21 0 %135 1
%136:i32 = var
blockpc %21 1 %136 1
%137:i32 = var
blockpc %26 0 %137 1
%138:i32 = var
blockpc %26 1 %138 1
%139:i32 = var
blockpc %27 0 %139 1
%140:i32 = var
blockpc %27 1 %140 1
%141:i32 = var
blockpc %28 0 %141 1
%142:i32 = var
blockpc %28 1 %142 1
%143:i32 = var
blockpc %34 0 %143 1
%144:i32 = var
blockpc %34 1 %144 1
%145:i32 = var
blockpc %45 0 %145 1
%146:i32 = var
blockpc %45 1 %146 1
%147:i32 = var
blockpc %46 0 %147 1
%148:i32 = var
blockpc %46 1 %148 1
%149:i32 = var
blockpc %79 0 %149 1
%150:i32 = var
blockpc %79 1 %150 1
%151:i32 = var
blockpc %113 0 %151 1
%152:i32 = var
blockpc %113 1 %152 1
%153:i32 = var
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
infer %120


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -2:i32
%2:i32 = var
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85 = phi %18, %84, 0:i32
%86 = phi %27, 0:i32, %85
%87 = phi %24, 0:i32, %86
%88 = phi %21, 0:i32, %87
%89 = phi %17, %85, %88
%90 = phi %37, %89, %81
%91 = phi %34, %90, %89
%92 = phi %14, %89, %91
%93 = phi %12, %83, %92
%94 = phi %50, %82, %93
%95 = phi %47, %93, %94
%96 = phi %44, %93, %95
%97 = phi %11, %93, %96
%98:i32 = var
%99:i32 = var
%100:i32 = var
%101 = phi %18, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %24, 0:i32, %102
%104 = phi %21, 0:i32, %103
%105 = phi %17, %101, %104
%106 = phi %12, %99, %105
%107 = phi %58, %106, %105
%108 = phi %4, %81, %82, %97, %97, %98, %107
%109 = block 2
%110:i32 = var
blockpc %109 0 %110 1
%111:i32 = var
blockpc %109 1 %111 1
%112:i32 = var
%113:i32 = var
%114 = phi %18, %113, 0:i32
%115 = phi %27, 0:i32, %114
%116 = phi %24, 0:i32, %115
%117 = phi %21, 0:i32, %116
%118 = phi %17, %114, %117
%119:i32 = var
%120 = phi %12, %119, %118
%121 = block 3
%122:i32 = var
%123:i32 = var
%124 = phi %18, %123, 0:i32
%125 = phi %27, 0:i32, %124
%126 = phi %24, 0:i32, %125
%127 = phi %21, 0:i32, %126
%128 = phi %17, %124, %127
%129 = phi %37, %81, %128
%130 = phi %34, %129, 0:i32
%131 = phi %14, %128, %130
%132 = phi %12, %122, %131
%133 = phi %50, %132, 0:i32
%134 = phi %47, 0:i32, %133
%135 = phi %44, %132, %134
%136 = phi %11, 0:i32, %135
%137 = phi %121, 0:i32, 0:i32, %136
%138 = phi %58, %137, 0:i32
%139 = phi %4, %118, %120, %120, %120, %120, %138
%140 = phi %109, %112, %139
%141 = phi %74, %108, %140
%142 = phi %71, %108, %141
%143 = phi %3, %108, %142
%144 = add %80, %143
%145 = block 2
%146:i32 = var
blockpc %145 0 %146 1
%147:i32 = var
blockpc %145 1 %147 1
%148:i32 = var
%149 = phi %145, 0:i32, %148
%150 = add %144, %149
%151 = eq %2, %150
%152:i32 = zext %151
%153 = eq %152, 0:i32
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 4:i32
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %12 0 %74 1
%75:i32 = var
blockpc %12 1 %75 1
%76:i32 = var
blockpc %13 0 %76 1
%77:i32 = var
blockpc %13 1 %77 1
%78:i32 = var
blockpc %14 0 %78 1
%79:i32 = var
blockpc %14 1 %79 1
%80:i32 = var
blockpc %19 0 %80 1
%81:i32 = var
blockpc %19 1 %81 1
%82:i32 = var
blockpc %20 0 %82 1
%83:i32 = var
blockpc %20 1 %83 1
%84:i32 = var
blockpc %25 0 %84 1
%85:i32 = var
blockpc %25 1 %85 1
%86:i32 = var
blockpc %26 0 %86 1
%87:i32 = var
blockpc %26 1 %87 1
%88:i32 = var
blockpc %27 0 %88 1
%89:i32 = var
blockpc %27 1 %89 1
%90:i32 = var
blockpc %33 0 %90 1
%91:i32 = var
blockpc %33 1 %91 1
%92:i32 = var
blockpc %44 0 %92 1
%93:i32 = var
blockpc %44 1 %93 1
%94:i32 = var
blockpc %45 0 %94 1
%95:i32 = var
blockpc %45 1 %95 1
%96:i32 = var
blockpc %50 0 %96 1
%97:i32 = var
blockpc %50 1 %97 1
%98:i32 = var
blockpc %57 0 %98 1
%99:i32 = var
blockpc %57 1 %99 1
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
pc %100 1
pc %101 1
pc %102 1
pc %103 1
pc %104 1
infer %69


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = or %137, 1:i32
%139:i32 = var
blockpc %0 0 %139 1
%140:i32 = var
blockpc %0 1 %140 1
%141:i32 = var
blockpc %3 0 %141 1
%142:i32 = var
blockpc %3 1 %142 1
%143:i32 = var
blockpc %10 0 %143 1
%144:i32 = var
blockpc %10 1 %144 1
%145:i32 = var
blockpc %15 0 %145 1
%146:i32 = var
blockpc %15 1 %146 1
%147:i32 = var
blockpc %16 0 %147 1
%148:i32 = var
blockpc %16 1 %148 1
%149:i32 = var
blockpc %17 0 %149 1
%150:i32 = var
blockpc %17 1 %150 1
%151:i32 = var
blockpc %22 0 %151 1
%152:i32 = var
blockpc %22 1 %152 1
%153:i32 = var
blockpc %23 0 %153 1
%154:i32 = var
blockpc %23 1 %154 1
%155:i32 = var
blockpc %28 0 %155 1
%156:i32 = var
blockpc %28 1 %156 1
%157:i32 = var
blockpc %29 0 %157 1
%158:i32 = var
blockpc %29 1 %158 1
%159:i32 = var
blockpc %30 0 %159 1
%160:i32 = var
blockpc %30 1 %160 1
%161:i32 = var
blockpc %36 0 %161 1
%162:i32 = var
blockpc %36 1 %162 1
%163:i32 = var
blockpc %47 0 %163 1
%164:i32 = var
blockpc %47 1 %164 1
%165:i32 = var
blockpc %48 0 %165 1
%166:i32 = var
blockpc %48 1 %166 1
%167:i32 = var
blockpc %81 0 %167 1
%168:i32 = var
blockpc %81 1 %168 1
%169:i32 = var
blockpc %115 0 %169 1
%170:i32 = var
blockpc %115 1 %170 1
%171:i32 = var
blockpc %124 0 %171 1
%172:i32 = var
blockpc %124 1 %172 1
%173:i32 = var
%174:i32 = var
%175:i32 = var
%176:i32 = var
%177:i32 = var
pc %173 1
pc %174 1
pc %175 1
pc %176 1
pc %177 1
infer %138


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = block 2
%70:i32 = var
%71:i32 = var
%72 = phi %69, %70, %71
%73 = add %68, %72
%74:i32 = var
blockpc %0 0 %74 1
%75:i32 = var
blockpc %0 1 %75 1
%76:i32 = var
blockpc %7 0 %76 1
%77:i32 = var
blockpc %7 1 %77 1
%78:i32 = var
blockpc %12 0 %78 1
%79:i32 = var
blockpc %12 1 %79 1
%80:i32 = var
blockpc %13 0 %80 1
%81:i32 = var
blockpc %13 1 %81 1
%82:i32 = var
blockpc %14 0 %82 1
%83:i32 = var
blockpc %14 1 %83 1
%84:i32 = var
blockpc %19 0 %84 1
%85:i32 = var
blockpc %19 1 %85 1
%86:i32 = var
blockpc %20 0 %86 1
%87:i32 = var
blockpc %20 1 %87 1
%88:i32 = var
blockpc %25 0 %88 1
%89:i32 = var
blockpc %25 1 %89 1
%90:i32 = var
blockpc %26 0 %90 1
%91:i32 = var
blockpc %26 1 %91 1
%92:i32 = var
blockpc %27 0 %92 1
%93:i32 = var
blockpc %27 1 %93 1
%94:i32 = var
blockpc %33 0 %94 1
%95:i32 = var
blockpc %33 1 %95 1
%96:i32 = var
blockpc %44 0 %96 1
%97:i32 = var
blockpc %44 1 %97 1
%98:i32 = var
blockpc %45 0 %98 1
%99:i32 = var
blockpc %45 1 %99 1
%100:i32 = var
blockpc %50 0 %100 1
%101:i32 = var
blockpc %50 1 %101 1
%102:i32 = var
blockpc %57 0 %102 1
%103:i32 = var
blockpc %57 1 %103 1
%104:i32 = var
blockpc %69 0 %104 1
%105:i32 = var
blockpc %69 1 %105 1
%106:i32 = var
%107:i32 = var
%108:i32 = var
%109:i32 = var
%110:i32 = var
pc %106 1
pc %107 1
pc %108 1
pc %109 1
pc %110 1
infer %73


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = lshr %137, 3:i32
%139:i32 = var
blockpc %0 0 %139 1
%140:i32 = var
blockpc %0 1 %140 1
%141:i32 = var
blockpc %3 0 %141 1
%142:i32 = var
blockpc %3 1 %142 1
%143:i32 = var
blockpc %10 0 %143 1
%144:i32 = var
blockpc %10 1 %144 1
%145:i32 = var
blockpc %15 0 %145 1
%146:i32 = var
blockpc %15 1 %146 1
%147:i32 = var
blockpc %16 0 %147 1
%148:i32 = var
blockpc %16 1 %148 1
%149:i32 = var
blockpc %17 0 %149 1
%150:i32 = var
blockpc %17 1 %150 1
%151:i32 = var
blockpc %22 0 %151 1
%152:i32 = var
blockpc %22 1 %152 1
%153:i32 = var
blockpc %23 0 %153 1
%154:i32 = var
blockpc %23 1 %154 1
%155:i32 = var
blockpc %28 0 %155 1
%156:i32 = var
blockpc %28 1 %156 1
%157:i32 = var
blockpc %29 0 %157 1
%158:i32 = var
blockpc %29 1 %158 1
%159:i32 = var
blockpc %30 0 %159 1
%160:i32 = var
blockpc %30 1 %160 1
%161:i32 = var
blockpc %36 0 %161 1
%162:i32 = var
blockpc %36 1 %162 1
%163:i32 = var
blockpc %47 0 %163 1
%164:i32 = var
blockpc %47 1 %164 1
%165:i32 = var
blockpc %48 0 %165 1
%166:i32 = var
blockpc %48 1 %166 1
%167:i32 = var
blockpc %81 0 %167 1
%168:i32 = var
blockpc %81 1 %168 1
%169:i32 = var
blockpc %115 0 %169 1
%170:i32 = var
blockpc %115 1 %170 1
%171:i32 = var
blockpc %124 0 %171 1
%172:i32 = var
blockpc %124 1 %172 1
%173:i32 = var
%174:i32 = var
%175:i32 = var
%176:i32 = var
%177:i32 = var
pc %173 1
pc %174 1
pc %175 1
pc %176 1
pc %177 1
infer %138


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = ult %137, 256:i32
%139:i32 = var
blockpc %0 0 %139 1
%140:i32 = var
blockpc %0 1 %140 1
%141:i32 = var
blockpc %3 0 %141 1
%142:i32 = var
blockpc %3 1 %142 1
%143:i32 = var
blockpc %10 0 %143 1
%144:i32 = var
blockpc %10 1 %144 1
%145:i32 = var
blockpc %15 0 %145 1
%146:i32 = var
blockpc %15 1 %146 1
%147:i32 = var
blockpc %16 0 %147 1
%148:i32 = var
blockpc %16 1 %148 1
%149:i32 = var
blockpc %17 0 %149 1
%150:i32 = var
blockpc %17 1 %150 1
%151:i32 = var
blockpc %22 0 %151 1
%152:i32 = var
blockpc %22 1 %152 1
%153:i32 = var
blockpc %23 0 %153 1
%154:i32 = var
blockpc %23 1 %154 1
%155:i32 = var
blockpc %28 0 %155 1
%156:i32 = var
blockpc %28 1 %156 1
%157:i32 = var
blockpc %29 0 %157 1
%158:i32 = var
blockpc %29 1 %158 1
%159:i32 = var
blockpc %30 0 %159 1
%160:i32 = var
blockpc %30 1 %160 1
%161:i32 = var
blockpc %36 0 %161 1
%162:i32 = var
blockpc %36 1 %162 1
%163:i32 = var
blockpc %47 0 %163 1
%164:i32 = var
blockpc %47 1 %164 1
%165:i32 = var
blockpc %48 0 %165 1
%166:i32 = var
blockpc %48 1 %166 1
%167:i32 = var
blockpc %81 0 %167 1
%168:i32 = var
blockpc %81 1 %168 1
%169:i32 = var
blockpc %115 0 %169 1
%170:i32 = var
blockpc %115 1 %170 1
%171:i32 = var
blockpc %124 0 %171 1
%172:i32 = var
blockpc %124 1 %172 1
%173:i32 = var
%174:i32 = var
%175:i32 = var
%176:i32 = var
%177:i32 = var
pc %173 1
pc %174 1
pc %175 1
pc %176 1
pc %177 1
infer %138


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = lshr %137, 3:i32 (hasExternalUses)
%139 = shl %138, 1:i32
%140:i32 = var
blockpc %0 0 %140 1
%141:i32 = var
blockpc %0 1 %141 1
%142:i32 = var
blockpc %3 0 %142 1
%143:i32 = var
blockpc %3 1 %143 1
%144:i32 = var
blockpc %10 0 %144 1
%145:i32 = var
blockpc %10 1 %145 1
%146:i32 = var
blockpc %15 0 %146 1
%147:i32 = var
blockpc %15 1 %147 1
%148:i32 = var
blockpc %16 0 %148 1
%149:i32 = var
blockpc %16 1 %149 1
%150:i32 = var
blockpc %17 0 %150 1
%151:i32 = var
blockpc %17 1 %151 1
%152:i32 = var
blockpc %22 0 %152 1
%153:i32 = var
blockpc %22 1 %153 1
%154:i32 = var
blockpc %23 0 %154 1
%155:i32 = var
blockpc %23 1 %155 1
%156:i32 = var
blockpc %28 0 %156 1
%157:i32 = var
blockpc %28 1 %157 1
%158:i32 = var
blockpc %29 0 %158 1
%159:i32 = var
blockpc %29 1 %159 1
%160:i32 = var
blockpc %30 0 %160 1
%161:i32 = var
blockpc %30 1 %161 1
%162:i32 = var
blockpc %36 0 %162 1
%163:i32 = var
blockpc %36 1 %163 1
%164:i32 = var
blockpc %47 0 %164 1
%165:i32 = var
blockpc %47 1 %165 1
%166:i32 = var
blockpc %48 0 %166 1
%167:i32 = var
blockpc %48 1 %167 1
%168:i32 = var
blockpc %81 0 %168 1
%169:i32 = var
blockpc %81 1 %169 1
%170:i32 = var
blockpc %115 0 %170 1
%171:i32 = var
blockpc %115 1 %171 1
%172:i32 = var
blockpc %124 0 %172 1
%173:i32 = var
blockpc %124 1 %173 1
%174:i32 = var
%175:i32 = var
%176:i32 = var
%177:i32 = var
%178:i32 = var
%179:i32 = var
pc %174 1
pc %175 1
pc %176 1
pc %177 1
pc %178 1
pc %179 1
infer %139


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = lshr %137, 3:i32 (hasExternalUses)
%139 = shl %138, 1:i32
%140 = shl %139, 2:i32
%141:i32 = var
blockpc %0 0 %141 1
%142:i32 = var
blockpc %0 1 %142 1
%143:i32 = var
blockpc %3 0 %143 1
%144:i32 = var
blockpc %3 1 %144 1
%145:i32 = var
blockpc %10 0 %145 1
%146:i32 = var
blockpc %10 1 %146 1
%147:i32 = var
blockpc %15 0 %147 1
%148:i32 = var
blockpc %15 1 %148 1
%149:i32 = var
blockpc %16 0 %149 1
%150:i32 = var
blockpc %16 1 %150 1
%151:i32 = var
blockpc %17 0 %151 1
%152:i32 = var
blockpc %17 1 %152 1
%153:i32 = var
blockpc %22 0 %153 1
%154:i32 = var
blockpc %22 1 %154 1
%155:i32 = var
blockpc %23 0 %155 1
%156:i32 = var
blockpc %23 1 %156 1
%157:i32 = var
blockpc %28 0 %157 1
%158:i32 = var
blockpc %28 1 %158 1
%159:i32 = var
blockpc %29 0 %159 1
%160:i32 = var
blockpc %29 1 %160 1
%161:i32 = var
blockpc %30 0 %161 1
%162:i32 = var
blockpc %30 1 %162 1
%163:i32 = var
blockpc %36 0 %163 1
%164:i32 = var
blockpc %36 1 %164 1
%165:i32 = var
blockpc %47 0 %165 1
%166:i32 = var
blockpc %47 1 %166 1
%167:i32 = var
blockpc %48 0 %167 1
%168:i32 = var
blockpc %48 1 %168 1
%169:i32 = var
blockpc %81 0 %169 1
%170:i32 = var
blockpc %81 1 %170 1
%171:i32 = var
blockpc %115 0 %171 1
%172:i32 = var
blockpc %115 1 %172 1
%173:i32 = var
blockpc %124 0 %173 1
%174:i32 = var
blockpc %124 1 %174 1
%175:i32 = var
%176:i32 = var
%177:i32 = var
%178:i32 = var
%179:i32 = var
%180:i32 = var
pc %175 1
pc %176 1
pc %177 1
pc %178 1
pc %179 1
pc %180 1
infer %140


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, 0:i32, %5
%7 = add %3, %6 (hasExternalUses)
%8 = block 2
%9 = block 6
%10:i32 = var
%11:i32 = var
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = block 2
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = phi %17, %18, 0:i32
%20 = block 2
%21 = block 2
%22 = block 2
%23 = phi %22, 0:i32, %19
%24 = phi %21, 0:i32, %23
%25 = phi %20, 0:i32, %24
%26 = phi %16, %19, %25
%27 = block 2
%28 = block 2
%29 = phi %28, %26, %10
%30 = phi %27, %29, %26
%31 = phi %15, %26, %30
%32 = phi %13, %14, %31
%33 = block 2
%34 = block 2
%35 = block 2
%36:i32 = var
%37 = phi %35, %36, %32
%38 = phi %34, %32, %37
%39 = phi %33, %32, %38
%40 = phi %12, %32, %39
%41 = block 2
%42:i32 = var
%43:i32 = var
%44 = phi %17, %43, 0:i32
%45 = phi %22, 0:i32, %44
%46 = phi %21, 0:i32, %45
%47 = phi %20, 0:i32, %46
%48 = phi %16, %44, %47
%49 = phi %13, %42, %48
%50 = phi %41, %49, %48
%51 = phi %9, %10, %11, %40, %40, %40, %50
%52 = block 2
%53 = block 2
%54:i32 = var
%55 = phi %53, %51, %54
%56 = phi %52, %51, %55
%57 = phi %8, %51, %56
%58 = block 2
%59:i32 = var
%60 = phi %58, 0:i32, %59
%61 = add %57, %60 (hasExternalUses)
%62 = sub %7, %61
%63:i32 = var
%64:i32 = var
%65 = phi %17, %63, %64
%66 = block 2
%67:i32 = var
%68 = phi %66, 16:i32, %67
%69 = phi %22, %64, %65
%70 = phi %21, -1:i32, %69
%71 = phi %20, %68, %70
%72 = phi %16, %65, %71
%73:i32 = var
%74 = phi %13, %73, %72
%75 = phi %41, %74, %72
%76 = phi %9, %72, %74, %74, %74, %74, %75
%77 = sub %62, %76 (hasExternalUses)
%78 = add %2, %77 (hasExternalUses)
%79 = phi %0, %78, %77
%80 = lshr %79, 3:i32 (hasExternalUses)
%81 = shl %80, 1:i32
%82 = shl %81, 2:i32
%83 = add 3144:i32, %82
%84:i32 = var
blockpc %0 0 %84 1
%85:i32 = var
blockpc %0 1 %85 1
%86:i32 = var
blockpc %4 0 %86 1
%87:i32 = var
blockpc %4 1 %87 1
%88:i32 = var
blockpc %8 0 %88 1
%89:i32 = var
blockpc %8 1 %89 1
%90:i32 = var
blockpc %15 0 %90 1
%91:i32 = var
blockpc %15 1 %91 1
%92:i32 = var
blockpc %20 0 %92 1
%93:i32 = var
blockpc %20 1 %93 1
%94:i32 = var
blockpc %21 0 %94 1
%95:i32 = var
blockpc %21 1 %95 1
%96:i32 = var
blockpc %22 0 %96 1
%97:i32 = var
blockpc %22 1 %97 1
%98:i32 = var
blockpc %27 0 %98 1
%99:i32 = var
blockpc %27 1 %99 1
%100:i32 = var
blockpc %28 0 %100 1
%101:i32 = var
blockpc %28 1 %101 1
%102:i32 = var
blockpc %33 0 %102 1
%103:i32 = var
blockpc %33 1 %103 1
%104:i32 = var
blockpc %34 0 %104 1
%105:i32 = var
blockpc %34 1 %105 1
%106:i32 = var
blockpc %35 0 %106 1
%107:i32 = var
blockpc %35 1 %107 1
%108:i32 = var
blockpc %41 0 %108 1
%109:i32 = var
blockpc %41 1 %109 1
%110:i32 = var
blockpc %52 0 %110 1
%111:i32 = var
blockpc %52 1 %111 1
%112:i32 = var
blockpc %53 0 %112 1
%113:i32 = var
blockpc %53 1 %113 1
%114:i32 = var
blockpc %58 0 %114 1
%115:i32 = var
blockpc %58 1 %115 1
%116:i32 = var
blockpc %66 0 %116 1
%117:i32 = var
blockpc %66 1 %117 1
%118:i32 = var
%119:i32 = var
%120:i32 = var
%121:i32 = var
%122:i32 = var
%123:i32 = var
pc %118 1
pc %119 1
pc %120 1
pc %121 1
pc %122 1
pc %123 1
infer %83


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = lshr %137, 3:i32 (hasExternalUses)
%139 = shl 1:i32, %138
%140:i32 = var
blockpc %0 0 %140 1
%141:i32 = var
blockpc %0 1 %141 1
%142:i32 = var
blockpc %3 0 %142 1
%143:i32 = var
blockpc %3 1 %143 1
%144:i32 = var
blockpc %10 0 %144 1
%145:i32 = var
blockpc %10 1 %145 1
%146:i32 = var
blockpc %15 0 %146 1
%147:i32 = var
blockpc %15 1 %147 1
%148:i32 = var
blockpc %16 0 %148 1
%149:i32 = var
blockpc %16 1 %149 1
%150:i32 = var
blockpc %17 0 %150 1
%151:i32 = var
blockpc %17 1 %151 1
%152:i32 = var
blockpc %22 0 %152 1
%153:i32 = var
blockpc %22 1 %153 1
%154:i32 = var
blockpc %23 0 %154 1
%155:i32 = var
blockpc %23 1 %155 1
%156:i32 = var
blockpc %28 0 %156 1
%157:i32 = var
blockpc %28 1 %157 1
%158:i32 = var
blockpc %29 0 %158 1
%159:i32 = var
blockpc %29 1 %159 1
%160:i32 = var
blockpc %30 0 %160 1
%161:i32 = var
blockpc %30 1 %161 1
%162:i32 = var
blockpc %36 0 %162 1
%163:i32 = var
blockpc %36 1 %163 1
%164:i32 = var
blockpc %47 0 %164 1
%165:i32 = var
blockpc %47 1 %165 1
%166:i32 = var
blockpc %48 0 %166 1
%167:i32 = var
blockpc %48 1 %167 1
%168:i32 = var
blockpc %81 0 %168 1
%169:i32 = var
blockpc %81 1 %169 1
%170:i32 = var
blockpc %115 0 %170 1
%171:i32 = var
blockpc %115 1 %171 1
%172:i32 = var
blockpc %124 0 %172 1
%173:i32 = var
blockpc %124 1 %173 1
%174:i32 = var
%175:i32 = var
%176:i32 = var
%177:i32 = var
%178:i32 = var
%179:i32 = var
pc %174 1
pc %175 1
pc %176 1
pc %177 1
pc %178 1
pc %179 1
infer %139


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = block 2
%5 = block 6
%6:i32 = var
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = block 2
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, %14, 0:i32
%16 = block 2
%17 = block 2
%18 = block 2
%19 = phi %18, 0:i32, %15
%20 = phi %17, 0:i32, %19
%21 = phi %16, 0:i32, %20
%22 = phi %12, %15, %21
%23 = block 2
%24 = block 2
%25 = phi %24, %22, %6
%26 = phi %23, %25, %22
%27 = phi %11, %22, %26
%28 = phi %9, %10, %27
%29 = block 2
%30 = block 2
%31 = block 2
%32:i32 = var
%33 = phi %31, %32, %28
%34 = phi %30, %28, %33
%35 = phi %29, %28, %34
%36 = phi %8, %28, %35
%37 = block 2
%38:i32 = var
%39:i32 = var
%40 = phi %13, %39, 0:i32
%41 = phi %18, 0:i32, %40
%42 = phi %17, 0:i32, %41
%43 = phi %16, 0:i32, %42
%44 = phi %12, %40, %43
%45 = phi %9, %38, %44
%46 = phi %37, %45, %44
%47 = phi %5, %6, %7, %36, %36, %36, %46
%48 = block 2
%49 = block 2
%50:i32 = var
%51 = phi %49, %47, %50
%52 = phi %48, %47, %51
%53 = phi %4, %47, %52
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58 = phi %13, %57, 0:i32
%59 = phi %18, 0:i32, %58
%60 = phi %17, 0:i32, %59
%61 = phi %16, 0:i32, %60
%62 = phi %12, %58, %61
%63 = phi %24, %62, %54
%64 = phi %23, %63, %62
%65 = phi %11, %62, %64
%66 = phi %9, %56, %65
%67 = phi %31, %55, %66
%68 = phi %30, %66, %67
%69 = phi %29, %66, %68
%70 = phi %8, %66, %69
%71:i32 = var
%72:i32 = var
%73:i32 = var
%74 = phi %13, %73, 0:i32
%75 = phi %18, 0:i32, %74
%76 = phi %17, 0:i32, %75
%77 = phi %16, 0:i32, %76
%78 = phi %12, %74, %77
%79 = phi %9, %72, %78
%80 = phi %37, %79, %78
%81 = phi %5, %54, %55, %70, %70, %71, %80
%82 = block 2
%83:i32 = var
%84:i32 = var
%85 = phi %13, %84, 0:i32
%86 = phi %18, 0:i32, %85
%87 = phi %17, 0:i32, %86
%88 = phi %16, 0:i32, %87
%89 = phi %12, %85, %88
%90:i32 = var
%91 = phi %9, %90, %89
%92 = block 3
%93:i32 = var
%94:i32 = var
%95 = phi %13, %94, 0:i32
%96 = phi %18, 0:i32, %95
%97 = phi %17, 0:i32, %96
%98 = phi %16, 0:i32, %97
%99 = phi %12, %95, %98
%100 = phi %24, %54, %99
%101 = phi %23, %100, 0:i32
%102 = phi %11, %99, %101
%103 = phi %9, %93, %102
%104 = phi %31, %103, 0:i32
%105 = phi %30, 0:i32, %104
%106 = phi %29, %103, %105
%107 = phi %8, 0:i32, %106
%108 = phi %92, 0:i32, 0:i32, %107
%109 = phi %37, %108, 0:i32
%110 = phi %5, %89, %91, %91, %91, %91, %109
%111 = phi %82, %83, %110
%112 = phi %49, %81, %111
%113 = phi %48, %81, %112
%114 = phi %4, %81, %113
%115 = add %53, %114 (hasExternalUses)
%116 = block 2
%117:i32 = var
%118 = phi %116, 0:i32, %117
%119 = add %115, %118 (hasExternalUses)
%120:i32 = var
%121 = sub %119, %120
%122:i32 = var
%123:i32 = var
%124 = phi %13, %122, %123
%125 = block 2
%126:i32 = var
%127 = phi %125, 16:i32, %126
%128 = phi %18, %123, %124
%129 = phi %17, -1:i32, %128
%130 = phi %16, %127, %129
%131 = phi %12, %124, %130
%132:i32 = var
%133 = phi %9, %132, %131
%134 = phi %37, %133, %131
%135 = phi %5, %131, %133, %133, %133, %133, %134
%136 = sub %121, %135 (hasExternalUses)
%137 = add %3, %136 (hasExternalUses)
%138 = phi %1, %137, %136
%139 = lshr %138, 3:i32 (hasExternalUses)
%140 = shl 1:i32, %139 (hasExternalUses)
%141 = and %0, %140
%142:i32 = var
blockpc %1 0 %142 1
%143:i32 = var
blockpc %1 1 %143 1
%144:i32 = var
blockpc %4 0 %144 1
%145:i32 = var
blockpc %4 1 %145 1
%146:i32 = var
blockpc %11 0 %146 1
%147:i32 = var
blockpc %11 1 %147 1
%148:i32 = var
blockpc %16 0 %148 1
%149:i32 = var
blockpc %16 1 %149 1
%150:i32 = var
blockpc %17 0 %150 1
%151:i32 = var
blockpc %17 1 %151 1
%152:i32 = var
blockpc %18 0 %152 1
%153:i32 = var
blockpc %18 1 %153 1
%154:i32 = var
blockpc %23 0 %154 1
%155:i32 = var
blockpc %23 1 %155 1
%156:i32 = var
blockpc %24 0 %156 1
%157:i32 = var
blockpc %24 1 %157 1
%158:i32 = var
blockpc %29 0 %158 1
%159:i32 = var
blockpc %29 1 %159 1
%160:i32 = var
blockpc %30 0 %160 1
%161:i32 = var
blockpc %30 1 %161 1
%162:i32 = var
blockpc %31 0 %162 1
%163:i32 = var
blockpc %31 1 %163 1
%164:i32 = var
blockpc %37 0 %164 1
%165:i32 = var
blockpc %37 1 %165 1
%166:i32 = var
blockpc %48 0 %166 1
%167:i32 = var
blockpc %48 1 %167 1
%168:i32 = var
blockpc %49 0 %168 1
%169:i32 = var
blockpc %49 1 %169 1
%170:i32 = var
blockpc %82 0 %170 1
%171:i32 = var
blockpc %82 1 %171 1
%172:i32 = var
blockpc %116 0 %172 1
%173:i32 = var
blockpc %116 1 %173 1
%174:i32 = var
blockpc %125 0 %174 1
%175:i32 = var
blockpc %125 1 %175 1
%176:i32 = var
%177:i32 = var
%178:i32 = var
%179:i32 = var
%180:i32 = var
%181:i32 = var
pc %176 1
pc %177 1
pc %178 1
pc %179 1
pc %180 1
pc %181 1
infer %141


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, 0:i32, %6
%8 = add %4, %7 (hasExternalUses)
%9 = block 2
%10 = block 6
%11:i32 = var
%12:i32 = var
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = block 2
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22 = block 2
%23 = block 2
%24 = phi %23, 0:i32, %20
%25 = phi %22, 0:i32, %24
%26 = phi %21, 0:i32, %25
%27 = phi %17, %20, %26
%28 = block 2
%29 = block 2
%30 = phi %29, %27, %11
%31 = phi %28, %30, %27
%32 = phi %16, %27, %31
%33 = phi %14, %15, %32
%34 = block 2
%35 = block 2
%36 = block 2
%37:i32 = var
%38 = phi %36, %37, %33
%39 = phi %35, %33, %38
%40 = phi %34, %33, %39
%41 = phi %13, %33, %40
%42 = block 2
%43:i32 = var
%44:i32 = var
%45 = phi %18, %44, 0:i32
%46 = phi %23, 0:i32, %45
%47 = phi %22, 0:i32, %46
%48 = phi %21, 0:i32, %47
%49 = phi %17, %45, %48
%50 = phi %14, %43, %49
%51 = phi %42, %50, %49
%52 = phi %10, %11, %12, %41, %41, %41, %51
%53 = block 2
%54 = block 2
%55:i32 = var
%56 = phi %54, %52, %55
%57 = phi %53, %52, %56
%58 = phi %9, %52, %57
%59 = block 2
%60:i32 = var
%61 = phi %59, 0:i32, %60
%62 = add %58, %61 (hasExternalUses)
%63 = sub %8, %62
%64:i32 = var
%65:i32 = var
%66 = phi %18, %64, %65
%67 = block 2
%68:i32 = var
%69 = phi %67, 16:i32, %68
%70 = phi %23, %65, %66
%71 = phi %22, -1:i32, %70
%72 = phi %21, %69, %71
%73 = phi %17, %66, %72
%74:i32 = var
%75 = phi %14, %74, %73
%76 = phi %42, %75, %73
%77 = phi %10, %73, %75, %75, %75, %75, %76
%78 = sub %63, %77 (hasExternalUses)
%79 = add %3, %78 (hasExternalUses)
%80 = phi %1, %79, %78
%81 = lshr %80, 3:i32 (hasExternalUses)
%82 = shl 1:i32, %81 (hasExternalUses)
%83 = and %0, %82
%84 = eq %83, 0:i32
%85:i32 = var
blockpc %1 0 %85 1
%86:i32 = var
blockpc %1 1 %86 1
%87:i32 = var
blockpc %5 0 %87 1
%88:i32 = var
blockpc %5 1 %88 1
%89:i32 = var
blockpc %9 0 %89 1
%90:i32 = var
blockpc %9 1 %90 1
%91:i32 = var
blockpc %16 0 %91 1
%92:i32 = var
blockpc %16 1 %92 1
%93:i32 = var
blockpc %21 0 %93 1
%94:i32 = var
blockpc %21 1 %94 1
%95:i32 = var
blockpc %22 0 %95 1
%96:i32 = var
blockpc %22 1 %96 1
%97:i32 = var
blockpc %23 0 %97 1
%98:i32 = var
blockpc %23 1 %98 1
%99:i32 = var
blockpc %28 0 %99 1
%100:i32 = var
blockpc %28 1 %100 1
%101:i32 = var
blockpc %29 0 %101 1
%102:i32 = var
blockpc %29 1 %102 1
%103:i32 = var
blockpc %34 0 %103 1
%104:i32 = var
blockpc %34 1 %104 1
%105:i32 = var
blockpc %35 0 %105 1
%106:i32 = var
blockpc %35 1 %106 1
%107:i32 = var
blockpc %36 0 %107 1
%108:i32 = var
blockpc %36 1 %108 1
%109:i32 = var
blockpc %42 0 %109 1
%110:i32 = var
blockpc %42 1 %110 1
%111:i32 = var
blockpc %53 0 %111 1
%112:i32 = var
blockpc %53 1 %112 1
%113:i32 = var
blockpc %54 0 %113 1
%114:i32 = var
blockpc %54 1 %114 1
%115:i32 = var
blockpc %59 0 %115 1
%116:i32 = var
blockpc %59 1 %116 1
%117:i32 = var
blockpc %67 0 %117 1
%118:i32 = var
blockpc %67 1 %118 1
%119:i32 = var
%120:i32 = var
%121:i32 = var
%122:i32 = var
%123:i32 = var
%124:i32 = var
pc %119 1
pc %120 1
pc %121 1
pc %122 1
pc %123 1
pc %124 1
infer %84


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = block 2
%5 = block 6
%6:i32 = var
%7:i32 = var
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = block 2
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, %14, 0:i32
%16 = block 2
%17 = block 2
%18 = block 2
%19 = phi %18, 0:i32, %15
%20 = phi %17, 0:i32, %19
%21 = phi %16, 0:i32, %20
%22 = phi %12, %15, %21
%23 = block 2
%24 = block 2
%25 = phi %24, %22, %6
%26 = phi %23, %25, %22
%27 = phi %11, %22, %26
%28 = phi %9, %10, %27
%29 = block 2
%30 = block 2
%31 = block 2
%32:i32 = var
%33 = phi %31, %32, %28
%34 = phi %30, %28, %33
%35 = phi %29, %28, %34
%36 = phi %8, %28, %35
%37 = block 2
%38:i32 = var
%39:i32 = var
%40 = phi %13, %39, 0:i32
%41 = phi %18, 0:i32, %40
%42 = phi %17, 0:i32, %41
%43 = phi %16, 0:i32, %42
%44 = phi %12, %40, %43
%45 = phi %9, %38, %44
%46 = phi %37, %45, %44
%47 = phi %5, %6, %7, %36, %36, %36, %46
%48 = block 2
%49 = block 2
%50:i32 = var
%51 = phi %49, %47, %50
%52 = phi %48, %47, %51
%53 = phi %4, %47, %52
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58 = phi %13, %57, 0:i32
%59 = phi %18, 0:i32, %58
%60 = phi %17, 0:i32, %59
%61 = phi %16, 0:i32, %60
%62 = phi %12, %58, %61
%63 = phi %24, %62, %54
%64 = phi %23, %63, %62
%65 = phi %11, %62, %64
%66 = phi %9, %56, %65
%67 = phi %31, %55, %66
%68 = phi %30, %66, %67
%69 = phi %29, %66, %68
%70 = phi %8, %66, %69
%71:i32 = var
%72:i32 = var
%73:i32 = var
%74 = phi %13, %73, 0:i32
%75 = phi %18, 0:i32, %74
%76 = phi %17, 0:i32, %75
%77 = phi %16, 0:i32, %76
%78 = phi %12, %74, %77
%79 = phi %9, %72, %78
%80 = phi %37, %79, %78
%81 = phi %5, %54, %55, %70, %70, %71, %80
%82 = block 2
%83:i32 = var
%84:i32 = var
%85 = phi %13, %84, 0:i32
%86 = phi %18, 0:i32, %85
%87 = phi %17, 0:i32, %86
%88 = phi %16, 0:i32, %87
%89 = phi %12, %85, %88
%90:i32 = var
%91 = phi %9, %90, %89
%92 = block 3
%93:i32 = var
%94:i32 = var
%95 = phi %13, %94, 0:i32
%96 = phi %18, 0:i32, %95
%97 = phi %17, 0:i32, %96
%98 = phi %16, 0:i32, %97
%99 = phi %12, %95, %98
%100 = phi %24, %54, %99
%101 = phi %23, %100, 0:i32
%102 = phi %11, %99, %101
%103 = phi %9, %93, %102
%104 = phi %31, %103, 0:i32
%105 = phi %30, 0:i32, %104
%106 = phi %29, %103, %105
%107 = phi %8, 0:i32, %106
%108 = phi %92, 0:i32, 0:i32, %107
%109 = phi %37, %108, 0:i32
%110 = phi %5, %89, %91, %91, %91, %91, %109
%111 = phi %82, %83, %110
%112 = phi %49, %81, %111
%113 = phi %48, %81, %112
%114 = phi %4, %81, %113
%115 = add %53, %114 (hasExternalUses)
%116 = block 2
%117:i32 = var
%118 = phi %116, 0:i32, %117
%119 = add %115, %118 (hasExternalUses)
%120:i32 = var
%121 = sub %119, %120
%122:i32 = var
%123:i32 = var
%124 = phi %13, %122, %123
%125 = block 2
%126:i32 = var
%127 = phi %125, 16:i32, %126
%128 = phi %18, %123, %124
%129 = phi %17, -1:i32, %128
%130 = phi %16, %127, %129
%131 = phi %12, %124, %130
%132:i32 = var
%133 = phi %9, %132, %131
%134 = phi %37, %133, %131
%135 = phi %5, %131, %133, %133, %133, %133, %134
%136 = sub %121, %135 (hasExternalUses)
%137 = add %3, %136 (hasExternalUses)
%138 = phi %1, %137, %136
%139 = lshr %138, 3:i32 (hasExternalUses)
%140 = shl 1:i32, %139 (hasExternalUses)
%141 = or %0, %140
%142:i32 = var
blockpc %1 0 %142 1
%143:i32 = var
blockpc %1 1 %143 1
%144:i32 = var
blockpc %4 0 %144 1
%145:i32 = var
blockpc %4 1 %145 1
%146:i32 = var
blockpc %11 0 %146 1
%147:i32 = var
blockpc %11 1 %147 1
%148:i32 = var
blockpc %16 0 %148 1
%149:i32 = var
blockpc %16 1 %149 1
%150:i32 = var
blockpc %17 0 %150 1
%151:i32 = var
blockpc %17 1 %151 1
%152:i32 = var
blockpc %18 0 %152 1
%153:i32 = var
blockpc %18 1 %153 1
%154:i32 = var
blockpc %23 0 %154 1
%155:i32 = var
blockpc %23 1 %155 1
%156:i32 = var
blockpc %24 0 %156 1
%157:i32 = var
blockpc %24 1 %157 1
%158:i32 = var
blockpc %29 0 %158 1
%159:i32 = var
blockpc %29 1 %159 1
%160:i32 = var
blockpc %30 0 %160 1
%161:i32 = var
blockpc %30 1 %161 1
%162:i32 = var
blockpc %31 0 %162 1
%163:i32 = var
blockpc %31 1 %163 1
%164:i32 = var
blockpc %37 0 %164 1
%165:i32 = var
blockpc %37 1 %165 1
%166:i32 = var
blockpc %48 0 %166 1
%167:i32 = var
blockpc %48 1 %167 1
%168:i32 = var
blockpc %49 0 %168 1
%169:i32 = var
blockpc %49 1 %169 1
%170:i32 = var
blockpc %82 0 %170 1
%171:i32 = var
blockpc %82 1 %171 1
%172:i32 = var
blockpc %116 0 %172 1
%173:i32 = var
blockpc %116 1 %173 1
%174:i32 = var
blockpc %125 0 %174 1
%175:i32 = var
blockpc %125 1 %175 1
%176:i32 = var
%177:i32 = var
%178:i32 = var
%179:i32 = var
%180:i32 = var
%181:i32 = var
%182:i32 = var
pc %176 1
pc %177 1
pc %178 1
pc %179 1
pc %180 1
pc %181 1
pc %182 1
infer %141


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4:i32 = var
%5 = sub %3, %4
%6 = block 6
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %10, %11
%19 = phi %16, -1:i32, %18
%20 = phi %12, %15, %19
%21 = phi %7, %11, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %21
%25 = block 2
%26 = phi %25, %24, %21
%27 = phi %6, %21, %24, %24, %24, %24, %26
%28 = sub %5, %27 (hasExternalUses)
%29 = add %2, %28 (hasExternalUses)
%30 = phi %0, %29, %28
%31 = lshr %30, 3:i32 (hasExternalUses)
%32 = shl %31, 1:i32
%33 = shl %32, 2:i32
%34 = add 3144:i32, %33 (hasExternalUses)
%35 = add %34, 8:i32
%36:i32 = var
blockpc %0 0 %36 1
%37:i32 = var
blockpc %0 1 %37 1
%38:i32 = var
blockpc %12 0 %38 1
%39:i32 = var
blockpc %12 1 %39 1
%40:i32 = var
blockpc %13 0 %40 1
%41:i32 = var
blockpc %13 1 %41 1
%42:i32 = var
blockpc %16 0 %42 1
%43:i32 = var
blockpc %16 1 %43 1
%44:i32 = var
blockpc %17 0 %44 1
%45:i32 = var
blockpc %17 1 %45 1
%46:i32 = var
blockpc %25 0 %46 1
%47:i32 = var
blockpc %25 1 %47 1
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
infer %35


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4:i32 = var
%5 = sub %3, %4
%6 = block 6
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %10, %11
%19 = phi %16, -1:i32, %18
%20 = phi %12, %15, %19
%21 = phi %7, %11, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %21
%25 = block 2
%26 = phi %25, %24, %21
%27 = phi %6, %21, %24, %24, %24, %24, %26
%28 = sub %5, %27 (hasExternalUses)
%29 = add %2, %28 (hasExternalUses)
%30 = phi %0, %29, %28
%31 = lshr %30, 3:i32 (hasExternalUses)
%32 = shl %31, 1:i32
%33 = shl %32, 2:i32
%34 = add 3144:i32, %33 (hasExternalUses)
%35 = add %34, 8:i32
%36:i32 = var
blockpc %0 0 %36 1
%37:i32 = var
blockpc %0 1 %37 1
%38:i32 = var
blockpc %12 0 %38 1
%39:i32 = var
blockpc %12 1 %39 1
%40:i32 = var
blockpc %13 0 %40 1
%41:i32 = var
blockpc %13 1 %41 1
%42:i32 = var
blockpc %16 0 %42 1
%43:i32 = var
blockpc %16 1 %43 1
%44:i32 = var
blockpc %17 0 %44 1
%45:i32 = var
blockpc %17 1 %45 1
%46:i32 = var
blockpc %25 0 %46 1
%47:i32 = var
blockpc %25 1 %47 1
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
infer %35


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4:i32 = var
%5 = block 6
%6 = block 2
%7 = block 2
%8:i32 = var
%9:i32 = var
%10 = phi %7, %8, %9
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %9, %10
%18 = phi %15, -1:i32, %17
%19 = phi %11, %14, %18
%20 = phi %6, %10, %19
%21 = block 2
%22:i32 = var
%23 = phi %21, %22, %20
%24 = block 2
%25 = phi %24, %23, %20
%26 = phi %5, %20, %23, %23, %23, %23, %25
%27 = sub %4, %26 (hasExternalUses)
%28 = add %3, %27 (hasExternalUses)
%29 = phi %1, %28, %27
%30 = lshr %29, 3:i32 (hasExternalUses)
%31 = shl %30, 1:i32
%32 = shl %31, 2:i32
%33 = add 3144:i32, %32 (hasExternalUses)
%34:i32 = var
%35 = phi %0, %33, %34
%36 = add %35, 12:i32
%37:i32 = var
blockpc %0 0 %37 1
%38:i32 = var
blockpc %0 1 %38 1
%39:i32 = var
blockpc %1 0 %39 1
%40:i32 = var
blockpc %1 1 %40 1
%41:i32 = var
blockpc %11 0 %41 1
%42:i32 = var
blockpc %11 1 %42 1
%43:i32 = var
blockpc %12 0 %43 1
%44:i32 = var
blockpc %12 1 %44 1
%45:i32 = var
blockpc %15 0 %45 1
%46:i32 = var
blockpc %15 1 %46 1
%47:i32 = var
blockpc %16 0 %47 1
%48:i32 = var
blockpc %16 1 %48 1
%49:i32 = var
blockpc %24 0 %49 1
%50:i32 = var
blockpc %24 1 %50 1
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
pc %56 1
infer %36


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 8:i32
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %12 0 %74 1
%75:i32 = var
blockpc %12 1 %75 1
%76:i32 = var
blockpc %13 0 %76 1
%77:i32 = var
blockpc %13 1 %77 1
%78:i32 = var
blockpc %14 0 %78 1
%79:i32 = var
blockpc %14 1 %79 1
%80:i32 = var
blockpc %19 0 %80 1
%81:i32 = var
blockpc %19 1 %81 1
%82:i32 = var
blockpc %20 0 %82 1
%83:i32 = var
blockpc %20 1 %83 1
%84:i32 = var
blockpc %25 0 %84 1
%85:i32 = var
blockpc %25 1 %85 1
%86:i32 = var
blockpc %26 0 %86 1
%87:i32 = var
blockpc %26 1 %87 1
%88:i32 = var
blockpc %27 0 %88 1
%89:i32 = var
blockpc %27 1 %89 1
%90:i32 = var
blockpc %33 0 %90 1
%91:i32 = var
blockpc %33 1 %91 1
%92:i32 = var
blockpc %44 0 %92 1
%93:i32 = var
blockpc %44 1 %93 1
%94:i32 = var
blockpc %45 0 %94 1
%95:i32 = var
blockpc %45 1 %95 1
%96:i32 = var
blockpc %50 0 %96 1
%97:i32 = var
blockpc %50 1 %97 1
%98:i32 = var
blockpc %57 0 %98 1
%99:i32 = var
blockpc %57 1 %99 1
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105:i32 = var
pc %100 1
pc %101 1
pc %102 1
pc %103 1
pc %104 1
pc %105 1
infer %69


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 12:i32
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %12 0 %74 1
%75:i32 = var
blockpc %12 1 %75 1
%76:i32 = var
blockpc %13 0 %76 1
%77:i32 = var
blockpc %13 1 %77 1
%78:i32 = var
blockpc %14 0 %78 1
%79:i32 = var
blockpc %14 1 %79 1
%80:i32 = var
blockpc %19 0 %80 1
%81:i32 = var
blockpc %19 1 %81 1
%82:i32 = var
blockpc %20 0 %82 1
%83:i32 = var
blockpc %20 1 %83 1
%84:i32 = var
blockpc %25 0 %84 1
%85:i32 = var
blockpc %25 1 %85 1
%86:i32 = var
blockpc %26 0 %86 1
%87:i32 = var
blockpc %26 1 %87 1
%88:i32 = var
blockpc %27 0 %88 1
%89:i32 = var
blockpc %27 1 %89 1
%90:i32 = var
blockpc %33 0 %90 1
%91:i32 = var
blockpc %33 1 %91 1
%92:i32 = var
blockpc %44 0 %92 1
%93:i32 = var
blockpc %44 1 %93 1
%94:i32 = var
blockpc %45 0 %94 1
%95:i32 = var
blockpc %45 1 %95 1
%96:i32 = var
blockpc %50 0 %96 1
%97:i32 = var
blockpc %50 1 %97 1
%98:i32 = var
blockpc %57 0 %98 1
%99:i32 = var
blockpc %57 1 %99 1
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105:i32 = var
pc %100 1
pc %101 1
pc %102 1
pc %103 1
pc %104 1
pc %105 1
infer %69


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = lshr %137, 8:i32
%139:i32 = var
blockpc %0 0 %139 1
%140:i32 = var
blockpc %0 1 %140 1
%141:i32 = var
blockpc %3 0 %141 1
%142:i32 = var
blockpc %3 1 %142 1
%143:i32 = var
blockpc %10 0 %143 1
%144:i32 = var
blockpc %10 1 %144 1
%145:i32 = var
blockpc %15 0 %145 1
%146:i32 = var
blockpc %15 1 %146 1
%147:i32 = var
blockpc %16 0 %147 1
%148:i32 = var
blockpc %16 1 %148 1
%149:i32 = var
blockpc %17 0 %149 1
%150:i32 = var
blockpc %17 1 %150 1
%151:i32 = var
blockpc %22 0 %151 1
%152:i32 = var
blockpc %22 1 %152 1
%153:i32 = var
blockpc %23 0 %153 1
%154:i32 = var
blockpc %23 1 %154 1
%155:i32 = var
blockpc %28 0 %155 1
%156:i32 = var
blockpc %28 1 %156 1
%157:i32 = var
blockpc %29 0 %157 1
%158:i32 = var
blockpc %29 1 %158 1
%159:i32 = var
blockpc %30 0 %159 1
%160:i32 = var
blockpc %30 1 %160 1
%161:i32 = var
blockpc %36 0 %161 1
%162:i32 = var
blockpc %36 1 %162 1
%163:i32 = var
blockpc %47 0 %163 1
%164:i32 = var
blockpc %47 1 %164 1
%165:i32 = var
blockpc %48 0 %165 1
%166:i32 = var
blockpc %48 1 %166 1
%167:i32 = var
blockpc %81 0 %167 1
%168:i32 = var
blockpc %81 1 %168 1
%169:i32 = var
blockpc %115 0 %169 1
%170:i32 = var
blockpc %115 1 %170 1
%171:i32 = var
blockpc %124 0 %171 1
%172:i32 = var
blockpc %124 1 %172 1
%173:i32 = var
%174:i32 = var
%175:i32 = var
%176:i32 = var
%177:i32 = var
pc %173 1
pc %174 1
pc %175 1
pc %176 1
pc %177 1
infer %138


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = lshr %137, 8:i32 (hasExternalUses)
%139 = eq %138, 0:i32
%140:i32 = var
blockpc %0 0 %140 1
%141:i32 = var
blockpc %0 1 %141 1
%142:i32 = var
blockpc %3 0 %142 1
%143:i32 = var
blockpc %3 1 %143 1
%144:i32 = var
blockpc %10 0 %144 1
%145:i32 = var
blockpc %10 1 %145 1
%146:i32 = var
blockpc %15 0 %146 1
%147:i32 = var
blockpc %15 1 %147 1
%148:i32 = var
blockpc %16 0 %148 1
%149:i32 = var
blockpc %16 1 %149 1
%150:i32 = var
blockpc %17 0 %150 1
%151:i32 = var
blockpc %17 1 %151 1
%152:i32 = var
blockpc %22 0 %152 1
%153:i32 = var
blockpc %22 1 %153 1
%154:i32 = var
blockpc %23 0 %154 1
%155:i32 = var
blockpc %23 1 %155 1
%156:i32 = var
blockpc %28 0 %156 1
%157:i32 = var
blockpc %28 1 %157 1
%158:i32 = var
blockpc %29 0 %158 1
%159:i32 = var
blockpc %29 1 %159 1
%160:i32 = var
blockpc %30 0 %160 1
%161:i32 = var
blockpc %30 1 %161 1
%162:i32 = var
blockpc %36 0 %162 1
%163:i32 = var
blockpc %36 1 %163 1
%164:i32 = var
blockpc %47 0 %164 1
%165:i32 = var
blockpc %47 1 %165 1
%166:i32 = var
blockpc %48 0 %166 1
%167:i32 = var
blockpc %48 1 %167 1
%168:i32 = var
blockpc %81 0 %168 1
%169:i32 = var
blockpc %81 1 %169 1
%170:i32 = var
blockpc %115 0 %170 1
%171:i32 = var
blockpc %115 1 %171 1
%172:i32 = var
blockpc %124 0 %172 1
%173:i32 = var
blockpc %124 1 %173 1
%174:i32 = var
%175:i32 = var
%176:i32 = var
%177:i32 = var
%178:i32 = var
pc %174 1
pc %175 1
pc %176 1
pc %177 1
pc %178 1
infer %139


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = ult 16777215:i32, %137
%139:i32 = var
blockpc %0 0 %139 1
%140:i32 = var
blockpc %0 1 %140 1
%141:i32 = var
blockpc %3 0 %141 1
%142:i32 = var
blockpc %3 1 %142 1
%143:i32 = var
blockpc %10 0 %143 1
%144:i32 = var
blockpc %10 1 %144 1
%145:i32 = var
blockpc %15 0 %145 1
%146:i32 = var
blockpc %15 1 %146 1
%147:i32 = var
blockpc %16 0 %147 1
%148:i32 = var
blockpc %16 1 %148 1
%149:i32 = var
blockpc %17 0 %149 1
%150:i32 = var
blockpc %17 1 %150 1
%151:i32 = var
blockpc %22 0 %151 1
%152:i32 = var
blockpc %22 1 %152 1
%153:i32 = var
blockpc %23 0 %153 1
%154:i32 = var
blockpc %23 1 %154 1
%155:i32 = var
blockpc %28 0 %155 1
%156:i32 = var
blockpc %28 1 %156 1
%157:i32 = var
blockpc %29 0 %157 1
%158:i32 = var
blockpc %29 1 %158 1
%159:i32 = var
blockpc %30 0 %159 1
%160:i32 = var
blockpc %30 1 %160 1
%161:i32 = var
blockpc %36 0 %161 1
%162:i32 = var
blockpc %36 1 %162 1
%163:i32 = var
blockpc %47 0 %163 1
%164:i32 = var
blockpc %47 1 %164 1
%165:i32 = var
blockpc %48 0 %165 1
%166:i32 = var
blockpc %48 1 %166 1
%167:i32 = var
blockpc %81 0 %167 1
%168:i32 = var
blockpc %81 1 %168 1
%169:i32 = var
blockpc %115 0 %169 1
%170:i32 = var
blockpc %115 1 %170 1
%171:i32 = var
blockpc %124 0 %171 1
%172:i32 = var
blockpc %124 1 %172 1
%173:i32 = var
%174:i32 = var
%175:i32 = var
%176:i32 = var
%177:i32 = var
%178:i32 = var
pc %173 1
pc %174 1
pc %175 1
pc %176 1
pc %177 1
pc %178 1
infer %138


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = lshr %137, 8:i32 (hasExternalUses)
%139 = add %138, 1048320:i32
%140:i32 = var
blockpc %0 0 %140 1
%141:i32 = var
blockpc %0 1 %141 1
%142:i32 = var
blockpc %3 0 %142 1
%143:i32 = var
blockpc %3 1 %143 1
%144:i32 = var
blockpc %10 0 %144 1
%145:i32 = var
blockpc %10 1 %145 1
%146:i32 = var
blockpc %15 0 %146 1
%147:i32 = var
blockpc %15 1 %147 1
%148:i32 = var
blockpc %16 0 %148 1
%149:i32 = var
blockpc %16 1 %149 1
%150:i32 = var
blockpc %17 0 %150 1
%151:i32 = var
blockpc %17 1 %151 1
%152:i32 = var
blockpc %22 0 %152 1
%153:i32 = var
blockpc %22 1 %153 1
%154:i32 = var
blockpc %23 0 %154 1
%155:i32 = var
blockpc %23 1 %155 1
%156:i32 = var
blockpc %28 0 %156 1
%157:i32 = var
blockpc %28 1 %157 1
%158:i32 = var
blockpc %29 0 %158 1
%159:i32 = var
blockpc %29 1 %159 1
%160:i32 = var
blockpc %30 0 %160 1
%161:i32 = var
blockpc %30 1 %161 1
%162:i32 = var
blockpc %36 0 %162 1
%163:i32 = var
blockpc %36 1 %163 1
%164:i32 = var
blockpc %47 0 %164 1
%165:i32 = var
blockpc %47 1 %165 1
%166:i32 = var
blockpc %48 0 %166 1
%167:i32 = var
blockpc %48 1 %167 1
%168:i32 = var
blockpc %81 0 %168 1
%169:i32 = var
blockpc %81 1 %169 1
%170:i32 = var
blockpc %115 0 %170 1
%171:i32 = var
blockpc %115 1 %171 1
%172:i32 = var
blockpc %124 0 %172 1
%173:i32 = var
blockpc %124 1 %173 1
%174:i32 = var
%175:i32 = var
%176:i32 = var
%177:i32 = var
%178:i32 = var
%179:i32 = var
pc %174 1
pc %175 1
pc %176 1
pc %177 1
pc %178 1
pc %179 1
infer %139


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = lshr %137, 8:i32 (hasExternalUses)
%139 = add %138, 1048320:i32
%140 = lshr %139, 16:i32
%141:i32 = var
blockpc %0 0 %141 1
%142:i32 = var
blockpc %0 1 %142 1
%143:i32 = var
blockpc %3 0 %143 1
%144:i32 = var
blockpc %3 1 %144 1
%145:i32 = var
blockpc %10 0 %145 1
%146:i32 = var
blockpc %10 1 %146 1
%147:i32 = var
blockpc %15 0 %147 1
%148:i32 = var
blockpc %15 1 %148 1
%149:i32 = var
blockpc %16 0 %149 1
%150:i32 = var
blockpc %16 1 %150 1
%151:i32 = var
blockpc %17 0 %151 1
%152:i32 = var
blockpc %17 1 %152 1
%153:i32 = var
blockpc %22 0 %153 1
%154:i32 = var
blockpc %22 1 %154 1
%155:i32 = var
blockpc %23 0 %155 1
%156:i32 = var
blockpc %23 1 %156 1
%157:i32 = var
blockpc %28 0 %157 1
%158:i32 = var
blockpc %28 1 %158 1
%159:i32 = var
blockpc %29 0 %159 1
%160:i32 = var
blockpc %29 1 %160 1
%161:i32 = var
blockpc %30 0 %161 1
%162:i32 = var
blockpc %30 1 %162 1
%163:i32 = var
blockpc %36 0 %163 1
%164:i32 = var
blockpc %36 1 %164 1
%165:i32 = var
blockpc %47 0 %165 1
%166:i32 = var
blockpc %47 1 %166 1
%167:i32 = var
blockpc %48 0 %167 1
%168:i32 = var
blockpc %48 1 %168 1
%169:i32 = var
blockpc %81 0 %169 1
%170:i32 = var
blockpc %81 1 %170 1
%171:i32 = var
blockpc %115 0 %171 1
%172:i32 = var
blockpc %115 1 %172 1
%173:i32 = var
blockpc %124 0 %173 1
%174:i32 = var
blockpc %124 1 %174 1
%175:i32 = var
%176:i32 = var
%177:i32 = var
%178:i32 = var
%179:i32 = var
%180:i32 = var
pc %175 1
pc %176 1
pc %177 1
pc %178 1
pc %179 1
pc %180 1
infer %140


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, 0:i32, %5
%7 = add %3, %6 (hasExternalUses)
%8 = block 2
%9 = block 6
%10:i32 = var
%11:i32 = var
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = block 2
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = phi %17, %18, 0:i32
%20 = block 2
%21 = block 2
%22 = block 2
%23 = phi %22, 0:i32, %19
%24 = phi %21, 0:i32, %23
%25 = phi %20, 0:i32, %24
%26 = phi %16, %19, %25
%27 = block 2
%28 = block 2
%29 = phi %28, %26, %10
%30 = phi %27, %29, %26
%31 = phi %15, %26, %30
%32 = phi %13, %14, %31
%33 = block 2
%34 = block 2
%35 = block 2
%36:i32 = var
%37 = phi %35, %36, %32
%38 = phi %34, %32, %37
%39 = phi %33, %32, %38
%40 = phi %12, %32, %39
%41 = block 2
%42:i32 = var
%43:i32 = var
%44 = phi %17, %43, 0:i32
%45 = phi %22, 0:i32, %44
%46 = phi %21, 0:i32, %45
%47 = phi %20, 0:i32, %46
%48 = phi %16, %44, %47
%49 = phi %13, %42, %48
%50 = phi %41, %49, %48
%51 = phi %9, %10, %11, %40, %40, %40, %50
%52 = block 2
%53 = block 2
%54:i32 = var
%55 = phi %53, %51, %54
%56 = phi %52, %51, %55
%57 = phi %8, %51, %56
%58 = block 2
%59:i32 = var
%60 = phi %58, 0:i32, %59
%61 = add %57, %60 (hasExternalUses)
%62 = sub %7, %61
%63:i32 = var
%64:i32 = var
%65 = phi %17, %63, %64
%66 = block 2
%67:i32 = var
%68 = phi %66, 16:i32, %67
%69 = phi %22, %64, %65
%70 = phi %21, -1:i32, %69
%71 = phi %20, %68, %70
%72 = phi %16, %65, %71
%73:i32 = var
%74 = phi %13, %73, %72
%75 = phi %41, %74, %72
%76 = phi %9, %72, %74, %74, %74, %74, %75
%77 = sub %62, %76 (hasExternalUses)
%78 = add %2, %77 (hasExternalUses)
%79 = phi %0, %78, %77
%80 = lshr %79, 8:i32 (hasExternalUses)
%81 = add %80, 1048320:i32
%82 = lshr %81, 16:i32
%83 = and %82, 8:i32
%84:i32 = var
blockpc %0 0 %84 1
%85:i32 = var
blockpc %0 1 %85 1
%86:i32 = var
blockpc %4 0 %86 1
%87:i32 = var
blockpc %4 1 %87 1
%88:i32 = var
blockpc %8 0 %88 1
%89:i32 = var
blockpc %8 1 %89 1
%90:i32 = var
blockpc %15 0 %90 1
%91:i32 = var
blockpc %15 1 %91 1
%92:i32 = var
blockpc %20 0 %92 1
%93:i32 = var
blockpc %20 1 %93 1
%94:i32 = var
blockpc %21 0 %94 1
%95:i32 = var
blockpc %21 1 %95 1
%96:i32 = var
blockpc %22 0 %96 1
%97:i32 = var
blockpc %22 1 %97 1
%98:i32 = var
blockpc %27 0 %98 1
%99:i32 = var
blockpc %27 1 %99 1
%100:i32 = var
blockpc %28 0 %100 1
%101:i32 = var
blockpc %28 1 %101 1
%102:i32 = var
blockpc %33 0 %102 1
%103:i32 = var
blockpc %33 1 %103 1
%104:i32 = var
blockpc %34 0 %104 1
%105:i32 = var
blockpc %34 1 %105 1
%106:i32 = var
blockpc %35 0 %106 1
%107:i32 = var
blockpc %35 1 %107 1
%108:i32 = var
blockpc %41 0 %108 1
%109:i32 = var
blockpc %41 1 %109 1
%110:i32 = var
blockpc %52 0 %110 1
%111:i32 = var
blockpc %52 1 %111 1
%112:i32 = var
blockpc %53 0 %112 1
%113:i32 = var
blockpc %53 1 %113 1
%114:i32 = var
blockpc %58 0 %114 1
%115:i32 = var
blockpc %58 1 %115 1
%116:i32 = var
blockpc %66 0 %116 1
%117:i32 = var
blockpc %66 1 %117 1
%118:i32 = var
%119:i32 = var
%120:i32 = var
%121:i32 = var
%122:i32 = var
%123:i32 = var
pc %118 1
pc %119 1
pc %120 1
pc %121 1
pc %122 1
pc %123 1
infer %83


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = lshr %137, 8:i32 (hasExternalUses)
%139:i32 = var
%140 = shl %138, %139
%141:i32 = var
blockpc %0 0 %141 1
%142:i32 = var
blockpc %0 1 %142 1
%143:i32 = var
blockpc %3 0 %143 1
%144:i32 = var
blockpc %3 1 %144 1
%145:i32 = var
blockpc %10 0 %145 1
%146:i32 = var
blockpc %10 1 %146 1
%147:i32 = var
blockpc %15 0 %147 1
%148:i32 = var
blockpc %15 1 %148 1
%149:i32 = var
blockpc %16 0 %149 1
%150:i32 = var
blockpc %16 1 %150 1
%151:i32 = var
blockpc %17 0 %151 1
%152:i32 = var
blockpc %17 1 %152 1
%153:i32 = var
blockpc %22 0 %153 1
%154:i32 = var
blockpc %22 1 %154 1
%155:i32 = var
blockpc %23 0 %155 1
%156:i32 = var
blockpc %23 1 %156 1
%157:i32 = var
blockpc %28 0 %157 1
%158:i32 = var
blockpc %28 1 %158 1
%159:i32 = var
blockpc %29 0 %159 1
%160:i32 = var
blockpc %29 1 %160 1
%161:i32 = var
blockpc %30 0 %161 1
%162:i32 = var
blockpc %30 1 %162 1
%163:i32 = var
blockpc %36 0 %163 1
%164:i32 = var
blockpc %36 1 %164 1
%165:i32 = var
blockpc %47 0 %165 1
%166:i32 = var
blockpc %47 1 %166 1
%167:i32 = var
blockpc %48 0 %167 1
%168:i32 = var
blockpc %48 1 %168 1
%169:i32 = var
blockpc %81 0 %169 1
%170:i32 = var
blockpc %81 1 %170 1
%171:i32 = var
blockpc %115 0 %171 1
%172:i32 = var
blockpc %115 1 %172 1
%173:i32 = var
blockpc %124 0 %173 1
%174:i32 = var
blockpc %124 1 %174 1
%175:i32 = var
%176:i32 = var
%177:i32 = var
%178:i32 = var
%179:i32 = var
%180:i32 = var
pc %175 1
pc %176 1
pc %177 1
pc %178 1
pc %179 1
pc %180 1
infer %140


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = lshr %137, 8:i32 (hasExternalUses)
%139:i32 = var
%140 = shl %138, %139 (hasExternalUses)
%141 = add %140, 520192:i32
%142:i32 = var
blockpc %0 0 %142 1
%143:i32 = var
blockpc %0 1 %143 1
%144:i32 = var
blockpc %3 0 %144 1
%145:i32 = var
blockpc %3 1 %145 1
%146:i32 = var
blockpc %10 0 %146 1
%147:i32 = var
blockpc %10 1 %147 1
%148:i32 = var
blockpc %15 0 %148 1
%149:i32 = var
blockpc %15 1 %149 1
%150:i32 = var
blockpc %16 0 %150 1
%151:i32 = var
blockpc %16 1 %151 1
%152:i32 = var
blockpc %17 0 %152 1
%153:i32 = var
blockpc %17 1 %153 1
%154:i32 = var
blockpc %22 0 %154 1
%155:i32 = var
blockpc %22 1 %155 1
%156:i32 = var
blockpc %23 0 %156 1
%157:i32 = var
blockpc %23 1 %157 1
%158:i32 = var
blockpc %28 0 %158 1
%159:i32 = var
blockpc %28 1 %159 1
%160:i32 = var
blockpc %29 0 %160 1
%161:i32 = var
blockpc %29 1 %161 1
%162:i32 = var
blockpc %30 0 %162 1
%163:i32 = var
blockpc %30 1 %163 1
%164:i32 = var
blockpc %36 0 %164 1
%165:i32 = var
blockpc %36 1 %165 1
%166:i32 = var
blockpc %47 0 %166 1
%167:i32 = var
blockpc %47 1 %167 1
%168:i32 = var
blockpc %48 0 %168 1
%169:i32 = var
blockpc %48 1 %169 1
%170:i32 = var
blockpc %81 0 %170 1
%171:i32 = var
blockpc %81 1 %171 1
%172:i32 = var
blockpc %115 0 %172 1
%173:i32 = var
blockpc %115 1 %173 1
%174:i32 = var
blockpc %124 0 %174 1
%175:i32 = var
blockpc %124 1 %175 1
%176:i32 = var
%177:i32 = var
%178:i32 = var
%179:i32 = var
%180:i32 = var
%181:i32 = var
pc %176 1
pc %177 1
pc %178 1
pc %179 1
pc %180 1
pc %181 1
infer %141


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, 0:i32, %5
%7 = add %3, %6 (hasExternalUses)
%8 = block 2
%9 = block 6
%10:i32 = var
%11:i32 = var
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = block 2
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = phi %17, %18, 0:i32
%20 = block 2
%21 = block 2
%22 = block 2
%23 = phi %22, 0:i32, %19
%24 = phi %21, 0:i32, %23
%25 = phi %20, 0:i32, %24
%26 = phi %16, %19, %25
%27 = block 2
%28 = block 2
%29 = phi %28, %26, %10
%30 = phi %27, %29, %26
%31 = phi %15, %26, %30
%32 = phi %13, %14, %31
%33 = block 2
%34 = block 2
%35 = block 2
%36:i32 = var
%37 = phi %35, %36, %32
%38 = phi %34, %32, %37
%39 = phi %33, %32, %38
%40 = phi %12, %32, %39
%41 = block 2
%42:i32 = var
%43:i32 = var
%44 = phi %17, %43, 0:i32
%45 = phi %22, 0:i32, %44
%46 = phi %21, 0:i32, %45
%47 = phi %20, 0:i32, %46
%48 = phi %16, %44, %47
%49 = phi %13, %42, %48
%50 = phi %41, %49, %48
%51 = phi %9, %10, %11, %40, %40, %40, %50
%52 = block 2
%53 = block 2
%54:i32 = var
%55 = phi %53, %51, %54
%56 = phi %52, %51, %55
%57 = phi %8, %51, %56
%58 = block 2
%59:i32 = var
%60 = phi %58, 0:i32, %59
%61 = add %57, %60 (hasExternalUses)
%62 = sub %7, %61
%63:i32 = var
%64:i32 = var
%65 = phi %17, %63, %64
%66 = block 2
%67:i32 = var
%68 = phi %66, 16:i32, %67
%69 = phi %22, %64, %65
%70 = phi %21, -1:i32, %69
%71 = phi %20, %68, %70
%72 = phi %16, %65, %71
%73:i32 = var
%74 = phi %13, %73, %72
%75 = phi %41, %74, %72
%76 = phi %9, %72, %74, %74, %74, %74, %75
%77 = sub %62, %76 (hasExternalUses)
%78 = add %2, %77 (hasExternalUses)
%79 = phi %0, %78, %77
%80 = lshr %79, 8:i32 (hasExternalUses)
%81:i32 = var
%82 = shl %80, %81 (hasExternalUses)
%83 = add %82, 520192:i32
%84 = lshr %83, 16:i32
%85:i32 = var
blockpc %0 0 %85 1
%86:i32 = var
blockpc %0 1 %86 1
%87:i32 = var
blockpc %4 0 %87 1
%88:i32 = var
blockpc %4 1 %88 1
%89:i32 = var
blockpc %8 0 %89 1
%90:i32 = var
blockpc %8 1 %90 1
%91:i32 = var
blockpc %15 0 %91 1
%92:i32 = var
blockpc %15 1 %92 1
%93:i32 = var
blockpc %20 0 %93 1
%94:i32 = var
blockpc %20 1 %94 1
%95:i32 = var
blockpc %21 0 %95 1
%96:i32 = var
blockpc %21 1 %96 1
%97:i32 = var
blockpc %22 0 %97 1
%98:i32 = var
blockpc %22 1 %98 1
%99:i32 = var
blockpc %27 0 %99 1
%100:i32 = var
blockpc %27 1 %100 1
%101:i32 = var
blockpc %28 0 %101 1
%102:i32 = var
blockpc %28 1 %102 1
%103:i32 = var
blockpc %33 0 %103 1
%104:i32 = var
blockpc %33 1 %104 1
%105:i32 = var
blockpc %34 0 %105 1
%106:i32 = var
blockpc %34 1 %106 1
%107:i32 = var
blockpc %35 0 %107 1
%108:i32 = var
blockpc %35 1 %108 1
%109:i32 = var
blockpc %41 0 %109 1
%110:i32 = var
blockpc %41 1 %110 1
%111:i32 = var
blockpc %52 0 %111 1
%112:i32 = var
blockpc %52 1 %112 1
%113:i32 = var
blockpc %53 0 %113 1
%114:i32 = var
blockpc %53 1 %114 1
%115:i32 = var
blockpc %58 0 %115 1
%116:i32 = var
blockpc %58 1 %116 1
%117:i32 = var
blockpc %66 0 %117 1
%118:i32 = var
blockpc %66 1 %118 1
%119:i32 = var
%120:i32 = var
%121:i32 = var
%122:i32 = var
%123:i32 = var
%124:i32 = var
pc %119 1
pc %120 1
pc %121 1
pc %122 1
pc %123 1
pc %124 1
infer %84


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4:i32 = var
%5 = sub %3, %4
%6 = block 6
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %10, %11
%19 = phi %16, -1:i32, %18
%20 = phi %12, %15, %19
%21 = phi %7, %11, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %21
%25 = block 2
%26 = phi %25, %24, %21
%27 = phi %6, %21, %24, %24, %24, %24, %26
%28 = sub %5, %27 (hasExternalUses)
%29 = add %2, %28 (hasExternalUses)
%30 = phi %0, %29, %28
%31 = lshr %30, 8:i32 (hasExternalUses)
%32:i32 = var
%33 = shl %31, %32 (hasExternalUses)
%34 = add %33, 520192:i32
%35 = lshr %34, 16:i32
%36 = and %35, 4:i32
%37:i32 = var
blockpc %0 0 %37 1
%38:i32 = var
blockpc %0 1 %38 1
%39:i32 = var
blockpc %12 0 %39 1
%40:i32 = var
blockpc %12 1 %40 1
%41:i32 = var
blockpc %13 0 %41 1
%42:i32 = var
blockpc %13 1 %42 1
%43:i32 = var
blockpc %16 0 %43 1
%44:i32 = var
blockpc %16 1 %44 1
%45:i32 = var
blockpc %17 0 %45 1
%46:i32 = var
blockpc %17 1 %46 1
%47:i32 = var
blockpc %25 0 %47 1
%48:i32 = var
blockpc %25 1 %48 1
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
infer %36


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = lshr %137, 8:i32 (hasExternalUses)
%139:i32 = var
%140 = shl %138, %139 (hasExternalUses)
%141:i32 = var
%142 = shl %140, %141
%143:i32 = var
blockpc %0 0 %143 1
%144:i32 = var
blockpc %0 1 %144 1
%145:i32 = var
blockpc %3 0 %145 1
%146:i32 = var
blockpc %3 1 %146 1
%147:i32 = var
blockpc %10 0 %147 1
%148:i32 = var
blockpc %10 1 %148 1
%149:i32 = var
blockpc %15 0 %149 1
%150:i32 = var
blockpc %15 1 %150 1
%151:i32 = var
blockpc %16 0 %151 1
%152:i32 = var
blockpc %16 1 %152 1
%153:i32 = var
blockpc %17 0 %153 1
%154:i32 = var
blockpc %17 1 %154 1
%155:i32 = var
blockpc %22 0 %155 1
%156:i32 = var
blockpc %22 1 %156 1
%157:i32 = var
blockpc %23 0 %157 1
%158:i32 = var
blockpc %23 1 %158 1
%159:i32 = var
blockpc %28 0 %159 1
%160:i32 = var
blockpc %28 1 %160 1
%161:i32 = var
blockpc %29 0 %161 1
%162:i32 = var
blockpc %29 1 %162 1
%163:i32 = var
blockpc %30 0 %163 1
%164:i32 = var
blockpc %30 1 %164 1
%165:i32 = var
blockpc %36 0 %165 1
%166:i32 = var
blockpc %36 1 %166 1
%167:i32 = var
blockpc %47 0 %167 1
%168:i32 = var
blockpc %47 1 %168 1
%169:i32 = var
blockpc %48 0 %169 1
%170:i32 = var
blockpc %48 1 %170 1
%171:i32 = var
blockpc %81 0 %171 1
%172:i32 = var
blockpc %81 1 %172 1
%173:i32 = var
blockpc %115 0 %173 1
%174:i32 = var
blockpc %115 1 %174 1
%175:i32 = var
blockpc %124 0 %175 1
%176:i32 = var
blockpc %124 1 %176 1
%177:i32 = var
%178:i32 = var
%179:i32 = var
%180:i32 = var
%181:i32 = var
%182:i32 = var
pc %177 1
pc %178 1
pc %179 1
pc %180 1
pc %181 1
pc %182 1
infer %142


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, 0:i32, %5
%7 = add %3, %6 (hasExternalUses)
%8 = block 2
%9 = block 6
%10:i32 = var
%11:i32 = var
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = block 2
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = phi %17, %18, 0:i32
%20 = block 2
%21 = block 2
%22 = block 2
%23 = phi %22, 0:i32, %19
%24 = phi %21, 0:i32, %23
%25 = phi %20, 0:i32, %24
%26 = phi %16, %19, %25
%27 = block 2
%28 = block 2
%29 = phi %28, %26, %10
%30 = phi %27, %29, %26
%31 = phi %15, %26, %30
%32 = phi %13, %14, %31
%33 = block 2
%34 = block 2
%35 = block 2
%36:i32 = var
%37 = phi %35, %36, %32
%38 = phi %34, %32, %37
%39 = phi %33, %32, %38
%40 = phi %12, %32, %39
%41 = block 2
%42:i32 = var
%43:i32 = var
%44 = phi %17, %43, 0:i32
%45 = phi %22, 0:i32, %44
%46 = phi %21, 0:i32, %45
%47 = phi %20, 0:i32, %46
%48 = phi %16, %44, %47
%49 = phi %13, %42, %48
%50 = phi %41, %49, %48
%51 = phi %9, %10, %11, %40, %40, %40, %50
%52 = block 2
%53 = block 2
%54:i32 = var
%55 = phi %53, %51, %54
%56 = phi %52, %51, %55
%57 = phi %8, %51, %56
%58 = block 2
%59:i32 = var
%60 = phi %58, 0:i32, %59
%61 = add %57, %60 (hasExternalUses)
%62 = sub %7, %61
%63:i32 = var
%64:i32 = var
%65 = phi %17, %63, %64
%66 = block 2
%67:i32 = var
%68 = phi %66, 16:i32, %67
%69 = phi %22, %64, %65
%70 = phi %21, -1:i32, %69
%71 = phi %20, %68, %70
%72 = phi %16, %65, %71
%73:i32 = var
%74 = phi %13, %73, %72
%75 = phi %41, %74, %72
%76 = phi %9, %72, %74, %74, %74, %74, %75
%77 = sub %62, %76 (hasExternalUses)
%78 = add %2, %77 (hasExternalUses)
%79 = phi %0, %78, %77
%80 = lshr %79, 8:i32 (hasExternalUses)
%81:i32 = var
%82 = shl %80, %81 (hasExternalUses)
%83:i32 = var
%84 = shl %82, %83 (hasExternalUses)
%85 = add %84, 245760:i32
%86:i32 = var
blockpc %0 0 %86 1
%87:i32 = var
blockpc %0 1 %87 1
%88:i32 = var
blockpc %4 0 %88 1
%89:i32 = var
blockpc %4 1 %89 1
%90:i32 = var
blockpc %8 0 %90 1
%91:i32 = var
blockpc %8 1 %91 1
%92:i32 = var
blockpc %15 0 %92 1
%93:i32 = var
blockpc %15 1 %93 1
%94:i32 = var
blockpc %20 0 %94 1
%95:i32 = var
blockpc %20 1 %95 1
%96:i32 = var
blockpc %21 0 %96 1
%97:i32 = var
blockpc %21 1 %97 1
%98:i32 = var
blockpc %22 0 %98 1
%99:i32 = var
blockpc %22 1 %99 1
%100:i32 = var
blockpc %27 0 %100 1
%101:i32 = var
blockpc %27 1 %101 1
%102:i32 = var
blockpc %28 0 %102 1
%103:i32 = var
blockpc %28 1 %103 1
%104:i32 = var
blockpc %33 0 %104 1
%105:i32 = var
blockpc %33 1 %105 1
%106:i32 = var
blockpc %34 0 %106 1
%107:i32 = var
blockpc %34 1 %107 1
%108:i32 = var
blockpc %35 0 %108 1
%109:i32 = var
blockpc %35 1 %109 1
%110:i32 = var
blockpc %41 0 %110 1
%111:i32 = var
blockpc %41 1 %111 1
%112:i32 = var
blockpc %52 0 %112 1
%113:i32 = var
blockpc %52 1 %113 1
%114:i32 = var
blockpc %53 0 %114 1
%115:i32 = var
blockpc %53 1 %115 1
%116:i32 = var
blockpc %58 0 %116 1
%117:i32 = var
blockpc %58 1 %117 1
%118:i32 = var
blockpc %66 0 %118 1
%119:i32 = var
blockpc %66 1 %119 1
%120:i32 = var
%121:i32 = var
%122:i32 = var
%123:i32 = var
%124:i32 = var
%125:i32 = var
pc %120 1
pc %121 1
pc %122 1
pc %123 1
pc %124 1
pc %125 1
infer %85


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4:i32 = var
%5 = sub %3, %4
%6 = block 6
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %10, %11
%19 = phi %16, -1:i32, %18
%20 = phi %12, %15, %19
%21 = phi %7, %11, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %21
%25 = block 2
%26 = phi %25, %24, %21
%27 = phi %6, %21, %24, %24, %24, %24, %26
%28 = sub %5, %27 (hasExternalUses)
%29 = add %2, %28 (hasExternalUses)
%30 = phi %0, %29, %28
%31 = lshr %30, 8:i32 (hasExternalUses)
%32:i32 = var
%33 = shl %31, %32 (hasExternalUses)
%34:i32 = var
%35 = shl %33, %34 (hasExternalUses)
%36 = add %35, 245760:i32
%37 = lshr %36, 16:i32
%38:i32 = var
blockpc %0 0 %38 1
%39:i32 = var
blockpc %0 1 %39 1
%40:i32 = var
blockpc %12 0 %40 1
%41:i32 = var
blockpc %12 1 %41 1
%42:i32 = var
blockpc %13 0 %42 1
%43:i32 = var
blockpc %13 1 %43 1
%44:i32 = var
blockpc %16 0 %44 1
%45:i32 = var
blockpc %16 1 %45 1
%46:i32 = var
blockpc %17 0 %46 1
%47:i32 = var
blockpc %17 1 %47 1
%48:i32 = var
blockpc %25 0 %48 1
%49:i32 = var
blockpc %25 1 %49 1
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
infer %37


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = block 6
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %8, %9
%17 = phi %14, -1:i32, %16
%18 = phi %10, %13, %17
%19 = phi %5, %9, %18
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, %19
%23 = block 2
%24 = phi %23, %22, %19
%25 = phi %4, %19, %22, %22, %22, %22, %24
%26 = sub %3, %25 (hasExternalUses)
%27 = add %2, %26 (hasExternalUses)
%28 = phi %0, %27, %26
%29 = lshr %28, 8:i32 (hasExternalUses)
%30:i32 = var
%31 = shl %29, %30 (hasExternalUses)
%32:i32 = var
%33 = shl %31, %32 (hasExternalUses)
%34 = add %33, 245760:i32
%35 = lshr %34, 16:i32
%36 = and %35, 2:i32
%37:i32 = var
blockpc %0 0 %37 1
%38:i32 = var
blockpc %0 1 %38 1
%39:i32 = var
blockpc %10 0 %39 1
%40:i32 = var
blockpc %10 1 %40 1
%41:i32 = var
blockpc %11 0 %41 1
%42:i32 = var
blockpc %11 1 %42 1
%43:i32 = var
blockpc %14 0 %43 1
%44:i32 = var
blockpc %14 1 %44 1
%45:i32 = var
blockpc %15 0 %45 1
%46:i32 = var
blockpc %15 1 %46 1
%47:i32 = var
blockpc %23 0 %47 1
%48:i32 = var
blockpc %23 1 %48 1
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
pc %54 1
infer %36


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = block 6
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %8, %9
%17 = phi %14, -1:i32, %16
%18 = phi %10, %13, %17
%19 = phi %5, %9, %18
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, %19
%23 = block 2
%24 = phi %23, %22, %19
%25 = phi %4, %19, %22, %22, %22, %22, %24
%26 = sub %3, %25 (hasExternalUses)
%27 = add %2, %26 (hasExternalUses)
%28 = phi %0, %27, %26
%29 = lshr %28, 8:i32 (hasExternalUses)
%30:i32 = var
%31 = shl %29, %30 (hasExternalUses)
%32 = add %31, 520192:i32
%33 = lshr %32, 16:i32
%34 = and %33, 4:i32 (hasExternalUses)
%35 = or %34, %30
%36:i32 = var
blockpc %0 0 %36 1
%37:i32 = var
blockpc %0 1 %37 1
%38:i32 = var
blockpc %10 0 %38 1
%39:i32 = var
blockpc %10 1 %39 1
%40:i32 = var
blockpc %11 0 %40 1
%41:i32 = var
blockpc %11 1 %41 1
%42:i32 = var
blockpc %14 0 %42 1
%43:i32 = var
blockpc %14 1 %43 1
%44:i32 = var
blockpc %15 0 %44 1
%45:i32 = var
blockpc %15 1 %45 1
%46:i32 = var
blockpc %23 0 %46 1
%47:i32 = var
blockpc %23 1 %47 1
%48:i32 = var
%49:i32 = var
%50:i32 = var
%51:i32 = var
%52:i32 = var
%53:i32 = var
pc %48 1
pc %49 1
pc %50 1
pc %51 1
pc %52 1
pc %53 1
infer %35


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = phi %0, %3, %2
%5 = lshr %4, 8:i32 (hasExternalUses)
%6 = add %5, 1048320:i32
%7 = lshr %6, 16:i32
%8 = and %7, 8:i32
%9 = shl %5, %8
%10 = add %9, 520192:i32
%11 = lshr %10, 16:i32
%12 = and %11, 4:i32
%13 = or %12, %8
%14 = shl %9, %12 (hasExternalUses)
%15 = add %14, 245760:i32
%16 = lshr %15, 16:i32
%17 = and %16, 2:i32 (hasExternalUses)
%18 = or %13, %17
%19:i32 = var
%20 = and %19, 3:i32
%21 = eq %20, 1:i32
blockpc %0 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %0 1 %23 1
%24 = eq %5, 0:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
%28:i32 = var
%29 = eq %27, %28
%30:i32 = zext %29
%31 = eq %30, 0:i32
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35:i32 = var
pc %26 1
pc %31 1
pc %32 1
pc %33 1
pc %34 1
pc %35 1
infer %18


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, 0:i32, %5
%7 = add %3, %6 (hasExternalUses)
%8 = block 2
%9 = block 6
%10:i32 = var
%11:i32 = var
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = block 2
%16 = block 2
%17 = block 2
%18:i32 = var
%19 = phi %17, %18, 0:i32
%20 = block 2
%21 = block 2
%22 = block 2
%23 = phi %22, 0:i32, %19
%24 = phi %21, 0:i32, %23
%25 = phi %20, 0:i32, %24
%26 = phi %16, %19, %25
%27 = block 2
%28 = block 2
%29 = phi %28, %26, %10
%30 = phi %27, %29, %26
%31 = phi %15, %26, %30
%32 = phi %13, %14, %31
%33 = block 2
%34 = block 2
%35 = block 2
%36:i32 = var
%37 = phi %35, %36, %32
%38 = phi %34, %32, %37
%39 = phi %33, %32, %38
%40 = phi %12, %32, %39
%41 = block 2
%42:i32 = var
%43:i32 = var
%44 = phi %17, %43, 0:i32
%45 = phi %22, 0:i32, %44
%46 = phi %21, 0:i32, %45
%47 = phi %20, 0:i32, %46
%48 = phi %16, %44, %47
%49 = phi %13, %42, %48
%50 = phi %41, %49, %48
%51 = phi %9, %10, %11, %40, %40, %40, %50
%52 = block 2
%53 = block 2
%54:i32 = var
%55 = phi %53, %51, %54
%56 = phi %52, %51, %55
%57 = phi %8, %51, %56
%58 = block 2
%59:i32 = var
%60 = phi %58, 0:i32, %59
%61 = add %57, %60 (hasExternalUses)
%62 = sub %7, %61
%63:i32 = var
%64:i32 = var
%65 = phi %17, %63, %64
%66 = block 2
%67:i32 = var
%68 = phi %66, 16:i32, %67
%69 = phi %22, %64, %65
%70 = phi %21, -1:i32, %69
%71 = phi %20, %68, %70
%72 = phi %16, %65, %71
%73:i32 = var
%74 = phi %13, %73, %72
%75 = phi %41, %74, %72
%76 = phi %9, %72, %74, %74, %74, %74, %75
%77 = sub %62, %76 (hasExternalUses)
%78 = add %2, %77 (hasExternalUses)
%79 = phi %0, %78, %77
%80 = lshr %79, 8:i32 (hasExternalUses)
%81:i32 = var
%82 = shl %80, %81 (hasExternalUses)
%83:i32 = var
%84 = shl %82, %83 (hasExternalUses)
%85:i32 = var
%86 = shl %84, %85
%87:i32 = var
blockpc %0 0 %87 1
%88:i32 = var
blockpc %0 1 %88 1
%89:i32 = var
blockpc %4 0 %89 1
%90:i32 = var
blockpc %4 1 %90 1
%91:i32 = var
blockpc %8 0 %91 1
%92:i32 = var
blockpc %8 1 %92 1
%93:i32 = var
blockpc %15 0 %93 1
%94:i32 = var
blockpc %15 1 %94 1
%95:i32 = var
blockpc %20 0 %95 1
%96:i32 = var
blockpc %20 1 %96 1
%97:i32 = var
blockpc %21 0 %97 1
%98:i32 = var
blockpc %21 1 %98 1
%99:i32 = var
blockpc %22 0 %99 1
%100:i32 = var
blockpc %22 1 %100 1
%101:i32 = var
blockpc %27 0 %101 1
%102:i32 = var
blockpc %27 1 %102 1
%103:i32 = var
blockpc %28 0 %103 1
%104:i32 = var
blockpc %28 1 %104 1
%105:i32 = var
blockpc %33 0 %105 1
%106:i32 = var
blockpc %33 1 %106 1
%107:i32 = var
blockpc %34 0 %107 1
%108:i32 = var
blockpc %34 1 %108 1
%109:i32 = var
blockpc %35 0 %109 1
%110:i32 = var
blockpc %35 1 %110 1
%111:i32 = var
blockpc %41 0 %111 1
%112:i32 = var
blockpc %41 1 %112 1
%113:i32 = var
blockpc %52 0 %113 1
%114:i32 = var
blockpc %52 1 %114 1
%115:i32 = var
blockpc %53 0 %115 1
%116:i32 = var
blockpc %53 1 %116 1
%117:i32 = var
blockpc %58 0 %117 1
%118:i32 = var
blockpc %58 1 %118 1
%119:i32 = var
blockpc %66 0 %119 1
%120:i32 = var
blockpc %66 1 %120 1
%121:i32 = var
%122:i32 = var
%123:i32 = var
%124:i32 = var
%125:i32 = var
%126:i32 = var
pc %121 1
pc %122 1
pc %123 1
pc %124 1
pc %125 1
pc %126 1
infer %86


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = lshr %3, 8:i32 (hasExternalUses)
%5:i32 = var
%6 = lshr %5, 16:i32
%7 = and %6, 8:i32
%8 = shl %4, %7
%9 = add %8, 520192:i32
%10 = lshr %9, 16:i32
%11 = and %10, 4:i32
%12 = or %11, %7
%13 = shl %8, %11 (hasExternalUses)
%14 = add %13, 245760:i32
%15 = lshr %14, 16:i32
%16 = and %15, 2:i32 (hasExternalUses)
%17 = or %12, %16
%18 = sub 14:i32, %17
%19:i32 = var
%20 = and %19, 3:i32
%21 = eq %20, 1:i32
blockpc %0 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %0 1 %23 1
%24 = eq %4, 0:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
%28:i32 = var
%29 = eq %27, %28
%30:i32 = zext %29
%31 = eq %30, 0:i32
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35:i32 = var
pc %26 1
pc %31 1
pc %32 1
pc %33 1
pc %34 1
pc %35 1
infer %18


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4:i32 = var
%5 = sub %3, %4
%6 = block 6
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %10, %11
%19 = phi %16, -1:i32, %18
%20 = phi %12, %15, %19
%21 = phi %7, %11, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %21
%25 = block 2
%26 = phi %25, %24, %21
%27 = phi %6, %21, %24, %24, %24, %24, %26
%28 = sub %5, %27 (hasExternalUses)
%29 = add %2, %28 (hasExternalUses)
%30 = phi %0, %29, %28
%31 = lshr %30, 8:i32 (hasExternalUses)
%32:i32 = var
%33 = shl %31, %32 (hasExternalUses)
%34:i32 = var
%35 = shl %33, %34 (hasExternalUses)
%36:i32 = var
%37 = shl %35, %36
%38 = lshr %37, 15:i32
%39:i32 = var
blockpc %0 0 %39 1
%40:i32 = var
blockpc %0 1 %40 1
%41:i32 = var
blockpc %12 0 %41 1
%42:i32 = var
blockpc %12 1 %42 1
%43:i32 = var
blockpc %13 0 %43 1
%44:i32 = var
blockpc %13 1 %44 1
%45:i32 = var
blockpc %16 0 %45 1
%46:i32 = var
blockpc %16 1 %46 1
%47:i32 = var
blockpc %17 0 %47 1
%48:i32 = var
blockpc %17 1 %48 1
%49:i32 = var
blockpc %25 0 %49 1
%50:i32 = var
blockpc %25 1 %50 1
%51:i32 = var
%52:i32 = var
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
pc %51 1
pc %52 1
pc %53 1
pc %54 1
pc %55 1
pc %56 1
infer %38


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = lshr %3, 8:i32 (hasExternalUses)
%5:i32 = var
%6 = and %5, 8:i32
%7 = shl %4, %6
%8 = add %7, 520192:i32
%9 = lshr %8, 16:i32
%10 = and %9, 4:i32
%11 = or %10, %6
%12 = shl %7, %10
%13 = add %12, 245760:i32
%14 = lshr %13, 16:i32
%15 = and %14, 2:i32
%16 = or %11, %15
%17 = sub 14:i32, %16
%18 = shl %12, %15
%19 = lshr %18, 15:i32
%20 = add %17, %19
%21:i32 = var
%22 = and %21, 3:i32
%23 = eq %22, 1:i32
blockpc %0 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %0 1 %25 1
%26 = eq %4, 0:i32
%27:i32 = zext %26
%28 = eq %27, 0:i32
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %20


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3 = add %2, 520192:i32
%4 = lshr %3, 16:i32
%5 = and %4, 4:i32
%6 = or %5, %1
%7 = shl %2, %5
%8 = add %7, 245760:i32
%9 = lshr %8, 16:i32
%10 = and %9, 2:i32
%11 = or %6, %10
%12 = sub 14:i32, %11
%13 = shl %7, %10
%14 = lshr %13, 15:i32
%15 = add %12, %14 (hasExternalUses)
%16 = add %15, 7:i32
%17 = eq %0, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = block 2
%22 = block 6
%23 = phi %22, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%24 = eq %23, 143:i32
blockpc %21 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %21 1 %26 1
%27:i32 = var
%28:i32 = var
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36 = block 2
%37:i32 = var
%38 = phi %36, %37, 0:i32
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = phi %45, 0:i32, %38
%49 = phi %42, 0:i32, %48
%50 = phi %39, 0:i32, %49
%51 = phi %35, %38, %50
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = phi %55, %51, %27
%59 = phi %52, %58, %51
%60 = phi %32, %51, %59
%61 = phi %30, %31, %60
%62 = block 2
%63:i32 = var
blockpc %62 0 %63 1
%64:i32 = var
blockpc %62 1 %64 1
%65 = block 2
%66:i32 = var
blockpc %65 0 %66 1
%67:i32 = var
blockpc %65 1 %67 1
%68 = block 2
%69:i32 = var
blockpc %68 0 %69 1
%70:i32 = var
blockpc %68 1 %70 1
%71:i32 = var
%72 = phi %68, %71, %61
%73 = phi %65, %61, %72
%74 = phi %62, %61, %73
%75 = phi %29, %61, %74
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79:i32 = var
%80:i32 = var
%81 = phi %36, %80, 0:i32
%82 = phi %45, 0:i32, %81
%83 = phi %42, 0:i32, %82
%84 = phi %39, 0:i32, %83
%85 = phi %35, %81, %84
%86 = phi %30, %79, %85
%87 = phi %76, %86, %85
%88 = phi %22, %27, %28, %75, %75, %75, %87
%89 = block 2
%90:i32 = var
blockpc %89 0 %90 1
%91:i32 = var
blockpc %89 1 %91 1
%92 = block 2
%93:i32 = var
blockpc %92 0 %93 1
%94:i32 = var
blockpc %92 1 %94 1
%95:i32 = var
%96 = phi %92, %88, %95
%97 = phi %89, %88, %96
%98 = phi %21, %88, %97
%99:i32 = var
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103 = phi %36, %102, 0:i32
%104 = phi %45, 0:i32, %103
%105 = phi %42, 0:i32, %104
%106 = phi %39, 0:i32, %105
%107 = phi %35, %103, %106
%108 = phi %55, %107, %99
%109 = phi %52, %108, %107
%110 = phi %32, %107, %109
%111 = phi %30, %101, %110
%112 = phi %68, %100, %111
%113 = phi %65, %111, %112
%114 = phi %62, %111, %113
%115 = phi %29, %111, %114
%116:i32 = var
%117:i32 = var
%118:i32 = var
%119 = phi %36, %118, 0:i32
%120 = phi %45, 0:i32, %119
%121 = phi %42, 0:i32, %120
%122 = phi %39, 0:i32, %121
%123 = phi %35, %119, %122
%124 = phi %30, %117, %123
%125 = phi %76, %124, %123
%126 = phi %22, %99, %100, %115, %115, %116, %125
%127 = block 2
%128:i32 = var
blockpc %127 0 %128 1
%129:i32 = var
blockpc %127 1 %129 1
%130:i32 = var
%131:i32 = var
%132 = phi %36, %131, 0:i32
%133 = phi %45, 0:i32, %132
%134 = phi %42, 0:i32, %133
%135 = phi %39, 0:i32, %134
%136 = phi %35, %132, %135
%137:i32 = var
%138 = phi %30, %137, %136
%139 = block 3
%140:i32 = var
%141:i32 = var
%142 = phi %36, %141, 0:i32
%143 = phi %45, 0:i32, %142
%144 = phi %42, 0:i32, %143
%145 = phi %39, 0:i32, %144
%146 = phi %35, %142, %145
%147 = phi %55, %99, %146
%148 = phi %52, %147, 0:i32
%149 = phi %32, %146, %148
%150 = phi %30, %140, %149
%151 = phi %68, %150, 0:i32
%152 = phi %65, 0:i32, %151
%153 = phi %62, %150, %152
%154 = phi %29, 0:i32, %153
%155 = phi %139, 0:i32, 0:i32, %154
%156 = phi %76, %155, 0:i32
%157 = phi %22, %136, %138, %138, %138, %138, %156
%158 = phi %127, %130, %157
%159 = phi %92, %126, %158
%160 = phi %89, %126, %159
%161 = phi %21, %126, %160
%162 = add %98, %161
%163 = block 2
%164:i32 = var
blockpc %163 0 %164 1
%165:i32 = var
blockpc %163 1 %165 1
%166:i32 = var
%167 = phi %163, 0:i32, %166
%168 = add %162, %167
%169 = eq %20, %168
%170:i32 = zext %169
%171 = eq %170, 0:i32
%172:i32 = var
%173:i32 = var
%174:i32 = var
%175:i32 = var
pc %19 1
pc %171 1
pc %172 1
pc %173 1
pc %174 1
pc %175 1
infer %16


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138:i32 = var
%139 = lshr %137, %138
%140:i32 = var
blockpc %0 0 %140 1
%141:i32 = var
blockpc %0 1 %141 1
%142:i32 = var
blockpc %3 0 %142 1
%143:i32 = var
blockpc %3 1 %143 1
%144:i32 = var
blockpc %10 0 %144 1
%145:i32 = var
blockpc %10 1 %145 1
%146:i32 = var
blockpc %15 0 %146 1
%147:i32 = var
blockpc %15 1 %147 1
%148:i32 = var
blockpc %16 0 %148 1
%149:i32 = var
blockpc %16 1 %149 1
%150:i32 = var
blockpc %17 0 %150 1
%151:i32 = var
blockpc %17 1 %151 1
%152:i32 = var
blockpc %22 0 %152 1
%153:i32 = var
blockpc %22 1 %153 1
%154:i32 = var
blockpc %23 0 %154 1
%155:i32 = var
blockpc %23 1 %155 1
%156:i32 = var
blockpc %28 0 %156 1
%157:i32 = var
blockpc %28 1 %157 1
%158:i32 = var
blockpc %29 0 %158 1
%159:i32 = var
blockpc %29 1 %159 1
%160:i32 = var
blockpc %30 0 %160 1
%161:i32 = var
blockpc %30 1 %161 1
%162:i32 = var
blockpc %36 0 %162 1
%163:i32 = var
blockpc %36 1 %163 1
%164:i32 = var
blockpc %47 0 %164 1
%165:i32 = var
blockpc %47 1 %165 1
%166:i32 = var
blockpc %48 0 %166 1
%167:i32 = var
blockpc %48 1 %167 1
%168:i32 = var
blockpc %81 0 %168 1
%169:i32 = var
blockpc %81 1 %169 1
%170:i32 = var
blockpc %115 0 %170 1
%171:i32 = var
blockpc %115 1 %171 1
%172:i32 = var
blockpc %124 0 %172 1
%173:i32 = var
blockpc %124 1 %173 1
%174:i32 = var
%175:i32 = var
%176:i32 = var
%177:i32 = var
%178:i32 = var
%179:i32 = var
pc %174 1
pc %175 1
pc %176 1
pc %177 1
pc %178 1
pc %179 1
infer %139


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138:i32 = var
%139 = lshr %137, %138
%140 = and %139, 1:i32
%141:i32 = var
blockpc %0 0 %141 1
%142:i32 = var
blockpc %0 1 %142 1
%143:i32 = var
blockpc %3 0 %143 1
%144:i32 = var
blockpc %3 1 %144 1
%145:i32 = var
blockpc %10 0 %145 1
%146:i32 = var
blockpc %10 1 %146 1
%147:i32 = var
blockpc %15 0 %147 1
%148:i32 = var
blockpc %15 1 %148 1
%149:i32 = var
blockpc %16 0 %149 1
%150:i32 = var
blockpc %16 1 %150 1
%151:i32 = var
blockpc %17 0 %151 1
%152:i32 = var
blockpc %17 1 %152 1
%153:i32 = var
blockpc %22 0 %153 1
%154:i32 = var
blockpc %22 1 %154 1
%155:i32 = var
blockpc %23 0 %155 1
%156:i32 = var
blockpc %23 1 %156 1
%157:i32 = var
blockpc %28 0 %157 1
%158:i32 = var
blockpc %28 1 %158 1
%159:i32 = var
blockpc %29 0 %159 1
%160:i32 = var
blockpc %29 1 %160 1
%161:i32 = var
blockpc %30 0 %161 1
%162:i32 = var
blockpc %30 1 %162 1
%163:i32 = var
blockpc %36 0 %163 1
%164:i32 = var
blockpc %36 1 %164 1
%165:i32 = var
blockpc %47 0 %165 1
%166:i32 = var
blockpc %47 1 %166 1
%167:i32 = var
blockpc %48 0 %167 1
%168:i32 = var
blockpc %48 1 %168 1
%169:i32 = var
blockpc %81 0 %169 1
%170:i32 = var
blockpc %81 1 %170 1
%171:i32 = var
blockpc %115 0 %171 1
%172:i32 = var
blockpc %115 1 %172 1
%173:i32 = var
blockpc %124 0 %173 1
%174:i32 = var
blockpc %124 1 %174 1
%175:i32 = var
%176:i32 = var
%177:i32 = var
%178:i32 = var
%179:i32 = var
%180:i32 = var
pc %175 1
pc %176 1
pc %177 1
pc %178 1
pc %179 1
pc %180 1
infer %140


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3 = add %2, 520192:i32
%4 = lshr %3, 16:i32
%5 = and %4, 4:i32
%6 = or %5, %1
%7 = shl %2, %5
%8 = add %7, 245760:i32
%9 = lshr %8, 16:i32
%10 = and %9, 2:i32
%11 = or %6, %10
%12 = sub 14:i32, %11
%13 = shl %7, %10
%14 = lshr %13, 15:i32
%15 = add %12, %14 (hasExternalUses)
%16 = shl %15, 1:i32
%17 = eq %0, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = block 2
%22 = block 6
%23 = phi %22, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%24 = eq %23, 143:i32
blockpc %21 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %21 1 %26 1
%27:i32 = var
%28:i32 = var
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35 = block 2
%36 = block 2
%37:i32 = var
%38 = phi %36, %37, 0:i32
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = block 2
%43:i32 = var
blockpc %42 0 %43 1
%44:i32 = var
blockpc %42 1 %44 1
%45 = block 2
%46:i32 = var
blockpc %45 0 %46 1
%47:i32 = var
blockpc %45 1 %47 1
%48 = phi %45, 0:i32, %38
%49 = phi %42, 0:i32, %48
%50 = phi %39, 0:i32, %49
%51 = phi %35, %38, %50
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = phi %55, %51, %27
%59 = phi %52, %58, %51
%60 = phi %32, %51, %59
%61 = phi %30, %31, %60
%62 = block 2
%63:i32 = var
blockpc %62 0 %63 1
%64:i32 = var
blockpc %62 1 %64 1
%65 = block 2
%66:i32 = var
blockpc %65 0 %66 1
%67:i32 = var
blockpc %65 1 %67 1
%68 = block 2
%69:i32 = var
blockpc %68 0 %69 1
%70:i32 = var
blockpc %68 1 %70 1
%71:i32 = var
%72 = phi %68, %71, %61
%73 = phi %65, %61, %72
%74 = phi %62, %61, %73
%75 = phi %29, %61, %74
%76 = block 2
%77:i32 = var
blockpc %76 0 %77 1
%78:i32 = var
blockpc %76 1 %78 1
%79:i32 = var
%80:i32 = var
%81 = phi %36, %80, 0:i32
%82 = phi %45, 0:i32, %81
%83 = phi %42, 0:i32, %82
%84 = phi %39, 0:i32, %83
%85 = phi %35, %81, %84
%86 = phi %30, %79, %85
%87 = phi %76, %86, %85
%88 = phi %22, %27, %28, %75, %75, %75, %87
%89 = block 2
%90:i32 = var
blockpc %89 0 %90 1
%91:i32 = var
blockpc %89 1 %91 1
%92 = block 2
%93:i32 = var
blockpc %92 0 %93 1
%94:i32 = var
blockpc %92 1 %94 1
%95:i32 = var
%96 = phi %92, %88, %95
%97 = phi %89, %88, %96
%98 = phi %21, %88, %97
%99:i32 = var
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103 = phi %36, %102, 0:i32
%104 = phi %45, 0:i32, %103
%105 = phi %42, 0:i32, %104
%106 = phi %39, 0:i32, %105
%107 = phi %35, %103, %106
%108 = phi %55, %107, %99
%109 = phi %52, %108, %107
%110 = phi %32, %107, %109
%111 = phi %30, %101, %110
%112 = phi %68, %100, %111
%113 = phi %65, %111, %112
%114 = phi %62, %111, %113
%115 = phi %29, %111, %114
%116:i32 = var
%117:i32 = var
%118:i32 = var
%119 = phi %36, %118, 0:i32
%120 = phi %45, 0:i32, %119
%121 = phi %42, 0:i32, %120
%122 = phi %39, 0:i32, %121
%123 = phi %35, %119, %122
%124 = phi %30, %117, %123
%125 = phi %76, %124, %123
%126 = phi %22, %99, %100, %115, %115, %116, %125
%127 = block 2
%128:i32 = var
blockpc %127 0 %128 1
%129:i32 = var
blockpc %127 1 %129 1
%130:i32 = var
%131:i32 = var
%132 = phi %36, %131, 0:i32
%133 = phi %45, 0:i32, %132
%134 = phi %42, 0:i32, %133
%135 = phi %39, 0:i32, %134
%136 = phi %35, %132, %135
%137:i32 = var
%138 = phi %30, %137, %136
%139 = block 3
%140:i32 = var
%141:i32 = var
%142 = phi %36, %141, 0:i32
%143 = phi %45, 0:i32, %142
%144 = phi %42, 0:i32, %143
%145 = phi %39, 0:i32, %144
%146 = phi %35, %142, %145
%147 = phi %55, %99, %146
%148 = phi %52, %147, 0:i32
%149 = phi %32, %146, %148
%150 = phi %30, %140, %149
%151 = phi %68, %150, 0:i32
%152 = phi %65, 0:i32, %151
%153 = phi %62, %150, %152
%154 = phi %29, 0:i32, %153
%155 = phi %139, 0:i32, 0:i32, %154
%156 = phi %76, %155, 0:i32
%157 = phi %22, %136, %138, %138, %138, %138, %156
%158 = phi %127, %130, %157
%159 = phi %92, %126, %158
%160 = phi %89, %126, %159
%161 = phi %21, %126, %160
%162 = add %98, %161
%163 = block 2
%164:i32 = var
blockpc %163 0 %164 1
%165:i32 = var
blockpc %163 1 %165 1
%166:i32 = var
%167 = phi %163, 0:i32, %166
%168 = add %162, %167
%169 = eq %20, %168
%170:i32 = zext %169
%171 = eq %170, 0:i32
%172:i32 = var
%173:i32 = var
%174:i32 = var
%175:i32 = var
pc %19 1
pc %171 1
pc %172 1
pc %173 1
pc %174 1
pc %175 1
infer %16


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138:i32 = var
%139 = lshr %137, %138
%140 = and %139, 1:i32
%141:i32 = var
%142 = or %140, %141
%143:i32 = var
blockpc %0 0 %143 1
%144:i32 = var
blockpc %0 1 %144 1
%145:i32 = var
blockpc %3 0 %145 1
%146:i32 = var
blockpc %3 1 %146 1
%147:i32 = var
blockpc %10 0 %147 1
%148:i32 = var
blockpc %10 1 %148 1
%149:i32 = var
blockpc %15 0 %149 1
%150:i32 = var
blockpc %15 1 %150 1
%151:i32 = var
blockpc %16 0 %151 1
%152:i32 = var
blockpc %16 1 %152 1
%153:i32 = var
blockpc %17 0 %153 1
%154:i32 = var
blockpc %17 1 %154 1
%155:i32 = var
blockpc %22 0 %155 1
%156:i32 = var
blockpc %22 1 %156 1
%157:i32 = var
blockpc %23 0 %157 1
%158:i32 = var
blockpc %23 1 %158 1
%159:i32 = var
blockpc %28 0 %159 1
%160:i32 = var
blockpc %28 1 %160 1
%161:i32 = var
blockpc %29 0 %161 1
%162:i32 = var
blockpc %29 1 %162 1
%163:i32 = var
blockpc %30 0 %163 1
%164:i32 = var
blockpc %30 1 %164 1
%165:i32 = var
blockpc %36 0 %165 1
%166:i32 = var
blockpc %36 1 %166 1
%167:i32 = var
blockpc %47 0 %167 1
%168:i32 = var
blockpc %47 1 %168 1
%169:i32 = var
blockpc %48 0 %169 1
%170:i32 = var
blockpc %48 1 %170 1
%171:i32 = var
blockpc %81 0 %171 1
%172:i32 = var
blockpc %81 1 %172 1
%173:i32 = var
blockpc %115 0 %173 1
%174:i32 = var
blockpc %115 1 %174 1
%175:i32 = var
blockpc %124 0 %175 1
%176:i32 = var
blockpc %124 1 %176 1
%177:i32 = var
%178:i32 = var
%179:i32 = var
%180:i32 = var
%181:i32 = var
%182:i32 = var
pc %177 1
pc %178 1
pc %179 1
pc %180 1
pc %181 1
pc %182 1
infer %142


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5:i32 = var
%6 = block 6
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %10, %11
%19 = phi %16, -1:i32, %18
%20 = phi %12, %15, %19
%21 = phi %7, %11, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %21
%25 = block 2
%26 = phi %25, %24, %21
%27 = phi %6, %21, %24, %24, %24, %24, %26
%28 = sub %5, %27 (hasExternalUses)
%29 = add %4, %28 (hasExternalUses)
%30 = phi %2, %29, %28
%31:i32 = var
%32 = lshr %30, %31
%33 = and %32, 1:i32
%34:i32 = var
%35 = or %33, %34 (hasExternalUses)
%36 = phi %1, 0:i32, %35
%37 = phi %0, 31:i32, %36
%38 = shl %37, 2:i32
%39:i32 = var
blockpc %1 0 %39 1
%40:i32 = var
blockpc %1 1 %40 1
%41:i32 = var
blockpc %2 0 %41 1
%42:i32 = var
blockpc %2 1 %42 1
%43:i32 = var
blockpc %12 0 %43 1
%44:i32 = var
blockpc %12 1 %44 1
%45:i32 = var
blockpc %13 0 %45 1
%46:i32 = var
blockpc %13 1 %46 1
%47:i32 = var
blockpc %16 0 %47 1
%48:i32 = var
blockpc %16 1 %48 1
%49:i32 = var
blockpc %17 0 %49 1
%50:i32 = var
blockpc %17 1 %50 1
%51:i32 = var
blockpc %25 0 %51 1
%52:i32 = var
blockpc %25 1 %52 1
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
pc %53 1
pc %54 1
pc %55 1
pc %56 1
pc %57 1
infer %38


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %3, %4 (hasExternalUses)
%6 = phi %2, %5, %4
%7:i32 = var
%8:i32 = var
%9 = add %7, %8
%10 = add %9, 7:i32
%11 = lshr %6, %10
%12 = and %11, 1:i32
%13 = shl %9, 1:i32
%14 = or %12, %13 (hasExternalUses)
%15 = phi %1, 0:i32, %14
%16 = phi %0, 31:i32, %15
%17 = shl %16, 2:i32
%18 = add 3408:i32, %17
%19 = lshr %6, 8:i32
%20 = eq %19, 0:i32
blockpc %1 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %1 1 %22 1
%23:i32 = var
%24 = and %23, 3:i32
%25 = eq %24, 1:i32
blockpc %2 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %2 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %18


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 28:i32
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %12 0 %74 1
%75:i32 = var
blockpc %12 1 %75 1
%76:i32 = var
blockpc %13 0 %76 1
%77:i32 = var
blockpc %13 1 %77 1
%78:i32 = var
blockpc %14 0 %78 1
%79:i32 = var
blockpc %14 1 %79 1
%80:i32 = var
blockpc %19 0 %80 1
%81:i32 = var
blockpc %19 1 %81 1
%82:i32 = var
blockpc %20 0 %82 1
%83:i32 = var
blockpc %20 1 %83 1
%84:i32 = var
blockpc %25 0 %84 1
%85:i32 = var
blockpc %25 1 %85 1
%86:i32 = var
blockpc %26 0 %86 1
%87:i32 = var
blockpc %26 1 %87 1
%88:i32 = var
blockpc %27 0 %88 1
%89:i32 = var
blockpc %27 1 %89 1
%90:i32 = var
blockpc %33 0 %90 1
%91:i32 = var
blockpc %33 1 %91 1
%92:i32 = var
blockpc %44 0 %92 1
%93:i32 = var
blockpc %44 1 %93 1
%94:i32 = var
blockpc %45 0 %94 1
%95:i32 = var
blockpc %45 1 %95 1
%96:i32 = var
blockpc %50 0 %96 1
%97:i32 = var
blockpc %50 1 %97 1
%98:i32 = var
blockpc %57 0 %98 1
%99:i32 = var
blockpc %57 1 %99 1
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
pc %100 1
pc %101 1
pc %102 1
pc %103 1
pc %104 1
infer %69


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 16:i32
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %12 0 %74 1
%75:i32 = var
blockpc %12 1 %75 1
%76:i32 = var
blockpc %13 0 %76 1
%77:i32 = var
blockpc %13 1 %77 1
%78:i32 = var
blockpc %14 0 %78 1
%79:i32 = var
blockpc %14 1 %79 1
%80:i32 = var
blockpc %19 0 %80 1
%81:i32 = var
blockpc %19 1 %81 1
%82:i32 = var
blockpc %20 0 %82 1
%83:i32 = var
blockpc %20 1 %83 1
%84:i32 = var
blockpc %25 0 %84 1
%85:i32 = var
blockpc %25 1 %85 1
%86:i32 = var
blockpc %26 0 %86 1
%87:i32 = var
blockpc %26 1 %87 1
%88:i32 = var
blockpc %27 0 %88 1
%89:i32 = var
blockpc %27 1 %89 1
%90:i32 = var
blockpc %33 0 %90 1
%91:i32 = var
blockpc %33 1 %91 1
%92:i32 = var
blockpc %44 0 %92 1
%93:i32 = var
blockpc %44 1 %93 1
%94:i32 = var
blockpc %45 0 %94 1
%95:i32 = var
blockpc %45 1 %95 1
%96:i32 = var
blockpc %50 0 %96 1
%97:i32 = var
blockpc %50 1 %97 1
%98:i32 = var
blockpc %57 0 %98 1
%99:i32 = var
blockpc %57 1 %99 1
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
pc %100 1
pc %101 1
pc %102 1
pc %103 1
pc %104 1
infer %69


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 16:i32 (hasExternalUses)
%70 = add %69, 4:i32
%71:i32 = var
blockpc %0 0 %71 1
%72:i32 = var
blockpc %0 1 %72 1
%73:i32 = var
blockpc %7 0 %73 1
%74:i32 = var
blockpc %7 1 %74 1
%75:i32 = var
blockpc %12 0 %75 1
%76:i32 = var
blockpc %12 1 %76 1
%77:i32 = var
blockpc %13 0 %77 1
%78:i32 = var
blockpc %13 1 %78 1
%79:i32 = var
blockpc %14 0 %79 1
%80:i32 = var
blockpc %14 1 %80 1
%81:i32 = var
blockpc %19 0 %81 1
%82:i32 = var
blockpc %19 1 %82 1
%83:i32 = var
blockpc %20 0 %83 1
%84:i32 = var
blockpc %20 1 %84 1
%85:i32 = var
blockpc %25 0 %85 1
%86:i32 = var
blockpc %25 1 %86 1
%87:i32 = var
blockpc %26 0 %87 1
%88:i32 = var
blockpc %26 1 %88 1
%89:i32 = var
blockpc %27 0 %89 1
%90:i32 = var
blockpc %27 1 %90 1
%91:i32 = var
blockpc %33 0 %91 1
%92:i32 = var
blockpc %33 1 %92 1
%93:i32 = var
blockpc %44 0 %93 1
%94:i32 = var
blockpc %44 1 %94 1
%95:i32 = var
blockpc %45 0 %95 1
%96:i32 = var
blockpc %45 1 %96 1
%97:i32 = var
blockpc %50 0 %97 1
%98:i32 = var
blockpc %50 1 %98 1
%99:i32 = var
blockpc %57 0 %99 1
%100:i32 = var
blockpc %57 1 %100 1
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105:i32 = var
pc %101 1
pc %102 1
pc %103 1
pc %104 1
pc %105 1
infer %70


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5:i32 = var
%6 = block 6
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %10, %11
%19 = phi %16, -1:i32, %18
%20 = phi %12, %15, %19
%21 = phi %7, %11, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %21
%25 = block 2
%26 = phi %25, %24, %21
%27 = phi %6, %21, %24, %24, %24, %24, %26
%28 = sub %5, %27 (hasExternalUses)
%29 = add %4, %28 (hasExternalUses)
%30 = phi %2, %29, %28
%31:i32 = var
%32 = lshr %30, %31
%33 = and %32, 1:i32
%34:i32 = var
%35 = or %33, %34 (hasExternalUses)
%36 = phi %1, 0:i32, %35
%37 = phi %0, 31:i32, %36
%38 = shl 1:i32, %37
%39:i32 = var
blockpc %1 0 %39 1
%40:i32 = var
blockpc %1 1 %40 1
%41:i32 = var
blockpc %2 0 %41 1
%42:i32 = var
blockpc %2 1 %42 1
%43:i32 = var
blockpc %12 0 %43 1
%44:i32 = var
blockpc %12 1 %44 1
%45:i32 = var
blockpc %13 0 %45 1
%46:i32 = var
blockpc %13 1 %46 1
%47:i32 = var
blockpc %16 0 %47 1
%48:i32 = var
blockpc %16 1 %48 1
%49:i32 = var
blockpc %17 0 %49 1
%50:i32 = var
blockpc %17 1 %50 1
%51:i32 = var
blockpc %25 0 %51 1
%52:i32 = var
blockpc %25 1 %52 1
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
pc %53 1
pc %54 1
pc %55 1
pc %56 1
pc %57 1
infer %38


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %4, %5 (hasExternalUses)
%7 = phi %3, %6, %5
%8:i32 = var
%9:i32 = var
%10 = add %8, %9
%11 = add %10, 7:i32
%12 = lshr %7, %11
%13 = and %12, 1:i32
%14 = shl %10, 1:i32
%15 = or %13, %14 (hasExternalUses)
%16 = phi %2, 0:i32, %15
%17 = phi %1, 31:i32, %16
%18 = shl 1:i32, %17 (hasExternalUses)
%19 = and %0, %18
%20 = lshr %7, 8:i32
%21 = eq %20, 0:i32
blockpc %2 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %2 1 %23 1
%24:i32 = var
%25 = and %24, 3:i32
%26 = eq %25, 1:i32
blockpc %3 0 %26 1
%27:i32 = var
blockpc %3 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7:i32 = var
%8 = add %7, 7:i32
%9 = lshr %6, %8
%10 = and %9, 1:i32
%11 = shl %7, 1:i32
%12 = or %10, %11 (hasExternalUses)
%13 = phi %2, 0:i32, %12
%14 = phi %1, 31:i32, %13
%15 = shl 1:i32, %14 (hasExternalUses)
%16 = and %0, %15
%17 = eq %16, 0:i32
%18 = lshr %6, 8:i32
%19 = eq %18, 0:i32
blockpc %2 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %2 1 %21 1
%22:i32 = var
%23 = and %22, 3:i32
%24 = eq %23, 1:i32
blockpc %3 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %3 1 %26 1
%27:i32 = var
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %27 1
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %17


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %4, %5 (hasExternalUses)
%7 = phi %3, %6, %5
%8:i32 = var
%9:i32 = var
%10 = add %8, %9
%11 = add %10, 7:i32
%12 = lshr %7, %11
%13 = and %12, 1:i32
%14 = shl %10, 1:i32
%15 = or %13, %14 (hasExternalUses)
%16 = phi %2, 0:i32, %15
%17 = phi %1, 31:i32, %16
%18 = shl 1:i32, %17 (hasExternalUses)
%19 = or %0, %18
%20 = lshr %7, 8:i32
%21 = eq %20, 0:i32
blockpc %2 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %2 1 %23 1
%24:i32 = var
%25 = and %24, 3:i32
%26 = eq %25, 1:i32
blockpc %3 0 %26 1
%27:i32 = var
blockpc %3 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %19


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 24:i32
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %12 0 %74 1
%75:i32 = var
blockpc %12 1 %75 1
%76:i32 = var
blockpc %13 0 %76 1
%77:i32 = var
blockpc %13 1 %77 1
%78:i32 = var
blockpc %14 0 %78 1
%79:i32 = var
blockpc %14 1 %79 1
%80:i32 = var
blockpc %19 0 %80 1
%81:i32 = var
blockpc %19 1 %81 1
%82:i32 = var
blockpc %20 0 %82 1
%83:i32 = var
blockpc %20 1 %83 1
%84:i32 = var
blockpc %25 0 %84 1
%85:i32 = var
blockpc %25 1 %85 1
%86:i32 = var
blockpc %26 0 %86 1
%87:i32 = var
blockpc %26 1 %87 1
%88:i32 = var
blockpc %27 0 %88 1
%89:i32 = var
blockpc %27 1 %89 1
%90:i32 = var
blockpc %33 0 %90 1
%91:i32 = var
blockpc %33 1 %91 1
%92:i32 = var
blockpc %44 0 %92 1
%93:i32 = var
blockpc %44 1 %93 1
%94:i32 = var
blockpc %45 0 %94 1
%95:i32 = var
blockpc %45 1 %95 1
%96:i32 = var
blockpc %50 0 %96 1
%97:i32 = var
blockpc %50 1 %97 1
%98:i32 = var
blockpc %57 0 %98 1
%99:i32 = var
blockpc %57 1 %99 1
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105:i32 = var
pc %100 1
pc %101 1
pc %102 1
pc %103 1
pc %104 1
pc %105 1
infer %69


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 12:i32
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %12 0 %74 1
%75:i32 = var
blockpc %12 1 %75 1
%76:i32 = var
blockpc %13 0 %76 1
%77:i32 = var
blockpc %13 1 %77 1
%78:i32 = var
blockpc %14 0 %78 1
%79:i32 = var
blockpc %14 1 %79 1
%80:i32 = var
blockpc %19 0 %80 1
%81:i32 = var
blockpc %19 1 %81 1
%82:i32 = var
blockpc %20 0 %82 1
%83:i32 = var
blockpc %20 1 %83 1
%84:i32 = var
blockpc %25 0 %84 1
%85:i32 = var
blockpc %25 1 %85 1
%86:i32 = var
blockpc %26 0 %86 1
%87:i32 = var
blockpc %26 1 %87 1
%88:i32 = var
blockpc %27 0 %88 1
%89:i32 = var
blockpc %27 1 %89 1
%90:i32 = var
blockpc %33 0 %90 1
%91:i32 = var
blockpc %33 1 %91 1
%92:i32 = var
blockpc %44 0 %92 1
%93:i32 = var
blockpc %44 1 %93 1
%94:i32 = var
blockpc %45 0 %94 1
%95:i32 = var
blockpc %45 1 %95 1
%96:i32 = var
blockpc %50 0 %96 1
%97:i32 = var
blockpc %50 1 %97 1
%98:i32 = var
blockpc %57 0 %98 1
%99:i32 = var
blockpc %57 1 %99 1
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105:i32 = var
pc %100 1
pc %101 1
pc %102 1
pc %103 1
pc %104 1
pc %105 1
infer %69


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 8:i32
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %12 0 %74 1
%75:i32 = var
blockpc %12 1 %75 1
%76:i32 = var
blockpc %13 0 %76 1
%77:i32 = var
blockpc %13 1 %77 1
%78:i32 = var
blockpc %14 0 %78 1
%79:i32 = var
blockpc %14 1 %79 1
%80:i32 = var
blockpc %19 0 %80 1
%81:i32 = var
blockpc %19 1 %81 1
%82:i32 = var
blockpc %20 0 %82 1
%83:i32 = var
blockpc %20 1 %83 1
%84:i32 = var
blockpc %25 0 %84 1
%85:i32 = var
blockpc %25 1 %85 1
%86:i32 = var
blockpc %26 0 %86 1
%87:i32 = var
blockpc %26 1 %87 1
%88:i32 = var
blockpc %27 0 %88 1
%89:i32 = var
blockpc %27 1 %89 1
%90:i32 = var
blockpc %33 0 %90 1
%91:i32 = var
blockpc %33 1 %91 1
%92:i32 = var
blockpc %44 0 %92 1
%93:i32 = var
blockpc %44 1 %93 1
%94:i32 = var
blockpc %45 0 %94 1
%95:i32 = var
blockpc %45 1 %95 1
%96:i32 = var
blockpc %50 0 %96 1
%97:i32 = var
blockpc %50 1 %97 1
%98:i32 = var
blockpc %57 0 %98 1
%99:i32 = var
blockpc %57 1 %99 1
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105:i32 = var
pc %100 1
pc %101 1
pc %102 1
pc %103 1
pc %104 1
pc %105 1
infer %69


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85 = phi %18, %84, 0:i32
%86 = phi %27, 0:i32, %85
%87 = phi %24, 0:i32, %86
%88 = phi %21, 0:i32, %87
%89 = phi %17, %85, %88
%90 = phi %37, %89, %81
%91 = phi %34, %90, %89
%92 = phi %14, %89, %91
%93 = phi %12, %83, %92
%94 = phi %50, %82, %93
%95 = phi %47, %93, %94
%96 = phi %44, %93, %95
%97 = phi %11, %93, %96
%98:i32 = var
%99:i32 = var
%100:i32 = var
%101 = phi %18, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %24, 0:i32, %102
%104 = phi %21, 0:i32, %103
%105 = phi %17, %101, %104
%106 = phi %12, %99, %105
%107 = phi %58, %106, %105
%108 = phi %4, %81, %82, %97, %97, %98, %107
%109 = block 2
%110:i32 = var
blockpc %109 0 %110 1
%111:i32 = var
blockpc %109 1 %111 1
%112:i32 = var
%113:i32 = var
%114 = phi %18, %113, 0:i32
%115 = phi %27, 0:i32, %114
%116 = phi %24, 0:i32, %115
%117 = phi %21, 0:i32, %116
%118 = phi %17, %114, %117
%119:i32 = var
%120 = phi %12, %119, %118
%121 = block 3
%122:i32 = var
%123:i32 = var
%124 = phi %18, %123, 0:i32
%125 = phi %27, 0:i32, %124
%126 = phi %24, 0:i32, %125
%127 = phi %21, 0:i32, %126
%128 = phi %17, %124, %127
%129 = phi %37, %81, %128
%130 = phi %34, %129, 0:i32
%131 = phi %14, %128, %130
%132 = phi %12, %122, %131
%133 = phi %50, %132, 0:i32
%134 = phi %47, 0:i32, %133
%135 = phi %44, %132, %134
%136 = phi %11, 0:i32, %135
%137 = phi %121, 0:i32, 0:i32, %136
%138 = phi %58, %137, 0:i32
%139 = phi %4, %118, %120, %120, %120, %120, %138
%140 = phi %109, %112, %139
%141 = phi %74, %108, %140
%142 = phi %71, %108, %141
%143 = phi %3, %108, %142
%144 = add %80, %143
%145 = block 2
%146:i32 = var
blockpc %145 0 %146 1
%147:i32 = var
blockpc %145 1 %147 1
%148:i32 = var
%149 = phi %145, 0:i32, %148
%150 = add %144, %149
%151 = eq %2, %150
%152:i32 = zext %151
%153 = eq %152, 0:i32
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2:i32 = var
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85 = phi %18, %84, 0:i32
%86 = phi %27, 0:i32, %85
%87 = phi %24, 0:i32, %86
%88 = phi %21, 0:i32, %87
%89 = phi %17, %85, %88
%90 = phi %37, %89, %81
%91 = phi %34, %90, %89
%92 = phi %14, %89, %91
%93 = phi %12, %83, %92
%94 = phi %50, %82, %93
%95 = phi %47, %93, %94
%96 = phi %44, %93, %95
%97 = phi %11, %93, %96
%98:i32 = var
%99:i32 = var
%100:i32 = var
%101 = phi %18, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %24, 0:i32, %102
%104 = phi %21, 0:i32, %103
%105 = phi %17, %101, %104
%106 = phi %12, %99, %105
%107 = phi %58, %106, %105
%108 = phi %4, %81, %82, %97, %97, %98, %107
%109 = block 2
%110:i32 = var
blockpc %109 0 %110 1
%111:i32 = var
blockpc %109 1 %111 1
%112:i32 = var
%113:i32 = var
%114 = phi %18, %113, 0:i32
%115 = phi %27, 0:i32, %114
%116 = phi %24, 0:i32, %115
%117 = phi %21, 0:i32, %116
%118 = phi %17, %114, %117
%119:i32 = var
%120 = phi %12, %119, %118
%121 = block 3
%122:i32 = var
%123:i32 = var
%124 = phi %18, %123, 0:i32
%125 = phi %27, 0:i32, %124
%126 = phi %24, 0:i32, %125
%127 = phi %21, 0:i32, %126
%128 = phi %17, %124, %127
%129 = phi %37, %81, %128
%130 = phi %34, %129, 0:i32
%131 = phi %14, %128, %130
%132 = phi %12, %122, %131
%133 = phi %50, %132, 0:i32
%134 = phi %47, 0:i32, %133
%135 = phi %44, %132, %134
%136 = phi %11, 0:i32, %135
%137 = phi %121, 0:i32, 0:i32, %136
%138 = phi %58, %137, 0:i32
%139 = phi %4, %118, %120, %120, %120, %120, %138
%140 = phi %109, %112, %139
%141 = phi %74, %108, %140
%142 = phi %71, %108, %141
%143 = phi %3, %108, %142
%144 = add %80, %143
%145 = block 2
%146:i32 = var
blockpc %145 0 %146 1
%147:i32 = var
blockpc %145 1 %147 1
%148:i32 = var
%149 = phi %145, 0:i32, %148
%150 = add %144, %149
%151 = eq %2, %150
%152:i32 = zext %151
%153 = eq %152, 0:i32
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5 = block 2
%6 = block 6
%7:i32 = var
%8:i32 = var
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = block 2
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = phi %14, %15, 0:i32
%17 = block 2
%18 = block 2
%19 = block 2
%20 = phi %19, 0:i32, %16
%21 = phi %18, 0:i32, %20
%22 = phi %17, 0:i32, %21
%23 = phi %13, %16, %22
%24 = block 2
%25 = block 2
%26 = phi %25, %23, %7
%27 = phi %24, %26, %23
%28 = phi %12, %23, %27
%29 = phi %10, %11, %28
%30 = block 2
%31 = block 2
%32 = block 2
%33:i32 = var
%34 = phi %32, %33, %29
%35 = phi %31, %29, %34
%36 = phi %30, %29, %35
%37 = phi %9, %29, %36
%38 = block 2
%39:i32 = var
%40:i32 = var
%41 = phi %14, %40, 0:i32
%42 = phi %19, 0:i32, %41
%43 = phi %18, 0:i32, %42
%44 = phi %17, 0:i32, %43
%45 = phi %13, %41, %44
%46 = phi %10, %39, %45
%47 = phi %38, %46, %45
%48 = phi %6, %7, %8, %37, %37, %37, %47
%49 = block 2
%50 = block 2
%51:i32 = var
%52 = phi %50, %48, %51
%53 = phi %49, %48, %52
%54 = phi %5, %48, %53
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59 = phi %14, %58, 0:i32
%60 = phi %19, 0:i32, %59
%61 = phi %18, 0:i32, %60
%62 = phi %17, 0:i32, %61
%63 = phi %13, %59, %62
%64 = phi %25, %63, %55
%65 = phi %24, %64, %63
%66 = phi %12, %63, %65
%67 = phi %10, %57, %66
%68 = phi %32, %56, %67
%69 = phi %31, %67, %68
%70 = phi %30, %67, %69
%71 = phi %9, %67, %70
%72:i32 = var
%73:i32 = var
%74:i32 = var
%75 = phi %14, %74, 0:i32
%76 = phi %19, 0:i32, %75
%77 = phi %18, 0:i32, %76
%78 = phi %17, 0:i32, %77
%79 = phi %13, %75, %78
%80 = phi %10, %73, %79
%81 = phi %38, %80, %79
%82 = phi %6, %55, %56, %71, %71, %72, %81
%83 = block 2
%84:i32 = var
%85:i32 = var
%86 = phi %14, %85, 0:i32
%87 = phi %19, 0:i32, %86
%88 = phi %18, 0:i32, %87
%89 = phi %17, 0:i32, %88
%90 = phi %13, %86, %89
%91:i32 = var
%92 = phi %10, %91, %90
%93 = block 3
%94:i32 = var
%95:i32 = var
%96 = phi %14, %95, 0:i32
%97 = phi %19, 0:i32, %96
%98 = phi %18, 0:i32, %97
%99 = phi %17, 0:i32, %98
%100 = phi %13, %96, %99
%101 = phi %25, %55, %100
%102 = phi %24, %101, 0:i32
%103 = phi %12, %100, %102
%104 = phi %10, %94, %103
%105 = phi %32, %104, 0:i32
%106 = phi %31, 0:i32, %105
%107 = phi %30, %104, %106
%108 = phi %9, 0:i32, %107
%109 = phi %93, 0:i32, 0:i32, %108
%110 = phi %38, %109, 0:i32
%111 = phi %6, %90, %92, %92, %92, %92, %110
%112 = phi %83, %84, %111
%113 = phi %50, %82, %112
%114 = phi %49, %82, %113
%115 = phi %5, %82, %114
%116 = add %54, %115 (hasExternalUses)
%117 = block 2
%118:i32 = var
%119 = phi %117, 0:i32, %118
%120 = add %116, %119 (hasExternalUses)
%121:i32 = var
%122 = sub %120, %121
%123:i32 = var
%124:i32 = var
%125 = phi %14, %123, %124
%126 = block 2
%127:i32 = var
%128 = phi %126, 16:i32, %127
%129 = phi %19, %124, %125
%130 = phi %18, -1:i32, %129
%131 = phi %17, %128, %130
%132 = phi %13, %125, %131
%133:i32 = var
%134 = phi %10, %133, %132
%135 = phi %38, %134, %132
%136 = phi %6, %132, %134, %134, %134, %134, %135
%137 = sub %122, %136 (hasExternalUses)
%138 = add %4, %137 (hasExternalUses)
%139 = phi %2, %138, %137
%140 = eq %1, %139
%141:i32 = var
blockpc %2 0 %141 1
%142:i32 = var
blockpc %2 1 %142 1
%143:i32 = var
blockpc %5 0 %143 1
%144:i32 = var
blockpc %5 1 %144 1
%145:i32 = var
blockpc %12 0 %145 1
%146:i32 = var
blockpc %12 1 %146 1
%147:i32 = var
blockpc %17 0 %147 1
%148:i32 = var
blockpc %17 1 %148 1
%149:i32 = var
blockpc %18 0 %149 1
%150:i32 = var
blockpc %18 1 %150 1
%151:i32 = var
blockpc %19 0 %151 1
%152:i32 = var
blockpc %19 1 %152 1
%153:i32 = var
blockpc %24 0 %153 1
%154:i32 = var
blockpc %24 1 %154 1
%155:i32 = var
blockpc %25 0 %155 1
%156:i32 = var
blockpc %25 1 %156 1
%157:i32 = var
blockpc %30 0 %157 1
%158:i32 = var
blockpc %30 1 %158 1
%159:i32 = var
blockpc %31 0 %159 1
%160:i32 = var
blockpc %31 1 %160 1
%161:i32 = var
blockpc %32 0 %161 1
%162:i32 = var
blockpc %32 1 %162 1
%163:i32 = var
blockpc %38 0 %163 1
%164:i32 = var
blockpc %38 1 %164 1
%165:i32 = var
blockpc %49 0 %165 1
%166:i32 = var
blockpc %49 1 %166 1
%167:i32 = var
blockpc %50 0 %167 1
%168:i32 = var
blockpc %50 1 %168 1
%169:i32 = var
blockpc %83 0 %169 1
%170:i32 = var
blockpc %83 1 %170 1
%171:i32 = var
blockpc %117 0 %171 1
%172:i32 = var
blockpc %117 1 %172 1
%173:i32 = var
blockpc %126 0 %173 1
%174:i32 = var
blockpc %126 1 %174 1
%175:i32 = var
%176:i32 = var
%177:i32 = var
%178:i32 = var
%179:i32 = var
pc %175 1
pc %176 1
pc %177 1
pc %178 1
pc %179 1
infer %140


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5:i32 = var
%6 = block 6
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %10, %11
%19 = phi %16, -1:i32, %18
%20 = phi %12, %15, %19
%21 = phi %7, %11, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %21
%25 = block 2
%26 = phi %25, %24, %21
%27 = phi %6, %21, %24, %24, %24, %24, %26
%28 = sub %5, %27 (hasExternalUses)
%29 = add %4, %28 (hasExternalUses)
%30 = phi %2, %29, %28
%31:i32 = var
%32 = lshr %30, %31
%33 = and %32, 1:i32
%34:i32 = var
%35 = or %33, %34 (hasExternalUses)
%36 = phi %1, 0:i32, %35
%37 = phi %0, 31:i32, %36
%38 = lshr %37, 1:i32
%39:i32 = var
blockpc %1 0 %39 1
%40:i32 = var
blockpc %1 1 %40 1
%41:i32 = var
blockpc %2 0 %41 1
%42:i32 = var
blockpc %2 1 %42 1
%43:i32 = var
blockpc %12 0 %43 1
%44:i32 = var
blockpc %12 1 %44 1
%45:i32 = var
blockpc %13 0 %45 1
%46:i32 = var
blockpc %13 1 %46 1
%47:i32 = var
blockpc %16 0 %47 1
%48:i32 = var
blockpc %16 1 %48 1
%49:i32 = var
blockpc %17 0 %49 1
%50:i32 = var
blockpc %17 1 %50 1
%51:i32 = var
blockpc %25 0 %51 1
%52:i32 = var
blockpc %25 1 %52 1
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58:i32 = var
pc %53 1
pc %54 1
pc %55 1
pc %56 1
pc %57 1
pc %58 1
infer %38


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %3, %4 (hasExternalUses)
%6 = phi %2, %5, %4
%7:i32 = var
%8:i32 = var
%9 = add %7, %8
%10 = add %9, 7:i32
%11 = lshr %6, %10
%12 = and %11, 1:i32
%13 = shl %9, 1:i32
%14 = or %12, %13 (hasExternalUses)
%15 = phi %1, 0:i32, %14
%16 = phi %0, 31:i32, %15
%17 = lshr %16, 1:i32
%18 = sub 25:i32, %17
%19 = lshr %6, 8:i32
%20 = eq %19, 0:i32
blockpc %1 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %1 1 %22 1
%23:i32 = var
%24 = and %23, 3:i32
%25 = eq %24, 1:i32
blockpc %2 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %2 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %18


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5:i32 = var
%6 = block 6
%7 = block 2
%8 = block 2
%9:i32 = var
%10:i32 = var
%11 = phi %8, %9, %10
%12 = block 2
%13 = block 2
%14:i32 = var
%15 = phi %13, 16:i32, %14
%16 = block 2
%17 = block 2
%18 = phi %17, %10, %11
%19 = phi %16, -1:i32, %18
%20 = phi %12, %15, %19
%21 = phi %7, %11, %20
%22 = block 2
%23:i32 = var
%24 = phi %22, %23, %21
%25 = block 2
%26 = phi %25, %24, %21
%27 = phi %6, %21, %24, %24, %24, %24, %26
%28 = sub %5, %27 (hasExternalUses)
%29 = add %4, %28 (hasExternalUses)
%30 = phi %2, %29, %28
%31:i32 = var
%32 = lshr %30, %31
%33 = and %32, 1:i32
%34:i32 = var
%35 = or %33, %34 (hasExternalUses)
%36 = phi %1, 0:i32, %35
%37 = phi %0, 31:i32, %36
%38 = eq %37, 31:i32
%39:i32 = var
blockpc %1 0 %39 1
%40:i32 = var
blockpc %1 1 %40 1
%41:i32 = var
blockpc %2 0 %41 1
%42:i32 = var
blockpc %2 1 %42 1
%43:i32 = var
blockpc %12 0 %43 1
%44:i32 = var
blockpc %12 1 %44 1
%45:i32 = var
blockpc %13 0 %45 1
%46:i32 = var
blockpc %13 1 %46 1
%47:i32 = var
blockpc %16 0 %47 1
%48:i32 = var
blockpc %16 1 %48 1
%49:i32 = var
blockpc %17 0 %49 1
%50:i32 = var
blockpc %17 1 %50 1
%51:i32 = var
blockpc %25 0 %51 1
%52:i32 = var
blockpc %25 1 %52 1
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58:i32 = var
pc %53 1
pc %54 1
pc %55 1
pc %56 1
pc %57 1
pc %58 1
infer %38


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = block 2
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = block 2
%8 = block 2
%9:i32 = var
%10 = block 2
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = phi %12, %13, 0:i32
%15 = block 2
%16 = block 2
%17 = block 2
%18 = phi %17, 0:i32, %14
%19 = phi %16, 0:i32, %18
%20 = phi %15, 0:i32, %19
%21 = phi %11, %14, %20
%22 = block 2
%23 = block 2
%24 = phi %23, %21, %5
%25 = phi %22, %24, %21
%26 = phi %10, %21, %25
%27 = phi %8, %9, %26
%28 = block 2
%29 = block 2
%30 = block 2
%31:i32 = var
%32 = phi %30, %31, %27
%33 = phi %29, %27, %32
%34 = phi %28, %27, %33
%35 = phi %7, %27, %34
%36 = block 2
%37:i32 = var
%38:i32 = var
%39 = phi %12, %38, 0:i32
%40 = phi %17, 0:i32, %39
%41 = phi %16, 0:i32, %40
%42 = phi %15, 0:i32, %41
%43 = phi %11, %39, %42
%44 = phi %8, %37, %43
%45 = phi %36, %44, %43
%46 = phi %4, %5, %6, %35, %35, %35, %45
%47 = block 2
%48 = block 2
%49:i32 = var
%50 = phi %48, %46, %49
%51 = phi %47, %46, %50
%52 = phi %3, %46, %51
%53:i32 = var
%54:i32 = var
%55:i32 = var
%56:i32 = var
%57 = phi %12, %56, 0:i32
%58 = phi %17, 0:i32, %57
%59 = phi %16, 0:i32, %58
%60 = phi %15, 0:i32, %59
%61 = phi %11, %57, %60
%62 = phi %23, %61, %53
%63 = phi %22, %62, %61
%64 = phi %10, %61, %63
%65 = phi %8, %55, %64
%66 = phi %30, %54, %65
%67 = phi %29, %65, %66
%68 = phi %28, %65, %67
%69 = phi %7, %65, %68
%70:i32 = var
%71:i32 = var
%72:i32 = var
%73 = phi %12, %72, 0:i32
%74 = phi %17, 0:i32, %73
%75 = phi %16, 0:i32, %74
%76 = phi %15, 0:i32, %75
%77 = phi %11, %73, %76
%78 = phi %8, %71, %77
%79 = phi %36, %78, %77
%80 = phi %4, %53, %54, %69, %69, %70, %79
%81 = block 2
%82:i32 = var
%83:i32 = var
%84 = phi %12, %83, 0:i32
%85 = phi %17, 0:i32, %84
%86 = phi %16, 0:i32, %85
%87 = phi %15, 0:i32, %86
%88 = phi %11, %84, %87
%89:i32 = var
%90 = phi %8, %89, %88
%91 = block 3
%92:i32 = var
%93:i32 = var
%94 = phi %12, %93, 0:i32
%95 = phi %17, 0:i32, %94
%96 = phi %16, 0:i32, %95
%97 = phi %15, 0:i32, %96
%98 = phi %11, %94, %97
%99 = phi %23, %53, %98
%100 = phi %22, %99, 0:i32
%101 = phi %10, %98, %100
%102 = phi %8, %92, %101
%103 = phi %30, %102, 0:i32
%104 = phi %29, 0:i32, %103
%105 = phi %28, %102, %104
%106 = phi %7, 0:i32, %105
%107 = phi %91, 0:i32, 0:i32, %106
%108 = phi %36, %107, 0:i32
%109 = phi %4, %88, %90, %90, %90, %90, %108
%110 = phi %81, %82, %109
%111 = phi %48, %80, %110
%112 = phi %47, %80, %111
%113 = phi %3, %80, %112
%114 = add %52, %113 (hasExternalUses)
%115 = block 2
%116:i32 = var
%117 = phi %115, 0:i32, %116
%118 = add %114, %117 (hasExternalUses)
%119:i32 = var
%120 = sub %118, %119
%121:i32 = var
%122:i32 = var
%123 = phi %12, %121, %122
%124 = block 2
%125:i32 = var
%126 = phi %124, 16:i32, %125
%127 = phi %17, %122, %123
%128 = phi %16, -1:i32, %127
%129 = phi %15, %126, %128
%130 = phi %11, %123, %129
%131:i32 = var
%132 = phi %8, %131, %130
%133 = phi %36, %132, %130
%134 = phi %4, %130, %132, %132, %132, %132, %133
%135 = sub %120, %134 (hasExternalUses)
%136 = add %2, %135 (hasExternalUses)
%137 = phi %0, %136, %135
%138 = block 2
%139:i32 = var
%140 = phi %138, 0:i32, %139
%141 = shl %137, %140
%142:i32 = var
blockpc %0 0 %142 1
%143:i32 = var
blockpc %0 1 %143 1
%144:i32 = var
blockpc %3 0 %144 1
%145:i32 = var
blockpc %3 1 %145 1
%146:i32 = var
blockpc %10 0 %146 1
%147:i32 = var
blockpc %10 1 %147 1
%148:i32 = var
blockpc %15 0 %148 1
%149:i32 = var
blockpc %15 1 %149 1
%150:i32 = var
blockpc %16 0 %150 1
%151:i32 = var
blockpc %16 1 %151 1
%152:i32 = var
blockpc %17 0 %152 1
%153:i32 = var
blockpc %17 1 %153 1
%154:i32 = var
blockpc %22 0 %154 1
%155:i32 = var
blockpc %22 1 %155 1
%156:i32 = var
blockpc %23 0 %156 1
%157:i32 = var
blockpc %23 1 %157 1
%158:i32 = var
blockpc %28 0 %158 1
%159:i32 = var
blockpc %28 1 %159 1
%160:i32 = var
blockpc %29 0 %160 1
%161:i32 = var
blockpc %29 1 %161 1
%162:i32 = var
blockpc %30 0 %162 1
%163:i32 = var
blockpc %30 1 %163 1
%164:i32 = var
blockpc %36 0 %164 1
%165:i32 = var
blockpc %36 1 %165 1
%166:i32 = var
blockpc %47 0 %166 1
%167:i32 = var
blockpc %47 1 %167 1
%168:i32 = var
blockpc %48 0 %168 1
%169:i32 = var
blockpc %48 1 %169 1
%170:i32 = var
blockpc %81 0 %170 1
%171:i32 = var
blockpc %81 1 %171 1
%172:i32 = var
blockpc %115 0 %172 1
%173:i32 = var
blockpc %115 1 %173 1
%174:i32 = var
blockpc %124 0 %174 1
%175:i32 = var
blockpc %124 1 %175 1
%176:i32 = var
blockpc %138 0 %176 1
%177:i32 = var
blockpc %138 1 %177 1
%178:i32 = var
%179:i32 = var
%180:i32 = var
%181:i32 = var
%182:i32 = var
%183:i32 = var
pc %178 1
pc %179 1
pc %180 1
pc %181 1
pc %182 1
pc %183 1
infer %141


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = and %5, 3:i32
%7 = eq %6, 1:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = and %5, -8:i32
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14 = block 6
%15:i32 = var
%16:i32 = var
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, 0:i32
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 0:i32, %26
%37 = phi %30, 0:i32, %36
%38 = phi %27, 0:i32, %37
%39 = phi %23, %26, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %39, %15
%47 = phi %40, %46, %39
%48 = phi %20, %39, %47
%49 = phi %18, %19, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %59, %49
%61 = phi %53, %49, %60
%62 = phi %50, %49, %61
%63 = phi %17, %49, %62
%64 = block 2
%65:i32 = var
blockpc %64 0 %65 1
%66:i32 = var
blockpc %64 1 %66 1
%67:i32 = var
%68:i32 = var
%69 = phi %24, %68, 0:i32
%70 = phi %33, 0:i32, %69
%71 = phi %30, 0:i32, %70
%72 = phi %27, 0:i32, %71
%73 = phi %23, %69, %72
%74 = phi %18, %67, %73
%75 = phi %64, %74, %73
%76 = phi %14, %15, %16, %63, %63, %63, %75
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84 = phi %80, %76, %83
%85 = phi %77, %76, %84
%86 = phi %11, %76, %85
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91 = phi %24, %90, 0:i32
%92 = phi %33, 0:i32, %91
%93 = phi %30, 0:i32, %92
%94 = phi %27, 0:i32, %93
%95 = phi %23, %91, %94
%96 = phi %43, %95, %87
%97 = phi %40, %96, %95
%98 = phi %20, %95, %97
%99 = phi %18, %89, %98
%100 = phi %56, %88, %99
%101 = phi %53, %99, %100
%102 = phi %50, %99, %101
%103 = phi %17, %99, %102
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107 = phi %24, %106, 0:i32
%108 = phi %33, 0:i32, %107
%109 = phi %30, 0:i32, %108
%110 = phi %27, 0:i32, %109
%111 = phi %23, %107, %110
%112 = phi %18, %105, %111
%113 = phi %64, %112, %111
%114 = phi %14, %87, %88, %103, %103, %104, %113
%115 = block 2
%116:i32 = var
blockpc %115 0 %116 1
%117:i32 = var
blockpc %115 1 %117 1
%118:i32 = var
%119:i32 = var
%120 = phi %24, %119, 0:i32
%121 = phi %33, 0:i32, %120
%122 = phi %30, 0:i32, %121
%123 = phi %27, 0:i32, %122
%124 = phi %23, %120, %123
%125:i32 = var
%126 = phi %18, %125, %124
%127 = block 3
%128:i32 = var
%129:i32 = var
%130 = phi %24, %129, 0:i32
%131 = phi %33, 0:i32, %130
%132 = phi %30, 0:i32, %131
%133 = phi %27, 0:i32, %132
%134 = phi %23, %130, %133
%135 = phi %43, %87, %134
%136 = phi %40, %135, 0:i32
%137 = phi %20, %134, %136
%138 = phi %18, %128, %137
%139 = phi %56, %138, 0:i32
%140 = phi %53, 0:i32, %139
%141 = phi %50, %138, %140
%142 = phi %17, 0:i32, %141
%143 = phi %127, 0:i32, 0:i32, %142
%144 = phi %64, %143, 0:i32
%145 = phi %14, %124, %126, %126, %126, %126, %144
%146 = phi %115, %118, %145
%147 = phi %80, %114, %146
%148 = phi %77, %114, %147
%149 = phi %11, %114, %148
%150 = add %86, %149
%151 = block 2
%152:i32 = var
blockpc %151 0 %152 1
%153:i32 = var
blockpc %151 1 %153 1
%154:i32 = var
%155 = phi %151, 0:i32, %154
%156 = add %150, %155
%157:i32 = var
%158 = sub %156, %157
%159:i32 = var
%160:i32 = var
%161 = phi %24, %159, %160
%162 = block 2
%163:i32 = var
blockpc %162 0 %163 1
%164:i32 = var
blockpc %162 1 %164 1
%165:i32 = var
%166 = phi %162, 16:i32, %165
%167 = phi %33, %160, %161
%168 = phi %30, -1:i32, %167
%169 = phi %27, %166, %168
%170 = phi %23, %161, %169
%171:i32 = var
%172 = phi %18, %171, %170
%173 = phi %64, %172, %170
%174 = phi %14, %170, %172, %172, %172, %172, %173
%175 = sub %158, %174
%176 = add %10, %175
%177 = phi %4, %176, %175
%178 = eq %3, %177
%179:i32 = zext %178
%180 = eq %179, 0:i32
%181:i32 = var
%182:i32 = var
%183:i32 = var
%184:i32 = var
%185:i32 = var
pc %180 1
pc %181 1
pc %182 1
pc %183 1
pc %184 1
pc %185 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 31:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = and %5, 3:i32
%7 = eq %6, 1:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = and %5, -8:i32
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14 = block 6
%15:i32 = var
%16:i32 = var
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, 0:i32
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 0:i32, %26
%37 = phi %30, 0:i32, %36
%38 = phi %27, 0:i32, %37
%39 = phi %23, %26, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %39, %15
%47 = phi %40, %46, %39
%48 = phi %20, %39, %47
%49 = phi %18, %19, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %59, %49
%61 = phi %53, %49, %60
%62 = phi %50, %49, %61
%63 = phi %17, %49, %62
%64 = block 2
%65:i32 = var
blockpc %64 0 %65 1
%66:i32 = var
blockpc %64 1 %66 1
%67:i32 = var
%68:i32 = var
%69 = phi %24, %68, 0:i32
%70 = phi %33, 0:i32, %69
%71 = phi %30, 0:i32, %70
%72 = phi %27, 0:i32, %71
%73 = phi %23, %69, %72
%74 = phi %18, %67, %73
%75 = phi %64, %74, %73
%76 = phi %14, %15, %16, %63, %63, %63, %75
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84 = phi %80, %76, %83
%85 = phi %77, %76, %84
%86 = phi %11, %76, %85
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91 = phi %24, %90, 0:i32
%92 = phi %33, 0:i32, %91
%93 = phi %30, 0:i32, %92
%94 = phi %27, 0:i32, %93
%95 = phi %23, %91, %94
%96 = phi %43, %95, %87
%97 = phi %40, %96, %95
%98 = phi %20, %95, %97
%99 = phi %18, %89, %98
%100 = phi %56, %88, %99
%101 = phi %53, %99, %100
%102 = phi %50, %99, %101
%103 = phi %17, %99, %102
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107 = phi %24, %106, 0:i32
%108 = phi %33, 0:i32, %107
%109 = phi %30, 0:i32, %108
%110 = phi %27, 0:i32, %109
%111 = phi %23, %107, %110
%112 = phi %18, %105, %111
%113 = phi %64, %112, %111
%114 = phi %14, %87, %88, %103, %103, %104, %113
%115 = block 2
%116:i32 = var
blockpc %115 0 %116 1
%117:i32 = var
blockpc %115 1 %117 1
%118:i32 = var
%119:i32 = var
%120 = phi %24, %119, 0:i32
%121 = phi %33, 0:i32, %120
%122 = phi %30, 0:i32, %121
%123 = phi %27, 0:i32, %122
%124 = phi %23, %120, %123
%125:i32 = var
%126 = phi %18, %125, %124
%127 = block 3
%128:i32 = var
%129:i32 = var
%130 = phi %24, %129, 0:i32
%131 = phi %33, 0:i32, %130
%132 = phi %30, 0:i32, %131
%133 = phi %27, 0:i32, %132
%134 = phi %23, %130, %133
%135 = phi %43, %87, %134
%136 = phi %40, %135, 0:i32
%137 = phi %20, %134, %136
%138 = phi %18, %128, %137
%139 = phi %56, %138, 0:i32
%140 = phi %53, 0:i32, %139
%141 = phi %50, %138, %140
%142 = phi %17, 0:i32, %141
%143 = phi %127, 0:i32, 0:i32, %142
%144 = phi %64, %143, 0:i32
%145 = phi %14, %124, %126, %126, %126, %126, %144
%146 = phi %115, %118, %145
%147 = phi %80, %114, %146
%148 = phi %77, %114, %147
%149 = phi %11, %114, %148
%150 = add %86, %149
%151 = block 2
%152:i32 = var
blockpc %151 0 %152 1
%153:i32 = var
blockpc %151 1 %153 1
%154:i32 = var
%155 = phi %151, 0:i32, %154
%156 = add %150, %155
%157:i32 = var
%158 = sub %156, %157
%159:i32 = var
%160:i32 = var
%161 = phi %24, %159, %160
%162 = block 2
%163:i32 = var
blockpc %162 0 %163 1
%164:i32 = var
blockpc %162 1 %164 1
%165:i32 = var
%166 = phi %162, 16:i32, %165
%167 = phi %33, %160, %161
%168 = phi %30, -1:i32, %167
%169 = phi %27, %166, %168
%170 = phi %23, %161, %169
%171:i32 = var
%172 = phi %18, %171, %170
%173 = phi %64, %172, %170
%174 = phi %14, %170, %172, %172, %172, %172, %173
%175 = sub %158, %174
%176 = add %10, %175
%177 = phi %4, %176, %175
%178 = eq %3, %177
%179:i32 = zext %178
%180 = eq %179, 0:i32
%181:i32 = var
%182:i32 = var
%183:i32 = var
%184:i32 = var
%185:i32 = var
pc %180 1
pc %181 1
pc %182 1
pc %183 1
pc %184 1
pc %185 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 31:i32
%2 = shl %1, 2:i32
%3:i32 = var
%4 = and %3, -8:i32
%5 = block 2
%6:i32 = var
%7 = and %6, 3:i32
%8 = eq %7, 1:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = and %6, -8:i32
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15 = block 6
%16:i32 = var
%17:i32 = var
%18 = block 2
%19 = block 2
%20:i32 = var
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25 = block 2
%26:i32 = var
%27 = phi %25, %26, 0:i32
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = phi %34, 0:i32, %27
%38 = phi %31, 0:i32, %37
%39 = phi %28, 0:i32, %38
%40 = phi %24, %27, %39
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = phi %44, %40, %16
%48 = phi %41, %47, %40
%49 = phi %21, %40, %48
%50 = phi %19, %20, %49
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57 = block 2
%58:i32 = var
blockpc %57 0 %58 1
%59:i32 = var
blockpc %57 1 %59 1
%60:i32 = var
%61 = phi %57, %60, %50
%62 = phi %54, %50, %61
%63 = phi %51, %50, %62
%64 = phi %18, %50, %63
%65 = block 2
%66:i32 = var
blockpc %65 0 %66 1
%67:i32 = var
blockpc %65 1 %67 1
%68:i32 = var
%69:i32 = var
%70 = phi %25, %69, 0:i32
%71 = phi %34, 0:i32, %70
%72 = phi %31, 0:i32, %71
%73 = phi %28, 0:i32, %72
%74 = phi %24, %70, %73
%75 = phi %19, %68, %74
%76 = phi %65, %75, %74
%77 = phi %15, %16, %17, %64, %64, %64, %76
%78 = block 2
%79:i32 = var
blockpc %78 0 %79 1
%80:i32 = var
blockpc %78 1 %80 1
%81 = block 2
%82:i32 = var
blockpc %81 0 %82 1
%83:i32 = var
blockpc %81 1 %83 1
%84:i32 = var
%85 = phi %81, %77, %84
%86 = phi %78, %77, %85
%87 = phi %12, %77, %86
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91:i32 = var
%92 = phi %25, %91, 0:i32
%93 = phi %34, 0:i32, %92
%94 = phi %31, 0:i32, %93
%95 = phi %28, 0:i32, %94
%96 = phi %24, %92, %95
%97 = phi %44, %96, %88
%98 = phi %41, %97, %96
%99 = phi %21, %96, %98
%100 = phi %19, %90, %99
%101 = phi %57, %89, %100
%102 = phi %54, %100, %101
%103 = phi %51, %100, %102
%104 = phi %18, %100, %103
%105:i32 = var
%106:i32 = var
%107:i32 = var
%108 = phi %25, %107, 0:i32
%109 = phi %34, 0:i32, %108
%110 = phi %31, 0:i32, %109
%111 = phi %28, 0:i32, %110
%112 = phi %24, %108, %111
%113 = phi %19, %106, %112
%114 = phi %65, %113, %112
%115 = phi %15, %88, %89, %104, %104, %105, %114
%116 = block 2
%117:i32 = var
blockpc %116 0 %117 1
%118:i32 = var
blockpc %116 1 %118 1
%119:i32 = var
%120:i32 = var
%121 = phi %25, %120, 0:i32
%122 = phi %34, 0:i32, %121
%123 = phi %31, 0:i32, %122
%124 = phi %28, 0:i32, %123
%125 = phi %24, %121, %124
%126:i32 = var
%127 = phi %19, %126, %125
%128 = block 3
%129:i32 = var
%130:i32 = var
%131 = phi %25, %130, 0:i32
%132 = phi %34, 0:i32, %131
%133 = phi %31, 0:i32, %132
%134 = phi %28, 0:i32, %133
%135 = phi %24, %131, %134
%136 = phi %44, %88, %135
%137 = phi %41, %136, 0:i32
%138 = phi %21, %135, %137
%139 = phi %19, %129, %138
%140 = phi %57, %139, 0:i32
%141 = phi %54, 0:i32, %140
%142 = phi %51, %139, %141
%143 = phi %18, 0:i32, %142
%144 = phi %128, 0:i32, 0:i32, %143
%145 = phi %65, %144, 0:i32
%146 = phi %15, %125, %127, %127, %127, %127, %145
%147 = phi %116, %119, %146
%148 = phi %81, %115, %147
%149 = phi %78, %115, %148
%150 = phi %12, %115, %149
%151 = add %87, %150
%152 = block 2
%153:i32 = var
blockpc %152 0 %153 1
%154:i32 = var
blockpc %152 1 %154 1
%155:i32 = var
%156 = phi %152, 0:i32, %155
%157 = add %151, %156
%158:i32 = var
%159 = sub %157, %158
%160:i32 = var
%161:i32 = var
%162 = phi %25, %160, %161
%163 = block 2
%164:i32 = var
blockpc %163 0 %164 1
%165:i32 = var
blockpc %163 1 %165 1
%166:i32 = var
%167 = phi %163, 16:i32, %166
%168 = phi %34, %161, %162
%169 = phi %31, -1:i32, %168
%170 = phi %28, %167, %169
%171 = phi %24, %162, %170
%172:i32 = var
%173 = phi %19, %172, %171
%174 = phi %65, %173, %171
%175 = phi %15, %171, %173, %173, %173, %173, %174
%176 = sub %159, %175
%177 = add %11, %176
%178 = phi %5, %177, %176
%179 = eq %4, %178
%180:i32 = zext %179
%181 = eq %180, 0:i32
%182:i32 = var
%183:i32 = var
%184:i32 = var
%185:i32 = var
%186:i32 = var
pc %181 1
pc %182 1
pc %183 1
pc %184 1
pc %185 1
pc %186 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = lshr %2, 31:i32
%4 = shl %3, 2:i32
%5 = add %1, %4
%6:i32 = var
%7 = and %6, -8:i32
%8 = block 2
%9:i32 = var
%10 = and %9, 3:i32
%11 = eq %10, 1:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14 = and %9, -8:i32
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18 = block 6
%19:i32 = var
%20:i32 = var
%21 = block 2
%22 = block 2
%23:i32 = var
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, 0:i32
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, 0:i32, %30
%41 = phi %34, 0:i32, %40
%42 = phi %31, 0:i32, %41
%43 = phi %27, %30, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = phi %47, %43, %19
%51 = phi %44, %50, %43
%52 = phi %24, %43, %51
%53 = phi %22, %23, %52
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57 = block 2
%58:i32 = var
blockpc %57 0 %58 1
%59:i32 = var
blockpc %57 1 %59 1
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63:i32 = var
%64 = phi %60, %63, %53
%65 = phi %57, %53, %64
%66 = phi %54, %53, %65
%67 = phi %21, %53, %66
%68 = block 2
%69:i32 = var
blockpc %68 0 %69 1
%70:i32 = var
blockpc %68 1 %70 1
%71:i32 = var
%72:i32 = var
%73 = phi %28, %72, 0:i32
%74 = phi %37, 0:i32, %73
%75 = phi %34, 0:i32, %74
%76 = phi %31, 0:i32, %75
%77 = phi %27, %73, %76
%78 = phi %22, %71, %77
%79 = phi %68, %78, %77
%80 = phi %18, %19, %20, %67, %67, %67, %79
%81 = block 2
%82:i32 = var
blockpc %81 0 %82 1
%83:i32 = var
blockpc %81 1 %83 1
%84 = block 2
%85:i32 = var
blockpc %84 0 %85 1
%86:i32 = var
blockpc %84 1 %86 1
%87:i32 = var
%88 = phi %84, %80, %87
%89 = phi %81, %80, %88
%90 = phi %15, %80, %89
%91:i32 = var
%92:i32 = var
%93:i32 = var
%94:i32 = var
%95 = phi %28, %94, 0:i32
%96 = phi %37, 0:i32, %95
%97 = phi %34, 0:i32, %96
%98 = phi %31, 0:i32, %97
%99 = phi %27, %95, %98
%100 = phi %47, %99, %91
%101 = phi %44, %100, %99
%102 = phi %24, %99, %101
%103 = phi %22, %93, %102
%104 = phi %60, %92, %103
%105 = phi %57, %103, %104
%106 = phi %54, %103, %105
%107 = phi %21, %103, %106
%108:i32 = var
%109:i32 = var
%110:i32 = var
%111 = phi %28, %110, 0:i32
%112 = phi %37, 0:i32, %111
%113 = phi %34, 0:i32, %112
%114 = phi %31, 0:i32, %113
%115 = phi %27, %111, %114
%116 = phi %22, %109, %115
%117 = phi %68, %116, %115
%118 = phi %18, %91, %92, %107, %107, %108, %117
%119 = block 2
%120:i32 = var
blockpc %119 0 %120 1
%121:i32 = var
blockpc %119 1 %121 1
%122:i32 = var
%123:i32 = var
%124 = phi %28, %123, 0:i32
%125 = phi %37, 0:i32, %124
%126 = phi %34, 0:i32, %125
%127 = phi %31, 0:i32, %126
%128 = phi %27, %124, %127
%129:i32 = var
%130 = phi %22, %129, %128
%131 = block 3
%132:i32 = var
%133:i32 = var
%134 = phi %28, %133, 0:i32
%135 = phi %37, 0:i32, %134
%136 = phi %34, 0:i32, %135
%137 = phi %31, 0:i32, %136
%138 = phi %27, %134, %137
%139 = phi %47, %91, %138
%140 = phi %44, %139, 0:i32
%141 = phi %24, %138, %140
%142 = phi %22, %132, %141
%143 = phi %60, %142, 0:i32
%144 = phi %57, 0:i32, %143
%145 = phi %54, %142, %144
%146 = phi %21, 0:i32, %145
%147 = phi %131, 0:i32, 0:i32, %146
%148 = phi %68, %147, 0:i32
%149 = phi %18, %128, %130, %130, %130, %130, %148
%150 = phi %119, %122, %149
%151 = phi %84, %118, %150
%152 = phi %81, %118, %151
%153 = phi %15, %118, %152
%154 = add %90, %153
%155 = block 2
%156:i32 = var
blockpc %155 0 %156 1
%157:i32 = var
blockpc %155 1 %157 1
%158:i32 = var
%159 = phi %155, 0:i32, %158
%160 = add %154, %159
%161:i32 = var
%162 = sub %160, %161
%163:i32 = var
%164:i32 = var
%165 = phi %28, %163, %164
%166 = block 2
%167:i32 = var
blockpc %166 0 %167 1
%168:i32 = var
blockpc %166 1 %168 1
%169:i32 = var
%170 = phi %166, 16:i32, %169
%171 = phi %37, %164, %165
%172 = phi %34, -1:i32, %171
%173 = phi %31, %170, %172
%174 = phi %27, %165, %173
%175:i32 = var
%176 = phi %22, %175, %174
%177 = phi %68, %176, %174
%178 = phi %18, %174, %176, %176, %176, %176, %177
%179 = sub %162, %178
%180 = add %14, %179
%181 = phi %8, %180, %179
%182 = eq %7, %181
%183:i32 = zext %182
%184 = eq %183, 0:i32
%185:i32 = var
%186:i32 = var
%187:i32 = var
%188:i32 = var
%189:i32 = var
pc %184 1
pc %185 1
pc %186 1
pc %187 1
pc %188 1
pc %189 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = and %5, 3:i32
%7 = eq %6, 1:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = and %5, -8:i32
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14 = block 6
%15:i32 = var
%16:i32 = var
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, 0:i32
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 0:i32, %26
%37 = phi %30, 0:i32, %36
%38 = phi %27, 0:i32, %37
%39 = phi %23, %26, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %39, %15
%47 = phi %40, %46, %39
%48 = phi %20, %39, %47
%49 = phi %18, %19, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %59, %49
%61 = phi %53, %49, %60
%62 = phi %50, %49, %61
%63 = phi %17, %49, %62
%64 = block 2
%65:i32 = var
blockpc %64 0 %65 1
%66:i32 = var
blockpc %64 1 %66 1
%67:i32 = var
%68:i32 = var
%69 = phi %24, %68, 0:i32
%70 = phi %33, 0:i32, %69
%71 = phi %30, 0:i32, %70
%72 = phi %27, 0:i32, %71
%73 = phi %23, %69, %72
%74 = phi %18, %67, %73
%75 = phi %64, %74, %73
%76 = phi %14, %15, %16, %63, %63, %63, %75
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84 = phi %80, %76, %83
%85 = phi %77, %76, %84
%86 = phi %11, %76, %85
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91 = phi %24, %90, 0:i32
%92 = phi %33, 0:i32, %91
%93 = phi %30, 0:i32, %92
%94 = phi %27, 0:i32, %93
%95 = phi %23, %91, %94
%96 = phi %43, %95, %87
%97 = phi %40, %96, %95
%98 = phi %20, %95, %97
%99 = phi %18, %89, %98
%100 = phi %56, %88, %99
%101 = phi %53, %99, %100
%102 = phi %50, %99, %101
%103 = phi %17, %99, %102
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107 = phi %24, %106, 0:i32
%108 = phi %33, 0:i32, %107
%109 = phi %30, 0:i32, %108
%110 = phi %27, 0:i32, %109
%111 = phi %23, %107, %110
%112 = phi %18, %105, %111
%113 = phi %64, %112, %111
%114 = phi %14, %87, %88, %103, %103, %104, %113
%115 = block 2
%116:i32 = var
blockpc %115 0 %116 1
%117:i32 = var
blockpc %115 1 %117 1
%118:i32 = var
%119:i32 = var
%120 = phi %24, %119, 0:i32
%121 = phi %33, 0:i32, %120
%122 = phi %30, 0:i32, %121
%123 = phi %27, 0:i32, %122
%124 = phi %23, %120, %123
%125:i32 = var
%126 = phi %18, %125, %124
%127 = block 3
%128:i32 = var
%129:i32 = var
%130 = phi %24, %129, 0:i32
%131 = phi %33, 0:i32, %130
%132 = phi %30, 0:i32, %131
%133 = phi %27, 0:i32, %132
%134 = phi %23, %130, %133
%135 = phi %43, %87, %134
%136 = phi %40, %135, 0:i32
%137 = phi %20, %134, %136
%138 = phi %18, %128, %137
%139 = phi %56, %138, 0:i32
%140 = phi %53, 0:i32, %139
%141 = phi %50, %138, %140
%142 = phi %17, 0:i32, %141
%143 = phi %127, 0:i32, 0:i32, %142
%144 = phi %64, %143, 0:i32
%145 = phi %14, %124, %126, %126, %126, %126, %144
%146 = phi %115, %118, %145
%147 = phi %80, %114, %146
%148 = phi %77, %114, %147
%149 = phi %11, %114, %148
%150 = add %86, %149
%151 = block 2
%152:i32 = var
blockpc %151 0 %152 1
%153:i32 = var
blockpc %151 1 %153 1
%154:i32 = var
%155 = phi %151, 0:i32, %154
%156 = add %150, %155
%157:i32 = var
%158 = sub %156, %157
%159:i32 = var
%160:i32 = var
%161 = phi %24, %159, %160
%162 = block 2
%163:i32 = var
blockpc %162 0 %163 1
%164:i32 = var
blockpc %162 1 %164 1
%165:i32 = var
%166 = phi %162, 16:i32, %165
%167 = phi %33, %160, %161
%168 = phi %30, -1:i32, %167
%169 = phi %27, %166, %168
%170 = phi %23, %161, %169
%171:i32 = var
%172 = phi %18, %171, %170
%173 = phi %64, %172, %170
%174 = phi %14, %170, %172, %172, %172, %172, %173
%175 = sub %158, %174
%176 = add %10, %175
%177 = phi %4, %176, %175
%178 = eq %3, %177
%179:i32 = zext %178
%180 = eq %179, 0:i32
%181:i32 = var
%182:i32 = var
%183:i32 = var
%184:i32 = var
%185:i32 = var
pc %180 1
pc %181 1
pc %182 1
pc %183 1
pc %184 1
pc %185 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = shl %0, 1:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = and %5, 3:i32
%7 = eq %6, 1:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = and %5, -8:i32
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14 = block 6
%15:i32 = var
%16:i32 = var
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, 0:i32
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 0:i32, %26
%37 = phi %30, 0:i32, %36
%38 = phi %27, 0:i32, %37
%39 = phi %23, %26, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %39, %15
%47 = phi %40, %46, %39
%48 = phi %20, %39, %47
%49 = phi %18, %19, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %59, %49
%61 = phi %53, %49, %60
%62 = phi %50, %49, %61
%63 = phi %17, %49, %62
%64 = block 2
%65:i32 = var
blockpc %64 0 %65 1
%66:i32 = var
blockpc %64 1 %66 1
%67:i32 = var
%68:i32 = var
%69 = phi %24, %68, 0:i32
%70 = phi %33, 0:i32, %69
%71 = phi %30, 0:i32, %70
%72 = phi %27, 0:i32, %71
%73 = phi %23, %69, %72
%74 = phi %18, %67, %73
%75 = phi %64, %74, %73
%76 = phi %14, %15, %16, %63, %63, %63, %75
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84 = phi %80, %76, %83
%85 = phi %77, %76, %84
%86 = phi %11, %76, %85
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91 = phi %24, %90, 0:i32
%92 = phi %33, 0:i32, %91
%93 = phi %30, 0:i32, %92
%94 = phi %27, 0:i32, %93
%95 = phi %23, %91, %94
%96 = phi %43, %95, %87
%97 = phi %40, %96, %95
%98 = phi %20, %95, %97
%99 = phi %18, %89, %98
%100 = phi %56, %88, %99
%101 = phi %53, %99, %100
%102 = phi %50, %99, %101
%103 = phi %17, %99, %102
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107 = phi %24, %106, 0:i32
%108 = phi %33, 0:i32, %107
%109 = phi %30, 0:i32, %108
%110 = phi %27, 0:i32, %109
%111 = phi %23, %107, %110
%112 = phi %18, %105, %111
%113 = phi %64, %112, %111
%114 = phi %14, %87, %88, %103, %103, %104, %113
%115 = block 2
%116:i32 = var
blockpc %115 0 %116 1
%117:i32 = var
blockpc %115 1 %117 1
%118:i32 = var
%119:i32 = var
%120 = phi %24, %119, 0:i32
%121 = phi %33, 0:i32, %120
%122 = phi %30, 0:i32, %121
%123 = phi %27, 0:i32, %122
%124 = phi %23, %120, %123
%125:i32 = var
%126 = phi %18, %125, %124
%127 = block 3
%128:i32 = var
%129:i32 = var
%130 = phi %24, %129, 0:i32
%131 = phi %33, 0:i32, %130
%132 = phi %30, 0:i32, %131
%133 = phi %27, 0:i32, %132
%134 = phi %23, %130, %133
%135 = phi %43, %87, %134
%136 = phi %40, %135, 0:i32
%137 = phi %20, %134, %136
%138 = phi %18, %128, %137
%139 = phi %56, %138, 0:i32
%140 = phi %53, 0:i32, %139
%141 = phi %50, %138, %140
%142 = phi %17, 0:i32, %141
%143 = phi %127, 0:i32, 0:i32, %142
%144 = phi %64, %143, 0:i32
%145 = phi %14, %124, %126, %126, %126, %126, %144
%146 = phi %115, %118, %145
%147 = phi %80, %114, %146
%148 = phi %77, %114, %147
%149 = phi %11, %114, %148
%150 = add %86, %149
%151 = block 2
%152:i32 = var
blockpc %151 0 %152 1
%153:i32 = var
blockpc %151 1 %153 1
%154:i32 = var
%155 = phi %151, 0:i32, %154
%156 = add %150, %155
%157:i32 = var
%158 = sub %156, %157
%159:i32 = var
%160:i32 = var
%161 = phi %24, %159, %160
%162 = block 2
%163:i32 = var
blockpc %162 0 %163 1
%164:i32 = var
blockpc %162 1 %164 1
%165:i32 = var
%166 = phi %162, 16:i32, %165
%167 = phi %33, %160, %161
%168 = phi %30, -1:i32, %167
%169 = phi %27, %166, %168
%170 = phi %23, %161, %169
%171:i32 = var
%172 = phi %18, %171, %170
%173 = phi %64, %172, %170
%174 = phi %14, %170, %172, %172, %172, %172, %173
%175 = sub %158, %174
%176 = add %10, %175
%177 = phi %4, %176, %175
%178 = eq %3, %177
%179:i32 = zext %178
%180 = eq %179, 0:i32
%181:i32 = var
%182:i32 = var
%183:i32 = var
%184:i32 = var
%185:i32 = var
pc %180 1
pc %181 1
pc %182 1
pc %183 1
pc %184 1
pc %185 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = and %5, 3:i32
%7 = eq %6, 1:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = and %5, -8:i32
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14 = block 6
%15:i32 = var
%16:i32 = var
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, 0:i32
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 0:i32, %26
%37 = phi %30, 0:i32, %36
%38 = phi %27, 0:i32, %37
%39 = phi %23, %26, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %39, %15
%47 = phi %40, %46, %39
%48 = phi %20, %39, %47
%49 = phi %18, %19, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %59, %49
%61 = phi %53, %49, %60
%62 = phi %50, %49, %61
%63 = phi %17, %49, %62
%64 = block 2
%65:i32 = var
blockpc %64 0 %65 1
%66:i32 = var
blockpc %64 1 %66 1
%67:i32 = var
%68:i32 = var
%69 = phi %24, %68, 0:i32
%70 = phi %33, 0:i32, %69
%71 = phi %30, 0:i32, %70
%72 = phi %27, 0:i32, %71
%73 = phi %23, %69, %72
%74 = phi %18, %67, %73
%75 = phi %64, %74, %73
%76 = phi %14, %15, %16, %63, %63, %63, %75
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84 = phi %80, %76, %83
%85 = phi %77, %76, %84
%86 = phi %11, %76, %85
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91 = phi %24, %90, 0:i32
%92 = phi %33, 0:i32, %91
%93 = phi %30, 0:i32, %92
%94 = phi %27, 0:i32, %93
%95 = phi %23, %91, %94
%96 = phi %43, %95, %87
%97 = phi %40, %96, %95
%98 = phi %20, %95, %97
%99 = phi %18, %89, %98
%100 = phi %56, %88, %99
%101 = phi %53, %99, %100
%102 = phi %50, %99, %101
%103 = phi %17, %99, %102
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107 = phi %24, %106, 0:i32
%108 = phi %33, 0:i32, %107
%109 = phi %30, 0:i32, %108
%110 = phi %27, 0:i32, %109
%111 = phi %23, %107, %110
%112 = phi %18, %105, %111
%113 = phi %64, %112, %111
%114 = phi %14, %87, %88, %103, %103, %104, %113
%115 = block 2
%116:i32 = var
blockpc %115 0 %116 1
%117:i32 = var
blockpc %115 1 %117 1
%118:i32 = var
%119:i32 = var
%120 = phi %24, %119, 0:i32
%121 = phi %33, 0:i32, %120
%122 = phi %30, 0:i32, %121
%123 = phi %27, 0:i32, %122
%124 = phi %23, %120, %123
%125:i32 = var
%126 = phi %18, %125, %124
%127 = block 3
%128:i32 = var
%129:i32 = var
%130 = phi %24, %129, 0:i32
%131 = phi %33, 0:i32, %130
%132 = phi %30, 0:i32, %131
%133 = phi %27, 0:i32, %132
%134 = phi %23, %130, %133
%135 = phi %43, %87, %134
%136 = phi %40, %135, 0:i32
%137 = phi %20, %134, %136
%138 = phi %18, %128, %137
%139 = phi %56, %138, 0:i32
%140 = phi %53, 0:i32, %139
%141 = phi %50, %138, %140
%142 = phi %17, 0:i32, %141
%143 = phi %127, 0:i32, 0:i32, %142
%144 = phi %64, %143, 0:i32
%145 = phi %14, %124, %126, %126, %126, %126, %144
%146 = phi %115, %118, %145
%147 = phi %80, %114, %146
%148 = phi %77, %114, %147
%149 = phi %11, %114, %148
%150 = add %86, %149
%151 = block 2
%152:i32 = var
blockpc %151 0 %152 1
%153:i32 = var
blockpc %151 1 %153 1
%154:i32 = var
%155 = phi %151, 0:i32, %154
%156 = add %150, %155
%157:i32 = var
%158 = sub %156, %157
%159:i32 = var
%160:i32 = var
%161 = phi %24, %159, %160
%162 = block 2
%163:i32 = var
blockpc %162 0 %163 1
%164:i32 = var
blockpc %162 1 %164 1
%165:i32 = var
%166 = phi %162, 16:i32, %165
%167 = phi %33, %160, %161
%168 = phi %30, -1:i32, %167
%169 = phi %27, %166, %168
%170 = phi %23, %161, %169
%171:i32 = var
%172 = phi %18, %171, %170
%173 = phi %64, %172, %170
%174 = phi %14, %170, %172, %172, %172, %172, %173
%175 = sub %158, %174
%176 = add %10, %175
%177 = phi %4, %176, %175
%178 = eq %3, %177
%179:i32 = zext %178
%180 = eq %179, 0:i32
%181:i32 = var
%182:i32 = var
%183:i32 = var
%184:i32 = var
%185:i32 = var
pc %180 1
pc %181 1
pc %182 1
pc %183 1
pc %184 1
pc %185 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = and %5, 3:i32
%7 = eq %6, 1:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = and %5, -8:i32
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14 = block 6
%15:i32 = var
%16:i32 = var
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23 = block 2
%24 = block 2
%25:i32 = var
%26 = phi %24, %25, 0:i32
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, 0:i32, %26
%37 = phi %30, 0:i32, %36
%38 = phi %27, 0:i32, %37
%39 = phi %23, %26, %38
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = block 2
%44:i32 = var
blockpc %43 0 %44 1
%45:i32 = var
blockpc %43 1 %45 1
%46 = phi %43, %39, %15
%47 = phi %40, %46, %39
%48 = phi %20, %39, %47
%49 = phi %18, %19, %48
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = block 2
%57:i32 = var
blockpc %56 0 %57 1
%58:i32 = var
blockpc %56 1 %58 1
%59:i32 = var
%60 = phi %56, %59, %49
%61 = phi %53, %49, %60
%62 = phi %50, %49, %61
%63 = phi %17, %49, %62
%64 = block 2
%65:i32 = var
blockpc %64 0 %65 1
%66:i32 = var
blockpc %64 1 %66 1
%67:i32 = var
%68:i32 = var
%69 = phi %24, %68, 0:i32
%70 = phi %33, 0:i32, %69
%71 = phi %30, 0:i32, %70
%72 = phi %27, 0:i32, %71
%73 = phi %23, %69, %72
%74 = phi %18, %67, %73
%75 = phi %64, %74, %73
%76 = phi %14, %15, %16, %63, %63, %63, %75
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80 = block 2
%81:i32 = var
blockpc %80 0 %81 1
%82:i32 = var
blockpc %80 1 %82 1
%83:i32 = var
%84 = phi %80, %76, %83
%85 = phi %77, %76, %84
%86 = phi %11, %76, %85
%87:i32 = var
%88:i32 = var
%89:i32 = var
%90:i32 = var
%91 = phi %24, %90, 0:i32
%92 = phi %33, 0:i32, %91
%93 = phi %30, 0:i32, %92
%94 = phi %27, 0:i32, %93
%95 = phi %23, %91, %94
%96 = phi %43, %95, %87
%97 = phi %40, %96, %95
%98 = phi %20, %95, %97
%99 = phi %18, %89, %98
%100 = phi %56, %88, %99
%101 = phi %53, %99, %100
%102 = phi %50, %99, %101
%103 = phi %17, %99, %102
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107 = phi %24, %106, 0:i32
%108 = phi %33, 0:i32, %107
%109 = phi %30, 0:i32, %108
%110 = phi %27, 0:i32, %109
%111 = phi %23, %107, %110
%112 = phi %18, %105, %111
%113 = phi %64, %112, %111
%114 = phi %14, %87, %88, %103, %103, %104, %113
%115 = block 2
%116:i32 = var
blockpc %115 0 %116 1
%117:i32 = var
blockpc %115 1 %117 1
%118:i32 = var
%119:i32 = var
%120 = phi %24, %119, 0:i32
%121 = phi %33, 0:i32, %120
%122 = phi %30, 0:i32, %121
%123 = phi %27, 0:i32, %122
%124 = phi %23, %120, %123
%125:i32 = var
%126 = phi %18, %125, %124
%127 = block 3
%128:i32 = var
%129:i32 = var
%130 = phi %24, %129, 0:i32
%131 = phi %33, 0:i32, %130
%132 = phi %30, 0:i32, %131
%133 = phi %27, 0:i32, %132
%134 = phi %23, %130, %133
%135 = phi %43, %87, %134
%136 = phi %40, %135, 0:i32
%137 = phi %20, %134, %136
%138 = phi %18, %128, %137
%139 = phi %56, %138, 0:i32
%140 = phi %53, 0:i32, %139
%141 = phi %50, %138, %140
%142 = phi %17, 0:i32, %141
%143 = phi %127, 0:i32, 0:i32, %142
%144 = phi %64, %143, 0:i32
%145 = phi %14, %124, %126, %126, %126, %126, %144
%146 = phi %115, %118, %145
%147 = phi %80, %114, %146
%148 = phi %77, %114, %147
%149 = phi %11, %114, %148
%150 = add %86, %149
%151 = block 2
%152:i32 = var
blockpc %151 0 %152 1
%153:i32 = var
blockpc %151 1 %153 1
%154:i32 = var
%155 = phi %151, 0:i32, %154
%156 = add %150, %155
%157:i32 = var
%158 = sub %156, %157
%159:i32 = var
%160:i32 = var
%161 = phi %24, %159, %160
%162 = block 2
%163:i32 = var
blockpc %162 0 %163 1
%164:i32 = var
blockpc %162 1 %164 1
%165:i32 = var
%166 = phi %162, 16:i32, %165
%167 = phi %33, %160, %161
%168 = phi %30, -1:i32, %167
%169 = phi %27, %166, %168
%170 = phi %23, %161, %169
%171:i32 = var
%172 = phi %18, %171, %170
%173 = phi %64, %172, %170
%174 = phi %14, %170, %172, %172, %172, %172, %173
%175 = sub %158, %174
%176 = add %10, %175
%177 = phi %4, %176, %175
%178 = eq %3, %177
%179:i32 = zext %178
%180 = eq %179, 0:i32
%181:i32 = var
%182:i32 = var
%183:i32 = var
%184:i32 = var
%185:i32 = var
pc %180 1
pc %181 1
pc %182 1
pc %183 1
pc %184 1
pc %185 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5 = block 2
%6 = block 6
%7:i32 = var
%8:i32 = var
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = block 2
%13 = block 2
%14 = block 2
%15:i32 = var
%16 = phi %14, %15, 0:i32
%17 = block 2
%18 = block 2
%19 = block 2
%20 = phi %19, 0:i32, %16
%21 = phi %18, 0:i32, %20
%22 = phi %17, 0:i32, %21
%23 = phi %13, %16, %22
%24 = block 2
%25 = block 2
%26 = phi %25, %23, %7
%27 = phi %24, %26, %23
%28 = phi %12, %23, %27
%29 = phi %10, %11, %28
%30 = block 2
%31 = block 2
%32 = block 2
%33:i32 = var
%34 = phi %32, %33, %29
%35 = phi %31, %29, %34
%36 = phi %30, %29, %35
%37 = phi %9, %29, %36
%38 = block 2
%39:i32 = var
%40:i32 = var
%41 = phi %14, %40, 0:i32
%42 = phi %19, 0:i32, %41
%43 = phi %18, 0:i32, %42
%44 = phi %17, 0:i32, %43
%45 = phi %13, %41, %44
%46 = phi %10, %39, %45
%47 = phi %38, %46, %45
%48 = phi %6, %7, %8, %37, %37, %37, %47
%49 = block 2
%50 = block 2
%51:i32 = var
%52 = phi %50, %48, %51
%53 = phi %49, %48, %52
%54 = phi %5, %48, %53
%55:i32 = var
%56:i32 = var
%57:i32 = var
%58:i32 = var
%59 = phi %14, %58, 0:i32
%60 = phi %19, 0:i32, %59
%61 = phi %18, 0:i32, %60
%62 = phi %17, 0:i32, %61
%63 = phi %13, %59, %62
%64 = phi %25, %63, %55
%65 = phi %24, %64, %63
%66 = phi %12, %63, %65
%67 = phi %10, %57, %66
%68 = phi %32, %56, %67
%69 = phi %31, %67, %68
%70 = phi %30, %67, %69
%71 = phi %9, %67, %70
%72:i32 = var
%73:i32 = var
%74:i32 = var
%75 = phi %14, %74, 0:i32
%76 = phi %19, 0:i32, %75
%77 = phi %18, 0:i32, %76
%78 = phi %17, 0:i32, %77
%79 = phi %13, %75, %78
%80 = phi %10, %73, %79
%81 = phi %38, %80, %79
%82 = phi %6, %55, %56, %71, %71, %72, %81
%83 = block 2
%84:i32 = var
%85:i32 = var
%86 = phi %14, %85, 0:i32
%87 = phi %19, 0:i32, %86
%88 = phi %18, 0:i32, %87
%89 = phi %17, 0:i32, %88
%90 = phi %13, %86, %89
%91:i32 = var
%92 = phi %10, %91, %90
%93 = block 3
%94:i32 = var
%95:i32 = var
%96 = phi %14, %95, 0:i32
%97 = phi %19, 0:i32, %96
%98 = phi %18, 0:i32, %97
%99 = phi %17, 0:i32, %98
%100 = phi %13, %96, %99
%101 = phi %25, %55, %100
%102 = phi %24, %101, 0:i32
%103 = phi %12, %100, %102
%104 = phi %10, %94, %103
%105 = phi %32, %104, 0:i32
%106 = phi %31, 0:i32, %105
%107 = phi %30, %104, %106
%108 = phi %9, 0:i32, %107
%109 = phi %93, 0:i32, 0:i32, %108
%110 = phi %38, %109, 0:i32
%111 = phi %6, %90, %92, %92, %92, %92, %110
%112 = phi %83, %84, %111
%113 = phi %50, %82, %112
%114 = phi %49, %82, %113
%115 = phi %5, %82, %114
%116 = add %54, %115 (hasExternalUses)
%117 = block 2
%118:i32 = var
%119 = phi %117, 0:i32, %118
%120 = add %116, %119 (hasExternalUses)
%121:i32 = var
%122 = sub %120, %121
%123:i32 = var
%124:i32 = var
%125 = phi %14, %123, %124
%126 = block 2
%127:i32 = var
%128 = phi %126, 16:i32, %127
%129 = phi %19, %124, %125
%130 = phi %18, -1:i32, %129
%131 = phi %17, %128, %130
%132 = phi %13, %125, %131
%133:i32 = var
%134 = phi %10, %133, %132
%135 = phi %38, %134, %132
%136 = phi %6, %132, %134, %134, %134, %134, %135
%137 = sub %122, %136 (hasExternalUses)
%138 = add %4, %137 (hasExternalUses)
%139 = phi %2, %138, %137
%140 = eq %1, %139
%141:i32 = var
blockpc %2 0 %141 1
%142:i32 = var
blockpc %2 1 %142 1
%143:i32 = var
blockpc %5 0 %143 1
%144:i32 = var
blockpc %5 1 %144 1
%145:i32 = var
blockpc %12 0 %145 1
%146:i32 = var
blockpc %12 1 %146 1
%147:i32 = var
blockpc %17 0 %147 1
%148:i32 = var
blockpc %17 1 %148 1
%149:i32 = var
blockpc %18 0 %149 1
%150:i32 = var
blockpc %18 1 %150 1
%151:i32 = var
blockpc %19 0 %151 1
%152:i32 = var
blockpc %19 1 %152 1
%153:i32 = var
blockpc %24 0 %153 1
%154:i32 = var
blockpc %24 1 %154 1
%155:i32 = var
blockpc %25 0 %155 1
%156:i32 = var
blockpc %25 1 %156 1
%157:i32 = var
blockpc %30 0 %157 1
%158:i32 = var
blockpc %30 1 %158 1
%159:i32 = var
blockpc %31 0 %159 1
%160:i32 = var
blockpc %31 1 %160 1
%161:i32 = var
blockpc %32 0 %161 1
%162:i32 = var
blockpc %32 1 %162 1
%163:i32 = var
blockpc %38 0 %163 1
%164:i32 = var
blockpc %38 1 %164 1
%165:i32 = var
blockpc %49 0 %165 1
%166:i32 = var
blockpc %49 1 %166 1
%167:i32 = var
blockpc %50 0 %167 1
%168:i32 = var
blockpc %50 1 %168 1
%169:i32 = var
blockpc %83 0 %169 1
%170:i32 = var
blockpc %83 1 %170 1
%171:i32 = var
blockpc %117 0 %171 1
%172:i32 = var
blockpc %117 1 %172 1
%173:i32 = var
blockpc %126 0 %173 1
%174:i32 = var
blockpc %126 1 %174 1
%175:i32 = var
%176:i32 = var
%177:i32 = var
%178:i32 = var
%179:i32 = var
%180:i32 = var
pc %175 1
pc %176 1
pc %177 1
pc %178 1
pc %179 1
pc %180 1
infer %140


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 24:i32
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %12 0 %74 1
%75:i32 = var
blockpc %12 1 %75 1
%76:i32 = var
blockpc %13 0 %76 1
%77:i32 = var
blockpc %13 1 %77 1
%78:i32 = var
blockpc %14 0 %78 1
%79:i32 = var
blockpc %14 1 %79 1
%80:i32 = var
blockpc %19 0 %80 1
%81:i32 = var
blockpc %19 1 %81 1
%82:i32 = var
blockpc %20 0 %82 1
%83:i32 = var
blockpc %20 1 %83 1
%84:i32 = var
blockpc %25 0 %84 1
%85:i32 = var
blockpc %25 1 %85 1
%86:i32 = var
blockpc %26 0 %86 1
%87:i32 = var
blockpc %26 1 %87 1
%88:i32 = var
blockpc %27 0 %88 1
%89:i32 = var
blockpc %27 1 %89 1
%90:i32 = var
blockpc %33 0 %90 1
%91:i32 = var
blockpc %33 1 %91 1
%92:i32 = var
blockpc %44 0 %92 1
%93:i32 = var
blockpc %44 1 %93 1
%94:i32 = var
blockpc %45 0 %94 1
%95:i32 = var
blockpc %45 1 %95 1
%96:i32 = var
blockpc %50 0 %96 1
%97:i32 = var
blockpc %50 1 %97 1
%98:i32 = var
blockpc %57 0 %98 1
%99:i32 = var
blockpc %57 1 %99 1
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105:i32 = var
pc %100 1
pc %101 1
pc %102 1
pc %103 1
pc %104 1
pc %105 1
infer %69


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 12:i32
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %12 0 %74 1
%75:i32 = var
blockpc %12 1 %75 1
%76:i32 = var
blockpc %13 0 %76 1
%77:i32 = var
blockpc %13 1 %77 1
%78:i32 = var
blockpc %14 0 %78 1
%79:i32 = var
blockpc %14 1 %79 1
%80:i32 = var
blockpc %19 0 %80 1
%81:i32 = var
blockpc %19 1 %81 1
%82:i32 = var
blockpc %20 0 %82 1
%83:i32 = var
blockpc %20 1 %83 1
%84:i32 = var
blockpc %25 0 %84 1
%85:i32 = var
blockpc %25 1 %85 1
%86:i32 = var
blockpc %26 0 %86 1
%87:i32 = var
blockpc %26 1 %87 1
%88:i32 = var
blockpc %27 0 %88 1
%89:i32 = var
blockpc %27 1 %89 1
%90:i32 = var
blockpc %33 0 %90 1
%91:i32 = var
blockpc %33 1 %91 1
%92:i32 = var
blockpc %44 0 %92 1
%93:i32 = var
blockpc %44 1 %93 1
%94:i32 = var
blockpc %45 0 %94 1
%95:i32 = var
blockpc %45 1 %95 1
%96:i32 = var
blockpc %50 0 %96 1
%97:i32 = var
blockpc %50 1 %97 1
%98:i32 = var
blockpc %57 0 %98 1
%99:i32 = var
blockpc %57 1 %99 1
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105:i32 = var
pc %100 1
pc %101 1
pc %102 1
pc %103 1
pc %104 1
pc %105 1
infer %69


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54:i32 = var
%55:i32 = var
%56 = phi %9, %54, %55
%57 = block 2
%58:i32 = var
%59 = phi %57, 16:i32, %58
%60 = phi %14, %55, %56
%61 = phi %13, -1:i32, %60
%62 = phi %12, %59, %61
%63 = phi %8, %56, %62
%64:i32 = var
%65 = phi %5, %64, %63
%66 = phi %33, %65, %63
%67 = phi %1, %63, %65, %65, %65, %65, %66
%68 = add %53, %67 (hasExternalUses)
%69 = add %68, 8:i32
%70:i32 = var
blockpc %0 0 %70 1
%71:i32 = var
blockpc %0 1 %71 1
%72:i32 = var
blockpc %7 0 %72 1
%73:i32 = var
blockpc %7 1 %73 1
%74:i32 = var
blockpc %12 0 %74 1
%75:i32 = var
blockpc %12 1 %75 1
%76:i32 = var
blockpc %13 0 %76 1
%77:i32 = var
blockpc %13 1 %77 1
%78:i32 = var
blockpc %14 0 %78 1
%79:i32 = var
blockpc %14 1 %79 1
%80:i32 = var
blockpc %19 0 %80 1
%81:i32 = var
blockpc %19 1 %81 1
%82:i32 = var
blockpc %20 0 %82 1
%83:i32 = var
blockpc %20 1 %83 1
%84:i32 = var
blockpc %25 0 %84 1
%85:i32 = var
blockpc %25 1 %85 1
%86:i32 = var
blockpc %26 0 %86 1
%87:i32 = var
blockpc %26 1 %87 1
%88:i32 = var
blockpc %27 0 %88 1
%89:i32 = var
blockpc %27 1 %89 1
%90:i32 = var
blockpc %33 0 %90 1
%91:i32 = var
blockpc %33 1 %91 1
%92:i32 = var
blockpc %44 0 %92 1
%93:i32 = var
blockpc %44 1 %93 1
%94:i32 = var
blockpc %45 0 %94 1
%95:i32 = var
blockpc %45 1 %95 1
%96:i32 = var
blockpc %50 0 %96 1
%97:i32 = var
blockpc %50 1 %97 1
%98:i32 = var
blockpc %57 0 %98 1
%99:i32 = var
blockpc %57 1 %99 1
%100:i32 = var
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104:i32 = var
%105:i32 = var
pc %100 1
pc %101 1
pc %102 1
pc %103 1
pc %104 1
pc %105 1
infer %69


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = add %3, 8:i32
%5:i32 = var
%6 = block 2
%7 = block 6
%8 = phi %7, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%9 = eq %8, 143:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12:i32 = var
%13:i32 = var
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20 = block 2
%21 = block 2
%22:i32 = var
%23 = phi %21, %22, 0:i32
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = phi %30, 0:i32, %23
%34 = phi %27, 0:i32, %33
%35 = phi %24, 0:i32, %34
%36 = phi %20, %23, %35
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = block 2
%41:i32 = var
blockpc %40 0 %41 1
%42:i32 = var
blockpc %40 1 %42 1
%43 = phi %40, %36, %12
%44 = phi %37, %43, %36
%45 = phi %17, %36, %44
%46 = phi %15, %16, %45
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56:i32 = var
%57 = phi %53, %56, %46
%58 = phi %50, %46, %57
%59 = phi %47, %46, %58
%60 = phi %14, %46, %59
%61 = block 2
%62:i32 = var
blockpc %61 0 %62 1
%63:i32 = var
blockpc %61 1 %63 1
%64:i32 = var
%65:i32 = var
%66 = phi %21, %65, 0:i32
%67 = phi %30, 0:i32, %66
%68 = phi %27, 0:i32, %67
%69 = phi %24, 0:i32, %68
%70 = phi %20, %66, %69
%71 = phi %15, %64, %70
%72 = phi %61, %71, %70
%73 = phi %7, %12, %13, %60, %60, %60, %72
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77 = block 2
%78:i32 = var
blockpc %77 0 %78 1
%79:i32 = var
blockpc %77 1 %79 1
%80:i32 = var
%81 = phi %77, %73, %80
%82 = phi %74, %73, %81
%83 = phi %6, %73, %82
%84:i32 = var
%85:i32 = var
%86:i32 = var
%87:i32 = var
%88 = phi %21, %87, 0:i32
%89 = phi %30, 0:i32, %88
%90 = phi %27, 0:i32, %89
%91 = phi %24, 0:i32, %90
%92 = phi %20, %88, %91
%93 = phi %40, %92, %84
%94 = phi %37, %93, %92
%95 = phi %17, %92, %94
%96 = phi %15, %86, %95
%97 = phi %53, %85, %96
%98 = phi %50, %96, %97
%99 = phi %47, %96, %98
%100 = phi %14, %96, %99
%101:i32 = var
%102:i32 = var
%103:i32 = var
%104 = phi %21, %103, 0:i32
%105 = phi %30, 0:i32, %104
%106 = phi %27, 0:i32, %105
%107 = phi %24, 0:i32, %106
%108 = phi %20, %104, %107
%109 = phi %15, %102, %108
%110 = phi %61, %109, %108
%111 = phi %7, %84, %85, %100, %100, %101, %110
%112 = block 2
%113:i32 = var
blockpc %112 0 %113 1
%114:i32 = var
blockpc %112 1 %114 1
%115:i32 = var
%116:i32 = var
%117 = phi %21, %116, 0:i32
%118 = phi %30, 0:i32, %117
%119 = phi %27, 0:i32, %118
%120 = phi %24, 0:i32, %119
%121 = phi %20, %117, %120
%122:i32 = var
%123 = phi %15, %122, %121
%124 = block 3
%125:i32 = var
%126:i32 = var
%127 = phi %21, %126, 0:i32
%128 = phi %30, 0:i32, %127
%129 = phi %27, 0:i32, %128
%130 = phi %24, 0:i32, %129
%131 = phi %20, %127, %130
%132 = phi %40, %84, %131
%133 = phi %37, %132, 0:i32
%134 = phi %17, %131, %133
%135 = phi %15, %125, %134
%136 = phi %53, %135, 0:i32
%137 = phi %50, 0:i32, %136
%138 = phi %47, %135, %137
%139 = phi %14, 0:i32, %138
%140 = phi %124, 0:i32, 0:i32, %139
%141 = phi %61, %140, 0:i32
%142 = phi %7, %121, %123, %123, %123, %123, %141
%143 = phi %112, %115, %142
%144 = phi %77, %111, %143
%145 = phi %74, %111, %144
%146 = phi %6, %111, %145
%147 = add %83, %146
%148 = block 2
%149:i32 = var
blockpc %148 0 %149 1
%150:i32 = var
blockpc %148 1 %150 1
%151:i32 = var
%152 = phi %148, 0:i32, %151
%153 = add %147, %152
%154 = eq %5, %153
%155:i32 = zext %154
%156 = eq %155, 0:i32
%157:i32 = var
%158:i32 = var
%159:i32 = var
%160:i32 = var
pc %156 1
pc %157 1
pc %158 1
pc %159 1
pc %160 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = block 2
%4 = block 6
%5 = phi %4, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%6 = eq %5, 143:i32
blockpc %3 0 %6 1
%7:i32 = zext %6
%8 = eq %7, 0:i32
blockpc %3 1 %8 1
%9:i32 = var
%10:i32 = var
%11 = block 2
%12 = block 2
%13:i32 = var
%14 = block 2
%15:i32 = var
blockpc %14 0 %15 1
%16:i32 = var
blockpc %14 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
%20 = phi %18, %19, 0:i32
%21 = block 2
%22:i32 = var
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = phi %27, 0:i32, %20
%31 = phi %24, 0:i32, %30
%32 = phi %21, 0:i32, %31
%33 = phi %17, %20, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %33, %9
%41 = phi %34, %40, %33
%42 = phi %14, %33, %41
%43 = phi %12, %13, %42
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53:i32 = var
%54 = phi %50, %53, %43
%55 = phi %47, %43, %54
%56 = phi %44, %43, %55
%57 = phi %11, %43, %56
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61:i32 = var
%62:i32 = var
%63 = phi %18, %62, 0:i32
%64 = phi %27, 0:i32, %63
%65 = phi %24, 0:i32, %64
%66 = phi %21, 0:i32, %65
%67 = phi %17, %63, %66
%68 = phi %12, %61, %67
%69 = phi %58, %68, %67
%70 = phi %4, %9, %10, %57, %57, %57, %69
%71 = block 2
%72:i32 = var
blockpc %71 0 %72 1
%73:i32 = var
blockpc %71 1 %73 1
%74 = block 2
%75:i32 = var
blockpc %74 0 %75 1
%76:i32 = var
blockpc %74 1 %76 1
%77:i32 = var
%78 = phi %74, %70, %77
%79 = phi %71, %70, %78
%80 = phi %3, %70, %79
%81:i32 = var
%82:i32 = var
%83:i32 = var
%84:i32 = var
%85 = phi %18, %84, 0:i32
%86 = phi %27, 0:i32, %85
%87 = phi %24, 0:i32, %86
%88 = phi %21, 0:i32, %87
%89 = phi %17, %85, %88
%90 = phi %37, %89, %81
%91 = phi %34, %90, %89
%92 = phi %14, %89, %91
%93 = phi %12, %83, %92
%94 = phi %50, %82, %93
%95 = phi %47, %93, %94
%96 = phi %44, %93, %95
%97 = phi %11, %93, %96
%98:i32 = var
%99:i32 = var
%100:i32 = var
%101 = phi %18, %100, 0:i32
%102 = phi %27, 0:i32, %101
%103 = phi %24, 0:i32, %102
%104 = phi %21, 0:i32, %103
%105 = phi %17, %101, %104
%106 = phi %12, %99, %105
%107 = phi %58, %106, %105
%108 = phi %4, %81, %82, %97, %97, %98, %107
%109 = block 2
%110:i32 = var
blockpc %109 0 %110 1
%111:i32 = var
blockpc %109 1 %111 1
%112:i32 = var
%113:i32 = var
%114 = phi %18, %113, 0:i32
%115 = phi %27, 0:i32, %114
%116 = phi %24, 0:i32, %115
%117 = phi %21, 0:i32, %116
%118 = phi %17, %114, %117
%119:i32 = var
%120 = phi %12, %119, %118
%121 = block 3
%122:i32 = var
%123:i32 = var
%124 = phi %18, %123, 0:i32
%125 = phi %27, 0:i32, %124
%126 = phi %24, 0:i32, %125
%127 = phi %21, 0:i32, %126
%128 = phi %17, %124, %127
%129 = phi %37, %81, %128
%130 = phi %34, %129, 0:i32
%131 = phi %14, %128, %130
%132 = phi %12, %122, %131
%133 = phi %50, %132, 0:i32
%134 = phi %47, 0:i32, %133
%135 = phi %44, %132, %134
%136 = phi %11, 0:i32, %135
%137 = phi %121, 0:i32, 0:i32, %136
%138 = phi %58, %137, 0:i32
%139 = phi %4, %118, %120, %120, %120, %120, %138
%140 = phi %109, %112, %139
%141 = phi %74, %108, %140
%142 = phi %71, %108, %141
%143 = phi %3, %108, %142
%144 = add %80, %143
%145 = block 2
%146:i32 = var
blockpc %145 0 %146 1
%147:i32 = var
blockpc %145 1 %147 1
%148:i32 = var
%149 = phi %145, 0:i32, %148
%150 = add %144, %149
%151 = eq %2, %150
%152:i32 = zext %151
%153 = eq %152, 0:i32
%154:i32 = var
%155:i32 = var
%156:i32 = var
%157:i32 = var
pc %153 1
pc %154 1
pc %155 1
pc %156 1
pc %157 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, %12, 0:i32
%14 = block 2
%15 = block 2
%16 = block 2
%17 = phi %16, 0:i32, %13
%18 = phi %15, 0:i32, %17
%19 = phi %14, 0:i32, %18
%20 = phi %10, %13, %19
%21 = block 2
%22 = block 2
%23 = phi %22, %20, %4
%24 = phi %21, %23, %20
%25 = phi %9, %20, %24
%26 = phi %7, %8, %25
%27 = block 2
%28 = block 2
%29 = block 2
%30:i32 = var
%31 = phi %29, %30, %26
%32 = phi %28, %26, %31
%33 = phi %27, %26, %32
%34 = phi %6, %26, %33
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %11, %37, 0:i32
%39 = phi %16, 0:i32, %38
%40 = phi %15, 0:i32, %39
%41 = phi %14, 0:i32, %40
%42 = phi %10, %38, %41
%43 = phi %7, %36, %42
%44 = phi %35, %43, %42
%45 = phi %3, %4, %5, %34, %34, %34, %44
%46 = block 2
%47 = block 2
%48:i32 = var
%49 = phi %47, %45, %48
%50 = phi %46, %45, %49
%51 = phi %2, %45, %50
%52 = block 2
%53:i32 = var
%54 = phi %52, 0:i32, %53
%55 = add %51, %54 (hasExternalUses)
%56:i32 = var
%57:i32 = var
%58 = phi %11, %56, %57
%59 = block 2
%60:i32 = var
%61 = phi %59, 16:i32, %60
%62 = phi %16, %57, %58
%63 = phi %15, -1:i32, %62
%64 = phi %14, %61, %63
%65 = phi %10, %58, %64
%66:i32 = var
%67 = phi %7, %66, %65
%68 = phi %35, %67, %65
%69 = phi %3, %65, %67, %67, %67, %67, %68
%70 = add %55, %69 (hasExternalUses)
%71 = phi %0, %1, %70
%72 = add %71, 8:i32
%73:i32 = var
blockpc %2 0 %73 1
%74:i32 = var
blockpc %2 1 %74 1
%75:i32 = var
blockpc %9 0 %75 1
%76:i32 = var
blockpc %9 1 %76 1
%77:i32 = var
blockpc %14 0 %77 1
%78:i32 = var
blockpc %14 1 %78 1
%79:i32 = var
blockpc %15 0 %79 1
%80:i32 = var
blockpc %15 1 %80 1
%81:i32 = var
blockpc %16 0 %81 1
%82:i32 = var
blockpc %16 1 %82 1
%83:i32 = var
blockpc %21 0 %83 1
%84:i32 = var
blockpc %21 1 %84 1
%85:i32 = var
blockpc %22 0 %85 1
%86:i32 = var
blockpc %22 1 %86 1
%87:i32 = var
blockpc %27 0 %87 1
%88:i32 = var
blockpc %27 1 %88 1
%89:i32 = var
blockpc %28 0 %89 1
%90:i32 = var
blockpc %28 1 %90 1
%91:i32 = var
blockpc %29 0 %91 1
%92:i32 = var
blockpc %29 1 %92 1
%93:i32 = var
blockpc %35 0 %93 1
%94:i32 = var
blockpc %35 1 %94 1
%95:i32 = var
blockpc %46 0 %95 1
%96:i32 = var
blockpc %46 1 %96 1
%97:i32 = var
blockpc %47 0 %97 1
%98:i32 = var
blockpc %47 1 %98 1
%99:i32 = var
blockpc %52 0 %99 1
%100:i32 = var
blockpc %52 1 %100 1
%101:i32 = var
blockpc %59 0 %101 1
%102:i32 = var
blockpc %59 1 %102 1
%103:i32 = var
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107:i32 = var
pc %103 1
pc %104 1
pc %105 1
pc %106 1
pc %107 1
infer %72


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, %12, 0:i32
%14 = block 2
%15 = block 2
%16 = block 2
%17 = phi %16, 0:i32, %13
%18 = phi %15, 0:i32, %17
%19 = phi %14, 0:i32, %18
%20 = phi %10, %13, %19
%21 = block 2
%22 = block 2
%23 = phi %22, %20, %4
%24 = phi %21, %23, %20
%25 = phi %9, %20, %24
%26 = phi %7, %8, %25
%27 = block 2
%28 = block 2
%29 = block 2
%30:i32 = var
%31 = phi %29, %30, %26
%32 = phi %28, %26, %31
%33 = phi %27, %26, %32
%34 = phi %6, %26, %33
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %11, %37, 0:i32
%39 = phi %16, 0:i32, %38
%40 = phi %15, 0:i32, %39
%41 = phi %14, 0:i32, %40
%42 = phi %10, %38, %41
%43 = phi %7, %36, %42
%44 = phi %35, %43, %42
%45 = phi %3, %4, %5, %34, %34, %34, %44
%46 = block 2
%47 = block 2
%48:i32 = var
%49 = phi %47, %45, %48
%50 = phi %46, %45, %49
%51 = phi %2, %45, %50
%52 = block 2
%53:i32 = var
%54 = phi %52, 0:i32, %53
%55 = add %51, %54 (hasExternalUses)
%56:i32 = var
%57:i32 = var
%58 = phi %11, %56, %57
%59 = block 2
%60:i32 = var
%61 = phi %59, 16:i32, %60
%62 = phi %16, %57, %58
%63 = phi %15, -1:i32, %62
%64 = phi %14, %61, %63
%65 = phi %10, %58, %64
%66:i32 = var
%67 = phi %7, %66, %65
%68 = phi %35, %67, %65
%69 = phi %3, %65, %67, %67, %67, %67, %68
%70 = add %55, %69 (hasExternalUses)
%71 = phi %0, %1, %70
%72 = add %71, 12:i32
%73:i32 = var
blockpc %2 0 %73 1
%74:i32 = var
blockpc %2 1 %74 1
%75:i32 = var
blockpc %9 0 %75 1
%76:i32 = var
blockpc %9 1 %76 1
%77:i32 = var
blockpc %14 0 %77 1
%78:i32 = var
blockpc %14 1 %78 1
%79:i32 = var
blockpc %15 0 %79 1
%80:i32 = var
blockpc %15 1 %80 1
%81:i32 = var
blockpc %16 0 %81 1
%82:i32 = var
blockpc %16 1 %82 1
%83:i32 = var
blockpc %21 0 %83 1
%84:i32 = var
blockpc %21 1 %84 1
%85:i32 = var
blockpc %22 0 %85 1
%86:i32 = var
blockpc %22 1 %86 1
%87:i32 = var
blockpc %27 0 %87 1
%88:i32 = var
blockpc %27 1 %88 1
%89:i32 = var
blockpc %28 0 %89 1
%90:i32 = var
blockpc %28 1 %90 1
%91:i32 = var
blockpc %29 0 %91 1
%92:i32 = var
blockpc %29 1 %92 1
%93:i32 = var
blockpc %35 0 %93 1
%94:i32 = var
blockpc %35 1 %94 1
%95:i32 = var
blockpc %46 0 %95 1
%96:i32 = var
blockpc %46 1 %96 1
%97:i32 = var
blockpc %47 0 %97 1
%98:i32 = var
blockpc %47 1 %98 1
%99:i32 = var
blockpc %52 0 %99 1
%100:i32 = var
blockpc %52 1 %100 1
%101:i32 = var
blockpc %59 0 %101 1
%102:i32 = var
blockpc %59 1 %102 1
%103:i32 = var
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107:i32 = var
pc %103 1
pc %104 1
pc %105 1
pc %106 1
pc %107 1
infer %72


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2 = block 2
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
%9 = block 2
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, %12, 0:i32
%14 = block 2
%15 = block 2
%16 = block 2
%17 = phi %16, 0:i32, %13
%18 = phi %15, 0:i32, %17
%19 = phi %14, 0:i32, %18
%20 = phi %10, %13, %19
%21 = block 2
%22 = block 2
%23 = phi %22, %20, %4
%24 = phi %21, %23, %20
%25 = phi %9, %20, %24
%26 = phi %7, %8, %25
%27 = block 2
%28 = block 2
%29 = block 2
%30:i32 = var
%31 = phi %29, %30, %26
%32 = phi %28, %26, %31
%33 = phi %27, %26, %32
%34 = phi %6, %26, %33
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %11, %37, 0:i32
%39 = phi %16, 0:i32, %38
%40 = phi %15, 0:i32, %39
%41 = phi %14, 0:i32, %40
%42 = phi %10, %38, %41
%43 = phi %7, %36, %42
%44 = phi %35, %43, %42
%45 = phi %3, %4, %5, %34, %34, %34, %44
%46 = block 2
%47 = block 2
%48:i32 = var
%49 = phi %47, %45, %48
%50 = phi %46, %45, %49
%51 = phi %2, %45, %50
%52 = block 2
%53:i32 = var
%54 = phi %52, 0:i32, %53
%55 = add %51, %54 (hasExternalUses)
%56:i32 = var
%57:i32 = var
%58 = phi %11, %56, %57
%59 = block 2
%60:i32 = var
%61 = phi %59, 16:i32, %60
%62 = phi %16, %57, %58
%63 = phi %15, -1:i32, %62
%64 = phi %14, %61, %63
%65 = phi %10, %58, %64
%66:i32 = var
%67 = phi %7, %66, %65
%68 = phi %35, %67, %65
%69 = phi %3, %65, %67, %67, %67, %67, %68
%70 = add %55, %69 (hasExternalUses)
%71 = phi %0, %1, %70
%72 = add %71, 24:i32
%73:i32 = var
blockpc %2 0 %73 1
%74:i32 = var
blockpc %2 1 %74 1
%75:i32 = var
blockpc %9 0 %75 1
%76:i32 = var
blockpc %9 1 %76 1
%77:i32 = var
blockpc %14 0 %77 1
%78:i32 = var
blockpc %14 1 %78 1
%79:i32 = var
blockpc %15 0 %79 1
%80:i32 = var
blockpc %15 1 %80 1
%81:i32 = var
blockpc %16 0 %81 1
%82:i32 = var
blockpc %16 1 %82 1
%83:i32 = var
blockpc %21 0 %83 1
%84:i32 = var
blockpc %21 1 %84 1
%85:i32 = var
blockpc %22 0 %85 1
%86:i32 = var
blockpc %22 1 %86 1
%87:i32 = var
blockpc %27 0 %87 1
%88:i32 = var
blockpc %27 1 %88 1
%89:i32 = var
blockpc %28 0 %89 1
%90:i32 = var
blockpc %28 1 %90 1
%91:i32 = var
blockpc %29 0 %91 1
%92:i32 = var
blockpc %29 1 %92 1
%93:i32 = var
blockpc %35 0 %93 1
%94:i32 = var
blockpc %35 1 %94 1
%95:i32 = var
blockpc %46 0 %95 1
%96:i32 = var
blockpc %46 1 %96 1
%97:i32 = var
blockpc %47 0 %97 1
%98:i32 = var
blockpc %47 1 %98 1
%99:i32 = var
blockpc %52 0 %99 1
%100:i32 = var
blockpc %52 1 %100 1
%101:i32 = var
blockpc %59 0 %101 1
%102:i32 = var
blockpc %59 1 %102 1
%103:i32 = var
%104:i32 = var
%105:i32 = var
%106:i32 = var
%107:i32 = var
pc %103 1
pc %104 1
pc %105 1
pc %106 1
pc %107 1
infer %72


; start LHS (in $38)
%0 = block 5
%1 = block 2
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = block 2
%6 = block 2
%7:i32 = var
%8 = block 2
%9 = block 2
%10 = block 2
%11:i32 = var
%12 = phi %10, %11, 0:i32
%13 = block 2
%14 = block 2
%15 = block 2
%16 = phi %15, 0:i32, %12
%17 = phi %14, 0:i32, %16
%18 = phi %13, 0:i32, %17
%19 = phi %9, %12, %18
%20 = block 2
%21 = block 2
%22 = phi %21, %19, %3
%23 = phi %20, %22, %19
%24 = phi %8, %19, %23
%25 = phi %6, %7, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %5, %25, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %10, %36, 0:i32
%38 = phi %15, 0:i32, %37
%39 = phi %14, 0:i32, %38
%40 = phi %13, 0:i32, %39
%41 = phi %9, %37, %40
%42 = phi %6, %35, %41
%43 = phi %34, %42, %41
%44 = phi %2, %3, %4, %33, %33, %33, %43
%45 = block 2
%46 = block 2
%47:i32 = var
%48 = phi %46, %44, %47
%49 = phi %45, %44, %48
%50 = phi %1, %44, %49
%51 = block 2
%52:i32 = var
%53 = phi %51, 0:i32, %52
%54 = add %50, %53 (hasExternalUses)
%55 = block 2
%56 = block 2
%57:i32 = var
%58 = phi %56, %57, %54
%59 = phi %55, %54, %58
%60 = phi %0, %54, %54, %54, %54, %59
%61 = add %60, 8:i32
%62:i32 = var
blockpc %1 0 %62 1
%63:i32 = var
blockpc %1 1 %63 1
%64:i32 = var
blockpc %8 0 %64 1
%65:i32 = var
blockpc %8 1 %65 1
%66:i32 = var
blockpc %13 0 %66 1
%67:i32 = var
blockpc %13 1 %67 1
%68:i32 = var
blockpc %14 0 %68 1
%69:i32 = var
blockpc %14 1 %69 1
%70:i32 = var
blockpc %15 0 %70 1
%71:i32 = var
blockpc %15 1 %71 1
%72:i32 = var
blockpc %20 0 %72 1
%73:i32 = var
blockpc %20 1 %73 1
%74:i32 = var
blockpc %21 0 %74 1
%75:i32 = var
blockpc %21 1 %75 1
%76:i32 = var
blockpc %26 0 %76 1
%77:i32 = var
blockpc %26 1 %77 1
%78:i32 = var
blockpc %27 0 %78 1
%79:i32 = var
blockpc %27 1 %79 1
%80:i32 = var
blockpc %28 0 %80 1
%81:i32 = var
blockpc %28 1 %81 1
%82:i32 = var
blockpc %34 0 %82 1
%83:i32 = var
blockpc %34 1 %83 1
%84:i32 = var
blockpc %45 0 %84 1
%85:i32 = var
blockpc %45 1 %85 1
%86:i32 = var
blockpc %46 0 %86 1
%87:i32 = var
blockpc %46 1 %87 1
%88:i32 = var
blockpc %51 0 %88 1
%89:i32 = var
blockpc %51 1 %89 1
%90:i32 = var
blockpc %55 0 %90 1
%91:i32 = var
blockpc %55 1 %91 1
%92:i32 = var
%93:i32 = var
%94:i32 = var
%95:i32 = var
pc %92 1
pc %93 1
pc %94 1
pc %95 1
infer %61


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3 = eq %0, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 6
%8 = phi %7, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%9 = eq %8, 143:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 4096:i32, %16
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = phi %26, 16:i32, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = phi %34, %21, %22
%38 = phi %31, -1:i32, %37
%39 = phi %23, %30, %38
%40 = phi %18, %22, %39
%41 = add %40, 47:i32
%42 = add %17, %41
%43:i32 = var
%44 = and %42, %43
%45 = block 2
%46:i32 = var
%47 = phi %45, %46, %44
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = phi %48, %47, %44
%52 = phi %7, %44, %47, %47, %47, %47, %51
%53 = ult %52, 2147483647:i32
blockpc %12 0 %53 1
%54:i32 = var
blockpc %12 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = phi %55, %8, 145:i32
%59 = phi %12, %8, %58
%60 = phi %6, %8, %59
%61 = eq %60, 145:i32
pc %5 1
pc %61 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = ult %0, %1
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5 = eq %0, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = block 2
%9 = block 6
%10 = phi %9, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%11 = eq %10, 143:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14 = block 2
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19 = phi %15, 4096:i32, %18
%20 = block 2
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32 = phi %28, 16:i32, %31
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = phi %36, %23, %24
%40 = phi %33, -1:i32, %39
%41 = phi %25, %32, %40
%42 = phi %20, %24, %41
%43 = add %42, 47:i32
%44 = add %19, %43
%45:i32 = var
%46 = and %44, %45
%47 = block 2
%48:i32 = var
%49 = phi %47, %48, %46
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = phi %50, %49, %46
%54 = phi %9, %46, %49, %49, %49, %49, %53
%55 = ult %54, 2147483647:i32
blockpc %14 0 %55 1
%56:i32 = var
blockpc %14 1 %56 1
%57 = block 2
%58:i32 = var
blockpc %57 0 %58 1
%59:i32 = var
blockpc %57 1 %59 1
%60 = phi %57, %10, 145:i32
%61 = phi %14, %10, %60
%62 = phi %8, %10, %61
%63 = eq %62, 145:i32
pc %7 1
pc %63 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3:i32 = var
%4 = ult %2, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = eq %2, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = block 2
%11 = block 6
%12 = phi %11, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%13 = eq %12, 143:i32
blockpc %10 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %10 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21 = phi %17, 4096:i32, %20
%22 = block 2
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = phi %23, %24, %25
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34 = phi %30, 16:i32, %33
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = phi %38, %25, %26
%42 = phi %35, -1:i32, %41
%43 = phi %27, %34, %42
%44 = phi %22, %26, %43
%45 = add %44, 47:i32
%46 = add %21, %45
%47:i32 = var
%48 = and %46, %47
%49 = block 2
%50:i32 = var
%51 = phi %49, %50, %48
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = phi %52, %51, %48
%56 = phi %11, %48, %51, %51, %51, %51, %55
%57 = ult %56, 2147483647:i32
blockpc %16 0 %57 1
%58:i32 = var
blockpc %16 1 %58 1
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62 = phi %59, %12, 145:i32
%63 = phi %16, %12, %62
%64 = phi %10, %12, %63
%65 = eq %64, 145:i32
pc %6 1
pc %9 1
pc %65 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
%3:i32 = var
%4 = ult %3, %0
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7 = eq %3, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = block 2
%11 = block 6
%12 = phi %11, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%13 = eq %12, 143:i32
blockpc %10 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %10 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21 = phi %17, 4096:i32, %20
%22 = block 2
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = phi %23, %24, %25
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34 = phi %30, 16:i32, %33
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = phi %38, %25, %26
%42 = phi %35, -1:i32, %41
%43 = phi %27, %34, %42
%44 = phi %22, %26, %43
%45 = add %44, 47:i32
%46 = add %21, %45
%47:i32 = var
%48 = and %46, %47
%49 = block 2
%50:i32 = var
%51 = phi %49, %50, %48
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = phi %52, %51, %48
%56 = phi %11, %48, %51, %51, %51, %51, %55
%57 = ult %56, 2147483647:i32
blockpc %16 0 %57 1
%58:i32 = var
blockpc %16 1 %58 1
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62 = phi %59, %12, 145:i32
%63 = phi %16, %12, %62
%64 = phi %10, %12, %63
%65 = eq %64, 145:i32
pc %6 1
pc %9 1
pc %65 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = ult %0, %3
%5 = ult %0, %1
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = eq %0, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = block 2
%12 = block 6
%13 = phi %12, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%14 = eq %13, 143:i32
blockpc %11 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %11 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21:i32 = var
%22 = phi %18, 4096:i32, %21
%23 = block 2
%24 = block 2
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34:i32 = var
%35 = phi %31, 16:i32, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = phi %39, %26, %27
%43 = phi %36, -1:i32, %42
%44 = phi %28, %35, %43
%45 = phi %23, %27, %44
%46 = add %45, 47:i32
%47 = add %22, %46
%48:i32 = var
%49 = and %47, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, %51, %49
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = phi %53, %52, %49
%57 = phi %12, %49, %52, %52, %52, %52, %56
%58 = ult %57, 2147483647:i32
blockpc %17 0 %58 1
%59:i32 = var
blockpc %17 1 %59 1
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63 = phi %60, %13, 145:i32
%64 = phi %17, %13, %63
%65 = phi %11, %13, %64
%66 = eq %65, 145:i32
pc %7 1
pc %10 1
pc %66 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 6
%8 = phi %7, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%9 = eq %8, 143:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 4096:i32, %16
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = phi %26, 16:i32, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = phi %34, %21, %22
%38 = phi %31, -1:i32, %37
%39 = phi %23, %30, %38
%40 = phi %18, %22, %39
%41 = add %40, 47:i32
%42 = add %17, %41
%43:i32 = var
%44 = and %42, %43
%45 = block 2
%46:i32 = var
%47 = phi %45, %46, %44
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = phi %48, %47, %44
%52 = phi %7, %44, %47, %47, %47, %47, %51
%53 = ult %52, 2147483647:i32
blockpc %12 0 %53 1
%54:i32 = var
blockpc %12 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = phi %55, %8, 145:i32
%59 = phi %12, %8, %58
%60 = phi %6, %8, %59
%61 = eq %60, 145:i32
pc %5 1
pc %61 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = add %2, -47:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = block 2
%9 = block 6
%10 = phi %9, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%11 = eq %10, 143:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14 = block 2
%15 = block 2
%16:i32 = var
blockpc %15 0 %16 1
%17:i32 = var
blockpc %15 1 %17 1
%18:i32 = var
%19 = phi %15, 4096:i32, %18
%20 = block 2
%21 = block 2
%22:i32 = var
%23:i32 = var
%24 = phi %21, %22, %23
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32 = phi %28, 16:i32, %31
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = phi %36, %23, %24
%40 = phi %33, -1:i32, %39
%41 = phi %25, %32, %40
%42 = phi %20, %24, %41
%43 = add %42, 47:i32
%44 = add %19, %43
%45:i32 = var
%46 = and %44, %45
%47 = block 2
%48:i32 = var
%49 = phi %47, %48, %46
%50 = block 2
%51:i32 = var
blockpc %50 0 %51 1
%52:i32 = var
blockpc %50 1 %52 1
%53 = phi %50, %49, %46
%54 = phi %9, %46, %49, %49, %49, %49, %53
%55 = ult %54, 2147483647:i32
blockpc %14 0 %55 1
%56:i32 = var
blockpc %14 1 %56 1
%57 = block 2
%58:i32 = var
blockpc %57 0 %58 1
%59:i32 = var
blockpc %57 1 %59 1
%60 = phi %57, %10, 145:i32
%61 = phi %14, %10, %60
%62 = phi %8, %10, %61
%63 = eq %62, 145:i32
pc %7 1
pc %63 1
infer %3


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = add %2, -47:i32 (hasExternalUses)
%4 = add %3, 8:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9 = block 2
%10 = block 6
%11 = phi %10, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%12 = eq %11, 143:i32
blockpc %9 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %9 1 %14 1
%15 = block 2
%16 = block 2
%17:i32 = var
blockpc %16 0 %17 1
%18:i32 = var
blockpc %16 1 %18 1
%19:i32 = var
%20 = phi %16, 4096:i32, %19
%21 = block 2
%22 = block 2
%23:i32 = var
%24:i32 = var
%25 = phi %22, %23, %24
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33 = phi %29, 16:i32, %32
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %24, %25
%41 = phi %34, -1:i32, %40
%42 = phi %26, %33, %41
%43 = phi %21, %25, %42
%44 = add %43, 47:i32
%45 = add %20, %44
%46:i32 = var
%47 = and %45, %46
%48 = block 2
%49:i32 = var
%50 = phi %48, %49, %47
%51 = block 2
%52:i32 = var
blockpc %51 0 %52 1
%53:i32 = var
blockpc %51 1 %53 1
%54 = phi %51, %50, %47
%55 = phi %10, %47, %50, %50, %50, %50, %54
%56 = ult %55, 2147483647:i32
blockpc %15 0 %56 1
%57:i32 = var
blockpc %15 1 %57 1
%58 = block 2
%59:i32 = var
blockpc %58 0 %59 1
%60:i32 = var
blockpc %58 1 %60 1
%61 = phi %58, %11, 145:i32
%62 = phi %15, %11, %61
%63 = phi %9, %11, %62
%64 = eq %63, 145:i32
pc %8 1
pc %64 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = add %2, -47:i32 (hasExternalUses)
%4 = add %3, 8:i32 (hasExternalUses)
%5 = and %4, 7:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = block 2
%11 = block 6
%12 = phi %11, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%13 = eq %12, 143:i32
blockpc %10 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %10 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21 = phi %17, 4096:i32, %20
%22 = block 2
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = phi %23, %24, %25
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34 = phi %30, 16:i32, %33
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = phi %38, %25, %26
%42 = phi %35, -1:i32, %41
%43 = phi %27, %34, %42
%44 = phi %22, %26, %43
%45 = add %44, 47:i32
%46 = add %21, %45
%47:i32 = var
%48 = and %46, %47
%49 = block 2
%50:i32 = var
%51 = phi %49, %50, %48
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = phi %52, %51, %48
%56 = phi %11, %48, %51, %51, %51, %51, %55
%57 = ult %56, 2147483647:i32
blockpc %16 0 %57 1
%58:i32 = var
blockpc %16 1 %58 1
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62 = phi %59, %12, 145:i32
%63 = phi %16, %12, %62
%64 = phi %10, %12, %63
%65 = eq %64, 145:i32
pc %9 1
pc %65 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = add %2, -47:i32 (hasExternalUses)
%4 = add %3, 8:i32 (hasExternalUses)
%5 = sub 0:i32, %4
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = block 2
%11 = block 6
%12 = phi %11, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%13 = eq %12, 143:i32
blockpc %10 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %10 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21 = phi %17, 4096:i32, %20
%22 = block 2
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = phi %23, %24, %25
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34 = phi %30, 16:i32, %33
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = phi %38, %25, %26
%42 = phi %35, -1:i32, %41
%43 = phi %27, %34, %42
%44 = phi %22, %26, %43
%45 = add %44, 47:i32
%46 = add %21, %45
%47:i32 = var
%48 = and %46, %47
%49 = block 2
%50:i32 = var
%51 = phi %49, %50, %48
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = phi %52, %51, %48
%56 = phi %11, %48, %51, %51, %51, %51, %55
%57 = ult %56, 2147483647:i32
blockpc %16 0 %57 1
%58:i32 = var
blockpc %16 1 %58 1
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62 = phi %59, %12, 145:i32
%63 = phi %16, %12, %62
%64 = phi %10, %12, %63
%65 = eq %64, 145:i32
pc %9 1
pc %65 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = add %2, -47:i32 (hasExternalUses)
%4 = add %3, 8:i32 (hasExternalUses)
%5 = sub 0:i32, %4
%6 = and %5, 7:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = block 2
%12 = block 6
%13 = phi %12, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%14 = eq %13, 143:i32
blockpc %11 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %11 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21:i32 = var
%22 = phi %18, 4096:i32, %21
%23 = block 2
%24 = block 2
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34:i32 = var
%35 = phi %31, 16:i32, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = phi %39, %26, %27
%43 = phi %36, -1:i32, %42
%44 = phi %28, %35, %43
%45 = phi %23, %27, %44
%46 = add %45, 47:i32
%47 = add %22, %46
%48:i32 = var
%49 = and %47, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, %51, %49
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = phi %53, %52, %49
%57 = phi %12, %49, %52, %52, %52, %52, %56
%58 = ult %57, 2147483647:i32
blockpc %17 0 %58 1
%59:i32 = var
blockpc %17 1 %59 1
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63 = phi %60, %13, 145:i32
%64 = phi %17, %13, %63
%65 = phi %11, %13, %64
%66 = eq %65, 145:i32
pc %10 1
pc %66 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = add %2, -47:i32 (hasExternalUses)
%4 = add %3, 8:i32 (hasExternalUses)
%5 = and %4, 7:i32
%6 = eq %5, 0:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = block 2
%12 = block 6
%13 = phi %12, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%14 = eq %13, 143:i32
blockpc %11 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %11 1 %16 1
%17 = block 2
%18 = block 2
%19:i32 = var
blockpc %18 0 %19 1
%20:i32 = var
blockpc %18 1 %20 1
%21:i32 = var
%22 = phi %18, 4096:i32, %21
%23 = block 2
%24 = block 2
%25:i32 = var
%26:i32 = var
%27 = phi %24, %25, %26
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34:i32 = var
%35 = phi %31, 16:i32, %34
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = block 2
%40:i32 = var
blockpc %39 0 %40 1
%41:i32 = var
blockpc %39 1 %41 1
%42 = phi %39, %26, %27
%43 = phi %36, -1:i32, %42
%44 = phi %28, %35, %43
%45 = phi %23, %27, %44
%46 = add %45, 47:i32
%47 = add %22, %46
%48:i32 = var
%49 = and %47, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, %51, %49
%53 = block 2
%54:i32 = var
blockpc %53 0 %54 1
%55:i32 = var
blockpc %53 1 %55 1
%56 = phi %53, %52, %49
%57 = phi %12, %49, %52, %52, %52, %52, %56
%58 = ult %57, 2147483647:i32
blockpc %17 0 %58 1
%59:i32 = var
blockpc %17 1 %59 1
%60 = block 2
%61:i32 = var
blockpc %60 0 %61 1
%62:i32 = var
blockpc %60 1 %62 1
%63 = phi %60, %13, 145:i32
%64 = phi %17, %13, %63
%65 = phi %11, %13, %64
%66 = eq %65, 145:i32
pc %10 1
pc %66 1
infer %6


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = add %2, -47:i32
%4 = block 2
%5 = add %3, 8:i32 (hasExternalUses)
%6 = sub 0:i32, %5
%7 = and %6, 7:i32
%8 = phi %4, 0:i32, %7
%9 = add %3, %8
%10 = and %5, 7:i32
%11 = eq %10, 0:i32
blockpc %4 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %4 1 %13 1
%14:i32 = var
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18 = block 2
%19 = block 6
%20 = phi %19, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%21 = eq %20, 143:i32
blockpc %18 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %18 1 %23 1
%24 = block 2
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29 = phi %25, 4096:i32, %28
%30:i32 = var
%31 = add %29, %30
%32:i32 = var
%33 = and %31, %32
%34 = block 2
%35:i32 = var
%36 = phi %34, %35, %33
%37 = block 2
%38:i32 = var
blockpc %37 0 %38 1
%39:i32 = var
blockpc %37 1 %39 1
%40 = phi %37, %36, %33
%41 = phi %19, %33, %36, %36, %36, %36, %40
%42 = ult %41, 2147483647:i32
blockpc %24 0 %42 1
%43:i32 = var
blockpc %24 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = phi %44, %20, 145:i32
%48 = phi %24, %20, %47
%49 = phi %18, %20, %48
%50 = eq %49, 145:i32
pc %17 1
pc %50 1
infer %9


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5 = block 2
%6 = block 6
%7 = phi %6, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%8 = eq %7, 143:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = block 2
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15:i32 = var
%16 = phi %12, 4096:i32, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29 = phi %25, 16:i32, %28
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, %20, %21
%37 = phi %30, -1:i32, %36
%38 = phi %22, %29, %37
%39 = phi %17, %21, %38
%40 = add %39, 47:i32
%41 = add %16, %40
%42:i32 = var
%43 = and %41, %42
%44 = block 2
%45:i32 = var
%46 = phi %44, %45, %43
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = phi %47, %46, %43
%51 = phi %6, %43, %46, %46, %46, %46, %50
%52 = ult %51, 2147483647:i32
blockpc %11 0 %52 1
%53:i32 = var
blockpc %11 1 %53 1
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57 = phi %54, %7, 145:i32
%58 = phi %11, %7, %57
%59 = phi %5, %7, %58
%60 = eq %59, 145:i32
pc %4 1
pc %60 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = add %2, -47:i32
%4 = block 2
%5 = add %3, 8:i32 (hasExternalUses)
%6 = sub 0:i32, %5
%7 = and %6, 7:i32
%8 = phi %4, 0:i32, %7
%9 = add %3, %8 (hasExternalUses)
%10:i32 = var
%11 = add %10, 16:i32 (hasExternalUses)
%12 = ult %9, %11
%13 = and %5, 7:i32
%14 = eq %13, 0:i32
blockpc %4 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %4 1 %16 1
%17 = eq %10, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
%20 = block 2
%21 = block 6
%22 = phi %21, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%23 = eq %22, 143:i32
blockpc %20 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %20 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, %22, 145:i32
%33 = phi %26, %22, %32
%34 = phi %20, %22, %33
%35 = eq %34, 145:i32
pc %19 1
pc %35 1
infer %12


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = add %12, 8:i32
%14 = add %1, 16:i32
%15 = ult %11, %14
blockpc %0 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %0 1 %17 1
%18 = and %7, 7:i32
%19 = eq %18, 0:i32
blockpc %6 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %6 1 %21 1
%22 = eq %1, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 6
%29 = phi %28, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, %29, 145:i32
%37 = phi %30, %29, %36
%38 = phi %25, %29, %37
%39 = eq %38, 145:i32
pc %24 1
pc %39 1
infer %13


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = add %12, 24:i32
%14 = add %1, 16:i32
%15 = ult %11, %14
blockpc %0 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %0 1 %17 1
%18 = and %7, 7:i32
%19 = eq %18, 0:i32
blockpc %6 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %6 1 %21 1
%22 = eq %1, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 6
%29 = phi %28, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, %29, 145:i32
%37 = phi %30, %29, %36
%38 = phi %25, %29, %37
%39 = eq %38, 145:i32
pc %24 1
pc %39 1
infer %13


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2 = block 2
%3:i32 = var
%4 = phi %2, 4096:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %8, %9
%17 = phi %14, -1:i32, %16
%18 = phi %10, %13, %17
%19 = phi %5, %9, %18
%20 = add %19, 47:i32 (hasExternalUses)
%21 = add %4, %20 (hasExternalUses)
%22:i32 = var
%23 = sub %21, %22
%24 = sub 0:i32, %4 (hasExternalUses)
%25 = and %23, %24 (hasExternalUses)
%26 = block 2
%27:i32 = var
%28 = add %27, -1:i32 (hasExternalUses)
%29:i32 = var
%30 = add %28, %29
%31:i32 = var
%32 = and %30, %31
%33 = sub %32, %29
%34 = phi %26, 0:i32, %33
%35 = block 2
%36:i32 = var
%37:i32 = var
%38 = phi %35, %36, %37
%39 = add %34, %38 (hasExternalUses)
%40 = block 2
%41:i32 = var
%42 = block 2
%43:i32 = var
%44 = phi %6, %43, 0:i32
%45 = phi %15, 0:i32, %44
%46 = phi %14, 0:i32, %45
%47 = phi %10, 0:i32, %46
%48 = phi %5, %44, %47
%49 = block 2
%50 = block 2
%51 = phi %50, %48, %25
%52 = phi %49, %51, %48
%53 = phi %42, %48, %52
%54 = phi %35, %41, %53
%55 = block 2
%56 = block 2
%57 = block 2
%58 = phi %57, %39, %54
%59 = phi %56, %54, %58
%60 = phi %55, %54, %59
%61 = phi %40, %54, %60
%62:i32 = var
%63 = block 2
%64:i32 = var
%65:i32 = var
%66 = phi %6, %65, 0:i32
%67 = phi %15, 0:i32, %66
%68 = phi %14, 0:i32, %67
%69 = phi %10, 0:i32, %68
%70 = phi %5, %66, %69
%71 = phi %35, %64, %70
%72 = phi %63, %71, %70
%73 = phi %1, %25, %39, %61, %61, %62, %72
%74 = block 2
%75 = block 2
%76 = block 2
%77:i32 = var
%78:i32 = var
%79 = phi %6, %78, 0:i32
%80 = phi %15, 0:i32, %79
%81 = phi %14, 0:i32, %80
%82 = phi %10, 0:i32, %81
%83 = phi %5, %79, %82
%84:i32 = var
%85 = phi %35, %84, %83
%86 = block 3
%87:i32 = var
%88:i32 = var
%89 = phi %6, %88, 0:i32
%90 = phi %15, 0:i32, %89
%91 = phi %14, 0:i32, %90
%92 = phi %10, 0:i32, %91
%93 = phi %5, %89, %92
%94 = phi %50, %25, %93
%95 = phi %49, %94, 0:i32
%96 = phi %42, %93, %95
%97 = phi %35, %87, %96
%98 = phi %57, %97, 0:i32
%99 = phi %56, 0:i32, %98
%100 = phi %55, %97, %99
%101 = phi %40, 0:i32, %100
%102 = phi %86, 0:i32, 0:i32, %101
%103 = phi %63, %102, 0:i32
%104 = phi %1, %83, %85, %85, %85, %85, %103
%105 = phi %76, %77, %104
%106 = phi %75, %73, %105
%107 = phi %74, %73, %106
%108 = phi %0, %73, %107
%109 = add %108, -40:i32
%110:i32 = var
blockpc %0 0 %110 1
%111:i32 = var
blockpc %0 1 %111 1
%112:i32 = var
blockpc %2 0 %112 1
%113:i32 = var
blockpc %2 1 %113 1
%114:i32 = var
blockpc %10 0 %114 1
%115:i32 = var
blockpc %10 1 %115 1
%116:i32 = var
blockpc %11 0 %116 1
%117:i32 = var
blockpc %11 1 %117 1
%118:i32 = var
blockpc %14 0 %118 1
%119:i32 = var
blockpc %14 1 %119 1
%120:i32 = var
blockpc %15 0 %120 1
%121:i32 = var
blockpc %15 1 %121 1
%122:i32 = var
blockpc %26 0 %122 1
%123:i32 = var
blockpc %26 1 %123 1
%124:i32 = var
blockpc %42 0 %124 1
%125:i32 = var
blockpc %42 1 %125 1
%126:i32 = var
blockpc %49 0 %126 1
%127:i32 = var
blockpc %49 1 %127 1
%128:i32 = var
blockpc %50 0 %128 1
%129:i32 = var
blockpc %50 1 %129 1
%130:i32 = var
blockpc %55 0 %130 1
%131:i32 = var
blockpc %55 1 %131 1
%132:i32 = var
blockpc %56 0 %132 1
%133:i32 = var
blockpc %56 1 %133 1
%134:i32 = var
blockpc %57 0 %134 1
%135:i32 = var
blockpc %57 1 %135 1
%136:i32 = var
blockpc %63 0 %136 1
%137:i32 = var
blockpc %63 1 %137 1
%138:i32 = var
blockpc %74 0 %138 1
%139:i32 = var
blockpc %74 1 %139 1
%140:i32 = var
blockpc %75 0 %140 1
%141:i32 = var
blockpc %75 1 %141 1
%142:i32 = var
blockpc %76 0 %142 1
%143:i32 = var
blockpc %76 1 %143 1
%144:i32 = var
%145:i32 = var
pc %144 1
pc %145 1
infer %109


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32
%51:i32 = var
blockpc %0 0 %51 1
%52:i32 = var
blockpc %0 1 %52 1
%53:i32 = var
blockpc %7 0 %53 1
%54:i32 = var
blockpc %7 1 %54 1
%55:i32 = var
blockpc %12 0 %55 1
%56:i32 = var
blockpc %12 1 %56 1
%57:i32 = var
blockpc %13 0 %57 1
%58:i32 = var
blockpc %13 1 %58 1
%59:i32 = var
blockpc %14 0 %59 1
%60:i32 = var
blockpc %14 1 %60 1
%61:i32 = var
blockpc %19 0 %61 1
%62:i32 = var
blockpc %19 1 %62 1
%63:i32 = var
blockpc %20 0 %63 1
%64:i32 = var
blockpc %20 1 %64 1
%65:i32 = var
blockpc %25 0 %65 1
%66:i32 = var
blockpc %25 1 %66 1
%67:i32 = var
blockpc %26 0 %67 1
%68:i32 = var
blockpc %26 1 %68 1
%69:i32 = var
blockpc %27 0 %69 1
%70:i32 = var
blockpc %27 1 %70 1
%71:i32 = var
blockpc %33 0 %71 1
%72:i32 = var
blockpc %33 1 %72 1
%73:i32 = var
blockpc %44 0 %73 1
%74:i32 = var
blockpc %44 1 %74 1
%75:i32 = var
blockpc %45 0 %75 1
%76:i32 = var
blockpc %45 1 %76 1
%77:i32 = var
%78:i32 = var
pc %77 1
pc %78 1
infer %50


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32 (hasExternalUses)
%51 = and %50, 7:i32
%52:i32 = var
blockpc %0 0 %52 1
%53:i32 = var
blockpc %0 1 %53 1
%54:i32 = var
blockpc %7 0 %54 1
%55:i32 = var
blockpc %7 1 %55 1
%56:i32 = var
blockpc %12 0 %56 1
%57:i32 = var
blockpc %12 1 %57 1
%58:i32 = var
blockpc %13 0 %58 1
%59:i32 = var
blockpc %13 1 %59 1
%60:i32 = var
blockpc %14 0 %60 1
%61:i32 = var
blockpc %14 1 %61 1
%62:i32 = var
blockpc %19 0 %62 1
%63:i32 = var
blockpc %19 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %25 0 %66 1
%67:i32 = var
blockpc %25 1 %67 1
%68:i32 = var
blockpc %26 0 %68 1
%69:i32 = var
blockpc %26 1 %69 1
%70:i32 = var
blockpc %27 0 %70 1
%71:i32 = var
blockpc %27 1 %71 1
%72:i32 = var
blockpc %33 0 %72 1
%73:i32 = var
blockpc %33 1 %73 1
%74:i32 = var
blockpc %44 0 %74 1
%75:i32 = var
blockpc %44 1 %75 1
%76:i32 = var
blockpc %45 0 %76 1
%77:i32 = var
blockpc %45 1 %77 1
%78:i32 = var
%79:i32 = var
pc %78 1
pc %79 1
infer %51


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32 (hasExternalUses)
%51 = sub 0:i32, %50
%52:i32 = var
blockpc %0 0 %52 1
%53:i32 = var
blockpc %0 1 %53 1
%54:i32 = var
blockpc %7 0 %54 1
%55:i32 = var
blockpc %7 1 %55 1
%56:i32 = var
blockpc %12 0 %56 1
%57:i32 = var
blockpc %12 1 %57 1
%58:i32 = var
blockpc %13 0 %58 1
%59:i32 = var
blockpc %13 1 %59 1
%60:i32 = var
blockpc %14 0 %60 1
%61:i32 = var
blockpc %14 1 %61 1
%62:i32 = var
blockpc %19 0 %62 1
%63:i32 = var
blockpc %19 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %25 0 %66 1
%67:i32 = var
blockpc %25 1 %67 1
%68:i32 = var
blockpc %26 0 %68 1
%69:i32 = var
blockpc %26 1 %69 1
%70:i32 = var
blockpc %27 0 %70 1
%71:i32 = var
blockpc %27 1 %71 1
%72:i32 = var
blockpc %33 0 %72 1
%73:i32 = var
blockpc %33 1 %73 1
%74:i32 = var
blockpc %44 0 %74 1
%75:i32 = var
blockpc %44 1 %75 1
%76:i32 = var
blockpc %45 0 %76 1
%77:i32 = var
blockpc %45 1 %77 1
%78:i32 = var
%79:i32 = var
pc %78 1
pc %79 1
infer %51


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32 (hasExternalUses)
%51 = sub 0:i32, %50
%52 = and %51, 7:i32
%53:i32 = var
blockpc %0 0 %53 1
%54:i32 = var
blockpc %0 1 %54 1
%55:i32 = var
blockpc %7 0 %55 1
%56:i32 = var
blockpc %7 1 %56 1
%57:i32 = var
blockpc %12 0 %57 1
%58:i32 = var
blockpc %12 1 %58 1
%59:i32 = var
blockpc %13 0 %59 1
%60:i32 = var
blockpc %13 1 %60 1
%61:i32 = var
blockpc %14 0 %61 1
%62:i32 = var
blockpc %14 1 %62 1
%63:i32 = var
blockpc %19 0 %63 1
%64:i32 = var
blockpc %19 1 %64 1
%65:i32 = var
blockpc %20 0 %65 1
%66:i32 = var
blockpc %20 1 %66 1
%67:i32 = var
blockpc %25 0 %67 1
%68:i32 = var
blockpc %25 1 %68 1
%69:i32 = var
blockpc %26 0 %69 1
%70:i32 = var
blockpc %26 1 %70 1
%71:i32 = var
blockpc %27 0 %71 1
%72:i32 = var
blockpc %27 1 %72 1
%73:i32 = var
blockpc %33 0 %73 1
%74:i32 = var
blockpc %33 1 %74 1
%75:i32 = var
blockpc %44 0 %75 1
%76:i32 = var
blockpc %44 1 %76 1
%77:i32 = var
blockpc %45 0 %77 1
%78:i32 = var
blockpc %45 1 %78 1
%79:i32 = var
%80:i32 = var
pc %79 1
pc %80 1
infer %52


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = add %49, 8:i32 (hasExternalUses)
%51 = and %50, 7:i32
%52 = eq %51, 0:i32
%53:i32 = var
blockpc %0 0 %53 1
%54:i32 = var
blockpc %0 1 %54 1
%55:i32 = var
blockpc %7 0 %55 1
%56:i32 = var
blockpc %7 1 %56 1
%57:i32 = var
blockpc %12 0 %57 1
%58:i32 = var
blockpc %12 1 %58 1
%59:i32 = var
blockpc %13 0 %59 1
%60:i32 = var
blockpc %13 1 %60 1
%61:i32 = var
blockpc %14 0 %61 1
%62:i32 = var
blockpc %14 1 %62 1
%63:i32 = var
blockpc %19 0 %63 1
%64:i32 = var
blockpc %19 1 %64 1
%65:i32 = var
blockpc %20 0 %65 1
%66:i32 = var
blockpc %20 1 %66 1
%67:i32 = var
blockpc %25 0 %67 1
%68:i32 = var
blockpc %25 1 %68 1
%69:i32 = var
blockpc %26 0 %69 1
%70:i32 = var
blockpc %26 1 %70 1
%71:i32 = var
blockpc %27 0 %71 1
%72:i32 = var
blockpc %27 1 %72 1
%73:i32 = var
blockpc %33 0 %73 1
%74:i32 = var
blockpc %33 1 %74 1
%75:i32 = var
blockpc %44 0 %75 1
%76:i32 = var
blockpc %44 1 %76 1
%77:i32 = var
blockpc %45 0 %77 1
%78:i32 = var
blockpc %45 1 %78 1
%79:i32 = var
%80:i32 = var
pc %79 1
pc %80 1
infer %52


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52
%54:i32 = var
blockpc %0 0 %54 1
%55:i32 = var
blockpc %0 1 %55 1
%56:i32 = var
blockpc %7 0 %56 1
%57:i32 = var
blockpc %7 1 %57 1
%58:i32 = var
blockpc %12 0 %58 1
%59:i32 = var
blockpc %12 1 %59 1
%60:i32 = var
blockpc %13 0 %60 1
%61:i32 = var
blockpc %13 1 %61 1
%62:i32 = var
blockpc %14 0 %62 1
%63:i32 = var
blockpc %14 1 %63 1
%64:i32 = var
blockpc %19 0 %64 1
%65:i32 = var
blockpc %19 1 %65 1
%66:i32 = var
blockpc %20 0 %66 1
%67:i32 = var
blockpc %20 1 %67 1
%68:i32 = var
blockpc %25 0 %68 1
%69:i32 = var
blockpc %25 1 %69 1
%70:i32 = var
blockpc %26 0 %70 1
%71:i32 = var
blockpc %26 1 %71 1
%72:i32 = var
blockpc %27 0 %72 1
%73:i32 = var
blockpc %27 1 %73 1
%74:i32 = var
blockpc %33 0 %74 1
%75:i32 = var
blockpc %33 1 %75 1
%76:i32 = var
blockpc %44 0 %76 1
%77:i32 = var
blockpc %44 1 %77 1
%78:i32 = var
blockpc %45 0 %78 1
%79:i32 = var
blockpc %45 1 %79 1
%80:i32 = var
blockpc %50 0 %80 1
%81:i32 = var
blockpc %50 1 %81 1
%82:i32 = var
%83:i32 = var
pc %82 1
pc %83 1
infer %53


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2 = block 2
%3:i32 = var
%4 = phi %2, 4096:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %8, %9
%17 = phi %14, -1:i32, %16
%18 = phi %10, %13, %17
%19 = phi %5, %9, %18
%20 = add %19, 47:i32 (hasExternalUses)
%21 = add %4, %20 (hasExternalUses)
%22:i32 = var
%23 = sub %21, %22
%24 = sub 0:i32, %4 (hasExternalUses)
%25 = and %23, %24 (hasExternalUses)
%26 = block 2
%27:i32 = var
%28:i32 = var
%29 = add %27, %28
%30:i32 = var
%31 = and %29, %30
%32 = sub %31, %28
%33 = phi %26, 0:i32, %32
%34 = block 2
%35:i32 = var
%36:i32 = var
%37 = phi %34, %35, %36
%38 = add %33, %37 (hasExternalUses)
%39 = block 2
%40:i32 = var
%41 = block 2
%42:i32 = var
%43 = phi %6, %42, 0:i32
%44 = phi %15, 0:i32, %43
%45 = phi %14, 0:i32, %44
%46 = phi %10, 0:i32, %45
%47 = phi %5, %43, %46
%48 = block 2
%49 = block 2
%50 = phi %49, %47, %25
%51 = phi %48, %50, %47
%52 = phi %41, %47, %51
%53 = phi %34, %40, %52
%54 = block 2
%55 = block 2
%56 = block 2
%57 = phi %56, %38, %53
%58 = phi %55, %53, %57
%59 = phi %54, %53, %58
%60 = phi %39, %53, %59
%61:i32 = var
%62 = block 2
%63:i32 = var
%64:i32 = var
%65 = phi %6, %64, 0:i32
%66 = phi %15, 0:i32, %65
%67 = phi %14, 0:i32, %66
%68 = phi %10, 0:i32, %67
%69 = phi %5, %65, %68
%70 = phi %34, %63, %69
%71 = phi %62, %70, %69
%72 = phi %1, %25, %38, %60, %60, %61, %71
%73 = block 2
%74 = block 2
%75 = block 2
%76:i32 = var
%77:i32 = var
%78 = phi %6, %77, 0:i32
%79 = phi %15, 0:i32, %78
%80 = phi %14, 0:i32, %79
%81 = phi %10, 0:i32, %80
%82 = phi %5, %78, %81
%83:i32 = var
%84 = phi %34, %83, %82
%85 = block 3
%86:i32 = var
%87:i32 = var
%88 = phi %6, %87, 0:i32
%89 = phi %15, 0:i32, %88
%90 = phi %14, 0:i32, %89
%91 = phi %10, 0:i32, %90
%92 = phi %5, %88, %91
%93 = phi %49, %25, %92
%94 = phi %48, %93, 0:i32
%95 = phi %41, %92, %94
%96 = phi %34, %86, %95
%97 = phi %56, %96, 0:i32
%98 = phi %55, 0:i32, %97
%99 = phi %54, %96, %98
%100 = phi %39, 0:i32, %99
%101 = phi %85, 0:i32, 0:i32, %100
%102 = phi %62, %101, 0:i32
%103 = phi %1, %82, %84, %84, %84, %84, %102
%104 = phi %75, %76, %103
%105 = phi %74, %72, %104
%106 = phi %73, %72, %105
%107 = phi %0, %72, %106
%108 = add %107, -40:i32 (hasExternalUses)
%109 = block 2
%110:i32 = var
%111 = phi %109, 0:i32, %110
%112 = sub %108, %111
%113:i32 = var
blockpc %0 0 %113 1
%114:i32 = var
blockpc %0 1 %114 1
%115:i32 = var
blockpc %2 0 %115 1
%116:i32 = var
blockpc %2 1 %116 1
%117:i32 = var
blockpc %10 0 %117 1
%118:i32 = var
blockpc %10 1 %118 1
%119:i32 = var
blockpc %11 0 %119 1
%120:i32 = var
blockpc %11 1 %120 1
%121:i32 = var
blockpc %14 0 %121 1
%122:i32 = var
blockpc %14 1 %122 1
%123:i32 = var
blockpc %15 0 %123 1
%124:i32 = var
blockpc %15 1 %124 1
%125:i32 = var
blockpc %26 0 %125 1
%126:i32 = var
blockpc %26 1 %126 1
%127:i32 = var
blockpc %41 0 %127 1
%128:i32 = var
blockpc %41 1 %128 1
%129:i32 = var
blockpc %48 0 %129 1
%130:i32 = var
blockpc %48 1 %130 1
%131:i32 = var
blockpc %49 0 %131 1
%132:i32 = var
blockpc %49 1 %132 1
%133:i32 = var
blockpc %54 0 %133 1
%134:i32 = var
blockpc %54 1 %134 1
%135:i32 = var
blockpc %55 0 %135 1
%136:i32 = var
blockpc %55 1 %136 1
%137:i32 = var
blockpc %56 0 %137 1
%138:i32 = var
blockpc %56 1 %138 1
%139:i32 = var
blockpc %62 0 %139 1
%140:i32 = var
blockpc %62 1 %140 1
%141:i32 = var
blockpc %73 0 %141 1
%142:i32 = var
blockpc %73 1 %142 1
%143:i32 = var
blockpc %74 0 %143 1
%144:i32 = var
blockpc %74 1 %144 1
%145:i32 = var
blockpc %75 0 %145 1
%146:i32 = var
blockpc %75 1 %146 1
%147:i32 = var
blockpc %109 0 %147 1
%148:i32 = var
blockpc %109 1 %148 1
%149:i32 = var
%150:i32 = var
pc %149 1
pc %150 1
infer %112


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50 = block 2
%51:i32 = var
%52 = phi %50, 0:i32, %51
%53 = add %49, %52 (hasExternalUses)
%54 = add %53, 4:i32
%55:i32 = var
blockpc %0 0 %55 1
%56:i32 = var
blockpc %0 1 %56 1
%57:i32 = var
blockpc %7 0 %57 1
%58:i32 = var
blockpc %7 1 %58 1
%59:i32 = var
blockpc %12 0 %59 1
%60:i32 = var
blockpc %12 1 %60 1
%61:i32 = var
blockpc %13 0 %61 1
%62:i32 = var
blockpc %13 1 %62 1
%63:i32 = var
blockpc %14 0 %63 1
%64:i32 = var
blockpc %14 1 %64 1
%65:i32 = var
blockpc %19 0 %65 1
%66:i32 = var
blockpc %19 1 %66 1
%67:i32 = var
blockpc %20 0 %67 1
%68:i32 = var
blockpc %20 1 %68 1
%69:i32 = var
blockpc %25 0 %69 1
%70:i32 = var
blockpc %25 1 %70 1
%71:i32 = var
blockpc %26 0 %71 1
%72:i32 = var
blockpc %26 1 %72 1
%73:i32 = var
blockpc %27 0 %73 1
%74:i32 = var
blockpc %27 1 %74 1
%75:i32 = var
blockpc %33 0 %75 1
%76:i32 = var
blockpc %33 1 %76 1
%77:i32 = var
blockpc %44 0 %77 1
%78:i32 = var
blockpc %44 1 %78 1
%79:i32 = var
blockpc %45 0 %79 1
%80:i32 = var
blockpc %45 1 %80 1
%81:i32 = var
blockpc %50 0 %81 1
%82:i32 = var
blockpc %50 1 %82 1
%83:i32 = var
%84:i32 = var
pc %83 1
pc %84 1
infer %54


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2 = block 2
%3:i32 = var
%4 = phi %2, 4096:i32, %3
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = phi %6, %7, %8
%10 = block 2
%11 = block 2
%12:i32 = var
%13 = phi %11, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %8, %9
%17 = phi %14, -1:i32, %16
%18 = phi %10, %13, %17
%19 = phi %5, %9, %18
%20 = add %19, 47:i32 (hasExternalUses)
%21 = add %4, %20 (hasExternalUses)
%22:i32 = var
%23 = sub %21, %22
%24 = sub 0:i32, %4 (hasExternalUses)
%25 = and %23, %24 (hasExternalUses)
%26 = block 2
%27:i32 = var
%28:i32 = var
%29 = and %27, %28
%30:i32 = var
%31 = sub %29, %30
%32 = phi %26, 0:i32, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %33, %34, %35
%37 = add %32, %36 (hasExternalUses)
%38 = block 2
%39:i32 = var
%40 = block 2
%41:i32 = var
%42 = phi %6, %41, 0:i32
%43 = phi %15, 0:i32, %42
%44 = phi %14, 0:i32, %43
%45 = phi %10, 0:i32, %44
%46 = phi %5, %42, %45
%47 = block 2
%48 = block 2
%49 = phi %48, %46, %25
%50 = phi %47, %49, %46
%51 = phi %40, %46, %50
%52 = phi %33, %39, %51
%53 = block 2
%54 = block 2
%55 = block 2
%56 = phi %55, %37, %52
%57 = phi %54, %52, %56
%58 = phi %53, %52, %57
%59 = phi %38, %52, %58
%60:i32 = var
%61 = block 2
%62:i32 = var
%63:i32 = var
%64 = phi %6, %63, 0:i32
%65 = phi %15, 0:i32, %64
%66 = phi %14, 0:i32, %65
%67 = phi %10, 0:i32, %66
%68 = phi %5, %64, %67
%69 = phi %33, %62, %68
%70 = phi %61, %69, %68
%71 = phi %1, %25, %37, %59, %59, %60, %70
%72 = block 2
%73 = block 2
%74 = block 2
%75:i32 = var
%76:i32 = var
%77 = phi %6, %76, 0:i32
%78 = phi %15, 0:i32, %77
%79 = phi %14, 0:i32, %78
%80 = phi %10, 0:i32, %79
%81 = phi %5, %77, %80
%82:i32 = var
%83 = phi %33, %82, %81
%84 = block 3
%85:i32 = var
%86:i32 = var
%87 = phi %6, %86, 0:i32
%88 = phi %15, 0:i32, %87
%89 = phi %14, 0:i32, %88
%90 = phi %10, 0:i32, %89
%91 = phi %5, %87, %90
%92 = phi %48, %25, %91
%93 = phi %47, %92, 0:i32
%94 = phi %40, %91, %93
%95 = phi %33, %85, %94
%96 = phi %55, %95, 0:i32
%97 = phi %54, 0:i32, %96
%98 = phi %53, %95, %97
%99 = phi %38, 0:i32, %98
%100 = phi %84, 0:i32, 0:i32, %99
%101 = phi %61, %100, 0:i32
%102 = phi %1, %81, %83, %83, %83, %83, %101
%103 = phi %74, %75, %102
%104 = phi %73, %71, %103
%105 = phi %72, %71, %104
%106 = phi %0, %71, %105
%107 = add %106, -40:i32 (hasExternalUses)
%108 = block 2
%109:i32 = var
%110 = phi %108, 0:i32, %109
%111 = sub %107, %110 (hasExternalUses)
%112 = or %111, 1:i32
%113:i32 = var
blockpc %0 0 %113 1
%114:i32 = var
blockpc %0 1 %114 1
%115:i32 = var
blockpc %2 0 %115 1
%116:i32 = var
blockpc %2 1 %116 1
%117:i32 = var
blockpc %10 0 %117 1
%118:i32 = var
blockpc %10 1 %118 1
%119:i32 = var
blockpc %11 0 %119 1
%120:i32 = var
blockpc %11 1 %120 1
%121:i32 = var
blockpc %14 0 %121 1
%122:i32 = var
blockpc %14 1 %122 1
%123:i32 = var
blockpc %15 0 %123 1
%124:i32 = var
blockpc %15 1 %124 1
%125:i32 = var
blockpc %26 0 %125 1
%126:i32 = var
blockpc %26 1 %126 1
%127:i32 = var
blockpc %40 0 %127 1
%128:i32 = var
blockpc %40 1 %128 1
%129:i32 = var
blockpc %47 0 %129 1
%130:i32 = var
blockpc %47 1 %130 1
%131:i32 = var
blockpc %48 0 %131 1
%132:i32 = var
blockpc %48 1 %132 1
%133:i32 = var
blockpc %53 0 %133 1
%134:i32 = var
blockpc %53 1 %134 1
%135:i32 = var
blockpc %54 0 %135 1
%136:i32 = var
blockpc %54 1 %136 1
%137:i32 = var
blockpc %55 0 %137 1
%138:i32 = var
blockpc %55 1 %138 1
%139:i32 = var
blockpc %61 0 %139 1
%140:i32 = var
blockpc %61 1 %140 1
%141:i32 = var
blockpc %72 0 %141 1
%142:i32 = var
blockpc %72 1 %142 1
%143:i32 = var
blockpc %73 0 %143 1
%144:i32 = var
blockpc %73 1 %144 1
%145:i32 = var
blockpc %74 0 %145 1
%146:i32 = var
blockpc %74 1 %146 1
%147:i32 = var
blockpc %108 0 %147 1
%148:i32 = var
blockpc %108 1 %148 1
%149:i32 = var
%150:i32 = var
pc %149 1
pc %150 1
infer %112


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51 = add %49, %50
%52:i32 = var
blockpc %0 0 %52 1
%53:i32 = var
blockpc %0 1 %53 1
%54:i32 = var
blockpc %7 0 %54 1
%55:i32 = var
blockpc %7 1 %55 1
%56:i32 = var
blockpc %12 0 %56 1
%57:i32 = var
blockpc %12 1 %57 1
%58:i32 = var
blockpc %13 0 %58 1
%59:i32 = var
blockpc %13 1 %59 1
%60:i32 = var
blockpc %14 0 %60 1
%61:i32 = var
blockpc %14 1 %61 1
%62:i32 = var
blockpc %19 0 %62 1
%63:i32 = var
blockpc %19 1 %63 1
%64:i32 = var
blockpc %20 0 %64 1
%65:i32 = var
blockpc %20 1 %65 1
%66:i32 = var
blockpc %25 0 %66 1
%67:i32 = var
blockpc %25 1 %67 1
%68:i32 = var
blockpc %26 0 %68 1
%69:i32 = var
blockpc %26 1 %69 1
%70:i32 = var
blockpc %27 0 %70 1
%71:i32 = var
blockpc %27 1 %71 1
%72:i32 = var
blockpc %33 0 %72 1
%73:i32 = var
blockpc %33 1 %73 1
%74:i32 = var
blockpc %44 0 %74 1
%75:i32 = var
blockpc %44 1 %75 1
%76:i32 = var
blockpc %45 0 %76 1
%77:i32 = var
blockpc %45 1 %77 1
%78:i32 = var
%79:i32 = var
pc %78 1
pc %79 1
infer %51


; start LHS (in $38)
%0 = block 2
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = block 2
%5 = block 2
%6:i32 = var
%7 = block 2
%8 = block 2
%9 = block 2
%10:i32 = var
%11 = phi %9, %10, 0:i32
%12 = block 2
%13 = block 2
%14 = block 2
%15 = phi %14, 0:i32, %11
%16 = phi %13, 0:i32, %15
%17 = phi %12, 0:i32, %16
%18 = phi %8, %11, %17
%19 = block 2
%20 = block 2
%21 = phi %20, %18, %2
%22 = phi %19, %21, %18
%23 = phi %7, %18, %22
%24 = phi %5, %6, %23
%25 = block 2
%26 = block 2
%27 = block 2
%28:i32 = var
%29 = phi %27, %28, %24
%30 = phi %26, %24, %29
%31 = phi %25, %24, %30
%32 = phi %4, %24, %31
%33 = block 2
%34:i32 = var
%35:i32 = var
%36 = phi %9, %35, 0:i32
%37 = phi %14, 0:i32, %36
%38 = phi %13, 0:i32, %37
%39 = phi %12, 0:i32, %38
%40 = phi %8, %36, %39
%41 = phi %5, %34, %40
%42 = phi %33, %41, %40
%43 = phi %1, %2, %3, %32, %32, %32, %42
%44 = block 2
%45 = block 2
%46:i32 = var
%47 = phi %45, %43, %46
%48 = phi %44, %43, %47
%49 = phi %0, %43, %48
%50:i32 = var
%51 = add %49, %50
%52 = add %51, 4:i32
%53:i32 = var
blockpc %0 0 %53 1
%54:i32 = var
blockpc %0 1 %54 1
%55:i32 = var
blockpc %7 0 %55 1
%56:i32 = var
blockpc %7 1 %56 1
%57:i32 = var
blockpc %12 0 %57 1
%58:i32 = var
blockpc %12 1 %58 1
%59:i32 = var
blockpc %13 0 %59 1
%60:i32 = var
blockpc %13 1 %60 1
%61:i32 = var
blockpc %14 0 %61 1
%62:i32 = var
blockpc %14 1 %62 1
%63:i32 = var
blockpc %19 0 %63 1
%64:i32 = var
blockpc %19 1 %64 1
%65:i32 = var
blockpc %20 0 %65 1
%66:i32 = var
blockpc %20 1 %66 1
%67:i32 = var
blockpc %25 0 %67 1
%68:i32 = var
blockpc %25 1 %68 1
%69:i32 = var
blockpc %26 0 %69 1
%70:i32 = var
blockpc %26 1 %70 1
%71:i32 = var
blockpc %27 0 %71 1
%72:i32 = var
blockpc %27 1 %72 1
%73:i32 = var
blockpc %33 0 %73 1
%74:i32 = var
blockpc %33 1 %74 1
%75:i32 = var
blockpc %44 0 %75 1
%76:i32 = var
blockpc %44 1 %76 1
%77:i32 = var
blockpc %45 0 %77 1
%78:i32 = var
blockpc %45 1 %78 1
%79:i32 = var
%80:i32 = var
pc %79 1
pc %80 1
infer %52


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = add %12, 4:i32
%14 = add %1, 16:i32
%15 = ult %11, %14
blockpc %0 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %0 1 %17 1
%18 = and %7, 7:i32
%19 = eq %18, 0:i32
blockpc %6 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %6 1 %21 1
%22 = eq %1, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 6
%29 = phi %28, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, %29, 145:i32
%37 = phi %30, %29, %36
%38 = phi %25, %29, %37
%39 = eq %38, 145:i32
pc %24 1
pc %39 1
infer %13


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = add %12, 8:i32 (hasExternalUses)
%14 = add %13, 8:i32
%15 = add %1, 16:i32
%16 = ult %11, %15
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = and %7, 7:i32
%20 = eq %19, 0:i32
blockpc %6 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %6 1 %22 1
%23 = eq %1, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
pc %25 1
pc %26 1
infer %14


; start LHS (in $38)
%0 = add 3552:i32, 8:i32
%1:i32 = var
%2 = eq %1, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5 = block 2
%6 = block 6
%7 = phi %6, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%8 = eq %7, 143:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = block 2
%12 = block 2
%13:i32 = var
blockpc %12 0 %13 1
%14:i32 = var
blockpc %12 1 %14 1
%15:i32 = var
%16 = phi %12, 4096:i32, %15
%17 = block 2
%18 = block 2
%19:i32 = var
%20:i32 = var
%21 = phi %18, %19, %20
%22 = block 2
%23:i32 = var
blockpc %22 0 %23 1
%24:i32 = var
blockpc %22 1 %24 1
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28:i32 = var
%29 = phi %25, 16:i32, %28
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, %20, %21
%37 = phi %30, -1:i32, %36
%38 = phi %22, %29, %37
%39 = phi %17, %21, %38
%40 = add %39, 47:i32
%41 = add %16, %40
%42:i32 = var
%43 = and %41, %42
%44 = block 2
%45:i32 = var
%46 = phi %44, %45, %43
%47 = block 2
%48:i32 = var
blockpc %47 0 %48 1
%49:i32 = var
blockpc %47 1 %49 1
%50 = phi %47, %46, %43
%51 = phi %6, %43, %46, %46, %46, %46, %50
%52 = ult %51, 2147483647:i32
blockpc %11 0 %52 1
%53:i32 = var
blockpc %11 1 %53 1
%54 = block 2
%55:i32 = var
blockpc %54 0 %55 1
%56:i32 = var
blockpc %54 1 %56 1
%57 = phi %54, %7, 145:i32
%58 = phi %11, %7, %57
%59 = phi %5, %7, %58
%60 = eq %59, 145:i32
pc %4 1
pc %60 1
infer %0


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 6
%8 = phi %7, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%9 = eq %8, 143:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 4096:i32, %16
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = phi %26, 16:i32, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = phi %34, %21, %22
%38 = phi %31, -1:i32, %37
%39 = phi %23, %30, %38
%40 = phi %18, %22, %39
%41 = add %40, 47:i32
%42 = add %17, %41
%43:i32 = var
%44 = and %42, %43
%45 = block 2
%46:i32 = var
%47 = phi %45, %46, %44
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = phi %48, %47, %44
%52 = phi %7, %44, %47, %47, %47, %47, %51
%53 = ult %52, 2147483647:i32
blockpc %12 0 %53 1
%54:i32 = var
blockpc %12 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = phi %55, %8, 145:i32
%59 = phi %12, %8, %58
%60 = phi %6, %8, %59
%61 = eq %60, 145:i32
pc %5 1
pc %61 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = block 2
%7 = block 6
%8 = phi %7, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%9 = eq %8, 143:i32
blockpc %6 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %6 1 %11 1
%12 = block 2
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, 4096:i32, %16
%18 = block 2
%19 = block 2
%20:i32 = var
%21:i32 = var
%22 = phi %19, %20, %21
%23 = block 2
%24:i32 = var
blockpc %23 0 %24 1
%25:i32 = var
blockpc %23 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29:i32 = var
%30 = phi %26, 16:i32, %29
%31 = block 2
%32:i32 = var
blockpc %31 0 %32 1
%33:i32 = var
blockpc %31 1 %33 1
%34 = block 2
%35:i32 = var
blockpc %34 0 %35 1
%36:i32 = var
blockpc %34 1 %36 1
%37 = phi %34, %21, %22
%38 = phi %31, -1:i32, %37
%39 = phi %23, %30, %38
%40 = phi %18, %22, %39
%41 = add %40, 47:i32
%42 = add %17, %41
%43:i32 = var
%44 = and %42, %43
%45 = block 2
%46:i32 = var
%47 = phi %45, %46, %44
%48 = block 2
%49:i32 = var
blockpc %48 0 %49 1
%50:i32 = var
blockpc %48 1 %50 1
%51 = phi %48, %47, %44
%52 = phi %7, %44, %47, %47, %47, %47, %51
%53 = ult %52, 2147483647:i32
blockpc %12 0 %53 1
%54:i32 = var
blockpc %12 1 %54 1
%55 = block 2
%56:i32 = var
blockpc %55 0 %56 1
%57:i32 = var
blockpc %55 1 %57 1
%58 = phi %55, %8, 145:i32
%59 = phi %12, %8, %58
%60 = phi %6, %8, %59
%61 = eq %60, 145:i32
pc %5 1
pc %61 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = ult %1, %4
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = block 2
%11 = block 6
%12 = phi %11, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%13 = eq %12, 143:i32
blockpc %10 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %10 1 %15 1
%16 = block 2
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21 = phi %17, 4096:i32, %20
%22 = block 2
%23 = block 2
%24:i32 = var
%25:i32 = var
%26 = phi %23, %24, %25
%27 = block 2
%28:i32 = var
blockpc %27 0 %28 1
%29:i32 = var
blockpc %27 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34 = phi %30, 16:i32, %33
%35 = block 2
%36:i32 = var
blockpc %35 0 %36 1
%37:i32 = var
blockpc %35 1 %37 1
%38 = block 2
%39:i32 = var
blockpc %38 0 %39 1
%40:i32 = var
blockpc %38 1 %40 1
%41 = phi %38, %25, %26
%42 = phi %35, -1:i32, %41
%43 = phi %27, %34, %42
%44 = phi %22, %26, %43
%45 = add %44, 47:i32
%46 = add %21, %45
%47:i32 = var
%48 = and %46, %47
%49 = block 2
%50:i32 = var
%51 = phi %49, %50, %48
%52 = block 2
%53:i32 = var
blockpc %52 0 %53 1
%54:i32 = var
blockpc %52 1 %54 1
%55 = phi %52, %51, %48
%56 = phi %11, %48, %51, %51, %51, %51, %55
%57 = ult %56, 2147483647:i32
blockpc %16 0 %57 1
%58:i32 = var
blockpc %16 1 %58 1
%59 = block 2
%60:i32 = var
blockpc %59 0 %60 1
%61:i32 = var
blockpc %59 1 %61 1
%62 = phi %59, %12, 145:i32
%63 = phi %16, %12, %62
%64 = phi %10, %12, %63
%65 = eq %64, 145:i32
pc %9 1
pc %65 1
infer %5


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = eq %12, %1
%14 = add %1, 16:i32
%15 = ult %11, %14
blockpc %0 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %0 1 %17 1
%18 = and %7, 7:i32
%19 = eq %18, 0:i32
blockpc %6 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %6 1 %21 1
%22 = eq %1, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 6
%29 = phi %28, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, %29, 145:i32
%37 = phi %30, %29, %36
%38 = phi %25, %29, %37
%39 = eq %38, 145:i32
pc %24 1
pc %39 1
infer %13


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = eq %12, %1
%14:i32 = zext %13
%15 = eq %14, 0:i32
%16 = add %1, 16:i32
%17 = ult %11, %16
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20 = and %7, 7:i32
%21 = eq %20, 0:i32
blockpc %6 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %6 1 %23 1
%24 = eq %1, 0:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
pc %26 1
pc %27 1
infer %15


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1
%14 = add %1, 16:i32
%15 = ult %11, %14
blockpc %0 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %0 1 %17 1
%18 = and %7, 7:i32
%19 = eq %18, 0:i32
blockpc %6 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %6 1 %21 1
%22 = eq %12, %1
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = eq %1, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %24 1
pc %27 1
pc %28 1
infer %13


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -2:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %3, %4
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = and %10, 7:i32
%12 = phi %7, 0:i32, %11
%13 = add %6, %12
%14:i32 = var
%15 = add %14, 16:i32
%16 = ult %13, %15
blockpc %2 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %2 1 %18 1
%19 = phi %2, %14, %13
%20 = eq %19, %14
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = eq %14, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
pc %22 1
pc %25 1
pc %26 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %3, %4
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = and %10, 7:i32
%12 = phi %7, 0:i32, %11
%13 = add %6, %12
%14 = add %0, 16:i32
%15 = ult %13, %14
blockpc %2 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %2 1 %17 1
%18 = phi %2, %0, %13
%19 = eq %18, %0
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = eq %0, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 6
%29 = phi %28, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, %29, 145:i32
%37 = phi %30, %29, %36
%38 = phi %25, %29, %37
%39 = eq %38, 145:i32
pc %21 1
pc %24 1
pc %39 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = or %13, 1:i32
%15 = add %1, 16:i32
%16 = ult %11, %15
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = and %7, 7:i32
%20 = eq %19, 0:i32
blockpc %6 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %6 1 %22 1
%23 = eq %12, %1
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27:i32 = var
pc %25 1
pc %26 1
pc %27 1
infer %14


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = lshr %13, 3:i32
%15 = add %1, 16:i32
%16 = ult %11, %15
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = and %7, 7:i32
%20 = eq %19, 0:i32
blockpc %6 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %6 1 %22 1
%23 = eq %12, %1
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27:i32 = var
pc %25 1
pc %26 1
pc %27 1
infer %14


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = ult %13, 256:i32
%15 = add %1, 16:i32
%16 = ult %11, %15
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = and %7, 7:i32
%20 = eq %19, 0:i32
blockpc %6 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %6 1 %22 1
%23 = eq %12, %1
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27:i32 = var
pc %25 1
pc %26 1
pc %27 1
infer %14


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = lshr %13, 3:i32 (hasExternalUses)
%15 = shl %14, 1:i32
%16 = add %1, 16:i32
%17 = ult %11, %16
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20 = and %7, 7:i32
%21 = eq %20, 0:i32
blockpc %6 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %6 1 %23 1
%24 = ult %13, 256:i32
%25 = eq %12, %1
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
%29:i32 = var
pc %24 1
pc %27 1
pc %28 1
pc %29 1
infer %15


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32 (hasExternalUses)
%6 = block 2
%7:i32 = var
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = lshr %13, 3:i32 (hasExternalUses)
%15 = shl %14, 1:i32
%16 = shl %15, 2:i32
%17 = add %1, 16:i32
%18 = ult %11, %17
blockpc %0 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %0 1 %20 1
%21 = and %7, 7:i32
%22 = eq %21, 0:i32
blockpc %6 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %6 1 %24 1
%25 = ult %13, 256:i32
%26:i32 = var
%27:i32 = var
%28:i32 = var
pc %25 1
pc %26 1
pc %27 1
pc %28 1
infer %16


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32 (hasExternalUses)
%6 = block 2
%7:i32 = var
%8 = and %7, 7:i32
%9 = phi %6, 0:i32, %8
%10 = add %5, %9 (hasExternalUses)
%11 = phi %0, %1, %10
%12 = sub %11, %1 (hasExternalUses)
%13 = lshr %12, 3:i32 (hasExternalUses)
%14 = shl %13, 1:i32
%15 = shl %14, 2:i32
%16 = add 3144:i32, %15
%17 = add %1, 16:i32
%18 = ult %10, %17
blockpc %0 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %0 1 %20 1
%21 = add %5, 8:i32
%22 = and %21, 7:i32
%23 = eq %22, 0:i32
blockpc %6 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %6 1 %25 1
%26:i32 = var
%27:i32 = var
%28:i32 = var
%29:i32 = var
pc %26 1
pc %27 1
pc %28 1
pc %29 1
infer %16


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = lshr %13, 3:i32 (hasExternalUses)
%15 = shl 1:i32, %14
%16 = add %1, 16:i32
%17 = ult %11, %16
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20 = and %7, 7:i32
%21 = eq %20, 0:i32
blockpc %6 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %6 1 %23 1
%24 = ult %13, 256:i32
%25 = eq %12, %1
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
%29:i32 = var
pc %24 1
pc %27 1
pc %28 1
pc %29 1
infer %15


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4:i32 = var
%5 = add %3, %4 (hasExternalUses)
%6 = add %5, -47:i32 (hasExternalUses)
%7 = block 2
%8:i32 = var
%9 = sub 0:i32, %8
%10 = and %9, 7:i32
%11 = phi %7, 0:i32, %10
%12 = add %6, %11 (hasExternalUses)
%13 = phi %1, %2, %12
%14 = sub %13, %2 (hasExternalUses)
%15 = lshr %14, 3:i32 (hasExternalUses)
%16 = shl 1:i32, %15 (hasExternalUses)
%17 = and %0, %16
%18 = add %2, 16:i32
%19 = ult %12, %18
blockpc %1 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %1 1 %21 1
%22 = and %8, 7:i32
%23 = eq %22, 0:i32
blockpc %7 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %7 1 %25 1
%26:i32 = var
%27:i32 = var
%28:i32 = var
%29:i32 = var
pc %26 1
pc %27 1
pc %28 1
pc %29 1
infer %17


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4:i32 = var
%5 = add %3, %4 (hasExternalUses)
%6 = add %5, -47:i32 (hasExternalUses)
%7 = block 2
%8:i32 = var
%9 = and %8, 7:i32
%10 = phi %7, 0:i32, %9
%11 = add %6, %10 (hasExternalUses)
%12 = phi %1, %2, %11
%13 = sub %12, %2 (hasExternalUses)
%14 = lshr %13, 3:i32 (hasExternalUses)
%15 = shl 1:i32, %14 (hasExternalUses)
%16 = and %0, %15
%17 = eq %16, 0:i32
%18 = add %2, 16:i32
%19 = ult %11, %18
blockpc %1 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %1 1 %21 1
%22 = add %6, 8:i32
%23 = and %22, 7:i32
%24 = eq %23, 0:i32
blockpc %7 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %7 1 %26 1
%27:i32 = var
%28:i32 = var
%29:i32 = var
%30:i32 = var
pc %27 1
pc %28 1
pc %29 1
pc %30 1
infer %17


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3:i32 = var
%4:i32 = var
%5 = add %3, %4 (hasExternalUses)
%6 = add %5, -47:i32 (hasExternalUses)
%7 = block 2
%8:i32 = var
%9 = sub 0:i32, %8
%10 = and %9, 7:i32
%11 = phi %7, 0:i32, %10
%12 = add %6, %11 (hasExternalUses)
%13 = phi %1, %2, %12
%14 = sub %13, %2 (hasExternalUses)
%15 = lshr %14, 3:i32 (hasExternalUses)
%16 = shl 1:i32, %15 (hasExternalUses)
%17 = or %0, %16
%18 = add %2, 16:i32
%19 = ult %12, %18
blockpc %1 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %1 1 %21 1
%22 = and %8, 7:i32
%23 = eq %22, 0:i32
blockpc %7 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %7 1 %25 1
%26:i32 = var
%27:i32 = var
%28:i32 = var
%29:i32 = var
%30:i32 = var
pc %26 1
pc %27 1
pc %28 1
pc %29 1
pc %30 1
infer %17


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = add %2, -47:i32 (hasExternalUses)
%4 = block 2
%5:i32 = var
%6 = phi %4, 0:i32, %5
%7 = add %3, %6 (hasExternalUses)
%8 = phi %0, %1, %7
%9 = sub %8, %1 (hasExternalUses)
%10 = lshr %9, 3:i32 (hasExternalUses)
%11 = shl %10, 1:i32
%12 = shl %11, 2:i32
%13 = add 3144:i32, %12 (hasExternalUses)
%14 = add %13, 8:i32
%15 = add %1, 16:i32
%16 = ult %7, %15
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = add %3, 8:i32
%20 = and %19, 7:i32
%21 = eq %20, 0:i32
blockpc %4 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %4 1 %23 1
%24:i32 = var
%25 = shl 1:i32, %10
%26 = and %24, %25
%27 = eq %26, 0:i32
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %27 1
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %14


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = add %2, -47:i32 (hasExternalUses)
%4 = block 2
%5:i32 = var
%6 = phi %4, 0:i32, %5
%7 = add %3, %6 (hasExternalUses)
%8 = phi %0, %1, %7
%9 = sub %8, %1 (hasExternalUses)
%10 = lshr %9, 3:i32 (hasExternalUses)
%11 = shl %10, 1:i32
%12 = shl %11, 2:i32
%13 = add 3144:i32, %12 (hasExternalUses)
%14 = add %13, 8:i32
%15 = add %1, 16:i32
%16 = ult %7, %15
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = add %3, 8:i32
%20 = and %19, 7:i32
%21 = eq %20, 0:i32
blockpc %4 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %4 1 %23 1
%24:i32 = var
%25 = shl 1:i32, %10
%26 = and %24, %25
%27 = eq %26, 0:i32
%28:i32 = zext %27
%29 = eq %28, 0:i32
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %14


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, 0:i32, %5
%7 = add %3, %6 (hasExternalUses)
%8 = phi %1, %2, %7
%9 = sub %8, %2 (hasExternalUses)
%10 = lshr %9, 3:i32 (hasExternalUses)
%11 = shl %10, 1:i32
%12 = shl %11, 2:i32
%13 = add 3144:i32, %12 (hasExternalUses)
%14:i32 = var
%15 = phi %0, %13, %14
%16 = add %15, 12:i32
%17:i32 = var
%18 = shl 1:i32, %10
%19 = and %17, %18
%20 = eq %19, 0:i32
blockpc %0 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1
%23 = add %2, 16:i32
%24 = ult %7, %23
blockpc %1 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %1 1 %26 1
%27:i32 = var
blockpc %4 0 %27 1
%28:i32 = var
blockpc %4 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %16


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %3, %4
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
%9 = eq %8, 0:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12:i32 = var
%13 = sub 0:i32, %12
%14 = and %13, 7:i32
%15 = phi %7, 0:i32, %14
%16 = add %6, %15
%17 = add %0, 16:i32
%18 = ult %16, %17
blockpc %2 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %2 1 %20 1
%21 = phi %2, %0, %16
%22 = sub %21, %0
%23 = ult %22, 256:i32
%24 = eq %21, %0
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
%28:i32 = var
pc %23 1
pc %26 1
pc %27 1
pc %28 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %3, %4
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
%9 = eq %8, 0:i32
blockpc %7 0 %9 1
%10:i32 = zext %9
%11 = eq %10, 0:i32
blockpc %7 1 %11 1
%12:i32 = var
%13 = sub 0:i32, %12
%14 = and %13, 7:i32
%15 = phi %7, 0:i32, %14
%16 = add %6, %15
%17 = add %0, 16:i32
%18 = ult %16, %17
blockpc %2 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %2 1 %20 1
%21 = phi %2, %0, %16
%22 = sub %21, %0
%23 = ult %22, 256:i32
%24 = eq %21, %0
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
%28:i32 = var
pc %23 1
pc %26 1
pc %27 1
pc %28 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = lshr %13, 8:i32
%15 = add %1, 16:i32
%16 = ult %11, %15
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = and %7, 7:i32
%20 = eq %19, 0:i32
blockpc %6 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %6 1 %22 1
%23 = eq %12, %1
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27:i32 = var
pc %25 1
pc %26 1
pc %27 1
infer %14


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = lshr %13, 8:i32 (hasExternalUses)
%15 = eq %14, 0:i32
%16 = add %1, 16:i32
%17 = ult %11, %16
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20 = and %7, 7:i32
%21 = eq %20, 0:i32
blockpc %6 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %6 1 %23 1
%24 = eq %12, %1
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
%28:i32 = var
pc %26 1
pc %27 1
pc %28 1
infer %15


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = ult 16777215:i32, %13
%15 = add %1, 16:i32
%16 = ult %11, %15
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = and %7, 7:i32
%20 = eq %19, 0:i32
blockpc %6 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %6 1 %22 1
%23 = lshr %13, 8:i32
%24 = eq %23, 0:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
%28:i32 = var
%29:i32 = var
pc %26 1
pc %27 1
pc %28 1
pc %29 1
infer %14


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = lshr %13, 8:i32 (hasExternalUses)
%15 = add %14, 1048320:i32
%16 = add %1, 16:i32
%17 = ult %11, %16
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20 = and %7, 7:i32
%21 = eq %20, 0:i32
blockpc %6 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %6 1 %23 1
%24 = ult 16777215:i32, %13
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
%28:i32 = var
%29:i32 = var
%30:i32 = var
pc %26 1
pc %27 1
pc %28 1
pc %29 1
pc %30 1
infer %15


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32 (hasExternalUses)
%6 = block 2
%7:i32 = var
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = lshr %13, 8:i32 (hasExternalUses)
%15 = add %14, 1048320:i32
%16 = lshr %15, 16:i32
%17 = add %1, 16:i32
%18 = ult %11, %17
blockpc %0 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %0 1 %20 1
%21 = and %7, 7:i32
%22 = eq %21, 0:i32
blockpc %6 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %6 1 %24 1
%25 = ult 16777215:i32, %13
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %27 1
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %16


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32 (hasExternalUses)
%6 = block 2
%7:i32 = var
%8 = and %7, 7:i32
%9 = phi %6, 0:i32, %8
%10 = add %5, %9 (hasExternalUses)
%11 = phi %0, %1, %10
%12 = sub %11, %1 (hasExternalUses)
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = add %13, 1048320:i32
%15 = lshr %14, 16:i32
%16 = and %15, 8:i32
%17 = add %1, 16:i32
%18 = ult %10, %17
blockpc %0 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %0 1 %20 1
%21 = add %5, 8:i32
%22 = and %21, 7:i32
%23 = eq %22, 0:i32
blockpc %6 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %6 1 %25 1
%26:i32 = var
%27:i32 = var
%28:i32 = var
%29:i32 = var
%30:i32 = var
pc %26 1
pc %27 1
pc %28 1
pc %29 1
pc %30 1
infer %16


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = lshr %13, 8:i32 (hasExternalUses)
%15 = add %14, 1048320:i32
%16 = lshr %15, 16:i32
%17 = and %16, 8:i32 (hasExternalUses)
%18 = shl %14, %17
%19 = add %1, 16:i32
%20 = ult %11, %19
blockpc %0 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1
%23 = and %7, 7:i32
%24 = eq %23, 0:i32
blockpc %6 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %6 1 %26 1
%27:i32 = var
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %27 1
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %18


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32 (hasExternalUses)
%6 = block 2
%7:i32 = var
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = lshr %13, 8:i32 (hasExternalUses)
%15 = add %14, 1048320:i32
%16 = lshr %15, 16:i32
%17 = and %16, 8:i32 (hasExternalUses)
%18 = shl %14, %17 (hasExternalUses)
%19 = add %18, 520192:i32
%20 = add %1, 16:i32
%21 = ult %11, %20
blockpc %0 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %0 1 %23 1
%24 = and %7, 7:i32
%25 = eq %24, 0:i32
blockpc %6 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %6 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %19


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32 (hasExternalUses)
%6 = block 2
%7:i32 = var
%8 = and %7, 7:i32
%9 = phi %6, 0:i32, %8
%10 = add %5, %9 (hasExternalUses)
%11 = phi %0, %1, %10
%12 = sub %11, %1 (hasExternalUses)
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = add %13, 1048320:i32
%15 = lshr %14, 16:i32
%16 = and %15, 8:i32 (hasExternalUses)
%17 = shl %13, %16 (hasExternalUses)
%18 = add %17, 520192:i32
%19 = lshr %18, 16:i32
%20 = add %1, 16:i32
%21 = ult %10, %20
blockpc %0 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %0 1 %23 1
%24 = add %5, 8:i32
%25 = and %24, 7:i32
%26 = eq %25, 0:i32
blockpc %6 0 %26 1
%27:i32 = var
blockpc %6 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %19


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = add %2, -47:i32 (hasExternalUses)
%4 = block 2
%5:i32 = var
%6 = phi %4, 0:i32, %5
%7 = add %3, %6 (hasExternalUses)
%8 = phi %0, %1, %7
%9 = sub %8, %1 (hasExternalUses)
%10 = lshr %9, 8:i32 (hasExternalUses)
%11 = add %10, 1048320:i32
%12 = lshr %11, 16:i32
%13 = and %12, 8:i32 (hasExternalUses)
%14 = shl %10, %13 (hasExternalUses)
%15 = add %14, 520192:i32
%16 = lshr %15, 16:i32
%17 = and %16, 4:i32
%18 = add %1, 16:i32
%19 = ult %7, %18
blockpc %0 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %0 1 %21 1
%22 = add %3, 8:i32
%23 = and %22, 7:i32
%24 = eq %23, 0:i32
blockpc %4 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %4 1 %26 1
%27:i32 = var
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %27 1
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %17


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32 (hasExternalUses)
%6 = block 2
%7:i32 = var
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = lshr %13, 8:i32 (hasExternalUses)
%15 = add %14, 1048320:i32
%16 = lshr %15, 16:i32
%17 = and %16, 8:i32 (hasExternalUses)
%18 = shl %14, %17
%19 = add %18, 520192:i32
%20 = lshr %19, 16:i32
%21 = and %20, 4:i32 (hasExternalUses)
%22 = shl %18, %21
%23 = add %1, 16:i32
%24 = ult %11, %23
blockpc %0 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %0 1 %26 1
%27 = and %7, 7:i32
%28 = eq %27, 0:i32
blockpc %6 0 %28 1
%29:i32 = var
blockpc %6 1 %29 1
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
%34:i32 = var
pc %30 1
pc %31 1
pc %32 1
pc %33 1
pc %34 1
infer %22


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32 (hasExternalUses)
%6 = block 2
%7:i32 = var
%8 = and %7, 7:i32
%9 = phi %6, 0:i32, %8
%10 = add %5, %9 (hasExternalUses)
%11 = phi %0, %1, %10
%12 = sub %11, %1 (hasExternalUses)
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = add %13, 1048320:i32
%15 = lshr %14, 16:i32
%16 = and %15, 8:i32 (hasExternalUses)
%17 = shl %13, %16
%18 = add %17, 520192:i32
%19 = lshr %18, 16:i32
%20 = and %19, 4:i32 (hasExternalUses)
%21 = shl %17, %20 (hasExternalUses)
%22 = add %21, 245760:i32
%23 = add %1, 16:i32
%24 = ult %10, %23
blockpc %0 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %0 1 %26 1
%27 = add %5, 8:i32
%28 = and %27, 7:i32
%29 = eq %28, 0:i32
blockpc %6 0 %29 1
%30:i32 = var
blockpc %6 1 %30 1
%31:i32 = var
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35:i32 = var
pc %31 1
pc %32 1
pc %33 1
pc %34 1
pc %35 1
infer %22


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = add %2, -47:i32 (hasExternalUses)
%4 = block 2
%5:i32 = var
%6 = phi %4, 0:i32, %5
%7 = add %3, %6 (hasExternalUses)
%8 = phi %0, %1, %7
%9 = sub %8, %1 (hasExternalUses)
%10 = lshr %9, 8:i32 (hasExternalUses)
%11 = add %10, 1048320:i32
%12 = lshr %11, 16:i32
%13 = and %12, 8:i32 (hasExternalUses)
%14 = shl %10, %13
%15 = add %14, 520192:i32
%16 = lshr %15, 16:i32
%17 = and %16, 4:i32 (hasExternalUses)
%18 = shl %14, %17 (hasExternalUses)
%19 = add %18, 245760:i32
%20 = lshr %19, 16:i32
%21 = add %1, 16:i32
%22 = ult %7, %21
blockpc %0 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %0 1 %24 1
%25 = add %3, 8:i32
%26 = and %25, 7:i32
%27 = eq %26, 0:i32
blockpc %4 0 %27 1
%28:i32 = var
blockpc %4 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %20


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = phi %3, 0:i32, %4
%6 = add %2, %5 (hasExternalUses)
%7 = phi %0, %1, %6
%8 = sub %7, %1 (hasExternalUses)
%9 = lshr %8, 8:i32 (hasExternalUses)
%10 = add %9, 1048320:i32
%11 = lshr %10, 16:i32
%12 = and %11, 8:i32 (hasExternalUses)
%13 = shl %9, %12
%14 = add %13, 520192:i32
%15 = lshr %14, 16:i32
%16 = and %15, 4:i32 (hasExternalUses)
%17 = shl %13, %16 (hasExternalUses)
%18 = add %17, 245760:i32
%19 = lshr %18, 16:i32
%20 = and %19, 2:i32
%21 = add %1, 16:i32
%22 = ult %6, %21
blockpc %0 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %0 1 %24 1
%25 = add %2, 8:i32
%26 = and %25, 7:i32
%27 = eq %26, 0:i32
blockpc %3 0 %27 1
%28:i32 = var
blockpc %3 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
pc %33 1
infer %20


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = block 2
%4:i32 = var
%5 = phi %3, 0:i32, %4
%6 = add %2, %5 (hasExternalUses)
%7 = phi %0, %1, %6
%8 = sub %7, %1 (hasExternalUses)
%9 = lshr %8, 8:i32 (hasExternalUses)
%10 = add %9, 1048320:i32
%11 = lshr %10, 16:i32
%12 = and %11, 8:i32
%13 = shl %9, %12 (hasExternalUses)
%14 = add %13, 520192:i32
%15 = lshr %14, 16:i32
%16 = and %15, 4:i32 (hasExternalUses)
%17 = or %16, %12
%18 = add %1, 16:i32
%19 = ult %6, %18
blockpc %0 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %0 1 %21 1
%22 = add %2, 8:i32
%23 = and %22, 7:i32
%24 = eq %23, 0:i32
blockpc %3 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %3 1 %26 1
%27:i32 = var
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %27 1
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %17


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = sub %3, %1 (hasExternalUses)
%5 = lshr %4, 8:i32 (hasExternalUses)
%6 = add %5, 1048320:i32
%7 = lshr %6, 16:i32
%8 = and %7, 8:i32
%9 = shl %5, %8
%10 = add %9, 520192:i32
%11 = lshr %10, 16:i32
%12 = and %11, 4:i32
%13 = or %12, %8
%14 = shl %9, %12 (hasExternalUses)
%15 = add %14, 245760:i32
%16 = lshr %15, 16:i32
%17 = and %16, 2:i32 (hasExternalUses)
%18 = or %13, %17
%19 = add %1, 16:i32
%20 = ult %2, %19
blockpc %0 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1
%23 = ult 16777215:i32, %4
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26 = eq %5, 0:i32
%27:i32 = zext %26
%28 = eq %27, 0:i32
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %25 1
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %18


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32 (hasExternalUses)
%6 = block 2
%7:i32 = var
%8 = and %7, 7:i32
%9 = phi %6, 0:i32, %8
%10 = add %5, %9 (hasExternalUses)
%11 = phi %0, %1, %10
%12 = sub %11, %1 (hasExternalUses)
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = add %13, 1048320:i32
%15 = lshr %14, 16:i32
%16 = and %15, 8:i32 (hasExternalUses)
%17 = shl %13, %16
%18 = add %17, 520192:i32
%19 = lshr %18, 16:i32
%20 = and %19, 4:i32 (hasExternalUses)
%21 = shl %17, %20
%22 = add %21, 245760:i32
%23 = lshr %22, 16:i32
%24 = and %23, 2:i32 (hasExternalUses)
%25 = shl %21, %24
%26 = add %1, 16:i32
%27 = ult %10, %26
blockpc %0 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %0 1 %29 1
%30:i32 = var
blockpc %6 0 %30 1
%31:i32 = var
blockpc %6 1 %31 1
%32:i32 = var
%33:i32 = var
%34:i32 = var
%35:i32 = var
%36:i32 = var
pc %32 1
pc %33 1
pc %34 1
pc %35 1
pc %36 1
infer %25


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = sub %3, %1 (hasExternalUses)
%5 = lshr %4, 8:i32 (hasExternalUses)
%6:i32 = var
%7 = lshr %6, 16:i32
%8 = and %7, 8:i32
%9 = shl %5, %8
%10 = add %9, 520192:i32
%11 = lshr %10, 16:i32
%12 = and %11, 4:i32
%13 = or %12, %8
%14 = shl %9, %12 (hasExternalUses)
%15 = add %14, 245760:i32
%16 = lshr %15, 16:i32
%17 = and %16, 2:i32 (hasExternalUses)
%18 = or %13, %17
%19 = sub 14:i32, %18
%20 = add %1, 16:i32
%21 = ult %2, %20
blockpc %0 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %0 1 %23 1
%24 = ult 16777215:i32, %4
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27 = eq %5, 0:i32
%28:i32 = zext %27
%29 = eq %28, 0:i32
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %26 1
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %19


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = add %2, -47:i32 (hasExternalUses)
%4 = block 2
%5:i32 = var
%6 = phi %4, 0:i32, %5
%7 = add %3, %6 (hasExternalUses)
%8 = phi %0, %1, %7
%9 = sub %8, %1 (hasExternalUses)
%10 = lshr %9, 8:i32 (hasExternalUses)
%11 = add %10, 1048320:i32
%12 = lshr %11, 16:i32
%13 = and %12, 8:i32 (hasExternalUses)
%14 = shl %10, %13
%15 = add %14, 520192:i32
%16 = lshr %15, 16:i32
%17 = and %16, 4:i32 (hasExternalUses)
%18 = shl %14, %17
%19 = add %18, 245760:i32
%20 = lshr %19, 16:i32
%21 = and %20, 2:i32 (hasExternalUses)
%22 = shl %18, %21
%23 = lshr %22, 15:i32
%24 = add %1, 16:i32
%25 = ult %7, %24
blockpc %0 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %0 1 %27 1
%28:i32 = var
blockpc %4 0 %28 1
%29:i32 = var
blockpc %4 1 %29 1
%30:i32 = var
%31:i32 = var
%32:i32 = var
%33:i32 = var
%34:i32 = var
pc %30 1
pc %31 1
pc %32 1
pc %33 1
pc %34 1
infer %23


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, 8:i32
%4 = shl %1, %3
%5 = add %4, 520192:i32
%6 = lshr %5, 16:i32
%7 = and %6, 4:i32
%8 = or %7, %3
%9 = shl %4, %7
%10 = add %9, 245760:i32
%11 = lshr %10, 16:i32
%12 = and %11, 2:i32
%13 = or %8, %12
%14 = sub 14:i32, %13
%15 = shl %9, %12
%16 = lshr %15, 15:i32
%17 = add %14, %16
%18 = ult 16777215:i32, %0
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21 = eq %1, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24 = block 2
%25:i32 = var
%26:i32 = var
%27 = add %25, %26
%28 = add %27, -47:i32
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32:i32 = var
%33 = phi %29, 0:i32, %32
%34 = add %28, %33
%35:i32 = var
%36 = ult %34, %35
blockpc %24 0 %36 1
%37:i32 = var
blockpc %24 1 %37 1
%38:i32 = var
%39 = phi %24, %38, %34
%40 = eq %39, %38
%41:i32 = zext %40
%42 = eq %41, 0:i32
%43:i32 = var
%44:i32 = var
pc %20 1
pc %23 1
pc %42 1
pc %43 1
pc %44 1
infer %17


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3 = add %2, 520192:i32
%4 = lshr %3, 16:i32
%5 = and %4, 4:i32
%6 = or %5, %1
%7 = shl %2, %5
%8 = add %7, 245760:i32
%9 = lshr %8, 16:i32
%10 = and %9, 2:i32
%11 = or %6, %10
%12 = sub 14:i32, %11
%13 = shl %7, %10
%14 = lshr %13, 15:i32
%15 = add %12, %14 (hasExternalUses)
%16 = add %15, 7:i32
%17 = block 2
%18:i32 = var
%19 = add %18, -47:i32
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23:i32 = var
%24 = phi %20, 0:i32, %23
%25 = add %19, %24
%26:i32 = var
%27 = add %26, 16:i32
%28 = ult %25, %27
blockpc %17 0 %28 1
%29:i32 = var
blockpc %17 1 %29 1
%30 = phi %17, %26, %25
%31 = sub %30, %26
%32 = ult 16777215:i32, %31
%33:i32 = zext %32
%34 = eq %33, 0:i32
%35:i32 = var
%36:i32 = var
%37:i32 = var
%38:i32 = var
pc %34 1
pc %35 1
pc %36 1
pc %37 1
pc %38 1
infer %16


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14:i32 = var
%15 = add %14, 520192:i32
%16 = lshr %15, 16:i32
%17 = and %16, 4:i32
%18:i32 = var
%19 = add %18, 1048320:i32
%20 = lshr %19, 16:i32
%21 = and %20, 8:i32 (hasExternalUses)
%22 = or %17, %21
%23 = shl %14, %17
%24 = add %23, 245760:i32
%25 = lshr %24, 16:i32
%26 = and %25, 2:i32
%27 = or %22, %26
%28 = sub 14:i32, %27
%29 = shl %23, %26
%30 = lshr %29, 15:i32
%31 = add %28, %30 (hasExternalUses)
%32 = add %31, 7:i32
%33 = lshr %13, %32
%34:i32 = var
blockpc %0 0 %34 1
%35:i32 = var
blockpc %0 1 %35 1
%36:i32 = var
blockpc %6 0 %36 1
%37:i32 = var
blockpc %6 1 %37 1
%38:i32 = var
%39:i32 = var
%40:i32 = var
%41:i32 = var
%42:i32 = var
pc %38 1
pc %39 1
pc %40 1
pc %41 1
pc %42 1
infer %33


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14:i32 = var
%15 = lshr %14, 16:i32
%16 = and %15, 4:i32 (hasExternalUses)
%17:i32 = var
%18 = lshr %17, 16:i32
%19 = and %18, 8:i32 (hasExternalUses)
%20 = or %16, %19
%21:i32 = var
%22 = add %21, 245760:i32
%23 = lshr %22, 16:i32
%24 = and %23, 2:i32
%25 = or %20, %24
%26 = sub 14:i32, %25
%27 = shl %21, %24
%28 = lshr %27, 15:i32
%29 = add %26, %28 (hasExternalUses)
%30 = add %29, 7:i32
%31 = lshr %13, %30
%32 = and %31, 1:i32
%33:i32 = var
blockpc %0 0 %33 1
%34:i32 = var
blockpc %0 1 %34 1
%35:i32 = var
blockpc %6 0 %35 1
%36:i32 = var
blockpc %6 1 %36 1
%37:i32 = var
%38:i32 = var
%39:i32 = var
%40:i32 = var
%41:i32 = var
pc %37 1
pc %38 1
pc %39 1
pc %40 1
pc %41 1
infer %32


; start LHS (in $38)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3 = add %2, 520192:i32
%4 = lshr %3, 16:i32
%5 = and %4, 4:i32
%6 = or %5, %1
%7 = shl %2, %5
%8 = add %7, 245760:i32
%9 = lshr %8, 16:i32
%10 = and %9, 2:i32
%11 = or %6, %10
%12 = sub 14:i32, %11
%13 = shl %7, %10
%14 = lshr %13, 15:i32
%15 = add %12, %14 (hasExternalUses)
%16 = shl %15, 1:i32
%17 = block 2
%18:i32 = var
%19 = add %18, -47:i32
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23:i32 = var
%24 = phi %20, 0:i32, %23
%25 = add %19, %24
%26:i32 = var
%27 = add %26, 16:i32
%28 = ult %25, %27
blockpc %17 0 %28 1
%29:i32 = var
blockpc %17 1 %29 1
%30 = phi %17, %26, %25
%31 = sub %30, %26
%32 = ult 16777215:i32, %31
%33:i32 = zext %32
%34 = eq %33, 0:i32
%35:i32 = var
%36:i32 = var
%37:i32 = var
%38:i32 = var
pc %34 1
pc %35 1
pc %36 1
pc %37 1
pc %38 1
infer %16


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32 (hasExternalUses)
%6 = block 2
%7:i32 = var
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14:i32 = var
%15 = and %14, 4:i32
%16:i32 = var
%17 = and %16, 8:i32
%18 = or %15, %17
%19:i32 = var
%20 = lshr %19, 16:i32
%21 = and %20, 2:i32
%22 = or %18, %21
%23 = sub 14:i32, %22
%24:i32 = var
%25 = shl %24, %17 (hasExternalUses)
%26 = shl %25, %15 (hasExternalUses)
%27 = shl %26, %21
%28 = lshr %27, 15:i32
%29 = add %23, %28 (hasExternalUses)
%30 = add %29, 7:i32
%31 = lshr %13, %30
%32 = and %31, 1:i32
%33:i32 = var
%34 = or %32, %33
%35:i32 = var
blockpc %0 0 %35 1
%36:i32 = var
blockpc %0 1 %36 1
%37:i32 = var
blockpc %6 0 %37 1
%38:i32 = var
blockpc %6 1 %38 1
%39:i32 = var
%40:i32 = var
%41:i32 = var
%42:i32 = var
%43:i32 = var
pc %39 1
pc %40 1
pc %41 1
pc %42 1
pc %43 1
infer %34


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, 0:i32, %6
%8 = add %4, %7 (hasExternalUses)
%9 = phi %2, %3, %8
%10 = sub %9, %3 (hasExternalUses)
%11:i32 = var
%12 = sub 14:i32, %11
%13:i32 = var
%14 = lshr %13, 15:i32
%15 = add %12, %14
%16 = add %15, 7:i32
%17 = lshr %10, %16
%18 = and %17, 1:i32
%19 = shl %15, 1:i32
%20 = or %18, %19 (hasExternalUses)
%21 = phi %1, 31:i32, %20
%22 = phi %0, 0:i32, %21
%23 = shl %22, 2:i32
%24 = lshr %10, 8:i32
%25 = eq %24, 0:i32
blockpc %0 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %0 1 %27 1
%28:i32 = var
blockpc %1 0 %28 1
%29:i32 = var
blockpc %1 1 %29 1
%30:i32 = var
blockpc %2 0 %30 1
%31:i32 = var
blockpc %2 1 %31 1
%32:i32 = var
blockpc %5 0 %32 1
%33:i32 = var
blockpc %5 1 %33 1
%34:i32 = var
%35:i32 = var
%36:i32 = var
pc %34 1
pc %35 1
pc %36 1
infer %23


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = sub %5, %3 (hasExternalUses)
%7:i32 = var
%8:i32 = var
%9 = add %7, %8
%10 = add %9, 7:i32
%11 = lshr %6, %10
%12 = and %11, 1:i32
%13 = shl %9, 1:i32
%14 = or %12, %13 (hasExternalUses)
%15 = phi %1, 31:i32, %14
%16 = phi %0, 0:i32, %15
%17 = shl %16, 2:i32
%18 = add 3408:i32, %17
%19 = lshr %6, 8:i32
%20 = eq %19, 0:i32
blockpc %0 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1
%23 = ult 16777215:i32, %6
blockpc %1 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %1 1 %25 1
%26:i32 = var
blockpc %2 0 %26 1
%27:i32 = var
blockpc %2 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
pc %28 1
pc %29 1
pc %30 1
infer %18


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 28:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %3, %4
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = and %10, 7:i32
%12 = phi %7, 0:i32, %11
%13 = add %6, %12
%14 = add %0, 16:i32
%15 = ult %13, %14
blockpc %2 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %2 1 %17 1
%18 = phi %2, %0, %13
%19 = eq %18, %0
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = eq %0, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 6
%29 = phi %28, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, %29, 145:i32
%37 = phi %30, %29, %36
%38 = phi %25, %29, %37
%39 = eq %38, 145:i32
pc %21 1
pc %24 1
pc %39 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 20:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %3, %4
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = and %10, 7:i32
%12 = phi %7, 0:i32, %11
%13 = add %6, %12
%14 = add %0, 16:i32
%15 = ult %13, %14
blockpc %2 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %2 1 %17 1
%18 = phi %2, %0, %13
%19 = eq %18, %0
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = eq %0, 0:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 6
%29 = phi %28, 145:i32, 145:i32, 145:i32, 145:i32, 145:i32, 143:i32
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33 = block 2
%34:i32 = var
blockpc %33 0 %34 1
%35:i32 = var
blockpc %33 1 %35 1
%36 = phi %33, %29, 145:i32
%37 = phi %30, %29, %36
%38 = phi %25, %29, %37
%39 = eq %38, 145:i32
pc %21 1
pc %24 1
pc %39 1
infer %1


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, 0:i32, %6
%8 = add %4, %7 (hasExternalUses)
%9 = phi %2, %3, %8
%10 = sub %9, %3 (hasExternalUses)
%11:i32 = var
%12 = sub 14:i32, %11
%13:i32 = var
%14 = lshr %13, 15:i32
%15 = add %12, %14
%16 = add %15, 7:i32
%17 = lshr %10, %16
%18 = and %17, 1:i32
%19 = shl %15, 1:i32
%20 = or %18, %19 (hasExternalUses)
%21 = phi %1, 31:i32, %20
%22 = phi %0, 0:i32, %21
%23 = shl 1:i32, %22
%24 = lshr %10, 8:i32
%25 = eq %24, 0:i32
blockpc %0 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %0 1 %27 1
%28:i32 = var
blockpc %1 0 %28 1
%29:i32 = var
blockpc %1 1 %29 1
%30:i32 = var
blockpc %2 0 %30 1
%31:i32 = var
blockpc %2 1 %31 1
%32:i32 = var
blockpc %5 0 %32 1
%33:i32 = var
blockpc %5 1 %33 1
%34:i32 = var
%35:i32 = var
%36:i32 = var
pc %34 1
pc %35 1
pc %36 1
infer %23


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = sub %6, %4 (hasExternalUses)
%8:i32 = var
%9:i32 = var
%10 = add %8, %9
%11 = add %10, 7:i32
%12 = lshr %7, %11
%13 = and %12, 1:i32
%14 = shl %10, 1:i32
%15 = or %13, %14 (hasExternalUses)
%16 = phi %2, 31:i32, %15
%17 = phi %1, 0:i32, %16
%18 = shl 1:i32, %17 (hasExternalUses)
%19 = and %0, %18
%20 = lshr %7, 8:i32
%21 = eq %20, 0:i32
blockpc %1 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %1 1 %23 1
%24 = ult 16777215:i32, %7
blockpc %2 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %2 1 %26 1
%27:i32 = var
blockpc %3 0 %27 1
%28:i32 = var
blockpc %3 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %29 1
pc %30 1
pc %31 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = sub %6, %4 (hasExternalUses)
%8:i32 = var
%9 = add %8, 7:i32
%10 = lshr %7, %9
%11 = and %10, 1:i32
%12 = shl %8, 1:i32
%13 = or %11, %12 (hasExternalUses)
%14 = phi %2, 31:i32, %13
%15 = phi %1, 0:i32, %14
%16 = shl 1:i32, %15 (hasExternalUses)
%17 = and %0, %16
%18 = eq %17, 0:i32
%19 = lshr %7, 8:i32
%20 = eq %19, 0:i32
blockpc %1 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %1 1 %22 1
%23 = ult 16777215:i32, %7
blockpc %2 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %2 1 %25 1
%26:i32 = var
blockpc %3 0 %26 1
%27:i32 = var
blockpc %3 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
pc %28 1
pc %29 1
pc %30 1
infer %18


; start LHS (in $38)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = phi %3, %4, %5
%7 = sub %6, %4 (hasExternalUses)
%8:i32 = var
%9:i32 = var
%10 = add %8, %9
%11 = add %10, 7:i32
%12 = lshr %7, %11
%13 = and %12, 1:i32
%14 = shl %10, 1:i32
%15 = or %13, %14 (hasExternalUses)
%16 = phi %2, 31:i32, %15
%17 = phi %1, 0:i32, %16
%18 = shl 1:i32, %17 (hasExternalUses)
%19 = or %0, %18
%20 = lshr %7, 8:i32
%21 = eq %20, 0:i32
blockpc %1 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %1 1 %23 1
%24 = ult 16777215:i32, %7
blockpc %2 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %2 1 %26 1
%27:i32 = var
blockpc %3 0 %27 1
%28:i32 = var
blockpc %3 1 %28 1
%29:i32 = var
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %19


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 24:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
blockpc %4 0 %5 1
%6:i32 = var
blockpc %4 1 %6 1
%7:i32 = var
%8 = phi %4, %0, %7
%9 = sub %8, %0
%10 = lshr %9, 8:i32
%11 = eq %10, 0:i32
blockpc %3 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %3 1 %13 1
%14 = block 2
%15 = ult 16777215:i32, %9
blockpc %14 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %14 1 %17 1
%18:i32 = var
%19 = add %18, 7:i32
%20 = lshr %9, %19
%21 = and %20, 1:i32
%22 = shl %18, 1:i32
%23 = or %21, %22
%24 = phi %14, 31:i32, %23
%25 = phi %3, 0:i32, %24
%26 = shl 1:i32, %25
%27 = and %2, %26
%28 = eq %27, 0:i32
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
blockpc %4 0 %5 1
%6:i32 = var
blockpc %4 1 %6 1
%7:i32 = var
%8 = phi %4, %0, %7
%9 = sub %8, %0
%10 = lshr %9, 8:i32
%11 = eq %10, 0:i32
blockpc %3 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %3 1 %13 1
%14 = block 2
%15 = ult 16777215:i32, %9
blockpc %14 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %14 1 %17 1
%18:i32 = var
%19 = add %18, 7:i32
%20 = lshr %9, %19
%21 = and %20, 1:i32
%22 = shl %18, 1:i32
%23 = or %21, %22
%24 = phi %14, 31:i32, %23
%25 = phi %3, 0:i32, %24
%26 = shl 1:i32, %25
%27 = and %2, %26
%28 = eq %27, 0:i32
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
blockpc %4 0 %5 1
%6:i32 = var
blockpc %4 1 %6 1
%7:i32 = var
%8 = phi %4, %0, %7
%9 = sub %8, %0
%10 = lshr %9, 8:i32
%11 = eq %10, 0:i32
blockpc %3 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %3 1 %13 1
%14 = block 2
%15 = ult 16777215:i32, %9
blockpc %14 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %14 1 %17 1
%18:i32 = var
%19 = add %18, 7:i32
%20 = lshr %9, %19
%21 = and %20, 1:i32
%22 = shl %18, 1:i32
%23 = or %21, %22
%24 = phi %14, 31:i32, %23
%25 = phi %3, 0:i32, %24
%26 = shl 1:i32, %25
%27 = and %2, %26
%28 = eq %27, 0:i32
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %3, %4
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = and %10, 7:i32
%12 = phi %7, 0:i32, %11
%13 = add %6, %12
%14:i32 = var
%15 = add %14, 16:i32
%16 = ult %13, %15
blockpc %2 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %2 1 %18 1
%19 = phi %2, %14, %13
%20 = eq %19, %14
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = eq %14, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
pc %22 1
pc %25 1
pc %26 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %3, %4
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = and %10, 7:i32
%12 = phi %7, 0:i32, %11
%13 = add %6, %12
%14:i32 = var
%15 = add %14, 16:i32
%16 = ult %13, %15
blockpc %2 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %2 1 %18 1
%19 = phi %2, %14, %13
%20 = eq %19, %14
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = eq %14, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
pc %22 1
pc %25 1
pc %26 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5:i32 = var
%6 = add %4, %5 (hasExternalUses)
%7 = add %6, -47:i32
%8 = block 2
%9 = add %7, 8:i32 (hasExternalUses)
%10 = sub 0:i32, %9
%11 = and %10, 7:i32
%12 = phi %8, 0:i32, %11
%13 = add %7, %12 (hasExternalUses)
%14 = phi %2, %3, %13
%15 = sub %14, %3 (hasExternalUses)
%16 = eq %1, %15
%17 = add %3, 16:i32
%18 = ult %13, %17
blockpc %2 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %2 1 %20 1
%21 = and %9, 7:i32
%22 = eq %21, 0:i32
blockpc %8 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %8 1 %24 1
%25 = eq %14, %3
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
%29:i32 = var
pc %27 1
pc %28 1
pc %29 1
infer %16


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, 0:i32, %6
%8 = add %4, %7 (hasExternalUses)
%9 = phi %2, %3, %8
%10 = sub %9, %3 (hasExternalUses)
%11:i32 = var
%12 = sub 14:i32, %11
%13:i32 = var
%14 = lshr %13, 15:i32
%15 = add %12, %14
%16 = add %15, 7:i32
%17 = lshr %10, %16
%18 = and %17, 1:i32
%19 = shl %15, 1:i32
%20 = or %18, %19 (hasExternalUses)
%21 = phi %1, 31:i32, %20
%22 = phi %0, 0:i32, %21
%23 = lshr %22, 1:i32
%24 = lshr %10, 8:i32
%25 = eq %24, 0:i32
blockpc %0 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %0 1 %27 1
%28:i32 = var
blockpc %1 0 %28 1
%29:i32 = var
blockpc %1 1 %29 1
%30:i32 = var
blockpc %2 0 %30 1
%31:i32 = var
blockpc %2 1 %31 1
%32:i32 = var
blockpc %5 0 %32 1
%33:i32 = var
blockpc %5 1 %33 1
%34:i32 = var
%35:i32 = var
%36:i32 = var
%37:i32 = var
pc %34 1
pc %35 1
pc %36 1
pc %37 1
infer %23


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = phi %2, %3, %4
%6 = sub %5, %3 (hasExternalUses)
%7:i32 = var
%8:i32 = var
%9 = add %7, %8
%10 = add %9, 7:i32
%11 = lshr %6, %10
%12 = and %11, 1:i32
%13 = shl %9, 1:i32
%14 = or %12, %13 (hasExternalUses)
%15 = phi %1, 31:i32, %14
%16 = phi %0, 0:i32, %15
%17 = lshr %16, 1:i32
%18 = sub 25:i32, %17
%19 = lshr %6, 8:i32
%20 = eq %19, 0:i32
blockpc %0 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1
%23 = ult 16777215:i32, %6
blockpc %1 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %1 1 %25 1
%26:i32 = var
blockpc %2 0 %26 1
%27:i32 = var
blockpc %2 1 %27 1
%28:i32 = var
%29:i32 = var
%30:i32 = var
%31:i32 = var
pc %28 1
pc %29 1
pc %30 1
pc %31 1
infer %18


; start LHS (in $38)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, 0:i32, %6
%8 = add %4, %7 (hasExternalUses)
%9 = phi %2, %3, %8
%10 = sub %9, %3 (hasExternalUses)
%11:i32 = var
%12 = sub 14:i32, %11
%13:i32 = var
%14 = lshr %13, 15:i32
%15 = add %12, %14
%16 = add %15, 7:i32
%17 = lshr %10, %16
%18 = and %17, 1:i32
%19 = shl %15, 1:i32
%20 = or %18, %19 (hasExternalUses)
%21 = phi %1, 31:i32, %20
%22 = phi %0, 0:i32, %21
%23 = eq %22, 31:i32
%24 = lshr %10, 8:i32
%25 = eq %24, 0:i32
blockpc %0 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %0 1 %27 1
%28:i32 = var
blockpc %1 0 %28 1
%29:i32 = var
blockpc %1 1 %29 1
%30:i32 = var
blockpc %2 0 %30 1
%31:i32 = var
blockpc %2 1 %31 1
%32:i32 = var
blockpc %5 0 %32 1
%33:i32 = var
blockpc %5 1 %33 1
%34:i32 = var
%35:i32 = var
%36:i32 = var
%37:i32 = var
pc %34 1
pc %35 1
pc %36 1
pc %37 1
infer %23


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4 = add %2, %3 (hasExternalUses)
%5 = add %4, -47:i32
%6 = block 2
%7 = add %5, 8:i32 (hasExternalUses)
%8 = sub 0:i32, %7
%9 = and %8, 7:i32
%10 = phi %6, 0:i32, %9
%11 = add %5, %10 (hasExternalUses)
%12 = phi %0, %1, %11
%13 = sub %12, %1 (hasExternalUses)
%14 = block 2
%15 = block 2
%16 = block 2
%17:i32 = var
%18 = lshr %13, %17
%19 = and %18, 1:i32
%20:i32 = var
%21:i32 = var
%22 = add %20, %21 (hasExternalUses)
%23 = shl %22, 1:i32
%24 = or %19, %23 (hasExternalUses)
%25 = phi %16, 31:i32, %24
%26 = phi %15, 0:i32, %25
%27 = lshr %26, 1:i32
%28 = sub 25:i32, %27
%29 = phi %14, 0:i32, %28
%30 = shl %13, %29
%31:i32 = var
blockpc %0 0 %31 1
%32:i32 = var
blockpc %0 1 %32 1
%33:i32 = var
blockpc %6 0 %33 1
%34:i32 = var
blockpc %6 1 %34 1
%35:i32 = var
blockpc %14 0 %35 1
%36:i32 = var
blockpc %14 1 %36 1
%37:i32 = var
blockpc %15 0 %37 1
%38:i32 = var
blockpc %15 1 %38 1
%39:i32 = var
blockpc %16 0 %39 1
%40:i32 = var
blockpc %16 1 %40 1
%41:i32 = var
%42:i32 = var
%43:i32 = var
%44:i32 = var
pc %41 1
pc %42 1
pc %43 1
pc %44 1
infer %30


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = phi %7, 0:i32, %10
%12 = add %6, %11
%13:i32 = var
%14 = add %13, 16:i32
%15 = ult %12, %14
blockpc %4 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %4 1 %17 1
%18 = phi %4, %13, %12
%19 = sub %18, %13
%20 = eq %3, %19
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = eq %18, %13
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27:i32 = var
pc %22 1
pc %25 1
pc %26 1
pc %27 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 31:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = phi %7, 0:i32, %10
%12 = add %6, %11
%13:i32 = var
%14 = add %13, 16:i32
%15 = ult %12, %14
blockpc %4 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %4 1 %17 1
%18 = phi %4, %13, %12
%19 = sub %18, %13
%20 = eq %3, %19
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = eq %18, %13
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27:i32 = var
pc %22 1
pc %25 1
pc %26 1
pc %27 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = lshr %0, 31:i32
%2 = shl %1, 2:i32
%3:i32 = var
%4 = and %3, -8:i32
%5 = block 2
%6:i32 = var
%7 = add %6, -47:i32
%8 = block 2
%9:i32 = var
blockpc %8 0 %9 1
%10:i32 = var
blockpc %8 1 %10 1
%11:i32 = var
%12 = phi %8, 0:i32, %11
%13 = add %7, %12
%14:i32 = var
%15 = add %14, 16:i32
%16 = ult %13, %15
blockpc %5 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %5 1 %18 1
%19 = phi %5, %14, %13
%20 = sub %19, %14
%21 = eq %4, %20
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24 = eq %19, %14
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
%28:i32 = var
pc %23 1
pc %26 1
pc %27 1
pc %28 1
infer %2


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = lshr %2, 31:i32
%4 = shl %3, 2:i32
%5 = add %1, %4
%6:i32 = var
%7 = and %6, -8:i32
%8 = block 2
%9:i32 = var
%10 = add %9, -47:i32
%11 = block 2
%12:i32 = var
blockpc %11 0 %12 1
%13:i32 = var
blockpc %11 1 %13 1
%14:i32 = var
%15 = phi %11, 0:i32, %14
%16 = add %10, %15
%17:i32 = var
%18 = add %17, 16:i32
%19 = ult %16, %18
blockpc %8 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %8 1 %21 1
%22 = phi %8, %17, %16
%23 = sub %22, %17
%24 = eq %7, %23
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
%28:i32 = var
%29:i32 = var
pc %26 1
pc %27 1
pc %28 1
pc %29 1
infer %5


; start LHS (in $38)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = phi %7, 0:i32, %10
%12 = add %6, %11
%13:i32 = var
%14 = add %13, 16:i32
%15 = ult %12, %14
blockpc %4 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %4 1 %17 1
%18 = phi %4, %13, %12
%19 = sub %18, %13
%20 = eq %3, %19
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = eq %18, %13
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27:i32 = var
pc %22 1
pc %25 1
pc %26 1
pc %27 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = shl %0, 1:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = phi %7, 0:i32, %10
%12 = add %6, %11
%13:i32 = var
%14 = add %13, 16:i32
%15 = ult %12, %14
blockpc %4 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %4 1 %17 1
%18 = phi %4, %13, %12
%19 = sub %18, %13
%20 = eq %3, %19
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = eq %18, %13
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27:i32 = var
pc %22 1
pc %25 1
pc %26 1
pc %27 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = phi %7, 0:i32, %10
%12 = add %6, %11
%13:i32 = var
%14 = add %13, 16:i32
%15 = ult %12, %14
blockpc %4 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %4 1 %17 1
%18 = phi %4, %13, %12
%19 = sub %18, %13
%20 = eq %3, %19
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = eq %18, %13
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27:i32 = var
pc %22 1
pc %25 1
pc %26 1
pc %27 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = phi %7, 0:i32, %10
%12 = add %6, %11
%13:i32 = var
%14 = add %13, 16:i32
%15 = ult %12, %14
blockpc %4 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %4 1 %17 1
%18 = phi %4, %13, %12
%19 = sub %18, %13
%20 = eq %3, %19
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = eq %18, %13
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27:i32 = var
pc %22 1
pc %25 1
pc %26 1
pc %27 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5:i32 = var
%6 = add %4, %5 (hasExternalUses)
%7 = add %6, -47:i32
%8 = block 2
%9 = add %7, 8:i32 (hasExternalUses)
%10 = sub 0:i32, %9
%11 = and %10, 7:i32
%12 = phi %8, 0:i32, %11
%13 = add %7, %12 (hasExternalUses)
%14 = phi %2, %3, %13
%15 = sub %14, %3 (hasExternalUses)
%16 = eq %1, %15
%17 = add %3, 16:i32
%18 = ult %13, %17
blockpc %2 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %2 1 %20 1
%21 = and %9, 7:i32
%22 = eq %21, 0:i32
blockpc %8 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %8 1 %24 1
%25:i32 = var
%26 = and %25, -8:i32
%27 = eq %26, %15
%28:i32 = zext %27
%29 = eq %28, 0:i32
%30:i32 = var
%31:i32 = var
%32:i32 = var
pc %29 1
pc %30 1
pc %31 1
pc %32 1
infer %16


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 24:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = phi %7, 0:i32, %10
%12 = add %6, %11
%13 = add %0, 16:i32
%14 = ult %12, %13
blockpc %4 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %4 1 %16 1
%17 = phi %4, %0, %12
%18 = sub %17, %0
%19 = eq %3, %18
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = eq %17, %0
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = eq %0, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %21 1
pc %24 1
pc %27 1
pc %28 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = phi %7, 0:i32, %10
%12 = add %6, %11
%13 = add %0, 16:i32
%14 = ult %12, %13
blockpc %4 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %4 1 %16 1
%17 = phi %4, %0, %12
%18 = sub %17, %0
%19 = eq %3, %18
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = eq %17, %0
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = eq %0, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %21 1
pc %24 1
pc %27 1
pc %28 1
infer %1


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = phi %7, 0:i32, %10
%12 = add %6, %11
%13 = add %0, 16:i32
%14 = ult %12, %13
blockpc %4 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %4 1 %16 1
%17 = phi %4, %0, %12
%18 = sub %17, %0
%19 = eq %3, %18
%20:i32 = zext %19
%21 = eq %20, 0:i32
%22 = eq %17, %0
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = eq %0, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %21 1
pc %24 1
pc %27 1
pc %28 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = add %3, 8:i32
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = add %6, %7
%9 = add %8, -47:i32
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14 = and %13, 7:i32
%15 = phi %10, 0:i32, %14
%16 = add %9, %15
%17:i32 = var
%18 = add %17, 16:i32
%19 = ult %16, %18
blockpc %5 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %5 1 %21 1
%22 = phi %5, %17, %16
%23 = eq %22, %17
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27:i32 = var
pc %25 1
pc %26 1
pc %27 1
infer %4


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 12:i32
%2 = block 2
%3:i32 = var
%4:i32 = var
%5 = add %3, %4
%6 = add %5, -47:i32
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = and %10, 7:i32
%12 = phi %7, 0:i32, %11
%13 = add %6, %12
%14:i32 = var
%15 = add %14, 16:i32
%16 = ult %13, %15
blockpc %2 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %2 1 %18 1
%19 = phi %2, %14, %13
%20 = eq %19, %14
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = eq %14, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
pc %22 1
pc %25 1
pc %26 1
infer %1


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = add %3, 8:i32
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = add %6, %7
%9 = add %8, -47:i32
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14 = and %13, 7:i32
%15 = phi %10, 0:i32, %14
%16 = add %9, %15
%17 = add %2, 16:i32
%18 = ult %16, %17
blockpc %5 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %5 1 %20 1
%21 = phi %5, %2, %16
%22 = eq %21, %2
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = eq %2, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %24 1
pc %27 1
pc %28 1
infer %4


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = add %3, 12:i32
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = add %6, %7
%9 = add %8, -47:i32
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14 = and %13, 7:i32
%15 = phi %10, 0:i32, %14
%16 = add %9, %15
%17 = add %2, 16:i32
%18 = ult %16, %17
blockpc %5 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %5 1 %20 1
%21 = phi %5, %2, %16
%22 = eq %21, %2
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = eq %2, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %24 1
pc %27 1
pc %28 1
infer %4


; start LHS (in $38)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = add %3, 24:i32
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = add %6, %7
%9 = add %8, -47:i32
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14 = and %13, 7:i32
%15 = phi %10, 0:i32, %14
%16 = add %9, %15
%17 = add %2, 16:i32
%18 = ult %16, %17
blockpc %5 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %5 1 %20 1
%21 = phi %5, %2, %16
%22 = eq %21, %2
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = eq %2, 0:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %24 1
pc %27 1
pc %28 1
infer %4


; start LHS (in $38)
%0 = block 5
%1 = block 6
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %5, 11:i32 (hasExternalUses)
%7 = and %6, -8:i32 (hasExternalUses)
%8 = phi %3, %4, %7
%9 = block 2
%10 = block 2
%11 = add %5, 11:i32
%12 = and %11, -8:i32 (hasExternalUses)
%13 = phi %10, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %7, %8
%17 = phi %14, -1:i32, %16
%18 = phi %9, %13, %17
%19 = phi %2, %8, %18
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, %19
%23 = block 2
%24 = phi %23, %22, %19
%25 = phi %1, %19, %22, %22, %22, %22, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %0, %25, %25, %25, %25, %32
%34:i32 = var
%35 = ult %33, %34
%36:i32 = var
blockpc %9 0 %36 1
%37:i32 = var
blockpc %9 1 %37 1
%38:i32 = var
blockpc %10 0 %38 1
%39:i32 = var
blockpc %10 1 %39 1
%40:i32 = var
blockpc %14 0 %40 1
%41:i32 = var
blockpc %14 1 %41 1
%42:i32 = var
blockpc %15 0 %42 1
%43:i32 = var
blockpc %15 1 %43 1
%44:i32 = var
blockpc %23 0 %44 1
%45:i32 = var
blockpc %23 1 %45 1
%46:i32 = var
blockpc %26 0 %46 1
%47:i32 = var
blockpc %26 1 %47 1
%48:i32 = var
blockpc %27 0 %48 1
%49:i32 = var
blockpc %27 1 %49 1
%50:i32 = var
pc %50 1
infer %35


; start LHS (in $38)
%0:i32 = var
%1 = block 5
%2 = block 6
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32 (hasExternalUses)
%8 = and %7, -8:i32 (hasExternalUses)
%9 = phi %4, %5, %8
%10 = block 2
%11 = block 2
%12 = add %6, 11:i32
%13 = and %12, -8:i32 (hasExternalUses)
%14 = phi %11, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %8, %9
%18 = phi %15, -1:i32, %17
%19 = phi %10, %14, %18
%20 = phi %3, %9, %19
%21 = block 2
%22:i32 = var
%23 = phi %21, %22, %20
%24 = block 2
%25 = phi %24, %23, %20
%26 = phi %2, %20, %23, %23, %23, %23, %25
%27 = block 2
%28 = block 2
%29 = block 2
%30:i32 = var
%31 = phi %29, %30, %26
%32 = phi %28, %26, %31
%33 = phi %27, %26, %32
%34 = phi %1, %26, %26, %26, %26, %33
%35 = sub %0, %34
%36:i32 = var
blockpc %10 0 %36 1
%37:i32 = var
blockpc %10 1 %37 1
%38:i32 = var
blockpc %11 0 %38 1
%39:i32 = var
blockpc %11 1 %39 1
%40:i32 = var
blockpc %15 0 %40 1
%41:i32 = var
blockpc %15 1 %41 1
%42:i32 = var
blockpc %16 0 %42 1
%43:i32 = var
blockpc %16 1 %43 1
%44:i32 = var
blockpc %24 0 %44 1
%45:i32 = var
blockpc %24 1 %45 1
%46:i32 = var
blockpc %27 0 %46 1
%47:i32 = var
blockpc %27 1 %47 1
%48:i32 = var
blockpc %28 0 %48 1
%49:i32 = var
blockpc %28 1 %49 1
%50:i32 = var
%51:i32 = var
pc %50 1
pc %51 1
infer %35


; start LHS (in $38)
%0:i32 = var
%1 = block 5
%2 = block 6
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32 (hasExternalUses)
%8 = and %7, -8:i32 (hasExternalUses)
%9 = phi %4, %5, %8
%10 = block 2
%11 = block 2
%12 = add %6, 11:i32
%13 = and %12, -8:i32 (hasExternalUses)
%14 = phi %11, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %8, %9
%18 = phi %15, -1:i32, %17
%19 = phi %10, %14, %18
%20 = phi %3, %9, %19
%21 = block 2
%22:i32 = var
%23 = phi %21, %22, %20
%24 = block 2
%25 = phi %24, %23, %20
%26 = phi %2, %20, %23, %23, %23, %23, %25
%27 = block 2
%28 = block 2
%29 = block 2
%30:i32 = var
%31 = phi %29, %30, %26
%32 = phi %28, %26, %31
%33 = phi %27, %26, %32
%34 = phi %1, %26, %26, %26, %26, %33
%35 = add %0, %34
%36:i32 = var
blockpc %10 0 %36 1
%37:i32 = var
blockpc %10 1 %37 1
%38:i32 = var
blockpc %11 0 %38 1
%39:i32 = var
blockpc %11 1 %39 1
%40:i32 = var
blockpc %15 0 %40 1
%41:i32 = var
blockpc %15 1 %41 1
%42:i32 = var
blockpc %16 0 %42 1
%43:i32 = var
blockpc %16 1 %43 1
%44:i32 = var
blockpc %24 0 %44 1
%45:i32 = var
blockpc %24 1 %45 1
%46:i32 = var
blockpc %27 0 %46 1
%47:i32 = var
blockpc %27 1 %47 1
%48:i32 = var
blockpc %28 0 %48 1
%49:i32 = var
blockpc %28 1 %49 1
%50:i32 = var
%51:i32 = var
pc %50 1
pc %51 1
infer %35


; start LHS (in $38)
%0:i32 = var
%1 = block 5
%2 = block 6
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32 (hasExternalUses)
%8 = and %7, -8:i32 (hasExternalUses)
%9 = phi %4, %5, %8
%10 = block 2
%11 = block 2
%12 = add %6, 11:i32
%13 = and %12, -8:i32 (hasExternalUses)
%14 = phi %11, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %8, %9
%18 = phi %15, -1:i32, %17
%19 = phi %10, %14, %18
%20 = phi %3, %9, %19
%21 = block 2
%22:i32 = var
%23 = phi %21, %22, %20
%24 = block 2
%25 = phi %24, %23, %20
%26 = phi %2, %20, %23, %23, %23, %23, %25
%27 = block 2
%28 = block 2
%29 = block 2
%30:i32 = var
%31 = phi %29, %30, %26
%32 = phi %28, %26, %31
%33 = phi %27, %26, %32
%34 = phi %1, %26, %26, %26, %26, %33
%35 = add %0, %34 (hasExternalUses)
%36 = add %35, 4:i32
%37:i32 = var
blockpc %10 0 %37 1
%38:i32 = var
blockpc %10 1 %38 1
%39:i32 = var
blockpc %11 0 %39 1
%40:i32 = var
blockpc %11 1 %40 1
%41:i32 = var
blockpc %15 0 %41 1
%42:i32 = var
blockpc %15 1 %42 1
%43:i32 = var
blockpc %16 0 %43 1
%44:i32 = var
blockpc %16 1 %44 1
%45:i32 = var
blockpc %24 0 %45 1
%46:i32 = var
blockpc %24 1 %46 1
%47:i32 = var
blockpc %27 0 %47 1
%48:i32 = var
blockpc %27 1 %48 1
%49:i32 = var
blockpc %28 0 %49 1
%50:i32 = var
blockpc %28 1 %50 1
%51:i32 = var
%52:i32 = var
pc %51 1
pc %52 1
infer %36


; start LHS (in $38)
%0:i32 = var
%1 = block 5
%2 = block 6
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, 11:i32 (hasExternalUses)
%8 = and %7, -8:i32 (hasExternalUses)
%9 = phi %4, %5, %8
%10 = block 2
%11 = block 2
%12 = add %6, 11:i32
%13 = and %12, -8:i32 (hasExternalUses)
%14 = phi %11, 16:i32, %13
%15 = block 2
%16 = block 2
%17 = phi %16, %8, %9
%18 = phi %15, -1:i32, %17
%19 = phi %10, %14, %18
%20 = phi %3, %9, %19
%21 = block 2
%22:i32 = var
%23 = phi %21, %22, %20
%24 = block 2
%25 = phi %24, %23, %20
%26 = phi %2, %20, %23, %23, %23, %23, %25
%27 = block 2
%28 = block 2
%29 = block 2
%30:i32 = var
%31 = phi %29, %30, %26
%32 = phi %28, %26, %31
%33 = phi %27, %26, %32
%34 = phi %1, %26, %26, %26, %26, %33
%35 = sub %0, %34 (hasExternalUses)
%36 = or %35, 1:i32
%37:i32 = var
blockpc %10 0 %37 1
%38:i32 = var
blockpc %10 1 %38 1
%39:i32 = var
blockpc %11 0 %39 1
%40:i32 = var
blockpc %11 1 %40 1
%41:i32 = var
blockpc %15 0 %41 1
%42:i32 = var
blockpc %15 1 %42 1
%43:i32 = var
blockpc %16 0 %43 1
%44:i32 = var
blockpc %16 1 %44 1
%45:i32 = var
blockpc %24 0 %45 1
%46:i32 = var
blockpc %24 1 %46 1
%47:i32 = var
blockpc %27 0 %47 1
%48:i32 = var
blockpc %27 1 %48 1
%49:i32 = var
blockpc %28 0 %49 1
%50:i32 = var
blockpc %28 1 %50 1
%51:i32 = var
%52:i32 = var
pc %51 1
pc %52 1
infer %36


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 4:i32
%2 = block 5
%3 = block 6
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = add %7, 11:i32
%9 = and %8, -8:i32
%10 = phi %5, %6, %9
%11 = block 2
%12 = ult %7, 245:i32
blockpc %11 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %11 1 %14 1
%15 = block 2
%16 = ult %7, 11:i32
blockpc %15 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %15 1 %18 1
%19 = add %7, 11:i32
%20 = and %19, -8:i32
%21 = phi %15, 16:i32, %20
%22 = block 2
%23 = ult -65:i32, %7
blockpc %22 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %22 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = phi %26, %9, %10
%30 = phi %22, -1:i32, %29
%31 = phi %11, %21, %30
%32 = phi %4, %10, %31
%33 = block 2
%34:i32 = var
%35 = phi %33, %34, %32
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = phi %36, %35, %32
%40 = phi %3, %32, %35, %35, %35, %35, %39
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
%49 = phi %47, %48, %40
%50 = phi %44, %40, %49
%51 = phi %41, %40, %50
%52 = phi %2, %40, %40, %40, %40, %51
%53:i32 = var
%54 = ult %52, %53
%55:i32 = var
pc %54 1
pc %55 1
infer %1


; start LHS (in $38)
%0 = block 5
%1 = block 6
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %5, 11:i32 (hasExternalUses)
%7 = and %6, -8:i32 (hasExternalUses)
%8 = phi %3, %4, %7
%9 = block 2
%10 = block 2
%11 = add %5, 11:i32
%12 = and %11, -8:i32 (hasExternalUses)
%13 = phi %10, 16:i32, %12
%14 = block 2
%15 = block 2
%16 = phi %15, %7, %8
%17 = phi %14, -1:i32, %16
%18 = phi %9, %13, %17
%19 = phi %2, %8, %18
%20 = block 2
%21:i32 = var
%22 = phi %20, %21, %19
%23 = block 2
%24 = phi %23, %22, %19
%25 = phi %1, %19, %22, %22, %22, %22, %24
%26 = block 2
%27 = block 2
%28 = block 2
%29:i32 = var
%30 = phi %28, %29, %25
%31 = phi %27, %25, %30
%32 = phi %26, %25, %31
%33 = phi %0, %25, %25, %25, %25, %32
%34 = or %33, 3:i32
%35:i32 = var
blockpc %9 0 %35 1
%36:i32 = var
blockpc %9 1 %36 1
%37:i32 = var
blockpc %10 0 %37 1
%38:i32 = var
blockpc %10 1 %38 1
%39:i32 = var
blockpc %14 0 %39 1
%40:i32 = var
blockpc %14 1 %40 1
%41:i32 = var
blockpc %15 0 %41 1
%42:i32 = var
blockpc %15 1 %42 1
%43:i32 = var
blockpc %23 0 %43 1
%44:i32 = var
blockpc %23 1 %44 1
%45:i32 = var
blockpc %26 0 %45 1
%46:i32 = var
blockpc %26 1 %46 1
%47:i32 = var
blockpc %27 0 %47 1
%48:i32 = var
blockpc %27 1 %48 1
%49:i32 = var
%50:i32 = var
pc %49 1
pc %50 1
infer %34


; start LHS (in $38)
%0:i32 = var
%1 = add %0, 8:i32
%2 = block 5
%3 = block 6
%4 = block 2
%5 = block 2
%6:i32 = var
%7:i32 = var
%8 = add %7, 11:i32
%9 = and %8, -8:i32
%10 = phi %5, %6, %9
%11 = block 2
%12 = ult %7, 245:i32
blockpc %11 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %11 1 %14 1
%15 = block 2
%16 = ult %7, 11:i32
blockpc %15 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %15 1 %18 1
%19 = add %7, 11:i32
%20 = and %19, -8:i32
%21 = phi %15, 16:i32, %20
%22 = block 2
%23 = ult -65:i32, %7
blockpc %22 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %22 1 %25 1
%26 = block 2
%27:i32 = var
blockpc %26 0 %27 1
%28:i32 = var
blockpc %26 1 %28 1
%29 = phi %26, %9, %10
%30 = phi %22, -1:i32, %29
%31 = phi %11, %21, %30
%32 = phi %4, %10, %31
%33 = block 2
%34:i32 = var
%35 = phi %33, %34, %32
%36 = block 2
%37:i32 = var
blockpc %36 0 %37 1
%38:i32 = var
blockpc %36 1 %38 1
%39 = phi %36, %35, %32
%40 = phi %3, %32, %35, %35, %35, %35, %39
%41 = block 2
%42:i32 = var
blockpc %41 0 %42 1
%43:i32 = var
blockpc %41 1 %43 1
%44 = block 2
%45:i32 = var
blockpc %44 0 %45 1
%46:i32 = var
blockpc %44 1 %46 1
%47 = block 2
%48:i32 = var
%49 = phi %47, %48, %40
%50 = phi %44, %40, %49
%51 = phi %41, %40, %50
%52 = phi %2, %40, %40, %40, %40, %51
%53:i32 = var
%54 = ult %52, %53
%55:i32 = var
pc %54 1
pc %55 1
infer %1


; function: $39

; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -4:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, -8:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 1:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 1:i32
%2 = eq %1, 0:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 3:i32
%2 = and %0, 1:i32
%3 = eq %2, 0:i32
pc %3 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 3:i32
%2 = eq %1, 0:i32
%3 = and %0, 1:i32
%4 = eq %3, 0:i32
pc %4 1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = sub 0:i32, %0
%2:i32 = var
%3 = and %2, 1:i32
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3
%5:i32 = var
%6 = and %5, 1:i32
%7 = eq %6, 0:i32
pc %7 1
infer %4


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = add %0, %2
%4 = and %1, 1:i32
%5 = eq %4, 0:i32
pc %5 1
infer %3


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3 (hasExternalUses)
%5:i32 = var
%6 = ult %4, %5
%7:i32 = var
%8 = and %7, 1:i32
%9 = eq %8, 0:i32
pc %9 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = eq %0, %5
%7:i32 = var
%8 = and %7, 1:i32
%9 = eq %8, 0:i32
pc %9 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 4:i32
%6:i32 = var
%7:i32 = var
%8 = sub 0:i32, %7
%9 = add %1, %8
%10 = eq %6, %9
%11 = and %2, 1:i32
%12 = eq %11, 0:i32
pc %10 1
pc %12 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 3:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = sub 0:i32, %5
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = var
%10 = and %9, 1:i32
%11 = eq %10, 0:i32
pc %8 1
pc %11 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 3:i32
%2 = eq %1, 3:i32
%3:i32 = var
%4:i32 = var
%5 = add %4, -8:i32
%6:i32 = var
%7 = sub 0:i32, %6
%8 = add %5, %7
%9 = eq %3, %8
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
pc %9 1
pc %12 1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 3:i32
%2 = eq %1, 3:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6:i32 = var
%7 = add %6, -8:i32
%8:i32 = var
%9 = sub 0:i32, %8
%10 = add %7, %9
%11 = eq %5, %10
%12:i32 = var
%13 = and %12, 1:i32
%14 = eq %13, 0:i32
pc %11 1
pc %14 1
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = and %0, -2:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = sub 0:i32, %5
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = var
%10 = and %9, 1:i32
%11 = eq %10, 0:i32
pc %8 1
pc %11 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 4:i32
%6:i32 = var
%7 = eq %6, %4
%8:i32 = var
%9 = and %8, 1:i32
%10 = eq %9, 0:i32
pc %7 1
pc %10 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = and %1, -8:i32 (hasExternalUses)
%3 = add %0, %2 (hasExternalUses)
%4 = or %3, 1:i32
%5:i32 = var
%6:i32 = var
%7 = add %6, -8:i32
%8 = sub 0:i32, %0
%9 = add %7, %8
%10 = eq %5, %9
%11 = and %1, 1:i32
%12 = eq %11, 0:i32
pc %10 1
pc %12 1
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3 (hasExternalUses)
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %2, %6 (hasExternalUses)
%8 = add %4, %7
%9:i32 = var
%10 = eq %9, %4
%11 = and %5, 1:i32
%12 = eq %11, 0:i32
pc %10 1
pc %12 1
infer %8


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 3:i32
%2:i32 = var
%3 = and %2, 1:i32
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = ult %0, 256:i32
%2:i32 = var
%3 = and %2, 1:i32
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 8:i32
%6 = ult %2, 256:i32
%7:i32 = var
%8 = and %7, 1:i32
%9 = eq %8, 0:i32
pc %6 1
pc %9 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 12:i32
%6 = ult %2, 256:i32
%7:i32 = var
%8 = and %7, 1:i32
%9 = eq %8, 0:i32
pc %6 1
pc %9 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = eq %0, %1
%3:i32 = var
%4 = ult %3, 256:i32
%5:i32 = var
%6 = and %5, 1:i32
%7 = eq %6, 0:i32
pc %4 1
pc %7 1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 3:i32
%2 = shl 1:i32, %1
%3:i32 = var
%4:i32 = var
%5 = eq %3, %4
%6 = ult %0, 256:i32
%7:i32 = var
%8 = and %7, 1:i32
%9 = eq %8, 0:i32
pc %5 1
pc %6 1
pc %9 1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 3:i32
%2 = shl 1:i32, %1
%3 = xor %2, -1:i32
%4:i32 = var
%5:i32 = var
%6 = eq %4, %5
%7 = ult %0, 256:i32
%8:i32 = var
%9 = and %8, 1:i32
%10 = eq %9, 0:i32
pc %6 1
pc %7 1
pc %10 1
infer %3


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = lshr %1, 3:i32
%3 = shl 1:i32, %2
%4 = xor %3, -1:i32
%5 = and %0, %4
%6:i32 = var
%7:i32 = var
%8 = eq %6, %7
%9 = ult %1, 256:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
pc %8 1
pc %9 1
pc %12 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = eq %2, %0
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult %6, 256:i32
%8:i32 = var
%9 = and %8, 1:i32
%10 = eq %9, 0:i32
pc %5 1
pc %7 1
pc %10 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = eq %0, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult %6, 256:i32
%8:i32 = var
%9 = and %8, 1:i32
%10 = eq %9, 0:i32
pc %5 1
pc %7 1
pc %10 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 24:i32
%6:i32 = var
%7 = and %6, 1:i32
%8 = eq %7, 0:i32
pc %8 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 12:i32
%6:i32 = var
%7 = and %6, 1:i32
%8 = eq %7, 0:i32
pc %8 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = eq %0, %5
%7:i32 = var
%8 = and %7, 1:i32
%9 = eq %8, 0:i32
pc %9 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 16:i32
%6:i32 = var
%7 = eq %6, %4
%8:i32 = var
%9 = and %8, 1:i32
%10 = eq %9, 0:i32
pc %7 1
pc %10 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 16:i32 (hasExternalUses)
%6 = add %5, 4:i32
%7:i32 = var
%8 = eq %7, %4
%9:i32 = var
%10 = and %9, 1:i32
%11 = eq %10, 0:i32
pc %8 1
pc %11 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = sub 0:i32, %5
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = var
%10 = and %9, 1:i32
%11 = eq %10, 0:i32
pc %8 1
pc %11 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5:i32 = var
%6 = add %5, -8:i32
%7:i32 = var
%8 = sub 0:i32, %7
%9 = add %6, %8
%10 = eq %4, %9
%11:i32 = var
%12 = and %11, 1:i32
%13 = eq %12, 0:i32
pc %3 1
pc %10 1
pc %13 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = sub 0:i32, %5
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = var
%10 = and %9, 1:i32
%11 = eq %10, 0:i32
pc %8 1
pc %11 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = sub 0:i32, %5
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = var
%10 = and %9, 1:i32
%11 = eq %10, 0:i32
pc %8 1
pc %11 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5:i32 = var
%6 = add %5, -8:i32
%7:i32 = var
%8 = sub 0:i32, %7
%9 = add %6, %8
%10 = eq %4, %9
%11:i32 = var
%12 = and %11, 1:i32
%13 = eq %12, 0:i32
pc %3 1
pc %10 1
pc %13 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5:i32 = var
%6 = add %5, -8:i32
%7:i32 = var
%8 = sub 0:i32, %7
%9 = add %6, %8
%10 = eq %4, %9
%11:i32 = var
%12 = and %11, 1:i32
%13 = eq %12, 0:i32
pc %3 1
pc %10 1
pc %13 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 8:i32
%6:i32 = var
%7 = eq %6, %4
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
pc %9 1
pc %12 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = sub 0:i32, %5
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = and %11, 1:i32
%13 = eq %12, 0:i32
pc %10 1
pc %13 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = add %2, -8:i32
%4:i32 = var
%5 = sub 0:i32, %4
%6 = add %3, %5
%7 = eq %0, %6
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
pc %9 1
pc %12 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = and %2, 1:i32
%4 = eq %3, 0:i32
pc %4 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 28:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
pc %9 1
pc %12 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = shl %0, 2:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = and %6, 1:i32
%8 = eq %7, 0:i32
pc %5 1
pc %8 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = shl %0, 2:i32
%2 = add 3408:i32, %1
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = and %7, 1:i32
%9 = eq %8, 0:i32
pc %6 1
pc %9 1
infer %2


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = eq %0, %5
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = and %11, 1:i32
%13 = eq %12, 0:i32
pc %10 1
pc %13 1
infer %6


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = add %7, -8:i32
%9:i32 = var
%10 = sub 0:i32, %9
%11 = add %8, %10
%12 = eq %3, %11
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15:i32 = var
%16 = eq %15, %11
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = and %21, 1:i32
%23 = eq %22, 0:i32
pc %16 1
pc %20 1
pc %23 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = shl 1:i32, %0
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %5, -8:i32
%7:i32 = var
%8 = sub 0:i32, %7
%9 = add %6, %8
%10 = eq %4, %9
blockpc %3 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %3 1 %12 1
%13:i32 = var
%14 = phi %3, %13, %4
%15 = phi %2, 0:i32, %14
%16 = eq %15, 0:i32
%17:i32 = var
%18 = eq %17, %9
%19:i32 = var
%20 = eq %19, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = and %23, 1:i32
%25 = eq %24, 0:i32
pc %16 1
pc %18 1
pc %22 1
pc %25 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = shl 1:i32, %0
%2 = xor %1, -1:i32
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, -8:i32
%8:i32 = var
%9 = sub 0:i32, %8
%10 = add %7, %9
%11 = eq %5, %10
blockpc %4 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %4 1 %13 1
%14:i32 = var
%15 = phi %4, %14, %5
%16 = phi %3, 0:i32, %15
%17 = eq %16, 0:i32
%18:i32 = var
%19 = eq %18, %10
%20:i32 = var
%21 = eq %20, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24:i32 = var
%25 = and %24, 1:i32
%26 = eq %25, 0:i32
pc %17 1
pc %19 1
pc %23 1
pc %26 1
infer %2


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = shl 1:i32, %1
%3 = xor %2, -1:i32
%4 = and %0, %3
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = add %8, -8:i32
%10:i32 = var
%11 = sub 0:i32, %10
%12 = add %9, %11
%13 = eq %7, %12
blockpc %6 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %6 1 %15 1
%16:i32 = var
%17 = phi %6, %16, %7
%18 = phi %5, 0:i32, %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = eq %20, %12
%22:i32 = var
%23 = eq %22, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27 = and %26, 1:i32
%28 = eq %27, 0:i32
pc %19 1
pc %21 1
pc %25 1
pc %28 1
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = sub 0:i32, %5
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = eq %0, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14:i32 = var
%15 = and %14, 1:i32
%16 = eq %15, 0:i32
pc %10 1
pc %13 1
pc %16 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = sub 0:i32, %5
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = eq %0, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14:i32 = var
%15 = and %14, 1:i32
%16 = eq %15, 0:i32
pc %10 1
pc %13 1
pc %16 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = eq %0, %5
%7:i32 = var
%8 = eq %7, %5
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = and %15, 1:i32
%17 = eq %16, 0:i32
pc %10 1
pc %14 1
pc %17 1
infer %6


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = add %7, -8:i32
%9:i32 = var
%10 = sub 0:i32, %9
%11 = add %8, %10
%12 = eq %3, %11
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15:i32 = var
%16 = eq %15, %11
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = eq %19, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = and %23, 1:i32
%25 = eq %24, 0:i32
pc %18 1
pc %22 1
pc %25 1
infer %6


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 24:i32
%7:i32 = var
%8 = add %7, -8:i32
%9:i32 = var
%10 = sub 0:i32, %9
%11 = add %8, %10
%12 = eq %3, %11
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = and %19, 1:i32
%21 = eq %20, 0:i32
pc %18 1
pc %21 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 16:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
pc %9 1
pc %12 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = and %6, 1:i32
%8 = eq %7, 0:i32
pc %5 1
pc %8 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = and %8, 1:i32
%10 = eq %9, 0:i32
pc %7 1
pc %10 1
infer %3


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 16:i32
%7:i32 = var
%8 = add %7, -8:i32
%9:i32 = var
%10 = sub 0:i32, %9
%11 = add %8, %10
%12 = eq %3, %11
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = eq %19, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = and %23, 1:i32
%25 = eq %24, 0:i32
pc %18 1
pc %22 1
pc %25 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 24:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9:i32 = var
%10 = and %9, 1:i32
%11 = eq %10, 0:i32
pc %4 1
pc %8 1
pc %11 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = sub 0:i32, %2
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 16:i32 (hasExternalUses)
%6 = add %5, 4:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = and %11, 1:i32
%13 = eq %12, 0:i32
pc %10 1
pc %13 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = and %6, 1:i32
%8 = eq %7, 0:i32
pc %5 1
pc %8 1
infer %1


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 20:i32
%7:i32 = var
%8 = add %7, -8:i32
%9:i32 = var
%10 = sub 0:i32, %9
%11 = add %8, %10
%12 = eq %3, %11
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = eq %19, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = and %23, 1:i32
%25 = eq %24, 0:i32
pc %18 1
pc %22 1
pc %25 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 24:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9:i32 = var
%10 = and %9, 1:i32
%11 = eq %10, 0:i32
pc %4 1
pc %8 1
pc %11 1
infer %1


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9:i32 = var
%10 = and %9, -8:i32 (hasExternalUses)
%11 = add %2, %10 (hasExternalUses)
%12 = ult %8, %11
%13 = and %9, 1:i32
%14 = eq %13, 0:i32
blockpc %6 0 %14 1
%15:i32 = zext %14
%16 = eq %15, 0:i32
blockpc %6 1 %16 1
infer %12


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9:i32 = var
%10 = and %9, -8:i32 (hasExternalUses)
%11 = add %2, %10 (hasExternalUses)
%12 = ult %8, %11
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = and %9, 1:i32
%16 = eq %15, 0:i32
blockpc %6 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %6 1 %18 1
infer %14


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 4:i32
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 1:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 1:i32
%2 = eq %1, 0:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 2:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, 2:i32
%2 = eq %1, 0:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5 = add %2, %4 (hasExternalUses)
%6 = eq %0, %5
%7:i32 = var
%8 = and %7, 2:i32
%9 = eq %8, 0:i32
pc %9 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %4
%8 = phi %1, %5, %5, %5, %5, %5, %7
%9 = add %0, %8
%10 = and %3, 1:i32
%11 = eq %10, 0:i32
blockpc %6 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %6 1 %13 1
%14:i32 = var
%15:i32 = var
%16 = add %15, -8:i32
%17 = add %16, %4
%18 = eq %14, %17
%19:i32 = var
%20 = and %19, 2:i32
%21 = eq %20, 0:i32
pc %18 1
pc %21 1
infer %9


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 4:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15:i32 = var
%16 = and %10, -8:i32
%17 = add %2, %16
%18 = eq %15, %17
%19:i32 = var
%20 = and %19, 2:i32
%21 = eq %20, 0:i32
pc %18 1
pc %21 1
infer %9


; start LHS (in $39)
%0:i32 = var
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %4
%8 = phi %1, %5, %5, %5, %5, %5, %7
%9 = add %0, %8 (hasExternalUses)
%10 = or %9, 1:i32
%11 = and %3, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15:i32 = var
%16:i32 = var
%17 = add %16, -8:i32
%18 = add %17, %4
%19 = eq %15, %18
%20:i32 = var
%21 = and %20, 2:i32
%22 = eq %21, 0:i32
pc %19 1
pc %22 1
infer %10


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9:i32 = var
%10 = eq %8, %9
%11:i32 = var
%12 = and %11, 1:i32
%13 = eq %12, 0:i32
blockpc %6 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %6 1 %15 1
%16:i32 = var
%17 = and %11, -8:i32
%18 = add %2, %17
%19 = eq %16, %18
%20:i32 = var
%21 = and %20, 2:i32
%22 = eq %21, 0:i32
pc %19 1
pc %22 1
infer %10


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9:i32 = var
%10 = eq %8, %9
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13:i32 = var
%14 = and %13, 1:i32
%15 = eq %14, 0:i32
blockpc %6 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %6 1 %17 1
%18:i32 = var
%19 = and %13, -8:i32
%20 = add %2, %19
%21 = eq %18, %20
%22:i32 = var
%23 = and %22, 2:i32
%24 = eq %23, 0:i32
pc %21 1
pc %24 1
infer %12


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5 = add %2, %4 (hasExternalUses)
%6 = eq %0, %5
%7:i32 = var
%8 = and %7, 2:i32
%9 = eq %8, 0:i32
pc %9 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %4
%8 = phi %1, %5, %5, %5, %5, %5, %7
%9 = add %0, %8
%10 = and %3, 1:i32
%11 = eq %10, 0:i32
blockpc %6 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %6 1 %13 1
%14:i32 = var
%15:i32 = var
%16 = add %15, -8:i32
%17 = add %16, %4
%18 = eq %14, %17
%19:i32 = var
%20 = and %19, 2:i32
%21 = eq %20, 0:i32
pc %18 1
pc %21 1
infer %9


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 4:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15:i32 = var
%16 = and %10, -8:i32
%17 = add %2, %16
%18 = eq %15, %17
%19:i32 = var
%20 = and %19, 2:i32
%21 = eq %20, 0:i32
pc %18 1
pc %21 1
infer %9


; start LHS (in $39)
%0:i32 = var
%1 = block 6
%2:i32 = var
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %4
%8 = phi %1, %5, %5, %5, %5, %5, %7
%9 = add %0, %8 (hasExternalUses)
%10 = or %9, 1:i32
%11 = and %3, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15:i32 = var
%16:i32 = var
%17 = add %16, -8:i32
%18 = add %17, %4
%19 = eq %15, %18
%20:i32 = var
%21 = and %20, 2:i32
%22 = eq %21, 0:i32
pc %19 1
pc %22 1
infer %10


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9:i32 = var
%10:i32 = var
%11 = and %10, -8:i32 (hasExternalUses)
%12 = add %3, %11 (hasExternalUses)
%13 = phi %6, %12, %11
%14 = phi %0, %12, %12, %12, %12, %12, %13
%15 = add %9, %14 (hasExternalUses)
%16 = add %8, %15
%17 = and %10, 1:i32
%18 = eq %17, 0:i32
blockpc %6 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %6 1 %20 1
%21:i32 = var
%22 = add %2, %11
%23 = eq %21, %22
%24:i32 = var
%25 = and %24, 2:i32
%26 = eq %25, 0:i32
pc %23 1
pc %26 1
infer %16


; start LHS (in $39)
%0:i32 = var
%1 = and %0, -8:i32
%2 = and %0, 2:i32
%3 = eq %2, 0:i32
pc %3 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = and %4, -8:i32 (hasExternalUses)
%6 = add %3, %5 (hasExternalUses)
%7 = block 2
%8 = phi %7, %6, %5
%9 = phi %2, %6, %6, %6, %6, %6, %8
%10 = add %1, %9
%11 = and %4, 1:i32
%12 = eq %11, 0:i32
blockpc %7 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %7 1 %14 1
%15 = and %0, 2:i32
%16 = eq %15, 0:i32
pc %16 1
infer %10


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 3:i32
%2 = and %0, 2:i32
%3 = eq %2, 0:i32
pc %3 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = ult %0, 256:i32
%2 = and %0, 2:i32
%3 = eq %2, 0:i32
pc %3 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 8:i32
%6:i32 = var
%7 = ult %6, 256:i32
%8 = and %6, 2:i32
%9 = eq %8, 0:i32
pc %7 1
pc %9 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 12:i32
%6:i32 = var
%7 = ult %6, 256:i32
%8 = and %6, 2:i32
%9 = eq %8, 0:i32
pc %7 1
pc %9 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = eq %0, %1
%3:i32 = var
%4 = ult %3, 256:i32
%5 = and %3, 2:i32
%6 = eq %5, 0:i32
pc %4 1
pc %6 1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 3:i32
%2 = shl 1:i32, %1
%3:i32 = var
%4:i32 = var
%5 = eq %3, %4
%6 = ult %0, 256:i32
%7 = and %0, 2:i32
%8 = eq %7, 0:i32
pc %5 1
pc %6 1
pc %8 1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 3:i32
%2 = shl 1:i32, %1
%3 = xor %2, -1:i32
%4:i32 = var
%5:i32 = var
%6 = eq %4, %5
%7 = ult %0, 256:i32
%8 = and %0, 2:i32
%9 = eq %8, 0:i32
pc %6 1
pc %7 1
pc %9 1
infer %3


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = lshr %1, 3:i32
%3 = shl 1:i32, %2
%4 = xor %3, -1:i32
%5 = and %0, %4
%6:i32 = var
%7:i32 = var
%8 = eq %6, %7
%9 = ult %1, 256:i32
%10 = and %1, 2:i32
%11 = eq %10, 0:i32
pc %8 1
pc %9 1
pc %11 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = eq %2, %0
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult %6, 256:i32
%8 = and %6, 2:i32
%9 = eq %8, 0:i32
pc %5 1
pc %7 1
pc %9 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = eq %0, %2
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult %6, 256:i32
%8 = and %6, 2:i32
%9 = eq %8, 0:i32
pc %5 1
pc %7 1
pc %9 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 24:i32
%6:i32 = var
%7 = ult %6, 256:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = and %6, 2:i32
%11 = eq %10, 0:i32
pc %9 1
pc %11 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 12:i32
%6:i32 = var
%7 = ult %6, 256:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = and %6, 2:i32
%11 = eq %10, 0:i32
pc %9 1
pc %11 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5 = add %2, %4 (hasExternalUses)
%6 = eq %0, %5
%7:i32 = var
%8 = ult %7, 256:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = and %7, 2:i32
%12 = eq %11, 0:i32
pc %10 1
pc %12 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 16:i32
%6:i32 = var
%7 = eq %6, %4
%8:i32 = var
%9 = ult %8, 256:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12 = and %8, 2:i32
%13 = eq %12, 0:i32
pc %7 1
pc %11 1
pc %13 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 16:i32 (hasExternalUses)
%6 = add %5, 4:i32
%7:i32 = var
%8 = eq %7, %4
%9:i32 = var
%10 = ult %9, 256:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13 = and %9, 2:i32
%14 = eq %13, 0:i32
pc %8 1
pc %12 1
pc %14 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = and %5, -8:i32
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = var
%10 = ult %9, 256:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13 = and %9, 2:i32
%14 = eq %13, 0:i32
pc %8 1
pc %12 1
pc %14 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5:i32 = var
%6 = add %5, -8:i32
%7:i32 = var
%8 = and %7, -8:i32
%9 = add %6, %8
%10 = eq %4, %9
%11:i32 = var
%12 = ult %11, 256:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = and %11, 2:i32
%16 = eq %15, 0:i32
pc %3 1
pc %10 1
pc %14 1
pc %16 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = and %5, -8:i32
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = var
%10 = ult %9, 256:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13 = and %9, 2:i32
%14 = eq %13, 0:i32
pc %8 1
pc %12 1
pc %14 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = and %5, -8:i32
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = var
%10 = ult %9, 256:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13 = and %9, 2:i32
%14 = eq %13, 0:i32
pc %8 1
pc %12 1
pc %14 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5:i32 = var
%6 = add %5, -8:i32
%7:i32 = var
%8 = and %7, -8:i32
%9 = add %6, %8
%10 = eq %4, %9
%11:i32 = var
%12 = ult %11, 256:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = and %11, 2:i32
%16 = eq %15, 0:i32
pc %3 1
pc %10 1
pc %14 1
pc %16 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = var
%5:i32 = var
%6 = add %5, -8:i32
%7:i32 = var
%8 = and %7, -8:i32
%9 = add %6, %8
%10 = eq %4, %9
%11:i32 = var
%12 = ult %11, 256:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = and %11, 2:i32
%16 = eq %15, 0:i32
pc %3 1
pc %10 1
pc %14 1
pc %16 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 8:i32
%6:i32 = var
%7 = eq %6, %4
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ult %10, 256:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = and %10, 2:i32
%15 = eq %14, 0:i32
pc %9 1
pc %13 1
pc %15 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = and %5, -8:i32
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = ult %11, 256:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = and %11, 2:i32
%16 = eq %15, 0:i32
pc %10 1
pc %14 1
pc %16 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = add %2, -8:i32
%4:i32 = var
%5 = and %4, -8:i32
%6 = add %3, %5
%7 = eq %0, %6
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ult %10, 256:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = and %10, 2:i32
%15 = eq %14, 0:i32
pc %9 1
pc %13 1
pc %15 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = ult %2, 256:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6 = and %2, 2:i32
%7 = eq %6, 0:i32
pc %5 1
pc %7 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4:i32 = var
%5 = ult %4, 256:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = and %4, 2:i32
%9 = eq %8, 0:i32
pc %7 1
pc %9 1
infer %3


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 28:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ult %10, 256:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = and %10, 2:i32
%15 = eq %14, 0:i32
pc %9 1
pc %13 1
pc %15 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = shl %0, 2:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult %6, 256:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = and %6, 2:i32
%11 = eq %10, 0:i32
pc %5 1
pc %9 1
pc %11 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = shl %0, 2:i32
%2 = add 3408:i32, %1
%3:i32 = var
%4 = eq %3, 0:i32
%5:i32 = zext %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = ult %7, 256:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = and %7, 2:i32
%12 = eq %11, 0:i32
pc %6 1
pc %10 1
pc %12 1
infer %2


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5 = add %2, %4 (hasExternalUses)
%6 = eq %0, %5
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = ult %11, 256:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = and %11, 2:i32
%16 = eq %15, 0:i32
pc %10 1
pc %14 1
pc %16 1
infer %6


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = add %7, -8:i32
%9:i32 = var
%10 = and %9, -8:i32
%11 = add %8, %10
%12 = eq %3, %11
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15:i32 = var
%16 = eq %15, %11
%17:i32 = var
%18 = eq %17, 0:i32
%19:i32 = zext %18
%20 = eq %19, 0:i32
%21:i32 = var
%22 = ult %21, 256:i32
%23:i32 = zext %22
%24 = eq %23, 0:i32
%25 = and %21, 2:i32
%26 = eq %25, 0:i32
pc %16 1
pc %20 1
pc %24 1
pc %26 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = shl 1:i32, %0
%2 = block 2
%3 = block 2
%4:i32 = var
%5:i32 = var
%6 = add %5, -8:i32
%7:i32 = var
%8 = and %7, -8:i32
%9 = add %6, %8
%10 = eq %4, %9
blockpc %3 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %3 1 %12 1
%13:i32 = var
%14 = phi %3, %13, %4
%15 = phi %2, 0:i32, %14
%16 = eq %15, 0:i32
%17:i32 = var
%18 = eq %17, %9
%19:i32 = var
%20 = eq %19, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = ult %23, 256:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27 = and %23, 2:i32
%28 = eq %27, 0:i32
pc %16 1
pc %18 1
pc %22 1
pc %26 1
pc %28 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = shl 1:i32, %0
%2 = xor %1, -1:i32
%3 = block 2
%4 = block 2
%5:i32 = var
%6:i32 = var
%7 = add %6, -8:i32
%8:i32 = var
%9 = and %8, -8:i32
%10 = add %7, %9
%11 = eq %5, %10
blockpc %4 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %4 1 %13 1
%14:i32 = var
%15 = phi %4, %14, %5
%16 = phi %3, 0:i32, %15
%17 = eq %16, 0:i32
%18:i32 = var
%19 = eq %18, %10
%20:i32 = var
%21 = eq %20, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
%24:i32 = var
%25 = ult %24, 256:i32
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %17 1
pc %19 1
pc %23 1
pc %27 1
pc %28 1
infer %2


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = shl 1:i32, %1
%3 = xor %2, -1:i32
%4 = and %0, %3
%5 = block 2
%6 = block 2
%7:i32 = var
%8:i32 = var
%9 = add %8, -8:i32
%10:i32 = var
%11 = and %10, -8:i32
%12 = add %9, %11
%13 = eq %7, %12
blockpc %6 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %6 1 %15 1
%16:i32 = var
%17 = phi %6, %16, %7
%18 = phi %5, 0:i32, %17
%19 = eq %18, 0:i32
%20:i32 = var
%21 = eq %20, %12
%22:i32 = var
%23 = eq %22, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
%27 = ult %26, 256:i32
%28:i32 = zext %27
%29 = eq %28, 0:i32
%30:i32 = var
pc %19 1
pc %21 1
pc %25 1
pc %29 1
pc %30 1
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = and %5, -8:i32
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = eq %0, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14:i32 = var
%15 = ult %14, 256:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18 = and %14, 2:i32
%19 = eq %18, 0:i32
pc %10 1
pc %13 1
pc %17 1
pc %19 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3:i32 = var
%4 = add %3, -8:i32
%5:i32 = var
%6 = and %5, -8:i32
%7 = add %4, %6
%8 = eq %2, %7
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11 = eq %0, 0:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14:i32 = var
%15 = ult %14, 256:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
%18 = and %14, 2:i32
%19 = eq %18, 0:i32
pc %10 1
pc %13 1
pc %17 1
pc %19 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = and %3, -8:i32 (hasExternalUses)
%5 = add %2, %4 (hasExternalUses)
%6 = eq %0, %5
%7:i32 = var
%8 = eq %7, %5
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = eq %11, 0:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15:i32 = var
%16 = ult %15, 256:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19 = and %15, 2:i32
%20 = eq %19, 0:i32
pc %10 1
pc %14 1
pc %18 1
pc %20 1
infer %6


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = eq %5, 0:i32
%7:i32 = var
%8 = add %7, -8:i32
%9:i32 = var
%10 = and %9, -8:i32
%11 = add %8, %10
%12 = eq %3, %11
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15:i32 = var
%16 = eq %15, %11
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = eq %19, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = ult %23, 256:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27 = and %23, 2:i32
%28 = eq %27, 0:i32
pc %18 1
pc %22 1
pc %26 1
pc %28 1
infer %6


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 24:i32
%7:i32 = var
%8 = add %7, -8:i32
%9:i32 = var
%10 = and %9, -8:i32
%11 = add %8, %10
%12 = eq %3, %11
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = ult %19, 256:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23 = and %19, 2:i32
%24 = eq %23, 0:i32
pc %18 1
pc %22 1
pc %24 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 16:i32
%6:i32 = var
%7 = eq %6, 0:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10:i32 = var
%11 = ult %10, 256:i32
%12:i32 = zext %11
%13 = eq %12, 0:i32
%14 = and %10, 2:i32
%15 = eq %14, 0:i32
pc %9 1
pc %13 1
pc %15 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult %6, 256:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = and %6, 2:i32
%11 = eq %10, 0:i32
pc %5 1
pc %9 1
pc %11 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = ult %8, 256:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12 = and %8, 2:i32
%13 = eq %12, 0:i32
pc %7 1
pc %11 1
pc %13 1
infer %3


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 16:i32
%7:i32 = var
%8 = add %7, -8:i32
%9:i32 = var
%10 = and %9, -8:i32
%11 = add %8, %10
%12 = eq %3, %11
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = eq %19, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = ult %23, 256:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27 = and %23, 2:i32
%28 = eq %27, 0:i32
pc %18 1
pc %22 1
pc %26 1
pc %28 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 24:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9:i32 = var
%10 = ult %9, 256:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13 = and %9, 2:i32
%14 = eq %13, 0:i32
pc %4 1
pc %8 1
pc %12 1
pc %14 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -8:i32 (hasExternalUses)
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = add %4, 16:i32 (hasExternalUses)
%6 = add %5, 4:i32
%7:i32 = var
%8 = eq %7, 0:i32
%9:i32 = zext %8
%10 = eq %9, 0:i32
%11:i32 = var
%12 = ult %11, 256:i32
%13:i32 = zext %12
%14 = eq %13, 0:i32
%15 = and %11, 2:i32
%16 = eq %15, 0:i32
pc %10 1
pc %14 1
pc %16 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
%6:i32 = var
%7 = ult %6, 256:i32
%8:i32 = zext %7
%9 = eq %8, 0:i32
%10 = and %6, 2:i32
%11 = eq %10, 0:i32
pc %5 1
pc %9 1
pc %11 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = zext %1
%3 = eq %2, 0:i32
%4:i32 = var
%5 = eq %4, 0:i32
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8:i32 = var
%9 = ult %8, 256:i32
%10:i32 = zext %9
%11 = eq %10, 0:i32
%12 = and %8, 2:i32
%13 = eq %12, 0:i32
pc %7 1
pc %11 1
pc %13 1
infer %3


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4 = phi %1, %2, %3
%5 = phi %0, 0:i32, %4
%6 = add %5, 20:i32
%7:i32 = var
%8 = add %7, -8:i32
%9:i32 = var
%10 = and %9, -8:i32
%11 = add %8, %10
%12 = eq %3, %11
blockpc %1 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %1 1 %14 1
%15:i32 = var
%16 = eq %15, 0:i32
%17:i32 = zext %16
%18 = eq %17, 0:i32
%19:i32 = var
%20 = eq %19, 0:i32
%21:i32 = zext %20
%22 = eq %21, 0:i32
%23:i32 = var
%24 = ult %23, 256:i32
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27 = and %23, 2:i32
%28 = eq %27, 0:i32
pc %18 1
pc %22 1
pc %26 1
pc %28 1
infer %6


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 24:i32
%2 = eq %0, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = eq %5, 0:i32
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9:i32 = var
%10 = ult %9, 256:i32
%11:i32 = zext %10
%12 = eq %11, 0:i32
%13 = and %9, 2:i32
%14 = eq %13, 0:i32
pc %4 1
pc %8 1
pc %12 1
pc %14 1
infer %1


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 4:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15:i32 = var
%16 = and %15, 2:i32
%17 = eq %16, 0:i32
pc %17 1
infer %9


; start LHS (in $39)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 6
%3:i32 = var
%4:i32 = var
%5 = and %4, -8:i32 (hasExternalUses)
%6 = add %3, %5 (hasExternalUses)
%7 = block 2
%8 = phi %7, %6, %5
%9 = phi %2, %6, %6, %6, %6, %6, %8
%10 = add %1, %9 (hasExternalUses)
%11 = or %10, 1:i32
%12 = and %4, 1:i32
%13 = eq %12, 0:i32
blockpc %7 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %7 1 %15 1
%16 = and %0, 2:i32
%17 = eq %16, 0:i32
pc %17 1
infer %11


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9:i32 = var
%10 = and %9, -8:i32
%11:i32 = var
%12 = and %11, -8:i32 (hasExternalUses)
%13 = add %3, %12 (hasExternalUses)
%14 = phi %6, %13, %12
%15 = phi %0, %13, %13, %13, %13, %13, %14
%16 = add %10, %15 (hasExternalUses)
%17 = add %8, %16
%18 = and %11, 1:i32
%19 = eq %18, 0:i32
blockpc %6 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %6 1 %21 1
%22 = and %9, 2:i32
%23 = eq %22, 0:i32
pc %23 1
infer %17


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9:i32 = var
%10 = eq %8, %9
%11:i32 = var
%12 = and %11, 1:i32
%13 = eq %12, 0:i32
blockpc %6 0 %13 1
%14:i32 = zext %13
%15 = eq %14, 0:i32
blockpc %6 1 %15 1
%16:i32 = var
%17 = and %16, 2:i32
%18 = eq %17, 0:i32
pc %18 1
infer %10


; start LHS (in $39)
%0:i32 = var
%1 = and %0, -2:i32
%2 = and %0, 2:i32
%3 = eq %2, 0:i32
%4:i32 = zext %3
%5 = eq %4, 0:i32
pc %5 1
infer %1


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 4:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15:i32 = var
%16 = and %15, 2:i32
%17 = eq %16, 0:i32
%18:i32 = zext %17
%19 = eq %18, 0:i32
pc %19 1
infer %9


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2:i32 = var
%3 = and %2, -8:i32 (hasExternalUses)
%4 = add %1, %3 (hasExternalUses)
%5 = block 2
%6 = phi %5, %4, %3
%7 = phi %0, %4, %4, %4, %4, %4, %6
%8 = or %7, 1:i32
%9 = and %2, 1:i32
%10 = eq %9, 0:i32
blockpc %5 0 %10 1
%11:i32 = zext %10
%12 = eq %11, 0:i32
blockpc %5 1 %12 1
%13:i32 = var
%14 = and %13, 2:i32
%15 = eq %14, 0:i32
%16:i32 = zext %15
%17 = eq %16, 0:i32
pc %17 1
infer %8


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9:i32 = var
%10 = and %9, -8:i32 (hasExternalUses)
%11 = add %3, %10 (hasExternalUses)
%12 = phi %6, %11, %10
%13 = phi %0, %11, %11, %11, %11, %11, %12
%14 = add %8, %13
%15 = and %9, 1:i32
%16 = eq %15, 0:i32
blockpc %6 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %6 1 %18 1
%19:i32 = var
%20 = and %19, 2:i32
%21 = eq %20, 0:i32
%22:i32 = zext %21
%23 = eq %22, 0:i32
pc %23 1
infer %14


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 3:i32
%14 = and %1, 2:i32
%15 = eq %14, 0:i32
blockpc %0 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %0 1 %17 1
%18 = and %5, 1:i32
%19 = eq %18, 0:i32
blockpc %8 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %8 1 %21 1
infer %13


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = ult %12, 256:i32
%14 = and %1, 2:i32
%15 = eq %14, 0:i32
blockpc %0 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %0 1 %17 1
%18 = and %5, 1:i32
%19 = eq %18, 0:i32
blockpc %8 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %8 1 %21 1
infer %13


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 3:i32 (hasExternalUses)
%14 = shl %13, 1:i32
%15 = and %1, 2:i32
%16 = eq %15, 0:i32
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = and %5, 1:i32
%20 = eq %19, 0:i32
blockpc %8 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %8 1 %22 1
%23 = ult %12, 256:i32
pc %23 1
infer %14


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 3:i32 (hasExternalUses)
%14 = shl %13, 1:i32
%15 = shl %14, 2:i32
%16 = and %1, 2:i32
%17 = eq %16, 0:i32
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20 = and %5, 1:i32
%21 = eq %20, 0:i32
blockpc %8 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %8 1 %23 1
%24 = ult %12, 256:i32
pc %24 1
infer %15


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 3:i32 (hasExternalUses)
%14 = shl %13, 1:i32
%15 = shl %14, 2:i32
%16 = add 3144:i32, %15
%17 = and %1, 2:i32
%18 = eq %17, 0:i32
blockpc %0 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %0 1 %20 1
%21 = and %5, 1:i32
%22 = eq %21, 0:i32
blockpc %8 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %8 1 %24 1
%25 = ult %12, 256:i32
pc %25 1
infer %16


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 3:i32 (hasExternalUses)
%14 = shl 1:i32, %13
%15 = and %1, 2:i32
%16 = eq %15, 0:i32
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = and %5, 1:i32
%20 = eq %19, 0:i32
blockpc %8 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %8 1 %22 1
%23 = ult %12, 256:i32
pc %23 1
infer %14


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = and %6, -8:i32 (hasExternalUses)
%8 = add %5, %7 (hasExternalUses)
%9 = block 2
%10 = phi %9, %8, %7
%11 = phi %4, %8, %8, %8, %8, %8, %10
%12 = add %3, %11 (hasExternalUses)
%13 = phi %1, %12, %11
%14 = lshr %13, 3:i32 (hasExternalUses)
%15 = shl 1:i32, %14 (hasExternalUses)
%16 = and %0, %15
%17 = and %2, 2:i32
%18 = eq %17, 0:i32
blockpc %1 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %1 1 %20 1
%21 = and %6, 1:i32
%22 = eq %21, 0:i32
blockpc %9 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %9 1 %24 1
%25 = ult %13, 256:i32
pc %25 1
infer %16


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = and %6, -8:i32 (hasExternalUses)
%8 = add %5, %7 (hasExternalUses)
%9 = block 2
%10 = phi %9, %8, %7
%11 = phi %4, %8, %8, %8, %8, %8, %10
%12 = add %3, %11 (hasExternalUses)
%13 = phi %1, %12, %11
%14 = lshr %13, 3:i32 (hasExternalUses)
%15 = shl 1:i32, %14 (hasExternalUses)
%16 = and %0, %15
%17 = eq %16, 0:i32
%18 = and %2, 2:i32
%19 = eq %18, 0:i32
blockpc %1 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %1 1 %21 1
%22 = and %6, 1:i32
%23 = eq %22, 0:i32
blockpc %9 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %9 1 %25 1
%26:i32 = var
pc %26 1
infer %17


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 6
%5:i32 = var
%6:i32 = var
%7 = and %6, -8:i32 (hasExternalUses)
%8 = add %5, %7 (hasExternalUses)
%9 = block 2
%10 = phi %9, %8, %7
%11 = phi %4, %8, %8, %8, %8, %8, %10
%12 = add %3, %11 (hasExternalUses)
%13 = phi %1, %12, %11
%14 = lshr %13, 3:i32 (hasExternalUses)
%15 = shl 1:i32, %14 (hasExternalUses)
%16 = or %0, %15
%17 = and %2, 2:i32
%18 = eq %17, 0:i32
blockpc %1 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %1 1 %20 1
%21 = and %6, 1:i32
%22 = eq %21, 0:i32
blockpc %9 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %9 1 %24 1
%25 = and %0, %15
%26 = eq %25, 0:i32
%27:i32 = var
pc %26 1
pc %27 1
infer %16


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = add %4, %5 (hasExternalUses)
%7 = block 2
%8 = phi %7, %6, %5
%9 = phi %3, %6, %6, %6, %6, %6, %8
%10 = add %2, %9 (hasExternalUses)
%11 = phi %0, %10, %9
%12 = lshr %11, 3:i32 (hasExternalUses)
%13 = shl %12, 1:i32
%14 = shl %13, 2:i32
%15 = add 3144:i32, %14 (hasExternalUses)
%16 = add %15, 8:i32
%17 = and %1, 2:i32
%18 = eq %17, 0:i32
blockpc %0 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %0 1 %20 1
%21:i32 = var
%22 = and %21, 1:i32
%23 = eq %22, 0:i32
blockpc %7 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %7 1 %25 1
%26:i32 = var
%27:i32 = var
pc %26 1
pc %27 1
infer %16


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = add %4, %5 (hasExternalUses)
%7 = block 2
%8 = phi %7, %6, %5
%9 = phi %3, %6, %6, %6, %6, %6, %8
%10 = add %2, %9 (hasExternalUses)
%11 = phi %0, %10, %9
%12 = lshr %11, 3:i32 (hasExternalUses)
%13 = shl %12, 1:i32
%14 = shl %13, 2:i32
%15 = add 3144:i32, %14 (hasExternalUses)
%16 = add %15, 8:i32
%17 = and %1, 2:i32
%18 = eq %17, 0:i32
blockpc %0 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %0 1 %20 1
%21:i32 = var
%22 = and %21, 1:i32
%23 = eq %22, 0:i32
blockpc %7 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %7 1 %25 1
%26:i32 = var
%27:i32 = var
pc %26 1
pc %27 1
infer %16


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 6
%5:i32 = var
%6 = block 2
%7:i32 = var
%8 = phi %6, %5, %7
%9 = phi %4, %5, %5, %5, %5, %5, %8
%10 = add %3, %9 (hasExternalUses)
%11 = phi %1, %10, %9
%12 = lshr %11, 3:i32 (hasExternalUses)
%13 = shl %12, 1:i32
%14 = shl %13, 2:i32
%15 = add 3144:i32, %14 (hasExternalUses)
%16:i32 = var
%17 = phi %0, %15, %16
%18 = add %17, 12:i32
%19:i32 = var
%20 = shl 1:i32, %12
%21 = and %19, %20
%22 = eq %21, 0:i32
blockpc %0 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %0 1 %24 1
%25 = and %2, 2:i32
%26 = eq %25, 0:i32
blockpc %1 0 %26 1
%27:i32 = var
blockpc %1 1 %27 1
%28:i32 = var
blockpc %6 0 %28 1
%29:i32 = var
blockpc %6 1 %29 1
%30:i32 = var
pc %30 1
infer %18


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 8:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15 = block 2
%16:i32 = var
%17 = and %16, 2:i32
%18 = eq %17, 0:i32
blockpc %15 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %15 1 %20 1
%21 = and %16, -8:i32
%22 = and %10, -8:i32
%23 = add %3, %22
%24 = phi %6, %23, %22
%25 = phi %0, %23, %23, %23, %23, %23, %24
%26 = add %21, %25
%27 = phi %15, %26, %25
%28 = ult %27, 256:i32
pc %28 1
infer %9


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 12:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15 = block 2
%16:i32 = var
%17 = and %16, 2:i32
%18 = eq %17, 0:i32
blockpc %15 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %15 1 %20 1
%21 = and %16, -8:i32
%22 = and %10, -8:i32
%23 = add %3, %22
%24 = phi %6, %23, %22
%25 = phi %0, %23, %23, %23, %23, %23, %24
%26 = add %21, %25
%27 = phi %15, %26, %25
%28 = ult %27, 256:i32
pc %28 1
infer %9


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 8:i32
%14 = and %1, 2:i32
%15 = eq %14, 0:i32
blockpc %0 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %0 1 %17 1
%18 = and %5, 1:i32
%19 = eq %18, 0:i32
blockpc %8 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %8 1 %21 1
infer %13


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = eq %13, 0:i32
%15 = and %1, 2:i32
%16 = eq %15, 0:i32
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = and %5, 1:i32
%20 = eq %19, 0:i32
blockpc %8 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %8 1 %22 1
infer %14


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = ult 16777215:i32, %12
%14 = and %1, 2:i32
%15 = eq %14, 0:i32
blockpc %0 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %0 1 %17 1
%18 = and %5, 1:i32
%19 = eq %18, 0:i32
blockpc %8 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %8 1 %21 1
%22 = lshr %12, 8:i32
%23 = eq %22, 0:i32
%24:i32 = zext %23
%25 = eq %24, 0:i32
pc %25 1
infer %13


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = add %13, 1048320:i32
%15 = and %1, 2:i32
%16 = eq %15, 0:i32
blockpc %0 0 %16 1
%17:i32 = zext %16
%18 = eq %17, 0:i32
blockpc %0 1 %18 1
%19 = and %5, 1:i32
%20 = eq %19, 0:i32
blockpc %8 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %8 1 %22 1
%23 = ult 16777215:i32, %12
%24:i32 = zext %23
%25 = eq %24, 0:i32
%26:i32 = var
pc %25 1
pc %26 1
infer %14


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = add %13, 1048320:i32
%15 = lshr %14, 16:i32
%16 = and %1, 2:i32
%17 = eq %16, 0:i32
blockpc %0 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %0 1 %19 1
%20 = and %5, 1:i32
%21 = eq %20, 0:i32
blockpc %8 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %8 1 %23 1
%24 = ult 16777215:i32, %12
%25:i32 = zext %24
%26 = eq %25, 0:i32
%27:i32 = var
pc %26 1
pc %27 1
infer %15


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = add %13, 1048320:i32
%15 = lshr %14, 16:i32
%16 = and %15, 8:i32
%17 = and %1, 2:i32
%18 = eq %17, 0:i32
blockpc %0 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %0 1 %20 1
%21 = and %5, 1:i32
%22 = eq %21, 0:i32
blockpc %8 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %8 1 %24 1
%25 = ult 16777215:i32, %12
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %27 1
pc %28 1
infer %16


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = add %13, 1048320:i32
%15 = lshr %14, 16:i32
%16 = and %15, 8:i32 (hasExternalUses)
%17 = shl %13, %16
%18 = and %1, 2:i32
%19 = eq %18, 0:i32
blockpc %0 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %0 1 %21 1
%22 = and %5, 1:i32
%23 = eq %22, 0:i32
blockpc %8 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %8 1 %25 1
%26:i32 = var
%27:i32 = var
pc %26 1
pc %27 1
infer %17


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = add %13, 1048320:i32
%15 = lshr %14, 16:i32
%16 = and %15, 8:i32 (hasExternalUses)
%17 = shl %13, %16 (hasExternalUses)
%18 = add %17, 520192:i32
%19 = and %1, 2:i32
%20 = eq %19, 0:i32
blockpc %0 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %0 1 %22 1
%23 = and %5, 1:i32
%24 = eq %23, 0:i32
blockpc %8 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %8 1 %26 1
%27:i32 = var
%28:i32 = var
pc %27 1
pc %28 1
infer %18


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = add %13, 1048320:i32
%15 = lshr %14, 16:i32
%16 = and %15, 8:i32 (hasExternalUses)
%17 = shl %13, %16 (hasExternalUses)
%18 = add %17, 520192:i32
%19 = lshr %18, 16:i32
%20 = and %1, 2:i32
%21 = eq %20, 0:i32
blockpc %0 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %0 1 %23 1
%24 = and %5, 1:i32
%25 = eq %24, 0:i32
blockpc %8 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %8 1 %27 1
%28:i32 = var
%29:i32 = var
pc %28 1
pc %29 1
infer %19


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = add %4, %5 (hasExternalUses)
%7 = block 2
%8 = phi %7, %6, %5
%9 = phi %3, %6, %6, %6, %6, %6, %8
%10 = add %2, %9 (hasExternalUses)
%11 = phi %0, %10, %9
%12 = lshr %11, 8:i32 (hasExternalUses)
%13 = add %12, 1048320:i32
%14 = lshr %13, 16:i32
%15 = and %14, 8:i32 (hasExternalUses)
%16 = shl %12, %15 (hasExternalUses)
%17 = add %16, 520192:i32
%18 = lshr %17, 16:i32
%19 = and %18, 4:i32
%20 = and %1, 2:i32
%21 = eq %20, 0:i32
blockpc %0 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %0 1 %23 1
%24:i32 = var
%25 = and %24, 1:i32
%26 = eq %25, 0:i32
blockpc %7 0 %26 1
%27:i32 = var
blockpc %7 1 %27 1
%28:i32 = var
%29:i32 = var
pc %28 1
pc %29 1
infer %19


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = add %13, 1048320:i32
%15 = lshr %14, 16:i32
%16 = and %15, 8:i32 (hasExternalUses)
%17 = shl %13, %16
%18 = add %17, 520192:i32
%19 = lshr %18, 16:i32
%20 = and %19, 4:i32 (hasExternalUses)
%21 = shl %17, %20
%22 = and %1, 2:i32
%23 = eq %22, 0:i32
blockpc %0 0 %23 1
%24:i32 = zext %23
%25 = eq %24, 0:i32
blockpc %0 1 %25 1
%26 = and %5, 1:i32
%27 = eq %26, 0:i32
blockpc %8 0 %27 1
%28:i32 = var
blockpc %8 1 %28 1
%29:i32 = var
%30:i32 = var
pc %29 1
pc %30 1
infer %21


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = add %13, 1048320:i32
%15 = lshr %14, 16:i32
%16 = and %15, 8:i32 (hasExternalUses)
%17 = shl %13, %16
%18 = add %17, 520192:i32
%19 = lshr %18, 16:i32
%20 = and %19, 4:i32 (hasExternalUses)
%21 = shl %17, %20 (hasExternalUses)
%22 = add %21, 245760:i32
%23 = and %1, 2:i32
%24 = eq %23, 0:i32
blockpc %0 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %0 1 %26 1
%27 = and %5, 1:i32
%28 = eq %27, 0:i32
blockpc %8 0 %28 1
%29:i32 = var
blockpc %8 1 %29 1
%30:i32 = var
%31:i32 = var
pc %30 1
pc %31 1
infer %22


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = add %4, %5 (hasExternalUses)
%7 = block 2
%8 = phi %7, %6, %5
%9 = phi %3, %6, %6, %6, %6, %6, %8
%10 = add %2, %9 (hasExternalUses)
%11 = phi %0, %10, %9
%12 = lshr %11, 8:i32 (hasExternalUses)
%13 = add %12, 1048320:i32
%14 = lshr %13, 16:i32
%15 = and %14, 8:i32 (hasExternalUses)
%16 = shl %12, %15
%17 = add %16, 520192:i32
%18 = lshr %17, 16:i32
%19 = and %18, 4:i32 (hasExternalUses)
%20 = shl %16, %19 (hasExternalUses)
%21 = add %20, 245760:i32
%22 = lshr %21, 16:i32
%23 = and %1, 2:i32
%24 = eq %23, 0:i32
blockpc %0 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %0 1 %26 1
%27:i32 = var
%28 = and %27, 1:i32
%29 = eq %28, 0:i32
blockpc %7 0 %29 1
%30:i32 = var
blockpc %7 1 %30 1
%31:i32 = var
%32:i32 = var
pc %31 1
pc %32 1
infer %22


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, %4, %6
%8 = phi %3, %4, %4, %4, %4, %4, %7
%9 = add %2, %8 (hasExternalUses)
%10 = phi %0, %9, %8
%11 = lshr %10, 8:i32 (hasExternalUses)
%12 = add %11, 1048320:i32
%13 = lshr %12, 16:i32
%14 = and %13, 8:i32 (hasExternalUses)
%15 = shl %11, %14
%16 = add %15, 520192:i32
%17 = lshr %16, 16:i32
%18 = and %17, 4:i32 (hasExternalUses)
%19 = shl %15, %18 (hasExternalUses)
%20 = add %19, 245760:i32
%21 = lshr %20, 16:i32
%22 = and %21, 2:i32
%23 = and %1, 2:i32
%24 = eq %23, 0:i32
blockpc %0 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %0 1 %26 1
%27:i32 = var
%28 = and %27, 1:i32
%29 = eq %28, 0:i32
blockpc %5 0 %29 1
%30:i32 = var
blockpc %5 1 %30 1
%31:i32 = var
%32:i32 = var
pc %31 1
pc %32 1
infer %22


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5 = block 2
%6:i32 = var
%7 = phi %5, %4, %6
%8 = phi %3, %4, %4, %4, %4, %4, %7
%9 = add %2, %8 (hasExternalUses)
%10 = phi %0, %9, %8
%11 = lshr %10, 8:i32 (hasExternalUses)
%12 = add %11, 1048320:i32
%13 = lshr %12, 16:i32
%14 = and %13, 8:i32
%15 = shl %11, %14 (hasExternalUses)
%16 = add %15, 520192:i32
%17 = lshr %16, 16:i32
%18 = and %17, 4:i32 (hasExternalUses)
%19 = or %18, %14
%20 = and %1, 2:i32
%21 = eq %20, 0:i32
blockpc %0 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %0 1 %23 1
%24:i32 = var
%25 = and %24, 1:i32
%26 = eq %25, 0:i32
blockpc %5 0 %26 1
%27:i32 = var
blockpc %5 1 %27 1
%28:i32 = var
%29:i32 = var
pc %28 1
pc %29 1
infer %19


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 6
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %3, %5
%7 = phi %2, %3, %3, %3, %3, %3, %6
%8 = add %1, %7 (hasExternalUses)
%9 = phi %0, %8, %7
%10 = lshr %9, 8:i32 (hasExternalUses)
%11 = add %10, 1048320:i32
%12 = lshr %11, 16:i32
%13 = and %12, 8:i32
%14 = shl %10, %13
%15 = add %14, 520192:i32
%16 = lshr %15, 16:i32
%17 = and %16, 4:i32
%18 = or %17, %13
%19 = shl %14, %17 (hasExternalUses)
%20 = add %19, 245760:i32
%21 = lshr %20, 16:i32
%22 = and %21, 2:i32 (hasExternalUses)
%23 = or %18, %22
%24:i32 = var
%25 = and %24, 2:i32
%26 = eq %25, 0:i32
blockpc %0 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %0 1 %28 1
%29:i32 = var
blockpc %4 0 %29 1
%30:i32 = var
blockpc %4 1 %30 1
%31:i32 = var
%32:i32 = var
pc %31 1
pc %32 1
infer %23


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = lshr %12, 8:i32 (hasExternalUses)
%14 = add %13, 1048320:i32
%15 = lshr %14, 16:i32
%16 = and %15, 8:i32 (hasExternalUses)
%17 = shl %13, %16
%18 = add %17, 520192:i32
%19 = lshr %18, 16:i32
%20 = and %19, 4:i32 (hasExternalUses)
%21 = shl %17, %20
%22 = add %21, 245760:i32
%23 = lshr %22, 16:i32
%24 = and %23, 2:i32 (hasExternalUses)
%25 = shl %21, %24
%26 = and %1, 2:i32
%27 = eq %26, 0:i32
blockpc %0 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %0 1 %29 1
%30:i32 = var
blockpc %8 0 %30 1
%31:i32 = var
blockpc %8 1 %31 1
%32:i32 = var
%33:i32 = var
pc %32 1
pc %33 1
infer %25


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 6
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %3, %5
%7 = phi %2, %3, %3, %3, %3, %3, %6
%8 = phi %0, %1, %7
%9 = lshr %8, 8:i32 (hasExternalUses)
%10:i32 = var
%11 = lshr %10, 16:i32
%12 = and %11, 8:i32
%13 = shl %9, %12
%14 = add %13, 520192:i32
%15 = lshr %14, 16:i32
%16 = and %15, 4:i32
%17 = or %16, %12
%18 = shl %13, %16 (hasExternalUses)
%19 = add %18, 245760:i32
%20 = lshr %19, 16:i32
%21 = and %20, 2:i32 (hasExternalUses)
%22 = or %17, %21
%23 = sub 14:i32, %22
%24:i32 = var
%25 = and %24, 2:i32
%26 = eq %25, 0:i32
blockpc %0 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %0 1 %28 1
%29:i32 = var
blockpc %4 0 %29 1
%30:i32 = var
blockpc %4 1 %30 1
%31:i32 = var
%32:i32 = var
pc %31 1
pc %32 1
infer %23


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = add %4, %5 (hasExternalUses)
%7 = block 2
%8 = phi %7, %6, %5
%9 = phi %3, %6, %6, %6, %6, %6, %8
%10 = add %2, %9 (hasExternalUses)
%11 = phi %0, %10, %9
%12 = lshr %11, 8:i32 (hasExternalUses)
%13 = add %12, 1048320:i32
%14 = lshr %13, 16:i32
%15 = and %14, 8:i32 (hasExternalUses)
%16 = shl %12, %15
%17 = add %16, 520192:i32
%18 = lshr %17, 16:i32
%19 = and %18, 4:i32 (hasExternalUses)
%20 = shl %16, %19
%21 = add %20, 245760:i32
%22 = lshr %21, 16:i32
%23 = and %22, 2:i32 (hasExternalUses)
%24 = shl %20, %23
%25 = lshr %24, 15:i32
%26 = and %1, 2:i32
%27 = eq %26, 0:i32
blockpc %0 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %0 1 %29 1
%30:i32 = var
blockpc %7 0 %30 1
%31:i32 = var
blockpc %7 1 %31 1
%32:i32 = var
%33:i32 = var
pc %32 1
pc %33 1
infer %25


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 6
%3:i32 = var
%4 = block 2
%5:i32 = var
%6 = phi %4, %3, %5
%7 = phi %2, %3, %3, %3, %3, %3, %6
%8 = phi %0, %1, %7
%9 = lshr %8, 8:i32 (hasExternalUses)
%10:i32 = var
%11 = and %10, 8:i32
%12 = shl %9, %11
%13 = add %12, 520192:i32
%14 = lshr %13, 16:i32
%15 = and %14, 4:i32
%16 = or %15, %11
%17 = shl %12, %15
%18 = add %17, 245760:i32
%19 = lshr %18, 16:i32
%20 = and %19, 2:i32
%21 = or %16, %20
%22 = sub 14:i32, %21
%23 = shl %17, %20
%24 = lshr %23, 15:i32
%25 = add %22, %24
%26:i32 = var
%27 = and %26, 2:i32
%28 = eq %27, 0:i32
blockpc %0 0 %28 1
%29:i32 = var
blockpc %0 1 %29 1
%30:i32 = var
blockpc %4 0 %30 1
%31:i32 = var
blockpc %4 1 %31 1
%32:i32 = var
%33:i32 = var
pc %32 1
pc %33 1
infer %25


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3 = add %2, 520192:i32
%4 = lshr %3, 16:i32
%5 = and %4, 4:i32
%6 = or %5, %1
%7 = shl %2, %5
%8 = add %7, 245760:i32
%9 = lshr %8, 16:i32
%10 = and %9, 2:i32
%11 = or %6, %10
%12 = sub 14:i32, %11
%13 = shl %7, %10
%14 = lshr %13, 15:i32
%15 = add %12, %14 (hasExternalUses)
%16 = add %15, 7:i32
%17 = block 2
%18:i32 = var
%19 = and %18, 2:i32
%20 = eq %19, 0:i32
blockpc %17 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %17 1 %22 1
%23 = and %18, -8:i32
%24 = block 6
%25:i32 = var
%26:i32 = var
%27 = and %26, -8:i32
%28 = add %25, %27
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, %28, %27
%33 = phi %24, %28, %28, %28, %28, %28, %32
%34 = add %23, %33
%35 = phi %17, %34, %33
%36 = ult 16777215:i32, %35
%37:i32 = zext %36
%38 = eq %37, 0:i32
%39:i32 = var
pc %38 1
pc %39 1
infer %16


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13:i32 = var
%14 = add %13, 520192:i32
%15 = lshr %14, 16:i32
%16 = and %15, 4:i32
%17:i32 = var
%18 = add %17, 1048320:i32
%19 = lshr %18, 16:i32
%20 = and %19, 8:i32 (hasExternalUses)
%21 = or %16, %20
%22 = shl %13, %16
%23 = add %22, 245760:i32
%24 = lshr %23, 16:i32
%25 = and %24, 2:i32
%26 = or %21, %25
%27 = sub 14:i32, %26
%28 = shl %22, %25
%29 = lshr %28, 15:i32
%30 = add %27, %29 (hasExternalUses)
%31 = add %30, 7:i32
%32 = lshr %12, %31
%33:i32 = var
blockpc %0 0 %33 1
%34:i32 = var
blockpc %0 1 %34 1
%35:i32 = var
blockpc %8 0 %35 1
%36:i32 = var
blockpc %8 1 %36 1
%37:i32 = var
%38:i32 = var
pc %37 1
pc %38 1
infer %32


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13:i32 = var
%14 = lshr %13, 16:i32
%15 = and %14, 4:i32 (hasExternalUses)
%16:i32 = var
%17 = lshr %16, 16:i32
%18 = and %17, 8:i32 (hasExternalUses)
%19 = or %15, %18
%20:i32 = var
%21 = add %20, 245760:i32
%22 = lshr %21, 16:i32
%23 = and %22, 2:i32
%24 = or %19, %23
%25 = sub 14:i32, %24
%26 = shl %20, %23
%27 = lshr %26, 15:i32
%28 = add %25, %27 (hasExternalUses)
%29 = add %28, 7:i32
%30 = lshr %12, %29
%31 = and %30, 1:i32
%32:i32 = var
blockpc %0 0 %32 1
%33:i32 = var
blockpc %0 1 %33 1
%34:i32 = var
blockpc %8 0 %34 1
%35:i32 = var
blockpc %8 1 %35 1
%36:i32 = var
%37:i32 = var
pc %36 1
pc %37 1
infer %31


; start LHS (in $39)
%0:i32 = var
%1:i32 = var
%2 = shl %0, %1
%3 = add %2, 520192:i32
%4 = lshr %3, 16:i32
%5 = and %4, 4:i32
%6 = or %5, %1
%7 = shl %2, %5
%8 = add %7, 245760:i32
%9 = lshr %8, 16:i32
%10 = and %9, 2:i32
%11 = or %6, %10
%12 = sub 14:i32, %11
%13 = shl %7, %10
%14 = lshr %13, 15:i32
%15 = add %12, %14 (hasExternalUses)
%16 = shl %15, 1:i32
%17 = block 2
%18:i32 = var
%19 = and %18, 2:i32
%20 = eq %19, 0:i32
blockpc %17 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %17 1 %22 1
%23 = and %18, -8:i32
%24 = block 6
%25:i32 = var
%26:i32 = var
%27 = and %26, -8:i32
%28 = add %25, %27
%29 = block 2
%30:i32 = var
blockpc %29 0 %30 1
%31:i32 = var
blockpc %29 1 %31 1
%32 = phi %29, %28, %27
%33 = phi %24, %28, %28, %28, %28, %28, %32
%34 = add %23, %33
%35 = phi %17, %34, %33
%36 = ult 16777215:i32, %35
%37:i32 = zext %36
%38 = eq %37, 0:i32
%39:i32 = var
pc %38 1
pc %39 1
infer %16


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13:i32 = var
%14 = and %13, 4:i32
%15:i32 = var
%16 = and %15, 8:i32
%17 = or %14, %16
%18:i32 = var
%19 = lshr %18, 16:i32
%20 = and %19, 2:i32
%21 = or %17, %20
%22 = sub 14:i32, %21
%23:i32 = var
%24 = shl %23, %16 (hasExternalUses)
%25 = shl %24, %14 (hasExternalUses)
%26 = shl %25, %20
%27 = lshr %26, 15:i32
%28 = add %22, %27 (hasExternalUses)
%29 = add %28, 7:i32
%30 = lshr %12, %29
%31 = and %30, 1:i32
%32:i32 = var
%33 = or %31, %32
%34:i32 = var
blockpc %0 0 %34 1
%35:i32 = var
blockpc %0 1 %35 1
%36:i32 = var
blockpc %8 0 %36 1
%37:i32 = var
blockpc %8 1 %37 1
%38:i32 = var
%39:i32 = var
pc %38 1
pc %39 1
infer %33


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = and %3, -8:i32
%5 = block 6
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = phi %7, %6, %8
%10 = phi %5, %6, %6, %6, %6, %6, %9
%11 = add %4, %10 (hasExternalUses)
%12 = phi %2, %11, %10
%13:i32 = var
%14 = sub 14:i32, %13
%15:i32 = var
%16 = lshr %15, 15:i32
%17 = add %14, %16
%18 = add %17, 7:i32
%19 = lshr %12, %18
%20 = and %19, 1:i32
%21 = shl %17, 1:i32
%22 = or %20, %21 (hasExternalUses)
%23 = phi %1, 31:i32, %22
%24 = phi %0, 0:i32, %23
%25 = shl %24, 2:i32
%26 = lshr %12, 8:i32
%27 = eq %26, 0:i32
blockpc %0 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %0 1 %29 1
%30:i32 = var
blockpc %1 0 %30 1
%31:i32 = var
blockpc %1 1 %31 1
%32:i32 = var
blockpc %2 0 %32 1
%33:i32 = var
blockpc %2 1 %33 1
%34:i32 = var
blockpc %7 0 %34 1
%35:i32 = var
blockpc %7 1 %35 1
infer %25


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = block 6
%5:i32 = var
%6 = block 2
%7:i32 = var
%8 = phi %6, %5, %7
%9 = phi %4, %5, %5, %5, %5, %5, %8
%10 = add %3, %9 (hasExternalUses)
%11 = phi %2, %10, %9
%12:i32 = var
%13:i32 = var
%14 = add %12, %13
%15 = add %14, 7:i32
%16 = lshr %11, %15
%17 = and %16, 1:i32
%18 = shl %14, 1:i32
%19 = or %17, %18 (hasExternalUses)
%20 = phi %1, 31:i32, %19
%21 = phi %0, 0:i32, %20
%22 = shl %21, 2:i32
%23 = add 3408:i32, %22
%24 = lshr %11, 8:i32
%25 = eq %24, 0:i32
blockpc %0 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %0 1 %27 1
%28:i32 = var
blockpc %1 0 %28 1
%29:i32 = var
blockpc %1 1 %29 1
%30:i32 = var
blockpc %2 0 %30 1
%31:i32 = var
blockpc %2 1 %31 1
%32:i32 = var
blockpc %6 0 %32 1
%33:i32 = var
blockpc %6 1 %33 1
infer %23


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 28:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
infer %9


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 20:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
infer %9


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 16:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
infer %9


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = and %3, -8:i32
%5 = block 6
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = phi %7, %6, %8
%10 = phi %5, %6, %6, %6, %6, %6, %9
%11 = add %4, %10 (hasExternalUses)
%12 = phi %2, %11, %10
%13:i32 = var
%14 = sub 14:i32, %13
%15:i32 = var
%16 = lshr %15, 15:i32
%17 = add %14, %16
%18 = add %17, 7:i32
%19 = lshr %12, %18
%20 = and %19, 1:i32
%21 = shl %17, 1:i32
%22 = or %20, %21 (hasExternalUses)
%23 = phi %1, 31:i32, %22
%24 = phi %0, 0:i32, %23
%25 = shl 1:i32, %24
%26 = lshr %12, 8:i32
%27 = eq %26, 0:i32
blockpc %0 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %0 1 %29 1
%30:i32 = var
blockpc %1 0 %30 1
%31:i32 = var
blockpc %1 1 %31 1
%32:i32 = var
blockpc %2 0 %32 1
%33:i32 = var
blockpc %2 1 %33 1
%34:i32 = var
blockpc %7 0 %34 1
%35:i32 = var
blockpc %7 1 %35 1
infer %25


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = block 6
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = phi %7, %6, %8
%10 = phi %5, %6, %6, %6, %6, %6, %9
%11 = add %4, %10 (hasExternalUses)
%12 = phi %3, %11, %10
%13:i32 = var
%14:i32 = var
%15 = add %13, %14
%16 = add %15, 7:i32
%17 = lshr %12, %16
%18 = and %17, 1:i32
%19 = shl %15, 1:i32
%20 = or %18, %19 (hasExternalUses)
%21 = phi %2, 31:i32, %20
%22 = phi %1, 0:i32, %21
%23 = shl 1:i32, %22 (hasExternalUses)
%24 = and %0, %23
%25 = lshr %12, 8:i32
%26 = eq %25, 0:i32
blockpc %1 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %1 1 %28 1
%29:i32 = var
blockpc %2 0 %29 1
%30:i32 = var
blockpc %2 1 %30 1
%31:i32 = var
blockpc %3 0 %31 1
%32:i32 = var
blockpc %3 1 %32 1
%33:i32 = var
blockpc %7 0 %33 1
%34:i32 = var
blockpc %7 1 %34 1
infer %24


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = block 6
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = phi %7, %6, %8
%10 = phi %5, %6, %6, %6, %6, %6, %9
%11 = phi %3, %4, %10
%12:i32 = var
%13 = add %12, 7:i32
%14 = lshr %11, %13
%15 = and %14, 1:i32
%16 = shl %12, 1:i32
%17 = or %15, %16 (hasExternalUses)
%18 = phi %2, 31:i32, %17
%19 = phi %1, 0:i32, %18
%20 = shl 1:i32, %19 (hasExternalUses)
%21 = and %0, %20
%22 = eq %21, 0:i32
%23 = lshr %11, 8:i32
%24 = eq %23, 0:i32
blockpc %1 0 %24 1
%25:i32 = zext %24
%26 = eq %25, 0:i32
blockpc %1 1 %26 1
%27 = ult 16777215:i32, %11
blockpc %2 0 %27 1
%28:i32 = var
blockpc %2 1 %28 1
%29:i32 = var
blockpc %3 0 %29 1
%30:i32 = var
blockpc %3 1 %30 1
%31:i32 = var
blockpc %7 0 %31 1
%32:i32 = var
blockpc %7 1 %32 1
infer %22


; start LHS (in $39)
%0:i32 = var
%1 = block 2
%2 = block 2
%3 = block 2
%4:i32 = var
%5 = block 6
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = phi %7, %6, %8
%10 = phi %5, %6, %6, %6, %6, %6, %9
%11 = add %4, %10 (hasExternalUses)
%12 = phi %3, %11, %10
%13:i32 = var
%14:i32 = var
%15 = add %13, %14
%16 = add %15, 7:i32
%17 = lshr %12, %16
%18 = and %17, 1:i32
%19 = shl %15, 1:i32
%20 = or %18, %19 (hasExternalUses)
%21 = phi %2, 31:i32, %20
%22 = phi %1, 0:i32, %21
%23 = shl 1:i32, %22 (hasExternalUses)
%24 = or %0, %23
%25 = lshr %12, 8:i32
%26 = eq %25, 0:i32
blockpc %1 0 %26 1
%27:i32 = zext %26
%28 = eq %27, 0:i32
blockpc %1 1 %28 1
%29:i32 = var
blockpc %2 0 %29 1
%30:i32 = var
blockpc %2 1 %30 1
%31:i32 = var
blockpc %3 0 %31 1
%32:i32 = var
blockpc %3 1 %32 1
%33:i32 = var
blockpc %7 0 %33 1
%34:i32 = var
blockpc %7 1 %34 1
%35:i32 = var
pc %35 1
infer %24


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 24:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15:i32 = var
%16 = block 2
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21:i32 = var
%22:i32 = var
%23 = phi %6, %21, %22
%24 = phi %0, %21, %21, %21, %21, %21, %23
%25 = add %20, %24
%26 = phi %17, %25, %24
%27 = lshr %26, 8:i32
%28 = eq %27, 0:i32
blockpc %16 0 %28 1
%29:i32 = var
blockpc %16 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34 = phi %30, 31:i32, %33
%35 = phi %16, 0:i32, %34
%36 = shl 1:i32, %35
%37 = and %15, %36
%38 = eq %37, 0:i32
pc %38 1
infer %9


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 12:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15:i32 = var
%16 = block 2
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21:i32 = var
%22:i32 = var
%23 = phi %6, %21, %22
%24 = phi %0, %21, %21, %21, %21, %21, %23
%25 = add %20, %24
%26 = phi %17, %25, %24
%27 = lshr %26, 8:i32
%28 = eq %27, 0:i32
blockpc %16 0 %28 1
%29:i32 = var
blockpc %16 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34 = phi %30, 31:i32, %33
%35 = phi %16, 0:i32, %34
%36 = shl 1:i32, %35
%37 = and %15, %36
%38 = eq %37, 0:i32
pc %38 1
infer %9


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 8:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15:i32 = var
%16 = block 2
%17 = block 2
%18:i32 = var
blockpc %17 0 %18 1
%19:i32 = var
blockpc %17 1 %19 1
%20:i32 = var
%21:i32 = var
%22:i32 = var
%23 = phi %6, %21, %22
%24 = phi %0, %21, %21, %21, %21, %21, %23
%25 = add %20, %24
%26 = phi %17, %25, %24
%27 = lshr %26, 8:i32
%28 = eq %27, 0:i32
blockpc %16 0 %28 1
%29:i32 = var
blockpc %16 1 %29 1
%30 = block 2
%31:i32 = var
blockpc %30 0 %31 1
%32:i32 = var
blockpc %30 1 %32 1
%33:i32 = var
%34 = phi %30, 31:i32, %33
%35 = phi %16, 0:i32, %34
%36 = shl 1:i32, %35
%37 = and %15, %36
%38 = eq %37, 0:i32
pc %38 1
infer %9


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
blockpc %4 0 %5 1
%6:i32 = var
blockpc %4 1 %6 1
%7:i32 = var
%8 = block 6
%9:i32 = var
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14 = phi %10, %9, %13
%15 = phi %8, %9, %9, %9, %9, %9, %14
%16 = phi %4, %7, %15
%17 = lshr %16, 8:i32
%18 = eq %17, 0:i32
blockpc %3 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %3 1 %20 1
%21 = block 2
%22 = ult 16777215:i32, %16
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25 = phi %21, 31:i32, %24
%26 = phi %3, 0:i32, %25
%27 = shl 1:i32, %26
%28 = and %2, %27
%29 = eq %28, 0:i32
%30:i32 = zext %29
%31 = eq %30, 0:i32
pc %31 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, -8:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
blockpc %4 0 %5 1
%6:i32 = var
blockpc %4 1 %6 1
%7:i32 = var
%8 = block 6
%9:i32 = var
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14 = phi %10, %9, %13
%15 = phi %8, %9, %9, %9, %9, %9, %14
%16 = phi %4, %7, %15
%17 = lshr %16, 8:i32
%18 = eq %17, 0:i32
blockpc %3 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %3 1 %20 1
%21 = block 2
%22 = ult 16777215:i32, %16
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25 = phi %21, 31:i32, %24
%26 = phi %3, 0:i32, %25
%27 = shl 1:i32, %26
%28 = and %2, %27
%29 = eq %28, 0:i32
%30:i32 = zext %29
%31 = eq %30, 0:i32
pc %31 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3:i32 = var
%4 = and %3, -8:i32
%5 = block 6
%6:i32 = var
%7:i32 = var
%8 = and %7, -8:i32 (hasExternalUses)
%9 = add %6, %8 (hasExternalUses)
%10 = block 2
%11 = phi %10, %9, %8
%12 = phi %5, %9, %9, %9, %9, %9, %11
%13 = add %4, %12 (hasExternalUses)
%14 = phi %2, %13, %12
%15 = eq %1, %14
%16 = and %3, 2:i32
%17 = eq %16, 0:i32
blockpc %2 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %2 1 %19 1
%20 = and %7, 1:i32
%21 = eq %20, 0:i32
blockpc %10 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %10 1 %23 1
%24:i32 = var
%25 = block 2
%26:i32 = var
blockpc %25 0 %26 1
%27:i32 = var
blockpc %25 1 %27 1
%28 = block 2
%29:i32 = var
blockpc %28 0 %29 1
%30:i32 = var
blockpc %28 1 %30 1
%31:i32 = var
%32 = phi %28, 31:i32, %31
%33 = phi %25, 0:i32, %32
%34 = shl 1:i32, %33
%35 = and %24, %34
%36 = eq %35, 0:i32
%37:i32 = zext %36
%38 = eq %37, 0:i32
pc %38 1
infer %15


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = and %3, -8:i32
%5 = block 6
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = phi %7, %6, %8
%10 = phi %5, %6, %6, %6, %6, %6, %9
%11 = add %4, %10 (hasExternalUses)
%12 = phi %2, %11, %10
%13:i32 = var
%14 = sub 14:i32, %13
%15:i32 = var
%16 = lshr %15, 15:i32
%17 = add %14, %16
%18 = add %17, 7:i32
%19 = lshr %12, %18
%20 = and %19, 1:i32
%21 = shl %17, 1:i32
%22 = or %20, %21 (hasExternalUses)
%23 = phi %1, 31:i32, %22
%24 = phi %0, 0:i32, %23
%25 = lshr %24, 1:i32
%26 = lshr %12, 8:i32
%27 = eq %26, 0:i32
blockpc %0 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %0 1 %29 1
%30:i32 = var
blockpc %1 0 %30 1
%31:i32 = var
blockpc %1 1 %31 1
%32:i32 = var
blockpc %2 0 %32 1
%33:i32 = var
blockpc %2 1 %33 1
%34:i32 = var
blockpc %7 0 %34 1
%35:i32 = var
blockpc %7 1 %35 1
%36:i32 = var
%37:i32 = var
pc %36 1
pc %37 1
infer %25


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = block 6
%5:i32 = var
%6 = block 2
%7:i32 = var
%8 = phi %6, %5, %7
%9 = phi %4, %5, %5, %5, %5, %5, %8
%10 = add %3, %9 (hasExternalUses)
%11 = phi %2, %10, %9
%12:i32 = var
%13:i32 = var
%14 = add %12, %13
%15 = add %14, 7:i32
%16 = lshr %11, %15
%17 = and %16, 1:i32
%18 = shl %14, 1:i32
%19 = or %17, %18 (hasExternalUses)
%20 = phi %1, 31:i32, %19
%21 = phi %0, 0:i32, %20
%22 = lshr %21, 1:i32
%23 = sub 25:i32, %22
%24 = lshr %11, 8:i32
%25 = eq %24, 0:i32
blockpc %0 0 %25 1
%26:i32 = zext %25
%27 = eq %26, 0:i32
blockpc %0 1 %27 1
%28:i32 = var
blockpc %1 0 %28 1
%29:i32 = var
blockpc %1 1 %29 1
%30:i32 = var
blockpc %2 0 %30 1
%31:i32 = var
blockpc %2 1 %31 1
%32:i32 = var
blockpc %6 0 %32 1
%33:i32 = var
blockpc %6 1 %33 1
%34:i32 = var
%35:i32 = var
pc %34 1
pc %35 1
infer %23


; start LHS (in $39)
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4 = and %3, -8:i32
%5 = block 6
%6:i32 = var
%7 = block 2
%8:i32 = var
%9 = phi %7, %6, %8
%10 = phi %5, %6, %6, %6, %6, %6, %9
%11 = add %4, %10 (hasExternalUses)
%12 = phi %2, %11, %10
%13:i32 = var
%14 = sub 14:i32, %13
%15:i32 = var
%16 = lshr %15, 15:i32
%17 = add %14, %16
%18 = add %17, 7:i32
%19 = lshr %12, %18
%20 = and %19, 1:i32
%21 = shl %17, 1:i32
%22 = or %20, %21 (hasExternalUses)
%23 = phi %1, 31:i32, %22
%24 = phi %0, 0:i32, %23
%25 = eq %24, 31:i32
%26 = lshr %12, 8:i32
%27 = eq %26, 0:i32
blockpc %0 0 %27 1
%28:i32 = zext %27
%29 = eq %28, 0:i32
blockpc %0 1 %29 1
%30:i32 = var
blockpc %1 0 %30 1
%31:i32 = var
blockpc %1 1 %31 1
%32:i32 = var
blockpc %2 0 %32 1
%33:i32 = var
blockpc %2 1 %33 1
%34:i32 = var
blockpc %7 0 %34 1
%35:i32 = var
blockpc %7 1 %35 1
%36:i32 = var
%37:i32 = var
pc %36 1
pc %37 1
infer %25


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = and %1, -8:i32
%3 = block 6
%4:i32 = var
%5:i32 = var
%6 = and %5, -8:i32 (hasExternalUses)
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %6
%10 = phi %3, %7, %7, %7, %7, %7, %9
%11 = add %2, %10 (hasExternalUses)
%12 = phi %0, %11, %10
%13 = block 2
%14 = block 2
%15 = block 2
%16:i32 = var
%17 = lshr %12, %16
%18 = and %17, 1:i32
%19:i32 = var
%20:i32 = var
%21 = add %19, %20 (hasExternalUses)
%22 = shl %21, 1:i32
%23 = or %18, %22 (hasExternalUses)
%24 = phi %15, 31:i32, %23
%25 = phi %14, 0:i32, %24
%26 = lshr %25, 1:i32
%27 = sub 25:i32, %26
%28 = phi %13, 0:i32, %27
%29 = shl %12, %28
%30:i32 = var
blockpc %0 0 %30 1
%31:i32 = var
blockpc %0 1 %31 1
%32:i32 = var
blockpc %8 0 %32 1
%33:i32 = var
blockpc %8 1 %33 1
%34:i32 = var
blockpc %13 0 %34 1
%35:i32 = var
blockpc %13 1 %35 1
%36:i32 = var
blockpc %14 0 %36 1
%37:i32 = var
blockpc %14 1 %37 1
%38:i32 = var
blockpc %15 0 %38 1
%39:i32 = var
blockpc %15 1 %39 1
%40:i32 = var
%41:i32 = var
pc %40 1
pc %41 1
infer %29


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = and %5, 2:i32
%7 = eq %6, 0:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = and %5, -8:i32
%11 = block 6
%12:i32 = var
%13:i32 = var
%14 = and %13, -8:i32
%15 = add %12, %14
%16 = block 2
%17:i32 = var
%18 = eq %17, 0:i32
blockpc %16 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %16 1 %20 1
%21 = phi %16, %15, %14
%22 = phi %11, %15, %15, %15, %15, %15, %21
%23 = add %10, %22
%24 = phi %4, %23, %22
%25 = eq %3, %24
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %27 1
pc %28 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 31:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = and %5, 2:i32
%7 = eq %6, 0:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = and %5, -8:i32
%11 = block 6
%12:i32 = var
%13:i32 = var
%14 = and %13, -8:i32
%15 = add %12, %14
%16 = block 2
%17:i32 = var
%18 = eq %17, 0:i32
blockpc %16 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %16 1 %20 1
%21 = phi %16, %15, %14
%22 = phi %11, %15, %15, %15, %15, %15, %21
%23 = add %10, %22
%24 = phi %4, %23, %22
%25 = eq %3, %24
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %27 1
pc %28 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = lshr %0, 31:i32
%2 = shl %1, 2:i32
%3:i32 = var
%4 = and %3, -8:i32
%5 = block 2
%6:i32 = var
%7 = and %6, 2:i32
%8 = eq %7, 0:i32
blockpc %5 0 %8 1
%9:i32 = zext %8
%10 = eq %9, 0:i32
blockpc %5 1 %10 1
%11 = and %6, -8:i32
%12 = block 6
%13:i32 = var
%14:i32 = var
%15 = and %14, -8:i32
%16 = add %13, %15
%17 = block 2
%18:i32 = var
%19 = eq %18, 0:i32
blockpc %17 0 %19 1
%20:i32 = zext %19
%21 = eq %20, 0:i32
blockpc %17 1 %21 1
%22 = phi %17, %16, %15
%23 = phi %12, %16, %16, %16, %16, %16, %22
%24 = add %11, %23
%25 = phi %5, %24, %23
%26 = eq %4, %25
%27:i32 = zext %26
%28 = eq %27, 0:i32
%29:i32 = var
pc %28 1
pc %29 1
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = lshr %2, 31:i32
%4 = shl %3, 2:i32
%5 = add %1, %4
%6:i32 = var
%7 = and %6, -8:i32
%8 = block 2
%9:i32 = var
%10 = and %9, 2:i32
%11 = eq %10, 0:i32
blockpc %8 0 %11 1
%12:i32 = zext %11
%13 = eq %12, 0:i32
blockpc %8 1 %13 1
%14 = and %9, -8:i32
%15 = block 6
%16:i32 = var
%17:i32 = var
%18 = and %17, -8:i32
%19 = add %16, %18
%20 = block 2
%21:i32 = var
%22 = eq %21, 0:i32
blockpc %20 0 %22 1
%23:i32 = zext %22
%24 = eq %23, 0:i32
blockpc %20 1 %24 1
%25 = phi %20, %19, %18
%26 = phi %15, %19, %19, %19, %19, %19, %25
%27 = add %14, %26
%28 = phi %8, %27, %26
%29 = eq %7, %28
%30:i32 = zext %29
%31 = eq %30, 0:i32
%32:i32 = var
pc %31 1
pc %32 1
infer %5


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = and %5, 2:i32
%7 = eq %6, 0:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = and %5, -8:i32
%11 = block 6
%12:i32 = var
%13:i32 = var
%14 = and %13, -8:i32
%15 = add %12, %14
%16 = block 2
%17:i32 = var
%18 = eq %17, 0:i32
blockpc %16 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %16 1 %20 1
%21 = phi %16, %15, %14
%22 = phi %11, %15, %15, %15, %15, %15, %21
%23 = add %10, %22
%24 = phi %4, %23, %22
%25 = eq %3, %24
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %27 1
pc %28 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = shl %0, 1:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = and %5, 2:i32
%7 = eq %6, 0:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = and %5, -8:i32
%11 = block 6
%12:i32 = var
%13:i32 = var
%14 = and %13, -8:i32
%15 = add %12, %14
%16 = block 2
%17:i32 = var
%18 = eq %17, 0:i32
blockpc %16 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %16 1 %20 1
%21 = phi %16, %15, %14
%22 = phi %11, %15, %15, %15, %15, %15, %21
%23 = add %10, %22
%24 = phi %4, %23, %22
%25 = eq %3, %24
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %27 1
pc %28 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = and %5, 2:i32
%7 = eq %6, 0:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = and %5, -8:i32
%11 = block 6
%12:i32 = var
%13:i32 = var
%14 = and %13, -8:i32
%15 = add %12, %14
%16 = block 2
%17:i32 = var
%18 = eq %17, 0:i32
blockpc %16 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %16 1 %20 1
%21 = phi %16, %15, %14
%22 = phi %11, %15, %15, %15, %15, %15, %21
%23 = add %10, %22
%24 = phi %4, %23, %22
%25 = eq %3, %24
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %27 1
pc %28 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, -8:i32
%2:i32 = var
%3 = and %2, -8:i32
%4 = block 2
%5:i32 = var
%6 = and %5, 2:i32
%7 = eq %6, 0:i32
blockpc %4 0 %7 1
%8:i32 = zext %7
%9 = eq %8, 0:i32
blockpc %4 1 %9 1
%10 = and %5, -8:i32
%11 = block 6
%12:i32 = var
%13:i32 = var
%14 = and %13, -8:i32
%15 = add %12, %14
%16 = block 2
%17:i32 = var
%18 = eq %17, 0:i32
blockpc %16 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %16 1 %20 1
%21 = phi %16, %15, %14
%22 = phi %11, %15, %15, %15, %15, %15, %21
%23 = add %10, %22
%24 = phi %4, %23, %22
%25 = eq %3, %24
%26:i32 = zext %25
%27 = eq %26, 0:i32
%28:i32 = var
pc %27 1
pc %28 1
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = and %0, -8:i32
%2 = block 2
%3:i32 = var
%4 = and %3, -8:i32
%5 = block 6
%6:i32 = var
%7:i32 = var
%8 = and %7, -8:i32 (hasExternalUses)
%9 = add %6, %8 (hasExternalUses)
%10 = block 2
%11 = phi %10, %9, %8
%12 = phi %5, %9, %9, %9, %9, %9, %11
%13 = add %4, %12 (hasExternalUses)
%14 = phi %2, %13, %12
%15 = eq %1, %14
%16 = and %3, 2:i32
%17 = eq %16, 0:i32
blockpc %2 0 %17 1
%18:i32 = zext %17
%19 = eq %18, 0:i32
blockpc %2 1 %19 1
%20 = and %7, 1:i32
%21 = eq %20, 0:i32
blockpc %10 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %10 1 %23 1
%24:i32 = var
%25 = and %24, -8:i32
%26 = eq %25, %14
%27:i32 = zext %26
%28 = eq %27, 0:i32
%29:i32 = var
pc %28 1
pc %29 1
infer %15


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 24:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15:i32 = var
%16 = and %15, -8:i32
%17 = block 2
%18:i32 = var
%19 = and %18, 2:i32
%20 = eq %19, 0:i32
blockpc %17 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %17 1 %22 1
%23 = and %18, -8:i32
%24 = and %10, -8:i32
%25 = add %3, %24
%26 = phi %6, %25, %24
%27 = phi %0, %25, %25, %25, %25, %25, %26
%28 = add %23, %27
%29 = phi %17, %28, %27
%30 = eq %16, %29
%31:i32 = zext %30
%32 = eq %31, 0:i32
%33:i32 = var
pc %32 1
pc %33 1
infer %9


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 12:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15:i32 = var
%16 = and %15, -8:i32
%17 = block 2
%18:i32 = var
%19 = and %18, 2:i32
%20 = eq %19, 0:i32
blockpc %17 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %17 1 %22 1
%23 = and %18, -8:i32
%24 = and %10, -8:i32
%25 = add %3, %24
%26 = phi %6, %25, %24
%27 = phi %0, %25, %25, %25, %25, %25, %26
%28 = add %23, %27
%29 = phi %17, %28, %27
%30 = eq %16, %29
%31:i32 = zext %30
%32 = eq %31, 0:i32
%33:i32 = var
pc %32 1
pc %33 1
infer %9


; start LHS (in $39)
%0 = block 6
%1:i32 = var
%2 = add %1, -8:i32 (hasExternalUses)
%3:i32 = var
%4 = sub 0:i32, %3
%5 = add %2, %4 (hasExternalUses)
%6 = block 2
%7 = phi %6, %5, %2
%8 = phi %0, %5, %5, %5, %5, %5, %7
%9 = add %8, 8:i32
%10:i32 = var
%11 = and %10, 1:i32
%12 = eq %11, 0:i32
blockpc %6 0 %12 1
%13:i32 = zext %12
%14 = eq %13, 0:i32
blockpc %6 1 %14 1
%15:i32 = var
%16 = and %15, -8:i32
%17 = block 2
%18:i32 = var
%19 = and %18, 2:i32
%20 = eq %19, 0:i32
blockpc %17 0 %20 1
%21:i32 = zext %20
%22 = eq %21, 0:i32
blockpc %17 1 %22 1
%23 = and %18, -8:i32
%24 = and %10, -8:i32
%25 = add %3, %24
%26 = phi %6, %25, %24
%27 = phi %0, %25, %25, %25, %25, %25, %26
%28 = add %23, %27
%29 = phi %17, %28, %27
%30 = eq %16, %29
%31:i32 = zext %30
%32 = eq %31, 0:i32
%33:i32 = var
pc %32 1
pc %33 1
infer %9


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2:i32 = var
%3 = phi %0, %1, %2
%4 = add %3, 8:i32
%5:i32 = var
%6 = block 2
%7 = block 2
%8:i32 = var
blockpc %7 0 %8 1
%9:i32 = var
blockpc %7 1 %9 1
%10:i32 = var
%11 = block 6
%12:i32 = var
%13 = block 2
%14:i32 = var
blockpc %13 0 %14 1
%15:i32 = var
blockpc %13 1 %15 1
%16:i32 = var
%17 = phi %13, %12, %16
%18 = phi %11, %12, %12, %12, %12, %12, %17
%19 = phi %7, %10, %18
%20 = lshr %19, 8:i32
%21 = eq %20, 0:i32
blockpc %6 0 %21 1
%22:i32 = zext %21
%23 = eq %22, 0:i32
blockpc %6 1 %23 1
%24 = block 2
%25:i32 = var
blockpc %24 0 %25 1
%26:i32 = var
blockpc %24 1 %26 1
%27:i32 = var
%28 = phi %24, 31:i32, %27
%29 = phi %6, 0:i32, %28
%30 = shl 1:i32, %29
%31 = and %5, %30
%32 = eq %31, 0:i32
%33:i32 = zext %32
%34 = eq %33, 0:i32
pc %34 1
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = block 2
%4 = block 2
%5:i32 = var
blockpc %4 0 %5 1
%6:i32 = var
blockpc %4 1 %6 1
%7:i32 = var
%8 = block 6
%9:i32 = var
%10 = block 2
%11:i32 = var
blockpc %10 0 %11 1
%12:i32 = var
blockpc %10 1 %12 1
%13:i32 = var
%14 = phi %10, %9, %13
%15 = phi %8, %9, %9, %9, %9, %9, %14
%16 = phi %4, %7, %15
%17 = lshr %16, 8:i32
%18 = eq %17, 0:i32
blockpc %3 0 %18 1
%19:i32 = zext %18
%20 = eq %19, 0:i32
blockpc %3 1 %20 1
%21 = block 2
%22 = ult 16777215:i32, %16
blockpc %21 0 %22 1
%23:i32 = var
blockpc %21 1 %23 1
%24:i32 = var
%25 = phi %21, 31:i32, %24
%26 = phi %3, 0:i32, %25
%27 = shl 1:i32, %26
%28 = and %2, %27
%29 = eq %28, 0:i32
%30:i32 = zext %29
%31 = eq %30, 0:i32
pc %31 1
infer %1


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 6
%3:i32 = var
%4 = add %3, -8:i32 (hasExternalUses)
%5:i32 = var
%6 = sub 0:i32, %5
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %4
%10 = phi %2, %7, %7, %7, %7, %7, %9
%11 = phi %0, %1, %10
%12 = add %11, 8:i32
%13:i32 = var
%14 = and %13, 1:i32
%15 = eq %14, 0:i32
blockpc %8 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %8 1 %17 1
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23:i32 = var
%24:i32 = var
%25:i32 = var
%26 = phi %8, %24, %25
%27 = phi %2, %24, %24, %24, %24, %24, %26
%28 = phi %20, %23, %27
%29 = lshr %28, 8:i32
%30 = eq %29, 0:i32
blockpc %19 0 %30 1
%31:i32 = var
blockpc %19 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35:i32 = var
%36 = phi %32, 31:i32, %35
%37 = phi %19, 0:i32, %36
%38 = shl 1:i32, %37
%39 = and %18, %38
%40 = eq %39, 0:i32
%41:i32 = zext %40
%42 = eq %41, 0:i32
pc %42 1
infer %12


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 6
%3:i32 = var
%4 = add %3, -8:i32 (hasExternalUses)
%5:i32 = var
%6 = sub 0:i32, %5
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %4
%10 = phi %2, %7, %7, %7, %7, %7, %9
%11 = phi %0, %1, %10
%12 = add %11, 12:i32
%13:i32 = var
%14 = and %13, 1:i32
%15 = eq %14, 0:i32
blockpc %8 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %8 1 %17 1
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23:i32 = var
%24:i32 = var
%25:i32 = var
%26 = phi %8, %24, %25
%27 = phi %2, %24, %24, %24, %24, %24, %26
%28 = phi %20, %23, %27
%29 = lshr %28, 8:i32
%30 = eq %29, 0:i32
blockpc %19 0 %30 1
%31:i32 = var
blockpc %19 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35:i32 = var
%36 = phi %32, 31:i32, %35
%37 = phi %19, 0:i32, %36
%38 = shl 1:i32, %37
%39 = and %18, %38
%40 = eq %39, 0:i32
%41:i32 = zext %40
%42 = eq %41, 0:i32
pc %42 1
infer %12


; start LHS (in $39)
%0 = block 2
%1:i32 = var
%2 = block 6
%3:i32 = var
%4 = add %3, -8:i32 (hasExternalUses)
%5:i32 = var
%6 = sub 0:i32, %5
%7 = add %4, %6 (hasExternalUses)
%8 = block 2
%9 = phi %8, %7, %4
%10 = phi %2, %7, %7, %7, %7, %7, %9
%11 = phi %0, %1, %10
%12 = add %11, 24:i32
%13:i32 = var
%14 = and %13, 1:i32
%15 = eq %14, 0:i32
blockpc %8 0 %15 1
%16:i32 = zext %15
%17 = eq %16, 0:i32
blockpc %8 1 %17 1
%18:i32 = var
%19 = block 2
%20 = block 2
%21:i32 = var
blockpc %20 0 %21 1
%22:i32 = var
blockpc %20 1 %22 1
%23:i32 = var
%24:i32 = var
%25:i32 = var
%26 = phi %8, %24, %25
%27 = phi %2, %24, %24, %24, %24, %24, %26
%28 = phi %20, %23, %27
%29 = lshr %28, 8:i32
%30 = eq %29, 0:i32
blockpc %19 0 %30 1
%31:i32 = var
blockpc %19 1 %31 1
%32 = block 2
%33:i32 = var
blockpc %32 0 %33 1
%34:i32 = var
blockpc %32 1 %34 1
%35:i32 = var
%36 = phi %32, 31:i32, %35
%37 = phi %19, 0:i32, %36
%38 = shl 1:i32, %37
%39 = and %18, %38
%40 = eq %39, 0:i32
%41:i32 = zext %40
%42 = eq %41, 0:i32
pc %42 1
infer %12


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -1:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2 = eq %1, 0:i32
infer %2


; start LHS (in $39)
%0:i32 = var
%1 = add %0, -1:i32 (hasExternalUses)
%2 = eq %1, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
infer %4


; start LHS (in $39)
%0:i32 = var
%1 = add %0, 8:i32
infer %1


; start LHS (in $39)
%0:i32 = var
%1 = eq %0, 0:i32
infer %1


; function: $40

; start LHS (in $40)
%0:i32 = var
%1 = sle 8192:i32, %0
infer %1


; start LHS (in $40)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
infer %2


; start LHS (in $40)
%0:i32 = var
%1 = and %0, 3:i32
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = and %0, 3:i32
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = and %0, 3:i32
%2:i32 = var
%3 = and %2, 3:i32
%4 = eq %1, %3
infer %4


; start LHS (in $40)
%0:i32 = var
%1 = and %0, 3:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = and %0, 3:i32
%2 = eq %1, 0:i32
%3:i32 = var
%4 = and %3, 3:i32
%5:i32 = var
%6 = and %5, 3:i32
%7 = eq %4, %6
pc %7 1
infer %2


; start LHS (in $40)
%0:i32 = var
%1 = eq %0, 0:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = sub %0, 1:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = and %2, -4:i32
%4 = and %0, 3:i32
%5:i32 = var
%6 = and %5, 3:i32
%7 = eq %4, %6
pc %7 1
infer %3


; start LHS (in $40)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = and %2, -4:i32 (hasExternalUses)
%4 = sub %3, 64:i32
%5 = and %0, 3:i32
%6:i32 = var
%7 = and %6, 3:i32
%8 = eq %5, %7
pc %8 1
infer %4


; start LHS (in $40)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = and %3, -4:i32 (hasExternalUses)
%5 = sub %4, 64:i32
%6 = sle %0, %5
%7 = and %1, 3:i32
%8:i32 = var
%9 = and %8, 3:i32
%10 = eq %7, %9
pc %10 1
infer %6


; start LHS (in $40)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = and %3, -4:i32 (hasExternalUses)
%5 = sub %4, 64:i32
%6 = sle %0, %5
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9 = and %1, 3:i32
%10:i32 = var
%11 = and %10, 3:i32
%12 = eq %9, %11
pc %12 1
infer %8


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 24:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 24:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 28:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 28:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 32:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 32:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 36:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 36:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 40:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 40:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 44:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 44:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 48:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 48:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 52:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 52:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 56:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 56:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 60:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 60:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 64:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 64:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = and %3, -4:i32 (hasExternalUses)
%5 = slt %0, %4
%6 = and %1, 3:i32
%7:i32 = var
%8 = and %7, 3:i32
%9 = eq %6, %8
pc %9 1
infer %5


; start LHS (in $40)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = and %3, -4:i32 (hasExternalUses)
%5 = slt %0, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = and %1, 3:i32
%9:i32 = var
%10 = and %9, 3:i32
%11 = eq %8, %10
pc %11 1
infer %7


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
pc %6 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = sub %2, 4:i32
%4 = and %0, 3:i32
%5:i32 = var
%6 = and %5, 3:i32
%7 = eq %4, %6
%8:i32 = zext %7
%9 = eq %8, 0:i32
pc %9 1
infer %3


; start LHS (in $40)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = sub %3, 4:i32
%5 = slt %0, %4
%6 = and %1, 3:i32
%7:i32 = var
%8 = and %7, 3:i32
%9 = eq %6, %8
%10:i32 = zext %9
%11 = eq %10, 0:i32
pc %11 1
infer %5


; start LHS (in $40)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = sub %3, 4:i32
%5 = slt %0, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = and %1, 3:i32
%9:i32 = var
%10 = and %9, 3:i32
%11 = eq %8, %10
%12:i32 = zext %11
%13 = eq %12, 0:i32
pc %13 1
infer %7


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %8 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %8 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %8 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 2:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %8 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 3:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %8 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 3:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %8 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %8 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = and %2, 3:i32
%4:i32 = var
%5 = and %4, 3:i32
%6 = eq %3, %5
%7:i32 = zext %6
%8 = eq %7, 0:i32
pc %8 1
infer %1


; start LHS (in $40)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = slt %0, %3
infer %4


; start LHS (in $40)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = slt %0, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
infer %6


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $40)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; function: $41

; start LHS (in $41)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
infer %2


; start LHS (in $41)
%0:i32 = var
%1 = and %0, 255:i32
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = sle 67:i32, %0
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = and %0, 3:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = and %0, 3:i32
%2 = ne %1, 0:i32
%3:i32 = var
%4 = sle 67:i32, %3
pc %4 1
infer %2


; start LHS (in $41)
%0:i32 = var
%1 = and %0, 3:i32
%2 = ne %1, 0:i32
%3:i32 = zext %2
%4 = eq %3, 0:i32
%5:i32 = var
%6 = sle 67:i32, %5
pc %6 1
infer %4


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 1:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = and %2, -4:i32
%4 = sle 67:i32, %1
pc %4 1
infer %3


; start LHS (in $41)
%0:i32 = var
%1 = and %0, 255:i32 (hasExternalUses)
%2 = shl %1, 8:i32
%3:i32 = var
%4 = sle 67:i32, %3
pc %4 1
infer %2


; start LHS (in $41)
%0:i32 = var
%1 = and %0, 255:i32 (hasExternalUses)
%2 = shl %1, 8:i32
%3 = or %1, %2
%4:i32 = var
%5 = sle 67:i32, %4
pc %5 1
infer %3


; start LHS (in $41)
%0:i32 = var
%1 = and %0, 255:i32 (hasExternalUses)
%2 = shl %1, 16:i32
%3:i32 = var
%4 = sle 67:i32, %3
pc %4 1
infer %2


; start LHS (in $41)
%0:i32 = var
%1 = and %0, 255:i32 (hasExternalUses)
%2 = shl %1, 8:i32
%3 = or %1, %2
%4 = shl %1, 16:i32
%5 = or %3, %4
%6:i32 = var
%7 = sle 67:i32, %6
pc %7 1
infer %5


; start LHS (in $41)
%0:i32 = var
%1 = and %0, 255:i32 (hasExternalUses)
%2 = shl %1, 24:i32
%3:i32 = var
%4 = sle 67:i32, %3
pc %4 1
infer %2


; start LHS (in $41)
%0:i32 = var
%1 = and %0, 255:i32 (hasExternalUses)
%2 = shl %1, 8:i32
%3 = or %1, %2
%4 = shl %1, 16:i32
%5 = or %3, %4
%6 = shl %1, 24:i32
%7 = or %5, %6
%8:i32 = var
%9 = sle 67:i32, %8
pc %9 1
infer %7


; start LHS (in $41)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = and %2, -4:i32 (hasExternalUses)
%4 = sub %3, 64:i32
%5 = sle 67:i32, %1
pc %5 1
infer %4


; start LHS (in $41)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = and %3, -4:i32 (hasExternalUses)
%5 = sub %4, 64:i32
%6 = sle %0, %5
%7 = sle 67:i32, %2
pc %7 1
infer %6


; start LHS (in $41)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = and %3, -4:i32 (hasExternalUses)
%5 = sub %4, 64:i32
%6 = sle %0, %5
%7:i32 = zext %6
%8 = eq %7, 0:i32
%9 = sle 67:i32, %2
pc %9 1
infer %8


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 8:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 12:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 16:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 20:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 24:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 28:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 32:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 36:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 40:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 44:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 48:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 52:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 56:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 60:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 64:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = and %3, -4:i32 (hasExternalUses)
%5 = slt %0, %4
%6 = sle 67:i32, %2
pc %6 1
infer %5


; start LHS (in $41)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = and %3, -4:i32 (hasExternalUses)
%5 = slt %0, %4
%6:i32 = zext %5
%7 = eq %6, 0:i32
%8 = sle 67:i32, %2
pc %8 1
infer %7


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 4:i32
%2:i32 = var
%3 = sle 67:i32, %2
pc %3 1
infer %1


; start LHS (in $41)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = slt %0, %3
infer %4


; start LHS (in $41)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = slt %0, %3
%5:i32 = zext %4
%6 = eq %5, 0:i32
infer %6


; start LHS (in $41)
%0:i32 = var
%1 = add %0, 1:i32
infer %1


; start LHS (in $41)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = sub %2, %1
infer %3


; function: $42

; start LHS (in $42)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1
infer %2


; start LHS (in $42)
%0:i32 = var
%1 = slt 0:i32, %0
infer %1


; start LHS (in $42)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = slt %2, %0
infer %3


; start LHS (in $42)
%0:i32 = var
%1 = slt 0:i32, %0
%2:i32 = zext %1
%3:i32 = var
%4 = add %3, %0 (hasExternalUses)
%5 = slt %4, %3
%6:i32 = zext %5
%7 = and %2, %6
infer %7


; start LHS (in $42)
%0:i32 = var
%1:i32 = var
%2 = add %0, %1 (hasExternalUses)
%3 = slt %2, 0:i32
infer %3


; start LHS (in $42)
%0:i32 = var
%1 = slt 0:i32, %0
%2:i32 = zext %1
%3:i32 = var
%4 = add %3, %0 (hasExternalUses)
%5 = slt %4, %3
%6:i32 = zext %5
%7 = and %2, %6
%8 = slt %4, 0:i32
%9:i32 = zext %8
%10 = or %7, %9
infer %10


; start LHS (in $42)
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3 = add %1, %2 (hasExternalUses)
%4 = slt %0, %3
infer %4


; function: $43

; start LHS (in $43)
%0:i32 = var
%1 = and %0, 1:i32
infer %1


; start LHS (in $43)
%0:i32 = var
%1 = and %0, 1:i32
%2 = add %1, 0:i32
infer %2


; function: $44

; start LHS (in $44)
%0:i32 = var
%1 = and %0, 7:i32
infer %1


; start LHS (in $44)
%0:i32 = var
%1 = and %0, 7:i32
%2 = add %1, 2:i32
infer %2


; function: $45

; start LHS (in $45)
%0:i32 = var
%1 = and %0, 3:i32
infer %1


; start LHS (in $45)
%0:i32 = var
%1 = and %0, 3:i32
%2 = add %1, 10:i32
infer %2


; function: $46

; start LHS (in $46)
%0:i32 = var
%1 = and %0, 3:i32
infer %1


; start LHS (in $46)
%0:i32 = var
%1 = and %0, 3:i32
%2 = add %1, 14:i32
infer %2


; function: $47

; start LHS (in $47)
%0:i32 = var
%1 = and %0, 7:i32
infer %1


; start LHS (in $47)
%0:i32 = var
%1 = and %0, 7:i32
%2 = add %1, 18:i32
infer %2


; function: $48

; function: $49

; function: $50

; function: $51

; function: $52

; function: $53

; start LHS (in $53)
%0:i64 = var
%1 = shl %0, 32:i64
infer %1


; start LHS (in $53)
%0:i64 = var
%1:i64 = var
%2 = shl %1, 32:i64
%3 = or %0, %2
infer %3


; start LHS (in $53)
%0:i64 = var
%1 = lshr %0, 32:i64
infer %1

