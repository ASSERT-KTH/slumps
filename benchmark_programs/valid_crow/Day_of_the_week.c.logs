
Entering the Souper pass's runOnModule()


; entering Souper's runOnFunction() for wday()

; ModuleID = './Day_of_the_week.c.bc'
source_filename = "./Day_of_the_week.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@.str = private unnamed_addr constant [12 x i8] c"%04d-12-25\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @wday(i32 %year, i32 %month, i32 %day) #0 {
entry:
  %year.addr = alloca i32, align 4
  %month.addr = alloca i32, align 4
  %day.addr = alloca i32, align 4
  %adjustment = alloca i32, align 4
  %mm = alloca i32, align 4
  %yy = alloca i32, align 4
  store i32 %year, i32* %year.addr, align 4
  store i32 %month, i32* %month.addr, align 4
  store i32 %day, i32* %day.addr, align 4
  %0 = load i32, i32* %month.addr, align 4
  %sub = sub nsw i32 14, %0
  %div = sdiv i32 %sub, 12
  store i32 %div, i32* %adjustment, align 4
  %1 = load i32, i32* %month.addr, align 4
  %2 = load i32, i32* %adjustment, align 4
  %mul = mul nsw i32 12, %2
  %add = add nsw i32 %1, %mul
  %sub1 = sub nsw i32 %add, 2
  store i32 %sub1, i32* %mm, align 4
  %3 = load i32, i32* %year.addr, align 4
  %4 = load i32, i32* %adjustment, align 4
  %sub2 = sub nsw i32 %3, %4
  store i32 %sub2, i32* %yy, align 4
  %5 = load i32, i32* %day.addr, align 4
  %6 = load i32, i32* %mm, align 4
  %mul3 = mul nsw i32 13, %6
  %sub4 = sub nsw i32 %mul3, 1
  %div5 = sdiv i32 %sub4, 5
  %add6 = add nsw i32 %5, %div5
  %7 = load i32, i32* %yy, align 4
  %add7 = add nsw i32 %add6, %7
  %8 = load i32, i32* %yy, align 4
  %div8 = sdiv i32 %8, 4
  %add9 = add nsw i32 %add7, %div8
  %9 = load i32, i32* %yy, align 4
  %div10 = sdiv i32 %9, 100
  %sub11 = sub nsw i32 %add9, %div10
  %10 = load i32, i32* %yy, align 4
  %div12 = sdiv i32 %10, 400
  %add13 = add nsw i32 %sub11, %div12
  %rem = srem i32 %add13, 7
  ret i32 %rem
}

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %y = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 2008, i32* %y, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %y, align 4
  %cmp = icmp sle i32 %0, 2121
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %y, align 4
  %call = call i32 @wday(i32 %1, i32 12, i32 25)
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %2 = load i32, i32* %y, align 4
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i32 %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %3 = load i32, i32* %y, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %y, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret i32 0
}

declare i32 @printf(i8* %0, ...) #1

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %0 = load i32, i32* %month.addr, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %sub = sub nsw i32 14, %0
; Looking for a replacement for:
%0:i32 = var
%1:i32 = subnsw 14:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %div = sdiv i32 %sub, 12
; Looking for a replacement for:
%0:i32 = var
%1:i32 = subnsw 14:i32, %0
%2:i32 = sdiv %1, 12:i32
infer %2

; *****
; For LLVM instruction:
;  %1 = load i32, i32* %month.addr, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %2 = load i32, i32* %adjustment, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul = mul nsw i32 12, %2
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 12:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %add = add nsw i32 %1, %mul
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 12:i32, %1
%3:i32 = addnsw %0, %2
infer %3

; *****
; For LLVM instruction:
;  %sub1 = sub nsw i32 %add, 2
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 12:i32, %1
%3:i32 = addnsw %0, %2
%4:i32 = subnsw %3, 2:i32
infer %4

; *****
; For LLVM instruction:
;  %3 = load i32, i32* %year.addr, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %4 = load i32, i32* %adjustment, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %sub2 = sub nsw i32 %3, %4
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i32 = subnsw %0, %1
infer %2

; *****
; For LLVM instruction:
;  %5 = load i32, i32* %day.addr, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %6 = load i32, i32* %mm, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul3 = mul nsw i32 13, %6
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 13:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %sub4 = sub nsw i32 %mul3, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 13:i32, %0
%2:i32 = subnsw %1, 1:i32
infer %2

; *****
; For LLVM instruction:
;  %div5 = sdiv i32 %sub4, 5
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 13:i32, %0
%2:i32 = subnsw %1, 1:i32
%3:i32 = sdiv %2, 5:i32
infer %3

; *****
; For LLVM instruction:
;  %add6 = add nsw i32 %5, %div5
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 13:i32, %1
%3:i32 = subnsw %2, 1:i32
%4:i32 = sdiv %3, 5:i32
%5:i32 = addnsw %0, %4
infer %5

; *****
; For LLVM instruction:
;  %7 = load i32, i32* %yy, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %add7 = add nsw i32 %add6, %7
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
infer %7

; *****
; For LLVM instruction:
;  %8 = load i32, i32* %yy, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %div8 = sdiv i32 %8, 4
; Looking for a replacement for:
%0:i32 = var
%1:i32 = sdiv %0, 4:i32
infer %1

; *****
; For LLVM instruction:
;  %add9 = add nsw i32 %add7, %div8
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9
infer %10

; *****
; For LLVM instruction:
;  %9 = load i32, i32* %yy, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %div10 = sdiv i32 %9, 100
; Looking for a replacement for:
%0:i32 = var
%1:i32 = sdiv %0, 100:i32
infer %1

; *****
; For LLVM instruction:
;  %sub11 = sub nsw i32 %add9, %div10
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9
%11:i32 = var
%12:i32 = sdiv %11, 100:i32
%13:i32 = subnsw %10, %12
infer %13

; *****
; For LLVM instruction:
;  %10 = load i32, i32* %yy, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %div12 = sdiv i32 %10, 400
; Looking for a replacement for:
%0:i32 = var
%1:i32 = sdiv %0, 400:i32
infer %1

; *****
; For LLVM instruction:
;  %add13 = add nsw i32 %sub11, %div12
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9
%11:i32 = var
%12:i32 = sdiv %11, 100:i32
%13:i32 = subnsw %10, %12
%14:i32 = var
%15:i32 = sdiv %14, 400:i32
%16:i32 = addnsw %13, %15
infer %16

; *****
; For LLVM instruction:
;  %rem = srem i32 %add13, 7
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9
%11:i32 = var
%12:i32 = sdiv %11, 100:i32
%13:i32 = subnsw %10, %12
%14:i32 = var
%15:i32 = sdiv %14, 400:i32
%16:i32 = addnsw %13, %15
%17:i32 = srem %16, 7:i32
infer %17
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = subnsw 14:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 14
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1309025363
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = subnsw 14:i32, %0
%2:i32 = sdiv %1, 12:i32
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var
%1:i32 = subnsw 14:i32, %0

Cost = 1
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 3 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = mulnsw 12:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 262152
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 4 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 12:i32, %1
%3:i32 = addnsw %0, %2
infer %3


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 1237041468
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var
%1:i32 = mulnsw 12:i32, %0

Cost = 1
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 4 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 5 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 12:i32, %1
%3:i32 = addnsw %0, %2
%4:i32 = subnsw %3, 2:i32
infer %4


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -2
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var
%1:i32 = mulnsw 12:i32, %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 12:i32, %1
%3:i32 = addnsw %0, %2

Cost = 2
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 5 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i32 = subnsw %0, %1
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 2147418112
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 3 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = mulnsw 13:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -13
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = mulnsw 13:i32, %0
%2:i32 = subnsw %1, 1:i32
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 1418950753
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var
%1:i32 = mulnsw 13:i32, %0

Cost = 1
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 3 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 4 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = mulnsw 13:i32, %0
%2:i32 = subnsw %1, 1:i32
%3:i32 = sdiv %2, 5:i32
infer %3


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 167772160
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var
%1:i32 = mulnsw 13:i32, %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var
%1:i32 = mulnsw 13:i32, %0
%2:i32 = subnsw %1, 1:i32

Cost = 2
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 4 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 6 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 13:i32, %1
%3:i32 = subnsw %2, 1:i32
%4:i32 = sdiv %3, 5:i32
%5:i32 = addnsw %0, %4
infer %5


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -2147483648
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var
%1:i32 = mulnsw 13:i32, %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i32 = var
%1:i32 = mulnsw 13:i32, %0
%2:i32 = subnsw %1, 1:i32

Cost = 2
second query is SAT-- constant doesn't work

--------------------------------
guess 5

%0:i32 = var
%1:i32 = mulnsw 13:i32, %0
%2:i32 = subnsw %1, 1:i32
%3:i32 = sdiv %2, 5:i32

Cost = 7
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 6 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 8 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
infer %7


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1073741826
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i32 = var
%1:i32 = mulnsw 13:i32, %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 5

%0:i32 = var
%1:i32 = mulnsw 13:i32, %0
%2:i32 = subnsw %1, 1:i32

Cost = 2
second query is SAT-- constant doesn't work

--------------------------------
guess 6

%0:i32 = var
%1:i32 = mulnsw 13:i32, %0
%2:i32 = subnsw %1, 1:i32
%3:i32 = sdiv %2, 5:i32

Cost = 7
second query is SAT-- constant doesn't work

--------------------------------
guess 7

%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 13:i32, %1
%3:i32 = subnsw %2, 1:i32
%4:i32 = sdiv %3, 5:i32
%5:i32 = addnsw %0, %4

Cost = 8
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 8 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = sdiv %0, 4:i32
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 161982144
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 8 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9
infer %10


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 2147483646
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i32 = var
%1:i32 = sdiv %0, 4:i32

Cost = 5
second query is SAT-- constant doesn't work

--------------------------------
guess 5

%0:i32 = var
%1:i32 = mulnsw 13:i32, %0
%2:i32 = subnsw %1, 1:i32
%3:i32 = sdiv %2, 5:i32

Cost = 7
second query is SAT-- constant doesn't work

--------------------------------
guess 6

%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 13:i32, %1
%3:i32 = subnsw %2, 1:i32
%4:i32 = sdiv %3, 5:i32
%5:i32 = addnsw %0, %4

Cost = 8
second query is SAT-- constant doesn't work

--------------------------------
guess 7

%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6

Cost = 9
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 8 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = sdiv %0, 100:i32
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 18612224
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 8 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9
%11:i32 = var
%12:i32 = sdiv %11, 100:i32
%13:i32 = subnsw %10, %12
infer %13


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -17335424
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var
%1:i32 = sdiv %0, 100:i32

Cost = 5
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i32 = var
%1:i32 = sdiv %0, 4:i32

Cost = 5
second query is SAT-- constant doesn't work

--------------------------------
guess 5

%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 13:i32, %1
%3:i32 = subnsw %2, 1:i32
%4:i32 = sdiv %3, 5:i32
%5:i32 = addnsw %0, %4

Cost = 8
second query is SAT-- constant doesn't work

--------------------------------
guess 6

%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6

Cost = 9
second query is SAT-- constant doesn't work

--------------------------------
guess 7

%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9

Cost = 15
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 8 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = sdiv %0, 400:i32
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 3604480
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 8 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9
%11:i32 = var
%12:i32 = sdiv %11, 100:i32
%13:i32 = subnsw %10, %12
%14:i32 = var
%15:i32 = sdiv %14, 400:i32
%16:i32 = addnsw %13, %15
infer %16


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -2147483648
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var
%1:i32 = sdiv %0, 400:i32

Cost = 5
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var
%1:i32 = sdiv %0, 100:i32

Cost = 5
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i32 = var
%1:i32 = sdiv %0, 4:i32

Cost = 5
second query is SAT-- constant doesn't work

--------------------------------
guess 5

%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6

Cost = 9
second query is SAT-- constant doesn't work

--------------------------------
guess 6

%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9

Cost = 15
second query is SAT-- constant doesn't work

--------------------------------
guess 7

%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9
%11:i32 = var
%12:i32 = sdiv %11, 100:i32
%13:i32 = subnsw %10, %12

Cost = 21
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 8 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 8 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9
%11:i32 = var
%12:i32 = sdiv %11, 100:i32
%13:i32 = subnsw %10, %12
%14:i32 = var
%15:i32 = sdiv %14, 400:i32
%16:i32 = addnsw %13, %15
%17:i32 = srem %16, 7:i32
infer %17


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -6
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var
%1:i32 = sdiv %0, 400:i32

Cost = 5
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var
%1:i32 = sdiv %0, 100:i32

Cost = 5
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6

Cost = 9
second query is SAT-- constant doesn't work

--------------------------------
guess 5

%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9

Cost = 15
second query is SAT-- constant doesn't work

--------------------------------
guess 6

%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9
%11:i32 = var
%12:i32 = sdiv %11, 100:i32
%13:i32 = subnsw %10, %12

Cost = 21
second query is SAT-- constant doesn't work

--------------------------------
guess 7

%0:i32 = var
%1:i32 = var
%2:i32 = var
%3:i32 = mulnsw 13:i32, %2
%4:i32 = subnsw %3, 1:i32
%5:i32 = sdiv %4, 5:i32
%6:i32 = addnsw %1, %5
%7:i32 = addnsw %0, %6
%8:i32 = var
%9:i32 = sdiv %8, 4:i32
%10:i32 = addnsw %7, %9
%11:i32 = var
%12:i32 = sdiv %11, 100:i32
%13:i32 = subnsw %10, %12
%14:i32 = var
%15:i32 = sdiv %14, 400:i32
%16:i32 = addnsw %13, %15

Cost = 27
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 8 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for wday()

; entering Souper's runOnFunction() for main()

; ModuleID = './Day_of_the_week.c.bc'
source_filename = "./Day_of_the_week.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@.str = private unnamed_addr constant [12 x i8] c"%04d-12-25\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @wday(i32 %year, i32 %month, i32 %day) #0 {
entry:
  %year.addr = alloca i32, align 4
  %month.addr = alloca i32, align 4
  %day.addr = alloca i32, align 4
  %adjustment = alloca i32, align 4
  %mm = alloca i32, align 4
  %yy = alloca i32, align 4
  store i32 %year, i32* %year.addr, align 4
  store i32 %month, i32* %month.addr, align 4
  store i32 %day, i32* %day.addr, align 4
  %0 = load i32, i32* %month.addr, align 4
  %sub = sub nsw i32 14, %0
  %div = sdiv i32 %sub, 12
  store i32 %div, i32* %adjustment, align 4
  %1 = load i32, i32* %month.addr, align 4
  %2 = load i32, i32* %adjustment, align 4
  %mul = mul nsw i32 12, %2
  %add = add nsw i32 %1, %mul
  %sub1 = sub nsw i32 %add, 2
  store i32 %sub1, i32* %mm, align 4
  %3 = load i32, i32* %year.addr, align 4
  %4 = load i32, i32* %adjustment, align 4
  %sub2 = sub nsw i32 %3, %4
  store i32 %sub2, i32* %yy, align 4
  %5 = load i32, i32* %day.addr, align 4
  %6 = load i32, i32* %mm, align 4
  %mul3 = mul nsw i32 13, %6
  %sub4 = sub nsw i32 %mul3, 1
  %div5 = sdiv i32 %sub4, 5
  %add6 = add nsw i32 %5, %div5
  %7 = load i32, i32* %yy, align 4
  %add7 = add nsw i32 %add6, %7
  %8 = load i32, i32* %yy, align 4
  %div8 = sdiv i32 %8, 4
  %add9 = add nsw i32 %add7, %div8
  %9 = load i32, i32* %yy, align 4
  %div10 = sdiv i32 %9, 100
  %sub11 = sub nsw i32 %add9, %div10
  %10 = load i32, i32* %yy, align 4
  %div12 = sdiv i32 %10, 400
  %add13 = add nsw i32 %sub11, %div12
  %rem = srem i32 %add13, 7
  ret i32 %rem
}

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %y = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 2008, i32* %y, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %y, align 4
  %cmp = icmp sle i32 %0, 2121
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %y, align 4
  %call = call i32 @wday(i32 %1, i32 12, i32 25)
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %2 = load i32, i32* %y, align 4
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i32 %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %3 = load i32, i32* %y, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %y, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret i32 0
}

declare i32 @printf(i8* %0, ...) #1

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %0 = load i32, i32* %y, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp = icmp sle i32 %0, 2121
; Looking for a replacement for:
%0:i32 = var
%1:i1 = sle %0, 2121:i32
infer %1

; *****
; For LLVM instruction:
;  %1 = load i32, i32* %y, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %call = call i32 @wday(i32 %1, i32 12, i32 25)
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp1 = icmp eq i32 %call, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %2 = load i32, i32* %y, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %3 = load i32, i32* %y, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc = add nsw i32 %3, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = sle %0, 2121:i32
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 268435457
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for main()
Total of 0 replacements done on this module
Total of 0 replacements candidates on this module
