
Entering the Souper pass's runOnModule()


; entering Souper's runOnFunction() for main()

; ModuleID = './Create_an_object_at_a_given_address.c.bc'
source_filename = "./Create_an_object_at_a_given_address.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@.str = private unnamed_addr constant [18 x i8] c"%p: %08x (=%08x)\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %intspace = alloca i32, align 4
  %address = alloca i32*, align 4
  store i32 0, i32* %retval, align 4
  store i32* %intspace, i32** %address, align 4
  %0 = load i32*, i32** %address, align 4
  store i32 65535, i32* %0, align 4
  %1 = load i32*, i32** %address, align 4
  %2 = load i32*, i32** %address, align 4
  %3 = load i32, i32* %2, align 4
  %4 = load i32, i32* %intspace, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i32 0, i32 0), i32* %1, i32 %3, i32 %4)
  %5 = load i32*, i32** %address, align 4
  %6 = bitcast i32* %5 to i8*
  store i8 0, i8* %6, align 1
  %7 = load i32*, i32** %address, align 4
  %8 = bitcast i32* %7 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8 0, i8* %add.ptr, align 1
  %9 = load i32*, i32** %address, align 4
  %10 = bitcast i32* %9 to i8*
  %add.ptr1 = getelementptr inbounds i8, i8* %10, i32 2
  store i8 -1, i8* %add.ptr1, align 1
  %11 = load i32*, i32** %address, align 4
  %12 = bitcast i32* %11 to i8*
  %add.ptr2 = getelementptr inbounds i8, i8* %12, i32 3
  store i8 -1, i8* %add.ptr2, align 1
  %13 = load i32*, i32** %address, align 4
  %14 = load i32*, i32** %address, align 4
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %intspace, align 4
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i32 0, i32 0), i32* %13, i32 %15, i32 %16)
  ret i32 0
}

declare i32 @printf(i8* %0, ...) #1

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %3 = load i32, i32* %2, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %4 = load i32, i32* %intspace, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %15 = load i32, i32* %14, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %16 = load i32, i32* %intspace, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for main()
Total of 0 replacements done on this module
Total of 0 replacements candidates on this module
