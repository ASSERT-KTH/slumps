
Entering the Souper pass's runOnModule()


; entering Souper's runOnFunction() for main()

; ModuleID = './McNuggets_Problem.c.bc'
source_filename = "./McNuggets_Problem.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@.str = private unnamed_addr constant [36 x i8] c"Maximum non-McNuggets number is %d\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %max = alloca i32, align 4
  %i = alloca i32, align 4
  %sixes = alloca i32, align 4
  %nines = alloca i32, align 4
  %twenties = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 0, i32* %max, align 4
  store i32 0, i32* %i, align 4
  br label %loopstart

loopstart:                                        ; preds = %if.then24, %if.then11, %if.then, %entry
  br label %while.cond

while.cond:                                       ; preds = %for.end33, %loopstart
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 100
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %sixes, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc31, %while.body
  %1 = load i32, i32* %sixes, align 4
  %mul = mul nsw i32 %1, 6
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %mul, %2
  br i1 %cmp1, label %for.body, label %for.end33

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %sixes, align 4
  %mul2 = mul nsw i32 %3, 6
  %4 = load i32, i32* %i, align 4
  %cmp3 = icmp eq i32 %mul2, %4
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %loopstart

if.end:                                           ; preds = %for.body
  store i32 0, i32* %nines, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc28, %if.end
  %6 = load i32, i32* %nines, align 4
  %mul5 = mul nsw i32 %6, 9
  %7 = load i32, i32* %i, align 4
  %cmp6 = icmp slt i32 %mul5, %7
  br i1 %cmp6, label %for.body7, label %for.end30

for.body7:                                        ; preds = %for.cond4
  %8 = load i32, i32* %sixes, align 4
  %mul8 = mul nsw i32 %8, 6
  %9 = load i32, i32* %nines, align 4
  %mul9 = mul nsw i32 %9, 9
  %add = add nsw i32 %mul8, %mul9
  %10 = load i32, i32* %i, align 4
  %cmp10 = icmp eq i32 %add, %10
  br i1 %cmp10, label %if.then11, label %if.end13

if.then11:                                        ; preds = %for.body7
  %11 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %11, 1
  store i32 %inc12, i32* %i, align 4
  br label %loopstart

if.end13:                                         ; preds = %for.body7
  store i32 0, i32* %twenties, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc, %if.end13
  %12 = load i32, i32* %twenties, align 4
  %mul15 = mul nsw i32 %12, 20
  %13 = load i32, i32* %i, align 4
  %cmp16 = icmp slt i32 %mul15, %13
  br i1 %cmp16, label %for.body17, label %for.end

for.body17:                                       ; preds = %for.cond14
  %14 = load i32, i32* %sixes, align 4
  %mul18 = mul nsw i32 %14, 6
  %15 = load i32, i32* %nines, align 4
  %mul19 = mul nsw i32 %15, 9
  %add20 = add nsw i32 %mul18, %mul19
  %16 = load i32, i32* %twenties, align 4
  %mul21 = mul nsw i32 %16, 20
  %add22 = add nsw i32 %add20, %mul21
  %17 = load i32, i32* %i, align 4
  %cmp23 = icmp eq i32 %add22, %17
  br i1 %cmp23, label %if.then24, label %if.end26

if.then24:                                        ; preds = %for.body17
  %18 = load i32, i32* %i, align 4
  %inc25 = add nsw i32 %18, 1
  store i32 %inc25, i32* %i, align 4
  br label %loopstart

if.end26:                                         ; preds = %for.body17
  br label %for.inc

for.inc:                                          ; preds = %if.end26
  %19 = load i32, i32* %twenties, align 4
  %inc27 = add nsw i32 %19, 1
  store i32 %inc27, i32* %twenties, align 4
  br label %for.cond14

for.end:                                          ; preds = %for.cond14
  br label %for.inc28

for.inc28:                                        ; preds = %for.end
  %20 = load i32, i32* %nines, align 4
  %inc29 = add nsw i32 %20, 1
  store i32 %inc29, i32* %nines, align 4
  br label %for.cond4

for.end30:                                        ; preds = %for.cond4
  br label %for.inc31

for.inc31:                                        ; preds = %for.end30
  %21 = load i32, i32* %sixes, align 4
  %inc32 = add nsw i32 %21, 1
  store i32 %inc32, i32* %sixes, align 4
  br label %for.cond

for.end33:                                        ; preds = %for.cond
  %22 = load i32, i32* %i, align 4
  store i32 %22, i32* %max, align 4
  %23 = load i32, i32* %i, align 4
  %inc34 = add nsw i32 %23, 1
  store i32 %inc34, i32* %i, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %24 = load i32, i32* %max, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i32 0, i32 0), i32 %24)
  ret i32 0
}

declare i32 @printf(i8* %0, ...) #1

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %0 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp = icmp slt i32 %0, 100
; Looking for a replacement for:
%0:i32 = var
%1:i1 = slt %0, 100:i32
infer %1

; *****
; For LLVM instruction:
;  %1 = load i32, i32* %sixes, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul = mul nsw i32 %1, 6
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 6:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %2 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp1 = icmp slt i32 %mul, %2
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 6:i32, %0
%2:i32 = var
%3:i1 = slt %1, %2
infer %3

; *****
; For LLVM instruction:
;  %3 = load i32, i32* %sixes, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul2 = mul nsw i32 %3, 6
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 6:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %4 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp3 = icmp eq i32 %mul2, %4
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 6:i32, %1
%3:i1 = eq %0, %2
infer %3

; *****
; For LLVM instruction:
;  %5 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc = add nsw i32 %5, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %6 = load i32, i32* %nines, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul5 = mul nsw i32 %6, 9
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 9:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %7 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp6 = icmp slt i32 %mul5, %7
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 9:i32, %0
%2:i32 = var
%3:i1 = slt %1, %2
infer %3

; *****
; For LLVM instruction:
;  %8 = load i32, i32* %sixes, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul8 = mul nsw i32 %8, 6
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 6:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %9 = load i32, i32* %nines, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul9 = mul nsw i32 %9, 9
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 9:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %add = add nsw i32 %mul8, %mul9
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 6:i32, %0
%2:i32 = var
%3:i32 = mulnsw 9:i32, %2
%4:i32 = addnsw %1, %3
infer %4

; *****
; For LLVM instruction:
;  %10 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp10 = icmp eq i32 %add, %10
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 6:i32, %1
%3:i32 = var
%4:i32 = mulnsw 9:i32, %3
%5:i32 = addnsw %2, %4
%6:i1 = eq %0, %5
infer %6

; *****
; For LLVM instruction:
;  %11 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc12 = add nsw i32 %11, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %12 = load i32, i32* %twenties, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul15 = mul nsw i32 %12, 20
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 20:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %13 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp16 = icmp slt i32 %mul15, %13
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 20:i32, %0
%2:i32 = var
%3:i1 = slt %1, %2
infer %3

; *****
; For LLVM instruction:
;  %14 = load i32, i32* %sixes, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul18 = mul nsw i32 %14, 6
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 6:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %15 = load i32, i32* %nines, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul19 = mul nsw i32 %15, 9
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 9:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %add20 = add nsw i32 %mul18, %mul19
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 6:i32, %0
%2:i32 = var
%3:i32 = mulnsw 9:i32, %2
%4:i32 = addnsw %1, %3
infer %4

; *****
; For LLVM instruction:
;  %16 = load i32, i32* %twenties, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul21 = mul nsw i32 %16, 20
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 20:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %add22 = add nsw i32 %add20, %mul21
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mulnsw 6:i32, %0
%2:i32 = var
%3:i32 = mulnsw 9:i32, %2
%4:i32 = addnsw %1, %3
%5:i32 = var
%6:i32 = mulnsw 20:i32, %5
%7:i32 = addnsw %4, %6
infer %7

; *****
; For LLVM instruction:
;  %17 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp23 = icmp eq i32 %add22, %17
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 6:i32, %1
%3:i32 = var
%4:i32 = mulnsw 9:i32, %3
%5:i32 = addnsw %2, %4
%6:i32 = var
%7:i32 = mulnsw 20:i32, %6
%8:i32 = addnsw %5, %7
%9:i1 = eq %0, %8
infer %9

; *****
; For LLVM instruction:
;  %18 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc25 = add nsw i32 %18, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %19 = load i32, i32* %twenties, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc27 = add nsw i32 %19, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %20 = load i32, i32* %nines, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc29 = add nsw i32 %20, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %21 = load i32, i32* %sixes, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc32 = add nsw i32 %21, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %22 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %23 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc34 = add nsw i32 %23, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %24 = load i32, i32* %max, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = slt %0, 100:i32
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = mulnsw 6:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 536870916
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 4 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = mulnsw 6:i32, %0
%2:i32 = var
%3:i1 = slt %1, %2
infer %3


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 4 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 6:i32, %1
%3:i1 = eq %0, %2
infer %3


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 268435457
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = mulnsw 9:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -589743
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 4 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = mulnsw 9:i32, %0
%2:i32 = var
%3:i1 = slt %1, %2
infer %3


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 5 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = mulnsw 6:i32, %0
%2:i32 = var
%3:i32 = mulnsw 9:i32, %2
%4:i32 = addnsw %1, %3
infer %4


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 726240603
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var
%1:i32 = mulnsw 6:i32, %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i32 = var
%1:i32 = mulnsw 9:i32, %0

Cost = 1
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 5 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 7 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 6:i32, %1
%3:i32 = var
%4:i32 = mulnsw 9:i32, %3
%5:i32 = addnsw %2, %4
%6:i1 = eq %0, %5
infer %6


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = mulnsw 20:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 1614807140
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 4 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = mulnsw 20:i32, %0
%2:i32 = var
%3:i1 = slt %1, %2
infer %3


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 8 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = mulnsw 6:i32, %0
%2:i32 = var
%3:i32 = mulnsw 9:i32, %2
%4:i32 = addnsw %1, %3
%5:i32 = var
%6:i32 = mulnsw 20:i32, %5
%7:i32 = addnsw %4, %6
infer %7


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 1106730730
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i32 = var
%1:i32 = mulnsw 20:i32, %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 5

%0:i32 = var
%1:i32 = mulnsw 6:i32, %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 6

%0:i32 = var
%1:i32 = mulnsw 9:i32, %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 7

%0:i32 = var
%1:i32 = mulnsw 6:i32, %0
%2:i32 = var
%3:i32 = mulnsw 9:i32, %2
%4:i32 = addnsw %1, %3

Cost = 3
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 8 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 8 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i32 = mulnsw 6:i32, %1
%3:i32 = var
%4:i32 = mulnsw 9:i32, %3
%5:i32 = addnsw %2, %4
%6:i32 = var
%7:i32 = mulnsw 20:i32, %6
%8:i32 = addnsw %5, %7
%9:i1 = eq %0, %8
infer %9


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for main()
Total of 0 replacements done on this module
Total of 0 replacements candidates on this module
