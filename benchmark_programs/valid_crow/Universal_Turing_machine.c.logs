
Entering the Souper pass's runOnModule()


; entering Souper's runOnFunction() for state_index()

; ModuleID = './Universal_Turing_machine.c.bc'
source_filename = "./Universal_Turing_machine.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.turing_t = type { i32, i8**, i32, i32*, i32, i8*, i32, i32, i32, %struct.tape_t*, i32, %struct.transition_t*** }
%struct.tape_t = type { i32, %struct.tape_t*, %struct.tape_t* }
%struct.transition_t = type { i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [7 x i8] c"%-10s \00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"[%c]\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c" %c \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Simple incrementer\0A\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"q0\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"qf\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"\0AThree-state busy beaver\0A\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"halt\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @state_index(%struct.turing_t* %t, i8* %state) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %state.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8* %state, i8** %state.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 0
  %2 = load i32, i32* %states_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 1
  %4 = load i8**, i8*** %states, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %4, i32 %5
  %6 = load i8*, i8** %arrayidx, align 4
  %7 = load i8*, i8** %state.addr, align 4
  %call = call i32 @strcmp(i8* %6, i8* %7) #4
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* %0, i8* %1) #1

; Function Attrs: noinline nounwind optnone
define hidden i32 @symbol_index(%struct.turing_t* %t, i8 signext %symbol) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %symbol.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8 %symbol, i8* %symbol.addr, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 4
  %2 = load i32, i32* %symbols_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 5
  %4 = load i8*, i8** %symbols, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %5
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %7 = load i8, i8* %symbol.addr, align 1
  %conv1 = sext i8 %7 to i32
  %cmp2 = icmp eq i32 %conv, %conv1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone
define hidden void @move(%struct.turing_t* %t, i32 %dir) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %dir.addr = alloca i32, align 4
  %orig = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i32 %dir, i32* %dir.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 9
  %1 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  store %struct.tape_t* %1, %struct.tape_t** %orig, align 4
  %2 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %if.then, label %if.else13

if.then:                                          ; preds = %entry
  %3 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool = icmp ne %struct.tape_t* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %4, i32 0, i32 2
  %5 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  %tobool1 = icmp ne %struct.tape_t* %5, null
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %land.lhs.true
  %6 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right3 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %6, i32 0, i32 2
  %7 = load %struct.tape_t*, %struct.tape_t** %right3, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 9
  store %struct.tape_t* %7, %struct.tape_t** %tape4, align 4
  br label %if.end12

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call = call noalias i8* @calloc(i32 1, i32 12)
  %9 = bitcast i8* %call to %struct.tape_t*
  %10 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 9
  store %struct.tape_t* %9, %struct.tape_t** %tape5, align 4
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 6
  %12 = load i32, i32* %blank, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %14, i32 0, i32 0
  store i32 %12, i32* %symbol, align 4
  %15 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool7 = icmp ne %struct.tape_t* %15, null
  br i1 %tobool7, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.else
  %16 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 9
  %18 = load %struct.tape_t*, %struct.tape_t** %tape9, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %18, i32 0, i32 1
  store %struct.tape_t* %16, %struct.tape_t** %left, align 4
  %19 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape10 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %19, i32 0, i32 9
  %20 = load %struct.tape_t*, %struct.tape_t** %tape10, align 4
  %21 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right11 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %21, i32 0, i32 2
  store %struct.tape_t* %20, %struct.tape_t** %right11, align 4
  br label %if.end

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then2
  br label %if.end38

if.else13:                                        ; preds = %entry
  %22 = load i32, i32* %dir.addr, align 4
  %cmp14 = icmp eq i32 %22, 0
  br i1 %cmp14, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.else13
  %23 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool16 = icmp ne %struct.tape_t* %23, null
  br i1 %tobool16, label %land.lhs.true17, label %if.else23

land.lhs.true17:                                  ; preds = %if.then15
  %24 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left18 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %24, i32 0, i32 1
  %25 = load %struct.tape_t*, %struct.tape_t** %left18, align 4
  %tobool19 = icmp ne %struct.tape_t* %25, null
  br i1 %tobool19, label %if.then20, label %if.else23

if.then20:                                        ; preds = %land.lhs.true17
  %26 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left21 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %26, i32 0, i32 1
  %27 = load %struct.tape_t*, %struct.tape_t** %left21, align 4
  %28 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape22 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %28, i32 0, i32 9
  store %struct.tape_t* %27, %struct.tape_t** %tape22, align 4
  br label %if.end36

if.else23:                                        ; preds = %land.lhs.true17, %if.then15
  %call24 = call noalias i8* @calloc(i32 1, i32 12)
  %29 = bitcast i8* %call24 to %struct.tape_t*
  %30 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape25 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %30, i32 0, i32 9
  store %struct.tape_t* %29, %struct.tape_t** %tape25, align 4
  %31 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank26 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %31, i32 0, i32 6
  %32 = load i32, i32* %blank26, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 9
  %34 = load %struct.tape_t*, %struct.tape_t** %tape27, align 4
  %symbol28 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %34, i32 0, i32 0
  store i32 %32, i32* %symbol28, align 4
  %35 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool29 = icmp ne %struct.tape_t* %35, null
  br i1 %tobool29, label %if.then30, label %if.end35

if.then30:                                        ; preds = %if.else23
  %36 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %37 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape31 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %37, i32 0, i32 9
  %38 = load %struct.tape_t*, %struct.tape_t** %tape31, align 4
  %right32 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %38, i32 0, i32 2
  store %struct.tape_t* %36, %struct.tape_t** %right32, align 4
  %39 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape33 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %39, i32 0, i32 9
  %40 = load %struct.tape_t*, %struct.tape_t** %tape33, align 4
  %41 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left34 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %41, i32 0, i32 1
  store %struct.tape_t* %40, %struct.tape_t** %left34, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then30, %if.else23
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then20
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.else13
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end12
  ret void
}

declare noalias i8* @calloc(i32 %0, i32 %1) #2

; Function Attrs: noinline nounwind optnone
define hidden %struct.turing_t* @create(i32 %states_len, ...) #0 {
entry:
  %states_len.addr = alloca i32, align 4
  %args = alloca i8*, align 4
  %t = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store i32 %states_len, i32* %states_len.addr, align 4
  %args1 = bitcast i8** %args to i8*
  call void @llvm.va_start(i8* %args1)
  %call = call noalias i8* @malloc(i32 48)
  %0 = bitcast i8* %call to %struct.turing_t*
  store %struct.turing_t* %0, %struct.turing_t** %t, align 4
  %1 = load i32, i32* %states_len.addr, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 0
  store i32 %1, i32* %states_len2, align 4
  %3 = load i32, i32* %states_len.addr, align 4
  %mul = mul i32 %3, 4
  %call3 = call noalias i8* @malloc(i32 %mul)
  %4 = bitcast i8* %call3 to i8**
  %5 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 1
  store i8** %4, i8*** %states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* %states_len.addr, align 4
  %cmp = icmp slt i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %argp.cur = load i8*, i8** %args, align 4
  %argp.next = getelementptr inbounds i8, i8* %argp.cur, i32 4
  store i8* %argp.next, i8** %args, align 4
  %8 = bitcast i8* %argp.cur to i8**
  %9 = load i8*, i8** %8, align 4
  %10 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 1
  %11 = load i8**, i8*** %states4, align 4
  %12 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %11, i32 %12
  store i8* %9, i8** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %argp.cur5 = load i8*, i8** %args, align 4
  %argp.next6 = getelementptr inbounds i8, i8* %argp.cur5, i32 4
  store i8* %argp.next6, i8** %args, align 4
  %14 = bitcast i8* %argp.cur5 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 2
  store i32 %15, i32* %final_states_len, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len7 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 2
  %18 = load i32, i32* %final_states_len7, align 4
  %mul8 = mul i32 %18, 4
  %call9 = call noalias i8* @malloc(i32 %mul8)
  %19 = bitcast i8* %call9 to i32*
  %20 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 3
  store i32* %19, i32** %final_states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc19, %for.end
  %21 = load i32, i32* %i, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len11 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 2
  %23 = load i32, i32* %final_states_len11, align 4
  %cmp12 = icmp slt i32 %21, %23
  br i1 %cmp12, label %for.body13, label %for.end21

for.body13:                                       ; preds = %for.cond10
  %24 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur14 = load i8*, i8** %args, align 4
  %argp.next15 = getelementptr inbounds i8, i8* %argp.cur14, i32 4
  store i8* %argp.next15, i8** %args, align 4
  %25 = bitcast i8* %argp.cur14 to i8**
  %26 = load i8*, i8** %25, align 4
  %call16 = call i32 @state_index(%struct.turing_t* %24, i8* %26)
  %27 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states17 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %27, i32 0, i32 3
  %28 = load i32*, i32** %final_states17, align 4
  %29 = load i32, i32* %i, align 4
  %arrayidx18 = getelementptr inbounds i32, i32* %28, i32 %29
  store i32 %call16, i32* %arrayidx18, align 4
  br label %for.inc19

for.inc19:                                        ; preds = %for.body13
  %30 = load i32, i32* %i, align 4
  %inc20 = add nsw i32 %30, 1
  store i32 %inc20, i32* %i, align 4
  br label %for.cond10

for.end21:                                        ; preds = %for.cond10
  %argp.cur22 = load i8*, i8** %args, align 4
  %argp.next23 = getelementptr inbounds i8, i8* %argp.cur22, i32 4
  store i8* %argp.next23, i8** %args, align 4
  %31 = bitcast i8* %argp.cur22 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 4
  store i32 %32, i32* %symbols_len, align 4
  %34 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len24 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %34, i32 0, i32 4
  %35 = load i32, i32* %symbols_len24, align 4
  %call25 = call noalias i8* @malloc(i32 %35)
  %36 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %36, i32 0, i32 5
  store i8* %call25, i8** %symbols, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc34, %for.end21
  %37 = load i32, i32* %i, align 4
  %38 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %38, i32 0, i32 4
  %39 = load i32, i32* %symbols_len27, align 4
  %cmp28 = icmp slt i32 %37, %39
  br i1 %cmp28, label %for.body29, label %for.end36

for.body29:                                       ; preds = %for.cond26
  %argp.cur30 = load i8*, i8** %args, align 4
  %argp.next31 = getelementptr inbounds i8, i8* %argp.cur30, i32 4
  store i8* %argp.next31, i8** %args, align 4
  %40 = bitcast i8* %argp.cur30 to i32*
  %41 = load i32, i32* %40, align 4
  %conv = trunc i32 %41 to i8
  %42 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols32 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %42, i32 0, i32 5
  %43 = load i8*, i8** %symbols32, align 4
  %44 = load i32, i32* %i, align 4
  %arrayidx33 = getelementptr inbounds i8, i8* %43, i32 %44
  store i8 %conv, i8* %arrayidx33, align 1
  br label %for.inc34

for.inc34:                                        ; preds = %for.body29
  %45 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %45, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond26

for.end36:                                        ; preds = %for.cond26
  %46 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur37 = load i8*, i8** %args, align 4
  %argp.next38 = getelementptr inbounds i8, i8* %argp.cur37, i32 4
  store i8* %argp.next38, i8** %args, align 4
  %47 = bitcast i8* %argp.cur37 to i32*
  %48 = load i32, i32* %47, align 4
  %conv39 = trunc i32 %48 to i8
  %call40 = call i32 @symbol_index(%struct.turing_t* %46, i8 signext %conv39)
  %49 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %49, i32 0, i32 6
  store i32 %call40, i32* %blank, align 4
  %50 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur41 = load i8*, i8** %args, align 4
  %argp.next42 = getelementptr inbounds i8, i8* %argp.cur41, i32 4
  store i8* %argp.next42, i8** %args, align 4
  %51 = bitcast i8* %argp.cur41 to i8**
  %52 = load i8*, i8** %51, align 4
  %call43 = call i32 @state_index(%struct.turing_t* %50, i8* %52)
  %53 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %53, i32 0, i32 7
  store i32 %call43, i32* %state, align 4
  %argp.cur44 = load i8*, i8** %args, align 4
  %argp.next45 = getelementptr inbounds i8, i8* %argp.cur44, i32 4
  store i8* %argp.next45, i8** %args, align 4
  %54 = bitcast i8* %argp.cur44 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %56, i32 0, i32 8
  store i32 %55, i32* %tape_len, align 4
  %57 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %57, i32 0, i32 9
  store %struct.tape_t* null, %struct.tape_t** %tape, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc56, %for.end36
  %58 = load i32, i32* %i, align 4
  %59 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len47 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %59, i32 0, i32 8
  %60 = load i32, i32* %tape_len47, align 4
  %cmp48 = icmp slt i32 %58, %60
  br i1 %cmp48, label %for.body50, label %for.end58

for.body50:                                       ; preds = %for.cond46
  %61 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %61, i32 1)
  %62 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur51 = load i8*, i8** %args, align 4
  %argp.next52 = getelementptr inbounds i8, i8* %argp.cur51, i32 4
  store i8* %argp.next52, i8** %args, align 4
  %63 = bitcast i8* %argp.cur51 to i32*
  %64 = load i32, i32* %63, align 4
  %conv53 = trunc i32 %64 to i8
  %call54 = call i32 @symbol_index(%struct.turing_t* %62, i8 signext %conv53)
  %65 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape55 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %65, i32 0, i32 9
  %66 = load %struct.tape_t*, %struct.tape_t** %tape55, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %66, i32 0, i32 0
  store i32 %call54, i32* %symbol, align 4
  br label %for.inc56

for.inc56:                                        ; preds = %for.body50
  %67 = load i32, i32* %i, align 4
  %inc57 = add nsw i32 %67, 1
  store i32 %inc57, i32* %i, align 4
  br label %for.cond46

for.end58:                                        ; preds = %for.cond46
  %68 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len59 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %68, i32 0, i32 8
  %69 = load i32, i32* %tape_len59, align 4
  %tobool = icmp ne i32 %69, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.end58
  %70 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %70, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end58
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %71 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape60 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %71, i32 0, i32 9
  %72 = load %struct.tape_t*, %struct.tape_t** %tape60, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %72, i32 0, i32 1
  %73 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool61 = icmp ne %struct.tape_t* %73, null
  br i1 %tobool61, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %74 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape62 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %74, i32 0, i32 9
  %75 = load %struct.tape_t*, %struct.tape_t** %tape62, align 4
  %left63 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %75, i32 0, i32 1
  %76 = load %struct.tape_t*, %struct.tape_t** %left63, align 4
  %77 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape64 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %77, i32 0, i32 9
  store %struct.tape_t* %76, %struct.tape_t** %tape64, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %argp.cur65 = load i8*, i8** %args, align 4
  %argp.next66 = getelementptr inbounds i8, i8* %argp.cur65, i32 4
  store i8* %argp.next66, i8** %args, align 4
  %78 = bitcast i8* %argp.cur65 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %80, i32 0, i32 10
  store i32 %79, i32* %transitions_len, align 4
  %81 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len67 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %81, i32 0, i32 0
  %82 = load i32, i32* %states_len67, align 4
  %mul68 = mul i32 %82, 4
  %call69 = call noalias i8* @malloc(i32 %mul68)
  %83 = bitcast i8* %call69 to %struct.transition_t***
  %84 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %84, i32 0, i32 11
  store %struct.transition_t*** %83, %struct.transition_t**** %transitions, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc80, %while.end
  %85 = load i32, i32* %i, align 4
  %86 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len71 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %86, i32 0, i32 0
  %87 = load i32, i32* %states_len71, align 4
  %cmp72 = icmp slt i32 %85, %87
  br i1 %cmp72, label %for.body74, label %for.end82

for.body74:                                       ; preds = %for.cond70
  %88 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len75 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %88, i32 0, i32 4
  %89 = load i32, i32* %symbols_len75, align 4
  %mul76 = mul i32 %89, 4
  %call77 = call noalias i8* @malloc(i32 %mul76)
  %90 = bitcast i8* %call77 to %struct.transition_t**
  %91 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions78 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %91, i32 0, i32 11
  %92 = load %struct.transition_t***, %struct.transition_t**** %transitions78, align 4
  %93 = load i32, i32* %i, align 4
  %arrayidx79 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %92, i32 %93
  store %struct.transition_t** %90, %struct.transition_t*** %arrayidx79, align 4
  br label %for.inc80

for.inc80:                                        ; preds = %for.body74
  %94 = load i32, i32* %i, align 4
  %inc81 = add nsw i32 %94, 1
  store i32 %inc81, i32* %i, align 4
  br label %for.cond70

for.end82:                                        ; preds = %for.cond70
  store i32 0, i32* %i, align 4
  br label %for.cond83

for.cond83:                                       ; preds = %for.inc110, %for.end82
  %95 = load i32, i32* %i, align 4
  %96 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len84 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %96, i32 0, i32 10
  %97 = load i32, i32* %transitions_len84, align 4
  %cmp85 = icmp slt i32 %95, %97
  br i1 %cmp85, label %for.body87, label %for.end112

for.body87:                                       ; preds = %for.cond83
  %call88 = call noalias i8* @malloc(i32 20)
  %98 = bitcast i8* %call88 to %struct.transition_t*
  store %struct.transition_t* %98, %struct.transition_t** %tran, align 4
  %99 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur89 = load i8*, i8** %args, align 4
  %argp.next90 = getelementptr inbounds i8, i8* %argp.cur89, i32 4
  store i8* %argp.next90, i8** %args, align 4
  %100 = bitcast i8* %argp.cur89 to i8**
  %101 = load i8*, i8** %100, align 4
  %call91 = call i32 @state_index(%struct.turing_t* %99, i8* %101)
  %102 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %102, i32 0, i32 0
  store i32 %call91, i32* %state1, align 4
  %103 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur92 = load i8*, i8** %args, align 4
  %argp.next93 = getelementptr inbounds i8, i8* %argp.cur92, i32 4
  store i8* %argp.next93, i8** %args, align 4
  %104 = bitcast i8* %argp.cur92 to i32*
  %105 = load i32, i32* %104, align 4
  %conv94 = trunc i32 %105 to i8
  %call95 = call i32 @symbol_index(%struct.turing_t* %103, i8 signext %conv94)
  %106 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %106, i32 0, i32 1
  store i32 %call95, i32* %symbol1, align 4
  %107 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur96 = load i8*, i8** %args, align 4
  %argp.next97 = getelementptr inbounds i8, i8* %argp.cur96, i32 4
  store i8* %argp.next97, i8** %args, align 4
  %108 = bitcast i8* %argp.cur96 to i32*
  %109 = load i32, i32* %108, align 4
  %conv98 = trunc i32 %109 to i8
  %call99 = call i32 @symbol_index(%struct.turing_t* %107, i8 signext %conv98)
  %110 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %110, i32 0, i32 2
  store i32 %call99, i32* %symbol2, align 4
  %argp.cur100 = load i8*, i8** %args, align 4
  %argp.next101 = getelementptr inbounds i8, i8* %argp.cur100, i32 4
  store i8* %argp.next101, i8** %args, align 4
  %111 = bitcast i8* %argp.cur100 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %113, i32 0, i32 3
  store i32 %112, i32* %dir, align 4
  %114 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur102 = load i8*, i8** %args, align 4
  %argp.next103 = getelementptr inbounds i8, i8* %argp.cur102, i32 4
  store i8* %argp.next103, i8** %args, align 4
  %115 = bitcast i8* %argp.cur102 to i8**
  %116 = load i8*, i8** %115, align 4
  %call104 = call i32 @state_index(%struct.turing_t* %114, i8* %116)
  %117 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %117, i32 0, i32 4
  store i32 %call104, i32* %state2, align 4
  %118 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %119 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions105 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %119, i32 0, i32 11
  %120 = load %struct.transition_t***, %struct.transition_t**** %transitions105, align 4
  %121 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1106 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %121, i32 0, i32 0
  %122 = load i32, i32* %state1106, align 4
  %arrayidx107 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %120, i32 %122
  %123 = load %struct.transition_t**, %struct.transition_t*** %arrayidx107, align 4
  %124 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1108 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %124, i32 0, i32 1
  %125 = load i32, i32* %symbol1108, align 4
  %arrayidx109 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %123, i32 %125
  store %struct.transition_t* %118, %struct.transition_t** %arrayidx109, align 4
  br label %for.inc110

for.inc110:                                       ; preds = %for.body87
  %126 = load i32, i32* %i, align 4
  %inc111 = add nsw i32 %126, 1
  store i32 %inc111, i32* %i, align 4
  br label %for.cond83

for.end112:                                       ; preds = %for.cond83
  %args113 = bitcast i8** %args to i8*
  call void @llvm.va_end(i8* %args113)
  %127 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  ret %struct.turing_t* %127
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8* %0) #3

declare noalias i8* @malloc(i32 %0) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8* %0) #3

; Function Attrs: noinline nounwind optnone
define hidden void @print_state(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %tape = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 1
  %1 = load i8**, i8*** %states, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 7
  %3 = load i32, i32* %state, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %1, i32 %3
  %4 = load i8*, i8** %arrayidx, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* %4)
  %5 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape1 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 9
  %6 = load %struct.tape_t*, %struct.tape_t** %tape1, align 4
  store %struct.tape_t* %6, %struct.tape_t** %tape, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %7 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %7, i32 0, i32 1
  %8 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool = icmp ne %struct.tape_t* %8, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %9 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left2 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %9, i32 0, i32 1
  %10 = load %struct.tape_t*, %struct.tape_t** %left2, align 4
  store %struct.tape_t* %10, %struct.tape_t** %tape, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond3

while.cond3:                                      ; preds = %if.end, %while.end
  %11 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %tobool4 = icmp ne %struct.tape_t* %11, null
  br i1 %tobool4, label %while.body5, label %while.end14

while.body5:                                      ; preds = %while.cond3
  %12 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %cmp = icmp eq %struct.tape_t* %12, %14
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body5
  %15 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %15, i32 0, i32 5
  %16 = load i8*, i8** %symbols, align 4
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %16, i32 %18
  %19 = load i8, i8* %arrayidx7, align 1
  %conv = sext i8 %19 to i32
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %conv)
  br label %if.end

if.else:                                          ; preds = %while.body5
  %20 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 5
  %21 = load i8*, i8** %symbols9, align 4
  %22 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol10 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %22, i32 0, i32 0
  %23 = load i32, i32* %symbol10, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %21, i32 %23
  %24 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %24 to i32
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 %conv12)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %25, i32 0, i32 2
  %26 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  store %struct.tape_t* %26, %struct.tape_t** %tape, align 4
  br label %while.cond3

while.end14:                                      ; preds = %while.cond3
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0))
  ret void
}

declare i32 @printf(i8* %0, ...) #2

; Function Attrs: noinline nounwind optnone
define hidden void @run(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  br label %while.body

while.body:                                       ; preds = %entry, %for.end
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  call void @print_state(%struct.turing_t* %0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %1 = load i32, i32* %i, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 2
  %3 = load i32, i32* %final_states_len, align 4
  %cmp = icmp slt i32 %1, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %4, i32 0, i32 3
  %5 = load i32*, i32** %final_states, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i32, i32* %5, i32 %6
  %7 = load i32, i32* %arrayidx, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 7
  %9 = load i32, i32* %state, align 4
  %cmp1 = icmp eq i32 %7, %9
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  ret void

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 11
  %12 = load %struct.transition_t***, %struct.transition_t**** %transitions, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 7
  %14 = load i32, i32* %state2, align 4
  %arrayidx3 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %12, i32 %14
  %15 = load %struct.transition_t**, %struct.transition_t*** %arrayidx3, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 9
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx4 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %15, i32 %18
  %19 = load %struct.transition_t*, %struct.transition_t** %arrayidx4, align 4
  store %struct.transition_t* %19, %struct.transition_t** %tran, align 4
  %20 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %20, i32 0, i32 2
  %21 = load i32, i32* %symbol2, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 9
  %23 = load %struct.tape_t*, %struct.tape_t** %tape5, align 4
  %symbol6 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %23, i32 0, i32 0
  store i32 %21, i32* %symbol6, align 4
  %24 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %25 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %25, i32 0, i32 3
  %26 = load i32, i32* %dir, align 4
  call void @move(%struct.turing_t* %24, i32 %26)
  %27 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state27 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %27, i32 0, i32 4
  %28 = load i32, i32* %state27, align 4
  %29 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state8 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %29, i32 0, i32 7
  store i32 %28, i32* %state8, align 4
  br label %while.body
}

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %t = alloca %struct.turing_t*, align 4
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0))
  %call1 = call %struct.turing_t* (i32, ...) @create(i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 2, i32 66, i32 49, i32 66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 3, i32 49, i32 49, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 66, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0))
  store %struct.turing_t* %call1, %struct.turing_t** %t, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %0)
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i32 0, i32 0))
  %call3 = call %struct.turing_t* (i32, ...) @create(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 2, i32 48, i32 49, i32 48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 0, i32 6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 48, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 49, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 49, i32 49, i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0))
  store %struct.turing_t* %call3, %struct.turing_t** %t, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %1)
  ret i32 0
}

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readonly }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %0 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %2 = load i32, i32* %states_len, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp = icmp slt i32 %0, %2
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
infer %2

; *****
; For LLVM instruction:
;  %5 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %call = call i32 @strcmp(i8* %6, i8* %7) #4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %tobool = icmp ne i32 %call, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %8 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %9 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc = add nsw i32 %9, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %10 = load i32, i32* %retval, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
infer %2


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 268435457
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for state_index()

; entering Souper's runOnFunction() for symbol_index()

; ModuleID = './Universal_Turing_machine.c.bc'
source_filename = "./Universal_Turing_machine.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.turing_t = type { i32, i8**, i32, i32*, i32, i8*, i32, i32, i32, %struct.tape_t*, i32, %struct.transition_t*** }
%struct.tape_t = type { i32, %struct.tape_t*, %struct.tape_t* }
%struct.transition_t = type { i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [7 x i8] c"%-10s \00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"[%c]\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c" %c \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Simple incrementer\0A\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"q0\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"qf\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"\0AThree-state busy beaver\0A\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"halt\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @state_index(%struct.turing_t* %t, i8* %state) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %state.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8* %state, i8** %state.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 0
  %2 = load i32, i32* %states_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 1
  %4 = load i8**, i8*** %states, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %4, i32 %5
  %6 = load i8*, i8** %arrayidx, align 4
  %7 = load i8*, i8** %state.addr, align 4
  %call = call i32 @strcmp(i8* %6, i8* %7) #4
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* %0, i8* %1) #1

; Function Attrs: noinline nounwind optnone
define hidden i32 @symbol_index(%struct.turing_t* %t, i8 signext %symbol) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %symbol.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8 %symbol, i8* %symbol.addr, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 4
  %2 = load i32, i32* %symbols_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 5
  %4 = load i8*, i8** %symbols, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %5
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %7 = load i8, i8* %symbol.addr, align 1
  %conv1 = sext i8 %7 to i32
  %cmp2 = icmp eq i32 %conv, %conv1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone
define hidden void @move(%struct.turing_t* %t, i32 %dir) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %dir.addr = alloca i32, align 4
  %orig = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i32 %dir, i32* %dir.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 9
  %1 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  store %struct.tape_t* %1, %struct.tape_t** %orig, align 4
  %2 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %if.then, label %if.else13

if.then:                                          ; preds = %entry
  %3 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool = icmp ne %struct.tape_t* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %4, i32 0, i32 2
  %5 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  %tobool1 = icmp ne %struct.tape_t* %5, null
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %land.lhs.true
  %6 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right3 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %6, i32 0, i32 2
  %7 = load %struct.tape_t*, %struct.tape_t** %right3, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 9
  store %struct.tape_t* %7, %struct.tape_t** %tape4, align 4
  br label %if.end12

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call = call noalias i8* @calloc(i32 1, i32 12)
  %9 = bitcast i8* %call to %struct.tape_t*
  %10 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 9
  store %struct.tape_t* %9, %struct.tape_t** %tape5, align 4
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 6
  %12 = load i32, i32* %blank, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %14, i32 0, i32 0
  store i32 %12, i32* %symbol, align 4
  %15 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool7 = icmp ne %struct.tape_t* %15, null
  br i1 %tobool7, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.else
  %16 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 9
  %18 = load %struct.tape_t*, %struct.tape_t** %tape9, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %18, i32 0, i32 1
  store %struct.tape_t* %16, %struct.tape_t** %left, align 4
  %19 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape10 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %19, i32 0, i32 9
  %20 = load %struct.tape_t*, %struct.tape_t** %tape10, align 4
  %21 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right11 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %21, i32 0, i32 2
  store %struct.tape_t* %20, %struct.tape_t** %right11, align 4
  br label %if.end

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then2
  br label %if.end38

if.else13:                                        ; preds = %entry
  %22 = load i32, i32* %dir.addr, align 4
  %cmp14 = icmp eq i32 %22, 0
  br i1 %cmp14, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.else13
  %23 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool16 = icmp ne %struct.tape_t* %23, null
  br i1 %tobool16, label %land.lhs.true17, label %if.else23

land.lhs.true17:                                  ; preds = %if.then15
  %24 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left18 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %24, i32 0, i32 1
  %25 = load %struct.tape_t*, %struct.tape_t** %left18, align 4
  %tobool19 = icmp ne %struct.tape_t* %25, null
  br i1 %tobool19, label %if.then20, label %if.else23

if.then20:                                        ; preds = %land.lhs.true17
  %26 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left21 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %26, i32 0, i32 1
  %27 = load %struct.tape_t*, %struct.tape_t** %left21, align 4
  %28 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape22 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %28, i32 0, i32 9
  store %struct.tape_t* %27, %struct.tape_t** %tape22, align 4
  br label %if.end36

if.else23:                                        ; preds = %land.lhs.true17, %if.then15
  %call24 = call noalias i8* @calloc(i32 1, i32 12)
  %29 = bitcast i8* %call24 to %struct.tape_t*
  %30 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape25 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %30, i32 0, i32 9
  store %struct.tape_t* %29, %struct.tape_t** %tape25, align 4
  %31 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank26 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %31, i32 0, i32 6
  %32 = load i32, i32* %blank26, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 9
  %34 = load %struct.tape_t*, %struct.tape_t** %tape27, align 4
  %symbol28 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %34, i32 0, i32 0
  store i32 %32, i32* %symbol28, align 4
  %35 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool29 = icmp ne %struct.tape_t* %35, null
  br i1 %tobool29, label %if.then30, label %if.end35

if.then30:                                        ; preds = %if.else23
  %36 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %37 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape31 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %37, i32 0, i32 9
  %38 = load %struct.tape_t*, %struct.tape_t** %tape31, align 4
  %right32 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %38, i32 0, i32 2
  store %struct.tape_t* %36, %struct.tape_t** %right32, align 4
  %39 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape33 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %39, i32 0, i32 9
  %40 = load %struct.tape_t*, %struct.tape_t** %tape33, align 4
  %41 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left34 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %41, i32 0, i32 1
  store %struct.tape_t* %40, %struct.tape_t** %left34, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then30, %if.else23
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then20
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.else13
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end12
  ret void
}

declare noalias i8* @calloc(i32 %0, i32 %1) #2

; Function Attrs: noinline nounwind optnone
define hidden %struct.turing_t* @create(i32 %states_len, ...) #0 {
entry:
  %states_len.addr = alloca i32, align 4
  %args = alloca i8*, align 4
  %t = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store i32 %states_len, i32* %states_len.addr, align 4
  %args1 = bitcast i8** %args to i8*
  call void @llvm.va_start(i8* %args1)
  %call = call noalias i8* @malloc(i32 48)
  %0 = bitcast i8* %call to %struct.turing_t*
  store %struct.turing_t* %0, %struct.turing_t** %t, align 4
  %1 = load i32, i32* %states_len.addr, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 0
  store i32 %1, i32* %states_len2, align 4
  %3 = load i32, i32* %states_len.addr, align 4
  %mul = mul i32 %3, 4
  %call3 = call noalias i8* @malloc(i32 %mul)
  %4 = bitcast i8* %call3 to i8**
  %5 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 1
  store i8** %4, i8*** %states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* %states_len.addr, align 4
  %cmp = icmp slt i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %argp.cur = load i8*, i8** %args, align 4
  %argp.next = getelementptr inbounds i8, i8* %argp.cur, i32 4
  store i8* %argp.next, i8** %args, align 4
  %8 = bitcast i8* %argp.cur to i8**
  %9 = load i8*, i8** %8, align 4
  %10 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 1
  %11 = load i8**, i8*** %states4, align 4
  %12 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %11, i32 %12
  store i8* %9, i8** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %argp.cur5 = load i8*, i8** %args, align 4
  %argp.next6 = getelementptr inbounds i8, i8* %argp.cur5, i32 4
  store i8* %argp.next6, i8** %args, align 4
  %14 = bitcast i8* %argp.cur5 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 2
  store i32 %15, i32* %final_states_len, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len7 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 2
  %18 = load i32, i32* %final_states_len7, align 4
  %mul8 = mul i32 %18, 4
  %call9 = call noalias i8* @malloc(i32 %mul8)
  %19 = bitcast i8* %call9 to i32*
  %20 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 3
  store i32* %19, i32** %final_states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc19, %for.end
  %21 = load i32, i32* %i, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len11 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 2
  %23 = load i32, i32* %final_states_len11, align 4
  %cmp12 = icmp slt i32 %21, %23
  br i1 %cmp12, label %for.body13, label %for.end21

for.body13:                                       ; preds = %for.cond10
  %24 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur14 = load i8*, i8** %args, align 4
  %argp.next15 = getelementptr inbounds i8, i8* %argp.cur14, i32 4
  store i8* %argp.next15, i8** %args, align 4
  %25 = bitcast i8* %argp.cur14 to i8**
  %26 = load i8*, i8** %25, align 4
  %call16 = call i32 @state_index(%struct.turing_t* %24, i8* %26)
  %27 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states17 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %27, i32 0, i32 3
  %28 = load i32*, i32** %final_states17, align 4
  %29 = load i32, i32* %i, align 4
  %arrayidx18 = getelementptr inbounds i32, i32* %28, i32 %29
  store i32 %call16, i32* %arrayidx18, align 4
  br label %for.inc19

for.inc19:                                        ; preds = %for.body13
  %30 = load i32, i32* %i, align 4
  %inc20 = add nsw i32 %30, 1
  store i32 %inc20, i32* %i, align 4
  br label %for.cond10

for.end21:                                        ; preds = %for.cond10
  %argp.cur22 = load i8*, i8** %args, align 4
  %argp.next23 = getelementptr inbounds i8, i8* %argp.cur22, i32 4
  store i8* %argp.next23, i8** %args, align 4
  %31 = bitcast i8* %argp.cur22 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 4
  store i32 %32, i32* %symbols_len, align 4
  %34 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len24 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %34, i32 0, i32 4
  %35 = load i32, i32* %symbols_len24, align 4
  %call25 = call noalias i8* @malloc(i32 %35)
  %36 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %36, i32 0, i32 5
  store i8* %call25, i8** %symbols, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc34, %for.end21
  %37 = load i32, i32* %i, align 4
  %38 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %38, i32 0, i32 4
  %39 = load i32, i32* %symbols_len27, align 4
  %cmp28 = icmp slt i32 %37, %39
  br i1 %cmp28, label %for.body29, label %for.end36

for.body29:                                       ; preds = %for.cond26
  %argp.cur30 = load i8*, i8** %args, align 4
  %argp.next31 = getelementptr inbounds i8, i8* %argp.cur30, i32 4
  store i8* %argp.next31, i8** %args, align 4
  %40 = bitcast i8* %argp.cur30 to i32*
  %41 = load i32, i32* %40, align 4
  %conv = trunc i32 %41 to i8
  %42 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols32 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %42, i32 0, i32 5
  %43 = load i8*, i8** %symbols32, align 4
  %44 = load i32, i32* %i, align 4
  %arrayidx33 = getelementptr inbounds i8, i8* %43, i32 %44
  store i8 %conv, i8* %arrayidx33, align 1
  br label %for.inc34

for.inc34:                                        ; preds = %for.body29
  %45 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %45, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond26

for.end36:                                        ; preds = %for.cond26
  %46 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur37 = load i8*, i8** %args, align 4
  %argp.next38 = getelementptr inbounds i8, i8* %argp.cur37, i32 4
  store i8* %argp.next38, i8** %args, align 4
  %47 = bitcast i8* %argp.cur37 to i32*
  %48 = load i32, i32* %47, align 4
  %conv39 = trunc i32 %48 to i8
  %call40 = call i32 @symbol_index(%struct.turing_t* %46, i8 signext %conv39)
  %49 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %49, i32 0, i32 6
  store i32 %call40, i32* %blank, align 4
  %50 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur41 = load i8*, i8** %args, align 4
  %argp.next42 = getelementptr inbounds i8, i8* %argp.cur41, i32 4
  store i8* %argp.next42, i8** %args, align 4
  %51 = bitcast i8* %argp.cur41 to i8**
  %52 = load i8*, i8** %51, align 4
  %call43 = call i32 @state_index(%struct.turing_t* %50, i8* %52)
  %53 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %53, i32 0, i32 7
  store i32 %call43, i32* %state, align 4
  %argp.cur44 = load i8*, i8** %args, align 4
  %argp.next45 = getelementptr inbounds i8, i8* %argp.cur44, i32 4
  store i8* %argp.next45, i8** %args, align 4
  %54 = bitcast i8* %argp.cur44 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %56, i32 0, i32 8
  store i32 %55, i32* %tape_len, align 4
  %57 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %57, i32 0, i32 9
  store %struct.tape_t* null, %struct.tape_t** %tape, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc56, %for.end36
  %58 = load i32, i32* %i, align 4
  %59 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len47 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %59, i32 0, i32 8
  %60 = load i32, i32* %tape_len47, align 4
  %cmp48 = icmp slt i32 %58, %60
  br i1 %cmp48, label %for.body50, label %for.end58

for.body50:                                       ; preds = %for.cond46
  %61 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %61, i32 1)
  %62 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur51 = load i8*, i8** %args, align 4
  %argp.next52 = getelementptr inbounds i8, i8* %argp.cur51, i32 4
  store i8* %argp.next52, i8** %args, align 4
  %63 = bitcast i8* %argp.cur51 to i32*
  %64 = load i32, i32* %63, align 4
  %conv53 = trunc i32 %64 to i8
  %call54 = call i32 @symbol_index(%struct.turing_t* %62, i8 signext %conv53)
  %65 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape55 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %65, i32 0, i32 9
  %66 = load %struct.tape_t*, %struct.tape_t** %tape55, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %66, i32 0, i32 0
  store i32 %call54, i32* %symbol, align 4
  br label %for.inc56

for.inc56:                                        ; preds = %for.body50
  %67 = load i32, i32* %i, align 4
  %inc57 = add nsw i32 %67, 1
  store i32 %inc57, i32* %i, align 4
  br label %for.cond46

for.end58:                                        ; preds = %for.cond46
  %68 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len59 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %68, i32 0, i32 8
  %69 = load i32, i32* %tape_len59, align 4
  %tobool = icmp ne i32 %69, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.end58
  %70 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %70, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end58
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %71 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape60 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %71, i32 0, i32 9
  %72 = load %struct.tape_t*, %struct.tape_t** %tape60, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %72, i32 0, i32 1
  %73 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool61 = icmp ne %struct.tape_t* %73, null
  br i1 %tobool61, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %74 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape62 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %74, i32 0, i32 9
  %75 = load %struct.tape_t*, %struct.tape_t** %tape62, align 4
  %left63 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %75, i32 0, i32 1
  %76 = load %struct.tape_t*, %struct.tape_t** %left63, align 4
  %77 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape64 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %77, i32 0, i32 9
  store %struct.tape_t* %76, %struct.tape_t** %tape64, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %argp.cur65 = load i8*, i8** %args, align 4
  %argp.next66 = getelementptr inbounds i8, i8* %argp.cur65, i32 4
  store i8* %argp.next66, i8** %args, align 4
  %78 = bitcast i8* %argp.cur65 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %80, i32 0, i32 10
  store i32 %79, i32* %transitions_len, align 4
  %81 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len67 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %81, i32 0, i32 0
  %82 = load i32, i32* %states_len67, align 4
  %mul68 = mul i32 %82, 4
  %call69 = call noalias i8* @malloc(i32 %mul68)
  %83 = bitcast i8* %call69 to %struct.transition_t***
  %84 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %84, i32 0, i32 11
  store %struct.transition_t*** %83, %struct.transition_t**** %transitions, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc80, %while.end
  %85 = load i32, i32* %i, align 4
  %86 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len71 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %86, i32 0, i32 0
  %87 = load i32, i32* %states_len71, align 4
  %cmp72 = icmp slt i32 %85, %87
  br i1 %cmp72, label %for.body74, label %for.end82

for.body74:                                       ; preds = %for.cond70
  %88 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len75 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %88, i32 0, i32 4
  %89 = load i32, i32* %symbols_len75, align 4
  %mul76 = mul i32 %89, 4
  %call77 = call noalias i8* @malloc(i32 %mul76)
  %90 = bitcast i8* %call77 to %struct.transition_t**
  %91 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions78 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %91, i32 0, i32 11
  %92 = load %struct.transition_t***, %struct.transition_t**** %transitions78, align 4
  %93 = load i32, i32* %i, align 4
  %arrayidx79 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %92, i32 %93
  store %struct.transition_t** %90, %struct.transition_t*** %arrayidx79, align 4
  br label %for.inc80

for.inc80:                                        ; preds = %for.body74
  %94 = load i32, i32* %i, align 4
  %inc81 = add nsw i32 %94, 1
  store i32 %inc81, i32* %i, align 4
  br label %for.cond70

for.end82:                                        ; preds = %for.cond70
  store i32 0, i32* %i, align 4
  br label %for.cond83

for.cond83:                                       ; preds = %for.inc110, %for.end82
  %95 = load i32, i32* %i, align 4
  %96 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len84 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %96, i32 0, i32 10
  %97 = load i32, i32* %transitions_len84, align 4
  %cmp85 = icmp slt i32 %95, %97
  br i1 %cmp85, label %for.body87, label %for.end112

for.body87:                                       ; preds = %for.cond83
  %call88 = call noalias i8* @malloc(i32 20)
  %98 = bitcast i8* %call88 to %struct.transition_t*
  store %struct.transition_t* %98, %struct.transition_t** %tran, align 4
  %99 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur89 = load i8*, i8** %args, align 4
  %argp.next90 = getelementptr inbounds i8, i8* %argp.cur89, i32 4
  store i8* %argp.next90, i8** %args, align 4
  %100 = bitcast i8* %argp.cur89 to i8**
  %101 = load i8*, i8** %100, align 4
  %call91 = call i32 @state_index(%struct.turing_t* %99, i8* %101)
  %102 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %102, i32 0, i32 0
  store i32 %call91, i32* %state1, align 4
  %103 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur92 = load i8*, i8** %args, align 4
  %argp.next93 = getelementptr inbounds i8, i8* %argp.cur92, i32 4
  store i8* %argp.next93, i8** %args, align 4
  %104 = bitcast i8* %argp.cur92 to i32*
  %105 = load i32, i32* %104, align 4
  %conv94 = trunc i32 %105 to i8
  %call95 = call i32 @symbol_index(%struct.turing_t* %103, i8 signext %conv94)
  %106 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %106, i32 0, i32 1
  store i32 %call95, i32* %symbol1, align 4
  %107 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur96 = load i8*, i8** %args, align 4
  %argp.next97 = getelementptr inbounds i8, i8* %argp.cur96, i32 4
  store i8* %argp.next97, i8** %args, align 4
  %108 = bitcast i8* %argp.cur96 to i32*
  %109 = load i32, i32* %108, align 4
  %conv98 = trunc i32 %109 to i8
  %call99 = call i32 @symbol_index(%struct.turing_t* %107, i8 signext %conv98)
  %110 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %110, i32 0, i32 2
  store i32 %call99, i32* %symbol2, align 4
  %argp.cur100 = load i8*, i8** %args, align 4
  %argp.next101 = getelementptr inbounds i8, i8* %argp.cur100, i32 4
  store i8* %argp.next101, i8** %args, align 4
  %111 = bitcast i8* %argp.cur100 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %113, i32 0, i32 3
  store i32 %112, i32* %dir, align 4
  %114 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur102 = load i8*, i8** %args, align 4
  %argp.next103 = getelementptr inbounds i8, i8* %argp.cur102, i32 4
  store i8* %argp.next103, i8** %args, align 4
  %115 = bitcast i8* %argp.cur102 to i8**
  %116 = load i8*, i8** %115, align 4
  %call104 = call i32 @state_index(%struct.turing_t* %114, i8* %116)
  %117 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %117, i32 0, i32 4
  store i32 %call104, i32* %state2, align 4
  %118 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %119 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions105 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %119, i32 0, i32 11
  %120 = load %struct.transition_t***, %struct.transition_t**** %transitions105, align 4
  %121 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1106 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %121, i32 0, i32 0
  %122 = load i32, i32* %state1106, align 4
  %arrayidx107 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %120, i32 %122
  %123 = load %struct.transition_t**, %struct.transition_t*** %arrayidx107, align 4
  %124 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1108 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %124, i32 0, i32 1
  %125 = load i32, i32* %symbol1108, align 4
  %arrayidx109 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %123, i32 %125
  store %struct.transition_t* %118, %struct.transition_t** %arrayidx109, align 4
  br label %for.inc110

for.inc110:                                       ; preds = %for.body87
  %126 = load i32, i32* %i, align 4
  %inc111 = add nsw i32 %126, 1
  store i32 %inc111, i32* %i, align 4
  br label %for.cond83

for.end112:                                       ; preds = %for.cond83
  %args113 = bitcast i8** %args to i8*
  call void @llvm.va_end(i8* %args113)
  %127 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  ret %struct.turing_t* %127
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8* %0) #3

declare noalias i8* @malloc(i32 %0) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8* %0) #3

; Function Attrs: noinline nounwind optnone
define hidden void @print_state(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %tape = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 1
  %1 = load i8**, i8*** %states, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 7
  %3 = load i32, i32* %state, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %1, i32 %3
  %4 = load i8*, i8** %arrayidx, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* %4)
  %5 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape1 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 9
  %6 = load %struct.tape_t*, %struct.tape_t** %tape1, align 4
  store %struct.tape_t* %6, %struct.tape_t** %tape, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %7 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %7, i32 0, i32 1
  %8 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool = icmp ne %struct.tape_t* %8, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %9 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left2 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %9, i32 0, i32 1
  %10 = load %struct.tape_t*, %struct.tape_t** %left2, align 4
  store %struct.tape_t* %10, %struct.tape_t** %tape, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond3

while.cond3:                                      ; preds = %if.end, %while.end
  %11 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %tobool4 = icmp ne %struct.tape_t* %11, null
  br i1 %tobool4, label %while.body5, label %while.end14

while.body5:                                      ; preds = %while.cond3
  %12 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %cmp = icmp eq %struct.tape_t* %12, %14
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body5
  %15 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %15, i32 0, i32 5
  %16 = load i8*, i8** %symbols, align 4
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %16, i32 %18
  %19 = load i8, i8* %arrayidx7, align 1
  %conv = sext i8 %19 to i32
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %conv)
  br label %if.end

if.else:                                          ; preds = %while.body5
  %20 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 5
  %21 = load i8*, i8** %symbols9, align 4
  %22 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol10 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %22, i32 0, i32 0
  %23 = load i32, i32* %symbol10, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %21, i32 %23
  %24 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %24 to i32
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 %conv12)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %25, i32 0, i32 2
  %26 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  store %struct.tape_t* %26, %struct.tape_t** %tape, align 4
  br label %while.cond3

while.end14:                                      ; preds = %while.cond3
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0))
  ret void
}

declare i32 @printf(i8* %0, ...) #2

; Function Attrs: noinline nounwind optnone
define hidden void @run(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  br label %while.body

while.body:                                       ; preds = %entry, %for.end
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  call void @print_state(%struct.turing_t* %0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %1 = load i32, i32* %i, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 2
  %3 = load i32, i32* %final_states_len, align 4
  %cmp = icmp slt i32 %1, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %4, i32 0, i32 3
  %5 = load i32*, i32** %final_states, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i32, i32* %5, i32 %6
  %7 = load i32, i32* %arrayidx, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 7
  %9 = load i32, i32* %state, align 4
  %cmp1 = icmp eq i32 %7, %9
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  ret void

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 11
  %12 = load %struct.transition_t***, %struct.transition_t**** %transitions, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 7
  %14 = load i32, i32* %state2, align 4
  %arrayidx3 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %12, i32 %14
  %15 = load %struct.transition_t**, %struct.transition_t*** %arrayidx3, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 9
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx4 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %15, i32 %18
  %19 = load %struct.transition_t*, %struct.transition_t** %arrayidx4, align 4
  store %struct.transition_t* %19, %struct.transition_t** %tran, align 4
  %20 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %20, i32 0, i32 2
  %21 = load i32, i32* %symbol2, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 9
  %23 = load %struct.tape_t*, %struct.tape_t** %tape5, align 4
  %symbol6 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %23, i32 0, i32 0
  store i32 %21, i32* %symbol6, align 4
  %24 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %25 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %25, i32 0, i32 3
  %26 = load i32, i32* %dir, align 4
  call void @move(%struct.turing_t* %24, i32 %26)
  %27 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state27 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %27, i32 0, i32 4
  %28 = load i32, i32* %state27, align 4
  %29 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state8 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %29, i32 0, i32 7
  store i32 %28, i32* %state8, align 4
  br label %while.body
}

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %t = alloca %struct.turing_t*, align 4
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0))
  %call1 = call %struct.turing_t* (i32, ...) @create(i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 2, i32 66, i32 49, i32 66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 3, i32 49, i32 49, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 66, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0))
  store %struct.turing_t* %call1, %struct.turing_t** %t, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %0)
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i32 0, i32 0))
  %call3 = call %struct.turing_t* (i32, ...) @create(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 2, i32 48, i32 49, i32 48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 0, i32 6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 48, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 49, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 49, i32 49, i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0))
  store %struct.turing_t* %call3, %struct.turing_t** %t, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %1)
  ret i32 0
}

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readonly }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %0 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %2 = load i32, i32* %symbols_len, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp = icmp slt i32 %0, %2
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
infer %2

; *****
; For LLVM instruction:
;  %5 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %6 = load i8, i8* %arrayidx, align 1
; Looking for a replacement for:
%0:i8 = var
infer %0

; *****
; For LLVM instruction:
;  %conv = sext i8 %6 to i32
; Looking for a replacement for:
%0:i8 = var
%1:i32 = sext %0
infer %1

; *****
; For LLVM instruction:
;  %7 = load i8, i8* %symbol.addr, align 1
; Looking for a replacement for:
%0:i8 = var
infer %0

; *****
; For LLVM instruction:
;  %conv1 = sext i8 %7 to i32
; Looking for a replacement for:
%0:i8 = var
%1:i32 = sext %0
infer %1

; *****
; For LLVM instruction:
;  %cmp2 = icmp eq i32 %conv, %conv1
; Looking for a replacement for:
%0:i8 = var
%1:i32 = sext %0
%2:i8 = var
%3:i32 = sext %2
%4:i1 = eq %1, %3
infer %4

; *****
; For LLVM instruction:
;  %8 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %9 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc = add nsw i32 %9, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %10 = load i32, i32* %retval, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0
got 1 candidates from LHS

-------------------------------------------------
%0:i8 = var
infer %0


--------------------------------
guess 0

%0:i8 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i8 = var
%1:i32 = sext %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 5 candidates from LHS

-------------------------------------------------
%0:i8 = var
%1:i32 = sext %0
%2:i8 = var
%3:i32 = sext %2
%4:i1 = eq %1, %3
infer %4


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for symbol_index()

; entering Souper's runOnFunction() for move()

; ModuleID = './Universal_Turing_machine.c.bc'
source_filename = "./Universal_Turing_machine.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.turing_t = type { i32, i8**, i32, i32*, i32, i8*, i32, i32, i32, %struct.tape_t*, i32, %struct.transition_t*** }
%struct.tape_t = type { i32, %struct.tape_t*, %struct.tape_t* }
%struct.transition_t = type { i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [7 x i8] c"%-10s \00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"[%c]\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c" %c \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Simple incrementer\0A\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"q0\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"qf\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"\0AThree-state busy beaver\0A\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"halt\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @state_index(%struct.turing_t* %t, i8* %state) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %state.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8* %state, i8** %state.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 0
  %2 = load i32, i32* %states_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 1
  %4 = load i8**, i8*** %states, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %4, i32 %5
  %6 = load i8*, i8** %arrayidx, align 4
  %7 = load i8*, i8** %state.addr, align 4
  %call = call i32 @strcmp(i8* %6, i8* %7) #4
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* %0, i8* %1) #1

; Function Attrs: noinline nounwind optnone
define hidden i32 @symbol_index(%struct.turing_t* %t, i8 signext %symbol) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %symbol.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8 %symbol, i8* %symbol.addr, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 4
  %2 = load i32, i32* %symbols_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 5
  %4 = load i8*, i8** %symbols, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %5
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %7 = load i8, i8* %symbol.addr, align 1
  %conv1 = sext i8 %7 to i32
  %cmp2 = icmp eq i32 %conv, %conv1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone
define hidden void @move(%struct.turing_t* %t, i32 %dir) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %dir.addr = alloca i32, align 4
  %orig = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i32 %dir, i32* %dir.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 9
  %1 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  store %struct.tape_t* %1, %struct.tape_t** %orig, align 4
  %2 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %if.then, label %if.else13

if.then:                                          ; preds = %entry
  %3 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool = icmp ne %struct.tape_t* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %4, i32 0, i32 2
  %5 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  %tobool1 = icmp ne %struct.tape_t* %5, null
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %land.lhs.true
  %6 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right3 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %6, i32 0, i32 2
  %7 = load %struct.tape_t*, %struct.tape_t** %right3, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 9
  store %struct.tape_t* %7, %struct.tape_t** %tape4, align 4
  br label %if.end12

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call = call noalias i8* @calloc(i32 1, i32 12)
  %9 = bitcast i8* %call to %struct.tape_t*
  %10 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 9
  store %struct.tape_t* %9, %struct.tape_t** %tape5, align 4
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 6
  %12 = load i32, i32* %blank, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %14, i32 0, i32 0
  store i32 %12, i32* %symbol, align 4
  %15 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool7 = icmp ne %struct.tape_t* %15, null
  br i1 %tobool7, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.else
  %16 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 9
  %18 = load %struct.tape_t*, %struct.tape_t** %tape9, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %18, i32 0, i32 1
  store %struct.tape_t* %16, %struct.tape_t** %left, align 4
  %19 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape10 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %19, i32 0, i32 9
  %20 = load %struct.tape_t*, %struct.tape_t** %tape10, align 4
  %21 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right11 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %21, i32 0, i32 2
  store %struct.tape_t* %20, %struct.tape_t** %right11, align 4
  br label %if.end

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then2
  br label %if.end38

if.else13:                                        ; preds = %entry
  %22 = load i32, i32* %dir.addr, align 4
  %cmp14 = icmp eq i32 %22, 0
  br i1 %cmp14, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.else13
  %23 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool16 = icmp ne %struct.tape_t* %23, null
  br i1 %tobool16, label %land.lhs.true17, label %if.else23

land.lhs.true17:                                  ; preds = %if.then15
  %24 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left18 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %24, i32 0, i32 1
  %25 = load %struct.tape_t*, %struct.tape_t** %left18, align 4
  %tobool19 = icmp ne %struct.tape_t* %25, null
  br i1 %tobool19, label %if.then20, label %if.else23

if.then20:                                        ; preds = %land.lhs.true17
  %26 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left21 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %26, i32 0, i32 1
  %27 = load %struct.tape_t*, %struct.tape_t** %left21, align 4
  %28 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape22 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %28, i32 0, i32 9
  store %struct.tape_t* %27, %struct.tape_t** %tape22, align 4
  br label %if.end36

if.else23:                                        ; preds = %land.lhs.true17, %if.then15
  %call24 = call noalias i8* @calloc(i32 1, i32 12)
  %29 = bitcast i8* %call24 to %struct.tape_t*
  %30 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape25 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %30, i32 0, i32 9
  store %struct.tape_t* %29, %struct.tape_t** %tape25, align 4
  %31 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank26 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %31, i32 0, i32 6
  %32 = load i32, i32* %blank26, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 9
  %34 = load %struct.tape_t*, %struct.tape_t** %tape27, align 4
  %symbol28 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %34, i32 0, i32 0
  store i32 %32, i32* %symbol28, align 4
  %35 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool29 = icmp ne %struct.tape_t* %35, null
  br i1 %tobool29, label %if.then30, label %if.end35

if.then30:                                        ; preds = %if.else23
  %36 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %37 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape31 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %37, i32 0, i32 9
  %38 = load %struct.tape_t*, %struct.tape_t** %tape31, align 4
  %right32 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %38, i32 0, i32 2
  store %struct.tape_t* %36, %struct.tape_t** %right32, align 4
  %39 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape33 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %39, i32 0, i32 9
  %40 = load %struct.tape_t*, %struct.tape_t** %tape33, align 4
  %41 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left34 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %41, i32 0, i32 1
  store %struct.tape_t* %40, %struct.tape_t** %left34, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then30, %if.else23
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then20
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.else13
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end12
  ret void
}

declare noalias i8* @calloc(i32 %0, i32 %1) #2

; Function Attrs: noinline nounwind optnone
define hidden %struct.turing_t* @create(i32 %states_len, ...) #0 {
entry:
  %states_len.addr = alloca i32, align 4
  %args = alloca i8*, align 4
  %t = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store i32 %states_len, i32* %states_len.addr, align 4
  %args1 = bitcast i8** %args to i8*
  call void @llvm.va_start(i8* %args1)
  %call = call noalias i8* @malloc(i32 48)
  %0 = bitcast i8* %call to %struct.turing_t*
  store %struct.turing_t* %0, %struct.turing_t** %t, align 4
  %1 = load i32, i32* %states_len.addr, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 0
  store i32 %1, i32* %states_len2, align 4
  %3 = load i32, i32* %states_len.addr, align 4
  %mul = mul i32 %3, 4
  %call3 = call noalias i8* @malloc(i32 %mul)
  %4 = bitcast i8* %call3 to i8**
  %5 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 1
  store i8** %4, i8*** %states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* %states_len.addr, align 4
  %cmp = icmp slt i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %argp.cur = load i8*, i8** %args, align 4
  %argp.next = getelementptr inbounds i8, i8* %argp.cur, i32 4
  store i8* %argp.next, i8** %args, align 4
  %8 = bitcast i8* %argp.cur to i8**
  %9 = load i8*, i8** %8, align 4
  %10 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 1
  %11 = load i8**, i8*** %states4, align 4
  %12 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %11, i32 %12
  store i8* %9, i8** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %argp.cur5 = load i8*, i8** %args, align 4
  %argp.next6 = getelementptr inbounds i8, i8* %argp.cur5, i32 4
  store i8* %argp.next6, i8** %args, align 4
  %14 = bitcast i8* %argp.cur5 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 2
  store i32 %15, i32* %final_states_len, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len7 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 2
  %18 = load i32, i32* %final_states_len7, align 4
  %mul8 = mul i32 %18, 4
  %call9 = call noalias i8* @malloc(i32 %mul8)
  %19 = bitcast i8* %call9 to i32*
  %20 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 3
  store i32* %19, i32** %final_states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc19, %for.end
  %21 = load i32, i32* %i, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len11 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 2
  %23 = load i32, i32* %final_states_len11, align 4
  %cmp12 = icmp slt i32 %21, %23
  br i1 %cmp12, label %for.body13, label %for.end21

for.body13:                                       ; preds = %for.cond10
  %24 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur14 = load i8*, i8** %args, align 4
  %argp.next15 = getelementptr inbounds i8, i8* %argp.cur14, i32 4
  store i8* %argp.next15, i8** %args, align 4
  %25 = bitcast i8* %argp.cur14 to i8**
  %26 = load i8*, i8** %25, align 4
  %call16 = call i32 @state_index(%struct.turing_t* %24, i8* %26)
  %27 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states17 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %27, i32 0, i32 3
  %28 = load i32*, i32** %final_states17, align 4
  %29 = load i32, i32* %i, align 4
  %arrayidx18 = getelementptr inbounds i32, i32* %28, i32 %29
  store i32 %call16, i32* %arrayidx18, align 4
  br label %for.inc19

for.inc19:                                        ; preds = %for.body13
  %30 = load i32, i32* %i, align 4
  %inc20 = add nsw i32 %30, 1
  store i32 %inc20, i32* %i, align 4
  br label %for.cond10

for.end21:                                        ; preds = %for.cond10
  %argp.cur22 = load i8*, i8** %args, align 4
  %argp.next23 = getelementptr inbounds i8, i8* %argp.cur22, i32 4
  store i8* %argp.next23, i8** %args, align 4
  %31 = bitcast i8* %argp.cur22 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 4
  store i32 %32, i32* %symbols_len, align 4
  %34 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len24 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %34, i32 0, i32 4
  %35 = load i32, i32* %symbols_len24, align 4
  %call25 = call noalias i8* @malloc(i32 %35)
  %36 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %36, i32 0, i32 5
  store i8* %call25, i8** %symbols, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc34, %for.end21
  %37 = load i32, i32* %i, align 4
  %38 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %38, i32 0, i32 4
  %39 = load i32, i32* %symbols_len27, align 4
  %cmp28 = icmp slt i32 %37, %39
  br i1 %cmp28, label %for.body29, label %for.end36

for.body29:                                       ; preds = %for.cond26
  %argp.cur30 = load i8*, i8** %args, align 4
  %argp.next31 = getelementptr inbounds i8, i8* %argp.cur30, i32 4
  store i8* %argp.next31, i8** %args, align 4
  %40 = bitcast i8* %argp.cur30 to i32*
  %41 = load i32, i32* %40, align 4
  %conv = trunc i32 %41 to i8
  %42 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols32 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %42, i32 0, i32 5
  %43 = load i8*, i8** %symbols32, align 4
  %44 = load i32, i32* %i, align 4
  %arrayidx33 = getelementptr inbounds i8, i8* %43, i32 %44
  store i8 %conv, i8* %arrayidx33, align 1
  br label %for.inc34

for.inc34:                                        ; preds = %for.body29
  %45 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %45, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond26

for.end36:                                        ; preds = %for.cond26
  %46 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur37 = load i8*, i8** %args, align 4
  %argp.next38 = getelementptr inbounds i8, i8* %argp.cur37, i32 4
  store i8* %argp.next38, i8** %args, align 4
  %47 = bitcast i8* %argp.cur37 to i32*
  %48 = load i32, i32* %47, align 4
  %conv39 = trunc i32 %48 to i8
  %call40 = call i32 @symbol_index(%struct.turing_t* %46, i8 signext %conv39)
  %49 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %49, i32 0, i32 6
  store i32 %call40, i32* %blank, align 4
  %50 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur41 = load i8*, i8** %args, align 4
  %argp.next42 = getelementptr inbounds i8, i8* %argp.cur41, i32 4
  store i8* %argp.next42, i8** %args, align 4
  %51 = bitcast i8* %argp.cur41 to i8**
  %52 = load i8*, i8** %51, align 4
  %call43 = call i32 @state_index(%struct.turing_t* %50, i8* %52)
  %53 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %53, i32 0, i32 7
  store i32 %call43, i32* %state, align 4
  %argp.cur44 = load i8*, i8** %args, align 4
  %argp.next45 = getelementptr inbounds i8, i8* %argp.cur44, i32 4
  store i8* %argp.next45, i8** %args, align 4
  %54 = bitcast i8* %argp.cur44 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %56, i32 0, i32 8
  store i32 %55, i32* %tape_len, align 4
  %57 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %57, i32 0, i32 9
  store %struct.tape_t* null, %struct.tape_t** %tape, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc56, %for.end36
  %58 = load i32, i32* %i, align 4
  %59 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len47 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %59, i32 0, i32 8
  %60 = load i32, i32* %tape_len47, align 4
  %cmp48 = icmp slt i32 %58, %60
  br i1 %cmp48, label %for.body50, label %for.end58

for.body50:                                       ; preds = %for.cond46
  %61 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %61, i32 1)
  %62 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur51 = load i8*, i8** %args, align 4
  %argp.next52 = getelementptr inbounds i8, i8* %argp.cur51, i32 4
  store i8* %argp.next52, i8** %args, align 4
  %63 = bitcast i8* %argp.cur51 to i32*
  %64 = load i32, i32* %63, align 4
  %conv53 = trunc i32 %64 to i8
  %call54 = call i32 @symbol_index(%struct.turing_t* %62, i8 signext %conv53)
  %65 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape55 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %65, i32 0, i32 9
  %66 = load %struct.tape_t*, %struct.tape_t** %tape55, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %66, i32 0, i32 0
  store i32 %call54, i32* %symbol, align 4
  br label %for.inc56

for.inc56:                                        ; preds = %for.body50
  %67 = load i32, i32* %i, align 4
  %inc57 = add nsw i32 %67, 1
  store i32 %inc57, i32* %i, align 4
  br label %for.cond46

for.end58:                                        ; preds = %for.cond46
  %68 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len59 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %68, i32 0, i32 8
  %69 = load i32, i32* %tape_len59, align 4
  %tobool = icmp ne i32 %69, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.end58
  %70 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %70, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end58
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %71 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape60 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %71, i32 0, i32 9
  %72 = load %struct.tape_t*, %struct.tape_t** %tape60, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %72, i32 0, i32 1
  %73 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool61 = icmp ne %struct.tape_t* %73, null
  br i1 %tobool61, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %74 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape62 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %74, i32 0, i32 9
  %75 = load %struct.tape_t*, %struct.tape_t** %tape62, align 4
  %left63 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %75, i32 0, i32 1
  %76 = load %struct.tape_t*, %struct.tape_t** %left63, align 4
  %77 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape64 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %77, i32 0, i32 9
  store %struct.tape_t* %76, %struct.tape_t** %tape64, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %argp.cur65 = load i8*, i8** %args, align 4
  %argp.next66 = getelementptr inbounds i8, i8* %argp.cur65, i32 4
  store i8* %argp.next66, i8** %args, align 4
  %78 = bitcast i8* %argp.cur65 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %80, i32 0, i32 10
  store i32 %79, i32* %transitions_len, align 4
  %81 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len67 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %81, i32 0, i32 0
  %82 = load i32, i32* %states_len67, align 4
  %mul68 = mul i32 %82, 4
  %call69 = call noalias i8* @malloc(i32 %mul68)
  %83 = bitcast i8* %call69 to %struct.transition_t***
  %84 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %84, i32 0, i32 11
  store %struct.transition_t*** %83, %struct.transition_t**** %transitions, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc80, %while.end
  %85 = load i32, i32* %i, align 4
  %86 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len71 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %86, i32 0, i32 0
  %87 = load i32, i32* %states_len71, align 4
  %cmp72 = icmp slt i32 %85, %87
  br i1 %cmp72, label %for.body74, label %for.end82

for.body74:                                       ; preds = %for.cond70
  %88 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len75 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %88, i32 0, i32 4
  %89 = load i32, i32* %symbols_len75, align 4
  %mul76 = mul i32 %89, 4
  %call77 = call noalias i8* @malloc(i32 %mul76)
  %90 = bitcast i8* %call77 to %struct.transition_t**
  %91 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions78 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %91, i32 0, i32 11
  %92 = load %struct.transition_t***, %struct.transition_t**** %transitions78, align 4
  %93 = load i32, i32* %i, align 4
  %arrayidx79 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %92, i32 %93
  store %struct.transition_t** %90, %struct.transition_t*** %arrayidx79, align 4
  br label %for.inc80

for.inc80:                                        ; preds = %for.body74
  %94 = load i32, i32* %i, align 4
  %inc81 = add nsw i32 %94, 1
  store i32 %inc81, i32* %i, align 4
  br label %for.cond70

for.end82:                                        ; preds = %for.cond70
  store i32 0, i32* %i, align 4
  br label %for.cond83

for.cond83:                                       ; preds = %for.inc110, %for.end82
  %95 = load i32, i32* %i, align 4
  %96 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len84 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %96, i32 0, i32 10
  %97 = load i32, i32* %transitions_len84, align 4
  %cmp85 = icmp slt i32 %95, %97
  br i1 %cmp85, label %for.body87, label %for.end112

for.body87:                                       ; preds = %for.cond83
  %call88 = call noalias i8* @malloc(i32 20)
  %98 = bitcast i8* %call88 to %struct.transition_t*
  store %struct.transition_t* %98, %struct.transition_t** %tran, align 4
  %99 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur89 = load i8*, i8** %args, align 4
  %argp.next90 = getelementptr inbounds i8, i8* %argp.cur89, i32 4
  store i8* %argp.next90, i8** %args, align 4
  %100 = bitcast i8* %argp.cur89 to i8**
  %101 = load i8*, i8** %100, align 4
  %call91 = call i32 @state_index(%struct.turing_t* %99, i8* %101)
  %102 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %102, i32 0, i32 0
  store i32 %call91, i32* %state1, align 4
  %103 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur92 = load i8*, i8** %args, align 4
  %argp.next93 = getelementptr inbounds i8, i8* %argp.cur92, i32 4
  store i8* %argp.next93, i8** %args, align 4
  %104 = bitcast i8* %argp.cur92 to i32*
  %105 = load i32, i32* %104, align 4
  %conv94 = trunc i32 %105 to i8
  %call95 = call i32 @symbol_index(%struct.turing_t* %103, i8 signext %conv94)
  %106 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %106, i32 0, i32 1
  store i32 %call95, i32* %symbol1, align 4
  %107 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur96 = load i8*, i8** %args, align 4
  %argp.next97 = getelementptr inbounds i8, i8* %argp.cur96, i32 4
  store i8* %argp.next97, i8** %args, align 4
  %108 = bitcast i8* %argp.cur96 to i32*
  %109 = load i32, i32* %108, align 4
  %conv98 = trunc i32 %109 to i8
  %call99 = call i32 @symbol_index(%struct.turing_t* %107, i8 signext %conv98)
  %110 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %110, i32 0, i32 2
  store i32 %call99, i32* %symbol2, align 4
  %argp.cur100 = load i8*, i8** %args, align 4
  %argp.next101 = getelementptr inbounds i8, i8* %argp.cur100, i32 4
  store i8* %argp.next101, i8** %args, align 4
  %111 = bitcast i8* %argp.cur100 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %113, i32 0, i32 3
  store i32 %112, i32* %dir, align 4
  %114 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur102 = load i8*, i8** %args, align 4
  %argp.next103 = getelementptr inbounds i8, i8* %argp.cur102, i32 4
  store i8* %argp.next103, i8** %args, align 4
  %115 = bitcast i8* %argp.cur102 to i8**
  %116 = load i8*, i8** %115, align 4
  %call104 = call i32 @state_index(%struct.turing_t* %114, i8* %116)
  %117 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %117, i32 0, i32 4
  store i32 %call104, i32* %state2, align 4
  %118 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %119 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions105 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %119, i32 0, i32 11
  %120 = load %struct.transition_t***, %struct.transition_t**** %transitions105, align 4
  %121 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1106 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %121, i32 0, i32 0
  %122 = load i32, i32* %state1106, align 4
  %arrayidx107 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %120, i32 %122
  %123 = load %struct.transition_t**, %struct.transition_t*** %arrayidx107, align 4
  %124 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1108 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %124, i32 0, i32 1
  %125 = load i32, i32* %symbol1108, align 4
  %arrayidx109 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %123, i32 %125
  store %struct.transition_t* %118, %struct.transition_t** %arrayidx109, align 4
  br label %for.inc110

for.inc110:                                       ; preds = %for.body87
  %126 = load i32, i32* %i, align 4
  %inc111 = add nsw i32 %126, 1
  store i32 %inc111, i32* %i, align 4
  br label %for.cond83

for.end112:                                       ; preds = %for.cond83
  %args113 = bitcast i8** %args to i8*
  call void @llvm.va_end(i8* %args113)
  %127 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  ret %struct.turing_t* %127
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8* %0) #3

declare noalias i8* @malloc(i32 %0) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8* %0) #3

; Function Attrs: noinline nounwind optnone
define hidden void @print_state(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %tape = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 1
  %1 = load i8**, i8*** %states, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 7
  %3 = load i32, i32* %state, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %1, i32 %3
  %4 = load i8*, i8** %arrayidx, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* %4)
  %5 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape1 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 9
  %6 = load %struct.tape_t*, %struct.tape_t** %tape1, align 4
  store %struct.tape_t* %6, %struct.tape_t** %tape, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %7 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %7, i32 0, i32 1
  %8 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool = icmp ne %struct.tape_t* %8, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %9 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left2 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %9, i32 0, i32 1
  %10 = load %struct.tape_t*, %struct.tape_t** %left2, align 4
  store %struct.tape_t* %10, %struct.tape_t** %tape, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond3

while.cond3:                                      ; preds = %if.end, %while.end
  %11 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %tobool4 = icmp ne %struct.tape_t* %11, null
  br i1 %tobool4, label %while.body5, label %while.end14

while.body5:                                      ; preds = %while.cond3
  %12 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %cmp = icmp eq %struct.tape_t* %12, %14
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body5
  %15 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %15, i32 0, i32 5
  %16 = load i8*, i8** %symbols, align 4
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %16, i32 %18
  %19 = load i8, i8* %arrayidx7, align 1
  %conv = sext i8 %19 to i32
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %conv)
  br label %if.end

if.else:                                          ; preds = %while.body5
  %20 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 5
  %21 = load i8*, i8** %symbols9, align 4
  %22 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol10 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %22, i32 0, i32 0
  %23 = load i32, i32* %symbol10, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %21, i32 %23
  %24 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %24 to i32
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 %conv12)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %25, i32 0, i32 2
  %26 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  store %struct.tape_t* %26, %struct.tape_t** %tape, align 4
  br label %while.cond3

while.end14:                                      ; preds = %while.cond3
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0))
  ret void
}

declare i32 @printf(i8* %0, ...) #2

; Function Attrs: noinline nounwind optnone
define hidden void @run(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  br label %while.body

while.body:                                       ; preds = %entry, %for.end
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  call void @print_state(%struct.turing_t* %0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %1 = load i32, i32* %i, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 2
  %3 = load i32, i32* %final_states_len, align 4
  %cmp = icmp slt i32 %1, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %4, i32 0, i32 3
  %5 = load i32*, i32** %final_states, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i32, i32* %5, i32 %6
  %7 = load i32, i32* %arrayidx, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 7
  %9 = load i32, i32* %state, align 4
  %cmp1 = icmp eq i32 %7, %9
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  ret void

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 11
  %12 = load %struct.transition_t***, %struct.transition_t**** %transitions, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 7
  %14 = load i32, i32* %state2, align 4
  %arrayidx3 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %12, i32 %14
  %15 = load %struct.transition_t**, %struct.transition_t*** %arrayidx3, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 9
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx4 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %15, i32 %18
  %19 = load %struct.transition_t*, %struct.transition_t** %arrayidx4, align 4
  store %struct.transition_t* %19, %struct.transition_t** %tran, align 4
  %20 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %20, i32 0, i32 2
  %21 = load i32, i32* %symbol2, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 9
  %23 = load %struct.tape_t*, %struct.tape_t** %tape5, align 4
  %symbol6 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %23, i32 0, i32 0
  store i32 %21, i32* %symbol6, align 4
  %24 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %25 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %25, i32 0, i32 3
  %26 = load i32, i32* %dir, align 4
  call void @move(%struct.turing_t* %24, i32 %26)
  %27 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state27 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %27, i32 0, i32 4
  %28 = load i32, i32* %state27, align 4
  %29 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state8 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %29, i32 0, i32 7
  store i32 %28, i32* %state8, align 4
  br label %while.body
}

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %t = alloca %struct.turing_t*, align 4
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0))
  %call1 = call %struct.turing_t* (i32, ...) @create(i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 2, i32 66, i32 49, i32 66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 3, i32 49, i32 49, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 66, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0))
  store %struct.turing_t* %call1, %struct.turing_t** %t, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %0)
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i32 0, i32 0))
  %call3 = call %struct.turing_t* (i32, ...) @create(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 2, i32 48, i32 49, i32 48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 0, i32 6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 48, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 49, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 49, i32 49, i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0))
  store %struct.turing_t* %call3, %struct.turing_t** %t, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %1)
  ret i32 0
}

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readonly }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %2 = load i32, i32* %dir.addr, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp = icmp eq i32 %2, 1
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %tobool = icmp ne %struct.tape_t* %3, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %tobool1 = icmp ne %struct.tape_t* %5, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %12 = load i32, i32* %blank, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %tobool7 = icmp ne %struct.tape_t* %15, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %22 = load i32, i32* %dir.addr, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp14 = icmp eq i32 %22, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %tobool16 = icmp ne %struct.tape_t* %23, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %tobool19 = icmp ne %struct.tape_t* %25, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %32 = load i32, i32* %blank26, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %tobool29 = icmp ne %struct.tape_t* %35, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = eq 1:i32, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for move()

; entering Souper's runOnFunction() for create()

; ModuleID = './Universal_Turing_machine.c.bc'
source_filename = "./Universal_Turing_machine.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.turing_t = type { i32, i8**, i32, i32*, i32, i8*, i32, i32, i32, %struct.tape_t*, i32, %struct.transition_t*** }
%struct.tape_t = type { i32, %struct.tape_t*, %struct.tape_t* }
%struct.transition_t = type { i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [7 x i8] c"%-10s \00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"[%c]\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c" %c \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Simple incrementer\0A\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"q0\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"qf\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"\0AThree-state busy beaver\0A\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"halt\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @state_index(%struct.turing_t* %t, i8* %state) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %state.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8* %state, i8** %state.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 0
  %2 = load i32, i32* %states_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 1
  %4 = load i8**, i8*** %states, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %4, i32 %5
  %6 = load i8*, i8** %arrayidx, align 4
  %7 = load i8*, i8** %state.addr, align 4
  %call = call i32 @strcmp(i8* %6, i8* %7) #4
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* %0, i8* %1) #1

; Function Attrs: noinline nounwind optnone
define hidden i32 @symbol_index(%struct.turing_t* %t, i8 signext %symbol) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %symbol.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8 %symbol, i8* %symbol.addr, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 4
  %2 = load i32, i32* %symbols_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 5
  %4 = load i8*, i8** %symbols, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %5
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %7 = load i8, i8* %symbol.addr, align 1
  %conv1 = sext i8 %7 to i32
  %cmp2 = icmp eq i32 %conv, %conv1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone
define hidden void @move(%struct.turing_t* %t, i32 %dir) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %dir.addr = alloca i32, align 4
  %orig = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i32 %dir, i32* %dir.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 9
  %1 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  store %struct.tape_t* %1, %struct.tape_t** %orig, align 4
  %2 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %if.then, label %if.else13

if.then:                                          ; preds = %entry
  %3 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool = icmp ne %struct.tape_t* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %4, i32 0, i32 2
  %5 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  %tobool1 = icmp ne %struct.tape_t* %5, null
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %land.lhs.true
  %6 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right3 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %6, i32 0, i32 2
  %7 = load %struct.tape_t*, %struct.tape_t** %right3, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 9
  store %struct.tape_t* %7, %struct.tape_t** %tape4, align 4
  br label %if.end12

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call = call noalias i8* @calloc(i32 1, i32 12)
  %9 = bitcast i8* %call to %struct.tape_t*
  %10 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 9
  store %struct.tape_t* %9, %struct.tape_t** %tape5, align 4
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 6
  %12 = load i32, i32* %blank, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %14, i32 0, i32 0
  store i32 %12, i32* %symbol, align 4
  %15 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool7 = icmp ne %struct.tape_t* %15, null
  br i1 %tobool7, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.else
  %16 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 9
  %18 = load %struct.tape_t*, %struct.tape_t** %tape9, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %18, i32 0, i32 1
  store %struct.tape_t* %16, %struct.tape_t** %left, align 4
  %19 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape10 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %19, i32 0, i32 9
  %20 = load %struct.tape_t*, %struct.tape_t** %tape10, align 4
  %21 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right11 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %21, i32 0, i32 2
  store %struct.tape_t* %20, %struct.tape_t** %right11, align 4
  br label %if.end

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then2
  br label %if.end38

if.else13:                                        ; preds = %entry
  %22 = load i32, i32* %dir.addr, align 4
  %cmp14 = icmp eq i32 %22, 0
  br i1 %cmp14, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.else13
  %23 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool16 = icmp ne %struct.tape_t* %23, null
  br i1 %tobool16, label %land.lhs.true17, label %if.else23

land.lhs.true17:                                  ; preds = %if.then15
  %24 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left18 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %24, i32 0, i32 1
  %25 = load %struct.tape_t*, %struct.tape_t** %left18, align 4
  %tobool19 = icmp ne %struct.tape_t* %25, null
  br i1 %tobool19, label %if.then20, label %if.else23

if.then20:                                        ; preds = %land.lhs.true17
  %26 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left21 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %26, i32 0, i32 1
  %27 = load %struct.tape_t*, %struct.tape_t** %left21, align 4
  %28 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape22 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %28, i32 0, i32 9
  store %struct.tape_t* %27, %struct.tape_t** %tape22, align 4
  br label %if.end36

if.else23:                                        ; preds = %land.lhs.true17, %if.then15
  %call24 = call noalias i8* @calloc(i32 1, i32 12)
  %29 = bitcast i8* %call24 to %struct.tape_t*
  %30 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape25 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %30, i32 0, i32 9
  store %struct.tape_t* %29, %struct.tape_t** %tape25, align 4
  %31 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank26 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %31, i32 0, i32 6
  %32 = load i32, i32* %blank26, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 9
  %34 = load %struct.tape_t*, %struct.tape_t** %tape27, align 4
  %symbol28 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %34, i32 0, i32 0
  store i32 %32, i32* %symbol28, align 4
  %35 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool29 = icmp ne %struct.tape_t* %35, null
  br i1 %tobool29, label %if.then30, label %if.end35

if.then30:                                        ; preds = %if.else23
  %36 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %37 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape31 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %37, i32 0, i32 9
  %38 = load %struct.tape_t*, %struct.tape_t** %tape31, align 4
  %right32 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %38, i32 0, i32 2
  store %struct.tape_t* %36, %struct.tape_t** %right32, align 4
  %39 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape33 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %39, i32 0, i32 9
  %40 = load %struct.tape_t*, %struct.tape_t** %tape33, align 4
  %41 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left34 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %41, i32 0, i32 1
  store %struct.tape_t* %40, %struct.tape_t** %left34, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then30, %if.else23
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then20
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.else13
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end12
  ret void
}

declare noalias i8* @calloc(i32 %0, i32 %1) #2

; Function Attrs: noinline nounwind optnone
define hidden %struct.turing_t* @create(i32 %states_len, ...) #0 {
entry:
  %states_len.addr = alloca i32, align 4
  %args = alloca i8*, align 4
  %t = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store i32 %states_len, i32* %states_len.addr, align 4
  %args1 = bitcast i8** %args to i8*
  call void @llvm.va_start(i8* %args1)
  %call = call noalias i8* @malloc(i32 48)
  %0 = bitcast i8* %call to %struct.turing_t*
  store %struct.turing_t* %0, %struct.turing_t** %t, align 4
  %1 = load i32, i32* %states_len.addr, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 0
  store i32 %1, i32* %states_len2, align 4
  %3 = load i32, i32* %states_len.addr, align 4
  %mul = mul i32 %3, 4
  %call3 = call noalias i8* @malloc(i32 %mul)
  %4 = bitcast i8* %call3 to i8**
  %5 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 1
  store i8** %4, i8*** %states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* %states_len.addr, align 4
  %cmp = icmp slt i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %argp.cur = load i8*, i8** %args, align 4
  %argp.next = getelementptr inbounds i8, i8* %argp.cur, i32 4
  store i8* %argp.next, i8** %args, align 4
  %8 = bitcast i8* %argp.cur to i8**
  %9 = load i8*, i8** %8, align 4
  %10 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 1
  %11 = load i8**, i8*** %states4, align 4
  %12 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %11, i32 %12
  store i8* %9, i8** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %argp.cur5 = load i8*, i8** %args, align 4
  %argp.next6 = getelementptr inbounds i8, i8* %argp.cur5, i32 4
  store i8* %argp.next6, i8** %args, align 4
  %14 = bitcast i8* %argp.cur5 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 2
  store i32 %15, i32* %final_states_len, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len7 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 2
  %18 = load i32, i32* %final_states_len7, align 4
  %mul8 = mul i32 %18, 4
  %call9 = call noalias i8* @malloc(i32 %mul8)
  %19 = bitcast i8* %call9 to i32*
  %20 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 3
  store i32* %19, i32** %final_states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc19, %for.end
  %21 = load i32, i32* %i, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len11 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 2
  %23 = load i32, i32* %final_states_len11, align 4
  %cmp12 = icmp slt i32 %21, %23
  br i1 %cmp12, label %for.body13, label %for.end21

for.body13:                                       ; preds = %for.cond10
  %24 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur14 = load i8*, i8** %args, align 4
  %argp.next15 = getelementptr inbounds i8, i8* %argp.cur14, i32 4
  store i8* %argp.next15, i8** %args, align 4
  %25 = bitcast i8* %argp.cur14 to i8**
  %26 = load i8*, i8** %25, align 4
  %call16 = call i32 @state_index(%struct.turing_t* %24, i8* %26)
  %27 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states17 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %27, i32 0, i32 3
  %28 = load i32*, i32** %final_states17, align 4
  %29 = load i32, i32* %i, align 4
  %arrayidx18 = getelementptr inbounds i32, i32* %28, i32 %29
  store i32 %call16, i32* %arrayidx18, align 4
  br label %for.inc19

for.inc19:                                        ; preds = %for.body13
  %30 = load i32, i32* %i, align 4
  %inc20 = add nsw i32 %30, 1
  store i32 %inc20, i32* %i, align 4
  br label %for.cond10

for.end21:                                        ; preds = %for.cond10
  %argp.cur22 = load i8*, i8** %args, align 4
  %argp.next23 = getelementptr inbounds i8, i8* %argp.cur22, i32 4
  store i8* %argp.next23, i8** %args, align 4
  %31 = bitcast i8* %argp.cur22 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 4
  store i32 %32, i32* %symbols_len, align 4
  %34 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len24 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %34, i32 0, i32 4
  %35 = load i32, i32* %symbols_len24, align 4
  %call25 = call noalias i8* @malloc(i32 %35)
  %36 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %36, i32 0, i32 5
  store i8* %call25, i8** %symbols, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc34, %for.end21
  %37 = load i32, i32* %i, align 4
  %38 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %38, i32 0, i32 4
  %39 = load i32, i32* %symbols_len27, align 4
  %cmp28 = icmp slt i32 %37, %39
  br i1 %cmp28, label %for.body29, label %for.end36

for.body29:                                       ; preds = %for.cond26
  %argp.cur30 = load i8*, i8** %args, align 4
  %argp.next31 = getelementptr inbounds i8, i8* %argp.cur30, i32 4
  store i8* %argp.next31, i8** %args, align 4
  %40 = bitcast i8* %argp.cur30 to i32*
  %41 = load i32, i32* %40, align 4
  %conv = trunc i32 %41 to i8
  %42 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols32 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %42, i32 0, i32 5
  %43 = load i8*, i8** %symbols32, align 4
  %44 = load i32, i32* %i, align 4
  %arrayidx33 = getelementptr inbounds i8, i8* %43, i32 %44
  store i8 %conv, i8* %arrayidx33, align 1
  br label %for.inc34

for.inc34:                                        ; preds = %for.body29
  %45 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %45, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond26

for.end36:                                        ; preds = %for.cond26
  %46 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur37 = load i8*, i8** %args, align 4
  %argp.next38 = getelementptr inbounds i8, i8* %argp.cur37, i32 4
  store i8* %argp.next38, i8** %args, align 4
  %47 = bitcast i8* %argp.cur37 to i32*
  %48 = load i32, i32* %47, align 4
  %conv39 = trunc i32 %48 to i8
  %call40 = call i32 @symbol_index(%struct.turing_t* %46, i8 signext %conv39)
  %49 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %49, i32 0, i32 6
  store i32 %call40, i32* %blank, align 4
  %50 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur41 = load i8*, i8** %args, align 4
  %argp.next42 = getelementptr inbounds i8, i8* %argp.cur41, i32 4
  store i8* %argp.next42, i8** %args, align 4
  %51 = bitcast i8* %argp.cur41 to i8**
  %52 = load i8*, i8** %51, align 4
  %call43 = call i32 @state_index(%struct.turing_t* %50, i8* %52)
  %53 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %53, i32 0, i32 7
  store i32 %call43, i32* %state, align 4
  %argp.cur44 = load i8*, i8** %args, align 4
  %argp.next45 = getelementptr inbounds i8, i8* %argp.cur44, i32 4
  store i8* %argp.next45, i8** %args, align 4
  %54 = bitcast i8* %argp.cur44 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %56, i32 0, i32 8
  store i32 %55, i32* %tape_len, align 4
  %57 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %57, i32 0, i32 9
  store %struct.tape_t* null, %struct.tape_t** %tape, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc56, %for.end36
  %58 = load i32, i32* %i, align 4
  %59 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len47 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %59, i32 0, i32 8
  %60 = load i32, i32* %tape_len47, align 4
  %cmp48 = icmp slt i32 %58, %60
  br i1 %cmp48, label %for.body50, label %for.end58

for.body50:                                       ; preds = %for.cond46
  %61 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %61, i32 1)
  %62 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur51 = load i8*, i8** %args, align 4
  %argp.next52 = getelementptr inbounds i8, i8* %argp.cur51, i32 4
  store i8* %argp.next52, i8** %args, align 4
  %63 = bitcast i8* %argp.cur51 to i32*
  %64 = load i32, i32* %63, align 4
  %conv53 = trunc i32 %64 to i8
  %call54 = call i32 @symbol_index(%struct.turing_t* %62, i8 signext %conv53)
  %65 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape55 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %65, i32 0, i32 9
  %66 = load %struct.tape_t*, %struct.tape_t** %tape55, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %66, i32 0, i32 0
  store i32 %call54, i32* %symbol, align 4
  br label %for.inc56

for.inc56:                                        ; preds = %for.body50
  %67 = load i32, i32* %i, align 4
  %inc57 = add nsw i32 %67, 1
  store i32 %inc57, i32* %i, align 4
  br label %for.cond46

for.end58:                                        ; preds = %for.cond46
  %68 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len59 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %68, i32 0, i32 8
  %69 = load i32, i32* %tape_len59, align 4
  %tobool = icmp ne i32 %69, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.end58
  %70 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %70, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end58
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %71 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape60 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %71, i32 0, i32 9
  %72 = load %struct.tape_t*, %struct.tape_t** %tape60, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %72, i32 0, i32 1
  %73 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool61 = icmp ne %struct.tape_t* %73, null
  br i1 %tobool61, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %74 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape62 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %74, i32 0, i32 9
  %75 = load %struct.tape_t*, %struct.tape_t** %tape62, align 4
  %left63 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %75, i32 0, i32 1
  %76 = load %struct.tape_t*, %struct.tape_t** %left63, align 4
  %77 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape64 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %77, i32 0, i32 9
  store %struct.tape_t* %76, %struct.tape_t** %tape64, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %argp.cur65 = load i8*, i8** %args, align 4
  %argp.next66 = getelementptr inbounds i8, i8* %argp.cur65, i32 4
  store i8* %argp.next66, i8** %args, align 4
  %78 = bitcast i8* %argp.cur65 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %80, i32 0, i32 10
  store i32 %79, i32* %transitions_len, align 4
  %81 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len67 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %81, i32 0, i32 0
  %82 = load i32, i32* %states_len67, align 4
  %mul68 = mul i32 %82, 4
  %call69 = call noalias i8* @malloc(i32 %mul68)
  %83 = bitcast i8* %call69 to %struct.transition_t***
  %84 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %84, i32 0, i32 11
  store %struct.transition_t*** %83, %struct.transition_t**** %transitions, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc80, %while.end
  %85 = load i32, i32* %i, align 4
  %86 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len71 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %86, i32 0, i32 0
  %87 = load i32, i32* %states_len71, align 4
  %cmp72 = icmp slt i32 %85, %87
  br i1 %cmp72, label %for.body74, label %for.end82

for.body74:                                       ; preds = %for.cond70
  %88 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len75 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %88, i32 0, i32 4
  %89 = load i32, i32* %symbols_len75, align 4
  %mul76 = mul i32 %89, 4
  %call77 = call noalias i8* @malloc(i32 %mul76)
  %90 = bitcast i8* %call77 to %struct.transition_t**
  %91 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions78 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %91, i32 0, i32 11
  %92 = load %struct.transition_t***, %struct.transition_t**** %transitions78, align 4
  %93 = load i32, i32* %i, align 4
  %arrayidx79 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %92, i32 %93
  store %struct.transition_t** %90, %struct.transition_t*** %arrayidx79, align 4
  br label %for.inc80

for.inc80:                                        ; preds = %for.body74
  %94 = load i32, i32* %i, align 4
  %inc81 = add nsw i32 %94, 1
  store i32 %inc81, i32* %i, align 4
  br label %for.cond70

for.end82:                                        ; preds = %for.cond70
  store i32 0, i32* %i, align 4
  br label %for.cond83

for.cond83:                                       ; preds = %for.inc110, %for.end82
  %95 = load i32, i32* %i, align 4
  %96 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len84 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %96, i32 0, i32 10
  %97 = load i32, i32* %transitions_len84, align 4
  %cmp85 = icmp slt i32 %95, %97
  br i1 %cmp85, label %for.body87, label %for.end112

for.body87:                                       ; preds = %for.cond83
  %call88 = call noalias i8* @malloc(i32 20)
  %98 = bitcast i8* %call88 to %struct.transition_t*
  store %struct.transition_t* %98, %struct.transition_t** %tran, align 4
  %99 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur89 = load i8*, i8** %args, align 4
  %argp.next90 = getelementptr inbounds i8, i8* %argp.cur89, i32 4
  store i8* %argp.next90, i8** %args, align 4
  %100 = bitcast i8* %argp.cur89 to i8**
  %101 = load i8*, i8** %100, align 4
  %call91 = call i32 @state_index(%struct.turing_t* %99, i8* %101)
  %102 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %102, i32 0, i32 0
  store i32 %call91, i32* %state1, align 4
  %103 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur92 = load i8*, i8** %args, align 4
  %argp.next93 = getelementptr inbounds i8, i8* %argp.cur92, i32 4
  store i8* %argp.next93, i8** %args, align 4
  %104 = bitcast i8* %argp.cur92 to i32*
  %105 = load i32, i32* %104, align 4
  %conv94 = trunc i32 %105 to i8
  %call95 = call i32 @symbol_index(%struct.turing_t* %103, i8 signext %conv94)
  %106 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %106, i32 0, i32 1
  store i32 %call95, i32* %symbol1, align 4
  %107 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur96 = load i8*, i8** %args, align 4
  %argp.next97 = getelementptr inbounds i8, i8* %argp.cur96, i32 4
  store i8* %argp.next97, i8** %args, align 4
  %108 = bitcast i8* %argp.cur96 to i32*
  %109 = load i32, i32* %108, align 4
  %conv98 = trunc i32 %109 to i8
  %call99 = call i32 @symbol_index(%struct.turing_t* %107, i8 signext %conv98)
  %110 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %110, i32 0, i32 2
  store i32 %call99, i32* %symbol2, align 4
  %argp.cur100 = load i8*, i8** %args, align 4
  %argp.next101 = getelementptr inbounds i8, i8* %argp.cur100, i32 4
  store i8* %argp.next101, i8** %args, align 4
  %111 = bitcast i8* %argp.cur100 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %113, i32 0, i32 3
  store i32 %112, i32* %dir, align 4
  %114 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur102 = load i8*, i8** %args, align 4
  %argp.next103 = getelementptr inbounds i8, i8* %argp.cur102, i32 4
  store i8* %argp.next103, i8** %args, align 4
  %115 = bitcast i8* %argp.cur102 to i8**
  %116 = load i8*, i8** %115, align 4
  %call104 = call i32 @state_index(%struct.turing_t* %114, i8* %116)
  %117 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %117, i32 0, i32 4
  store i32 %call104, i32* %state2, align 4
  %118 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %119 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions105 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %119, i32 0, i32 11
  %120 = load %struct.transition_t***, %struct.transition_t**** %transitions105, align 4
  %121 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1106 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %121, i32 0, i32 0
  %122 = load i32, i32* %state1106, align 4
  %arrayidx107 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %120, i32 %122
  %123 = load %struct.transition_t**, %struct.transition_t*** %arrayidx107, align 4
  %124 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1108 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %124, i32 0, i32 1
  %125 = load i32, i32* %symbol1108, align 4
  %arrayidx109 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %123, i32 %125
  store %struct.transition_t* %118, %struct.transition_t** %arrayidx109, align 4
  br label %for.inc110

for.inc110:                                       ; preds = %for.body87
  %126 = load i32, i32* %i, align 4
  %inc111 = add nsw i32 %126, 1
  store i32 %inc111, i32* %i, align 4
  br label %for.cond83

for.end112:                                       ; preds = %for.cond83
  %args113 = bitcast i8** %args to i8*
  call void @llvm.va_end(i8* %args113)
  %127 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  ret %struct.turing_t* %127
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8* %0) #3

declare noalias i8* @malloc(i32 %0) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8* %0) #3

; Function Attrs: noinline nounwind optnone
define hidden void @print_state(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %tape = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 1
  %1 = load i8**, i8*** %states, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 7
  %3 = load i32, i32* %state, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %1, i32 %3
  %4 = load i8*, i8** %arrayidx, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* %4)
  %5 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape1 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 9
  %6 = load %struct.tape_t*, %struct.tape_t** %tape1, align 4
  store %struct.tape_t* %6, %struct.tape_t** %tape, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %7 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %7, i32 0, i32 1
  %8 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool = icmp ne %struct.tape_t* %8, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %9 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left2 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %9, i32 0, i32 1
  %10 = load %struct.tape_t*, %struct.tape_t** %left2, align 4
  store %struct.tape_t* %10, %struct.tape_t** %tape, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond3

while.cond3:                                      ; preds = %if.end, %while.end
  %11 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %tobool4 = icmp ne %struct.tape_t* %11, null
  br i1 %tobool4, label %while.body5, label %while.end14

while.body5:                                      ; preds = %while.cond3
  %12 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %cmp = icmp eq %struct.tape_t* %12, %14
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body5
  %15 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %15, i32 0, i32 5
  %16 = load i8*, i8** %symbols, align 4
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %16, i32 %18
  %19 = load i8, i8* %arrayidx7, align 1
  %conv = sext i8 %19 to i32
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %conv)
  br label %if.end

if.else:                                          ; preds = %while.body5
  %20 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 5
  %21 = load i8*, i8** %symbols9, align 4
  %22 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol10 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %22, i32 0, i32 0
  %23 = load i32, i32* %symbol10, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %21, i32 %23
  %24 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %24 to i32
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 %conv12)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %25, i32 0, i32 2
  %26 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  store %struct.tape_t* %26, %struct.tape_t** %tape, align 4
  br label %while.cond3

while.end14:                                      ; preds = %while.cond3
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0))
  ret void
}

declare i32 @printf(i8* %0, ...) #2

; Function Attrs: noinline nounwind optnone
define hidden void @run(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  br label %while.body

while.body:                                       ; preds = %entry, %for.end
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  call void @print_state(%struct.turing_t* %0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %1 = load i32, i32* %i, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 2
  %3 = load i32, i32* %final_states_len, align 4
  %cmp = icmp slt i32 %1, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %4, i32 0, i32 3
  %5 = load i32*, i32** %final_states, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i32, i32* %5, i32 %6
  %7 = load i32, i32* %arrayidx, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 7
  %9 = load i32, i32* %state, align 4
  %cmp1 = icmp eq i32 %7, %9
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  ret void

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 11
  %12 = load %struct.transition_t***, %struct.transition_t**** %transitions, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 7
  %14 = load i32, i32* %state2, align 4
  %arrayidx3 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %12, i32 %14
  %15 = load %struct.transition_t**, %struct.transition_t*** %arrayidx3, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 9
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx4 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %15, i32 %18
  %19 = load %struct.transition_t*, %struct.transition_t** %arrayidx4, align 4
  store %struct.transition_t* %19, %struct.transition_t** %tran, align 4
  %20 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %20, i32 0, i32 2
  %21 = load i32, i32* %symbol2, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 9
  %23 = load %struct.tape_t*, %struct.tape_t** %tape5, align 4
  %symbol6 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %23, i32 0, i32 0
  store i32 %21, i32* %symbol6, align 4
  %24 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %25 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %25, i32 0, i32 3
  %26 = load i32, i32* %dir, align 4
  call void @move(%struct.turing_t* %24, i32 %26)
  %27 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state27 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %27, i32 0, i32 4
  %28 = load i32, i32* %state27, align 4
  %29 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state8 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %29, i32 0, i32 7
  store i32 %28, i32* %state8, align 4
  br label %while.body
}

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %t = alloca %struct.turing_t*, align 4
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0))
  %call1 = call %struct.turing_t* (i32, ...) @create(i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 2, i32 66, i32 49, i32 66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 3, i32 49, i32 49, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 66, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0))
  store %struct.turing_t* %call1, %struct.turing_t** %t, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %0)
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i32 0, i32 0))
  %call3 = call %struct.turing_t* (i32, ...) @create(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 2, i32 48, i32 49, i32 48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 0, i32 6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 48, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 49, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 49, i32 49, i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0))
  store %struct.turing_t* %call3, %struct.turing_t** %t, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %1)
  ret i32 0
}

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readonly }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %1 = load i32, i32* %states_len.addr, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %3 = load i32, i32* %states_len.addr, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul = mul i32 %3, 4
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mul 4:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %6 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %7 = load i32, i32* %states_len.addr, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp = icmp slt i32 %6, %7
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
infer %2

; *****
; For LLVM instruction:
;  %12 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %13 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc = add nsw i32 %13, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %15 = load i32, i32* %14, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %18 = load i32, i32* %final_states_len7, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul8 = mul i32 %18, 4
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mul 4:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %21 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %23 = load i32, i32* %final_states_len11, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp12 = icmp slt i32 %21, %23
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
infer %2

; *****
; For LLVM instruction:
;  %call16 = call i32 @state_index(%struct.turing_t* %24, i8* %26)
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %29 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %30 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc20 = add nsw i32 %30, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %32 = load i32, i32* %31, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %35 = load i32, i32* %symbols_len24, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %37 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %39 = load i32, i32* %symbols_len27, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp28 = icmp slt i32 %37, %39
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
infer %2

; *****
; For LLVM instruction:
;  %41 = load i32, i32* %40, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0 (demandedBits=00000000000000000000000011111111)

; *****
; For LLVM instruction:
;  %conv = trunc i32 %41 to i8
; Looking for a replacement for:
%0:i32 = var
%1:i8 = trunc %0
infer %1

; *****
; For LLVM instruction:
;  %44 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %45 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc35 = add nsw i32 %45, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %48 = load i32, i32* %47, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0 (demandedBits=00000000000000000000000011111111)

; *****
; For LLVM instruction:
;  %conv39 = trunc i32 %48 to i8
; Looking for a replacement for:
%0:i32 = var
%1:i8 = trunc %0
infer %1

; *****
; For LLVM instruction:
;  %call40 = call i32 @symbol_index(%struct.turing_t* %46, i8 signext %conv39)
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %call43 = call i32 @state_index(%struct.turing_t* %50, i8* %52)
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %55 = load i32, i32* %54, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %58 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %60 = load i32, i32* %tape_len47, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp48 = icmp slt i32 %58, %60
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
infer %2

; *****
; For LLVM instruction:
;  %64 = load i32, i32* %63, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0 (demandedBits=00000000000000000000000011111111)

; *****
; For LLVM instruction:
;  %conv53 = trunc i32 %64 to i8
; Looking for a replacement for:
%0:i32 = var
%1:i8 = trunc %0
infer %1

; *****
; For LLVM instruction:
;  %call54 = call i32 @symbol_index(%struct.turing_t* %62, i8 signext %conv53)
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %67 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc57 = add nsw i32 %67, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %69 = load i32, i32* %tape_len59, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %tobool = icmp ne i32 %69, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %tobool61 = icmp ne %struct.tape_t* %73, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %79 = load i32, i32* %78, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %82 = load i32, i32* %states_len67, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul68 = mul i32 %82, 4
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mul 4:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %85 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %87 = load i32, i32* %states_len71, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp72 = icmp slt i32 %85, %87
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
infer %2

; *****
; For LLVM instruction:
;  %89 = load i32, i32* %symbols_len75, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %mul76 = mul i32 %89, 4
; Looking for a replacement for:
%0:i32 = var
%1:i32 = mul 4:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %93 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %94 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc81 = add nsw i32 %94, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %95 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %97 = load i32, i32* %transitions_len84, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp85 = icmp slt i32 %95, %97
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
infer %2

; *****
; For LLVM instruction:
;  %call91 = call i32 @state_index(%struct.turing_t* %99, i8* %101)
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %105 = load i32, i32* %104, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0 (demandedBits=00000000000000000000000011111111)

; *****
; For LLVM instruction:
;  %conv94 = trunc i32 %105 to i8
; Looking for a replacement for:
%0:i32 = var
%1:i8 = trunc %0
infer %1

; *****
; For LLVM instruction:
;  %call95 = call i32 @symbol_index(%struct.turing_t* %103, i8 signext %conv94)
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %109 = load i32, i32* %108, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0 (demandedBits=00000000000000000000000011111111)

; *****
; For LLVM instruction:
;  %conv98 = trunc i32 %109 to i8
; Looking for a replacement for:
%0:i32 = var
%1:i8 = trunc %0
infer %1

; *****
; For LLVM instruction:
;  %call99 = call i32 @symbol_index(%struct.turing_t* %107, i8 signext %conv98)
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %112 = load i32, i32* %111, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %call104 = call i32 @state_index(%struct.turing_t* %114, i8* %116)
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %122 = load i32, i32* %state1106, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %125 = load i32, i32* %symbol1108, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %126 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc111 = add nsw i32 %126, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = mul 4:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 1073741824
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var
infer %0 (demandedBits=00000000000000000000000011111111)


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 255
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i8 = trunc %0
infer %1


--------------------------------
guess 0

%0:i8 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for create()

; entering Souper's runOnFunction() for print_state()

; ModuleID = './Universal_Turing_machine.c.bc'
source_filename = "./Universal_Turing_machine.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.turing_t = type { i32, i8**, i32, i32*, i32, i8*, i32, i32, i32, %struct.tape_t*, i32, %struct.transition_t*** }
%struct.tape_t = type { i32, %struct.tape_t*, %struct.tape_t* }
%struct.transition_t = type { i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [7 x i8] c"%-10s \00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"[%c]\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c" %c \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Simple incrementer\0A\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"q0\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"qf\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"\0AThree-state busy beaver\0A\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"halt\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @state_index(%struct.turing_t* %t, i8* %state) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %state.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8* %state, i8** %state.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 0
  %2 = load i32, i32* %states_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 1
  %4 = load i8**, i8*** %states, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %4, i32 %5
  %6 = load i8*, i8** %arrayidx, align 4
  %7 = load i8*, i8** %state.addr, align 4
  %call = call i32 @strcmp(i8* %6, i8* %7) #4
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* %0, i8* %1) #1

; Function Attrs: noinline nounwind optnone
define hidden i32 @symbol_index(%struct.turing_t* %t, i8 signext %symbol) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %symbol.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8 %symbol, i8* %symbol.addr, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 4
  %2 = load i32, i32* %symbols_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 5
  %4 = load i8*, i8** %symbols, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %5
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %7 = load i8, i8* %symbol.addr, align 1
  %conv1 = sext i8 %7 to i32
  %cmp2 = icmp eq i32 %conv, %conv1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone
define hidden void @move(%struct.turing_t* %t, i32 %dir) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %dir.addr = alloca i32, align 4
  %orig = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i32 %dir, i32* %dir.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 9
  %1 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  store %struct.tape_t* %1, %struct.tape_t** %orig, align 4
  %2 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %if.then, label %if.else13

if.then:                                          ; preds = %entry
  %3 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool = icmp ne %struct.tape_t* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %4, i32 0, i32 2
  %5 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  %tobool1 = icmp ne %struct.tape_t* %5, null
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %land.lhs.true
  %6 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right3 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %6, i32 0, i32 2
  %7 = load %struct.tape_t*, %struct.tape_t** %right3, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 9
  store %struct.tape_t* %7, %struct.tape_t** %tape4, align 4
  br label %if.end12

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call = call noalias i8* @calloc(i32 1, i32 12)
  %9 = bitcast i8* %call to %struct.tape_t*
  %10 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 9
  store %struct.tape_t* %9, %struct.tape_t** %tape5, align 4
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 6
  %12 = load i32, i32* %blank, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %14, i32 0, i32 0
  store i32 %12, i32* %symbol, align 4
  %15 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool7 = icmp ne %struct.tape_t* %15, null
  br i1 %tobool7, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.else
  %16 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 9
  %18 = load %struct.tape_t*, %struct.tape_t** %tape9, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %18, i32 0, i32 1
  store %struct.tape_t* %16, %struct.tape_t** %left, align 4
  %19 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape10 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %19, i32 0, i32 9
  %20 = load %struct.tape_t*, %struct.tape_t** %tape10, align 4
  %21 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right11 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %21, i32 0, i32 2
  store %struct.tape_t* %20, %struct.tape_t** %right11, align 4
  br label %if.end

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then2
  br label %if.end38

if.else13:                                        ; preds = %entry
  %22 = load i32, i32* %dir.addr, align 4
  %cmp14 = icmp eq i32 %22, 0
  br i1 %cmp14, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.else13
  %23 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool16 = icmp ne %struct.tape_t* %23, null
  br i1 %tobool16, label %land.lhs.true17, label %if.else23

land.lhs.true17:                                  ; preds = %if.then15
  %24 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left18 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %24, i32 0, i32 1
  %25 = load %struct.tape_t*, %struct.tape_t** %left18, align 4
  %tobool19 = icmp ne %struct.tape_t* %25, null
  br i1 %tobool19, label %if.then20, label %if.else23

if.then20:                                        ; preds = %land.lhs.true17
  %26 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left21 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %26, i32 0, i32 1
  %27 = load %struct.tape_t*, %struct.tape_t** %left21, align 4
  %28 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape22 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %28, i32 0, i32 9
  store %struct.tape_t* %27, %struct.tape_t** %tape22, align 4
  br label %if.end36

if.else23:                                        ; preds = %land.lhs.true17, %if.then15
  %call24 = call noalias i8* @calloc(i32 1, i32 12)
  %29 = bitcast i8* %call24 to %struct.tape_t*
  %30 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape25 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %30, i32 0, i32 9
  store %struct.tape_t* %29, %struct.tape_t** %tape25, align 4
  %31 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank26 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %31, i32 0, i32 6
  %32 = load i32, i32* %blank26, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 9
  %34 = load %struct.tape_t*, %struct.tape_t** %tape27, align 4
  %symbol28 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %34, i32 0, i32 0
  store i32 %32, i32* %symbol28, align 4
  %35 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool29 = icmp ne %struct.tape_t* %35, null
  br i1 %tobool29, label %if.then30, label %if.end35

if.then30:                                        ; preds = %if.else23
  %36 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %37 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape31 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %37, i32 0, i32 9
  %38 = load %struct.tape_t*, %struct.tape_t** %tape31, align 4
  %right32 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %38, i32 0, i32 2
  store %struct.tape_t* %36, %struct.tape_t** %right32, align 4
  %39 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape33 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %39, i32 0, i32 9
  %40 = load %struct.tape_t*, %struct.tape_t** %tape33, align 4
  %41 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left34 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %41, i32 0, i32 1
  store %struct.tape_t* %40, %struct.tape_t** %left34, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then30, %if.else23
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then20
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.else13
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end12
  ret void
}

declare noalias i8* @calloc(i32 %0, i32 %1) #2

; Function Attrs: noinline nounwind optnone
define hidden %struct.turing_t* @create(i32 %states_len, ...) #0 {
entry:
  %states_len.addr = alloca i32, align 4
  %args = alloca i8*, align 4
  %t = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store i32 %states_len, i32* %states_len.addr, align 4
  %args1 = bitcast i8** %args to i8*
  call void @llvm.va_start(i8* %args1)
  %call = call noalias i8* @malloc(i32 48)
  %0 = bitcast i8* %call to %struct.turing_t*
  store %struct.turing_t* %0, %struct.turing_t** %t, align 4
  %1 = load i32, i32* %states_len.addr, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 0
  store i32 %1, i32* %states_len2, align 4
  %3 = load i32, i32* %states_len.addr, align 4
  %mul = mul i32 %3, 4
  %call3 = call noalias i8* @malloc(i32 %mul)
  %4 = bitcast i8* %call3 to i8**
  %5 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 1
  store i8** %4, i8*** %states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* %states_len.addr, align 4
  %cmp = icmp slt i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %argp.cur = load i8*, i8** %args, align 4
  %argp.next = getelementptr inbounds i8, i8* %argp.cur, i32 4
  store i8* %argp.next, i8** %args, align 4
  %8 = bitcast i8* %argp.cur to i8**
  %9 = load i8*, i8** %8, align 4
  %10 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 1
  %11 = load i8**, i8*** %states4, align 4
  %12 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %11, i32 %12
  store i8* %9, i8** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %argp.cur5 = load i8*, i8** %args, align 4
  %argp.next6 = getelementptr inbounds i8, i8* %argp.cur5, i32 4
  store i8* %argp.next6, i8** %args, align 4
  %14 = bitcast i8* %argp.cur5 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 2
  store i32 %15, i32* %final_states_len, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len7 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 2
  %18 = load i32, i32* %final_states_len7, align 4
  %mul8 = mul i32 %18, 4
  %call9 = call noalias i8* @malloc(i32 %mul8)
  %19 = bitcast i8* %call9 to i32*
  %20 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 3
  store i32* %19, i32** %final_states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc19, %for.end
  %21 = load i32, i32* %i, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len11 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 2
  %23 = load i32, i32* %final_states_len11, align 4
  %cmp12 = icmp slt i32 %21, %23
  br i1 %cmp12, label %for.body13, label %for.end21

for.body13:                                       ; preds = %for.cond10
  %24 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur14 = load i8*, i8** %args, align 4
  %argp.next15 = getelementptr inbounds i8, i8* %argp.cur14, i32 4
  store i8* %argp.next15, i8** %args, align 4
  %25 = bitcast i8* %argp.cur14 to i8**
  %26 = load i8*, i8** %25, align 4
  %call16 = call i32 @state_index(%struct.turing_t* %24, i8* %26)
  %27 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states17 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %27, i32 0, i32 3
  %28 = load i32*, i32** %final_states17, align 4
  %29 = load i32, i32* %i, align 4
  %arrayidx18 = getelementptr inbounds i32, i32* %28, i32 %29
  store i32 %call16, i32* %arrayidx18, align 4
  br label %for.inc19

for.inc19:                                        ; preds = %for.body13
  %30 = load i32, i32* %i, align 4
  %inc20 = add nsw i32 %30, 1
  store i32 %inc20, i32* %i, align 4
  br label %for.cond10

for.end21:                                        ; preds = %for.cond10
  %argp.cur22 = load i8*, i8** %args, align 4
  %argp.next23 = getelementptr inbounds i8, i8* %argp.cur22, i32 4
  store i8* %argp.next23, i8** %args, align 4
  %31 = bitcast i8* %argp.cur22 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 4
  store i32 %32, i32* %symbols_len, align 4
  %34 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len24 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %34, i32 0, i32 4
  %35 = load i32, i32* %symbols_len24, align 4
  %call25 = call noalias i8* @malloc(i32 %35)
  %36 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %36, i32 0, i32 5
  store i8* %call25, i8** %symbols, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc34, %for.end21
  %37 = load i32, i32* %i, align 4
  %38 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %38, i32 0, i32 4
  %39 = load i32, i32* %symbols_len27, align 4
  %cmp28 = icmp slt i32 %37, %39
  br i1 %cmp28, label %for.body29, label %for.end36

for.body29:                                       ; preds = %for.cond26
  %argp.cur30 = load i8*, i8** %args, align 4
  %argp.next31 = getelementptr inbounds i8, i8* %argp.cur30, i32 4
  store i8* %argp.next31, i8** %args, align 4
  %40 = bitcast i8* %argp.cur30 to i32*
  %41 = load i32, i32* %40, align 4
  %conv = trunc i32 %41 to i8
  %42 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols32 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %42, i32 0, i32 5
  %43 = load i8*, i8** %symbols32, align 4
  %44 = load i32, i32* %i, align 4
  %arrayidx33 = getelementptr inbounds i8, i8* %43, i32 %44
  store i8 %conv, i8* %arrayidx33, align 1
  br label %for.inc34

for.inc34:                                        ; preds = %for.body29
  %45 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %45, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond26

for.end36:                                        ; preds = %for.cond26
  %46 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur37 = load i8*, i8** %args, align 4
  %argp.next38 = getelementptr inbounds i8, i8* %argp.cur37, i32 4
  store i8* %argp.next38, i8** %args, align 4
  %47 = bitcast i8* %argp.cur37 to i32*
  %48 = load i32, i32* %47, align 4
  %conv39 = trunc i32 %48 to i8
  %call40 = call i32 @symbol_index(%struct.turing_t* %46, i8 signext %conv39)
  %49 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %49, i32 0, i32 6
  store i32 %call40, i32* %blank, align 4
  %50 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur41 = load i8*, i8** %args, align 4
  %argp.next42 = getelementptr inbounds i8, i8* %argp.cur41, i32 4
  store i8* %argp.next42, i8** %args, align 4
  %51 = bitcast i8* %argp.cur41 to i8**
  %52 = load i8*, i8** %51, align 4
  %call43 = call i32 @state_index(%struct.turing_t* %50, i8* %52)
  %53 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %53, i32 0, i32 7
  store i32 %call43, i32* %state, align 4
  %argp.cur44 = load i8*, i8** %args, align 4
  %argp.next45 = getelementptr inbounds i8, i8* %argp.cur44, i32 4
  store i8* %argp.next45, i8** %args, align 4
  %54 = bitcast i8* %argp.cur44 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %56, i32 0, i32 8
  store i32 %55, i32* %tape_len, align 4
  %57 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %57, i32 0, i32 9
  store %struct.tape_t* null, %struct.tape_t** %tape, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc56, %for.end36
  %58 = load i32, i32* %i, align 4
  %59 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len47 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %59, i32 0, i32 8
  %60 = load i32, i32* %tape_len47, align 4
  %cmp48 = icmp slt i32 %58, %60
  br i1 %cmp48, label %for.body50, label %for.end58

for.body50:                                       ; preds = %for.cond46
  %61 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %61, i32 1)
  %62 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur51 = load i8*, i8** %args, align 4
  %argp.next52 = getelementptr inbounds i8, i8* %argp.cur51, i32 4
  store i8* %argp.next52, i8** %args, align 4
  %63 = bitcast i8* %argp.cur51 to i32*
  %64 = load i32, i32* %63, align 4
  %conv53 = trunc i32 %64 to i8
  %call54 = call i32 @symbol_index(%struct.turing_t* %62, i8 signext %conv53)
  %65 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape55 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %65, i32 0, i32 9
  %66 = load %struct.tape_t*, %struct.tape_t** %tape55, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %66, i32 0, i32 0
  store i32 %call54, i32* %symbol, align 4
  br label %for.inc56

for.inc56:                                        ; preds = %for.body50
  %67 = load i32, i32* %i, align 4
  %inc57 = add nsw i32 %67, 1
  store i32 %inc57, i32* %i, align 4
  br label %for.cond46

for.end58:                                        ; preds = %for.cond46
  %68 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len59 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %68, i32 0, i32 8
  %69 = load i32, i32* %tape_len59, align 4
  %tobool = icmp ne i32 %69, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.end58
  %70 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %70, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end58
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %71 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape60 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %71, i32 0, i32 9
  %72 = load %struct.tape_t*, %struct.tape_t** %tape60, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %72, i32 0, i32 1
  %73 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool61 = icmp ne %struct.tape_t* %73, null
  br i1 %tobool61, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %74 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape62 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %74, i32 0, i32 9
  %75 = load %struct.tape_t*, %struct.tape_t** %tape62, align 4
  %left63 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %75, i32 0, i32 1
  %76 = load %struct.tape_t*, %struct.tape_t** %left63, align 4
  %77 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape64 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %77, i32 0, i32 9
  store %struct.tape_t* %76, %struct.tape_t** %tape64, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %argp.cur65 = load i8*, i8** %args, align 4
  %argp.next66 = getelementptr inbounds i8, i8* %argp.cur65, i32 4
  store i8* %argp.next66, i8** %args, align 4
  %78 = bitcast i8* %argp.cur65 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %80, i32 0, i32 10
  store i32 %79, i32* %transitions_len, align 4
  %81 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len67 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %81, i32 0, i32 0
  %82 = load i32, i32* %states_len67, align 4
  %mul68 = mul i32 %82, 4
  %call69 = call noalias i8* @malloc(i32 %mul68)
  %83 = bitcast i8* %call69 to %struct.transition_t***
  %84 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %84, i32 0, i32 11
  store %struct.transition_t*** %83, %struct.transition_t**** %transitions, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc80, %while.end
  %85 = load i32, i32* %i, align 4
  %86 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len71 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %86, i32 0, i32 0
  %87 = load i32, i32* %states_len71, align 4
  %cmp72 = icmp slt i32 %85, %87
  br i1 %cmp72, label %for.body74, label %for.end82

for.body74:                                       ; preds = %for.cond70
  %88 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len75 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %88, i32 0, i32 4
  %89 = load i32, i32* %symbols_len75, align 4
  %mul76 = mul i32 %89, 4
  %call77 = call noalias i8* @malloc(i32 %mul76)
  %90 = bitcast i8* %call77 to %struct.transition_t**
  %91 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions78 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %91, i32 0, i32 11
  %92 = load %struct.transition_t***, %struct.transition_t**** %transitions78, align 4
  %93 = load i32, i32* %i, align 4
  %arrayidx79 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %92, i32 %93
  store %struct.transition_t** %90, %struct.transition_t*** %arrayidx79, align 4
  br label %for.inc80

for.inc80:                                        ; preds = %for.body74
  %94 = load i32, i32* %i, align 4
  %inc81 = add nsw i32 %94, 1
  store i32 %inc81, i32* %i, align 4
  br label %for.cond70

for.end82:                                        ; preds = %for.cond70
  store i32 0, i32* %i, align 4
  br label %for.cond83

for.cond83:                                       ; preds = %for.inc110, %for.end82
  %95 = load i32, i32* %i, align 4
  %96 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len84 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %96, i32 0, i32 10
  %97 = load i32, i32* %transitions_len84, align 4
  %cmp85 = icmp slt i32 %95, %97
  br i1 %cmp85, label %for.body87, label %for.end112

for.body87:                                       ; preds = %for.cond83
  %call88 = call noalias i8* @malloc(i32 20)
  %98 = bitcast i8* %call88 to %struct.transition_t*
  store %struct.transition_t* %98, %struct.transition_t** %tran, align 4
  %99 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur89 = load i8*, i8** %args, align 4
  %argp.next90 = getelementptr inbounds i8, i8* %argp.cur89, i32 4
  store i8* %argp.next90, i8** %args, align 4
  %100 = bitcast i8* %argp.cur89 to i8**
  %101 = load i8*, i8** %100, align 4
  %call91 = call i32 @state_index(%struct.turing_t* %99, i8* %101)
  %102 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %102, i32 0, i32 0
  store i32 %call91, i32* %state1, align 4
  %103 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur92 = load i8*, i8** %args, align 4
  %argp.next93 = getelementptr inbounds i8, i8* %argp.cur92, i32 4
  store i8* %argp.next93, i8** %args, align 4
  %104 = bitcast i8* %argp.cur92 to i32*
  %105 = load i32, i32* %104, align 4
  %conv94 = trunc i32 %105 to i8
  %call95 = call i32 @symbol_index(%struct.turing_t* %103, i8 signext %conv94)
  %106 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %106, i32 0, i32 1
  store i32 %call95, i32* %symbol1, align 4
  %107 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur96 = load i8*, i8** %args, align 4
  %argp.next97 = getelementptr inbounds i8, i8* %argp.cur96, i32 4
  store i8* %argp.next97, i8** %args, align 4
  %108 = bitcast i8* %argp.cur96 to i32*
  %109 = load i32, i32* %108, align 4
  %conv98 = trunc i32 %109 to i8
  %call99 = call i32 @symbol_index(%struct.turing_t* %107, i8 signext %conv98)
  %110 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %110, i32 0, i32 2
  store i32 %call99, i32* %symbol2, align 4
  %argp.cur100 = load i8*, i8** %args, align 4
  %argp.next101 = getelementptr inbounds i8, i8* %argp.cur100, i32 4
  store i8* %argp.next101, i8** %args, align 4
  %111 = bitcast i8* %argp.cur100 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %113, i32 0, i32 3
  store i32 %112, i32* %dir, align 4
  %114 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur102 = load i8*, i8** %args, align 4
  %argp.next103 = getelementptr inbounds i8, i8* %argp.cur102, i32 4
  store i8* %argp.next103, i8** %args, align 4
  %115 = bitcast i8* %argp.cur102 to i8**
  %116 = load i8*, i8** %115, align 4
  %call104 = call i32 @state_index(%struct.turing_t* %114, i8* %116)
  %117 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %117, i32 0, i32 4
  store i32 %call104, i32* %state2, align 4
  %118 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %119 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions105 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %119, i32 0, i32 11
  %120 = load %struct.transition_t***, %struct.transition_t**** %transitions105, align 4
  %121 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1106 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %121, i32 0, i32 0
  %122 = load i32, i32* %state1106, align 4
  %arrayidx107 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %120, i32 %122
  %123 = load %struct.transition_t**, %struct.transition_t*** %arrayidx107, align 4
  %124 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1108 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %124, i32 0, i32 1
  %125 = load i32, i32* %symbol1108, align 4
  %arrayidx109 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %123, i32 %125
  store %struct.transition_t* %118, %struct.transition_t** %arrayidx109, align 4
  br label %for.inc110

for.inc110:                                       ; preds = %for.body87
  %126 = load i32, i32* %i, align 4
  %inc111 = add nsw i32 %126, 1
  store i32 %inc111, i32* %i, align 4
  br label %for.cond83

for.end112:                                       ; preds = %for.cond83
  %args113 = bitcast i8** %args to i8*
  call void @llvm.va_end(i8* %args113)
  %127 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  ret %struct.turing_t* %127
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8* %0) #3

declare noalias i8* @malloc(i32 %0) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8* %0) #3

; Function Attrs: noinline nounwind optnone
define hidden void @print_state(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %tape = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 1
  %1 = load i8**, i8*** %states, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 7
  %3 = load i32, i32* %state, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %1, i32 %3
  %4 = load i8*, i8** %arrayidx, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* %4)
  %5 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape1 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 9
  %6 = load %struct.tape_t*, %struct.tape_t** %tape1, align 4
  store %struct.tape_t* %6, %struct.tape_t** %tape, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %7 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %7, i32 0, i32 1
  %8 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool = icmp ne %struct.tape_t* %8, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %9 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left2 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %9, i32 0, i32 1
  %10 = load %struct.tape_t*, %struct.tape_t** %left2, align 4
  store %struct.tape_t* %10, %struct.tape_t** %tape, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond3

while.cond3:                                      ; preds = %if.end, %while.end
  %11 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %tobool4 = icmp ne %struct.tape_t* %11, null
  br i1 %tobool4, label %while.body5, label %while.end14

while.body5:                                      ; preds = %while.cond3
  %12 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %cmp = icmp eq %struct.tape_t* %12, %14
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body5
  %15 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %15, i32 0, i32 5
  %16 = load i8*, i8** %symbols, align 4
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %16, i32 %18
  %19 = load i8, i8* %arrayidx7, align 1
  %conv = sext i8 %19 to i32
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %conv)
  br label %if.end

if.else:                                          ; preds = %while.body5
  %20 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 5
  %21 = load i8*, i8** %symbols9, align 4
  %22 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol10 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %22, i32 0, i32 0
  %23 = load i32, i32* %symbol10, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %21, i32 %23
  %24 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %24 to i32
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 %conv12)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %25, i32 0, i32 2
  %26 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  store %struct.tape_t* %26, %struct.tape_t** %tape, align 4
  br label %while.cond3

while.end14:                                      ; preds = %while.cond3
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0))
  ret void
}

declare i32 @printf(i8* %0, ...) #2

; Function Attrs: noinline nounwind optnone
define hidden void @run(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  br label %while.body

while.body:                                       ; preds = %entry, %for.end
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  call void @print_state(%struct.turing_t* %0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %1 = load i32, i32* %i, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 2
  %3 = load i32, i32* %final_states_len, align 4
  %cmp = icmp slt i32 %1, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %4, i32 0, i32 3
  %5 = load i32*, i32** %final_states, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i32, i32* %5, i32 %6
  %7 = load i32, i32* %arrayidx, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 7
  %9 = load i32, i32* %state, align 4
  %cmp1 = icmp eq i32 %7, %9
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  ret void

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 11
  %12 = load %struct.transition_t***, %struct.transition_t**** %transitions, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 7
  %14 = load i32, i32* %state2, align 4
  %arrayidx3 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %12, i32 %14
  %15 = load %struct.transition_t**, %struct.transition_t*** %arrayidx3, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 9
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx4 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %15, i32 %18
  %19 = load %struct.transition_t*, %struct.transition_t** %arrayidx4, align 4
  store %struct.transition_t* %19, %struct.transition_t** %tran, align 4
  %20 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %20, i32 0, i32 2
  %21 = load i32, i32* %symbol2, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 9
  %23 = load %struct.tape_t*, %struct.tape_t** %tape5, align 4
  %symbol6 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %23, i32 0, i32 0
  store i32 %21, i32* %symbol6, align 4
  %24 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %25 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %25, i32 0, i32 3
  %26 = load i32, i32* %dir, align 4
  call void @move(%struct.turing_t* %24, i32 %26)
  %27 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state27 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %27, i32 0, i32 4
  %28 = load i32, i32* %state27, align 4
  %29 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state8 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %29, i32 0, i32 7
  store i32 %28, i32* %state8, align 4
  br label %while.body
}

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %t = alloca %struct.turing_t*, align 4
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0))
  %call1 = call %struct.turing_t* (i32, ...) @create(i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 2, i32 66, i32 49, i32 66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 3, i32 49, i32 49, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 66, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0))
  store %struct.turing_t* %call1, %struct.turing_t** %t, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %0)
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i32 0, i32 0))
  %call3 = call %struct.turing_t* (i32, ...) @create(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 2, i32 48, i32 49, i32 48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 0, i32 6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 48, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 49, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 49, i32 49, i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0))
  store %struct.turing_t* %call3, %struct.turing_t** %t, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %1)
  ret i32 0
}

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readonly }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %3 = load i32, i32* %state, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %tobool = icmp ne %struct.tape_t* %8, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %tobool4 = icmp ne %struct.tape_t* %11, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %cmp = icmp eq %struct.tape_t* %12, %14
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i1 = eq %0, %1
infer %2

; *****
; For LLVM instruction:
;  %18 = load i32, i32* %symbol, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %19 = load i8, i8* %arrayidx7, align 1
; Looking for a replacement for:
%0:i8 = var
infer %0

; *****
; For LLVM instruction:
;  %conv = sext i8 %19 to i32
; Looking for a replacement for:
%0:i8 = var
%1:i32 = sext %0
infer %1

; *****
; For LLVM instruction:
;  %23 = load i32, i32* %symbol10, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %24 = load i8, i8* %arrayidx11, align 1
; Looking for a replacement for:
%0:i8 = var
infer %0

; *****
; For LLVM instruction:
;  %conv12 = sext i8 %24 to i32
; Looking for a replacement for:
%0:i8 = var
%1:i32 = sext %0
infer %1
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var
%2:i1 = eq %0, %1
infer %2


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for print_state()

; entering Souper's runOnFunction() for run()

; ModuleID = './Universal_Turing_machine.c.bc'
source_filename = "./Universal_Turing_machine.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.turing_t = type { i32, i8**, i32, i32*, i32, i8*, i32, i32, i32, %struct.tape_t*, i32, %struct.transition_t*** }
%struct.tape_t = type { i32, %struct.tape_t*, %struct.tape_t* }
%struct.transition_t = type { i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [7 x i8] c"%-10s \00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"[%c]\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c" %c \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Simple incrementer\0A\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"q0\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"qf\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"\0AThree-state busy beaver\0A\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"halt\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @state_index(%struct.turing_t* %t, i8* %state) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %state.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8* %state, i8** %state.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 0
  %2 = load i32, i32* %states_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 1
  %4 = load i8**, i8*** %states, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %4, i32 %5
  %6 = load i8*, i8** %arrayidx, align 4
  %7 = load i8*, i8** %state.addr, align 4
  %call = call i32 @strcmp(i8* %6, i8* %7) #4
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* %0, i8* %1) #1

; Function Attrs: noinline nounwind optnone
define hidden i32 @symbol_index(%struct.turing_t* %t, i8 signext %symbol) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %symbol.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8 %symbol, i8* %symbol.addr, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 4
  %2 = load i32, i32* %symbols_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 5
  %4 = load i8*, i8** %symbols, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %5
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %7 = load i8, i8* %symbol.addr, align 1
  %conv1 = sext i8 %7 to i32
  %cmp2 = icmp eq i32 %conv, %conv1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone
define hidden void @move(%struct.turing_t* %t, i32 %dir) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %dir.addr = alloca i32, align 4
  %orig = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i32 %dir, i32* %dir.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 9
  %1 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  store %struct.tape_t* %1, %struct.tape_t** %orig, align 4
  %2 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %if.then, label %if.else13

if.then:                                          ; preds = %entry
  %3 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool = icmp ne %struct.tape_t* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %4, i32 0, i32 2
  %5 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  %tobool1 = icmp ne %struct.tape_t* %5, null
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %land.lhs.true
  %6 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right3 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %6, i32 0, i32 2
  %7 = load %struct.tape_t*, %struct.tape_t** %right3, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 9
  store %struct.tape_t* %7, %struct.tape_t** %tape4, align 4
  br label %if.end12

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call = call noalias i8* @calloc(i32 1, i32 12)
  %9 = bitcast i8* %call to %struct.tape_t*
  %10 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 9
  store %struct.tape_t* %9, %struct.tape_t** %tape5, align 4
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 6
  %12 = load i32, i32* %blank, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %14, i32 0, i32 0
  store i32 %12, i32* %symbol, align 4
  %15 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool7 = icmp ne %struct.tape_t* %15, null
  br i1 %tobool7, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.else
  %16 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 9
  %18 = load %struct.tape_t*, %struct.tape_t** %tape9, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %18, i32 0, i32 1
  store %struct.tape_t* %16, %struct.tape_t** %left, align 4
  %19 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape10 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %19, i32 0, i32 9
  %20 = load %struct.tape_t*, %struct.tape_t** %tape10, align 4
  %21 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right11 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %21, i32 0, i32 2
  store %struct.tape_t* %20, %struct.tape_t** %right11, align 4
  br label %if.end

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then2
  br label %if.end38

if.else13:                                        ; preds = %entry
  %22 = load i32, i32* %dir.addr, align 4
  %cmp14 = icmp eq i32 %22, 0
  br i1 %cmp14, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.else13
  %23 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool16 = icmp ne %struct.tape_t* %23, null
  br i1 %tobool16, label %land.lhs.true17, label %if.else23

land.lhs.true17:                                  ; preds = %if.then15
  %24 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left18 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %24, i32 0, i32 1
  %25 = load %struct.tape_t*, %struct.tape_t** %left18, align 4
  %tobool19 = icmp ne %struct.tape_t* %25, null
  br i1 %tobool19, label %if.then20, label %if.else23

if.then20:                                        ; preds = %land.lhs.true17
  %26 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left21 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %26, i32 0, i32 1
  %27 = load %struct.tape_t*, %struct.tape_t** %left21, align 4
  %28 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape22 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %28, i32 0, i32 9
  store %struct.tape_t* %27, %struct.tape_t** %tape22, align 4
  br label %if.end36

if.else23:                                        ; preds = %land.lhs.true17, %if.then15
  %call24 = call noalias i8* @calloc(i32 1, i32 12)
  %29 = bitcast i8* %call24 to %struct.tape_t*
  %30 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape25 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %30, i32 0, i32 9
  store %struct.tape_t* %29, %struct.tape_t** %tape25, align 4
  %31 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank26 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %31, i32 0, i32 6
  %32 = load i32, i32* %blank26, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 9
  %34 = load %struct.tape_t*, %struct.tape_t** %tape27, align 4
  %symbol28 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %34, i32 0, i32 0
  store i32 %32, i32* %symbol28, align 4
  %35 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool29 = icmp ne %struct.tape_t* %35, null
  br i1 %tobool29, label %if.then30, label %if.end35

if.then30:                                        ; preds = %if.else23
  %36 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %37 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape31 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %37, i32 0, i32 9
  %38 = load %struct.tape_t*, %struct.tape_t** %tape31, align 4
  %right32 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %38, i32 0, i32 2
  store %struct.tape_t* %36, %struct.tape_t** %right32, align 4
  %39 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape33 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %39, i32 0, i32 9
  %40 = load %struct.tape_t*, %struct.tape_t** %tape33, align 4
  %41 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left34 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %41, i32 0, i32 1
  store %struct.tape_t* %40, %struct.tape_t** %left34, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then30, %if.else23
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then20
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.else13
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end12
  ret void
}

declare noalias i8* @calloc(i32 %0, i32 %1) #2

; Function Attrs: noinline nounwind optnone
define hidden %struct.turing_t* @create(i32 %states_len, ...) #0 {
entry:
  %states_len.addr = alloca i32, align 4
  %args = alloca i8*, align 4
  %t = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store i32 %states_len, i32* %states_len.addr, align 4
  %args1 = bitcast i8** %args to i8*
  call void @llvm.va_start(i8* %args1)
  %call = call noalias i8* @malloc(i32 48)
  %0 = bitcast i8* %call to %struct.turing_t*
  store %struct.turing_t* %0, %struct.turing_t** %t, align 4
  %1 = load i32, i32* %states_len.addr, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 0
  store i32 %1, i32* %states_len2, align 4
  %3 = load i32, i32* %states_len.addr, align 4
  %mul = mul i32 %3, 4
  %call3 = call noalias i8* @malloc(i32 %mul)
  %4 = bitcast i8* %call3 to i8**
  %5 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 1
  store i8** %4, i8*** %states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* %states_len.addr, align 4
  %cmp = icmp slt i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %argp.cur = load i8*, i8** %args, align 4
  %argp.next = getelementptr inbounds i8, i8* %argp.cur, i32 4
  store i8* %argp.next, i8** %args, align 4
  %8 = bitcast i8* %argp.cur to i8**
  %9 = load i8*, i8** %8, align 4
  %10 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 1
  %11 = load i8**, i8*** %states4, align 4
  %12 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %11, i32 %12
  store i8* %9, i8** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %argp.cur5 = load i8*, i8** %args, align 4
  %argp.next6 = getelementptr inbounds i8, i8* %argp.cur5, i32 4
  store i8* %argp.next6, i8** %args, align 4
  %14 = bitcast i8* %argp.cur5 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 2
  store i32 %15, i32* %final_states_len, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len7 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 2
  %18 = load i32, i32* %final_states_len7, align 4
  %mul8 = mul i32 %18, 4
  %call9 = call noalias i8* @malloc(i32 %mul8)
  %19 = bitcast i8* %call9 to i32*
  %20 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 3
  store i32* %19, i32** %final_states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc19, %for.end
  %21 = load i32, i32* %i, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len11 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 2
  %23 = load i32, i32* %final_states_len11, align 4
  %cmp12 = icmp slt i32 %21, %23
  br i1 %cmp12, label %for.body13, label %for.end21

for.body13:                                       ; preds = %for.cond10
  %24 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur14 = load i8*, i8** %args, align 4
  %argp.next15 = getelementptr inbounds i8, i8* %argp.cur14, i32 4
  store i8* %argp.next15, i8** %args, align 4
  %25 = bitcast i8* %argp.cur14 to i8**
  %26 = load i8*, i8** %25, align 4
  %call16 = call i32 @state_index(%struct.turing_t* %24, i8* %26)
  %27 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states17 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %27, i32 0, i32 3
  %28 = load i32*, i32** %final_states17, align 4
  %29 = load i32, i32* %i, align 4
  %arrayidx18 = getelementptr inbounds i32, i32* %28, i32 %29
  store i32 %call16, i32* %arrayidx18, align 4
  br label %for.inc19

for.inc19:                                        ; preds = %for.body13
  %30 = load i32, i32* %i, align 4
  %inc20 = add nsw i32 %30, 1
  store i32 %inc20, i32* %i, align 4
  br label %for.cond10

for.end21:                                        ; preds = %for.cond10
  %argp.cur22 = load i8*, i8** %args, align 4
  %argp.next23 = getelementptr inbounds i8, i8* %argp.cur22, i32 4
  store i8* %argp.next23, i8** %args, align 4
  %31 = bitcast i8* %argp.cur22 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 4
  store i32 %32, i32* %symbols_len, align 4
  %34 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len24 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %34, i32 0, i32 4
  %35 = load i32, i32* %symbols_len24, align 4
  %call25 = call noalias i8* @malloc(i32 %35)
  %36 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %36, i32 0, i32 5
  store i8* %call25, i8** %symbols, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc34, %for.end21
  %37 = load i32, i32* %i, align 4
  %38 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %38, i32 0, i32 4
  %39 = load i32, i32* %symbols_len27, align 4
  %cmp28 = icmp slt i32 %37, %39
  br i1 %cmp28, label %for.body29, label %for.end36

for.body29:                                       ; preds = %for.cond26
  %argp.cur30 = load i8*, i8** %args, align 4
  %argp.next31 = getelementptr inbounds i8, i8* %argp.cur30, i32 4
  store i8* %argp.next31, i8** %args, align 4
  %40 = bitcast i8* %argp.cur30 to i32*
  %41 = load i32, i32* %40, align 4
  %conv = trunc i32 %41 to i8
  %42 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols32 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %42, i32 0, i32 5
  %43 = load i8*, i8** %symbols32, align 4
  %44 = load i32, i32* %i, align 4
  %arrayidx33 = getelementptr inbounds i8, i8* %43, i32 %44
  store i8 %conv, i8* %arrayidx33, align 1
  br label %for.inc34

for.inc34:                                        ; preds = %for.body29
  %45 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %45, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond26

for.end36:                                        ; preds = %for.cond26
  %46 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur37 = load i8*, i8** %args, align 4
  %argp.next38 = getelementptr inbounds i8, i8* %argp.cur37, i32 4
  store i8* %argp.next38, i8** %args, align 4
  %47 = bitcast i8* %argp.cur37 to i32*
  %48 = load i32, i32* %47, align 4
  %conv39 = trunc i32 %48 to i8
  %call40 = call i32 @symbol_index(%struct.turing_t* %46, i8 signext %conv39)
  %49 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %49, i32 0, i32 6
  store i32 %call40, i32* %blank, align 4
  %50 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur41 = load i8*, i8** %args, align 4
  %argp.next42 = getelementptr inbounds i8, i8* %argp.cur41, i32 4
  store i8* %argp.next42, i8** %args, align 4
  %51 = bitcast i8* %argp.cur41 to i8**
  %52 = load i8*, i8** %51, align 4
  %call43 = call i32 @state_index(%struct.turing_t* %50, i8* %52)
  %53 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %53, i32 0, i32 7
  store i32 %call43, i32* %state, align 4
  %argp.cur44 = load i8*, i8** %args, align 4
  %argp.next45 = getelementptr inbounds i8, i8* %argp.cur44, i32 4
  store i8* %argp.next45, i8** %args, align 4
  %54 = bitcast i8* %argp.cur44 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %56, i32 0, i32 8
  store i32 %55, i32* %tape_len, align 4
  %57 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %57, i32 0, i32 9
  store %struct.tape_t* null, %struct.tape_t** %tape, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc56, %for.end36
  %58 = load i32, i32* %i, align 4
  %59 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len47 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %59, i32 0, i32 8
  %60 = load i32, i32* %tape_len47, align 4
  %cmp48 = icmp slt i32 %58, %60
  br i1 %cmp48, label %for.body50, label %for.end58

for.body50:                                       ; preds = %for.cond46
  %61 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %61, i32 1)
  %62 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur51 = load i8*, i8** %args, align 4
  %argp.next52 = getelementptr inbounds i8, i8* %argp.cur51, i32 4
  store i8* %argp.next52, i8** %args, align 4
  %63 = bitcast i8* %argp.cur51 to i32*
  %64 = load i32, i32* %63, align 4
  %conv53 = trunc i32 %64 to i8
  %call54 = call i32 @symbol_index(%struct.turing_t* %62, i8 signext %conv53)
  %65 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape55 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %65, i32 0, i32 9
  %66 = load %struct.tape_t*, %struct.tape_t** %tape55, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %66, i32 0, i32 0
  store i32 %call54, i32* %symbol, align 4
  br label %for.inc56

for.inc56:                                        ; preds = %for.body50
  %67 = load i32, i32* %i, align 4
  %inc57 = add nsw i32 %67, 1
  store i32 %inc57, i32* %i, align 4
  br label %for.cond46

for.end58:                                        ; preds = %for.cond46
  %68 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len59 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %68, i32 0, i32 8
  %69 = load i32, i32* %tape_len59, align 4
  %tobool = icmp ne i32 %69, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.end58
  %70 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %70, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end58
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %71 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape60 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %71, i32 0, i32 9
  %72 = load %struct.tape_t*, %struct.tape_t** %tape60, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %72, i32 0, i32 1
  %73 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool61 = icmp ne %struct.tape_t* %73, null
  br i1 %tobool61, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %74 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape62 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %74, i32 0, i32 9
  %75 = load %struct.tape_t*, %struct.tape_t** %tape62, align 4
  %left63 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %75, i32 0, i32 1
  %76 = load %struct.tape_t*, %struct.tape_t** %left63, align 4
  %77 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape64 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %77, i32 0, i32 9
  store %struct.tape_t* %76, %struct.tape_t** %tape64, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %argp.cur65 = load i8*, i8** %args, align 4
  %argp.next66 = getelementptr inbounds i8, i8* %argp.cur65, i32 4
  store i8* %argp.next66, i8** %args, align 4
  %78 = bitcast i8* %argp.cur65 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %80, i32 0, i32 10
  store i32 %79, i32* %transitions_len, align 4
  %81 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len67 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %81, i32 0, i32 0
  %82 = load i32, i32* %states_len67, align 4
  %mul68 = mul i32 %82, 4
  %call69 = call noalias i8* @malloc(i32 %mul68)
  %83 = bitcast i8* %call69 to %struct.transition_t***
  %84 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %84, i32 0, i32 11
  store %struct.transition_t*** %83, %struct.transition_t**** %transitions, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc80, %while.end
  %85 = load i32, i32* %i, align 4
  %86 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len71 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %86, i32 0, i32 0
  %87 = load i32, i32* %states_len71, align 4
  %cmp72 = icmp slt i32 %85, %87
  br i1 %cmp72, label %for.body74, label %for.end82

for.body74:                                       ; preds = %for.cond70
  %88 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len75 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %88, i32 0, i32 4
  %89 = load i32, i32* %symbols_len75, align 4
  %mul76 = mul i32 %89, 4
  %call77 = call noalias i8* @malloc(i32 %mul76)
  %90 = bitcast i8* %call77 to %struct.transition_t**
  %91 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions78 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %91, i32 0, i32 11
  %92 = load %struct.transition_t***, %struct.transition_t**** %transitions78, align 4
  %93 = load i32, i32* %i, align 4
  %arrayidx79 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %92, i32 %93
  store %struct.transition_t** %90, %struct.transition_t*** %arrayidx79, align 4
  br label %for.inc80

for.inc80:                                        ; preds = %for.body74
  %94 = load i32, i32* %i, align 4
  %inc81 = add nsw i32 %94, 1
  store i32 %inc81, i32* %i, align 4
  br label %for.cond70

for.end82:                                        ; preds = %for.cond70
  store i32 0, i32* %i, align 4
  br label %for.cond83

for.cond83:                                       ; preds = %for.inc110, %for.end82
  %95 = load i32, i32* %i, align 4
  %96 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len84 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %96, i32 0, i32 10
  %97 = load i32, i32* %transitions_len84, align 4
  %cmp85 = icmp slt i32 %95, %97
  br i1 %cmp85, label %for.body87, label %for.end112

for.body87:                                       ; preds = %for.cond83
  %call88 = call noalias i8* @malloc(i32 20)
  %98 = bitcast i8* %call88 to %struct.transition_t*
  store %struct.transition_t* %98, %struct.transition_t** %tran, align 4
  %99 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur89 = load i8*, i8** %args, align 4
  %argp.next90 = getelementptr inbounds i8, i8* %argp.cur89, i32 4
  store i8* %argp.next90, i8** %args, align 4
  %100 = bitcast i8* %argp.cur89 to i8**
  %101 = load i8*, i8** %100, align 4
  %call91 = call i32 @state_index(%struct.turing_t* %99, i8* %101)
  %102 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %102, i32 0, i32 0
  store i32 %call91, i32* %state1, align 4
  %103 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur92 = load i8*, i8** %args, align 4
  %argp.next93 = getelementptr inbounds i8, i8* %argp.cur92, i32 4
  store i8* %argp.next93, i8** %args, align 4
  %104 = bitcast i8* %argp.cur92 to i32*
  %105 = load i32, i32* %104, align 4
  %conv94 = trunc i32 %105 to i8
  %call95 = call i32 @symbol_index(%struct.turing_t* %103, i8 signext %conv94)
  %106 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %106, i32 0, i32 1
  store i32 %call95, i32* %symbol1, align 4
  %107 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur96 = load i8*, i8** %args, align 4
  %argp.next97 = getelementptr inbounds i8, i8* %argp.cur96, i32 4
  store i8* %argp.next97, i8** %args, align 4
  %108 = bitcast i8* %argp.cur96 to i32*
  %109 = load i32, i32* %108, align 4
  %conv98 = trunc i32 %109 to i8
  %call99 = call i32 @symbol_index(%struct.turing_t* %107, i8 signext %conv98)
  %110 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %110, i32 0, i32 2
  store i32 %call99, i32* %symbol2, align 4
  %argp.cur100 = load i8*, i8** %args, align 4
  %argp.next101 = getelementptr inbounds i8, i8* %argp.cur100, i32 4
  store i8* %argp.next101, i8** %args, align 4
  %111 = bitcast i8* %argp.cur100 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %113, i32 0, i32 3
  store i32 %112, i32* %dir, align 4
  %114 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur102 = load i8*, i8** %args, align 4
  %argp.next103 = getelementptr inbounds i8, i8* %argp.cur102, i32 4
  store i8* %argp.next103, i8** %args, align 4
  %115 = bitcast i8* %argp.cur102 to i8**
  %116 = load i8*, i8** %115, align 4
  %call104 = call i32 @state_index(%struct.turing_t* %114, i8* %116)
  %117 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %117, i32 0, i32 4
  store i32 %call104, i32* %state2, align 4
  %118 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %119 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions105 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %119, i32 0, i32 11
  %120 = load %struct.transition_t***, %struct.transition_t**** %transitions105, align 4
  %121 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1106 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %121, i32 0, i32 0
  %122 = load i32, i32* %state1106, align 4
  %arrayidx107 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %120, i32 %122
  %123 = load %struct.transition_t**, %struct.transition_t*** %arrayidx107, align 4
  %124 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1108 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %124, i32 0, i32 1
  %125 = load i32, i32* %symbol1108, align 4
  %arrayidx109 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %123, i32 %125
  store %struct.transition_t* %118, %struct.transition_t** %arrayidx109, align 4
  br label %for.inc110

for.inc110:                                       ; preds = %for.body87
  %126 = load i32, i32* %i, align 4
  %inc111 = add nsw i32 %126, 1
  store i32 %inc111, i32* %i, align 4
  br label %for.cond83

for.end112:                                       ; preds = %for.cond83
  %args113 = bitcast i8** %args to i8*
  call void @llvm.va_end(i8* %args113)
  %127 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  ret %struct.turing_t* %127
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8* %0) #3

declare noalias i8* @malloc(i32 %0) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8* %0) #3

; Function Attrs: noinline nounwind optnone
define hidden void @print_state(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %tape = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 1
  %1 = load i8**, i8*** %states, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 7
  %3 = load i32, i32* %state, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %1, i32 %3
  %4 = load i8*, i8** %arrayidx, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* %4)
  %5 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape1 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 9
  %6 = load %struct.tape_t*, %struct.tape_t** %tape1, align 4
  store %struct.tape_t* %6, %struct.tape_t** %tape, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %7 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %7, i32 0, i32 1
  %8 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool = icmp ne %struct.tape_t* %8, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %9 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left2 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %9, i32 0, i32 1
  %10 = load %struct.tape_t*, %struct.tape_t** %left2, align 4
  store %struct.tape_t* %10, %struct.tape_t** %tape, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond3

while.cond3:                                      ; preds = %if.end, %while.end
  %11 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %tobool4 = icmp ne %struct.tape_t* %11, null
  br i1 %tobool4, label %while.body5, label %while.end14

while.body5:                                      ; preds = %while.cond3
  %12 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %cmp = icmp eq %struct.tape_t* %12, %14
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body5
  %15 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %15, i32 0, i32 5
  %16 = load i8*, i8** %symbols, align 4
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %16, i32 %18
  %19 = load i8, i8* %arrayidx7, align 1
  %conv = sext i8 %19 to i32
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %conv)
  br label %if.end

if.else:                                          ; preds = %while.body5
  %20 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 5
  %21 = load i8*, i8** %symbols9, align 4
  %22 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol10 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %22, i32 0, i32 0
  %23 = load i32, i32* %symbol10, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %21, i32 %23
  %24 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %24 to i32
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 %conv12)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %25, i32 0, i32 2
  %26 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  store %struct.tape_t* %26, %struct.tape_t** %tape, align 4
  br label %while.cond3

while.end14:                                      ; preds = %while.cond3
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0))
  ret void
}

declare i32 @printf(i8* %0, ...) #2

; Function Attrs: noinline nounwind optnone
define hidden void @run(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  br label %while.body

while.body:                                       ; preds = %entry, %for.end
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  call void @print_state(%struct.turing_t* %0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %1 = load i32, i32* %i, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 2
  %3 = load i32, i32* %final_states_len, align 4
  %cmp = icmp slt i32 %1, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %4, i32 0, i32 3
  %5 = load i32*, i32** %final_states, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i32, i32* %5, i32 %6
  %7 = load i32, i32* %arrayidx, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 7
  %9 = load i32, i32* %state, align 4
  %cmp1 = icmp eq i32 %7, %9
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  ret void

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 11
  %12 = load %struct.transition_t***, %struct.transition_t**** %transitions, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 7
  %14 = load i32, i32* %state2, align 4
  %arrayidx3 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %12, i32 %14
  %15 = load %struct.transition_t**, %struct.transition_t*** %arrayidx3, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 9
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx4 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %15, i32 %18
  %19 = load %struct.transition_t*, %struct.transition_t** %arrayidx4, align 4
  store %struct.transition_t* %19, %struct.transition_t** %tran, align 4
  %20 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %20, i32 0, i32 2
  %21 = load i32, i32* %symbol2, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 9
  %23 = load %struct.tape_t*, %struct.tape_t** %tape5, align 4
  %symbol6 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %23, i32 0, i32 0
  store i32 %21, i32* %symbol6, align 4
  %24 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %25 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %25, i32 0, i32 3
  %26 = load i32, i32* %dir, align 4
  call void @move(%struct.turing_t* %24, i32 %26)
  %27 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state27 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %27, i32 0, i32 4
  %28 = load i32, i32* %state27, align 4
  %29 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state8 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %29, i32 0, i32 7
  store i32 %28, i32* %state8, align 4
  br label %while.body
}

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %t = alloca %struct.turing_t*, align 4
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0))
  %call1 = call %struct.turing_t* (i32, ...) @create(i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 2, i32 66, i32 49, i32 66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 3, i32 49, i32 49, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 66, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0))
  store %struct.turing_t* %call1, %struct.turing_t** %t, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %0)
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i32 0, i32 0))
  %call3 = call %struct.turing_t* (i32, ...) @create(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 2, i32 48, i32 49, i32 48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 0, i32 6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 48, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 49, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 49, i32 49, i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0))
  store %struct.turing_t* %call3, %struct.turing_t** %t, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %1)
  ret i32 0
}

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readonly }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %1 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %3 = load i32, i32* %final_states_len, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp = icmp slt i32 %1, %3
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
infer %2

; *****
; For LLVM instruction:
;  %6 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %7 = load i32, i32* %arrayidx, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %9 = load i32, i32* %state, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp1 = icmp eq i32 %7, %9
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var
%2:i1 = eq %0, %1
infer %2

; *****
; For LLVM instruction:
;  %10 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc = add nsw i32 %10, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %14 = load i32, i32* %state2, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %18 = load i32, i32* %symbol, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %21 = load i32, i32* %symbol2, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %26 = load i32, i32* %dir, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %28 = load i32, i32* %state27, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0
#########################################################
; exiting Souper's runOnFunction() for run()

; entering Souper's runOnFunction() for main()

; ModuleID = './Universal_Turing_machine.c.bc'
source_filename = "./Universal_Turing_machine.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.turing_t = type { i32, i8**, i32, i32*, i32, i8*, i32, i32, i32, %struct.tape_t*, i32, %struct.transition_t*** }
%struct.tape_t = type { i32, %struct.tape_t*, %struct.tape_t* }
%struct.transition_t = type { i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [7 x i8] c"%-10s \00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"[%c]\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c" %c \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Simple incrementer\0A\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"q0\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"qf\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"\0AThree-state busy beaver\0A\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"halt\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @state_index(%struct.turing_t* %t, i8* %state) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %state.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8* %state, i8** %state.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 0
  %2 = load i32, i32* %states_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 1
  %4 = load i8**, i8*** %states, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %4, i32 %5
  %6 = load i8*, i8** %arrayidx, align 4
  %7 = load i8*, i8** %state.addr, align 4
  %call = call i32 @strcmp(i8* %6, i8* %7) #4
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* %0, i8* %1) #1

; Function Attrs: noinline nounwind optnone
define hidden i32 @symbol_index(%struct.turing_t* %t, i8 signext %symbol) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.turing_t*, align 4
  %symbol.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i8 %symbol, i8* %symbol.addr, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %1, i32 0, i32 4
  %2 = load i32, i32* %symbols_len, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %3, i32 0, i32 5
  %4 = load i8*, i8** %symbols, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %5
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %7 = load i8, i8* %symbol.addr, align 1
  %conv1 = sext i8 %7 to i32
  %cmp2 = icmp eq i32 %conv, %conv1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  store i32 %8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone
define hidden void @move(%struct.turing_t* %t, i32 %dir) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %dir.addr = alloca i32, align 4
  %orig = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  store i32 %dir, i32* %dir.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 9
  %1 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  store %struct.tape_t* %1, %struct.tape_t** %orig, align 4
  %2 = load i32, i32* %dir.addr, align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %if.then, label %if.else13

if.then:                                          ; preds = %entry
  %3 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool = icmp ne %struct.tape_t* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %4, i32 0, i32 2
  %5 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  %tobool1 = icmp ne %struct.tape_t* %5, null
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %land.lhs.true
  %6 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right3 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %6, i32 0, i32 2
  %7 = load %struct.tape_t*, %struct.tape_t** %right3, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 9
  store %struct.tape_t* %7, %struct.tape_t** %tape4, align 4
  br label %if.end12

if.else:                                          ; preds = %land.lhs.true, %if.then
  %call = call noalias i8* @calloc(i32 1, i32 12)
  %9 = bitcast i8* %call to %struct.tape_t*
  %10 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 9
  store %struct.tape_t* %9, %struct.tape_t** %tape5, align 4
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 6
  %12 = load i32, i32* %blank, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %14, i32 0, i32 0
  store i32 %12, i32* %symbol, align 4
  %15 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool7 = icmp ne %struct.tape_t* %15, null
  br i1 %tobool7, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.else
  %16 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 9
  %18 = load %struct.tape_t*, %struct.tape_t** %tape9, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %18, i32 0, i32 1
  store %struct.tape_t* %16, %struct.tape_t** %left, align 4
  %19 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape10 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %19, i32 0, i32 9
  %20 = load %struct.tape_t*, %struct.tape_t** %tape10, align 4
  %21 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %right11 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %21, i32 0, i32 2
  store %struct.tape_t* %20, %struct.tape_t** %right11, align 4
  br label %if.end

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then2
  br label %if.end38

if.else13:                                        ; preds = %entry
  %22 = load i32, i32* %dir.addr, align 4
  %cmp14 = icmp eq i32 %22, 0
  br i1 %cmp14, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.else13
  %23 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool16 = icmp ne %struct.tape_t* %23, null
  br i1 %tobool16, label %land.lhs.true17, label %if.else23

land.lhs.true17:                                  ; preds = %if.then15
  %24 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left18 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %24, i32 0, i32 1
  %25 = load %struct.tape_t*, %struct.tape_t** %left18, align 4
  %tobool19 = icmp ne %struct.tape_t* %25, null
  br i1 %tobool19, label %if.then20, label %if.else23

if.then20:                                        ; preds = %land.lhs.true17
  %26 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left21 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %26, i32 0, i32 1
  %27 = load %struct.tape_t*, %struct.tape_t** %left21, align 4
  %28 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape22 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %28, i32 0, i32 9
  store %struct.tape_t* %27, %struct.tape_t** %tape22, align 4
  br label %if.end36

if.else23:                                        ; preds = %land.lhs.true17, %if.then15
  %call24 = call noalias i8* @calloc(i32 1, i32 12)
  %29 = bitcast i8* %call24 to %struct.tape_t*
  %30 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape25 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %30, i32 0, i32 9
  store %struct.tape_t* %29, %struct.tape_t** %tape25, align 4
  %31 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %blank26 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %31, i32 0, i32 6
  %32 = load i32, i32* %blank26, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 9
  %34 = load %struct.tape_t*, %struct.tape_t** %tape27, align 4
  %symbol28 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %34, i32 0, i32 0
  store i32 %32, i32* %symbol28, align 4
  %35 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %tobool29 = icmp ne %struct.tape_t* %35, null
  br i1 %tobool29, label %if.then30, label %if.end35

if.then30:                                        ; preds = %if.else23
  %36 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %37 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape31 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %37, i32 0, i32 9
  %38 = load %struct.tape_t*, %struct.tape_t** %tape31, align 4
  %right32 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %38, i32 0, i32 2
  store %struct.tape_t* %36, %struct.tape_t** %right32, align 4
  %39 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape33 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %39, i32 0, i32 9
  %40 = load %struct.tape_t*, %struct.tape_t** %tape33, align 4
  %41 = load %struct.tape_t*, %struct.tape_t** %orig, align 4
  %left34 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %41, i32 0, i32 1
  store %struct.tape_t* %40, %struct.tape_t** %left34, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then30, %if.else23
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then20
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.else13
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end12
  ret void
}

declare noalias i8* @calloc(i32 %0, i32 %1) #2

; Function Attrs: noinline nounwind optnone
define hidden %struct.turing_t* @create(i32 %states_len, ...) #0 {
entry:
  %states_len.addr = alloca i32, align 4
  %args = alloca i8*, align 4
  %t = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store i32 %states_len, i32* %states_len.addr, align 4
  %args1 = bitcast i8** %args to i8*
  call void @llvm.va_start(i8* %args1)
  %call = call noalias i8* @malloc(i32 48)
  %0 = bitcast i8* %call to %struct.turing_t*
  store %struct.turing_t* %0, %struct.turing_t** %t, align 4
  %1 = load i32, i32* %states_len.addr, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 0
  store i32 %1, i32* %states_len2, align 4
  %3 = load i32, i32* %states_len.addr, align 4
  %mul = mul i32 %3, 4
  %call3 = call noalias i8* @malloc(i32 %mul)
  %4 = bitcast i8* %call3 to i8**
  %5 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 1
  store i8** %4, i8*** %states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* %states_len.addr, align 4
  %cmp = icmp slt i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %argp.cur = load i8*, i8** %args, align 4
  %argp.next = getelementptr inbounds i8, i8* %argp.cur, i32 4
  store i8* %argp.next, i8** %args, align 4
  %8 = bitcast i8* %argp.cur to i8**
  %9 = load i8*, i8** %8, align 4
  %10 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states4 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %10, i32 0, i32 1
  %11 = load i8**, i8*** %states4, align 4
  %12 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %11, i32 %12
  store i8* %9, i8** %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %argp.cur5 = load i8*, i8** %args, align 4
  %argp.next6 = getelementptr inbounds i8, i8* %argp.cur5, i32 4
  store i8* %argp.next6, i8** %args, align 4
  %14 = bitcast i8* %argp.cur5 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 2
  store i32 %15, i32* %final_states_len, align 4
  %17 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len7 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %17, i32 0, i32 2
  %18 = load i32, i32* %final_states_len7, align 4
  %mul8 = mul i32 %18, 4
  %call9 = call noalias i8* @malloc(i32 %mul8)
  %19 = bitcast i8* %call9 to i32*
  %20 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 3
  store i32* %19, i32** %final_states, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc19, %for.end
  %21 = load i32, i32* %i, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states_len11 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 2
  %23 = load i32, i32* %final_states_len11, align 4
  %cmp12 = icmp slt i32 %21, %23
  br i1 %cmp12, label %for.body13, label %for.end21

for.body13:                                       ; preds = %for.cond10
  %24 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur14 = load i8*, i8** %args, align 4
  %argp.next15 = getelementptr inbounds i8, i8* %argp.cur14, i32 4
  store i8* %argp.next15, i8** %args, align 4
  %25 = bitcast i8* %argp.cur14 to i8**
  %26 = load i8*, i8** %25, align 4
  %call16 = call i32 @state_index(%struct.turing_t* %24, i8* %26)
  %27 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %final_states17 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %27, i32 0, i32 3
  %28 = load i32*, i32** %final_states17, align 4
  %29 = load i32, i32* %i, align 4
  %arrayidx18 = getelementptr inbounds i32, i32* %28, i32 %29
  store i32 %call16, i32* %arrayidx18, align 4
  br label %for.inc19

for.inc19:                                        ; preds = %for.body13
  %30 = load i32, i32* %i, align 4
  %inc20 = add nsw i32 %30, 1
  store i32 %inc20, i32* %i, align 4
  br label %for.cond10

for.end21:                                        ; preds = %for.cond10
  %argp.cur22 = load i8*, i8** %args, align 4
  %argp.next23 = getelementptr inbounds i8, i8* %argp.cur22, i32 4
  store i8* %argp.next23, i8** %args, align 4
  %31 = bitcast i8* %argp.cur22 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %33, i32 0, i32 4
  store i32 %32, i32* %symbols_len, align 4
  %34 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len24 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %34, i32 0, i32 4
  %35 = load i32, i32* %symbols_len24, align 4
  %call25 = call noalias i8* @malloc(i32 %35)
  %36 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %36, i32 0, i32 5
  store i8* %call25, i8** %symbols, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc34, %for.end21
  %37 = load i32, i32* %i, align 4
  %38 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len27 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %38, i32 0, i32 4
  %39 = load i32, i32* %symbols_len27, align 4
  %cmp28 = icmp slt i32 %37, %39
  br i1 %cmp28, label %for.body29, label %for.end36

for.body29:                                       ; preds = %for.cond26
  %argp.cur30 = load i8*, i8** %args, align 4
  %argp.next31 = getelementptr inbounds i8, i8* %argp.cur30, i32 4
  store i8* %argp.next31, i8** %args, align 4
  %40 = bitcast i8* %argp.cur30 to i32*
  %41 = load i32, i32* %40, align 4
  %conv = trunc i32 %41 to i8
  %42 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols32 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %42, i32 0, i32 5
  %43 = load i8*, i8** %symbols32, align 4
  %44 = load i32, i32* %i, align 4
  %arrayidx33 = getelementptr inbounds i8, i8* %43, i32 %44
  store i8 %conv, i8* %arrayidx33, align 1
  br label %for.inc34

for.inc34:                                        ; preds = %for.body29
  %45 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %45, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond26

for.end36:                                        ; preds = %for.cond26
  %46 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur37 = load i8*, i8** %args, align 4
  %argp.next38 = getelementptr inbounds i8, i8* %argp.cur37, i32 4
  store i8* %argp.next38, i8** %args, align 4
  %47 = bitcast i8* %argp.cur37 to i32*
  %48 = load i32, i32* %47, align 4
  %conv39 = trunc i32 %48 to i8
  %call40 = call i32 @symbol_index(%struct.turing_t* %46, i8 signext %conv39)
  %49 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %blank = getelementptr inbounds %struct.turing_t, %struct.turing_t* %49, i32 0, i32 6
  store i32 %call40, i32* %blank, align 4
  %50 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur41 = load i8*, i8** %args, align 4
  %argp.next42 = getelementptr inbounds i8, i8* %argp.cur41, i32 4
  store i8* %argp.next42, i8** %args, align 4
  %51 = bitcast i8* %argp.cur41 to i8**
  %52 = load i8*, i8** %51, align 4
  %call43 = call i32 @state_index(%struct.turing_t* %50, i8* %52)
  %53 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %53, i32 0, i32 7
  store i32 %call43, i32* %state, align 4
  %argp.cur44 = load i8*, i8** %args, align 4
  %argp.next45 = getelementptr inbounds i8, i8* %argp.cur44, i32 4
  store i8* %argp.next45, i8** %args, align 4
  %54 = bitcast i8* %argp.cur44 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %56, i32 0, i32 8
  store i32 %55, i32* %tape_len, align 4
  %57 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %57, i32 0, i32 9
  store %struct.tape_t* null, %struct.tape_t** %tape, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc56, %for.end36
  %58 = load i32, i32* %i, align 4
  %59 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len47 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %59, i32 0, i32 8
  %60 = load i32, i32* %tape_len47, align 4
  %cmp48 = icmp slt i32 %58, %60
  br i1 %cmp48, label %for.body50, label %for.end58

for.body50:                                       ; preds = %for.cond46
  %61 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %61, i32 1)
  %62 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur51 = load i8*, i8** %args, align 4
  %argp.next52 = getelementptr inbounds i8, i8* %argp.cur51, i32 4
  store i8* %argp.next52, i8** %args, align 4
  %63 = bitcast i8* %argp.cur51 to i32*
  %64 = load i32, i32* %63, align 4
  %conv53 = trunc i32 %64 to i8
  %call54 = call i32 @symbol_index(%struct.turing_t* %62, i8 signext %conv53)
  %65 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape55 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %65, i32 0, i32 9
  %66 = load %struct.tape_t*, %struct.tape_t** %tape55, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %66, i32 0, i32 0
  store i32 %call54, i32* %symbol, align 4
  br label %for.inc56

for.inc56:                                        ; preds = %for.body50
  %67 = load i32, i32* %i, align 4
  %inc57 = add nsw i32 %67, 1
  store i32 %inc57, i32* %i, align 4
  br label %for.cond46

for.end58:                                        ; preds = %for.cond46
  %68 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape_len59 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %68, i32 0, i32 8
  %69 = load i32, i32* %tape_len59, align 4
  %tobool = icmp ne i32 %69, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.end58
  %70 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @move(%struct.turing_t* %70, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end58
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %71 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape60 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %71, i32 0, i32 9
  %72 = load %struct.tape_t*, %struct.tape_t** %tape60, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %72, i32 0, i32 1
  %73 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool61 = icmp ne %struct.tape_t* %73, null
  br i1 %tobool61, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %74 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape62 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %74, i32 0, i32 9
  %75 = load %struct.tape_t*, %struct.tape_t** %tape62, align 4
  %left63 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %75, i32 0, i32 1
  %76 = load %struct.tape_t*, %struct.tape_t** %left63, align 4
  %77 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %tape64 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %77, i32 0, i32 9
  store %struct.tape_t* %76, %struct.tape_t** %tape64, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %argp.cur65 = load i8*, i8** %args, align 4
  %argp.next66 = getelementptr inbounds i8, i8* %argp.cur65, i32 4
  store i8* %argp.next66, i8** %args, align 4
  %78 = bitcast i8* %argp.cur65 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %80, i32 0, i32 10
  store i32 %79, i32* %transitions_len, align 4
  %81 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len67 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %81, i32 0, i32 0
  %82 = load i32, i32* %states_len67, align 4
  %mul68 = mul i32 %82, 4
  %call69 = call noalias i8* @malloc(i32 %mul68)
  %83 = bitcast i8* %call69 to %struct.transition_t***
  %84 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %84, i32 0, i32 11
  store %struct.transition_t*** %83, %struct.transition_t**** %transitions, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc80, %while.end
  %85 = load i32, i32* %i, align 4
  %86 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %states_len71 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %86, i32 0, i32 0
  %87 = load i32, i32* %states_len71, align 4
  %cmp72 = icmp slt i32 %85, %87
  br i1 %cmp72, label %for.body74, label %for.end82

for.body74:                                       ; preds = %for.cond70
  %88 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %symbols_len75 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %88, i32 0, i32 4
  %89 = load i32, i32* %symbols_len75, align 4
  %mul76 = mul i32 %89, 4
  %call77 = call noalias i8* @malloc(i32 %mul76)
  %90 = bitcast i8* %call77 to %struct.transition_t**
  %91 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions78 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %91, i32 0, i32 11
  %92 = load %struct.transition_t***, %struct.transition_t**** %transitions78, align 4
  %93 = load i32, i32* %i, align 4
  %arrayidx79 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %92, i32 %93
  store %struct.transition_t** %90, %struct.transition_t*** %arrayidx79, align 4
  br label %for.inc80

for.inc80:                                        ; preds = %for.body74
  %94 = load i32, i32* %i, align 4
  %inc81 = add nsw i32 %94, 1
  store i32 %inc81, i32* %i, align 4
  br label %for.cond70

for.end82:                                        ; preds = %for.cond70
  store i32 0, i32* %i, align 4
  br label %for.cond83

for.cond83:                                       ; preds = %for.inc110, %for.end82
  %95 = load i32, i32* %i, align 4
  %96 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions_len84 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %96, i32 0, i32 10
  %97 = load i32, i32* %transitions_len84, align 4
  %cmp85 = icmp slt i32 %95, %97
  br i1 %cmp85, label %for.body87, label %for.end112

for.body87:                                       ; preds = %for.cond83
  %call88 = call noalias i8* @malloc(i32 20)
  %98 = bitcast i8* %call88 to %struct.transition_t*
  store %struct.transition_t* %98, %struct.transition_t** %tran, align 4
  %99 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur89 = load i8*, i8** %args, align 4
  %argp.next90 = getelementptr inbounds i8, i8* %argp.cur89, i32 4
  store i8* %argp.next90, i8** %args, align 4
  %100 = bitcast i8* %argp.cur89 to i8**
  %101 = load i8*, i8** %100, align 4
  %call91 = call i32 @state_index(%struct.turing_t* %99, i8* %101)
  %102 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %102, i32 0, i32 0
  store i32 %call91, i32* %state1, align 4
  %103 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur92 = load i8*, i8** %args, align 4
  %argp.next93 = getelementptr inbounds i8, i8* %argp.cur92, i32 4
  store i8* %argp.next93, i8** %args, align 4
  %104 = bitcast i8* %argp.cur92 to i32*
  %105 = load i32, i32* %104, align 4
  %conv94 = trunc i32 %105 to i8
  %call95 = call i32 @symbol_index(%struct.turing_t* %103, i8 signext %conv94)
  %106 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %106, i32 0, i32 1
  store i32 %call95, i32* %symbol1, align 4
  %107 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur96 = load i8*, i8** %args, align 4
  %argp.next97 = getelementptr inbounds i8, i8* %argp.cur96, i32 4
  store i8* %argp.next97, i8** %args, align 4
  %108 = bitcast i8* %argp.cur96 to i32*
  %109 = load i32, i32* %108, align 4
  %conv98 = trunc i32 %109 to i8
  %call99 = call i32 @symbol_index(%struct.turing_t* %107, i8 signext %conv98)
  %110 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %110, i32 0, i32 2
  store i32 %call99, i32* %symbol2, align 4
  %argp.cur100 = load i8*, i8** %args, align 4
  %argp.next101 = getelementptr inbounds i8, i8* %argp.cur100, i32 4
  store i8* %argp.next101, i8** %args, align 4
  %111 = bitcast i8* %argp.cur100 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %113, i32 0, i32 3
  store i32 %112, i32* %dir, align 4
  %114 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %argp.cur102 = load i8*, i8** %args, align 4
  %argp.next103 = getelementptr inbounds i8, i8* %argp.cur102, i32 4
  store i8* %argp.next103, i8** %args, align 4
  %115 = bitcast i8* %argp.cur102 to i8**
  %116 = load i8*, i8** %115, align 4
  %call104 = call i32 @state_index(%struct.turing_t* %114, i8* %116)
  %117 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %117, i32 0, i32 4
  store i32 %call104, i32* %state2, align 4
  %118 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %119 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  %transitions105 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %119, i32 0, i32 11
  %120 = load %struct.transition_t***, %struct.transition_t**** %transitions105, align 4
  %121 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state1106 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %121, i32 0, i32 0
  %122 = load i32, i32* %state1106, align 4
  %arrayidx107 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %120, i32 %122
  %123 = load %struct.transition_t**, %struct.transition_t*** %arrayidx107, align 4
  %124 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol1108 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %124, i32 0, i32 1
  %125 = load i32, i32* %symbol1108, align 4
  %arrayidx109 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %123, i32 %125
  store %struct.transition_t* %118, %struct.transition_t** %arrayidx109, align 4
  br label %for.inc110

for.inc110:                                       ; preds = %for.body87
  %126 = load i32, i32* %i, align 4
  %inc111 = add nsw i32 %126, 1
  store i32 %inc111, i32* %i, align 4
  br label %for.cond83

for.end112:                                       ; preds = %for.cond83
  %args113 = bitcast i8** %args to i8*
  call void @llvm.va_end(i8* %args113)
  %127 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  ret %struct.turing_t* %127
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8* %0) #3

declare noalias i8* @malloc(i32 %0) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8* %0) #3

; Function Attrs: noinline nounwind optnone
define hidden void @print_state(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %tape = alloca %struct.tape_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %0, i32 0, i32 1
  %1 = load i8**, i8*** %states, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 7
  %3 = load i32, i32* %state, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %1, i32 %3
  %4 = load i8*, i8** %arrayidx, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* %4)
  %5 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape1 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %5, i32 0, i32 9
  %6 = load %struct.tape_t*, %struct.tape_t** %tape1, align 4
  store %struct.tape_t* %6, %struct.tape_t** %tape, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %7 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left = getelementptr inbounds %struct.tape_t, %struct.tape_t* %7, i32 0, i32 1
  %8 = load %struct.tape_t*, %struct.tape_t** %left, align 4
  %tobool = icmp ne %struct.tape_t* %8, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %9 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %left2 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %9, i32 0, i32 1
  %10 = load %struct.tape_t*, %struct.tape_t** %left2, align 4
  store %struct.tape_t* %10, %struct.tape_t** %tape, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond3

while.cond3:                                      ; preds = %if.end, %while.end
  %11 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %tobool4 = icmp ne %struct.tape_t* %11, null
  br i1 %tobool4, label %while.body5, label %while.end14

while.body5:                                      ; preds = %while.cond3
  %12 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape6 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 9
  %14 = load %struct.tape_t*, %struct.tape_t** %tape6, align 4
  %cmp = icmp eq %struct.tape_t* %12, %14
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body5
  %15 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols = getelementptr inbounds %struct.turing_t, %struct.turing_t* %15, i32 0, i32 5
  %16 = load i8*, i8** %symbols, align 4
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %16, i32 %18
  %19 = load i8, i8* %arrayidx7, align 1
  %conv = sext i8 %19 to i32
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %conv)
  br label %if.end

if.else:                                          ; preds = %while.body5
  %20 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %symbols9 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %20, i32 0, i32 5
  %21 = load i8*, i8** %symbols9, align 4
  %22 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol10 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %22, i32 0, i32 0
  %23 = load i32, i32* %symbol10, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %21, i32 %23
  %24 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %24 to i32
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 %conv12)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %right = getelementptr inbounds %struct.tape_t, %struct.tape_t* %25, i32 0, i32 2
  %26 = load %struct.tape_t*, %struct.tape_t** %right, align 4
  store %struct.tape_t* %26, %struct.tape_t** %tape, align 4
  br label %while.cond3

while.end14:                                      ; preds = %while.cond3
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0))
  ret void
}

declare i32 @printf(i8* %0, ...) #2

; Function Attrs: noinline nounwind optnone
define hidden void @run(%struct.turing_t* %t) #0 {
entry:
  %t.addr = alloca %struct.turing_t*, align 4
  %i = alloca i32, align 4
  %tran = alloca %struct.transition_t*, align 4
  store %struct.turing_t* %t, %struct.turing_t** %t.addr, align 4
  br label %while.body

while.body:                                       ; preds = %entry, %for.end
  %0 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  call void @print_state(%struct.turing_t* %0)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %1 = load i32, i32* %i, align 4
  %2 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states_len = getelementptr inbounds %struct.turing_t, %struct.turing_t* %2, i32 0, i32 2
  %3 = load i32, i32* %final_states_len, align 4
  %cmp = icmp slt i32 %1, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %final_states = getelementptr inbounds %struct.turing_t, %struct.turing_t* %4, i32 0, i32 3
  %5 = load i32*, i32** %final_states, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i32, i32* %5, i32 %6
  %7 = load i32, i32* %arrayidx, align 4
  %8 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state = getelementptr inbounds %struct.turing_t, %struct.turing_t* %8, i32 0, i32 7
  %9 = load i32, i32* %state, align 4
  %cmp1 = icmp eq i32 %7, %9
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  ret void

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %transitions = getelementptr inbounds %struct.turing_t, %struct.turing_t* %11, i32 0, i32 11
  %12 = load %struct.transition_t***, %struct.transition_t**** %transitions, align 4
  %13 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state2 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %13, i32 0, i32 7
  %14 = load i32, i32* %state2, align 4
  %arrayidx3 = getelementptr inbounds %struct.transition_t**, %struct.transition_t*** %12, i32 %14
  %15 = load %struct.transition_t**, %struct.transition_t*** %arrayidx3, align 4
  %16 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape = getelementptr inbounds %struct.turing_t, %struct.turing_t* %16, i32 0, i32 9
  %17 = load %struct.tape_t*, %struct.tape_t** %tape, align 4
  %symbol = getelementptr inbounds %struct.tape_t, %struct.tape_t* %17, i32 0, i32 0
  %18 = load i32, i32* %symbol, align 4
  %arrayidx4 = getelementptr inbounds %struct.transition_t*, %struct.transition_t** %15, i32 %18
  %19 = load %struct.transition_t*, %struct.transition_t** %arrayidx4, align 4
  store %struct.transition_t* %19, %struct.transition_t** %tran, align 4
  %20 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %symbol2 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %20, i32 0, i32 2
  %21 = load i32, i32* %symbol2, align 4
  %22 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %tape5 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %22, i32 0, i32 9
  %23 = load %struct.tape_t*, %struct.tape_t** %tape5, align 4
  %symbol6 = getelementptr inbounds %struct.tape_t, %struct.tape_t* %23, i32 0, i32 0
  store i32 %21, i32* %symbol6, align 4
  %24 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %25 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %dir = getelementptr inbounds %struct.transition_t, %struct.transition_t* %25, i32 0, i32 3
  %26 = load i32, i32* %dir, align 4
  call void @move(%struct.turing_t* %24, i32 %26)
  %27 = load %struct.transition_t*, %struct.transition_t** %tran, align 4
  %state27 = getelementptr inbounds %struct.transition_t, %struct.transition_t* %27, i32 0, i32 4
  %28 = load i32, i32* %state27, align 4
  %29 = load %struct.turing_t*, %struct.turing_t** %t.addr, align 4
  %state8 = getelementptr inbounds %struct.turing_t, %struct.turing_t* %29, i32 0, i32 7
  store i32 %28, i32* %state8, align 4
  br label %while.body
}

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %t = alloca %struct.turing_t*, align 4
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0))
  %call1 = call %struct.turing_t* (i32, ...) @create(i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32 2, i32 66, i32 49, i32 66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 3, i32 49, i32 49, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 66, i32 49, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0))
  store %struct.turing_t* %call1, %struct.turing_t** %t, align 4
  %0 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %0)
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i32 0, i32 0))
  %call3 = call %struct.turing_t* (i32, ...) @create(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 2, i32 48, i32 49, i32 48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 0, i32 6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 48, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 49, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 49, i32 49, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 48, i32 49, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 49, i32 49, i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0))
  store %struct.turing_t* %call3, %struct.turing_t** %t, align 4
  %1 = load %struct.turing_t*, %struct.turing_t** %t, align 4
  call void @run(%struct.turing_t* %1)
  ret i32 0
}

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readonly }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for main()
Total of 0 replacements done on this module
Total of 0 replacements candidates on this module
