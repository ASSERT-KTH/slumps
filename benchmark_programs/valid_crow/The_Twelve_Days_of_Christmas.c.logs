
Entering the Souper pass's runOnModule()


; entering Souper's runOnFunction() for main()

; ModuleID = './The_Twelve_Days_of_Christmas.c.bc'
source_filename = "./The_Twelve_Days_of_Christmas.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@__const.main.days = private unnamed_addr constant [12 x [10 x i8]] [[10 x i8] c"First\00\00\00\00\00", [10 x i8] c"Second\00\00\00\00", [10 x i8] c"Third\00\00\00\00\00", [10 x i8] c"Fourth\00\00\00\00", [10 x i8] c"Fifth\00\00\00\00\00", [10 x i8] c"Sixth\00\00\00\00\00", [10 x i8] c"Seventh\00\00\00", [10 x i8] c"Eighth\00\00\00\00", [10 x i8] c"Ninth\00\00\00\00\00", [10 x i8] c"Tenth\00\00\00\00\00", [10 x i8] c"Eleventh\00\00", [10 x i8] c"Twelfth\00\00\00"], align 16
@__const.main.gifts = private unnamed_addr constant [12 x [33 x i8]] [[33 x i8] c"Twelve drummers drumming\00\00\00\00\00\00\00\00\00", [33 x i8] c"Eleven pipers piping\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Ten lords a-leaping\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Nine ladies dancing\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Eight maids a-milking\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Seven swans a-swimming\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Six geese a-laying\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Five golden rings\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Four calling birds\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Three french hens\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Two turtle doves\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"And a partridge in a pear tree.\00\00"], align 16
@.str = private unnamed_addr constant [54 x i8] c"\0A\0AOn the %s day of Christmas\0AMy true love gave to me:\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"\0AA partridge in a pear tree.\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"\0A%s%c\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %days = alloca [12 x [10 x i8]], align 16
  %gifts = alloca [12 x [33 x i8]], align 16
  store i32 0, i32* %retval, align 4
  %0 = bitcast [12 x [10 x i8]]* %days to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %0, i8* align 16 getelementptr inbounds ([12 x [10 x i8]], [12 x [10 x i8]]* @__const.main.days, i32 0, i32 0, i32 0), i32 120, i1 false)
  %1 = bitcast [12 x [33 x i8]]* %gifts to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %1, i8* align 16 getelementptr inbounds ([12 x [33 x i8]], [12 x [33 x i8]]* @__const.main.gifts, i32 0, i32 0, i32 0), i32 396, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc11, %entry
  %2 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %2, 12
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [12 x [10 x i8]], [12 x [10 x i8]]* %days, i32 0, i32 %3
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %arrayidx, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i32 0, i32 0), i8* %arraydecay)
  %4 = load i32, i32* %i, align 4
  store i32 %4, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4
  %cmp2 = icmp sge i32 %5, 0
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %6 = load i32, i32* %i, align 4
  %cmp4 = icmp eq i32 %6, 0
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body3
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0))
  br label %cond.end

cond.false:                                       ; preds = %for.body3
  %7 = load i32, i32* %j, align 4
  %sub = sub nsw i32 11, %7
  %arrayidx6 = getelementptr inbounds [12 x [33 x i8]], [12 x [33 x i8]]* %gifts, i32 0, i32 %sub
  %arraydecay7 = getelementptr inbounds [33 x i8], [33 x i8]* %arrayidx6, i32 0, i32 0
  %8 = load i32, i32* %j, align 4
  %cmp8 = icmp ne i32 %8, 0
  %9 = zext i1 %cmp8 to i64
  %cond = select i1 %cmp8, i32 44, i32 32
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* %arraydecay7, i32 %cond)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond10 = phi i32 [ %call5, %cond.true ], [ %call9, %cond.false ]
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %10 = load i32, i32* %j, align 4
  %dec = add nsw i32 %10, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc11

for.inc11:                                        ; preds = %for.end
  %11 = load i32, i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare i32 @printf(i8* %0, ...) #2

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %2 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp = icmp slt i32 %2, 12
; Looking for a replacement for:
%0:i32 = var
%1:i1 = slt %0, 12:i32
infer %1

; *****
; For LLVM instruction:
;  %3 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %4 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %5 = load i32, i32* %j, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp2 = icmp sge i32 %5, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = sle 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %6 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp4 = icmp eq i32 %6, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0))
; Looking for a replacement for:
%0:i32 = var
infer %0 (demandedBits=00000000000000000000000000000000)

; *****
; For LLVM instruction:
;  %7 = load i32, i32* %j, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %sub = sub nsw i32 11, %7
; Looking for a replacement for:
%0:i32 = var
%1:i32 = subnsw 11:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %8 = load i32, i32* %j, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp8 = icmp ne i32 %8, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %cond = select i1 %cmp8, i32 44, i32 32
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0 (hasExternalUses)
%2:i32 = select %1, 44:i32, 32:i32
infer %2

; *****
; For LLVM instruction:
;  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* %arraydecay7, i32 %cond)
; Looking for a replacement for:
%0:i32 = var
infer %0 (demandedBits=00000000000000000000000000000000)

; *****
; For LLVM instruction:
;  %10 = load i32, i32* %j, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %dec = add nsw i32 %10, -1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 4294967295:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %11 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc = add nsw i32 %11, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = slt %0, 12:i32
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = sle 0:i32, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var
infer %0 (demandedBits=00000000000000000000000000000000)


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
second query is UNSAT-- this guess works
Dataflow Pruned 0/0
There are 1 Guesses
There are 1 RHSs before deduplication
There are 1 RHSs after deduplication
"
; No valid RHS in the list
#########################################################

Module before replacement:
; ModuleID = './The_Twelve_Days_of_Christmas.c.bc'
source_filename = "./The_Twelve_Days_of_Christmas.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@__const.main.days = private unnamed_addr constant [12 x [10 x i8]] [[10 x i8] c"First\00\00\00\00\00", [10 x i8] c"Second\00\00\00\00", [10 x i8] c"Third\00\00\00\00\00", [10 x i8] c"Fourth\00\00\00\00", [10 x i8] c"Fifth\00\00\00\00\00", [10 x i8] c"Sixth\00\00\00\00\00", [10 x i8] c"Seventh\00\00\00", [10 x i8] c"Eighth\00\00\00\00", [10 x i8] c"Ninth\00\00\00\00\00", [10 x i8] c"Tenth\00\00\00\00\00", [10 x i8] c"Eleventh\00\00", [10 x i8] c"Twelfth\00\00\00"], align 16
@__const.main.gifts = private unnamed_addr constant [12 x [33 x i8]] [[33 x i8] c"Twelve drummers drumming\00\00\00\00\00\00\00\00\00", [33 x i8] c"Eleven pipers piping\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Ten lords a-leaping\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Nine ladies dancing\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Eight maids a-milking\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Seven swans a-swimming\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Six geese a-laying\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Five golden rings\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Four calling birds\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Three french hens\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Two turtle doves\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"And a partridge in a pear tree.\00\00"], align 16
@.str = private unnamed_addr constant [54 x i8] c"\0A\0AOn the %s day of Christmas\0AMy true love gave to me:\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"\0AA partridge in a pear tree.\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"\0A%s%c\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %days = alloca [12 x [10 x i8]], align 16
  %gifts = alloca [12 x [33 x i8]], align 16
  store i32 0, i32* %retval, align 4
  %0 = bitcast [12 x [10 x i8]]* %days to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %0, i8* align 16 getelementptr inbounds ([12 x [10 x i8]], [12 x [10 x i8]]* @__const.main.days, i32 0, i32 0, i32 0), i32 120, i1 false)
  %1 = bitcast [12 x [33 x i8]]* %gifts to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %1, i8* align 16 getelementptr inbounds ([12 x [33 x i8]], [12 x [33 x i8]]* @__const.main.gifts, i32 0, i32 0, i32 0), i32 396, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc11, %entry
  %2 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %2, 12
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [12 x [10 x i8]], [12 x [10 x i8]]* %days, i32 0, i32 %3
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %arrayidx, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i32 0, i32 0), i8* %arraydecay)
  %4 = load i32, i32* %i, align 4
  store i32 %4, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4
  %cmp2 = icmp sge i32 %5, 0
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %6 = load i32, i32* %i, align 4
  %cmp4 = icmp eq i32 %6, 0
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body3
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0))
  br label %cond.end

cond.false:                                       ; preds = %for.body3
  %7 = load i32, i32* %j, align 4
  %sub = sub nsw i32 11, %7
  %arrayidx6 = getelementptr inbounds [12 x [33 x i8]], [12 x [33 x i8]]* %gifts, i32 0, i32 %sub
  %arraydecay7 = getelementptr inbounds [33 x i8], [33 x i8]* %arrayidx6, i32 0, i32 0
  %8 = load i32, i32* %j, align 4
  %cmp8 = icmp ne i32 %8, 0
  %9 = zext i1 %cmp8 to i64
  %cond = select i1 %cmp8, i32 44, i32 32
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* %arraydecay7, i32 %cond)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond10 = phi i32 [ %call5, %cond.true ], [ %call9, %cond.false ]
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %10 = load i32, i32* %j, align 4
  %dec = add nsw i32 %10, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc11

for.inc11:                                        ; preds = %for.end
  %11 = load i32, i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare i32 @printf(i8* %0, ...) #2

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; Replacing "  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0))"
; from ""
; with "i32 0" in:
"%0:i32 = var
cand %0 0:i32 (demandedBits=00000000000000000000000000000000)
"
; with "i32 0"

Module after replacement:
; ModuleID = './The_Twelve_Days_of_Christmas.c.bc'
source_filename = "./The_Twelve_Days_of_Christmas.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@__const.main.days = private unnamed_addr constant [12 x [10 x i8]] [[10 x i8] c"First\00\00\00\00\00", [10 x i8] c"Second\00\00\00\00", [10 x i8] c"Third\00\00\00\00\00", [10 x i8] c"Fourth\00\00\00\00", [10 x i8] c"Fifth\00\00\00\00\00", [10 x i8] c"Sixth\00\00\00\00\00", [10 x i8] c"Seventh\00\00\00", [10 x i8] c"Eighth\00\00\00\00", [10 x i8] c"Ninth\00\00\00\00\00", [10 x i8] c"Tenth\00\00\00\00\00", [10 x i8] c"Eleventh\00\00", [10 x i8] c"Twelfth\00\00\00"], align 16
@__const.main.gifts = private unnamed_addr constant [12 x [33 x i8]] [[33 x i8] c"Twelve drummers drumming\00\00\00\00\00\00\00\00\00", [33 x i8] c"Eleven pipers piping\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Ten lords a-leaping\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Nine ladies dancing\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Eight maids a-milking\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Seven swans a-swimming\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Six geese a-laying\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Five golden rings\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Four calling birds\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Three french hens\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Two turtle doves\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"And a partridge in a pear tree.\00\00"], align 16
@.str = private unnamed_addr constant [54 x i8] c"\0A\0AOn the %s day of Christmas\0AMy true love gave to me:\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"\0AA partridge in a pear tree.\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"\0A%s%c\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %days = alloca [12 x [10 x i8]], align 16
  %gifts = alloca [12 x [33 x i8]], align 16
  store i32 0, i32* %retval, align 4
  %0 = bitcast [12 x [10 x i8]]* %days to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %0, i8* align 16 getelementptr inbounds ([12 x [10 x i8]], [12 x [10 x i8]]* @__const.main.days, i32 0, i32 0, i32 0), i32 120, i1 false)
  %1 = bitcast [12 x [33 x i8]]* %gifts to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %1, i8* align 16 getelementptr inbounds ([12 x [33 x i8]], [12 x [33 x i8]]* @__const.main.gifts, i32 0, i32 0, i32 0), i32 396, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc11, %entry
  %2 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %2, 12
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [12 x [10 x i8]], [12 x [10 x i8]]* %days, i32 0, i32 %3
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %arrayidx, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i32 0, i32 0), i8* %arraydecay)
  %4 = load i32, i32* %i, align 4
  store i32 %4, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4
  %cmp2 = icmp sge i32 %5, 0
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %6 = load i32, i32* %i, align 4
  %cmp4 = icmp eq i32 %6, 0
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body3
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0))
  br label %cond.end

cond.false:                                       ; preds = %for.body3
  %7 = load i32, i32* %j, align 4
  %sub = sub nsw i32 11, %7
  %arrayidx6 = getelementptr inbounds [12 x [33 x i8]], [12 x [33 x i8]]* %gifts, i32 0, i32 %sub
  %arraydecay7 = getelementptr inbounds [33 x i8], [33 x i8]* %arrayidx6, i32 0, i32 0
  %8 = load i32, i32* %j, align 4
  %cmp8 = icmp ne i32 %8, 0
  %cond = select i1 %cmp8, i32 44, i32 32
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* %arraydecay7, i32 %cond)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %9 = load i32, i32* %j, align 4
  %dec = add nsw i32 %9, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc11

for.inc11:                                        ; preds = %for.end
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare i32 @printf(i8* %0, ...) #2

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

#########################################################
; exiting Souper's runOnFunction() for main()
rescanning function after transformation was applied

; entering Souper's runOnFunction() for main()

; ModuleID = './The_Twelve_Days_of_Christmas.c.bc'
source_filename = "./The_Twelve_Days_of_Christmas.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@__const.main.days = private unnamed_addr constant [12 x [10 x i8]] [[10 x i8] c"First\00\00\00\00\00", [10 x i8] c"Second\00\00\00\00", [10 x i8] c"Third\00\00\00\00\00", [10 x i8] c"Fourth\00\00\00\00", [10 x i8] c"Fifth\00\00\00\00\00", [10 x i8] c"Sixth\00\00\00\00\00", [10 x i8] c"Seventh\00\00\00", [10 x i8] c"Eighth\00\00\00\00", [10 x i8] c"Ninth\00\00\00\00\00", [10 x i8] c"Tenth\00\00\00\00\00", [10 x i8] c"Eleventh\00\00", [10 x i8] c"Twelfth\00\00\00"], align 16
@__const.main.gifts = private unnamed_addr constant [12 x [33 x i8]] [[33 x i8] c"Twelve drummers drumming\00\00\00\00\00\00\00\00\00", [33 x i8] c"Eleven pipers piping\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Ten lords a-leaping\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Nine ladies dancing\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Eight maids a-milking\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Seven swans a-swimming\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Six geese a-laying\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Five golden rings\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Four calling birds\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Three french hens\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"Two turtle doves\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [33 x i8] c"And a partridge in a pear tree.\00\00"], align 16
@.str = private unnamed_addr constant [54 x i8] c"\0A\0AOn the %s day of Christmas\0AMy true love gave to me:\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"\0AA partridge in a pear tree.\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"\0A%s%c\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @__main_void to i8*)], section "llvm.metadata"

@__main_void = alias i32 (), i32 ()* @main

; Function Attrs: noinline nounwind optnone
define hidden i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %days = alloca [12 x [10 x i8]], align 16
  %gifts = alloca [12 x [33 x i8]], align 16
  store i32 0, i32* %retval, align 4
  %0 = bitcast [12 x [10 x i8]]* %days to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %0, i8* align 16 getelementptr inbounds ([12 x [10 x i8]], [12 x [10 x i8]]* @__const.main.days, i32 0, i32 0, i32 0), i32 120, i1 false)
  %1 = bitcast [12 x [33 x i8]]* %gifts to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %1, i8* align 16 getelementptr inbounds ([12 x [33 x i8]], [12 x [33 x i8]]* @__const.main.gifts, i32 0, i32 0, i32 0), i32 396, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc11, %entry
  %2 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %2, 12
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [12 x [10 x i8]], [12 x [10 x i8]]* %days, i32 0, i32 %3
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %arrayidx, i32 0, i32 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i32 0, i32 0), i8* %arraydecay)
  %4 = load i32, i32* %i, align 4
  store i32 %4, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4
  %cmp2 = icmp sge i32 %5, 0
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %6 = load i32, i32* %i, align 4
  %cmp4 = icmp eq i32 %6, 0
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body3
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0))
  br label %cond.end

cond.false:                                       ; preds = %for.body3
  %7 = load i32, i32* %j, align 4
  %sub = sub nsw i32 11, %7
  %arrayidx6 = getelementptr inbounds [12 x [33 x i8]], [12 x [33 x i8]]* %gifts, i32 0, i32 %sub
  %arraydecay7 = getelementptr inbounds [33 x i8], [33 x i8]* %arrayidx6, i32 0, i32 0
  %8 = load i32, i32* %j, align 4
  %cmp8 = icmp ne i32 %8, 0
  %cond = select i1 %cmp8, i32 44, i32 32
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* %arraydecay7, i32 %cond)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %9 = load i32, i32* %j, align 4
  %dec = add nsw i32 %9, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc11

for.inc11:                                        ; preds = %for.end
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare i32 @printf(i8* %0, ...) #2

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.0.0 (https://github.com/Jacarte/llvm-project.git 0f6dea67136cc1e0b3d200eb2bb165628970c44b)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %2 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp = icmp slt i32 %2, 12
; Looking for a replacement for:
%0:i32 = var
%1:i1 = slt %0, 12:i32
infer %1

; *****
; For LLVM instruction:
;  %3 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %4 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %5 = load i32, i32* %j, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp2 = icmp sge i32 %5, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = sle 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %6 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp4 = icmp eq i32 %6, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %7 = load i32, i32* %j, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %sub = sub nsw i32 11, %7
; Looking for a replacement for:
%0:i32 = var
%1:i32 = subnsw 11:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %8 = load i32, i32* %j, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %cmp8 = icmp ne i32 %8, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %cond = select i1 %cmp8, i32 44, i32 32
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
%2:i32 = select %1, 44:i32, 32:i32
infer %2

; *****
; For LLVM instruction:
;  %9 = load i32, i32* %j, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %dec = add nsw i32 %9, -1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 4294967295:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %10 = load i32, i32* %i, align 4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %inc = add nsw i32 %10, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = subnsw 11:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 11
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -67108853
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = ne 0:i32, %0
%2:i32 = select %1, 44:i32, 32:i32
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 32
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 44
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = addnsw 4294967295:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 536870911
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 268435457
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for main()
Total of 1 replacements done on this module
Total of 1 replacements candidates on this module
