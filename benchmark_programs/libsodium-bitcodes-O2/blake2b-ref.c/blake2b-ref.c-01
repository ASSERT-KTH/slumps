; entering Souper's runOnFunction() for blake2b_init_param()

; ModuleID = './blake2b-ref.c.bc'
source_filename = "crypto_generichash/blake2b/ref/blake2b-ref.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.blake2b_state = type <{ [8 x i64], [2 x i64], [2 x i64], [256 x i8], i32, i8 }>
%struct.blake2b_param_ = type { i8, i8, i8, i8, [4 x i8], [8 x i8], i8, i8, [14 x i8], [16 x i8], [16 x i8] }

@.str = private unnamed_addr constant [32 x i8] c"S->buflen <= BLAKE2B_BLOCKBYTES\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"crypto_generichash/blake2b/ref/blake2b-ref.c\00", align 1
@__func__.blake2b_final = private unnamed_addr constant [14 x i8] c"blake2b_final\00", align 1
@blake2b_IV = internal unnamed_addr constant [8 x i64] [i64 7640891576956012808, i64 -4942790177534073029, i64 4354685564936845355, i64 -6534734903238641935, i64 5840696475078001361, i64 -7276294671716946913, i64 2270897969802886507, i64 6620516959819538809], align 16

; Function Attrs: nounwind
define hidden i32 @blake2b_init_param(%struct.blake2b_state* nocapture %0, %struct.blake2b_param_* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = bitcast %struct.blake2b_state* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(64) %3, i8* nonnull align 16 dereferenceable(64) bitcast ([8 x i64]* @blake2b_IV to i8*), i32 64, i1 false) #6
  %4 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 1
  %5 = bitcast [2 x i64]* %4 to i8*
  tail call void @llvm.memset.p0i8.i32(i8* nonnull align 1 dereferenceable(293) %5, i8 0, i32 293, i1 false) #6
  %6 = getelementptr %struct.blake2b_param_, %struct.blake2b_param_* %1, i32 0, i32 0
  %7 = bitcast %struct.blake2b_param_* %1 to i64*
  %8 = load i64, i64* %7, align 1
  %9 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 0
  %10 = xor i64 %8, 7640891576956012808
  store i64 %10, i64* %9, align 1
  %11 = getelementptr i8, i8* %6, i32 8
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 1
  %14 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 1
  %15 = xor i64 %13, -4942790177534073029
  store i64 %15, i64* %14, align 1
  %16 = getelementptr i8, i8* %6, i32 16
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 1
  %19 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 2
  %20 = xor i64 %18, 4354685564936845355
  store i64 %20, i64* %19, align 1
  %21 = getelementptr i8, i8* %6, i32 24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 3
  %25 = xor i64 %23, -6534734903238641935
  store i64 %25, i64* %24, align 1
  %26 = getelementptr i8, i8* %6, i32 32
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 1
  %29 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 4
  %30 = xor i64 %28, 5840696475078001361
  store i64 %30, i64* %29, align 1
  %31 = getelementptr i8, i8* %6, i32 40
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 1
  %34 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 5
  %35 = xor i64 %33, -7276294671716946913
  store i64 %35, i64* %34, align 1
  %36 = getelementptr i8, i8* %6, i32 48
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 1
  %39 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 6
  %40 = xor i64 %38, 2270897969802886507
  store i64 %40, i64* %39, align 1
  %41 = getelementptr i8, i8* %6, i32 56
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 1
  %44 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 7
  %45 = xor i64 %43, 6620516959819538809
  store i64 %45, i64* %44, align 1
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define hidden i32 @blake2b_init(%struct.blake2b_state* nocapture %0, i8 zeroext %1) local_unnamed_addr #0 {
  %3 = add i8 %1, -1
  %4 = icmp ugt i8 %3, 63
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @sodium_misuse() #7
  unreachable

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 1
  %8 = bitcast [2 x i64]* %7 to i8*
  tail call void @llvm.memset.p0i8.i32(i8* nonnull align 1 dereferenceable(293) %8, i8 0, i32 293, i1 false) #6
  %9 = zext i8 %1 to i64
  %10 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 0
  %11 = xor i64 %9, 7640891576939301128
  store i64 %11, i64* %10, align 1
  %12 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 1
  store i64 -4942790177534073029, i64* %12, align 1
  %13 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 2
  store i64 4354685564936845355, i64* %13, align 1
  %14 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 3
  store i64 -6534734903238641935, i64* %14, align 1
  %15 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 4
  store i64 5840696475078001361, i64* %15, align 1
  %16 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 5
  store i64 -7276294671716946913, i64* %16, align 1
  %17 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 6
  store i64 2270897969802886507, i64* %17, align 1
  %18 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 7
  store i64 6620516959819538809, i64* %18, align 1
  ret i32 0
}

; Function Attrs: noreturn
declare void @sodium_misuse() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #3

; Function Attrs: nounwind
define hidden i32 @blake2b_init_salt_personal(%struct.blake2b_state* nocapture %0, i8 zeroext %1, i8* readonly %2, i8* readonly %3) local_unnamed_addr #0 {
  %5 = add i8 %1, -1
  %6 = icmp ugt i8 %5, 63
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @sodium_misuse() #7
  unreachable

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %8
  %11 = bitcast i8* %2 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = getelementptr inbounds i8, i8* %2, i32 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = xor i64 %12, 5840696475078001361
  %17 = xor i64 %15, -7276294671716946913
  br label %18

18:                                               ; preds = %8, %10
  %19 = phi i64 [ %17, %10 ], [ -7276294671716946913, %8 ]
  %20 = phi i64 [ %16, %10 ], [ 5840696475078001361, %8 ]
  %21 = icmp eq i8* %3, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  %23 = bitcast i8* %3 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = getelementptr inbounds i8, i8* %3, i32 8
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 1
  %28 = xor i64 %24, 2270897969802886507
  %29 = xor i64 %27, 6620516959819538809
  br label %30

30:                                               ; preds = %18, %22
  %31 = phi i64 [ %28, %22 ], [ 2270897969802886507, %18 ]
  %32 = phi i64 [ %29, %22 ], [ 6620516959819538809, %18 ]
  %33 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 1
  %34 = bitcast [2 x i64]* %33 to i8*
  tail call void @llvm.memset.p0i8.i32(i8* nonnull align 1 dereferenceable(293) %34, i8 0, i32 293, i1 false) #6
  %35 = zext i8 %1 to i64
  %36 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 0
  %37 = xor i64 %35, 7640891576939301128
  store i64 %37, i64* %36, align 1
  %38 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 1
  store i64 -4942790177534073029, i64* %38, align 1
  %39 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 2
  store i64 4354685564936845355, i64* %39, align 1
  %40 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 3
  store i64 -6534734903238641935, i64* %40, align 1
  %41 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 4
  store i64 %20, i64* %41, align 1
  %42 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 5
  store i64 %19, i64* %42, align 1
  %43 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 6
  store i64 %31, i64* %43, align 1
  %44 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 7
  store i64 %32, i64* %44, align 1
  ret i32 0
}

; Function Attrs: nounwind
define hidden i32 @blake2b_init_key(%struct.blake2b_state* %0, i8 zeroext %1, i8* readonly %2, i8 zeroext %3) local_unnamed_addr #0 {
  %5 = alloca [128 x i8], align 16
  %6 = add i8 %1, -1
  %7 = icmp ugt i8 %6, 63
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @sodium_misuse() #7
  unreachable

9:                                                ; preds = %4
  %10 = icmp eq i8* %2, null
  %11 = add i8 %3, -1
  %12 = icmp ugt i8 %11, 63
  %13 = or i1 %12, %10
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @sodium_misuse() #7
  unreachable

15:                                               ; preds = %9
  %16 = zext i8 %3 to i32
  %17 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 1
  %18 = bitcast [2 x i64]* %17 to i8*
  tail call void @llvm.memset.p0i8.i32(i8* nonnull align 1 dereferenceable(293) %18, i8 0, i32 293, i1 false) #6
  %19 = zext i8 %3 to i64
  %20 = shl nuw nsw i64 %19, 8
  %21 = zext i8 %1 to i64
  %22 = or i64 %20, %21
  %23 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 0
  %24 = xor i64 %22, 7640891576939301128
  store i64 %24, i64* %23, align 1
  %25 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 1
  store i64 -4942790177534073029, i64* %25, align 1
  %26 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 2
  store i64 4354685564936845355, i64* %26, align 1
  %27 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 3
  store i64 -6534734903238641935, i64* %27, align 1
  %28 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 4
  store i64 5840696475078001361, i64* %28, align 1
  %29 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 5
  store i64 -7276294671716946913, i64* %29, align 1
  %30 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 6
  store i64 2270897969802886507, i64* %30, align 1
  %31 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 7
  store i64 6620516959819538809, i64* %31, align 1
  %32 = getelementptr inbounds [128 x i8], [128 x i8]* %5, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %32) #6
  %33 = sub nuw nsw i32 128, %16
  %34 = getelementptr [128 x i8], [128 x i8]* %5, i32 0, i32 %16
  call void @llvm.memset.p0i8.i32(i8* align 1 %34, i8 0, i32 %33, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 16 %32, i8* nonnull align 1 %2, i32 %16, i1 false)
  %35 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 4
  %36 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 3, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(128) %36, i8* nonnull align 16 dereferenceable(128) %32, i32 128, i1 false) #6
  %37 = load i32, i32* %35, align 1
  %38 = add i32 %37, 128
  store i32 %38, i32* %35, align 1
  call void @sodium_memzero(i8* nonnull %32, i32 128) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %32) #6
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

; Function Attrs: nounwind
define hidden i32 @blake2b_update(%struct.blake2b_state* %0, i8* nocapture readonly %1, i64 %2) local_unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %39, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 4
  %7 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 3, i32 0
  %8 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 1, i32 0
  %9 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 1, i32 1
  %10 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 3, i32 128
  %11 = load i32, i32* %6, align 1
  br label %12

12:                                               ; preds = %5, %24
  %13 = phi i32 [ %11, %5 ], [ %35, %24 ]
  %14 = phi i8* [ %1, %5 ], [ %37, %24 ]
  %15 = phi i64 [ %2, %5 ], [ %36, %24 ]
  %16 = sub i32 256, %13
  %17 = zext i32 %16 to i64
  %18 = icmp ugt i64 %15, %17
  %19 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 3, i32 %13
  br i1 %18, label %24, label %20

20:                                               ; preds = %12
  %21 = trunc i64 %15 to i32
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %19, i8* align 1 %14, i32 %21, i1 false)
  %22 = load i32, i32* %6, align 1
  %23 = add i32 %22, %21
  store i32 %23, i32* %6, align 1
  br label %39

24:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %19, i8* align 1 %14, i32 %16, i1 false)
  %25 = load i32, i32* %6, align 1
  %26 = add i32 %25, %16
  store i32 %26, i32* %6, align 1
  %27 = load i64, i64* %8, align 1
  %28 = add i64 %27, 128
  store i64 %28, i64* %8, align 1
  %29 = icmp ugt i64 %27, -129
  %30 = zext i1 %29 to i64
  %31 = load i64, i64* %9, align 1
  %32 = add i64 %31, %30
  store i64 %32, i64* %9, align 1
  %33 = tail call i32 @blake2b_compress_ref(%struct.blake2b_state* nonnull %0, i8* nonnull %7) #6
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(128) %7, i8* nonnull align 1 dereferenceable(128) %10, i32 128, i1 false)
  %34 = load i32, i32* %6, align 1
  %35 = add i32 %34, -128
  store i32 %35, i32* %6, align 1
  %36 = sub i64 %15, %17
  %37 = getelementptr i8, i8* %14, i32 %16
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %39, label %12

39:                                               ; preds = %24, %20, %3
  ret i32 0
}

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #4

; Function Attrs: nounwind
define hidden i32 @blake2b_init_key_salt_personal(%struct.blake2b_state* %0, i8 zeroext %1, i8* readonly %2, i8 zeroext %3, i8* readonly %4, i8* readonly %5) local_unnamed_addr #0 {
  %7 = alloca [128 x i8], align 16
  %8 = add i8 %1, -1
  %9 = icmp ugt i8 %8, 63
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void @sodium_misuse() #7
  unreachable

11:                                               ; preds = %6
  %12 = icmp ne i8* %2, null
  %13 = icmp ne i8 %3, 0
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = zext i8 %3 to i32
  %17 = icmp ugt i8 %3, 64
  br i1 %17, label %18, label %19

18:                                               ; preds = %15, %11
  tail call void @sodium_misuse() #7
  unreachable

19:                                               ; preds = %15
  %20 = icmp eq i8* %4, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %19
  %22 = bitcast i8* %4 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = getelementptr inbounds i8, i8* %4, i32 8
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 1
  %27 = xor i64 %23, 5840696475078001361
  %28 = xor i64 %26, -7276294671716946913
  br label %29

29:                                               ; preds = %19, %21
  %30 = phi i64 [ %28, %21 ], [ -7276294671716946913, %19 ]
  %31 = phi i64 [ %27, %21 ], [ 5840696475078001361, %19 ]
  %32 = icmp eq i8* %5, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %29
  %34 = bitcast i8* %5 to i64*
  %35 = load i64, i64* %34, align 1
  %36 = getelementptr inbounds i8, i8* %5, i32 8
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 1
  %39 = xor i64 %35, 2270897969802886507
  %40 = xor i64 %38, 6620516959819538809
  br label %41

41:                                               ; preds = %33, %29
  %42 = phi i64 [ %39, %33 ], [ 2270897969802886507, %29 ]
  %43 = phi i64 [ %40, %33 ], [ 6620516959819538809, %29 ]
  %44 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 1
  %45 = bitcast [2 x i64]* %44 to i8*
  tail call void @llvm.memset.p0i8.i32(i8* nonnull align 1 dereferenceable(293) %45, i8 0, i32 293, i1 false) #6
  %46 = zext i8 %3 to i64
  %47 = shl nuw nsw i64 %46, 8
  %48 = zext i8 %1 to i64
  %49 = or i64 %47, %48
  %50 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 0
  %51 = xor i64 %49, 7640891576939301128
  store i64 %51, i64* %50, align 1
  %52 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 1
  store i64 -4942790177534073029, i64* %52, align 1
  %53 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 2
  store i64 4354685564936845355, i64* %53, align 1
  %54 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 3
  store i64 -6534734903238641935, i64* %54, align 1
  %55 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 4
  store i64 %31, i64* %55, align 1
  %56 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 5
  store i64 %30, i64* %56, align 1
  %57 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 6
  store i64 %42, i64* %57, align 1
  %58 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 7
  store i64 %43, i64* %58, align 1
  %59 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %59) #6
  %60 = sub nsw i32 128, %16
  %61 = getelementptr [128 x i8], [128 x i8]* %7, i32 0, i32 %16
  call void @llvm.memset.p0i8.i32(i8* align 1 %61, i8 0, i32 %60, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 16 %59, i8* nonnull align 1 %2, i32 %16, i1 false)
  %62 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 4
  %63 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 3, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(128) %63, i8* nonnull align 16 dereferenceable(128) %59, i32 128, i1 false) #6
  %64 = load i32, i32* %62, align 1
  %65 = add i32 %64, 128
  store i32 %65, i32* %62, align 1
  call void @sodium_memzero(i8* nonnull %59, i32 128) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %59) #6
  ret i32 0
}

; Function Attrs: nounwind
define hidden i32 @blake2b_final(%struct.blake2b_state* %0, i8* nocapture %1, i8 zeroext %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5)
  %6 = icmp eq i8 %2, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = zext i8 %2 to i32
  %9 = icmp ugt i8 %2, 64
  br i1 %9, label %10, label %11

10:                                               ; preds = %3, %7
  tail call void @sodium_misuse() #7
  unreachable

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 2, i32 0
  %13 = load i64, i64* %12, align 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %90

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 4
  %17 = load i32, i32* %16, align 1
  %18 = icmp ugt i32 %17, 128
  br i1 %18, label %19, label %37

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 1, i32 0
  %21 = load i64, i64* %20, align 1
  %22 = add i64 %21, 128
  store i64 %22, i64* %20, align 1
  %23 = icmp ugt i64 %21, -129
  %24 = zext i1 %23 to i64
  %25 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 1, i32 1
  %26 = load i64, i64* %25, align 1
  %27 = add i64 %26, %24
  store i64 %27, i64* %25, align 1
  %28 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 3, i32 0
  %29 = tail call i32 @blake2b_compress_ref(%struct.blake2b_state* nonnull %0, i8* nonnull %28) #6
  %30 = load i32, i32* %16, align 1
  %31 = add i32 %30, -128
  store i32 %31, i32* %16, align 1
  %32 = icmp ult i32 %31, 129
  br i1 %32, label %34, label %33

33:                                               ; preds = %19
  tail call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i32 0, i32 0), i32 306, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.blake2b_final, i32 0, i32 0)) #7
  unreachable

34:                                               ; preds = %19
  %35 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 3, i32 128
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 %28, i8* align 1 %35, i32 %31, i1 false)
  %36 = load i32, i32* %16, align 1
  br label %37

37:                                               ; preds = %34, %15
  %38 = phi i32 [ %36, %34 ], [ %17, %15 ]
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 1, i32 0
  %41 = load i64, i64* %40, align 1
  %42 = add i64 %41, %39
  store i64 %42, i64* %40, align 1
  %43 = icmp ult i64 %42, %39
  %44 = zext i1 %43 to i64
  %45 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 1, i32 1
  %46 = load i64, i64* %45, align 1
  %47 = add i64 %46, %44
  store i64 %47, i64* %45, align 1
  %48 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 5
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %37
  %52 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 2, i32 1
  store i64 -1, i64* %52, align 1
  br label %53

53:                                               ; preds = %37, %51
  store i64 -1, i64* %12, align 1
  %54 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 3, i32 0
  %55 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 3, i32 %38
  %56 = sub i32 256, %38
  tail call void @llvm.memset.p0i8.i32(i8* align 1 %55, i8 0, i32 %56, i1 false)
  %57 = tail call i32 @blake2b_compress_ref(%struct.blake2b_state* nonnull %0, i8* nonnull %54) #6
  %58 = getelementptr inbounds %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 0
  %59 = load i64, i64* %58, align 1
  %60 = bitcast [64 x i8]* %4 to i64*
  store i64 %59, i64* %60, align 16
  %61 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 1
  %63 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 8
  %64 = bitcast i8* %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 2
  %66 = load i64, i64* %65, align 1
  %67 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 16
  %68 = bitcast i8* %67 to i64*
  store i64 %66, i64* %68, align 16
  %69 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 3
  %70 = load i64, i64* %69, align 1
  %71 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 24
  %72 = bitcast i8* %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 4
  %74 = load i64, i64* %73, align 1
  %75 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 32
  %76 = bitcast i8* %75 to i64*
  store i64 %74, i64* %76, align 16
  %77 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 5
  %78 = load i64, i64* %77, align 1
  %79 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 40
  %80 = bitcast i8* %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 6
  %82 = load i64, i64* %81, align 1
  %83 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 48
  %84 = bitcast i8* %83 to i64*
  store i64 %82, i64* %84, align 16
  %85 = getelementptr %struct.blake2b_state, %struct.blake2b_state* %0, i32 0, i32 0, i32 7
  %86 = load i64, i64* %85, align 1
  %87 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 56
  %88 = bitcast i8* %87 to i64*
  store i64 %86, i64* %88, align 8
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %1, i8* nonnull align 16 %5, i32 %8, i1 false)
  %89 = bitcast %struct.blake2b_state* %0 to i8*
  tail call void @sodium_memzero(i8* %89, i32 64) #6
  tail call void @sodium_memzero(i8* nonnull %54, i32 256) #6
  br label %90

90:                                               ; preds = %11, %53
  %91 = phi i32 [ 0, %53 ], [ -1, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5)
  ret i32 %91
}

; Function Attrs: noreturn
declare void @__assert_fail(i8* %0, i8* %1, i32 %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define hidden i32 @blake2b(i8* %0, i8* readonly %1, i8* readonly %2, i8 zeroext %3, i64 %4, i8 zeroext %5) local_unnamed_addr #0 {
  %7 = alloca [128 x i8], align 16
  %8 = alloca [1 x %struct.blake2b_state], align 64
  %9 = bitcast [1 x %struct.blake2b_state]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 357, i8* nonnull %9) #6
  %10 = icmp eq i8* %1, null
  %11 = icmp ne i64 %4, 0
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void @sodium_misuse() #7
  unreachable

14:                                               ; preds = %6
  %15 = icmp eq i8* %0, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @sodium_misuse() #7
  unreachable

17:                                               ; preds = %14
  %18 = add i8 %3, -1
  %19 = icmp ugt i8 %18, 63
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @sodium_misuse() #7
  unreachable

21:                                               ; preds = %17
  %22 = icmp ne i8* %2, null
  %23 = icmp eq i8 %5, 0
  %24 = or i1 %22, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @sodium_misuse() #7
  unreachable

26:                                               ; preds = %21
  %27 = icmp ugt i8 %5, 64
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @sodium_misuse() #7
  unreachable

29:                                               ; preds = %26
  %30 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0
  br i1 %23, label %59, label %31

31:                                               ; preds = %29
  %32 = icmp eq i8* %2, null
  %33 = add nsw i8 %5, -1
  %34 = icmp ugt i8 %33, 63
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  tail call void @sodium_misuse() #7
  unreachable

37:                                               ; preds = %31
  %38 = zext i8 %5 to i32
  %39 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 1
  %40 = bitcast [2 x i64]* %39 to i8*
  call void @llvm.memset.p0i8.i32(i8* nonnull align 64 dereferenceable(293) %40, i8 0, i32 293, i1 false) #6
  %41 = zext i8 %5 to i64
  %42 = shl nuw nsw i64 %41, 8
  %43 = zext i8 %3 to i64
  %44 = or i64 %42, %43
  %45 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 0
  %46 = xor i64 %44, 7640891576939301128
  store i64 %46, i64* %45, align 64
  %47 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 1
  store i64 -4942790177534073029, i64* %47, align 8
  %48 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 2
  store i64 4354685564936845355, i64* %48, align 16
  %49 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 3
  store i64 -6534734903238641935, i64* %49, align 8
  %50 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 4
  store i64 5840696475078001361, i64* %50, align 32
  %51 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 5
  store i64 -7276294671716946913, i64* %51, align 8
  %52 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 6
  store i64 2270897969802886507, i64* %52, align 16
  %53 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 7
  store i64 6620516959819538809, i64* %53, align 8
  %54 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %54) #6
  %55 = sub nuw nsw i32 128, %38
  %56 = getelementptr [128 x i8], [128 x i8]* %7, i32 0, i32 %38
  call void @llvm.memset.p0i8.i32(i8* align 1 %56, i8 0, i32 %55, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 16 %54, i8* nonnull align 1 %2, i32 %38, i1 false) #6
  %57 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 4
  %58 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 3, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 32 dereferenceable(128) %58, i8* nonnull align 16 dereferenceable(128) %54, i32 128, i1 false) #6
  store i32 128, i32* %57, align 32
  call void @sodium_memzero(i8* nonnull %54, i32 128) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %54) #6
  br label %72

59:                                               ; preds = %29
  %60 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 1
  %61 = bitcast [2 x i64]* %60 to i8*
  call void @llvm.memset.p0i8.i32(i8* nonnull align 64 dereferenceable(293) %61, i8 0, i32 293, i1 false) #6
  %62 = zext i8 %3 to i64
  %63 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 0
  %64 = xor i64 %62, 7640891576939301128
  store i64 %64, i64* %63, align 64
  %65 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 1
  store i64 -4942790177534073029, i64* %65, align 8
  %66 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 2
  store i64 4354685564936845355, i64* %66, align 16
  %67 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 3
  store i64 -6534734903238641935, i64* %67, align 8
  %68 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 4
  store i64 5840696475078001361, i64* %68, align 32
  %69 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 5
  store i64 -7276294671716946913, i64* %69, align 8
  %70 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 6
  store i64 2270897969802886507, i64* %70, align 16
  %71 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 0, i32 7
  store i64 6620516959819538809, i64* %71, align 8
  br label %72

72:                                               ; preds = %59, %37
  %73 = icmp eq i64 %4, 0
  br i1 %73, label %108, label %74

74:                                               ; preds = %72
  %75 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 4
  %76 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 3, i32 0
  %77 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 1, i32 1
  %79 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 3, i32 128
  %80 = load i32, i32* %75, align 32
  br label %81

81:                                               ; preds = %93, %74
  %82 = phi i32 [ %80, %74 ], [ %104, %93 ]
  %83 = phi i8* [ %1, %74 ], [ %106, %93 ]
  %84 = phi i64 [ %4, %74 ], [ %105, %93 ]
  %85 = sub i32 256, %82
  %86 = zext i32 %85 to i64
  %87 = icmp ugt i64 %84, %86
  %88 = getelementptr [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %8, i32 0, i32 0, i32 3, i32 %82
  br i1 %87, label %93, label %89

89:                                               ; preds = %81
  %90 = trunc i64 %84 to i32
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %88, i8* align 1 %83, i32 %90, i1 false) #6
  %91 = load i32, i32* %75, align 32
  %92 = add i32 %91, %90
  store i32 %92, i32* %75, align 32
  br label %108

93:                                               ; preds = %81
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %88, i8* align 1 %83, i32 %85, i1 false) #6
  %94 = load i32, i32* %75, align 32
  %95 = add i32 %94, %85
  store i32 %95, i32* %75, align 32
  %96 = load i64, i64* %77, align 64
  %97 = add i64 %96, 128
  store i64 %97, i64* %77, align 64
  %98 = icmp ugt i64 %96, -129
  %99 = zext i1 %98 to i64
  %100 = load i64, i64* %78, align 8
  %101 = add i64 %100, %99
  store i64 %101, i64* %78, align 8
  %102 = call i32 @blake2b_compress_ref(%struct.blake2b_state* nonnull %30, i8* nonnull %76) #6
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 32 dereferenceable(128) %76, i8* nonnull align 32 dereferenceable(128) %79, i32 128, i1 false) #6
  %103 = load i32, i32* %75, align 32
  %104 = add i32 %103, -128
  store i32 %104, i32* %75, align 32
  %105 = sub i64 %84, %86
  %106 = getelementptr i8, i8* %83, i32 %85
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %108, label %81

108:                                              ; preds = %93, %72, %89
  %109 = call i32 @blake2b_final(%struct.blake2b_state* nonnull %30, i8* nonnull %0, i8 zeroext %3)
  call void @llvm.lifetime.end.p0i8(i64 357, i8* nonnull %9) #6
  ret i32 0
}

; Function Attrs: nounwind
define hidden i32 @blake2b_salt_personal(i8* %0, i8* readonly %1, i8* readonly %2, i8 zeroext %3, i64 %4, i8 zeroext %5, i8* readonly %6, i8* readonly %7) local_unnamed_addr #0 {
  %9 = alloca [128 x i8], align 16
  %10 = alloca [1 x %struct.blake2b_state], align 64
  %11 = bitcast [1 x %struct.blake2b_state]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 357, i8* nonnull %11) #6
  %12 = icmp eq i8* %1, null
  %13 = icmp ne i64 %4, 0
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %8
  tail call void @sodium_misuse() #7
  unreachable

16:                                               ; preds = %8
  %17 = icmp eq i8* %0, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  tail call void @sodium_misuse() #7
  unreachable

19:                                               ; preds = %16
  %20 = add i8 %3, -1
  %21 = icmp ugt i8 %20, 63
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @sodium_misuse() #7
  unreachable

23:                                               ; preds = %19
  %24 = icmp ne i8* %2, null
  %25 = icmp eq i8 %5, 0
  %26 = or i1 %24, %25
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @sodium_misuse() #7
  unreachable

28:                                               ; preds = %23
  %29 = icmp ugt i8 %5, 64
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  tail call void @sodium_misuse() #7
  unreachable

31:                                               ; preds = %28
  %32 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0
  br i1 %25, label %81, label %33

33:                                               ; preds = %31
  br i1 %24, label %35, label %34

34:                                               ; preds = %33
  tail call void @sodium_misuse() #7
  unreachable

35:                                               ; preds = %33
  %36 = zext i8 %5 to i32
  %37 = icmp eq i8* %6, null
  br i1 %37, label %46, label %38

38:                                               ; preds = %35
  %39 = bitcast i8* %6 to i64*
  %40 = load i64, i64* %39, align 1
  %41 = getelementptr inbounds i8, i8* %6, i32 8
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 1
  %44 = xor i64 %40, 5840696475078001361
  %45 = xor i64 %43, -7276294671716946913
  br label %46

46:                                               ; preds = %38, %35
  %47 = phi i64 [ %45, %38 ], [ -7276294671716946913, %35 ]
  %48 = phi i64 [ %44, %38 ], [ 5840696475078001361, %35 ]
  %49 = icmp eq i8* %7, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = bitcast i8* %7 to i64*
  %52 = load i64, i64* %51, align 1
  %53 = getelementptr inbounds i8, i8* %7, i32 8
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = xor i64 %52, 2270897969802886507
  %57 = xor i64 %55, 6620516959819538809
  br label %58

58:                                               ; preds = %46, %50
  %59 = phi i64 [ %56, %50 ], [ 2270897969802886507, %46 ]
  %60 = phi i64 [ %57, %50 ], [ 6620516959819538809, %46 ]
  %61 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 1
  %62 = bitcast [2 x i64]* %61 to i8*
  call void @llvm.memset.p0i8.i32(i8* nonnull align 64 dereferenceable(293) %62, i8 0, i32 293, i1 false) #6
  %63 = zext i8 %5 to i64
  %64 = shl nuw nsw i64 %63, 8
  %65 = zext i8 %3 to i64
  %66 = or i64 %64, %65
  %67 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 0
  %68 = xor i64 %66, 7640891576939301128
  store i64 %68, i64* %67, align 64
  %69 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 1
  store i64 -4942790177534073029, i64* %69, align 8
  %70 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 2
  store i64 4354685564936845355, i64* %70, align 16
  %71 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 3
  store i64 -6534734903238641935, i64* %71, align 8
  %72 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 4
  store i64 %48, i64* %72, align 32
  %73 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 5
  store i64 %47, i64* %73, align 8
  %74 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 6
  store i64 %59, i64* %74, align 16
  %75 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 7
  store i64 %60, i64* %75, align 8
  %76 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %76) #6
  %77 = sub nuw nsw i32 128, %36
  %78 = getelementptr [128 x i8], [128 x i8]* %9, i32 0, i32 %36
  call void @llvm.memset.p0i8.i32(i8* align 1 %78, i8 0, i32 %77, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 16 %76, i8* nonnull align 1 %2, i32 %36, i1 false) #6
  %79 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 4
  %80 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 3, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 32 dereferenceable(128) %80, i8* nonnull align 16 dereferenceable(128) %76, i32 128, i1 false) #6
  store i32 128, i32* %79, align 32
  call void @sodium_memzero(i8* nonnull %76, i32 128) #6
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %76) #6
  br label %118

81:                                               ; preds = %31
  %82 = icmp eq i8* %6, null
  br i1 %82, label %91, label %83

83:                                               ; preds = %81
  %84 = bitcast i8* %6 to i64*
  %85 = load i64, i64* %84, align 1
  %86 = getelementptr inbounds i8, i8* %6, i32 8
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 1
  %89 = xor i64 %85, 5840696475078001361
  %90 = xor i64 %88, -7276294671716946913
  br label %91

91:                                               ; preds = %83, %81
  %92 = phi i64 [ %90, %83 ], [ -7276294671716946913, %81 ]
  %93 = phi i64 [ %89, %83 ], [ 5840696475078001361, %81 ]
  %94 = icmp eq i8* %7, null
  br i1 %94, label %103, label %95

95:                                               ; preds = %91
  %96 = bitcast i8* %7 to i64*
  %97 = load i64, i64* %96, align 1
  %98 = getelementptr inbounds i8, i8* %7, i32 8
  %99 = bitcast i8* %98 to i64*
  %100 = load i64, i64* %99, align 1
  %101 = xor i64 %97, 2270897969802886507
  %102 = xor i64 %100, 6620516959819538809
  br label %103

103:                                              ; preds = %91, %95
  %104 = phi i64 [ %101, %95 ], [ 2270897969802886507, %91 ]
  %105 = phi i64 [ %102, %95 ], [ 6620516959819538809, %91 ]
  %106 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 1
  %107 = bitcast [2 x i64]* %106 to i8*
  call void @llvm.memset.p0i8.i32(i8* nonnull align 64 dereferenceable(293) %107, i8 0, i32 293, i1 false) #6
  %108 = zext i8 %3 to i64
  %109 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 0
  %110 = xor i64 %108, 7640891576939301128
  store i64 %110, i64* %109, align 64
  %111 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 1
  store i64 -4942790177534073029, i64* %111, align 8
  %112 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 2
  store i64 4354685564936845355, i64* %112, align 16
  %113 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 3
  store i64 -6534734903238641935, i64* %113, align 8
  %114 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 4
  store i64 %93, i64* %114, align 32
  %115 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 5
  store i64 %92, i64* %115, align 8
  %116 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 6
  store i64 %104, i64* %116, align 16
  %117 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 0, i32 7
  store i64 %105, i64* %117, align 8
  br label %118

118:                                              ; preds = %103, %58
  %119 = icmp eq i64 %4, 0
  br i1 %119, label %154, label %120

120:                                              ; preds = %118
  %121 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 4
  %122 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 3, i32 0
  %123 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 1, i32 0
  %124 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 1, i32 1
  %125 = getelementptr inbounds [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 3, i32 128
  %126 = load i32, i32* %121, align 32
  br label %127

127:                                              ; preds = %139, %120
  %128 = phi i32 [ %126, %120 ], [ %150, %139 ]
  %129 = phi i8* [ %1, %120 ], [ %152, %139 ]
  %130 = phi i64 [ %4, %120 ], [ %151, %139 ]
  %131 = sub i32 256, %128
  %132 = zext i32 %131 to i64
  %133 = icmp ugt i64 %130, %132
  %134 = getelementptr [1 x %struct.blake2b_state], [1 x %struct.blake2b_state]* %10, i32 0, i32 0, i32 3, i32 %128
  br i1 %133, label %139, label %135

135:                                              ; preds = %127
  %136 = trunc i64 %130 to i32
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %134, i8* align 1 %129, i32 %136, i1 false) #6
  %137 = load i32, i32* %121, align 32
  %138 = add i32 %137, %136
  store i32 %138, i32* %121, align 32
  br label %154

139:                                              ; preds = %127
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %134, i8* align 1 %129, i32 %131, i1 false) #6
  %140 = load i32, i32* %121, align 32
  %141 = add i32 %140, %131
  store i32 %141, i32* %121, align 32
  %142 = load i64, i64* %123, align 64
  %143 = add i64 %142, 128
  store i64 %143, i64* %123, align 64
  %144 = icmp ugt i64 %142, -129
  %145 = zext i1 %144 to i64
  %146 = load i64, i64* %124, align 8
  %147 = add i64 %146, %145
  store i64 %147, i64* %124, align 8
  %148 = call i32 @blake2b_compress_ref(%struct.blake2b_state* nonnull %32, i8* nonnull %122) #6
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 32 dereferenceable(128) %122, i8* nonnull align 32 dereferenceable(128) %125, i32 128, i1 false) #6
  %149 = load i32, i32* %121, align 32
  %150 = add i32 %149, -128
  store i32 %150, i32* %121, align 32
  %151 = sub i64 %130, %132
  %152 = getelementptr i8, i8* %129, i32 %131
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %154, label %127

154:                                              ; preds = %139, %118, %135
  %155 = call i32 @blake2b_final(%struct.blake2b_state* nonnull %32, i8* nonnull %0, i8 zeroext %3)
  call void @llvm.lifetime.end.p0i8(i64 357, i8* nonnull %11) #6
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone
define hidden i32 @blake2b_pick_best_implementation() local_unnamed_addr #5 {
  ret i32 0
}

declare i32 @blake2b_compress_ref(%struct.blake2b_state* %0, i8* %1) local_unnamed_addr #4

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn writeonly }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %8 = load i64, i64* %7, align 1
; Looking for a replacement for:
%0:i64 = var
infer %0

; *****
; For LLVM instruction:
;  %10 = xor i64 %8, 7640891576956012808
; Looking for a replacement for:
%0:i64 = var
%1:i64 = xor 7640891576956012808:i64, %0
infer %1

; *****
; For LLVM instruction:
;  %13 = load i64, i64* %12, align 1
; Looking for a replacement for:
%0:i64 = var
infer %0

; *****
; For LLVM instruction:
;  %15 = xor i64 %13, -4942790177534073029
; Looking for a replacement for:
%0:i64 = var
%1:i64 = xor 13503953896175478587:i64, %0
infer %1

; *****
; For LLVM instruction:
;  %18 = load i64, i64* %17, align 1
; Looking for a replacement for:
%0:i64 = var
infer %0

; *****
; For LLVM instruction:
;  %20 = xor i64 %18, 4354685564936845355
; Looking for a replacement for:
%0:i64 = var
%1:i64 = xor 4354685564936845355:i64, %0
infer %1

; *****
; For LLVM instruction:
;  %23 = load i64, i64* %22, align 1
; Looking for a replacement for:
%0:i64 = var
infer %0

; *****
; For LLVM instruction:
;  %25 = xor i64 %23, -6534734903238641935
; Looking for a replacement for:
%0:i64 = var
%1:i64 = xor 11912009170470909681:i64, %0
infer %1

; *****
; For LLVM instruction:
;  %28 = load i64, i64* %27, align 1
; Looking for a replacement for:
%0:i64 = var
infer %0

; *****
; For LLVM instruction:
;  %30 = xor i64 %28, 5840696475078001361
; Looking for a replacement for:
%0:i64 = var
%1:i64 = xor 5840696475078001361:i64, %0
infer %1

; *****
; For LLVM instruction:
;  %33 = load i64, i64* %32, align 1
; Looking for a replacement for:
%0:i64 = var
infer %0

; *****
; For LLVM instruction:
;  %35 = xor i64 %33, -7276294671716946913
; Looking for a replacement for:
%0:i64 = var
%1:i64 = xor 11170449401992604703:i64, %0
infer %1

; *****
; For LLVM instruction:
;  %38 = load i64, i64* %37, align 1
; Looking for a replacement for:
%0:i64 = var
infer %0

; *****
; For LLVM instruction:
;  %40 = xor i64 %38, 2270897969802886507
; Looking for a replacement for:
%0:i64 = var
%1:i64 = xor 2270897969802886507:i64, %0
infer %1

; *****
; For LLVM instruction:
;  %43 = load i64, i64* %42, align 1
; Looking for a replacement for:
%0:i64 = var
infer %0

; *****
; For LLVM instruction:
;  %45 = xor i64 %43, 6620516959819538809
; Looking for a replacement for:
%0:i64 = var
%1:i64 = xor 6620516959819538809:i64, %0
infer %1
got 1 candidates from LHS

-------------------------------------------------
%0:i64 = var
infer %0


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = xor 7640891576956012808:i64, %0
infer %1


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 7640891576956012808
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1582480459898763000
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = xor 13503953896175478587:i64, %0
infer %1


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -4942790177534073029
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 4280581859320702779
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = xor 4354685564936845355:i64, %0
infer %1


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 4354685564936845355
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -4868686471917930453
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = xor 11912009170470909681:i64, %0
infer %1


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -6534734903238641935
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 2688637133616133873
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = xor 5840696475078001361:i64, %0
infer %1


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 5840696475078001361
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -3382675561776774447
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = xor 11170449401992604703:i64, %0
infer %1


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -7276294671716946913
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 1947077365137828895
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = xor 2270897969802886507:i64, %0
infer %1


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 2270897969802886507
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -6952474067051889301
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = xor 6620516959819538809:i64, %0
infer %1


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 6620516959819538809
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -2602855077035236999
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for blake2b_init_param()

