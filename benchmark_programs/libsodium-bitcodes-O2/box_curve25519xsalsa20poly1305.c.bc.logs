
Entering the Souper pass's runOnModule()


; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_seed_keypair()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
; Looking for a replacement for:
%0:i32 = var
infer %0
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_seed_keypair()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_keypair()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
; Looking for a replacement for:
%0:i32 = var
infer %0
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_keypair()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_beforenm()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %7 = icmp eq i32 %6, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
; Looking for a replacement for:
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32
infer %2
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_beforenm()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_afternm()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
; Looking for a replacement for:
%0:i32 = var
infer %0
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_afternm()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_open_afternm()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
; Looking for a replacement for:
%0:i32 = var
infer %0
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_open_afternm()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %12 = icmp eq i32 %11, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %16 = icmp eq i32 %15, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
; Looking for a replacement for:
%0 = block 3
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32, 4294967295:i32
infer %2
got 2 candidates from LHS

-------------------------------------------------
%0 = block 3
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32, 4294967295:i32
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_open()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %12 = icmp eq i32 %11, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %16 = icmp eq i32 %15, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
; Looking for a replacement for:
%0 = block 3
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32, 4294967295:i32
infer %2
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_open()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_seedbytes()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_seedbytes()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_publickeybytes()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_publickeybytes()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_secretkeybytes()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_secretkeybytes()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_beforenmbytes()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_beforenmbytes()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_noncebytes()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_noncebytes()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_zerobytes()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_zerobytes()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_boxzerobytes()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_boxzerobytes()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_macbytes()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_macbytes()

; entering Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_messagebytes_max()

; ModuleID = './box_curve25519xsalsa20poly1305.c.bc'
source_filename = "crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@crypto_box_curve25519xsalsa20poly1305_beforenm.zero = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_seed_keypair(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #4
  %6 = call i32 @crypto_hash_sha512(i8* nonnull %5, i8* nonnull %2, i64 32) #4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %1, i8* nonnull align 16 dereferenceable(32) %5, i32 32, i1 false)
  call void @sodium_memzero(i8* nonnull %5, i32 64) #4
  %7 = call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #4
  ret i32 %7
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_scalarmult_curve25519_base(i8* %0, i8* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_keypair(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %1, i32 32) #4
  %3 = tail call i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) #4
  ret i32 %3
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenm(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  %6 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %5, i8* nonnull %2, i8* nonnull %1) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = call i32 @crypto_core_hsalsa20(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %5, i8* null) #4
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i32 %11
}

declare i32 @crypto_scalarmult_curve25519(i8* %0, i8* %1, i8* %2) local_unnamed_addr #2

declare i32 @crypto_core_hsalsa20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %6
}

declare i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* %1, i64 %2, i8* %3, i8* %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: nounwind
define i32 @crypto_box_curve25519xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_scalarmult_curve25519(i8* nonnull %10, i8* nonnull %5, i8* nonnull %4) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

14:                                               ; preds = %6
  %15 = call i32 @crypto_core_hsalsa20(i8* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @crypto_box_curve25519xsalsa20poly1305_beforenm.zero, i32 0, i32 0), i8* nonnull %10, i8* null) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @crypto_secretbox_xsalsa20poly1305_open(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %19

19:                                               ; preds = %13, %14, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %14 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_seedbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_publickeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_secretkeybytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_beforenmbytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_noncebytes() local_unnamed_addr #3 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_zerobytes() local_unnamed_addr #3 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_boxzerobytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_macbytes() local_unnamed_addr #3 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_box_curve25519xsalsa20poly1305_messagebytes_max() local_unnamed_addr #3 {
  ret i32 -17
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_box_curve25519xsalsa20poly1305_messagebytes_max()
Total of 0 replacements done on this module
Total of 0 replacements candidates on this module
