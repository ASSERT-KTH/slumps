; entering Souper's runOnFunction() for crypto_stream_xchacha20_xor_ic()

; ModuleID = './stream_xchacha20.c.bc'
source_filename = "crypto_stream/xchacha20/stream_xchacha20.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_stream_xchacha20_keybytes() local_unnamed_addr #0 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_stream_xchacha20_noncebytes() local_unnamed_addr #0 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_stream_xchacha20_messagebytes_max() local_unnamed_addr #0 {
  ret i32 -1
}

; Function Attrs: nounwind
define i32 @crypto_stream_xchacha20(i8* nonnull %0, i64 %1, i8* nonnull %2, i8* nonnull %3) local_unnamed_addr #1 {
  %5 = alloca [32 x i8], align 16
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #4
  %7 = call i32 @crypto_core_hchacha20(i8* nonnull %6, i8* nonnull %2, i8* nonnull %3, i8* null) #4
  %8 = getelementptr i8, i8* %2, i32 16
  %9 = call i32 @crypto_stream_chacha20(i8* nonnull %0, i64 %1, i8* %8, i8* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #4
  ret i32 %9
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #2

declare i32 @crypto_core_hchacha20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20(i8* %0, i64 %1, i8* %2, i8* %3) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #2

; Function Attrs: nounwind
define i32 @crypto_stream_xchacha20_xor_ic(i8* nonnull %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i64 %4, i8* nonnull %5) local_unnamed_addr #1 {
  %7 = alloca [32 x i8], align 16
  %8 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #4
  %9 = call i32 @crypto_core_hchacha20(i8* nonnull %8, i8* nonnull %3, i8* nonnull %5, i8* null) #4
  %10 = getelementptr i8, i8* %3, i32 16
  %11 = call i32 @crypto_stream_chacha20_xor_ic(i8* nonnull %0, i8* nonnull %1, i64 %2, i8* %10, i64 %4, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #4
  ret i32 %11
}

declare i32 @crypto_stream_chacha20_xor_ic(i8* %0, i8* %1, i64 %2, i8* %3, i64 %4, i8* %5) local_unnamed_addr #3

; Function Attrs: nounwind
define i32 @crypto_stream_xchacha20_xor(i8* nonnull %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #1 {
  %6 = alloca [32 x i8], align 16
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #4
  %8 = call i32 @crypto_core_hchacha20(i8* nonnull %7, i8* nonnull %3, i8* nonnull %4, i8* null) #4
  %9 = getelementptr i8, i8* %3, i32 16
  %10 = call i32 @crypto_stream_chacha20_xor_ic(i8* nonnull %0, i8* nonnull %1, i64 %2, i8* %9, i64 0, i8* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #4
  ret i32 %10
}

; Function Attrs: nounwind
define void @crypto_stream_xchacha20_keygen(i8* nonnull %0) local_unnamed_addr #1 {
  tail call void @randombytes_buf(i8* nonnull %0, i32 32) #4
  ret void
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %11 = call i32 @crypto_stream_chacha20_xor_ic(i8* nonnull %0, i8* nonnull %1, i64 %2, i8* %10, i64 %4, i8* nonnull %8) #4
; Looking for a replacement for:
%0:i32 = var
infer %0
#########################################################
; exiting Souper's runOnFunction() for crypto_stream_xchacha20_xor_ic()

