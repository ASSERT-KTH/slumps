; entering Souper's runOnFunction() for argon2id_verify()

; ModuleID = './argon2.c.bc'
source_filename = "crypto_pwhash/argon2/argon2.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.Argon2_Context = type { i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.Argon2_instance_t = type { %struct.block_region_*, i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.block_region_ = type { i8*, %struct.block_*, i32 }
%struct.block_ = type { [128 x i64] }

; Function Attrs: nounwind
define hidden i32 @argon2_ctx(%struct.Argon2_Context* %0, i32 %1) local_unnamed_addr #0 {
  %3 = alloca %struct.Argon2_instance_t, align 4
  %4 = tail call i32 @argon2_validate_inputs(%struct.Argon2_Context* %0) #7
  %5 = bitcast %struct.Argon2_instance_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %5) #7
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %46

7:                                                ; preds = %2
  %8 = add i32 %1, -1
  %9 = icmp ugt i32 %8, 1
  br i1 %9, label %46, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %0, i32 0, i32 11
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %0, i32 0, i32 12
  %14 = load i32, i32* %13, align 4
  %15 = shl i32 %14, 3
  %16 = icmp ult i32 %12, %15
  %17 = select i1 %16, i32 %15, i32 %12
  %18 = shl i32 %14, 2
  %19 = udiv i32 %17, %18
  %20 = mul i32 %19, %18
  %21 = getelementptr inbounds %struct.Argon2_instance_t, %struct.Argon2_instance_t* %3, i32 0, i32 0
  store %struct.block_region_* null, %struct.block_region_** %21, align 4
  %22 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %0, i32 0, i32 10
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.Argon2_instance_t, %struct.Argon2_instance_t* %3, i32 0, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %struct.Argon2_instance_t, %struct.Argon2_instance_t* %3, i32 0, i32 3
  store i32 -1, i32* %25, align 4
  %26 = getelementptr inbounds %struct.Argon2_instance_t, %struct.Argon2_instance_t* %3, i32 0, i32 4
  store i32 %20, i32* %26, align 4
  %27 = getelementptr inbounds %struct.Argon2_instance_t, %struct.Argon2_instance_t* %3, i32 0, i32 5
  store i32 %19, i32* %27, align 4
  %28 = shl i32 %19, 2
  %29 = getelementptr inbounds %struct.Argon2_instance_t, %struct.Argon2_instance_t* %3, i32 0, i32 6
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %struct.Argon2_instance_t, %struct.Argon2_instance_t* %3, i32 0, i32 7
  store i32 %14, i32* %30, align 4
  %31 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %0, i32 0, i32 13
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.Argon2_instance_t, %struct.Argon2_instance_t* %3, i32 0, i32 8
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %struct.Argon2_instance_t, %struct.Argon2_instance_t* %3, i32 0, i32 9
  store i32 %1, i32* %34, align 4
  %35 = call i32 @argon2_initialize(%struct.Argon2_instance_t* nonnull %3, %struct.Argon2_Context* %0) #7
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %46

37:                                               ; preds = %10
  %38 = load i32, i32* %24, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %37, %40
  %41 = phi i32 [ %42, %40 ], [ 0, %37 ]
  call void @argon2_fill_memory_blocks(%struct.Argon2_instance_t* nonnull %3, i32 %41) #7
  %42 = add nuw i32 %41, 1
  %43 = load i32, i32* %24, align 4
  %44 = icmp ult i32 %42, %43
  br i1 %44, label %40, label %45

45:                                               ; preds = %40, %37
  call void @argon2_finalize(%struct.Argon2_Context* %0, %struct.Argon2_instance_t* nonnull %3) #7
  br label %46

46:                                               ; preds = %10, %7, %2, %45
  %47 = phi i32 [ 0, %45 ], [ %4, %2 ], [ -26, %7 ], [ %35, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %5) #7
  ret i32 %47
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @argon2_validate_inputs(%struct.Argon2_Context* %0) local_unnamed_addr #2

declare i32 @argon2_initialize(%struct.Argon2_instance_t* %0, %struct.Argon2_Context* %1) local_unnamed_addr #2

declare void @argon2_fill_memory_blocks(%struct.Argon2_instance_t* %0, i32 %1) local_unnamed_addr #2

declare void @argon2_finalize(%struct.Argon2_Context* %0, %struct.Argon2_instance_t* %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define hidden i32 @argon2_hash(i32 %0, i32 %1, i32 %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* %7, i32 %8, i8* %9, i32 %10, i32 %11) local_unnamed_addr #0 {
  %13 = alloca %struct.Argon2_Context, align 4
  %14 = bitcast %struct.Argon2_Context* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %14) #7
  %15 = tail call noalias i8* @malloc(i32 %8)
  %16 = icmp eq i8* %15, null
  br i1 %16, label %48, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %13, i32 0, i32 0
  store i8* %15, i8** %18, align 4
  %19 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %13, i32 0, i32 1
  store i32 %8, i32* %19, align 4
  %20 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %13, i32 0, i32 2
  store i8* %3, i8** %20, align 4
  %21 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %13, i32 0, i32 3
  store i32 %4, i32* %21, align 4
  %22 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %13, i32 0, i32 4
  store i8* %5, i8** %22, align 4
  %23 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %13, i32 0, i32 5
  store i32 %6, i32* %23, align 4
  %24 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %13, i32 0, i32 6
  %25 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %13, i32 0, i32 10
  %26 = bitcast i8** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %26, i8 0, i64 16, i1 false)
  store i32 %0, i32* %25, align 4
  %27 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %13, i32 0, i32 11
  store i32 %1, i32* %27, align 4
  %28 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %13, i32 0, i32 12
  store i32 %2, i32* %28, align 4
  %29 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %13, i32 0, i32 13
  store i32 %2, i32* %29, align 4
  %30 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %13, i32 0, i32 14
  store i32 0, i32* %30, align 4
  %31 = call i32 @argon2_ctx(%struct.Argon2_Context* nonnull %13, i32 %11)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %17
  call void @sodium_memzero(i8* nonnull %15, i32 %8) #7
  br label %46

34:                                               ; preds = %17
  %35 = icmp eq i8* %7, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %34
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 %7, i8* nonnull align 1 %15, i32 %8, i1 false)
  br label %37

37:                                               ; preds = %34, %36
  %38 = icmp ne i8* %9, null
  %39 = icmp ne i32 %10, 0
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = call i32 @argon2_encode_string(i8* nonnull %9, i32 %10, %struct.Argon2_Context* nonnull %13, i32 %11) #7
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  call void @sodium_memzero(i8* nonnull %15, i32 %8) #7
  call void @sodium_memzero(i8* nonnull %9, i32 %10) #7
  br label %46

45:                                               ; preds = %41, %37
  call void @sodium_memzero(i8* nonnull %15, i32 %8) #7
  br label %46

46:                                               ; preds = %33, %44, %45
  %47 = phi i32 [ 0, %45 ], [ -31, %44 ], [ %31, %33 ]
  call void @free(i8* nonnull %15)
  br label %48

48:                                               ; preds = %46, %12
  %49 = phi i32 [ -22, %12 ], [ %47, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %14) #7
  ret i32 %49
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i32 %0) local_unnamed_addr #3

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture %0) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare i32 @argon2_encode_string(i8* %0, i32 %1, %struct.Argon2_Context* %2, i32 %3) local_unnamed_addr #2

; Function Attrs: nounwind
define hidden i32 @argon2i_hash_encoded(i32 %0, i32 %1, i32 %2, i8* %3, i32 %4, i8* %5, i32 %6, i32 %7, i8* %8, i32 %9) local_unnamed_addr #0 {
  %11 = tail call i32 @argon2_hash(i32 %0, i32 %1, i32 %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* null, i32 %7, i8* %8, i32 %9, i32 1)
  ret i32 %11
}

; Function Attrs: nounwind
define hidden i32 @argon2i_hash_raw(i32 %0, i32 %1, i32 %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* %7, i32 %8) local_unnamed_addr #0 {
  %10 = tail call i32 @argon2_hash(i32 %0, i32 %1, i32 %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* %7, i32 %8, i8* null, i32 0, i32 1)
  ret i32 %10
}

; Function Attrs: nounwind
define hidden i32 @argon2id_hash_encoded(i32 %0, i32 %1, i32 %2, i8* %3, i32 %4, i8* %5, i32 %6, i32 %7, i8* %8, i32 %9) local_unnamed_addr #0 {
  %11 = tail call i32 @argon2_hash(i32 %0, i32 %1, i32 %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* null, i32 %7, i8* %8, i32 %9, i32 2)
  ret i32 %11
}

; Function Attrs: nounwind
define hidden i32 @argon2id_hash_raw(i32 %0, i32 %1, i32 %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* %7, i32 %8) local_unnamed_addr #0 {
  %10 = tail call i32 @argon2_hash(i32 %0, i32 %1, i32 %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* %7, i32 %8, i8* null, i32 0, i32 2)
  ret i32 %10
}

; Function Attrs: nounwind
define hidden i32 @argon2_verify(i8* %0, i8* %1, i32 %2, i32 %3) local_unnamed_addr #0 {
  %5 = alloca %struct.Argon2_Context, align 4
  %6 = bitcast %struct.Argon2_Context* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %6) #7
  %7 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 2
  %8 = bitcast i8** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(60) %8, i8 0, i64 52, i1 false)
  %9 = tail call i32 @strlen(i8* nonnull dereferenceable(1) %0) #8
  %10 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 9
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 5
  store i32 %9, i32* %11, align 4
  %12 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 1
  store i32 %9, i32* %12, align 4
  %13 = tail call noalias i8* @malloc(i32 %9)
  %14 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 8
  store i8* %13, i8** %14, align 4
  %15 = tail call noalias i8* @malloc(i32 %9)
  %16 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 4
  store i8* %15, i8** %16, align 4
  %17 = tail call noalias i8* @malloc(i32 %9)
  %18 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 0
  store i8* %17, i8** %18, align 4
  %19 = icmp eq i8* %17, null
  %20 = icmp eq i8* %15, null
  %21 = or i1 %20, %19
  %22 = icmp eq i8* %13, null
  %23 = or i1 %22, %21
  br i1 %23, label %24, label %25

24:                                               ; preds = %4
  tail call void @free(i8* %13)
  tail call void @free(i8* %15)
  tail call void @free(i8* %17)
  br label %59

25:                                               ; preds = %4
  %26 = tail call noalias i8* @malloc(i32 %9)
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @free(i8* nonnull %13)
  tail call void @free(i8* nonnull %15)
  tail call void @free(i8* nonnull %17)
  br label %59

29:                                               ; preds = %25
  %30 = call i32 @argon2_decode_string(%struct.Argon2_Context* nonnull %5, i8* %0, i32 %3) #7
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = load i8*, i8** %14, align 4
  call void @free(i8* %33)
  %34 = load i8*, i8** %16, align 4
  call void @free(i8* %34)
  %35 = load i8*, i8** %18, align 4
  call void @free(i8* %35)
  call void @free(i8* nonnull %26)
  br label %59

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 10
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 11
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 13
  %42 = load i32, i32* %41, align 4
  %43 = load i8*, i8** %16, align 4
  %44 = load i32, i32* %11, align 4
  %45 = load i32, i32* %12, align 4
  %46 = call i32 @argon2_hash(i32 %38, i32 %40, i32 %42, i8* %1, i32 %2, i8* %43, i32 %44, i8* nonnull %26, i32 %45, i8* null, i32 0, i32 %3)
  %47 = load i8*, i8** %14, align 4
  call void @free(i8* %47)
  %48 = load i8*, i8** %16, align 4
  call void @free(i8* %48)
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %36
  %51 = load i8*, i8** %18, align 4
  %52 = load i32, i32* %12, align 4
  %53 = call i32 @sodium_memcmp(i8* nonnull %26, i8* %51, i32 %52) #7
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %50, %36
  br label %56

56:                                               ; preds = %50, %55
  %57 = phi i32 [ -35, %55 ], [ 0, %50 ]
  call void @free(i8* nonnull %26)
  %58 = load i8*, i8** %18, align 4
  call void @free(i8* %58)
  br label %59

59:                                               ; preds = %56, %32, %28, %24
  %60 = phi i32 [ %30, %32 ], [ %57, %56 ], [ -22, %28 ], [ -22, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %6) #7
  ret i32 %60
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i32 @strlen(i8* nocapture %0) local_unnamed_addr #5

declare i32 @argon2_decode_string(%struct.Argon2_Context* %0, i8* %1, i32 %2) local_unnamed_addr #2

declare i32 @sodium_memcmp(i8* %0, i8* %1, i32 %2) local_unnamed_addr #2

; Function Attrs: nounwind
define hidden i32 @argon2i_verify(i8* %0, i8* %1, i32 %2) local_unnamed_addr #0 {
  %4 = tail call i32 @argon2_verify(i8* %0, i8* %1, i32 %2, i32 1)
  ret i32 %4
}

; Function Attrs: nounwind
define hidden i32 @argon2id_verify(i8* %0, i8* %1, i32 %2) local_unnamed_addr #0 {
  %4 = tail call i32 @argon2_verify(i8* %0, i8* %1, i32 %2, i32 2)
  ret i32 %4
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly %0, i8 %1, i64 %2, i1 immarg %3) #6

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn writeonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %4 = tail call i32 @argon2_verify(i8* %0, i8* %1, i32 %2, i32 2)
; Looking for a replacement for:
%0:i32 = var
infer %0
#########################################################
; exiting Souper's runOnFunction() for argon2id_verify()
Total of 0 replacements done on this module
Total of 0 replacements candidates on this module
