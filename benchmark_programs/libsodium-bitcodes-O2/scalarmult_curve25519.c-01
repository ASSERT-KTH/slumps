; entering Souper's runOnFunction() for crypto_scalarmult_curve25519()

; ModuleID = './scalarmult_curve25519.c.bc'
source_filename = "crypto_scalarmult/curve25519/scalarmult_curve25519.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_scalarmult_curve25519_implementation = type { i32 (i8*, i8*, i8*)*, i32 (i8*, i8*)* }

@crypto_scalarmult_curve25519_ref10_implementation = external local_unnamed_addr global %struct.crypto_scalarmult_curve25519_implementation, align 4

; Function Attrs: nounwind
define i32 @crypto_scalarmult_curve25519(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) local_unnamed_addr #0 {
  %4 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store volatile i8 0, i8* %4, align 1
  %5 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** getelementptr inbounds (%struct.crypto_scalarmult_curve25519_implementation, %struct.crypto_scalarmult_curve25519_implementation* @crypto_scalarmult_curve25519_ref10_implementation, i32 0, i32 0), align 4
  %6 = tail call i32 %5(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) #3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %23

8:                                                ; preds = %3, %8
  %9 = phi i32 [ %14, %8 ], [ 0, %3 ]
  %10 = getelementptr i8, i8* %0, i32 %9
  %11 = load i8, i8* %10, align 1
  %12 = load volatile i8, i8* %4, align 1
  %13 = or i8 %12, %11
  store volatile i8 %13, i8* %4, align 1
  %14 = add nuw nsw i32 %9, 1
  %15 = icmp eq i32 %14, 32
  br i1 %15, label %16, label %8

16:                                               ; preds = %8
  %17 = load volatile i8, i8* %4, align 1
  %18 = zext i8 %17 to i32
  %19 = add nuw nsw i32 %18, 511
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, 1
  %22 = sub nsw i32 0, %21
  br label %23

23:                                               ; preds = %3, %16
  %24 = phi i32 [ %22, %16 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4)
  ret i32 %24
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_scalarmult_curve25519_base(i8* nonnull %0, i8* nonnull %1) local_unnamed_addr #0 {
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** getelementptr inbounds (%struct.crypto_scalarmult_curve25519_implementation, %struct.crypto_scalarmult_curve25519_implementation* @crypto_scalarmult_curve25519_ref10_implementation, i32 0, i32 1), align 4
  %4 = tail call i32 %3(i8* nonnull %0, i8* nonnull %1) #3
  ret i32 %4
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_scalarmult_curve25519_bytes() local_unnamed_addr #2 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_scalarmult_curve25519_scalarbytes() local_unnamed_addr #2 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define hidden i32 @_crypto_scalarmult_curve25519_pick_best_implementation() local_unnamed_addr #2 {
  ret i32 0
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %6 = tail call i32 %5(i8* nonnull %0, i8* nonnull %1, i8* nonnull %2) #3
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %7 = icmp eq i32 %6, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %9 = phi i32 [ %14, %8 ], [ 0, %3 ]
; Looking for a replacement for:
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))
infer %0

; *****
; For LLVM instruction:
;  %11 = load i8, i8* %10, align 1
; Looking for a replacement for:
%0:i8 = var
infer %0

; *****
; For LLVM instruction:
;  %12 = load volatile i8, i8* %4, align 1
; Looking for a replacement for:
%0:i8 = var
infer %0

; *****
; For LLVM instruction:
;  %13 = or i8 %12, %11
; Looking for a replacement for:
%0:i8 = var
%1:i8 = var
%2:i8 = or %0, %1
infer %2

; *****
; For LLVM instruction:
;  %14 = add nuw nsw i32 %9, 1
; Looking for a replacement for:
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))
%1:i32 = addnw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %15 = icmp eq i32 %14, 32
; Looking for a replacement for:
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))
%1:i32 = addnw 1:i32, %0 (hasExternalUses)
%2:i1 = eq 32:i32, %1
infer %2

; *****
; For LLVM instruction:
;  %17 = load volatile i8, i8* %4, align 1
; Looking for a replacement for:
%0:i8 = var
infer %0

; *****
; For LLVM instruction:
;  %18 = zext i8 %17 to i32
; Looking for a replacement for:
%0:i8 = var
%1:i32 = zext %0
infer %1 (demandedBits=00000000000000000000000111111111)

; *****
; For LLVM instruction:
;  %19 = add nuw nsw i32 %18, 511
; Looking for a replacement for:
%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
infer %2 (demandedBits=00000000000000000000000100000000)

; *****
; For LLVM instruction:
;  %20 = lshr i32 %19, 8
; Looking for a replacement for:
%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
%3:i32 = lshr %2, 8:i32
infer %3 (demandedBits=00000000000000000000000000000001)

; *****
; For LLVM instruction:
;  %21 = and i32 %20, 1
; Looking for a replacement for:
%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
%3:i32 = lshr %2, 8:i32
%4:i32 = and 1:i32, %3
infer %4

; *****
; For LLVM instruction:
;  %22 = sub nsw i32 0, %21
; Looking for a replacement for:
%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
%3:i32 = lshr %2, 8:i32
%4:i32 = and 1:i32, %3
%5:i32 = subnsw 0:i32, %4
infer %5

; *****
; For LLVM instruction:
;  %24 = phi i32 [ %22, %16 ], [ -1, %3 ]
; Looking for a replacement for:
%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i32 = addnw 511:i32, %2
%4:i32 = lshr %3, 8:i32
%5:i32 = and 1:i32, %4
%6:i32 = subnsw 0:i32, %5
%7:i32 = phi %0, %6, 4294967295:i32
infer %7
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 8
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0:i8 = var
infer %0


--------------------------------
guess 0

%0:i8 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i8 = var
%1:i8 = var
%2:i8 = or %0, %1
infer %2


--------------------------------
guess 0

%0:i8 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i8 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i8 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 3 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))
%1:i32 = addnw 1:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 9
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))
%1:i32 = addnw 1:i32, %0 (hasExternalUses)
%2:i1 = eq 32:i32, %1
infer %2


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i8 = var
%1:i32 = zext %0
infer %1 (demandedBits=00000000000000000000000111111111)


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 255
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
infer %2 (demandedBits=00000000000000000000000100000000)


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 256
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 543
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i8 = var
%1:i32 = zext %0

Cost = 1
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 4 candidates from LHS

-------------------------------------------------
%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
%3:i32 = lshr %2, 8:i32
infer %3 (demandedBits=00000000000000000000000000000001)


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 2
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i8 = var
%1:i32 = zext %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1

Cost = 2
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 3 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 5 candidates from LHS

-------------------------------------------------
%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
%3:i32 = lshr %2, 8:i32
%4:i32 = and 1:i32, %3
infer %4


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i8 = var
%1:i32 = zext %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1

Cost = 2
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
%3:i32 = lshr %2, 8:i32

Cost = 3
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 4 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 6 candidates from LHS

-------------------------------------------------
%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
%3:i32 = lshr %2, 8:i32
%4:i32 = and 1:i32, %3
%5:i32 = subnsw 0:i32, %4
infer %5


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i8 = var
%1:i32 = zext %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1

Cost = 2
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
%3:i32 = lshr %2, 8:i32

Cost = 3
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
%3:i32 = lshr %2, 8:i32
%4:i32 = and 1:i32, %3

Cost = 4
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 5 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 7 candidates from LHS

-------------------------------------------------
%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i32 = addnw 511:i32, %2
%4:i32 = lshr %3, 8:i32
%5:i32 = and 1:i32, %4
%6:i32 = subnsw 0:i32, %5
%7:i32 = phi %0, %6, 4294967295:i32
infer %7


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i8 = var
%1:i32 = zext %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1

Cost = 2
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
%3:i32 = lshr %2, 8:i32

Cost = 3
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
%3:i32 = lshr %2, 8:i32
%4:i32 = and 1:i32, %3

Cost = 4
second query is SAT-- constant doesn't work

--------------------------------
guess 5

%0:i8 = var
%1:i32 = zext %0
%2:i32 = addnw 511:i32, %1
%3:i32 = lshr %2, 8:i32
%4:i32 = and 1:i32, %3
%5:i32 = subnsw 0:i32, %4

Cost = 5
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 6 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for crypto_scalarmult_curve25519()

