; entering Souper's runOnFunction() for crypto_generichash_keybytes_min()

; ModuleID = './crypto_generichash.c.bc'
source_filename = "crypto_generichash/crypto_generichash.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_generichash_blake2b_state = type { [384 x i8] }

@.str = private unnamed_addr constant [8 x i8] c"blake2b\00", align 1

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_generichash_bytes_min() local_unnamed_addr #0 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_generichash_bytes_max() local_unnamed_addr #0 {
  ret i32 64
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_generichash_bytes() local_unnamed_addr #0 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_generichash_keybytes_min() local_unnamed_addr #0 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_generichash_keybytes_max() local_unnamed_addr #0 {
  ret i32 64
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_generichash_keybytes() local_unnamed_addr #0 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i8* @crypto_generichash_primitive() local_unnamed_addr #0 {
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0)
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_generichash_statebytes() local_unnamed_addr #0 {
  ret i32 384
}

; Function Attrs: nounwind
define i32 @crypto_generichash(i8* nonnull %0, i32 %1, i8* %2, i64 %3, i8* %4, i32 %5) local_unnamed_addr #1 {
  %7 = tail call i32 @crypto_generichash_blake2b(i8* nonnull %0, i32 %1, i8* %2, i64 %3, i8* %4, i32 %5) #3
  ret i32 %7
}

declare i32 @crypto_generichash_blake2b(i8* %0, i32 %1, i8* %2, i64 %3, i8* %4, i32 %5) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_generichash_init(%struct.crypto_generichash_blake2b_state* nonnull %0, i8* %1, i32 %2, i32 %3) local_unnamed_addr #1 {
  %5 = tail call i32 @crypto_generichash_blake2b_init(%struct.crypto_generichash_blake2b_state* nonnull %0, i8* %1, i32 %2, i32 %3) #3
  ret i32 %5
}

declare i32 @crypto_generichash_blake2b_init(%struct.crypto_generichash_blake2b_state* %0, i8* %1, i32 %2, i32 %3) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_generichash_update(%struct.crypto_generichash_blake2b_state* nonnull %0, i8* %1, i64 %2) local_unnamed_addr #1 {
  %4 = tail call i32 @crypto_generichash_blake2b_update(%struct.crypto_generichash_blake2b_state* nonnull %0, i8* %1, i64 %2) #3
  ret i32 %4
}

declare i32 @crypto_generichash_blake2b_update(%struct.crypto_generichash_blake2b_state* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_generichash_final(%struct.crypto_generichash_blake2b_state* nonnull %0, i8* nonnull %1, i32 %2) local_unnamed_addr #1 {
  %4 = tail call i32 @crypto_generichash_blake2b_final(%struct.crypto_generichash_blake2b_state* nonnull %0, i8* nonnull %1, i32 %2) #3
  ret i32 %4
}

declare i32 @crypto_generichash_blake2b_final(%struct.crypto_generichash_blake2b_state* %0, i8* %1, i32 %2) local_unnamed_addr #2

; Function Attrs: nounwind
define void @crypto_generichash_keygen(i8* nonnull %0) local_unnamed_addr #1 {
  tail call void @randombytes_buf(i8* nonnull %0, i32 32) #3
  ret void
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_generichash_keybytes_min()

