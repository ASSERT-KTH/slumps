; entering Souper's runOnFunction() for crypto_pwhash_argon2i_opslimit_moderate()

; ModuleID = './pwhash_argon2i.c.bc'
source_filename = "crypto_pwhash/argon2/pwhash_argon2i.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.Argon2_Context = type { i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [10 x i8] c"$argon2i$\00", align 1
@errno = external thread_local local_unnamed_addr global i32, align 4

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_alg_argon2i13() local_unnamed_addr #0 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_bytes_min() local_unnamed_addr #0 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_bytes_max() local_unnamed_addr #0 {
  ret i32 -1
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_passwd_min() local_unnamed_addr #0 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_passwd_max() local_unnamed_addr #0 {
  ret i32 -1
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_saltbytes() local_unnamed_addr #0 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_strbytes() local_unnamed_addr #0 {
  ret i32 128
}

; Function Attrs: norecurse nounwind readnone
define i8* @crypto_pwhash_argon2i_strprefix() local_unnamed_addr #0 {
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0)
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_opslimit_min() local_unnamed_addr #0 {
  ret i32 3
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_opslimit_max() local_unnamed_addr #0 {
  ret i32 -1
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_memlimit_min() local_unnamed_addr #0 {
  ret i32 8192
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_memlimit_max() local_unnamed_addr #0 {
  ret i32 -2147483648
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_opslimit_interactive() local_unnamed_addr #0 {
  ret i32 4
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_memlimit_interactive() local_unnamed_addr #0 {
  ret i32 33554432
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_opslimit_moderate() local_unnamed_addr #0 {
  ret i32 6
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_memlimit_moderate() local_unnamed_addr #0 {
  ret i32 134217728
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_opslimit_sensitive() local_unnamed_addr #0 {
  ret i32 8
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_argon2i_memlimit_sensitive() local_unnamed_addr #0 {
  ret i32 536870912
}

; Function Attrs: nounwind
define i32 @crypto_pwhash_argon2i(i8* nonnull %0, i64 %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i64 %5, i32 %6, i32 %7) local_unnamed_addr #1 {
  %9 = trunc i64 %1 to i32
  tail call void @llvm.memset.p0i8.i32(i8* nonnull align 1 %0, i8 0, i32 %9, i1 false)
  %10 = icmp ugt i64 %1, 4294967295
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  store i32 22, i32* @errno, align 4
  br label %36

12:                                               ; preds = %8
  %13 = icmp ult i64 %1, 16
  br i1 %13, label %14, label %15

14:                                               ; preds = %12
  store i32 28, i32* @errno, align 4
  br label %36

15:                                               ; preds = %12
  %16 = or i64 %5, %3
  %17 = icmp ugt i64 %16, 4294967295
  %18 = icmp ugt i32 %6, -2147483648
  %19 = or i1 %17, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  store i32 22, i32* @errno, align 4
  br label %36

21:                                               ; preds = %15
  %22 = icmp ult i64 %5, 3
  %23 = icmp ult i32 %6, 8192
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  store i32 28, i32* @errno, align 4
  br label %36

26:                                               ; preds = %21
  %27 = icmp eq i32 %7, 1
  br i1 %27, label %28, label %35

28:                                               ; preds = %26
  %29 = trunc i64 %5 to i32
  %30 = lshr i32 %6, 10
  %31 = trunc i64 %3 to i32
  %32 = tail call i32 @argon2i_hash_raw(i32 %29, i32 %30, i32 1, i8* nonnull %2, i32 %31, i8* nonnull %4, i32 16, i8* nonnull %0, i32 %9) #8
  %33 = icmp ne i32 %32, 0
  %34 = sext i1 %33 to i32
  br label %36

35:                                               ; preds = %26
  store i32 28, i32* @errno, align 4
  br label %36

36:                                               ; preds = %28, %35, %25, %20, %14, %11
  %37 = phi i32 [ -1, %11 ], [ -1, %14 ], [ -1, %20 ], [ -1, %25 ], [ -1, %35 ], [ %34, %28 ]
  ret i32 %37
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #2

declare i32 @argon2i_hash_raw(i32 %0, i32 %1, i32 %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* %7, i32 %8) local_unnamed_addr #3

; Function Attrs: nounwind
define i32 @crypto_pwhash_argon2i_str(i8* nonnull %0, i8* nonnull %1, i64 %2, i64 %3, i32 %4) local_unnamed_addr #1 {
  %6 = alloca [16 x i8], align 16
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  tail call void @llvm.memset.p0i8.i32(i8* nonnull align 1 dereferenceable(128) %0, i8 0, i32 128, i1 false)
  %8 = or i64 %3, %2
  %9 = icmp ugt i64 %8, 4294967295
  %10 = icmp ugt i32 %4, -2147483648
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %5
  store i32 22, i32* @errno, align 4
  br label %25

13:                                               ; preds = %5
  %14 = icmp ult i64 %3, 3
  %15 = icmp ult i32 %4, 8192
  %16 = or i1 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  store i32 28, i32* @errno, align 4
  br label %25

18:                                               ; preds = %13
  call void @randombytes_buf(i8* nonnull %7, i32 16) #8
  %19 = trunc i64 %3 to i32
  %20 = lshr i32 %4, 10
  %21 = trunc i64 %2 to i32
  %22 = call i32 @argon2i_hash_encoded(i32 %19, i32 %20, i32 1, i8* nonnull %1, i32 %21, i8* nonnull %7, i32 16, i32 32, i8* nonnull %0, i32 128) #8
  %23 = icmp ne i32 %22, 0
  %24 = sext i1 %23 to i32
  br label %25

25:                                               ; preds = %18, %17, %12
  %26 = phi i32 [ -1, %12 ], [ -1, %17 ], [ %24, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret i32 %26
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #4

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #3

declare i32 @argon2i_hash_encoded(i32 %0, i32 %1, i32 %2, i8* %3, i32 %4, i8* %5, i32 %6, i32 %7, i8* %8, i32 %9) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #4

; Function Attrs: nounwind
define i32 @crypto_pwhash_argon2i_str_verify(i8* nonnull %0, i8* nonnull %1, i64 %2) local_unnamed_addr #1 {
  %4 = icmp ugt i64 %2, 4294967295
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store i32 22, i32* @errno, align 4
  br label %11

6:                                                ; preds = %3
  %7 = trunc i64 %2 to i32
  %8 = tail call i32 @argon2i_verify(i8* nonnull %0, i8* nonnull %1, i32 %7) #8
  switch i32 %8, label %10 [
    i32 0, label %11
    i32 -35, label %9
  ]

9:                                                ; preds = %6
  store i32 28, i32* @errno, align 4
  br label %10

10:                                               ; preds = %6, %9
  br label %11

11:                                               ; preds = %6, %10, %5
  %12 = phi i32 [ -1, %5 ], [ -1, %10 ], [ %8, %6 ]
  ret i32 %12
}

declare i32 @argon2i_verify(i8* %0, i8* %1, i32 %2) local_unnamed_addr #3

; Function Attrs: nounwind
define i32 @crypto_pwhash_argon2i_str_needs_rehash(i8* nonnull %0, i64 %1, i32 %2) local_unnamed_addr #1 {
  %4 = tail call fastcc i32 @_needs_rehash(i8* nonnull %0, i64 %1, i32 %2, i32 1)
  ret i32 %4
}

; Function Attrs: nounwind
define internal fastcc i32 @_needs_rehash(i8* %0, i64 %1, i32 %2, i32 %3) unnamed_addr #1 {
  %5 = alloca %struct.Argon2_Context, align 4
  %6 = bitcast %struct.Argon2_Context* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %6) #8
  %7 = tail call i32 @strlen(i8* nonnull dereferenceable(1) %0) #9
  %8 = lshr i32 %2, 10
  %9 = icmp ugt i64 %1, 4294967295
  %10 = icmp ugt i32 %7, 127
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  store i32 28, i32* @errno, align 4
  br label %40

13:                                               ; preds = %4
  call void @llvm.memset.p0i8.i32(i8* nonnull align 4 dereferenceable(60) %6, i8 0, i32 60, i1 false)
  %14 = tail call noalias i8* @calloc(i32 %7, i32 1)
  %15 = icmp eq i8* %14, null
  br i1 %15, label %40, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 4
  store i8* %14, i8** %17, align 4
  %18 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 2
  store i8* %14, i8** %18, align 4
  %19 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 0
  store i8* %14, i8** %19, align 4
  %20 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 5
  store i32 %7, i32* %20, align 4
  %21 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 3
  store i32 %7, i32* %21, align 4
  %22 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 1
  store i32 %7, i32* %22, align 4
  %23 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 6
  %24 = bitcast i8** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %24, i8 0, i64 16, i1 false)
  %25 = call i32 @argon2_decode_string(%struct.Argon2_Context* nonnull %5, i8* %0, i32 %3) #8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %16
  store i32 28, i32* @errno, align 4
  br label %38

28:                                               ; preds = %16
  %29 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 10
  %30 = load i32, i32* %29, align 4
  %31 = trunc i64 %1 to i32
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.Argon2_Context, %struct.Argon2_Context* %5, i32 0, i32 11
  %35 = load i32, i32* %34, align 4
  %36 = icmp ne i32 %35, %8
  %37 = zext i1 %36 to i32
  br label %38

38:                                               ; preds = %33, %28, %27
  %39 = phi i32 [ -1, %27 ], [ 1, %28 ], [ %37, %33 ]
  call void @free(i8* nonnull %14)
  br label %40

40:                                               ; preds = %13, %38, %12
  %41 = phi i32 [ -1, %12 ], [ %39, %38 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %6) #8
  ret i32 %41
}

; Function Attrs: nounwind
define i32 @crypto_pwhash_argon2id_str_needs_rehash(i8* nonnull %0, i64 %1, i32 %2) local_unnamed_addr #1 {
  %4 = tail call fastcc i32 @_needs_rehash(i8* nonnull %0, i64 %1, i32 %2, i32 2)
  ret i32 %4
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i32 @strlen(i8* nocapture %0) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i32 %0, i32 %1) local_unnamed_addr #6

declare i32 @argon2_decode_string(%struct.Argon2_Context* %0, i8* %1, i32 %2) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture %0) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly %0, i8 %1, i64 %2, i1 immarg %3) #2

attributes #0 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn writeonly }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_pwhash_argon2i_opslimit_moderate()

