; entering Souper's runOnFunction() for crypto_sign_ed25519()

; ModuleID = './sign.c.bc'
source_filename = "crypto_sign/ed25519/ref10/sign.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_hash_sha512_state = type { [8 x i64], [2 x i64], [128 x i8] }
%struct.ge25519_p3 = type { [10 x i32], [10 x i32], [10 x i32], [10 x i32] }

@_crypto_sign_ed25519_ref10_hinit.DOM2PREFIX = internal constant [34 x i8] c"SigEd25519 no Ed25519 collisions\01\00", align 16
@_crypto_sign_ed25519_synthetic_r_hv.B = internal constant [32 x i8] c"Xfffffffffffffffffffffffffffffff", align 16
@_crypto_sign_ed25519_synthetic_r_hv.zeros = internal constant [128 x i8] zeroinitializer, align 16
@_crypto_sign_ed25519_synthetic_r_hv.empty_labelset = internal constant [3 x i8] c"\02\00\00", align 1

; Function Attrs: nounwind
define hidden void @_crypto_sign_ed25519_ref10_hinit(%struct.crypto_hash_sha512_state* %0, i32 %1) local_unnamed_addr #0 {
  %3 = tail call i32 @crypto_hash_sha512_init(%struct.crypto_hash_sha512_state* %0) #4
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_crypto_sign_ed25519_ref10_hinit.DOM2PREFIX, i32 0, i32 0), i64 34) #4
  br label %7

7:                                                ; preds = %2, %5
  ret void
}

declare i32 @crypto_hash_sha512_init(%struct.crypto_hash_sha512_state* %0) local_unnamed_addr #1

declare i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* %0, i8* %1, i64 %2) local_unnamed_addr #1

; Function Attrs: nounwind
define hidden i32 @_crypto_sign_ed25519_detached(i8* %0, i64* %1, i8* %2, i64 %3, i8* %4, i32 %5) local_unnamed_addr #0 {
  %7 = alloca %struct.crypto_hash_sha512_state, align 8
  %8 = alloca [64 x i8], align 16
  %9 = alloca [64 x i8], align 16
  %10 = alloca [64 x i8], align 16
  %11 = alloca %struct.ge25519_p3, align 4
  %12 = bitcast %struct.crypto_hash_sha512_state* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %12) #4
  %13 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #4
  %14 = getelementptr inbounds [64 x i8], [64 x i8]* %9, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14) #4
  %15 = getelementptr inbounds [64 x i8], [64 x i8]* %10, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %15) #4
  %16 = bitcast %struct.ge25519_p3* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %16) #4
  %17 = call i32 @crypto_hash_sha512_init(%struct.crypto_hash_sha512_state* nonnull %7) #4
  %18 = icmp eq i32 %5, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %6
  %20 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_crypto_sign_ed25519_ref10_hinit.DOM2PREFIX, i32 0, i32 0), i64 34) #4
  br label %21

21:                                               ; preds = %6, %19
  %22 = call i32 @crypto_hash_sha512(i8* nonnull %13, i8* %4, i64 32) #4
  %23 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_crypto_sign_ed25519_synthetic_r_hv.B, i32 0, i32 0), i64 32) #4
  %24 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_crypto_sign_ed25519_synthetic_r_hv.empty_labelset, i32 0, i32 0), i64 3) #4
  call void @randombytes_buf(i8* nonnull %14, i32 32) #4
  %25 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %7, i8* nonnull %14, i64 32) #4
  %26 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %7, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @_crypto_sign_ed25519_synthetic_r_hv.zeros, i32 0, i32 0), i64 61) #4
  %27 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %7, i8* nonnull %13, i64 32) #4
  %28 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %7, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @_crypto_sign_ed25519_synthetic_r_hv.zeros, i32 0, i32 0), i64 96) #4
  %29 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_crypto_sign_ed25519_synthetic_r_hv.empty_labelset, i32 0, i32 0), i64 3) #4
  %30 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i32 0, i32 32
  %31 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %7, i8* nonnull %30, i64 32) #4
  %32 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %7, i8* %2, i64 %3) #4
  %33 = call i32 @crypto_hash_sha512_final(%struct.crypto_hash_sha512_state* nonnull %7, i8* nonnull %14) #4
  %34 = getelementptr i8, i8* %0, i32 32
  %35 = getelementptr i8, i8* %4, i32 32
  call void @llvm.memmove.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %34, i8* nonnull align 1 dereferenceable(32) %35, i32 32, i1 false)
  call void @sc25519_reduce(i8* nonnull %14) #4
  call void @ge25519_scalarmult_base(%struct.ge25519_p3* nonnull %11, i8* nonnull %14) #4
  call void @ge25519_p3_tobytes(i8* %0, %struct.ge25519_p3* nonnull %11) #4
  %36 = call i32 @crypto_hash_sha512_init(%struct.crypto_hash_sha512_state* nonnull %7) #4
  br i1 %18, label %39, label %37

37:                                               ; preds = %21
  %38 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_crypto_sign_ed25519_ref10_hinit.DOM2PREFIX, i32 0, i32 0), i64 34) #4
  br label %39

39:                                               ; preds = %21, %37
  %40 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %7, i8* nonnull %0, i64 64) #4
  %41 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %7, i8* %2, i64 %3) #4
  %42 = call i32 @crypto_hash_sha512_final(%struct.crypto_hash_sha512_state* nonnull %7, i8* nonnull %15) #4
  call void @sc25519_reduce(i8* nonnull %15) #4
  %43 = load i8, i8* %13, align 16
  %44 = and i8 %43, -8
  store i8 %44, i8* %13, align 16
  %45 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i32 0, i32 31
  %46 = load i8, i8* %45, align 1
  %47 = and i8 %46, 63
  %48 = or i8 %47, 64
  store i8 %48, i8* %45, align 1
  call void @sc25519_muladd(i8* %34, i8* nonnull %15, i8* nonnull %13, i8* nonnull %14) #4
  call void @sodium_memzero(i8* nonnull %13, i32 64) #4
  call void @sodium_memzero(i8* nonnull %14, i32 64) #4
  %49 = icmp eq i64* %1, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %39
  store i64 64, i64* %1, align 8
  br label %51

51:                                               ; preds = %39, %50
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %16) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %12) #4
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #2

declare i32 @crypto_hash_sha512(i8* %0, i8* %1, i64 %2) local_unnamed_addr #1

declare i32 @crypto_hash_sha512_final(%struct.crypto_hash_sha512_state* %0, i8* %1) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i32(i8* nocapture %0, i8* nocapture readonly %1, i32 %2, i1 immarg %3) #2

declare void @sc25519_reduce(i8* %0) local_unnamed_addr #1

declare void @ge25519_scalarmult_base(%struct.ge25519_p3* %0, i8* %1) local_unnamed_addr #1

declare void @ge25519_p3_tobytes(i8* %0, %struct.ge25519_p3* %1) local_unnamed_addr #1

declare void @sc25519_muladd(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #2

; Function Attrs: nounwind
define i32 @crypto_sign_ed25519_detached(i8* nonnull %0, i64* %1, i8* %2, i64 %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = tail call i32 @_crypto_sign_ed25519_detached(i8* nonnull %0, i64* %1, i8* %2, i64 %3, i8* nonnull %4, i32 0)
  ret i32 0
}

; Function Attrs: nounwind
define i32 @crypto_sign_ed25519(i8* nonnull %0, i64* %1, i8* nocapture readonly %2, i64 %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #4
  %8 = getelementptr i8, i8* %0, i32 64
  %9 = trunc i64 %3 to i32
  tail call void @llvm.memmove.p0i8.p0i8.i32(i8* align 1 %8, i8* align 1 %2, i32 %9, i1 false)
  %10 = call i32 @_crypto_sign_ed25519_detached(i8* nonnull %0, i64* nonnull %6, i8* %8, i64 %3, i8* nonnull %4, i32 0) #4
  %11 = load i64, i64* %6, align 8
  %12 = icmp eq i64 %11, 64
  %13 = icmp ne i64* %1, null
  br i1 %12, label %18, label %14

14:                                               ; preds = %5
  br i1 %13, label %15, label %16

15:                                               ; preds = %14
  store i64 0, i64* %1, align 8
  br label %16

16:                                               ; preds = %15, %14
  %17 = add i32 %9, 64
  call void @llvm.memset.p0i8.i32(i8* nonnull align 1 %0, i8 0, i32 %17, i1 false)
  br label %21

18:                                               ; preds = %5
  br i1 %13, label %19, label %21

19:                                               ; preds = %18
  %20 = add i64 %3, 64
  store i64 %20, i64* %1, align 8
  br label %21

21:                                               ; preds = %18, %19, %16
  %22 = phi i32 [ -1, %16 ], [ 0, %19 ], [ 0, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4
  ret i32 %22
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #3

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #1

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { argmemonly nounwind willreturn writeonly }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %9 = trunc i64 %3 to i32
; Looking for a replacement for:
%0:i64 = var
%1:i32 = trunc %0
infer %1

; *****
; For LLVM instruction:
;  %11 = load i64, i64* %6, align 8
; Looking for a replacement for:
%0:i64 = var
infer %0

; *****
; For LLVM instruction:
;  %12 = icmp eq i64 %11, 64
; Looking for a replacement for:
%0:i64 = var
%1:i1 = eq 64:i64, %0
infer %1

; *****
; For LLVM instruction:
;  %13 = icmp ne i64* %1, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %17 = add i32 %9, 64
; Looking for a replacement for:
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i32 = add 64:i32, %1
infer %2

; *****
; For LLVM instruction:
;  %20 = add i64 %3, 64
; Looking for a replacement for:
%0:i64 = var
%1:i64 = add 64:i64, %0
infer %1

; *****
; For LLVM instruction:
;  %22 = phi i32 [ -1, %16 ], [ 0, %19 ], [ 0, %18 ]
; Looking for a replacement for:
%0 = block 3
%1:i32 = phi %0, 4294967295:i32, 0:i32, 0:i32
infer %1
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i32 = trunc %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0:i64 = var
infer %0


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i1 = eq 64:i64, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = ne 0:i32, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i32 = add 64:i32, %1
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 64
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 63
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = add 64:i64, %0
infer %1


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 64
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 63
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0 = block 3
%1:i32 = phi %0, 4294967295:i32, 0:i32, 0:i32
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for crypto_sign_ed25519()
Total of 0 replacements done on this module
Total of 0 replacements candidates on this module
