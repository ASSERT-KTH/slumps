; entering Souper's runOnFunction() for crypto_kdf_blake2b_derive_from_key()

; ModuleID = './kdf_blake2b.c.bc'
source_filename = "crypto_kdf/blake2b/kdf_blake2b.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@errno = external thread_local local_unnamed_addr global i32, align 4

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_kdf_blake2b_bytes_min() local_unnamed_addr #0 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_kdf_blake2b_bytes_max() local_unnamed_addr #0 {
  ret i32 64
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_kdf_blake2b_contextbytes() local_unnamed_addr #0 {
  ret i32 8
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_kdf_blake2b_keybytes() local_unnamed_addr #0 {
  ret i32 32
}

; Function Attrs: nounwind
define i32 @crypto_kdf_blake2b_derive_from_key(i8* nonnull %0, i32 %1, i64 %2, i8* nocapture nonnull readonly %3, i8* nonnull %4) local_unnamed_addr #1 {
  %6 = alloca [16 x i8], align 16
  %7 = alloca [16 x i8], align 16
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #4
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #4
  %10 = bitcast i8* %3 to i64*
  %11 = bitcast [16 x i8]* %6 to i64*
  %12 = load i64, i64* %10, align 1
  store i64 %12, i64* %11, align 16
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 8
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = bitcast [16 x i8]* %7 to i64*
  store i64 %2, i64* %15, align 16
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 8
  %17 = bitcast i8* %16 to i64*
  store i64 0, i64* %17, align 8
  %18 = add i32 %1, -16
  %19 = icmp ugt i32 %18, 48
  br i1 %19, label %20, label %21

20:                                               ; preds = %5
  store i32 28, i32* @errno, align 4
  br label %23

21:                                               ; preds = %5
  %22 = call i32 @crypto_generichash_blake2b_salt_personal(i8* nonnull %0, i32 %1, i8* null, i64 0, i8* nonnull %4, i32 32, i8* nonnull %9, i8* nonnull %8) #4
  br label %23

23:                                               ; preds = %21, %20
  %24 = phi i32 [ -1, %20 ], [ %22, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #4
  ret i32 %24
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #2

declare i32 @crypto_generichash_blake2b_salt_personal(i8* %0, i32 %1, i8* %2, i64 %3, i8* %4, i32 %5, i8* %6, i8* %7) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #2

attributes #0 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %12 = load i64, i64* %10, align 1
; Looking for a replacement for:
%0:i64 = var
infer %0

; *****
; For LLVM instruction:
;  %18 = add i32 %1, -16
; Looking for a replacement for:
%0:i32 = var
%1:i32 = add 4294967280:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %19 = icmp ugt i32 %18, 48
; Looking for a replacement for:
%0:i32 = var
%1:i32 = add 4294967280:i32, %0
%2:i1 = ult 48:i32, %1
infer %2

; *****
; For LLVM instruction:
;  %22 = call i32 @crypto_generichash_blake2b_salt_personal(i8* nonnull %0, i32 %1, i8* null, i64 0, i8* nonnull %4, i32 32, i8* nonnull %9, i8* nonnull %8) #4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %24 = phi i32 [ -1, %20 ], [ %22, %21 ]
; Looking for a replacement for:
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, 4294967295:i32, %1
infer %2
got 1 candidates from LHS

-------------------------------------------------
%0:i64 = var
infer %0


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = add 4294967280:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -16
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -17
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = add 4294967280:i32, %0
%2:i1 = ult 48:i32, %1
infer %2


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, 4294967295:i32, %1
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for crypto_kdf_blake2b_derive_from_key()
Total of 0 replacements done on this module
Total of 0 replacements candidates on this module
