; entering Souper's runOnFunction() for crypto_box_open_easy()

; ModuleID = './crypto_box_easy.c.bc'
source_filename = "crypto_box/crypto_box_easy.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

; Function Attrs: nounwind
define i32 @crypto_box_detached_afternm(i8* nonnull %0, i8* nonnull %1, i8* %2, i64 %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = tail call i32 @crypto_secretbox_detached(i8* nonnull %0, i8* nonnull %1, i8* %2, i64 %3, i8* nonnull %4, i8* nonnull %5) #4
  ret i32 %7
}

declare i32 @crypto_secretbox_detached(i8* %0, i8* %1, i8* %2, i64 %3, i8* %4, i8* %5) local_unnamed_addr #1

; Function Attrs: nounwind
define i32 @crypto_box_detached(i8* nonnull %0, i8* nonnull %1, i8* %2, i64 %3, i8* nonnull %4, i8* nonnull %5, i8* nonnull %6) local_unnamed_addr #0 {
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = call i32 @crypto_box_beforenm(i8* nonnull %9, i8* nonnull %5, i8* nonnull %6) #4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = call i32 @crypto_secretbox_detached(i8* nonnull %0, i8* nonnull %1, i8* %2, i64 %3, i8* nonnull %4, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi i32 [ %13, %12 ], [ -1, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %15
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #2

declare i32 @crypto_box_beforenm(i8* %0, i8* %1, i8* %2) local_unnamed_addr #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #2

; Function Attrs: nounwind
define i32 @crypto_box_easy_afternm(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = icmp ugt i64 %2, 4294967279
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @sodium_misuse() #5
  unreachable

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 16
  %10 = tail call i32 @crypto_secretbox_detached(i8* nonnull %9, i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4) #4
  ret i32 %10
}

; Function Attrs: noreturn
declare void @sodium_misuse() local_unnamed_addr #3

; Function Attrs: nounwind
define i32 @crypto_box_easy(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = icmp ugt i64 %2, 4294967279
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @sodium_misuse() #5
  unreachable

10:                                               ; preds = %6
  %11 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #4
  %12 = call i32 @crypto_box_beforenm(i8* nonnull %11, i8* nonnull %4, i8* nonnull %5) #4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = getelementptr i8, i8* %0, i32 16
  %16 = call i32 @crypto_secretbox_detached(i8* nonnull %15, i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i8* nonnull %11) #4
  call void @sodium_memzero(i8* nonnull %11, i32 32) #4
  br label %17

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ -1, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #4
  ret i32 %18
}

; Function Attrs: nounwind
define i32 @crypto_box_open_detached_afternm(i8* %0, i8* nonnull %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = tail call i32 @crypto_secretbox_open_detached(i8* %0, i8* nonnull %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* nonnull %5) #4
  ret i32 %7
}

declare i32 @crypto_secretbox_open_detached(i8* %0, i8* %1, i8* %2, i64 %3, i8* %4, i8* %5) local_unnamed_addr #1

; Function Attrs: nounwind
define i32 @crypto_box_open_detached(i8* %0, i8* nonnull %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* nonnull %5, i8* nonnull %6) local_unnamed_addr #0 {
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = call i32 @crypto_box_beforenm(i8* nonnull %9, i8* nonnull %5, i8* nonnull %6) #4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = call i32 @crypto_secretbox_open_detached(i8* %0, i8* nonnull %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* nonnull %9) #4
  call void @sodium_memzero(i8* nonnull %9, i32 32) #4
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi i32 [ %13, %12 ], [ -1, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %15
}

; Function Attrs: nounwind
define i32 @crypto_box_open_easy_afternm(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = icmp ult i64 %2, 16
  br i1 %6, label %11, label %7

7:                                                ; preds = %5
  %8 = getelementptr i8, i8* %1, i32 16
  %9 = add i64 %2, -16
  %10 = tail call i32 @crypto_secretbox_open_detached(i8* %0, i8* nonnull %8, i8* nonnull %1, i64 %9, i8* nonnull %3, i8* nonnull %4) #4
  br label %11

11:                                               ; preds = %5, %7
  %12 = phi i32 [ %10, %7 ], [ -1, %5 ]
  ret i32 %12
}

; Function Attrs: nounwind
define i32 @crypto_box_open_easy(i8* %0, i8* nonnull %1, i64 %2, i8* nonnull %3, i8* nonnull %4, i8* nonnull %5) local_unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = icmp ult i64 %2, 16
  br i1 %8, label %19, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  %11 = call i32 @crypto_box_beforenm(i8* nonnull %10, i8* nonnull %4, i8* nonnull %5) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = add i64 %2, -16
  %15 = getelementptr i8, i8* %1, i32 16
  %16 = call i32 @crypto_secretbox_open_detached(i8* %0, i8* nonnull %15, i8* nonnull %1, i64 %14, i8* nonnull %3, i8* nonnull %10) #4
  call void @sodium_memzero(i8* nonnull %10, i32 32) #4
  br label %17

17:                                               ; preds = %9, %13
  %18 = phi i32 [ %16, %13 ], [ -1, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %19

19:                                               ; preds = %6, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %6 ]
  ret i32 %20
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %8 = icmp ult i64 %2, 16
; Looking for a replacement for:
%0:i64 = var
%1:i1 = ult %0, 16:i64
infer %1

; *****
; For LLVM instruction:
;  %11 = call i32 @crypto_box_beforenm(i8* nonnull %10, i8* nonnull %4, i8* nonnull %5) #4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %12 = icmp eq i32 %11, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %14 = add i64 %2, -16
; Looking for a replacement for:
%0:i64 = var
%1:i1 = ult %0, 16:i64
pc %1 0:i1
%2:i64 = add 18446744073709551600:i64, %0
infer %2

; *****
; For LLVM instruction:
;  %16 = call i32 @crypto_secretbox_open_detached(i8* %0, i8* nonnull %15, i8* nonnull %1, i64 %14, i8* nonnull %3, i8* nonnull %10) #4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %18 = phi i32 [ %16, %13 ], [ -1, %9 ]
; Looking for a replacement for:
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32
infer %2

; *****
; For LLVM instruction:
;  %20 = phi i32 [ %18, %17 ], [ -1, %6 ]
; Looking for a replacement for:
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = phi %1, %2, 4294967295:i32
%4:i32 = phi %0, %3, 4294967295:i32
infer %4
got 3 candidates from LHS

-------------------------------------------------
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = phi %1, %2, 4294967295:i32
%4:i32 = phi %0, %3, 4294967295:i32
infer %4


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32

Cost = 1
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 3 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for crypto_box_open_easy()
Total of 0 replacements done on this module
Total of 0 replacements candidates on this module
