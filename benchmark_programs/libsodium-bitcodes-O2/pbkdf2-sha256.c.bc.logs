
Entering the Souper pass's runOnModule()


; entering Souper's runOnFunction() for escrypt_PBKDF2_SHA256()

; ModuleID = './pbkdf2-sha256.c.bc'
source_filename = "crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_auth_hmacsha256_state = type { %struct.crypto_hash_sha256_state, %struct.crypto_hash_sha256_state }
%struct.crypto_hash_sha256_state = type { [8 x i32], i64, [64 x i8] }

; Function Attrs: nounwind
define hidden void @escrypt_PBKDF2_SHA256(i8* %0, i32 %1, i8* %2, i32 %3, i64 %4, i8* nocapture %5, i32 %6) local_unnamed_addr #0 {
  %8 = alloca %struct.crypto_auth_hmacsha256_state, align 8
  %9 = alloca %struct.crypto_auth_hmacsha256_state, align 8
  %10 = alloca [4 x i8], align 1
  %11 = alloca [32 x i8], align 16
  %12 = alloca [32 x i8], align 16
  %13 = bitcast %struct.crypto_auth_hmacsha256_state* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %13) #3
  %14 = bitcast %struct.crypto_auth_hmacsha256_state* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %14) #3
  %15 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #3
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #3
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %12, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #3
  %18 = call i32 @crypto_auth_hmacsha256_init(%struct.crypto_auth_hmacsha256_state* nonnull %8, i8* %0, i32 %1) #3
  %19 = zext i32 %3 to i64
  %20 = call i32 @crypto_auth_hmacsha256_update(%struct.crypto_auth_hmacsha256_state* nonnull %8, i8* %2, i64 %19) #3
  %21 = icmp eq i32 %6, 0
  br i1 %21, label %64, label %22

22:                                               ; preds = %7
  %23 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 3
  %24 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 2
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 1
  %26 = icmp ult i64 %4, 2
  br label %27

27:                                               ; preds = %22, %57
  %28 = phi i32 [ 0, %22 ], [ %62, %57 ]
  %29 = phi i32 [ 0, %22 ], [ %30, %57 ]
  %30 = add i32 %29, 1
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %23, align 1
  %32 = lshr i32 %30, 8
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %24, align 1
  %34 = lshr i32 %30, 16
  %35 = trunc i32 %34 to i8
  store i8 %35, i8* %25, align 1
  %36 = lshr i32 %30, 24
  %37 = trunc i32 %36 to i8
  store i8 %37, i8* %15, align 1
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 8 dereferenceable(208) %14, i8* nonnull align 8 dereferenceable(208) %13, i32 208, i1 false)
  %38 = call i32 @crypto_auth_hmacsha256_update(%struct.crypto_auth_hmacsha256_state* nonnull %9, i8* nonnull %15, i64 4) #3
  %39 = call i32 @crypto_auth_hmacsha256_final(%struct.crypto_auth_hmacsha256_state* nonnull %9, i8* nonnull %16) #3
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 16 dereferenceable(32) %17, i8* nonnull align 16 dereferenceable(32) %16, i32 32, i1 false)
  br i1 %26, label %57, label %40

40:                                               ; preds = %27, %54
  %41 = phi i64 [ %55, %54 ], [ 2, %27 ]
  %42 = call i32 @crypto_auth_hmacsha256_init(%struct.crypto_auth_hmacsha256_state* nonnull %9, i8* %0, i32 %1) #3
  %43 = call i32 @crypto_auth_hmacsha256_update(%struct.crypto_auth_hmacsha256_state* nonnull %9, i8* nonnull %16, i64 32) #3
  %44 = call i32 @crypto_auth_hmacsha256_final(%struct.crypto_auth_hmacsha256_state* nonnull %9, i8* nonnull %16) #3
  br label %45

45:                                               ; preds = %45, %40
  %46 = phi i32 [ 0, %40 ], [ %52, %45 ]
  %47 = getelementptr [32 x i8], [32 x i8]* %11, i32 0, i32 %46
  %48 = load i8, i8* %47, align 1
  %49 = getelementptr [32 x i8], [32 x i8]* %12, i32 0, i32 %46
  %50 = load i8, i8* %49, align 1
  %51 = xor i8 %50, %48
  store i8 %51, i8* %49, align 1
  %52 = add nuw nsw i32 %46, 1
  %53 = icmp eq i32 %52, 32
  br i1 %53, label %54, label %45

54:                                               ; preds = %45
  %55 = add i64 %41, 1
  %56 = icmp ugt i64 %55, %4
  br i1 %56, label %57, label %40

57:                                               ; preds = %54, %27
  %58 = sub i32 %6, %28
  %59 = icmp ult i32 %58, 32
  %60 = select i1 %59, i32 %58, i32 32
  %61 = getelementptr i8, i8* %5, i32 %28
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %61, i8* nonnull align 16 %17, i32 %60, i1 false)
  %62 = shl i32 %30, 5
  %63 = icmp ult i32 %62, %6
  br i1 %63, label %27, label %64

64:                                               ; preds = %57, %7
  call void @sodium_memzero(i8* nonnull %13, i32 208) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #3
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %14) #3
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %13) #3
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_auth_hmacsha256_init(%struct.crypto_auth_hmacsha256_state* %0, i8* %1, i32 %2) local_unnamed_addr #2

declare i32 @crypto_auth_hmacsha256_update(%struct.crypto_auth_hmacsha256_state* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare i32 @crypto_auth_hmacsha256_final(%struct.crypto_auth_hmacsha256_state* %0, i8* %1) local_unnamed_addr #2

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %19 = zext i32 %3 to i64
; Looking for a replacement for:
%0:i32 = var
%1:i64 = zext %0
infer %1

; *****
; For LLVM instruction:
;  %21 = icmp eq i32 %6, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %26 = icmp ult i64 %4, 2
; Looking for a replacement for:
%0:i64 = var
%1:i1 = ult %0, 2:i64
infer %1

; *****
; For LLVM instruction:
;  %28 = phi i32 [ 0, %22 ], [ %62, %57 ]
; Looking for a replacement for:
%0:i32 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxx00000) (range=[0,-31))
infer %0

; *****
; For LLVM instruction:
;  %29 = phi i32 [ 0, %22 ], [ %30, %57 ]
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %30 = add i32 %29, 1
; Looking for a replacement for:
%0:i32 = var
%1:i32 = add 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %31 = trunc i32 %30 to i8
; Looking for a replacement for:
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i8 = trunc %1
infer %2

; *****
; For LLVM instruction:
;  %32 = lshr i32 %30, 8
; Looking for a replacement for:
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = lshr %1, 8:i32
infer %2 (demandedBits=00000000000000000000000011111111)

; *****
; For LLVM instruction:
;  %33 = trunc i32 %32 to i8
; Looking for a replacement for:
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = lshr %1, 8:i32
%3:i8 = trunc %2
infer %3

; *****
; For LLVM instruction:
;  %34 = lshr i32 %30, 16
; Looking for a replacement for:
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = lshr %1, 16:i32
infer %2 (demandedBits=00000000000000000000000011111111)

; *****
; For LLVM instruction:
;  %35 = trunc i32 %34 to i8
; Looking for a replacement for:
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = lshr %1, 16:i32
%3:i8 = trunc %2
infer %3

; *****
; For LLVM instruction:
;  %36 = lshr i32 %30, 24
; Looking for a replacement for:
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = lshr %1, 24:i32
infer %2 (demandedBits=00000000000000000000000011111111)

; *****
; For LLVM instruction:
;  %37 = trunc i32 %36 to i8
; Looking for a replacement for:
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = lshr %1, 24:i32
%3:i8 = trunc %2
infer %3

; *****
; For LLVM instruction:
;  %41 = phi i64 [ %55, %54 ], [ 2, %27 ]
; Looking for a replacement for:
%0:i64 = var
infer %0

; *****
; For LLVM instruction:
;  %46 = phi i32 [ 0, %40 ], [ %52, %45 ]
; Looking for a replacement for:
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))
infer %0

; *****
; For LLVM instruction:
;  %48 = load i8, i8* %47, align 1
; Looking for a replacement for:
%0:i8 = var
infer %0

; *****
; For LLVM instruction:
;  %50 = load i8, i8* %49, align 1
; Looking for a replacement for:
%0:i8 = var
infer %0

; *****
; For LLVM instruction:
;  %51 = xor i8 %50, %48
; Looking for a replacement for:
%0:i8 = var
%1:i8 = var
%2:i8 = xor %0, %1
infer %2

; *****
; For LLVM instruction:
;  %52 = add nuw nsw i32 %46, 1
; Looking for a replacement for:
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))
%1:i32 = addnw 1:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %53 = icmp eq i32 %52, 32
; Looking for a replacement for:
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))
%1:i32 = addnw 1:i32, %0 (hasExternalUses)
%2:i1 = eq 32:i32, %1
infer %2

; *****
; For LLVM instruction:
;  %55 = add i64 %41, 1
; Looking for a replacement for:
%0:i64 = var
%1:i64 = add 1:i64, %0
infer %1

; *****
; For LLVM instruction:
;  %56 = icmp ugt i64 %55, %4
; Looking for a replacement for:
%0:i64 = var
%1:i64 = var
%2:i64 = add 1:i64, %1 (hasExternalUses)
%3:i1 = ult %0, %2
infer %3

; *****
; For LLVM instruction:
;  %58 = sub i32 %6, %28
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxx00000) (range=[0,-31))
%2:i32 = sub %0, %1
infer %2

; *****
; For LLVM instruction:
;  %59 = icmp ult i32 %58, 32
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxx00000) (range=[0,-31))
%2:i32 = sub %0, %1 (hasExternalUses)
%3:i1 = ult %2, 32:i32
infer %3

; *****
; For LLVM instruction:
;  %60 = select i1 %59, i32 %58, i32 32
; Looking for a replacement for:
%0:i32 = var
%1:i32 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxx00000) (range=[0,-31))
%2:i32 = sub %0, %1
%3:i1 = ult %2, 32:i32
%4:i32 = select %3, %2, 32:i32
infer %4

; *****
; For LLVM instruction:
;  %62 = shl i32 %30, 5
; Looking for a replacement for:
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = shl %1, 5:i32
infer %2

; *****
; For LLVM instruction:
;  %63 = icmp ult i32 %62, %6
; Looking for a replacement for:
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = shl %1, 5:i32 (hasExternalUses)
%3:i32 = var
%4:i1 = ult %2, %3
infer %4
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i64 = zext %0
infer %1


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 4294967295
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i1 = ult %0, 2:i64
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxx00000) (range=[0,-31))
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 1073741824
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = add 1:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i8 = trunc %1
infer %2


--------------------------------
guess 0

%0:i8 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = lshr %1, 8:i32
infer %2 (demandedBits=00000000000000000000000011111111)


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 255
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 4 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = lshr %1, 8:i32
%3:i8 = trunc %2
infer %3


--------------------------------
guess 0

%0:i8 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = lshr %1, 16:i32
infer %2 (demandedBits=00000000000000000000000011111111)


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 255
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 4 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = lshr %1, 16:i32
%3:i8 = trunc %2
infer %3


--------------------------------
guess 0

%0:i8 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = lshr %1, 24:i32
infer %2 (demandedBits=00000000000000000000000011111111)


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 255
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 4 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = lshr %1, 24:i32
%3:i8 = trunc %2
infer %3


--------------------------------
guess 0

%0:i8 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0:i64 = var
infer %0


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 8
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0:i8 = var
infer %0


--------------------------------
guess 0

%0:i8 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i8 = var
%1:i8 = var
%2:i8 = xor %0, %1
infer %2


--------------------------------
guess 0

%0:i8 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -128
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i8 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i8 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 3 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))
%1:i32 = addnw 1:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 9
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32))
%1:i32 = addnw 1:i32, %0 (hasExternalUses)
%2:i1 = eq 32:i32, %1
infer %2


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = add 1:i64, %0
infer %1


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 4 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = var
%2:i64 = add 1:i64, %1 (hasExternalUses)
%3:i1 = ult %0, %2
infer %3


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxx00000) (range=[0,-31))
%2:i32 = sub %0, %1
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxx00000) (range=[0,-31))

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 3 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 4 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxx00000) (range=[0,-31))
%2:i32 = sub %0, %1 (hasExternalUses)
%3:i1 = ult %2, 32:i32
infer %3


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 5 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxx00000) (range=[0,-31))
%2:i32 = sub %0, %1
%3:i1 = ult %2, 32:i32
%4:i32 = select %3, %2, 32:i32
infer %4


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 32
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxx00000) (range=[0,-31))

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var
%1:i32 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxx00000) (range=[0,-31))
%2:i32 = sub %0, %1

Cost = 1
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 4 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = shl %1, 5:i32
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 32
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 5 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i32 = shl %1, 5:i32 (hasExternalUses)
%3:i32 = var
%4:i1 = ult %2, %3
infer %4


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for escrypt_PBKDF2_SHA256()
Total of 0 replacements done on this module
Total of 0 replacements candidates on this module
