; entering Souper's runOnFunction() for crypto_sign_ed25519_open()

; ModuleID = './open.c.bc'
source_filename = "crypto_sign/ed25519/ref10/open.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_hash_sha512_state = type { [8 x i64], [2 x i64], [128 x i8] }
%struct.ge25519_p3 = type { [10 x i32], [10 x i32], [10 x i32], [10 x i32] }
%struct.ge25519_p2 = type { [10 x i32], [10 x i32], [10 x i32] }

; Function Attrs: nounwind
define hidden i32 @_crypto_sign_ed25519_verify_detached(i8* %0, i8* %1, i64 %2, i8* %3, i32 %4) local_unnamed_addr #0 {
  %6 = alloca %struct.crypto_hash_sha512_state, align 8
  %7 = alloca [64 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = alloca %struct.ge25519_p3, align 4
  %10 = alloca %struct.ge25519_p2, align 4
  %11 = bitcast %struct.crypto_hash_sha512_state* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %11) #4
  %12 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %12) #4
  %13 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #4
  %14 = bitcast %struct.ge25519_p3* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %14) #4
  %15 = bitcast %struct.ge25519_p2* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %15) #4
  %16 = getelementptr i8, i8* %0, i32 32
  %17 = tail call i32 @sc25519_is_canonical(i8* %16) #4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %41, label %19

19:                                               ; preds = %5
  %20 = tail call i32 @ge25519_has_small_order(i8* %0) #4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %41

22:                                               ; preds = %19
  %23 = tail call i32 @ge25519_is_canonical(i8* %3) #4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %22
  %26 = tail call i32 @ge25519_has_small_order(i8* %3) #4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %41

28:                                               ; preds = %25
  %29 = call i32 @ge25519_frombytes_negate_vartime(%struct.ge25519_p3* nonnull %9, i8* %3) #4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %41

31:                                               ; preds = %28
  call void @_crypto_sign_ed25519_ref10_hinit(%struct.crypto_hash_sha512_state* nonnull %6, i32 %4) #4
  %32 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %6, i8* %0, i64 32) #4
  %33 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %6, i8* %3, i64 32) #4
  %34 = call i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* nonnull %6, i8* %1, i64 %2) #4
  %35 = call i32 @crypto_hash_sha512_final(%struct.crypto_hash_sha512_state* nonnull %6, i8* nonnull %12) #4
  call void @sc25519_reduce(i8* nonnull %12) #4
  call void @ge25519_double_scalarmult_vartime(%struct.ge25519_p2* nonnull %10, i8* nonnull %12, %struct.ge25519_p3* nonnull %9, i8* %16) #4
  call void @ge25519_tobytes(i8* nonnull %13, %struct.ge25519_p2* nonnull %10) #4
  %36 = call i32 @crypto_verify_32(i8* nonnull %13, i8* %0) #4
  %37 = icmp eq i8* %13, %0
  %38 = select i1 %37, i32 -1, i32 %36
  %39 = call i32 @sodium_memcmp(i8* %0, i8* nonnull %13, i32 32) #4
  %40 = or i32 %38, %39
  br label %41

41:                                               ; preds = %28, %22, %25, %5, %19, %31
  %42 = phi i32 [ %40, %31 ], [ -1, %19 ], [ -1, %5 ], [ -1, %25 ], [ -1, %22 ], [ -1, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %12) #4
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %11) #4
  ret i32 %42
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @sc25519_is_canonical(i8* %0) local_unnamed_addr #2

declare i32 @ge25519_has_small_order(i8* %0) local_unnamed_addr #2

declare i32 @ge25519_is_canonical(i8* %0) local_unnamed_addr #2

declare i32 @ge25519_frombytes_negate_vartime(%struct.ge25519_p3* %0, i8* %1) local_unnamed_addr #2

declare void @_crypto_sign_ed25519_ref10_hinit(%struct.crypto_hash_sha512_state* %0, i32 %1) local_unnamed_addr #2

declare i32 @crypto_hash_sha512_update(%struct.crypto_hash_sha512_state* %0, i8* %1, i64 %2) local_unnamed_addr #2

declare i32 @crypto_hash_sha512_final(%struct.crypto_hash_sha512_state* %0, i8* %1) local_unnamed_addr #2

declare void @sc25519_reduce(i8* %0) local_unnamed_addr #2

declare void @ge25519_double_scalarmult_vartime(%struct.ge25519_p2* %0, i8* %1, %struct.ge25519_p3* %2, i8* %3) local_unnamed_addr #2

declare void @ge25519_tobytes(i8* %0, %struct.ge25519_p2* %1) local_unnamed_addr #2

declare i32 @crypto_verify_32(i8* %0, i8* %1) local_unnamed_addr #2

declare i32 @sodium_memcmp(i8* %0, i8* %1, i32 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_sign_ed25519_verify_detached(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3) local_unnamed_addr #0 {
  %5 = tail call i32 @_crypto_sign_ed25519_verify_detached(i8* nonnull %0, i8* %1, i64 %2, i8* nonnull %3, i32 0)
  ret i32 %5
}

; Function Attrs: nounwind
define i32 @crypto_sign_ed25519_open(i8* %0, i64* %1, i8* nonnull %2, i64 %3, i8* nonnull %4) local_unnamed_addr #0 {
  %6 = icmp ult i64 %3, 64
  br i1 %6, label %25, label %7

7:                                                ; preds = %5
  %8 = add i64 %3, -64
  %9 = icmp ugt i64 %8, 4294967231
  br i1 %9, label %25, label %10

10:                                               ; preds = %7
  %11 = getelementptr i8, i8* %2, i32 64
  %12 = tail call i32 @_crypto_sign_ed25519_verify_detached(i8* nonnull %2, i8* %11, i64 %8, i8* nonnull %4, i32 0) #4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = icmp eq i8* %0, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %14
  %17 = trunc i64 %8 to i32
  tail call void @llvm.memset.p0i8.i32(i8* nonnull align 1 %0, i8 0, i32 %17, i1 false)
  br label %25

18:                                               ; preds = %10
  %19 = icmp eq i64* %1, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %18
  store i64 %8, i64* %1, align 8
  br label %21

21:                                               ; preds = %18, %20
  %22 = icmp eq i8* %0, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = trunc i64 %8 to i32
  tail call void @llvm.memmove.p0i8.p0i8.i32(i8* nonnull align 1 %0, i8* align 1 %11, i32 %24, i1 false)
  br label %28

25:                                               ; preds = %14, %16, %5, %7
  %26 = icmp eq i64* %1, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %25
  store i64 0, i64* %1, align 8
  br label %28

28:                                               ; preds = %27, %25, %23, %21
  %29 = phi i32 [ 0, %21 ], [ 0, %23 ], [ -1, %25 ], [ -1, %27 ]
  ret i32 %29
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i32(i8* nocapture %0, i8* nocapture readonly %1, i32 %2, i1 immarg %3) #1

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn writeonly }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %6 = icmp ult i64 %3, 64
; Looking for a replacement for:
%0:i64 = var
%1:i1 = ult %0, 64:i64
infer %1

; *****
; For LLVM instruction:
;  %8 = add i64 %3, -64
; Looking for a replacement for:
%0:i64 = var
%1:i1 = ult %0, 64:i64
pc %1 0:i1
%2:i64 = add 18446744073709551552:i64, %0
infer %2

; *****
; For LLVM instruction:
;  %9 = icmp ugt i64 %8, 4294967231
; Looking for a replacement for:
%0:i64 = var
%1:i1 = ult %0, 64:i64
pc %1 0:i1
%2:i64 = add 18446744073709551552:i64, %0 (hasExternalUses)
%3:i1 = ult 4294967231:i64, %2
infer %3

; *****
; For LLVM instruction:
;  %12 = tail call i32 @_crypto_sign_ed25519_verify_detached(i8* nonnull %2, i8* %11, i64 %8, i8* nonnull %4, i32 0) #4
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %13 = icmp eq i32 %12, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %15 = icmp eq i8* %0, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %17 = trunc i64 %8 to i32
; Looking for a replacement for:
%0:i64 = var
%1:i1 = ult %0, 64:i64
pc %1 0:i1
%2:i64 = add 18446744073709551552:i64, %0 (hasExternalUses)
%3:i1 = ult 4294967231:i64, %2
pc %3 0:i1
%4:i32 = trunc %2
infer %4

; *****
; For LLVM instruction:
;  %19 = icmp eq i64* %1, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %22 = icmp eq i8* %0, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %24 = trunc i64 %8 to i32
; Looking for a replacement for:
%0:i64 = var
%1:i64 = add 18446744073709551552:i64, %0 (hasExternalUses)
%2:i32 = trunc %1
infer %2

; *****
; For LLVM instruction:
;  %26 = icmp eq i64* %1, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %29 = phi i32 [ 0, %21 ], [ 0, %23 ], [ -1, %25 ], [ -1, %27 ]
; Looking for a replacement for:
%0 = block 4
%1:i32 = phi %0, 0:i32, 0:i32, 4294967295:i32, 4294967295:i32
infer %1
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i1 = ult %0, 64:i64
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i1 = ult %0, 64:i64
pc %1 0:i1
%2:i64 = add 18446744073709551552:i64, %0
infer %2


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 9223372036854775744
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i1 = ult %0, 64:i64
pc %1 0:i1
%2:i64 = add 18446744073709551552:i64, %0 (hasExternalUses)
%3:i1 = ult 4294967231:i64, %2
infer %3


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i1 = ult %0, 64:i64
pc %1 0:i1
%2:i64 = add 18446744073709551552:i64, %0 (hasExternalUses)
%3:i1 = ult 4294967231:i64, %2
pc %3 0:i1
%4:i32 = trunc %2
infer %4


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 2147483584
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 2147483588
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = add 18446744073709551552:i64, %0 (hasExternalUses)
%2:i32 = trunc %1
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -64
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -65
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0 = block 4
%1:i32 = phi %0, 0:i32, 0:i32, 4294967295:i32, 4294967295:i32
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for crypto_sign_ed25519_open()
Total of 0 replacements done on this module
Total of 0 replacements candidates on this module
