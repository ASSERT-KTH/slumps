
Entering the Souper pass's runOnModule()


; entering Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_encrypt_detached()

; ModuleID = './aead_xchacha20poly1305.c.bc'
source_filename = "crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_onetimeauth_poly1305_state = type { [256 x i8] }

@_pad0 = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* nonnull %0, i8* nonnull %1, i64* %2, i8* %3, i64 %4, i8* %5, i64 %6, i8* nocapture readnone %7, i8* nonnull %8, i8* nonnull %9) local_unnamed_addr #0 {
  %11 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %12 = alloca [64 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %8, i8* nonnull %9, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %8, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %11, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %29 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* %5, i64 %6) #6
  %31 = sub i64 0, %6
  %32 = and i64 %31, 15
  %33 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %32) #6
  %34 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* %3, i64 %4, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %0, i64 %4) #6
  %36 = sub i64 0, %4
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %13, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  store i64 %4, i64* %13, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %1) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = icmp eq i64* %2, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %10
  store i64 16, i64* %2, align 8
  br label %44

44:                                               ; preds = %10, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #2

declare i32 @crypto_core_hchacha20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #3

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt(i8* nonnull %0, i64* %1, i8* %2, i64 %3, i8* %4, i64 %5, i8* nocapture readnone %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %3, 4294967279
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @sodium_misuse() #7
  unreachable

12:                                               ; preds = %9
  %13 = trunc i64 %3 to i32
  %14 = getelementptr i8, i8* %0, i32 %13
  %15 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* %0, i8* %14, i64* null, i8* %2, i64 %3, i8* %4, i64 %5, i8* undef, i8* %7, i8* %8)
  %16 = icmp eq i64* %1, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = add nuw nsw i64 %3, 16
  store i64 %18, i64* %1, align 8
  br label %19

19:                                               ; preds = %12, %17
  ret i32 0
}

; Function Attrs: noreturn
declare void @sodium_misuse() local_unnamed_addr #4

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* nocapture readnone %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %11 = alloca [64 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca [16 x i8], align 16
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %7, i8* nonnull %8, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %7, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %10, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %29 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %31 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* %5, i64 %6) #6
  %32 = sub i64 0, %6
  %33 = and i64 %32, 15
  %34 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %33) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %2, i64 %3) #6
  %36 = sub i64 0, %3
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %12, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  store i64 %3, i64* %12, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %28) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = call i32 @crypto_verify_16(i8* nonnull %28, i8* nonnull %4) #6
  call void @sodium_memzero(i8* nonnull %28, i32 16) #6
  %43 = icmp eq i8* %0, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %9
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = trunc i64 %3 to i32
  call void @llvm.memset.p0i8.i32(i8* nonnull align 1 %0, i8 0, i32 %47, i1 false) #6
  br label %50

48:                                               ; preds = %44
  %49 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* nonnull %2, i64 %3, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  br label %50

50:                                               ; preds = %9, %46, %48
  %51 = phi i32 [ -1, %46 ], [ 0, %48 ], [ %42, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %51
}

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt(i8* %0, i64* %1, i8* nocapture readnone %2, i8* nonnull %3, i64 %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %4, 15
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = add i64 %4, -16
  %13 = trunc i64 %4 to i32
  %14 = getelementptr i8, i8* %3, i32 %13
  %15 = getelementptr i8, i8* %14, i32 -16
  %16 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* undef, i8* %3, i64 %12, i8* %15, i8* %5, i64 %6, i8* %7, i8* %8)
  br label %17

17:                                               ; preds = %11, %9
  %18 = phi i32 [ %16, %11 ], [ -1, %9 ]
  %19 = icmp eq i64* %1, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = icmp eq i32 %18, 0
  %22 = add i64 %4, -16
  %23 = select i1 %21, i64 %22, i64 0
  store i64 %23, i64* %1, align 8
  br label %24

24:                                               ; preds = %17, %20
  ret i32 %18
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_keybytes() local_unnamed_addr #5 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_npubbytes() local_unnamed_addr #5 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_nsecbytes() local_unnamed_addr #5 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_abytes() local_unnamed_addr #5 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_messagebytes_max() local_unnamed_addr #5 {
  ret i32 -17
}

; Function Attrs: nounwind
define void @crypto_aead_xchacha20poly1305_ietf_keygen(i8* nonnull %0) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %0, i32 32) #6
  ret void
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext(i8* %0, i64 %1, i8* %2, i8* %3) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1, i64 %2) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* %0, i8* %1, i64 %2, i8* %3, i32 %4, i8* %5) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_verify_16(i8* %0, i8* %1) local_unnamed_addr #3

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { argmemonly nounwind willreturn writeonly }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %24 = load i64, i64* %22, align 1
; Looking for a replacement for:
%0:i64 = var
infer %0

; *****
; For LLVM instruction:
;  %31 = sub i64 0, %6
; Looking for a replacement for:
%0:i64 = var
%1:i64 = sub 0:i64, %0
infer %1 (demandedBits=0000000000000000000000000000000000000000000000000000000000001111)

; *****
; For LLVM instruction:
;  %32 = and i64 %31, 15
; Looking for a replacement for:
%0:i64 = var
%1:i64 = sub 0:i64, %0
%2:i64 = and 15:i64, %1
infer %2

; *****
; For LLVM instruction:
;  %36 = sub i64 0, %4
; Looking for a replacement for:
%0:i64 = var
%1:i64 = sub 0:i64, %0
infer %1 (demandedBits=0000000000000000000000000000000000000000000000000000000000001111)

; *****
; For LLVM instruction:
;  %37 = and i64 %36, 15
; Looking for a replacement for:
%0:i64 = var
%1:i64 = sub 0:i64, %0
%2:i64 = and 15:i64, %1
infer %2

; *****
; For LLVM instruction:
;  %42 = icmp eq i64* %2, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1
got 1 candidates from LHS

-------------------------------------------------
%0:i64 = var
infer %0


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = sub 0:i64, %0
infer %1 (demandedBits=0000000000000000000000000000000000000000000000000000000000001111)


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -15
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = sub 0:i64, %0
%2:i64 = and 15:i64, %1
infer %2


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i64 = var
%1:i64 = sub 0:i64, %0

Cost = 1
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 3 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_encrypt_detached()

; entering Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_encrypt()

; ModuleID = './aead_xchacha20poly1305.c.bc'
source_filename = "crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_onetimeauth_poly1305_state = type { [256 x i8] }

@_pad0 = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* nonnull %0, i8* nonnull %1, i64* %2, i8* %3, i64 %4, i8* %5, i64 %6, i8* nocapture readnone %7, i8* nonnull %8, i8* nonnull %9) local_unnamed_addr #0 {
  %11 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %12 = alloca [64 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %8, i8* nonnull %9, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %8, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %11, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %29 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* %5, i64 %6) #6
  %31 = sub i64 0, %6
  %32 = and i64 %31, 15
  %33 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %32) #6
  %34 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* %3, i64 %4, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %0, i64 %4) #6
  %36 = sub i64 0, %4
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %13, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  store i64 %4, i64* %13, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %1) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = icmp eq i64* %2, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %10
  store i64 16, i64* %2, align 8
  br label %44

44:                                               ; preds = %10, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #2

declare i32 @crypto_core_hchacha20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #3

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt(i8* nonnull %0, i64* %1, i8* %2, i64 %3, i8* %4, i64 %5, i8* nocapture readnone %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %3, 4294967279
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @sodium_misuse() #7
  unreachable

12:                                               ; preds = %9
  %13 = trunc i64 %3 to i32
  %14 = getelementptr i8, i8* %0, i32 %13
  %15 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* %0, i8* %14, i64* null, i8* %2, i64 %3, i8* %4, i64 %5, i8* undef, i8* %7, i8* %8)
  %16 = icmp eq i64* %1, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = add nuw nsw i64 %3, 16
  store i64 %18, i64* %1, align 8
  br label %19

19:                                               ; preds = %12, %17
  ret i32 0
}

; Function Attrs: noreturn
declare void @sodium_misuse() local_unnamed_addr #4

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* nocapture readnone %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %11 = alloca [64 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca [16 x i8], align 16
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %7, i8* nonnull %8, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %7, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %10, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %29 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %31 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* %5, i64 %6) #6
  %32 = sub i64 0, %6
  %33 = and i64 %32, 15
  %34 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %33) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %2, i64 %3) #6
  %36 = sub i64 0, %3
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %12, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  store i64 %3, i64* %12, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %28) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = call i32 @crypto_verify_16(i8* nonnull %28, i8* nonnull %4) #6
  call void @sodium_memzero(i8* nonnull %28, i32 16) #6
  %43 = icmp eq i8* %0, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %9
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = trunc i64 %3 to i32
  call void @llvm.memset.p0i8.i32(i8* nonnull align 1 %0, i8 0, i32 %47, i1 false) #6
  br label %50

48:                                               ; preds = %44
  %49 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* nonnull %2, i64 %3, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  br label %50

50:                                               ; preds = %9, %46, %48
  %51 = phi i32 [ -1, %46 ], [ 0, %48 ], [ %42, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %51
}

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt(i8* %0, i64* %1, i8* nocapture readnone %2, i8* nonnull %3, i64 %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %4, 15
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = add i64 %4, -16
  %13 = trunc i64 %4 to i32
  %14 = getelementptr i8, i8* %3, i32 %13
  %15 = getelementptr i8, i8* %14, i32 -16
  %16 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* undef, i8* %3, i64 %12, i8* %15, i8* %5, i64 %6, i8* %7, i8* %8)
  br label %17

17:                                               ; preds = %11, %9
  %18 = phi i32 [ %16, %11 ], [ -1, %9 ]
  %19 = icmp eq i64* %1, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = icmp eq i32 %18, 0
  %22 = add i64 %4, -16
  %23 = select i1 %21, i64 %22, i64 0
  store i64 %23, i64* %1, align 8
  br label %24

24:                                               ; preds = %17, %20
  ret i32 %18
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_keybytes() local_unnamed_addr #5 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_npubbytes() local_unnamed_addr #5 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_nsecbytes() local_unnamed_addr #5 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_abytes() local_unnamed_addr #5 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_messagebytes_max() local_unnamed_addr #5 {
  ret i32 -17
}

; Function Attrs: nounwind
define void @crypto_aead_xchacha20poly1305_ietf_keygen(i8* nonnull %0) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %0, i32 32) #6
  ret void
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext(i8* %0, i64 %1, i8* %2, i8* %3) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1, i64 %2) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* %0, i8* %1, i64 %2, i8* %3, i32 %4, i8* %5) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_verify_16(i8* %0, i8* %1) local_unnamed_addr #3

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { argmemonly nounwind willreturn writeonly }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %10 = icmp ugt i64 %3, 4294967279
; Looking for a replacement for:
%0:i64 = var
%1:i1 = ult 4294967279:i64, %0
infer %1

; *****
; For LLVM instruction:
;  %13 = trunc i64 %3 to i32
; Looking for a replacement for:
%0:i64 = var
%1:i1 = ult 4294967279:i64, %0
pc %1 0:i1
%2:i32 = trunc %0
infer %2

; *****
; For LLVM instruction:
;  %16 = icmp eq i64* %1, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %18 = add nuw nsw i64 %3, 16
; Looking for a replacement for:
%0:i64 = var
%1:i1 = ult 4294967279:i64, %0
pc %1 0:i1
%2:i64 = addnw 16:i64, %0
infer %2
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i1 = ult 4294967279:i64, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i1 = ult 4294967279:i64, %0
pc %1 0:i1
%2:i32 = trunc %0
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 536870912
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i1 = ult 4294967279:i64, %0
pc %1 0:i1
%2:i64 = addnw 16:i64, %0
infer %2


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 16
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 536870928
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_encrypt()

; entering Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_decrypt_detached()

; ModuleID = './aead_xchacha20poly1305.c.bc'
source_filename = "crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_onetimeauth_poly1305_state = type { [256 x i8] }

@_pad0 = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* nonnull %0, i8* nonnull %1, i64* %2, i8* %3, i64 %4, i8* %5, i64 %6, i8* nocapture readnone %7, i8* nonnull %8, i8* nonnull %9) local_unnamed_addr #0 {
  %11 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %12 = alloca [64 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %8, i8* nonnull %9, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %8, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %11, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %29 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* %5, i64 %6) #6
  %31 = sub i64 0, %6
  %32 = and i64 %31, 15
  %33 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %32) #6
  %34 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* %3, i64 %4, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %0, i64 %4) #6
  %36 = sub i64 0, %4
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %13, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  store i64 %4, i64* %13, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %1) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = icmp eq i64* %2, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %10
  store i64 16, i64* %2, align 8
  br label %44

44:                                               ; preds = %10, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #2

declare i32 @crypto_core_hchacha20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #3

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt(i8* nonnull %0, i64* %1, i8* %2, i64 %3, i8* %4, i64 %5, i8* nocapture readnone %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %3, 4294967279
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @sodium_misuse() #7
  unreachable

12:                                               ; preds = %9
  %13 = trunc i64 %3 to i32
  %14 = getelementptr i8, i8* %0, i32 %13
  %15 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* %0, i8* %14, i64* null, i8* %2, i64 %3, i8* %4, i64 %5, i8* undef, i8* %7, i8* %8)
  %16 = icmp eq i64* %1, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = add nuw nsw i64 %3, 16
  store i64 %18, i64* %1, align 8
  br label %19

19:                                               ; preds = %12, %17
  ret i32 0
}

; Function Attrs: noreturn
declare void @sodium_misuse() local_unnamed_addr #4

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* nocapture readnone %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %11 = alloca [64 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca [16 x i8], align 16
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %7, i8* nonnull %8, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %7, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %10, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %29 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %31 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* %5, i64 %6) #6
  %32 = sub i64 0, %6
  %33 = and i64 %32, 15
  %34 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %33) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %2, i64 %3) #6
  %36 = sub i64 0, %3
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %12, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  store i64 %3, i64* %12, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %28) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = call i32 @crypto_verify_16(i8* nonnull %28, i8* nonnull %4) #6
  call void @sodium_memzero(i8* nonnull %28, i32 16) #6
  %43 = icmp eq i8* %0, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %9
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = trunc i64 %3 to i32
  call void @llvm.memset.p0i8.i32(i8* nonnull align 1 %0, i8 0, i32 %47, i1 false) #6
  br label %50

48:                                               ; preds = %44
  %49 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* nonnull %2, i64 %3, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  br label %50

50:                                               ; preds = %9, %46, %48
  %51 = phi i32 [ -1, %46 ], [ 0, %48 ], [ %42, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %51
}

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt(i8* %0, i64* %1, i8* nocapture readnone %2, i8* nonnull %3, i64 %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %4, 15
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = add i64 %4, -16
  %13 = trunc i64 %4 to i32
  %14 = getelementptr i8, i8* %3, i32 %13
  %15 = getelementptr i8, i8* %14, i32 -16
  %16 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* undef, i8* %3, i64 %12, i8* %15, i8* %5, i64 %6, i8* %7, i8* %8)
  br label %17

17:                                               ; preds = %11, %9
  %18 = phi i32 [ %16, %11 ], [ -1, %9 ]
  %19 = icmp eq i64* %1, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = icmp eq i32 %18, 0
  %22 = add i64 %4, -16
  %23 = select i1 %21, i64 %22, i64 0
  store i64 %23, i64* %1, align 8
  br label %24

24:                                               ; preds = %17, %20
  ret i32 %18
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_keybytes() local_unnamed_addr #5 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_npubbytes() local_unnamed_addr #5 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_nsecbytes() local_unnamed_addr #5 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_abytes() local_unnamed_addr #5 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_messagebytes_max() local_unnamed_addr #5 {
  ret i32 -17
}

; Function Attrs: nounwind
define void @crypto_aead_xchacha20poly1305_ietf_keygen(i8* nonnull %0) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %0, i32 32) #6
  ret void
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext(i8* %0, i64 %1, i8* %2, i8* %3) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1, i64 %2) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* %0, i8* %1, i64 %2, i8* %3, i32 %4, i8* %5) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_verify_16(i8* %0, i8* %1) local_unnamed_addr #3

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { argmemonly nounwind willreturn writeonly }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %24 = load i64, i64* %22, align 1
; Looking for a replacement for:
%0:i64 = var
infer %0

; *****
; For LLVM instruction:
;  %32 = sub i64 0, %6
; Looking for a replacement for:
%0:i64 = var
%1:i64 = sub 0:i64, %0
infer %1 (demandedBits=0000000000000000000000000000000000000000000000000000000000001111)

; *****
; For LLVM instruction:
;  %33 = and i64 %32, 15
; Looking for a replacement for:
%0:i64 = var
%1:i64 = sub 0:i64, %0
%2:i64 = and 15:i64, %1
infer %2

; *****
; For LLVM instruction:
;  %36 = sub i64 0, %3
; Looking for a replacement for:
%0:i64 = var
%1:i64 = sub 0:i64, %0
infer %1 (demandedBits=0000000000000000000000000000000000000000000000000000000000001111)

; *****
; For LLVM instruction:
;  %37 = and i64 %36, 15
; Looking for a replacement for:
%0:i64 = var
%1:i64 = sub 0:i64, %0
%2:i64 = and 15:i64, %1
infer %2

; *****
; For LLVM instruction:
;  %42 = call i32 @crypto_verify_16(i8* nonnull %28, i8* nonnull %4) #6
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %43 = icmp eq i8* %0, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %45 = icmp eq i32 %42, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %47 = trunc i64 %3 to i32
; Looking for a replacement for:
%0:i64 = var
%1:i32 = trunc %0
infer %1

; *****
; For LLVM instruction:
;  %51 = phi i32 [ -1, %46 ], [ 0, %48 ], [ %42, %9 ]
; Looking for a replacement for:
%0 = block 3
%1:i32 = var
%2:i32 = phi %0, 4294967295:i32, 0:i32, %1
infer %2
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i32 = trunc %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0 = block 3
%1:i32 = var
%2:i32 = phi %0, 4294967295:i32, 0:i32, %1
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_decrypt_detached()

; entering Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_decrypt()

; ModuleID = './aead_xchacha20poly1305.c.bc'
source_filename = "crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_onetimeauth_poly1305_state = type { [256 x i8] }

@_pad0 = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* nonnull %0, i8* nonnull %1, i64* %2, i8* %3, i64 %4, i8* %5, i64 %6, i8* nocapture readnone %7, i8* nonnull %8, i8* nonnull %9) local_unnamed_addr #0 {
  %11 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %12 = alloca [64 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %8, i8* nonnull %9, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %8, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %11, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %29 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* %5, i64 %6) #6
  %31 = sub i64 0, %6
  %32 = and i64 %31, 15
  %33 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %32) #6
  %34 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* %3, i64 %4, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %0, i64 %4) #6
  %36 = sub i64 0, %4
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %13, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  store i64 %4, i64* %13, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %1) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = icmp eq i64* %2, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %10
  store i64 16, i64* %2, align 8
  br label %44

44:                                               ; preds = %10, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #2

declare i32 @crypto_core_hchacha20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #3

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt(i8* nonnull %0, i64* %1, i8* %2, i64 %3, i8* %4, i64 %5, i8* nocapture readnone %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %3, 4294967279
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @sodium_misuse() #7
  unreachable

12:                                               ; preds = %9
  %13 = trunc i64 %3 to i32
  %14 = getelementptr i8, i8* %0, i32 %13
  %15 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* %0, i8* %14, i64* null, i8* %2, i64 %3, i8* %4, i64 %5, i8* undef, i8* %7, i8* %8)
  %16 = icmp eq i64* %1, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = add nuw nsw i64 %3, 16
  store i64 %18, i64* %1, align 8
  br label %19

19:                                               ; preds = %12, %17
  ret i32 0
}

; Function Attrs: noreturn
declare void @sodium_misuse() local_unnamed_addr #4

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* nocapture readnone %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %11 = alloca [64 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca [16 x i8], align 16
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %7, i8* nonnull %8, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %7, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %10, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %29 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %31 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* %5, i64 %6) #6
  %32 = sub i64 0, %6
  %33 = and i64 %32, 15
  %34 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %33) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %2, i64 %3) #6
  %36 = sub i64 0, %3
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %12, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  store i64 %3, i64* %12, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %28) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = call i32 @crypto_verify_16(i8* nonnull %28, i8* nonnull %4) #6
  call void @sodium_memzero(i8* nonnull %28, i32 16) #6
  %43 = icmp eq i8* %0, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %9
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = trunc i64 %3 to i32
  call void @llvm.memset.p0i8.i32(i8* nonnull align 1 %0, i8 0, i32 %47, i1 false) #6
  br label %50

48:                                               ; preds = %44
  %49 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* nonnull %2, i64 %3, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  br label %50

50:                                               ; preds = %9, %46, %48
  %51 = phi i32 [ -1, %46 ], [ 0, %48 ], [ %42, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %51
}

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt(i8* %0, i64* %1, i8* nocapture readnone %2, i8* nonnull %3, i64 %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %4, 15
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = add i64 %4, -16
  %13 = trunc i64 %4 to i32
  %14 = getelementptr i8, i8* %3, i32 %13
  %15 = getelementptr i8, i8* %14, i32 -16
  %16 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* undef, i8* %3, i64 %12, i8* %15, i8* %5, i64 %6, i8* %7, i8* %8)
  br label %17

17:                                               ; preds = %11, %9
  %18 = phi i32 [ %16, %11 ], [ -1, %9 ]
  %19 = icmp eq i64* %1, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = icmp eq i32 %18, 0
  %22 = add i64 %4, -16
  %23 = select i1 %21, i64 %22, i64 0
  store i64 %23, i64* %1, align 8
  br label %24

24:                                               ; preds = %17, %20
  ret i32 %18
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_keybytes() local_unnamed_addr #5 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_npubbytes() local_unnamed_addr #5 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_nsecbytes() local_unnamed_addr #5 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_abytes() local_unnamed_addr #5 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_messagebytes_max() local_unnamed_addr #5 {
  ret i32 -17
}

; Function Attrs: nounwind
define void @crypto_aead_xchacha20poly1305_ietf_keygen(i8* nonnull %0) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %0, i32 32) #6
  ret void
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext(i8* %0, i64 %1, i8* %2, i8* %3) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1, i64 %2) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* %0, i8* %1, i64 %2, i8* %3, i32 %4, i8* %5) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_verify_16(i8* %0, i8* %1) local_unnamed_addr #3

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { argmemonly nounwind willreturn writeonly }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %10 = icmp ugt i64 %4, 15
; Looking for a replacement for:
%0:i64 = var
%1:i1 = ult 15:i64, %0
infer %1

; *****
; For LLVM instruction:
;  %12 = add i64 %4, -16
; Looking for a replacement for:
%0:i64 = var
%1:i1 = ult 15:i64, %0
pc %1 1:i1
%2:i64 = add 18446744073709551600:i64, %0
infer %2

; *****
; For LLVM instruction:
;  %13 = trunc i64 %4 to i32
; Looking for a replacement for:
%0:i64 = var
%1:i1 = ult 15:i64, %0
pc %1 1:i1
%2:i32 = trunc %0
infer %2

; *****
; For LLVM instruction:
;  %16 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* undef, i8* %3, i64 %12, i8* %15, i8* %5, i64 %6, i8* %7, i8* %8)
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %18 = phi i32 [ %16, %11 ], [ -1, %9 ]
; Looking for a replacement for:
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32
infer %2

; *****
; For LLVM instruction:
;  %19 = icmp eq i64* %1, null
; Looking for a replacement for:
%0:i32 = var
%1:i1 = eq 0:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %21 = icmp eq i32 %18, 0
; Looking for a replacement for:
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32
%3:i1 = eq 0:i32, %2
infer %3

; *****
; For LLVM instruction:
;  %22 = add i64 %4, -16
; Looking for a replacement for:
%0:i64 = var
%1:i64 = add 18446744073709551600:i64, %0
infer %1

; *****
; For LLVM instruction:
;  %23 = select i1 %21, i64 %22, i64 0
; Looking for a replacement for:
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32
%3:i1 = eq 0:i32, %2
%4:i64 = var
%5:i64 = add 18446744073709551600:i64, %4
%6:i64 = select %3, %5, 0:i64
infer %6
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i1 = ult 15:i64, %0
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i1 = ult 15:i64, %0
pc %1 1:i1
%2:i64 = add 18446744073709551600:i64, %0
infer %2


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -32
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 15
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i1 = ult 15:i64, %0
pc %1 1:i1
%2:i32 = trunc %0
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -16
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 65551
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32
%3:i1 = eq 0:i32, %2
infer %3


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i64 = var
%1:i64 = add 18446744073709551600:i64, %0
infer %1


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -16
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -17
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 6 candidates from LHS

-------------------------------------------------
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4294967295:i32
%3:i1 = eq 0:i32, %2
%4:i64 = var
%5:i64 = add 18446744073709551600:i64, %4
%6:i64 = select %3, %5, 0:i64
infer %6


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i64 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i64 = var
%1:i64 = add 18446744073709551600:i64, %0

Cost = 1
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 3 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_decrypt()

; entering Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_keybytes()

; ModuleID = './aead_xchacha20poly1305.c.bc'
source_filename = "crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_onetimeauth_poly1305_state = type { [256 x i8] }

@_pad0 = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* nonnull %0, i8* nonnull %1, i64* %2, i8* %3, i64 %4, i8* %5, i64 %6, i8* nocapture readnone %7, i8* nonnull %8, i8* nonnull %9) local_unnamed_addr #0 {
  %11 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %12 = alloca [64 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %8, i8* nonnull %9, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %8, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %11, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %29 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* %5, i64 %6) #6
  %31 = sub i64 0, %6
  %32 = and i64 %31, 15
  %33 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %32) #6
  %34 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* %3, i64 %4, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %0, i64 %4) #6
  %36 = sub i64 0, %4
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %13, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  store i64 %4, i64* %13, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %1) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = icmp eq i64* %2, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %10
  store i64 16, i64* %2, align 8
  br label %44

44:                                               ; preds = %10, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #2

declare i32 @crypto_core_hchacha20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #3

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt(i8* nonnull %0, i64* %1, i8* %2, i64 %3, i8* %4, i64 %5, i8* nocapture readnone %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %3, 4294967279
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @sodium_misuse() #7
  unreachable

12:                                               ; preds = %9
  %13 = trunc i64 %3 to i32
  %14 = getelementptr i8, i8* %0, i32 %13
  %15 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* %0, i8* %14, i64* null, i8* %2, i64 %3, i8* %4, i64 %5, i8* undef, i8* %7, i8* %8)
  %16 = icmp eq i64* %1, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = add nuw nsw i64 %3, 16
  store i64 %18, i64* %1, align 8
  br label %19

19:                                               ; preds = %12, %17
  ret i32 0
}

; Function Attrs: noreturn
declare void @sodium_misuse() local_unnamed_addr #4

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* nocapture readnone %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %11 = alloca [64 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca [16 x i8], align 16
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %7, i8* nonnull %8, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %7, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %10, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %29 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %31 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* %5, i64 %6) #6
  %32 = sub i64 0, %6
  %33 = and i64 %32, 15
  %34 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %33) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %2, i64 %3) #6
  %36 = sub i64 0, %3
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %12, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  store i64 %3, i64* %12, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %28) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = call i32 @crypto_verify_16(i8* nonnull %28, i8* nonnull %4) #6
  call void @sodium_memzero(i8* nonnull %28, i32 16) #6
  %43 = icmp eq i8* %0, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %9
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = trunc i64 %3 to i32
  call void @llvm.memset.p0i8.i32(i8* nonnull align 1 %0, i8 0, i32 %47, i1 false) #6
  br label %50

48:                                               ; preds = %44
  %49 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* nonnull %2, i64 %3, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  br label %50

50:                                               ; preds = %9, %46, %48
  %51 = phi i32 [ -1, %46 ], [ 0, %48 ], [ %42, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %51
}

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt(i8* %0, i64* %1, i8* nocapture readnone %2, i8* nonnull %3, i64 %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %4, 15
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = add i64 %4, -16
  %13 = trunc i64 %4 to i32
  %14 = getelementptr i8, i8* %3, i32 %13
  %15 = getelementptr i8, i8* %14, i32 -16
  %16 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* undef, i8* %3, i64 %12, i8* %15, i8* %5, i64 %6, i8* %7, i8* %8)
  br label %17

17:                                               ; preds = %11, %9
  %18 = phi i32 [ %16, %11 ], [ -1, %9 ]
  %19 = icmp eq i64* %1, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = icmp eq i32 %18, 0
  %22 = add i64 %4, -16
  %23 = select i1 %21, i64 %22, i64 0
  store i64 %23, i64* %1, align 8
  br label %24

24:                                               ; preds = %17, %20
  ret i32 %18
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_keybytes() local_unnamed_addr #5 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_npubbytes() local_unnamed_addr #5 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_nsecbytes() local_unnamed_addr #5 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_abytes() local_unnamed_addr #5 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_messagebytes_max() local_unnamed_addr #5 {
  ret i32 -17
}

; Function Attrs: nounwind
define void @crypto_aead_xchacha20poly1305_ietf_keygen(i8* nonnull %0) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %0, i32 32) #6
  ret void
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext(i8* %0, i64 %1, i8* %2, i8* %3) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1, i64 %2) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* %0, i8* %1, i64 %2, i8* %3, i32 %4, i8* %5) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_verify_16(i8* %0, i8* %1) local_unnamed_addr #3

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { argmemonly nounwind willreturn writeonly }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_keybytes()

; entering Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_npubbytes()

; ModuleID = './aead_xchacha20poly1305.c.bc'
source_filename = "crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_onetimeauth_poly1305_state = type { [256 x i8] }

@_pad0 = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* nonnull %0, i8* nonnull %1, i64* %2, i8* %3, i64 %4, i8* %5, i64 %6, i8* nocapture readnone %7, i8* nonnull %8, i8* nonnull %9) local_unnamed_addr #0 {
  %11 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %12 = alloca [64 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %8, i8* nonnull %9, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %8, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %11, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %29 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* %5, i64 %6) #6
  %31 = sub i64 0, %6
  %32 = and i64 %31, 15
  %33 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %32) #6
  %34 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* %3, i64 %4, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %0, i64 %4) #6
  %36 = sub i64 0, %4
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %13, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  store i64 %4, i64* %13, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %1) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = icmp eq i64* %2, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %10
  store i64 16, i64* %2, align 8
  br label %44

44:                                               ; preds = %10, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #2

declare i32 @crypto_core_hchacha20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #3

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt(i8* nonnull %0, i64* %1, i8* %2, i64 %3, i8* %4, i64 %5, i8* nocapture readnone %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %3, 4294967279
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @sodium_misuse() #7
  unreachable

12:                                               ; preds = %9
  %13 = trunc i64 %3 to i32
  %14 = getelementptr i8, i8* %0, i32 %13
  %15 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* %0, i8* %14, i64* null, i8* %2, i64 %3, i8* %4, i64 %5, i8* undef, i8* %7, i8* %8)
  %16 = icmp eq i64* %1, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = add nuw nsw i64 %3, 16
  store i64 %18, i64* %1, align 8
  br label %19

19:                                               ; preds = %12, %17
  ret i32 0
}

; Function Attrs: noreturn
declare void @sodium_misuse() local_unnamed_addr #4

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* nocapture readnone %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %11 = alloca [64 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca [16 x i8], align 16
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %7, i8* nonnull %8, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %7, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %10, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %29 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %31 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* %5, i64 %6) #6
  %32 = sub i64 0, %6
  %33 = and i64 %32, 15
  %34 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %33) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %2, i64 %3) #6
  %36 = sub i64 0, %3
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %12, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  store i64 %3, i64* %12, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %28) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = call i32 @crypto_verify_16(i8* nonnull %28, i8* nonnull %4) #6
  call void @sodium_memzero(i8* nonnull %28, i32 16) #6
  %43 = icmp eq i8* %0, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %9
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = trunc i64 %3 to i32
  call void @llvm.memset.p0i8.i32(i8* nonnull align 1 %0, i8 0, i32 %47, i1 false) #6
  br label %50

48:                                               ; preds = %44
  %49 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* nonnull %2, i64 %3, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  br label %50

50:                                               ; preds = %9, %46, %48
  %51 = phi i32 [ -1, %46 ], [ 0, %48 ], [ %42, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %51
}

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt(i8* %0, i64* %1, i8* nocapture readnone %2, i8* nonnull %3, i64 %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %4, 15
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = add i64 %4, -16
  %13 = trunc i64 %4 to i32
  %14 = getelementptr i8, i8* %3, i32 %13
  %15 = getelementptr i8, i8* %14, i32 -16
  %16 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* undef, i8* %3, i64 %12, i8* %15, i8* %5, i64 %6, i8* %7, i8* %8)
  br label %17

17:                                               ; preds = %11, %9
  %18 = phi i32 [ %16, %11 ], [ -1, %9 ]
  %19 = icmp eq i64* %1, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = icmp eq i32 %18, 0
  %22 = add i64 %4, -16
  %23 = select i1 %21, i64 %22, i64 0
  store i64 %23, i64* %1, align 8
  br label %24

24:                                               ; preds = %17, %20
  ret i32 %18
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_keybytes() local_unnamed_addr #5 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_npubbytes() local_unnamed_addr #5 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_nsecbytes() local_unnamed_addr #5 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_abytes() local_unnamed_addr #5 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_messagebytes_max() local_unnamed_addr #5 {
  ret i32 -17
}

; Function Attrs: nounwind
define void @crypto_aead_xchacha20poly1305_ietf_keygen(i8* nonnull %0) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %0, i32 32) #6
  ret void
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext(i8* %0, i64 %1, i8* %2, i8* %3) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1, i64 %2) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* %0, i8* %1, i64 %2, i8* %3, i32 %4, i8* %5) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_verify_16(i8* %0, i8* %1) local_unnamed_addr #3

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { argmemonly nounwind willreturn writeonly }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_npubbytes()

; entering Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_nsecbytes()

; ModuleID = './aead_xchacha20poly1305.c.bc'
source_filename = "crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_onetimeauth_poly1305_state = type { [256 x i8] }

@_pad0 = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* nonnull %0, i8* nonnull %1, i64* %2, i8* %3, i64 %4, i8* %5, i64 %6, i8* nocapture readnone %7, i8* nonnull %8, i8* nonnull %9) local_unnamed_addr #0 {
  %11 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %12 = alloca [64 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %8, i8* nonnull %9, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %8, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %11, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %29 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* %5, i64 %6) #6
  %31 = sub i64 0, %6
  %32 = and i64 %31, 15
  %33 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %32) #6
  %34 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* %3, i64 %4, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %0, i64 %4) #6
  %36 = sub i64 0, %4
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %13, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  store i64 %4, i64* %13, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %1) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = icmp eq i64* %2, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %10
  store i64 16, i64* %2, align 8
  br label %44

44:                                               ; preds = %10, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #2

declare i32 @crypto_core_hchacha20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #3

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt(i8* nonnull %0, i64* %1, i8* %2, i64 %3, i8* %4, i64 %5, i8* nocapture readnone %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %3, 4294967279
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @sodium_misuse() #7
  unreachable

12:                                               ; preds = %9
  %13 = trunc i64 %3 to i32
  %14 = getelementptr i8, i8* %0, i32 %13
  %15 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* %0, i8* %14, i64* null, i8* %2, i64 %3, i8* %4, i64 %5, i8* undef, i8* %7, i8* %8)
  %16 = icmp eq i64* %1, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = add nuw nsw i64 %3, 16
  store i64 %18, i64* %1, align 8
  br label %19

19:                                               ; preds = %12, %17
  ret i32 0
}

; Function Attrs: noreturn
declare void @sodium_misuse() local_unnamed_addr #4

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* nocapture readnone %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %11 = alloca [64 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca [16 x i8], align 16
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %7, i8* nonnull %8, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %7, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %10, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %29 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %31 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* %5, i64 %6) #6
  %32 = sub i64 0, %6
  %33 = and i64 %32, 15
  %34 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %33) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %2, i64 %3) #6
  %36 = sub i64 0, %3
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %12, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  store i64 %3, i64* %12, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %28) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = call i32 @crypto_verify_16(i8* nonnull %28, i8* nonnull %4) #6
  call void @sodium_memzero(i8* nonnull %28, i32 16) #6
  %43 = icmp eq i8* %0, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %9
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = trunc i64 %3 to i32
  call void @llvm.memset.p0i8.i32(i8* nonnull align 1 %0, i8 0, i32 %47, i1 false) #6
  br label %50

48:                                               ; preds = %44
  %49 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* nonnull %2, i64 %3, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  br label %50

50:                                               ; preds = %9, %46, %48
  %51 = phi i32 [ -1, %46 ], [ 0, %48 ], [ %42, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %51
}

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt(i8* %0, i64* %1, i8* nocapture readnone %2, i8* nonnull %3, i64 %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %4, 15
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = add i64 %4, -16
  %13 = trunc i64 %4 to i32
  %14 = getelementptr i8, i8* %3, i32 %13
  %15 = getelementptr i8, i8* %14, i32 -16
  %16 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* undef, i8* %3, i64 %12, i8* %15, i8* %5, i64 %6, i8* %7, i8* %8)
  br label %17

17:                                               ; preds = %11, %9
  %18 = phi i32 [ %16, %11 ], [ -1, %9 ]
  %19 = icmp eq i64* %1, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = icmp eq i32 %18, 0
  %22 = add i64 %4, -16
  %23 = select i1 %21, i64 %22, i64 0
  store i64 %23, i64* %1, align 8
  br label %24

24:                                               ; preds = %17, %20
  ret i32 %18
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_keybytes() local_unnamed_addr #5 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_npubbytes() local_unnamed_addr #5 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_nsecbytes() local_unnamed_addr #5 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_abytes() local_unnamed_addr #5 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_messagebytes_max() local_unnamed_addr #5 {
  ret i32 -17
}

; Function Attrs: nounwind
define void @crypto_aead_xchacha20poly1305_ietf_keygen(i8* nonnull %0) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %0, i32 32) #6
  ret void
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext(i8* %0, i64 %1, i8* %2, i8* %3) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1, i64 %2) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* %0, i8* %1, i64 %2, i8* %3, i32 %4, i8* %5) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_verify_16(i8* %0, i8* %1) local_unnamed_addr #3

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { argmemonly nounwind willreturn writeonly }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_nsecbytes()

; entering Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_abytes()

; ModuleID = './aead_xchacha20poly1305.c.bc'
source_filename = "crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_onetimeauth_poly1305_state = type { [256 x i8] }

@_pad0 = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* nonnull %0, i8* nonnull %1, i64* %2, i8* %3, i64 %4, i8* %5, i64 %6, i8* nocapture readnone %7, i8* nonnull %8, i8* nonnull %9) local_unnamed_addr #0 {
  %11 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %12 = alloca [64 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %8, i8* nonnull %9, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %8, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %11, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %29 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* %5, i64 %6) #6
  %31 = sub i64 0, %6
  %32 = and i64 %31, 15
  %33 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %32) #6
  %34 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* %3, i64 %4, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %0, i64 %4) #6
  %36 = sub i64 0, %4
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %13, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  store i64 %4, i64* %13, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %1) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = icmp eq i64* %2, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %10
  store i64 16, i64* %2, align 8
  br label %44

44:                                               ; preds = %10, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #2

declare i32 @crypto_core_hchacha20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #3

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt(i8* nonnull %0, i64* %1, i8* %2, i64 %3, i8* %4, i64 %5, i8* nocapture readnone %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %3, 4294967279
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @sodium_misuse() #7
  unreachable

12:                                               ; preds = %9
  %13 = trunc i64 %3 to i32
  %14 = getelementptr i8, i8* %0, i32 %13
  %15 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* %0, i8* %14, i64* null, i8* %2, i64 %3, i8* %4, i64 %5, i8* undef, i8* %7, i8* %8)
  %16 = icmp eq i64* %1, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = add nuw nsw i64 %3, 16
  store i64 %18, i64* %1, align 8
  br label %19

19:                                               ; preds = %12, %17
  ret i32 0
}

; Function Attrs: noreturn
declare void @sodium_misuse() local_unnamed_addr #4

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* nocapture readnone %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %11 = alloca [64 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca [16 x i8], align 16
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %7, i8* nonnull %8, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %7, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %10, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %29 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %31 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* %5, i64 %6) #6
  %32 = sub i64 0, %6
  %33 = and i64 %32, 15
  %34 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %33) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %2, i64 %3) #6
  %36 = sub i64 0, %3
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %12, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  store i64 %3, i64* %12, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %28) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = call i32 @crypto_verify_16(i8* nonnull %28, i8* nonnull %4) #6
  call void @sodium_memzero(i8* nonnull %28, i32 16) #6
  %43 = icmp eq i8* %0, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %9
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = trunc i64 %3 to i32
  call void @llvm.memset.p0i8.i32(i8* nonnull align 1 %0, i8 0, i32 %47, i1 false) #6
  br label %50

48:                                               ; preds = %44
  %49 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* nonnull %2, i64 %3, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  br label %50

50:                                               ; preds = %9, %46, %48
  %51 = phi i32 [ -1, %46 ], [ 0, %48 ], [ %42, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %51
}

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt(i8* %0, i64* %1, i8* nocapture readnone %2, i8* nonnull %3, i64 %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %4, 15
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = add i64 %4, -16
  %13 = trunc i64 %4 to i32
  %14 = getelementptr i8, i8* %3, i32 %13
  %15 = getelementptr i8, i8* %14, i32 -16
  %16 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* undef, i8* %3, i64 %12, i8* %15, i8* %5, i64 %6, i8* %7, i8* %8)
  br label %17

17:                                               ; preds = %11, %9
  %18 = phi i32 [ %16, %11 ], [ -1, %9 ]
  %19 = icmp eq i64* %1, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = icmp eq i32 %18, 0
  %22 = add i64 %4, -16
  %23 = select i1 %21, i64 %22, i64 0
  store i64 %23, i64* %1, align 8
  br label %24

24:                                               ; preds = %17, %20
  ret i32 %18
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_keybytes() local_unnamed_addr #5 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_npubbytes() local_unnamed_addr #5 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_nsecbytes() local_unnamed_addr #5 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_abytes() local_unnamed_addr #5 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_messagebytes_max() local_unnamed_addr #5 {
  ret i32 -17
}

; Function Attrs: nounwind
define void @crypto_aead_xchacha20poly1305_ietf_keygen(i8* nonnull %0) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %0, i32 32) #6
  ret void
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext(i8* %0, i64 %1, i8* %2, i8* %3) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1, i64 %2) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* %0, i8* %1, i64 %2, i8* %3, i32 %4, i8* %5) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_verify_16(i8* %0, i8* %1) local_unnamed_addr #3

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { argmemonly nounwind willreturn writeonly }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_abytes()

; entering Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_messagebytes_max()

; ModuleID = './aead_xchacha20poly1305.c.bc'
source_filename = "crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_onetimeauth_poly1305_state = type { [256 x i8] }

@_pad0 = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* nonnull %0, i8* nonnull %1, i64* %2, i8* %3, i64 %4, i8* %5, i64 %6, i8* nocapture readnone %7, i8* nonnull %8, i8* nonnull %9) local_unnamed_addr #0 {
  %11 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %12 = alloca [64 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %8, i8* nonnull %9, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %8, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %11, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %29 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* %5, i64 %6) #6
  %31 = sub i64 0, %6
  %32 = and i64 %31, 15
  %33 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %32) #6
  %34 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* %3, i64 %4, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %0, i64 %4) #6
  %36 = sub i64 0, %4
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %13, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  store i64 %4, i64* %13, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %1) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = icmp eq i64* %2, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %10
  store i64 16, i64* %2, align 8
  br label %44

44:                                               ; preds = %10, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #2

declare i32 @crypto_core_hchacha20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #3

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt(i8* nonnull %0, i64* %1, i8* %2, i64 %3, i8* %4, i64 %5, i8* nocapture readnone %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %3, 4294967279
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @sodium_misuse() #7
  unreachable

12:                                               ; preds = %9
  %13 = trunc i64 %3 to i32
  %14 = getelementptr i8, i8* %0, i32 %13
  %15 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* %0, i8* %14, i64* null, i8* %2, i64 %3, i8* %4, i64 %5, i8* undef, i8* %7, i8* %8)
  %16 = icmp eq i64* %1, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = add nuw nsw i64 %3, 16
  store i64 %18, i64* %1, align 8
  br label %19

19:                                               ; preds = %12, %17
  ret i32 0
}

; Function Attrs: noreturn
declare void @sodium_misuse() local_unnamed_addr #4

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* nocapture readnone %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %11 = alloca [64 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca [16 x i8], align 16
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %7, i8* nonnull %8, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %7, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %10, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %29 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %31 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* %5, i64 %6) #6
  %32 = sub i64 0, %6
  %33 = and i64 %32, 15
  %34 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %33) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %2, i64 %3) #6
  %36 = sub i64 0, %3
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %12, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  store i64 %3, i64* %12, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %28) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = call i32 @crypto_verify_16(i8* nonnull %28, i8* nonnull %4) #6
  call void @sodium_memzero(i8* nonnull %28, i32 16) #6
  %43 = icmp eq i8* %0, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %9
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = trunc i64 %3 to i32
  call void @llvm.memset.p0i8.i32(i8* nonnull align 1 %0, i8 0, i32 %47, i1 false) #6
  br label %50

48:                                               ; preds = %44
  %49 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* nonnull %2, i64 %3, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  br label %50

50:                                               ; preds = %9, %46, %48
  %51 = phi i32 [ -1, %46 ], [ 0, %48 ], [ %42, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %51
}

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt(i8* %0, i64* %1, i8* nocapture readnone %2, i8* nonnull %3, i64 %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %4, 15
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = add i64 %4, -16
  %13 = trunc i64 %4 to i32
  %14 = getelementptr i8, i8* %3, i32 %13
  %15 = getelementptr i8, i8* %14, i32 -16
  %16 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* undef, i8* %3, i64 %12, i8* %15, i8* %5, i64 %6, i8* %7, i8* %8)
  br label %17

17:                                               ; preds = %11, %9
  %18 = phi i32 [ %16, %11 ], [ -1, %9 ]
  %19 = icmp eq i64* %1, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = icmp eq i32 %18, 0
  %22 = add i64 %4, -16
  %23 = select i1 %21, i64 %22, i64 0
  store i64 %23, i64* %1, align 8
  br label %24

24:                                               ; preds = %17, %20
  ret i32 %18
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_keybytes() local_unnamed_addr #5 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_npubbytes() local_unnamed_addr #5 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_nsecbytes() local_unnamed_addr #5 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_abytes() local_unnamed_addr #5 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_messagebytes_max() local_unnamed_addr #5 {
  ret i32 -17
}

; Function Attrs: nounwind
define void @crypto_aead_xchacha20poly1305_ietf_keygen(i8* nonnull %0) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %0, i32 32) #6
  ret void
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext(i8* %0, i64 %1, i8* %2, i8* %3) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1, i64 %2) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* %0, i8* %1, i64 %2, i8* %3, i32 %4, i8* %5) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_verify_16(i8* %0, i8* %1) local_unnamed_addr #3

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { argmemonly nounwind willreturn writeonly }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_messagebytes_max()

; entering Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_keygen()

; ModuleID = './aead_xchacha20poly1305.c.bc'
source_filename = "crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_onetimeauth_poly1305_state = type { [256 x i8] }

@_pad0 = internal constant [16 x i8] zeroinitializer, align 16

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* nonnull %0, i8* nonnull %1, i64* %2, i8* %3, i64 %4, i8* %5, i64 %6, i8* nocapture readnone %7, i8* nonnull %8, i8* nonnull %9) local_unnamed_addr #0 {
  %11 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %12 = alloca [64 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %8, i8* nonnull %9, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %8, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %11, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %29 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* %5, i64 %6) #6
  %31 = sub i64 0, %6
  %32 = and i64 %31, 15
  %33 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %32) #6
  %34 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* %3, i64 %4, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %0, i64 %4) #6
  %36 = sub i64 0, %4
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %13, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  store i64 %4, i64* %13, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %11, i8* nonnull %1) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = icmp eq i64* %2, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %10
  store i64 16, i64* %2, align 8
  br label %44

44:                                               ; preds = %10, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly %0, i8 %1, i32 %2, i1 immarg %3) #2

declare i32 @crypto_core_hchacha20(i8* %0, i8* %1, i8* %2, i8* %3) local_unnamed_addr #3

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_encrypt(i8* nonnull %0, i64* %1, i8* %2, i64 %3, i8* %4, i64 %5, i8* nocapture readnone %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %3, 4294967279
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @sodium_misuse() #7
  unreachable

12:                                               ; preds = %9
  %13 = trunc i64 %3 to i32
  %14 = getelementptr i8, i8* %0, i32 %13
  %15 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_encrypt_detached(i8* %0, i8* %14, i64* null, i8* %2, i64 %3, i8* %4, i64 %5, i8* undef, i8* %7, i8* %8)
  %16 = icmp eq i64* %1, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = add nuw nsw i64 %3, 16
  store i64 %18, i64* %1, align 8
  br label %19

19:                                               ; preds = %12, %17
  ret i32 0
}

; Function Attrs: noreturn
declare void @sodium_misuse() local_unnamed_addr #4

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* nocapture readnone %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = alloca %struct.crypto_onetimeauth_poly1305_state, align 16
  %11 = alloca [64 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca [16 x i8], align 16
  %14 = alloca [32 x i8], align 16
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #6
  %18 = bitcast [12 x i8]* %15 to i32*
  store i32 0, i32* %18, align 4
  %19 = call i32 @crypto_core_hchacha20(i8* nonnull %16, i8* nonnull %7, i8* nonnull %8, i8* null) #6
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i32 0, i32 4
  %21 = getelementptr i8, i8* %7, i32 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds %struct.crypto_onetimeauth_poly1305_state, %struct.crypto_onetimeauth_poly1305_state* %10, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %25) #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  %27 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %29 = call i32 @crypto_stream_chacha20_ietf_ext(i8* nonnull %26, i64 64, i8* nonnull %17, i8* nonnull %16) #6
  %30 = call i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %26) #6
  call void @sodium_memzero(i8* nonnull %26, i32 64) #6
  %31 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* %5, i64 %6) #6
  %32 = sub i64 0, %6
  %33 = and i64 %32, 15
  %34 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %33) #6
  %35 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %2, i64 %3) #6
  %36 = sub i64 0, %3
  %37 = and i64 %36, 15
  %38 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_pad0, i32 0, i32 0), i64 %37) #6
  store i64 %6, i64* %12, align 8
  %39 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  store i64 %3, i64* %12, align 8
  %40 = call i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %27, i64 8) #6
  %41 = call i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* nonnull %10, i8* nonnull %28) #6
  call void @sodium_memzero(i8* nonnull %25, i32 256) #6
  %42 = call i32 @crypto_verify_16(i8* nonnull %28, i8* nonnull %4) #6
  call void @sodium_memzero(i8* nonnull %28, i32 16) #6
  %43 = icmp eq i8* %0, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %9
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = trunc i64 %3 to i32
  call void @llvm.memset.p0i8.i32(i8* nonnull align 1 %0, i8 0, i32 %47, i1 false) #6
  br label %50

48:                                               ; preds = %44
  %49 = call i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* nonnull %0, i8* nonnull %2, i64 %3, i8* nonnull %17, i32 1, i8* nonnull %16) #6
  br label %50

50:                                               ; preds = %9, %46, %48
  %51 = phi i32 [ -1, %46 ], [ 0, %48 ], [ %42, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %25) #6
  call void @sodium_memzero(i8* nonnull %16, i32 32) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %51
}

; Function Attrs: nounwind
define i32 @crypto_aead_xchacha20poly1305_ietf_decrypt(i8* %0, i64* %1, i8* nocapture readnone %2, i8* nonnull %3, i64 %4, i8* %5, i64 %6, i8* nonnull %7, i8* nonnull %8) local_unnamed_addr #0 {
  %10 = icmp ugt i64 %4, 15
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = add i64 %4, -16
  %13 = trunc i64 %4 to i32
  %14 = getelementptr i8, i8* %3, i32 %13
  %15 = getelementptr i8, i8* %14, i32 -16
  %16 = tail call i32 @crypto_aead_xchacha20poly1305_ietf_decrypt_detached(i8* %0, i8* undef, i8* %3, i64 %12, i8* %15, i8* %5, i64 %6, i8* %7, i8* %8)
  br label %17

17:                                               ; preds = %11, %9
  %18 = phi i32 [ %16, %11 ], [ -1, %9 ]
  %19 = icmp eq i64* %1, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = icmp eq i32 %18, 0
  %22 = add i64 %4, -16
  %23 = select i1 %21, i64 %22, i64 0
  store i64 %23, i64* %1, align 8
  br label %24

24:                                               ; preds = %17, %20
  ret i32 %18
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_keybytes() local_unnamed_addr #5 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_npubbytes() local_unnamed_addr #5 {
  ret i32 24
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_nsecbytes() local_unnamed_addr #5 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_abytes() local_unnamed_addr #5 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_aead_xchacha20poly1305_ietf_messagebytes_max() local_unnamed_addr #5 {
  ret i32 -17
}

; Function Attrs: nounwind
define void @crypto_aead_xchacha20poly1305_ietf_keygen(i8* nonnull %0) local_unnamed_addr #0 {
  tail call void @randombytes_buf(i8* nonnull %0, i32 32) #6
  ret void
}

declare void @randombytes_buf(i8* %0, i32 %1) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext(i8* %0, i64 %1, i8* %2, i8* %3) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_init(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_update(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1, i64 %2) local_unnamed_addr #3

declare i32 @crypto_stream_chacha20_ietf_ext_xor_ic(i8* %0, i8* %1, i64 %2, i8* %3, i32 %4, i8* %5) local_unnamed_addr #3

declare i32 @crypto_onetimeauth_poly1305_final(%struct.crypto_onetimeauth_poly1305_state* %0, i8* %1) local_unnamed_addr #3

declare i32 @crypto_verify_16(i8* %0, i8* %1) local_unnamed_addr #3

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { argmemonly nounwind willreturn writeonly }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_aead_xchacha20poly1305_ietf_keygen()
Total of 0 replacements done on this module
Total of 0 replacements candidates on this module
