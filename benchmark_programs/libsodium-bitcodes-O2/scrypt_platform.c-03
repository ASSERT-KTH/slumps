; entering Souper's runOnFunction() for escrypt_init_local()

; ModuleID = './scrypt_platform.c.bc'
source_filename = "crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.escrypt_region_t = type { i8*, i8*, i32 }

@errno = external thread_local local_unnamed_addr global i32, align 4

; Function Attrs: nounwind
define hidden i8* @escrypt_alloc_region(%struct.escrypt_region_t* nocapture %0, i32 %1) local_unnamed_addr #0 {
  %3 = alloca i8*, align 4
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = call i32 @posix_memalign(i8** nonnull %3, i32 64, i32 %1) #5
  store i32 %5, i32* @errno, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = load i8*, i8** %3, align 4
  br label %10

9:                                                ; preds = %2
  store i8* null, i8** %3, align 4
  br label %10

10:                                               ; preds = %7, %9
  %11 = phi i8* [ %8, %7 ], [ null, %9 ]
  %12 = getelementptr inbounds %struct.escrypt_region_t, %struct.escrypt_region_t* %0, i32 0, i32 0
  store i8* %11, i8** %12, align 4
  %13 = getelementptr inbounds %struct.escrypt_region_t, %struct.escrypt_region_t* %0, i32 0, i32 1
  store i8* %11, i8** %13, align 4
  %14 = icmp eq i8* %11, null
  %15 = select i1 %14, i32 0, i32 %1
  %16 = getelementptr inbounds %struct.escrypt_region_t, %struct.escrypt_region_t* %0, i32 0, i32 2
  store i32 %15, i32* %16, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i8* %11
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nofree
declare i32 @posix_memalign(i8** %0, i32 %1, i32 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind
define hidden i32 @escrypt_free_region(%struct.escrypt_region_t* nocapture %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.escrypt_region_t, %struct.escrypt_region_t* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 4
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @free(i8* nonnull %3)
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %struct.escrypt_region_t, %struct.escrypt_region_t* %0, i32 0, i32 1
  store i8* null, i8** %7, align 4
  store i8* null, i8** %2, align 4
  %8 = getelementptr inbounds %struct.escrypt_region_t, %struct.escrypt_region_t* %0, i32 0, i32 2
  store i32 0, i32* %8, align 4
  ret i32 0
}

; Function Attrs: nounwind
declare void @free(i8* nocapture %0) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind writeonly
define hidden i32 @escrypt_init_local(%struct.escrypt_region_t* nocapture %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.escrypt_region_t, %struct.escrypt_region_t* %0, i32 0, i32 1
  store i8* null, i8** %2, align 4
  %3 = getelementptr inbounds %struct.escrypt_region_t, %struct.escrypt_region_t* %0, i32 0, i32 0
  store i8* null, i8** %3, align 4
  %4 = getelementptr inbounds %struct.escrypt_region_t, %struct.escrypt_region_t* %0, i32 0, i32 2
  store i32 0, i32* %4, align 4
  ret i32 0
}

; Function Attrs: nounwind
define hidden i32 @escrypt_free_local(%struct.escrypt_region_t* nocapture %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.escrypt_region_t, %struct.escrypt_region_t* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 4
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @free(i8* nonnull %3) #5
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %struct.escrypt_region_t, %struct.escrypt_region_t* %0, i32 0, i32 1
  store i8* null, i8** %7, align 4
  store i8* null, i8** %2, align 4
  %8 = getelementptr inbounds %struct.escrypt_region_t, %struct.escrypt_region_t* %0, i32 0, i32 2
  store i32 0, i32* %8, align 4
  ret i32 0
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for escrypt_init_local()

; entering Souper's runOnFunction() for escrypt_free_local()
