; entering Souper's runOnFunction() for crypto_pwhash_strbytes()

; ModuleID = './crypto_pwhash.c.bc'
source_filename = "crypto_pwhash/crypto_pwhash.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

@.str = private unnamed_addr constant [11 x i8] c"$argon2id$\00", align 1
@errno = external thread_local local_unnamed_addr global i32, align 4
@.str.1 = private unnamed_addr constant [10 x i8] c"$argon2i$\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"argon2i\00", align 1

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_alg_argon2i13() local_unnamed_addr #0 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_alg_argon2id13() local_unnamed_addr #0 {
  ret i32 2
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_alg_default() local_unnamed_addr #0 {
  ret i32 2
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_bytes_min() local_unnamed_addr #0 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_bytes_max() local_unnamed_addr #0 {
  ret i32 -1
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_passwd_min() local_unnamed_addr #0 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_passwd_max() local_unnamed_addr #0 {
  ret i32 -1
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_saltbytes() local_unnamed_addr #0 {
  ret i32 16
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_strbytes() local_unnamed_addr #0 {
  ret i32 128
}

; Function Attrs: norecurse nounwind readnone
define i8* @crypto_pwhash_strprefix() local_unnamed_addr #0 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0)
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_opslimit_min() local_unnamed_addr #0 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_opslimit_max() local_unnamed_addr #0 {
  ret i32 -1
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_memlimit_min() local_unnamed_addr #0 {
  ret i32 8192
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_memlimit_max() local_unnamed_addr #0 {
  ret i32 -2147483648
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_opslimit_interactive() local_unnamed_addr #0 {
  ret i32 2
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_memlimit_interactive() local_unnamed_addr #0 {
  ret i32 67108864
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_opslimit_moderate() local_unnamed_addr #0 {
  ret i32 3
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_memlimit_moderate() local_unnamed_addr #0 {
  ret i32 268435456
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_opslimit_sensitive() local_unnamed_addr #0 {
  ret i32 4
}

; Function Attrs: norecurse nounwind readnone
define i32 @crypto_pwhash_memlimit_sensitive() local_unnamed_addr #0 {
  ret i32 1073741824
}

; Function Attrs: nounwind
define i32 @crypto_pwhash(i8* nonnull %0, i64 %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i64 %5, i32 %6, i32 %7) local_unnamed_addr #1 {
  switch i32 %7, label %13 [
    i32 1, label %9
    i32 2, label %11
  ]

9:                                                ; preds = %8
  %10 = tail call i32 @crypto_pwhash_argon2i(i8* nonnull %0, i64 %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i64 %5, i32 %6, i32 1) #5
  br label %14

11:                                               ; preds = %8
  %12 = tail call i32 @crypto_pwhash_argon2id(i8* nonnull %0, i64 %1, i8* nonnull %2, i64 %3, i8* nonnull %4, i64 %5, i32 %6, i32 2) #5
  br label %14

13:                                               ; preds = %8
  store i32 28, i32* @errno, align 4
  br label %14

14:                                               ; preds = %13, %11, %9
  %15 = phi i32 [ -1, %13 ], [ %12, %11 ], [ %10, %9 ]
  ret i32 %15
}

declare i32 @crypto_pwhash_argon2i(i8* %0, i64 %1, i8* %2, i64 %3, i8* %4, i64 %5, i32 %6, i32 %7) local_unnamed_addr #2

declare i32 @crypto_pwhash_argon2id(i8* %0, i64 %1, i8* %2, i64 %3, i8* %4, i64 %5, i32 %6, i32 %7) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_pwhash_str(i8* nonnull %0, i8* nonnull %1, i64 %2, i64 %3, i32 %4) local_unnamed_addr #1 {
  %6 = tail call i32 @crypto_pwhash_argon2id_str(i8* nonnull %0, i8* nonnull %1, i64 %2, i64 %3, i32 %4) #5
  ret i32 %6
}

declare i32 @crypto_pwhash_argon2id_str(i8* %0, i8* %1, i64 %2, i64 %3, i32 %4) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_pwhash_str_alg(i8* nonnull %0, i8* nonnull %1, i64 %2, i64 %3, i32 %4, i32 %5) local_unnamed_addr #1 {
  switch i32 %5, label %11 [
    i32 1, label %7
    i32 2, label %9
  ]

7:                                                ; preds = %6
  %8 = tail call i32 @crypto_pwhash_argon2i_str(i8* nonnull %0, i8* nonnull %1, i64 %2, i64 %3, i32 %4) #5
  br label %12

9:                                                ; preds = %6
  %10 = tail call i32 @crypto_pwhash_argon2id_str(i8* nonnull %0, i8* nonnull %1, i64 %2, i64 %3, i32 %4) #5
  br label %12

11:                                               ; preds = %6
  tail call void @sodium_misuse() #6
  unreachable

12:                                               ; preds = %9, %7
  %13 = phi i32 [ %10, %9 ], [ %8, %7 ]
  ret i32 %13
}

declare i32 @crypto_pwhash_argon2i_str(i8* %0, i8* %1, i64 %2, i64 %3, i32 %4) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @sodium_misuse() local_unnamed_addr #3

; Function Attrs: nounwind
define i32 @crypto_pwhash_str_verify(i8* nonnull %0, i8* nonnull %1, i64 %2) local_unnamed_addr #1 {
  %4 = tail call i32 @strncmp(i8* nonnull %0, i8* nonnull dereferenceable(11) getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), i32 10)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = tail call i32 @crypto_pwhash_argon2id_str_verify(i8* nonnull %0, i8* nonnull %1, i64 %2) #5
  br label %14

8:                                                ; preds = %3
  %9 = tail call i32 @strncmp(i8* nonnull %0, i8* nonnull dereferenceable(10) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 9)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = tail call i32 @crypto_pwhash_argon2i_str_verify(i8* nonnull %0, i8* nonnull %1, i64 %2) #5
  br label %14

13:                                               ; preds = %8
  store i32 28, i32* @errno, align 4
  br label %14

14:                                               ; preds = %13, %11, %6
  %15 = phi i32 [ %7, %6 ], [ %12, %11 ], [ -1, %13 ]
  ret i32 %15
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture %0, i8* nocapture %1, i32 %2) local_unnamed_addr #4

declare i32 @crypto_pwhash_argon2id_str_verify(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

declare i32 @crypto_pwhash_argon2i_str_verify(i8* %0, i8* %1, i64 %2) local_unnamed_addr #2

; Function Attrs: nounwind
define i32 @crypto_pwhash_str_needs_rehash(i8* nonnull %0, i64 %1, i32 %2) local_unnamed_addr #1 {
  %4 = tail call i32 @strncmp(i8* nonnull %0, i8* nonnull dereferenceable(11) getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), i32 10)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = tail call i32 @crypto_pwhash_argon2id_str_needs_rehash(i8* nonnull %0, i64 %1, i32 %2) #5
  br label %14

8:                                                ; preds = %3
  %9 = tail call i32 @strncmp(i8* nonnull %0, i8* nonnull dereferenceable(10) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 9)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = tail call i32 @crypto_pwhash_argon2i_str_needs_rehash(i8* nonnull %0, i64 %1, i32 %2) #5
  br label %14

13:                                               ; preds = %8
  store i32 28, i32* @errno, align 4
  br label %14

14:                                               ; preds = %13, %11, %6
  %15 = phi i32 [ %7, %6 ], [ %12, %11 ], [ -1, %13 ]
  ret i32 %15
}

declare i32 @crypto_pwhash_argon2id_str_needs_rehash(i8* %0, i64 %1, i32 %2) local_unnamed_addr #2

declare i32 @crypto_pwhash_argon2i_str_needs_rehash(i8* %0, i64 %1, i32 %2) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone
define i8* @crypto_pwhash_primitive() local_unnamed_addr #0 {
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0)
}

attributes #0 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates
#########################################################
; exiting Souper's runOnFunction() for crypto_pwhash_strbytes()

