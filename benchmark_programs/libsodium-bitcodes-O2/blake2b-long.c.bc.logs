
Entering the Souper pass's runOnModule()


; entering Souper's runOnFunction() for blake2b_long()

; ModuleID = './blake2b-long.c.bc'
source_filename = "crypto_pwhash/argon2/blake2b-long.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-wasi"

%struct.crypto_generichash_blake2b_state = type { [384 x i8] }

; Function Attrs: nounwind
define hidden i32 @blake2b_long(i8* %0, i32 %1, i8* %2, i32 %3) local_unnamed_addr #0 {
  %5 = alloca %struct.crypto_generichash_blake2b_state, align 64
  %6 = alloca i32, align 4
  %7 = alloca [64 x i8], align 16
  %8 = alloca [64 x i8], align 16
  %9 = getelementptr inbounds %struct.crypto_generichash_blake2b_state, %struct.crypto_generichash_blake2b_state* %5, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %9) #3
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #3
  store i32 %1, i32* %6, align 4
  %11 = icmp ult i32 %1, 65
  br i1 %11, label %12, label %24

12:                                               ; preds = %4
  %13 = call i32 @crypto_generichash_blake2b_init(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* null, i32 0, i32 %1) #3
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %65, label %15

15:                                               ; preds = %12
  %16 = call i32 @crypto_generichash_blake2b_update(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* nonnull %10, i64 4) #3
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %65, label %18

18:                                               ; preds = %15
  %19 = zext i32 %3 to i64
  %20 = call i32 @crypto_generichash_blake2b_update(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* %2, i64 %19) #3
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %65, label %22

22:                                               ; preds = %18
  %23 = call i32 @crypto_generichash_blake2b_final(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* %0, i32 %1) #3
  br label %65

24:                                               ; preds = %4
  %25 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %25) #3
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #3
  %27 = call i32 @crypto_generichash_blake2b_init(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* null, i32 0, i32 64) #3
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %63, label %29

29:                                               ; preds = %24
  %30 = call i32 @crypto_generichash_blake2b_update(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* nonnull %10, i64 4) #3
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %63, label %32

32:                                               ; preds = %29
  %33 = zext i32 %3 to i64
  %34 = call i32 @crypto_generichash_blake2b_update(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* %2, i64 %33) #3
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %63, label %36

36:                                               ; preds = %32
  %37 = call i32 @crypto_generichash_blake2b_final(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* nonnull %25, i32 64) #3
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %63, label %39

39:                                               ; preds = %36
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %0, i8* nonnull align 16 dereferenceable(32) %25, i32 32, i1 false)
  %40 = add i32 %1, -32
  %41 = getelementptr i8, i8* %0, i32 32
  %42 = icmp ugt i32 %40, 64
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 16 dereferenceable(64) %26, i8* nonnull align 16 dereferenceable(64) %25, i32 64, i1 false)
  br i1 %42, label %43, label %57

43:                                               ; preds = %39
  %44 = add i32 %1, -64
  %45 = add i32 %1, -97
  %46 = and i32 %45, -32
  %47 = sub i32 %44, %46
  br label %48

48:                                               ; preds = %43, %53
  %49 = phi i8* [ %55, %53 ], [ %41, %43 ]
  %50 = phi i32 [ %54, %53 ], [ %40, %43 ]
  %51 = call i32 @crypto_generichash_blake2b(i8* nonnull %25, i32 64, i8* nonnull %26, i64 64, i8* null, i32 0) #3
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %63, label %53

53:                                               ; preds = %48
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 dereferenceable(32) %49, i8* nonnull align 16 dereferenceable(32) %25, i32 32, i1 false)
  %54 = add i32 %50, -32
  %55 = getelementptr i8, i8* %49, i32 32
  %56 = icmp ugt i32 %54, 64
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 16 dereferenceable(64) %26, i8* nonnull align 16 dereferenceable(64) %25, i32 64, i1 false)
  br i1 %56, label %48, label %57

57:                                               ; preds = %53, %39
  %58 = phi i32 [ %40, %39 ], [ %47, %53 ]
  %59 = phi i8* [ %41, %39 ], [ %55, %53 ]
  %60 = call i32 @crypto_generichash_blake2b(i8* nonnull %25, i32 %58, i8* nonnull %26, i64 64, i8* null, i32 0) #3
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %57
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %59, i8* nonnull align 16 %25, i32 %58, i1 false)
  br label %63

63:                                               ; preds = %48, %57, %36, %32, %29, %24, %62
  %64 = phi i32 [ %60, %62 ], [ %27, %24 ], [ %30, %29 ], [ %34, %32 ], [ %37, %36 ], [ %60, %57 ], [ %51, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %25) #3
  br label %65

65:                                               ; preds = %63, %22, %18, %15, %12
  %66 = phi i32 [ %13, %12 ], [ %16, %15 ], [ %20, %18 ], [ %23, %22 ], [ %64, %63 ]
  call void @sodium_memzero(i8* nonnull %9, i32 384) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #3
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %9) #3
  ret i32 %66
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare i32 @crypto_generichash_blake2b_init(%struct.crypto_generichash_blake2b_state* %0, i8* %1, i32 %2, i32 %3) local_unnamed_addr #2

declare i32 @crypto_generichash_blake2b_update(%struct.crypto_generichash_blake2b_state* %0, i8* %1, i64 %2) local_unnamed_addr #2

declare i32 @crypto_generichash_blake2b_final(%struct.crypto_generichash_blake2b_state* %0, i8* %1, i32 %2) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i32 %2, i1 immarg %3) #1

declare i32 @crypto_generichash_blake2b(i8* %0, i32 %1, i8* %2, i64 %3, i8* %4, i32 %5) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

declare void @sodium_memzero(i8* %0, i32 %1) local_unnamed_addr #2

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 10.0.0 (https://github.com/llvm/llvm-project d32170dbd5b0d54436537b6b75beaf44324e0c28)"}

; extracted candidates

; *****
; For LLVM instruction:
;  %11 = icmp ult i32 %1, 65
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ult %0, 65:i32
infer %1

; *****
; For LLVM instruction:
;  %13 = call i32 @crypto_generichash_blake2b_init(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* null, i32 0, i32 %1) #3
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %14 = icmp slt i32 %13, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = slt %0, 0:i32
infer %1

; *****
; For LLVM instruction:
;  %16 = call i32 @crypto_generichash_blake2b_update(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* nonnull %10, i64 4) #3
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %17 = icmp slt i32 %16, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = slt %0, 0:i32
infer %1

; *****
; For LLVM instruction:
;  %19 = zext i32 %3 to i64
; Looking for a replacement for:
%0:i32 = var
%1:i64 = zext %0
infer %1

; *****
; For LLVM instruction:
;  %20 = call i32 @crypto_generichash_blake2b_update(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* %2, i64 %19) #3
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %21 = icmp slt i32 %20, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = slt %0, 0:i32
infer %1

; *****
; For LLVM instruction:
;  %23 = call i32 @crypto_generichash_blake2b_final(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* %0, i32 %1) #3
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %27 = call i32 @crypto_generichash_blake2b_init(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* null, i32 0, i32 64) #3
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %28 = icmp slt i32 %27, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = slt %0, 0:i32
infer %1

; *****
; For LLVM instruction:
;  %30 = call i32 @crypto_generichash_blake2b_update(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* nonnull %10, i64 4) #3
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %31 = icmp slt i32 %30, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = slt %0, 0:i32
infer %1

; *****
; For LLVM instruction:
;  %33 = zext i32 %3 to i64
; Looking for a replacement for:
%0:i32 = var
%1:i64 = zext %0
infer %1

; *****
; For LLVM instruction:
;  %34 = call i32 @crypto_generichash_blake2b_update(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* %2, i64 %33) #3
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %35 = icmp slt i32 %34, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = slt %0, 0:i32
infer %1

; *****
; For LLVM instruction:
;  %37 = call i32 @crypto_generichash_blake2b_final(%struct.crypto_generichash_blake2b_state* nonnull %5, i8* nonnull %25, i32 64) #3
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %38 = icmp slt i32 %37, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = slt %0, 0:i32
infer %1

; *****
; For LLVM instruction:
;  %40 = add i32 %1, -32
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ult %0, 65:i32
pc %1 0:i1
%2:i32 = add 4294967264:i32, %0
infer %2

; *****
; For LLVM instruction:
;  %42 = icmp ugt i32 %40, 64
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ult %0, 65:i32
pc %1 0:i1
%2:i32 = add 4294967264:i32, %0 (hasExternalUses)
%3:i1 = ult 64:i32, %2
infer %3

; *****
; For LLVM instruction:
;  %44 = add i32 %1, -64
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ult %0, 65:i32
pc %1 0:i1
%2:i32 = add 4294967264:i32, %0 (hasExternalUses)
%3:i1 = ult 64:i32, %2
pc %3 1:i1
%4:i32 = add 4294967232:i32, %0
infer %4

; *****
; For LLVM instruction:
;  %45 = add i32 %1, -97
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ult %0, 65:i32
pc %1 0:i1
%2:i32 = add 4294967264:i32, %0 (hasExternalUses)
%3:i1 = ult 64:i32, %2
pc %3 1:i1
%4:i32 = add 4294967199:i32, %0
infer %4 (demandedBits=11111111111111111111111111100000)

; *****
; For LLVM instruction:
;  %46 = and i32 %45, -32
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ult %0, 65:i32
pc %1 0:i1
%2:i32 = add 4294967264:i32, %0 (hasExternalUses)
%3:i1 = ult 64:i32, %2
pc %3 1:i1
%4:i32 = add 4294967199:i32, %0
%5:i32 = and 4294967264:i32, %4
infer %5

; *****
; For LLVM instruction:
;  %47 = sub i32 %44, %46
; Looking for a replacement for:
%0:i32 = var
%1:i1 = ult %0, 65:i32
pc %1 0:i1
%2:i32 = add 4294967264:i32, %0 (hasExternalUses)
%3:i1 = ult 64:i32, %2
pc %3 1:i1
%4:i32 = add 4294967232:i32, %0
%5:i32 = add 4294967199:i32, %0
%6:i32 = and 4294967264:i32, %5
%7:i32 = sub %4, %6
infer %7

; *****
; For LLVM instruction:
;  %50 = phi i32 [ %54, %53 ], [ %40, %43 ]
; Looking for a replacement for:
%0:i32 = var (range=[65,0))
infer %0

; *****
; For LLVM instruction:
;  %51 = call i32 @crypto_generichash_blake2b(i8* nonnull %25, i32 64, i8* nonnull %26, i64 64, i8* null, i32 0) #3
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %52 = icmp slt i32 %51, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = slt %0, 0:i32
infer %1

; *****
; For LLVM instruction:
;  %54 = add i32 %50, -32
; Looking for a replacement for:
%0:i32 = var (range=[65,0))
%1:i32 = add 4294967264:i32, %0
infer %1

; *****
; For LLVM instruction:
;  %56 = icmp ugt i32 %54, 64
; Looking for a replacement for:
%0:i32 = var (range=[65,0))
%1:i32 = add 4294967264:i32, %0 (hasExternalUses)
%2:i1 = ult 64:i32, %1
infer %2

; *****
; For LLVM instruction:
;  %58 = phi i32 [ %40, %39 ], [ %47, %53 ]
; Looking for a replacement for:
%0 = block 2
%1:i32 = var
%2:i32 = add 4294967264:i32, %1 (hasExternalUses)
%3:i32 = add 4294967232:i32, %1
%4:i32 = add 4294967199:i32, %1
%5:i32 = and 4294967264:i32, %4
%6:i32 = sub %3, %5
%7:i32 = phi %0, %2, %6
infer %7

; *****
; For LLVM instruction:
;  %60 = call i32 @crypto_generichash_blake2b(i8* nonnull %25, i32 %58, i8* nonnull %26, i64 64, i8* null, i32 0) #3
; Looking for a replacement for:
%0:i32 = var
infer %0

; *****
; For LLVM instruction:
;  %61 = icmp slt i32 %60, 0
; Looking for a replacement for:
%0:i32 = var
%1:i1 = slt %0, 0:i32
infer %1

; *****
; For LLVM instruction:
;  %64 = phi i32 [ %60, %62 ], [ %27, %24 ], [ %30, %29 ], [ %34, %32 ], [ %37, %36 ], [ %60, %57 ], [ %51, %48 ]
; Looking for a replacement for:
%0 = block 7
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4:i32 = var
%5:i32 = var
%6:i32 = var
%7:i32 = phi %0, %1, %2, %3, %4, %5, %1, %6
infer %7

; *****
; For LLVM instruction:
;  %66 = phi i32 [ %13, %12 ], [ %16, %15 ], [ %20, %18 ], [ %23, %22 ], [ %64, %63 ]
; Looking for a replacement for:
%0 = block 5
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4:i32 = var
%5 = block 7
%6:i32 = var
%7:i32 = var
%8:i32 = var
%9:i32 = var
%10:i32 = var
%11:i32 = var
%12:i32 = phi %5, %6, %7, %8, %9, %10, %6, %11
%13:i32 = phi %0, %1, %2, %3, %4, %12
infer %13
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = ult %0, 65:i32
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: -1
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 0
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = slt %0, 0:i32
infer %1


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i64 = zext %0
infer %1


--------------------------------
guess 0

%0:i64 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 4294967295
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = ult %0, 65:i32
pc %1 0:i1
%2:i32 = add 4294967264:i32, %0
infer %2


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 33
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 48
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = ult %0, 65:i32
pc %1 0:i1
%2:i32 = add 4294967264:i32, %0 (hasExternalUses)
%3:i1 = ult 64:i32, %2
infer %3


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = ult %0, 65:i32
pc %1 0:i1
%2:i32 = add 4294967264:i32, %0 (hasExternalUses)
%3:i1 = ult 64:i32, %2
pc %3 1:i1
%4:i32 = add 4294967232:i32, %0
infer %4


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 33
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 49
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = ult %0, 65:i32
pc %1 0:i1
%2:i32 = add 4294967264:i32, %0 (hasExternalUses)
%3:i1 = ult 64:i32, %2
pc %3 1:i1
%4:i32 = add 4294967199:i32, %0
infer %4 (demandedBits=11111111111111111111111111100000)


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 2147483616
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 8388577
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = ult %0, 65:i32
pc %1 0:i1
%2:i32 = add 4294967264:i32, %0 (hasExternalUses)
%3:i1 = ult 64:i32, %2
pc %3 1:i1
%4:i32 = add 4294967199:i32, %0
%5:i32 = and 4294967264:i32, %4
infer %5


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 16777216
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var
%1:i32 = add 4294967199:i32, %0

Cost = 1
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 3 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 5 candidates from LHS

-------------------------------------------------
%0:i32 = var
%1:i1 = ult %0, 65:i32
pc %1 0:i1
%2:i32 = add 4294967264:i32, %0 (hasExternalUses)
%3:i1 = ult 64:i32, %2
pc %3 1:i1
%4:i32 = add 4294967232:i32, %0
%5:i32 = add 4294967199:i32, %0
%6:i32 = and 4294967264:i32, %5
%7:i32 = sub %4, %6
infer %7


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 40
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 34
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var
%1:i32 = add 4294967232:i32, %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var
%1:i32 = add 4294967199:i32, %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i32 = var
%1:i32 = add 4294967199:i32, %0
%2:i32 = and 4294967264:i32, %1

Cost = 2
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 5 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 1 candidates from LHS

-------------------------------------------------
%0:i32 = var (range=[65,0))
infer %0


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 65
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 80
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 2 candidates from LHS

-------------------------------------------------
%0:i32 = var (range=[65,0))
%1:i32 = add 4294967264:i32, %0
infer %1


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 33
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: 48
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var (range=[65,0))

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 2 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 3 candidates from LHS

-------------------------------------------------
%0:i32 = var (range=[65,0))
%1:i32 = add 4294967264:i32, %0 (hasExternalUses)
%2:i1 = ult 64:i32, %1
infer %2


--------------------------------
guess 0

%0:i1 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses
Dataflow Pruned 0/0
There are 1 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 7 candidates from LHS

-------------------------------------------------
%0 = block 2
%1:i32 = var
%2:i32 = add 4294967264:i32, %1 (hasExternalUses)
%3:i32 = add 4294967232:i32, %1
%4:i32 = add 4294967199:i32, %1
%5:i32 = and 4294967264:i32, %4
%6:i32 = sub %3, %5
%7:i32 = phi %0, %2, %6
infer %7


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 64
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -32
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var
%1:i32 = add 4294967264:i32, %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var
%1:i32 = add 4294967232:i32, %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i32 = var
%1:i32 = add 4294967199:i32, %0

Cost = 1
second query is SAT-- constant doesn't work

--------------------------------
guess 5

%0:i32 = var
%1:i32 = add 4294967199:i32, %0
%2:i32 = and 4294967264:i32, %1

Cost = 2
second query is SAT-- constant doesn't work

--------------------------------
guess 6

%0:i32 = var
%1:i32 = add 4294967232:i32, %0
%2:i32 = add 4294967199:i32, %0
%3:i32 = and 4294967264:i32, %2
%4:i32 = sub %1, %3

Cost = 4
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 7 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 7 candidates from LHS

-------------------------------------------------
%0 = block 7
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4:i32 = var
%5:i32 = var
%6:i32 = var
%7:i32 = phi %0, %1, %2, %3, %4, %5, %1, %6
infer %7


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 5

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 6

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 7 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
got 8 candidates from LHS

-------------------------------------------------
%0 = block 5
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4:i32 = var
%5 = block 7
%6:i32 = var
%7:i32 = var
%8:i32 = var
%9:i32 = var
%10:i32 = var
%11:i32 = var
%12:i32 = phi %5, %6, %7, %8, %9, %10, %6, %11
%13:i32 = phi %0, %1, %2, %3, %4, %12
infer %13


--------------------------------
guess 0

%0:i32 = var ; reservedconst_1

Cost = 0
first query is SAT, returning the model:
reservedconst_1: 0
0 th attempt: second query is SAT-- constant doesn't work
first query is SAT, returning the model:
reservedconst_1: -1
1 th attempt: second query is SAT-- constant doesn't work
first query is UNSAT-- no more guesses

--------------------------------
guess 1

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 2

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 3

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 4

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 5

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 6

%0:i32 = var

Cost = 0
second query is SAT-- constant doesn't work

--------------------------------
guess 7

%0 = block 7
%1:i32 = var
%2:i32 = var
%3:i32 = var
%4:i32 = var
%5:i32 = var
%6:i32 = var
%7:i32 = phi %0, %1, %2, %3, %4, %5, %1, %6

Cost = 1
second query is SAT-- constant doesn't work
Dataflow Pruned 0/0
There are 8 Guesses
There are 0 RHSs before deduplication
There are 0 RHSs after deduplication
#########################################################
; exiting Souper's runOnFunction() for blake2b_long()
Total of 0 replacements done on this module
Total of 0 replacements candidates on this module
