name: Build, test and deploy WAFL
on:
  push:
    branches:
      - master
    paths:
      - "wasm-fuzzer/**"
      - ".github/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # checkout latest version of the repo
        

      - name: Install dependencies
        run: |
          sudo apt-get update
          echo "Installing AFL dependencies"
          sudo apt-get install -y supervisor build-essential automake libtool-bin python3-dev git automake flex bison libglib2.0-dev libpixman-1-dev clang python3-setuptools llvm sudo procps 
         
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          #architecture: x64 # (x64 or x86) - defaults to x64

      - name: Checking java
        run: |
         java -version

      - name: Build without Docker
        run: |
          
          echo "Building project"
          cd wasm-fuzzer
          bash fuzzing-client-afl/build_afl.sh
          bash fuzzing-client-afl/build_interface.sh

      
  build-docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # checkout latest version of the repo
        
      - name: Install dependencies
        run: |
          sudo apt-get update
          echo "Installing AFL dependencies"
          sudo apt-get install -y supervisor build-essential automake libtool-bin python3-dev git automake flex bison libglib2.0-dev libpixman-1-dev clang python3-setuptools llvm sudo procps docker
         
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          #architecture: x64 # (x64 or x86) - defaults to x64

      - name: Build wafl image
        run: cd wasm-fuzzer && docker build -t wafl .

      - name: Point to sample-testing-targets in envs
        run: cd wasm-fuzzer && sed --in-place "s|LOCAL_WASM_DIR=.*|LOCAL_WASM_DIR=${PWD}/sample-testing-targets|g" ${PWD}/.env

      - name: Push images
        run: |
          docker tag wafl slumps/wafl:latest
          docker login -u="$user" -p="$pass"
          docker push slumps/wafl:latest
        env:
          user: ${{secrets.DOCKER_USER}}
          pass: ${{secrets.DOCKER_PASS}}
