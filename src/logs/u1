
; ModuleID = 'Catalan_numbers.c'
source_filename = "Catalan_numbers.c"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32-unknown-unknown"

@.str = private unnamed_addr constant [21 x i8] c"\09direct\09summing\09frac\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"%d\09%llu\09%llu\09%llu\0A\00", align 1

; Function Attrs: norecurse nounwind readnone
define hidden i64 @binomial(i64 %m, i64 %n) local_unnamed_addr #0 {
entry:
  %sub = sub i64 %m, %n
  %cmp = icmp ugt i64 %sub, %n
  %spec.select = select i1 %cmp, i64 %sub, i64 %n
  %cmp230 = icmp ult i64 %spec.select, %m
  br i1 %cmp230, label %while.body.preheader, label %while.end7

while.body.preheader:                             ; preds = %entry
  %spec.select23 = select i1 %cmp, i64 %n, i64 %sub
  br label %while.body

while.body:                                       ; preds = %while.body.preheader, %while.end
  %d.133 = phi i64 [ %d.2.lcssa, %while.end ], [ %spec.select23, %while.body.preheader ]
  %r.032 = phi i64 [ %r.1.lcssa, %while.end ], [ 1, %while.body.preheader ]
  %m.addr.031 = phi i64 [ %dec, %while.end ], [ %m, %while.body.preheader ]
  %dec = add i64 %m.addr.031, -1
  %mul = mul i64 %r.032, %m.addr.031
  %cmp424 = icmp ugt i64 %d.133, 1
  br i1 %cmp424, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %while.body, %while.body5
  %d.226 = phi i64 [ %dec6, %while.body5 ], [ %d.133, %while.body ]
  %r.125 = phi i64 [ %div, %while.body5 ], [ %mul, %while.body ]
  %div = udiv i64 %r.125, %d.226
  %0 = mul i64 %div, %d.226
  %rem.decomposed = sub i64 %r.125, %0
  %tobool = icmp eq i64 %rem.decomposed, 0
  br i1 %tobool, label %while.body5, label %while.end

while.body5:                                      ; preds = %land.rhs
  %dec6 = add i64 %d.226, -1
  %cmp4 = icmp ugt i64 %dec6, 1
  br i1 %cmp4, label %land.rhs, label %while.end

while.end:                                        ; preds = %land.rhs, %while.body5, %while.body
  %r.1.lcssa = phi i64 [ %mul, %while.body ], [ %div, %while.body5 ], [ %r.125, %land.rhs ]
  %d.2.lcssa = phi i64 [ %d.133, %while.body ], [ %dec6, %while.body5 ], [ %d.226, %land.rhs ]
  %cmp2 = icmp ugt i64 %dec, %spec.select
  br i1 %cmp2, label %while.body, label %while.end7

while.end7:                                       ; preds = %while.end, %entry
  %r.0.lcssa = phi i64 [ 1, %entry ], [ %r.1.lcssa, %while.end ]
  ret i64 %r.0.lcssa
}

; Function Attrs: norecurse nounwind readnone
define hidden i64 @catalan1(i32 %n) local_unnamed_addr #0 {
entry:
  %mul = shl nsw i32 %n, 1
  %conv = sext i32 %mul to i64
  %conv1 = sext i32 %n to i64
  %sub.i = sub nsw i64 %conv, %conv1
  %cmp.i = icmp ugt i64 %sub.i, %conv1
  %spec.select.i = select i1 %cmp.i, i64 %sub.i, i64 %conv1
  %cmp230.i = icmp ult i64 %spec.select.i, %conv
  br i1 %cmp230.i, label %while.body.preheader.i, label %binomial.exit

while.body.preheader.i:                           ; preds = %entry
  %spec.select23.i = select i1 %cmp.i, i64 %conv1, i64 %sub.i
  br label %while.body.i

while.body.i:                                     ; preds = %while.end.i, %while.body.preheader.i
  %d.133.i = phi i64 [ %d.2.lcssa.i, %while.end.i ], [ %spec.select23.i, %while.body.preheader.i ]
  %r.032.i = phi i64 [ %r.1.lcssa.i, %while.end.i ], [ 1, %while.body.preheader.i ]
  %m.addr.031.i = phi i64 [ %dec.i, %while.end.i ], [ %conv, %while.body.preheader.i ]
  %dec.i = add i64 %m.addr.031.i, -1
  %mul.i = mul i64 %m.addr.031.i, %r.032.i
  %cmp424.i = icmp ugt i64 %d.133.i, 1
  br i1 %cmp424.i, label %land.rhs.i, label %while.end.i

land.rhs.i:                                       ; preds = %while.body.i, %while.body5.i
  %d.226.i = phi i64 [ %dec6.i, %while.body5.i ], [ %d.133.i, %while.body.i ]
  %r.125.i = phi i64 [ %div.i, %while.body5.i ], [ %mul.i, %while.body.i ]
  %div.i = udiv i64 %r.125.i, %d.226.i
  %0 = mul i64 %div.i, %d.226.i
  %rem.i.decomposed = sub i64 %r.125.i, %0
  %tobool.i = icmp eq i64 %rem.i.decomposed, 0
  br i1 %tobool.i, label %while.body5.i, label %while.end.i

while.body5.i:                                    ; preds = %land.rhs.i
  %dec6.i = add i64 %d.226.i, -1
  %cmp4.i = icmp ugt i64 %dec6.i, 1
  br i1 %cmp4.i, label %land.rhs.i, label %while.end.i

while.end.i:                                      ; preds = %while.body5.i, %land.rhs.i, %while.body.i
  %r.1.lcssa.i = phi i64 [ %mul.i, %while.body.i ], [ %r.125.i, %land.rhs.i ], [ %div.i, %while.body5.i ]
  %d.2.lcssa.i = phi i64 [ %d.133.i, %while.body.i ], [ %d.226.i, %land.rhs.i ], [ 1, %while.body5.i ]
  %cmp2.i = icmp ugt i64 %dec.i, %spec.select.i
  br i1 %cmp2.i, label %while.body.i, label %binomial.exit

binomial.exit:                                    ; preds = %while.end.i, %entry
  %r.0.lcssa.i = phi i64 [ 1, %entry ], [ %r.1.lcssa.i, %while.end.i ]
  %add = add nsw i32 %n, 1
  %conv2 = sext i32 %add to i64
  %div = udiv i64 %r.0.lcssa.i, %conv2
  ret i64 %div
}

; Function Attrs: nounwind readnone
define hidden i64 @catalan2(i32 %n) local_unnamed_addr #1 {
entry:
  %tobool = icmp eq i32 %n, 0
  %conv = zext i1 %tobool to i64
  %cmp12 = icmp sgt i32 %n, 0
  br i1 %cmp12, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %r.014 = phi i64 [ %add, %for.body ], [ %conv, %entry ]
  %i.013 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %call = tail call i64 @catalan2(i32 %i.013)
  %0 = xor i32 %i.013, -1
  %sub2 = add i32 %0, %n
  %call3 = tail call i64 @catalan2(i32 %sub2)
  %mul = mul i64 %call3, %call
  %add = add i64 %mul, %r.014
  %inc = add nuw nsw i32 %i.013, 1
  %exitcond = icmp eq i32 %inc, %n
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %r.0.lcssa = phi i64 [ %conv, %entry ], [ %add, %for.body ]
  ret i64 %r.0.lcssa
}

; Function Attrs: nounwind readnone
define hidden i64 @catalan3(i32 %n) local_unnamed_addr #1 {
entry:
  %tobool = icmp eq i32 %n, 0
  br i1 %tobool, label %cond.end, label %cond.true

cond.true:                                        ; preds = %entry
  %mul = shl i32 %n, 2
  %mul1 = add i32 %mul, -2
  %conv = sext i32 %mul1 to i64
  %sub2 = add nsw i32 %n, -1
  %call = tail call i64 @catalan3(i32 %sub2)
  %mul3 = mul i64 %call, %conv
  %add = add nsw i32 %n, 1
  %conv4 = sext i32 %add to i64
  %div = udiv i64 %mul3, %conv4
  ret i64 %div

cond.end:                                         ; preds = %entry
  ret i64 1
}

; Function Attrs: nofree nounwind
define hidden i32 @main() local_unnamed_addr #2 {
entry:
  %call = tail call i32 @puts(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0))
  br label %for.body

for.body:                                         ; preds = %catalan1.exit, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %catalan1.exit ]
  %0 = shl nuw nsw i64 %indvars.iv, 1
  %cmp230.i.i = icmp ult i64 %indvars.iv, %0
  br i1 %cmp230.i.i, label %while.body.i.i, label %catalan1.exit

while.body.i.i:                                   ; preds = %for.body, %while.end.i.i
  %d.133.i.i = phi i64 [ %d.2.lcssa.i.i, %while.end.i.i ], [ %indvars.iv, %for.body ]
  %r.032.i.i = phi i64 [ %r.1.lcssa.i.i, %while.end.i.i ], [ 1, %for.body ]
  %m.addr.031.i.i = phi i64 [ %dec.i.i, %while.end.i.i ], [ %0, %for.body ]
  %dec.i.i = add i64 %m.addr.031.i.i, -1
  %mul.i.i = mul i64 %m.addr.031.i.i, %r.032.i.i
  %cmp424.i.i = icmp ugt i64 %d.133.i.i, 1
  br i1 %cmp424.i.i, label %land.rhs.i.i, label %while.end.i.i

land.rhs.i.i:                                     ; preds = %while.body.i.i, %while.body5.i.i
  %d.226.i.i = phi i64 [ %dec6.i.i, %while.body5.i.i ], [ %d.133.i.i, %while.body.i.i ]
  %r.125.i.i = phi i64 [ %div.i.i, %while.body5.i.i ], [ %mul.i.i, %while.body.i.i ]
  %div.i.i = udiv i64 %r.125.i.i, %d.226.i.i
  %1 = mul i64 %div.i.i, %d.226.i.i
  %rem.i.i.decomposed = sub i64 %r.125.i.i, %1
  %tobool.i.i = icmp eq i64 %rem.i.i.decomposed, 0
  br i1 %tobool.i.i, label %while.body5.i.i, label %while.end.i.i

while.body5.i.i:                                  ; preds = %land.rhs.i.i
  %dec6.i.i = add i64 %d.226.i.i, -1
  %cmp4.i.i = icmp ugt i64 %dec6.i.i, 1
  br i1 %cmp4.i.i, label %land.rhs.i.i, label %while.end.i.i

while.end.i.i:                                    ; preds = %while.body5.i.i, %land.rhs.i.i, %while.body.i.i
  %r.1.lcssa.i.i = phi i64 [ %mul.i.i, %while.body.i.i ], [ %div.i.i, %while.body5.i.i ], [ %r.125.i.i, %land.rhs.i.i ]
  %d.2.lcssa.i.i = phi i64 [ %d.133.i.i, %while.body.i.i ], [ 1, %while.body5.i.i ], [ %d.226.i.i, %land.rhs.i.i ]
  %cmp2.i.i = icmp ugt i64 %dec.i.i, %indvars.iv
  br i1 %cmp2.i.i, label %while.body.i.i, label %catalan1.exit

catalan1.exit:                                    ; preds = %while.end.i.i, %for.body
  %r.0.lcssa.i.i = phi i64 [ 1, %for.body ], [ %r.1.lcssa.i.i, %while.end.i.i ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %div.i = udiv i64 %r.0.lcssa.i.i, %indvars.iv.next
  %2 = trunc i64 %indvars.iv to i32
  %call2 = tail call i64 @catalan2(i32 %2)
  %call3 = tail call i64 @catalan3(i32 %2)
  %call4 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), i32 %2, i64 %div.i, i64 %call2, i64 %call3)
  %exitcond = icmp eq i64 %indvars.iv.next, 16
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %catalan1.exit
  ret i32 0
}

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.0 (tags/RELEASE_900/final 375507)"}